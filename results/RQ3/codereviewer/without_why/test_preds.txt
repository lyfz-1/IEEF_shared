updated SocketAppender initialization to use setRemoteHost and setPort methods to enhance flexibility by allowing remote host and port configuration
refactor BasicAuthPlugin to use a streamlined method for setting headers based on request type to improve code readability and maintainability by redu
replaced ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with ` msgLengthOffset ( recordIndex ) ` in ` ManyToOne
cloudstack - 4892 : use cluster cpu and ram overcommit ratio when vm detail cpu or ram be null .
added a constructor to ShadowPaint that accepts flags and checks for anti - aliasing to enhance the flexibility of the ShadowPaint class by allowing
updated the title setting in MassSetFieldsDialog to use Localization for localization to improve internationalization support for field names and content
replace assertFalse with a conditional check for empty collection in DetectorsTest . java to improve error handling for cases where Eclipse was not used
fix : digest auth do n ' t work with empty nonce
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to utilize it to improve input handling by notifying
refactor the assignment of ` stripeIxTo ` in ` OrcEncodedDataReader . java ` to improve code readability and maintain
updated filter condition to check if the thing is enabled before filtering the handler to ensure that only enabled objects are processed in the filtering logic
added null check for ` bs ` before calling ` removeAllPolicies ( ) ` and ` addPolicies ( ) ` in ` AuthorizeAdminServlet .
simplified assertions in DefaultTypeAdaptersTest and ObjectTest for Java 9 and above to improve code readability and maintainability by reducing
added JSON serialization and debug logging for the DAG information in TezTask . java to improve debugging capabilities and provide insights into the current
updated time retrieval logic in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time
replaced ` RxJava2Tasks ` with ` getMWApi ( ) ` for retrieving upload count in ` ContributionsActivity . java ` and
removed redundant check for forceLockEvenInMvcc in MVTable . java to simplify the conditional logic for better readability and performance
[ issue # 5371 ] fix commitlog offset overflow ( # 5372 )
added a check to set the folder ' s opened status to false if the associated folder is not open to ensure that folder information is not marked
added a test method for sorting PGProperty names in PGPropertyTest . java to ensure PGProperty names are correctly sorted in ascending order
added a constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide users with
updated method signatures in UninstallDropTarget to use ItemInfo instead of Object to improve type safety and clarity in handling item information
updated error message assertion in RequestBuilderTest to use isIn instead of hasMessage to improve clarity of error messages for better debugging
replaced instances of " RetainedFragment " and " NearbyMapFragment " with " NearbyListFragment " and updated related
renamed the parameter from ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency
added a new boolean field ` send _ zero _ anomaly _ email ` and corresponding getter and setter methods in ` EmailConfiguration ` , and
[ hotfix ] [ kafka ] fix flinkkafkaconsumerbase # open with restore state
removed unused methods ` getUser ` and ` getGeofence ` from ` DataManager . java ` to streamline the codebase by eliminating
added a constructor to BlockingResponseListener that accepts a maximum length to enhance flexibility in response handling by allowing larger requests
refactor member broadcasts received method to accept a byte array instead of an array to improve performance by avoiding unnecessary byte array allocation
[ hotfix ] [ runtime ] fix closing of reader in multileaderserverimpl
updated URL path in test assertions from " https : / / " to " https : / / " in LoginSAMLAuthenticationFailureHandlerTest .
[ hotfix ] [ test ] fix checkstyle violation in configmetadataprovidertest
updated import statements and method name from ' note ' to ' noteToUpdate ' in ListFragment . java and SnoozeActivity . java
refactor directory stream filtering to use a static final class ` AcceptAllFilter ` to improve code readability and maintainability by eliminating
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate easier debugging
fix finduniqueConcretemethod to throw noclassdeffounderror on class not find
refactor DockerImageName validation to use a new utility class for validating Docker image names to improve code maintainability and ensure proper validation of Docker image
updated user messages in LoginActivity from login _ failed _ username and login _ failed _ password to login _ failed _ wrong _ credentials to improve
added autofocusing functionality to multiple form classes to improve user experience by preventing unintended focus during form interactions
added unit tests for SAML configuration and zone provisioning in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML properties for
added checks for non - numeric and non - empty lists in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure
replaced topLeftMode with bottomRightMode and updated return values in Sheet . java and UIManager . java to improve layout handling and ensure
updated the package structure and import statements for ParallelUniverse and ParallelUniverseTest to improve organization and clarity of the codebase
replaced direct calls to ` constructor . type ( ) . changeReturnType ( BoundedLocalCache . class ) ` with a single method call
updated the font pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve
added functionality to display edges and self loops in the ProcessingPreview class to enhance user interface by providing visual feedback for graph edges and self loops
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLIDITY _
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to clarify the method ' s purpose
added a call to set the drag handle indicator ' s translation Y value to zero in AllAppsTransitionController to ensure the drag handle indicator is
removed redundant logging statements in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline log output for better readability and performance
updated the description for filter pushing down in the operator tree to clarify the conditions under which filters are ignored during query optimization to improve
added a platform - specific assumption to the ScanningAppProviderRuntimeUpdatesTest . java file to address build server issues on non - OSX
added dependencies for " jetty - alpn - java - client " and " jetty - alpn - client " in TestJetty
fix activiti optimisticlockexception in executionentitymanager # updateprocessinstancelocktime ( )
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced CustomFieldBehavior with ExcludeFromRuleKey in GenruleBuildable . java to exclude Genrule execution from artifact caching to improve cl
simonstewart : make firefoxcustomprofilelauncher work on window
pdfbox - 4892 : avoid duplicate entry in colfamtodynamiccolumnsmapping , a suggest by valerybokov
[ hotfix ] [ runtime ] remove unnecessary suppression of rawtypes
added a check to ensure the client version is below minimum _ splittable _ system _ catalog and the table type is not mapped to ensure compatibility
added logic to update student ' s googleid if a student exists to ensure that the student ' s googleid is updated when a student
updated import statement for TestCellReference in AllXSSFTests . java to ensure correct usage of TestCellReference in the code
fix mobility not be able to pick up a block that have hardness
added a new file LongPointerPressTest3049 . java that implements a UI component for handling network errors to facilitate testing
fix inlining inlining for direct call with exception .
refactor code to use ternary operator for null checks to improve readability and reduce boilerplate code
disallow list indent more than 3 space ( spec 0.29 )
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code reusability and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests due to issue # 1070
[ wasm ] remove jsinterop dependency from testcaselogger
updated formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the format is a video before processing web sub content to ensure web sub content is only processed for video formats
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by disabling unnecessary algorithms
server : ignore local storage pool in uservmmanagertest ( # 4896 )
refactor cache entry logging in Driver . java and QueryResultsCache . java to improve logging clarity and maintainability by reducing repetitive
add option to skip model update after manage dependency
added a test for handling the last intent sender request in ShadowActivityTest and implemented a send method in ShadowPendingIntent to ensure correct behavior of
replaced GLJPanel initialization with GL - enabling and disabling the FBO feature in RocketFigure3d . java to
added synchronization to the controllerListeners list in HydrawiseAccountHandler to ensure thread safety when modifying controller listeners
added a static method ` beforeClass ` to the ` TestCoreAdminApis ` class to skip tests that do not work with Java 9
updated year retrieval from ` localDate ` to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs `
fix possible npe when disconnect from jabber server .
updated the variable name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " in TxnHandler .
replaced ByteChunk with ByteBuffer and updated buffer handling in BufferedInputFilter . java to improve performance and compatibility with modern Java features
added a method ` toSync ( CompletableFuture < T > future ) ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtils
added ` ActionGraphBuilder ` to multiple compiler factories and updated related methods to utilize it to enhance the build process by integrating ActionGraph
add a test to verify that the upload functionality works correctly with hidden file input
removed duplicate code for creating tables in SQLManager . java to streamline the table creation process by eliminating redundancy
added a check to ensure the file exists before returning the local Maven directory to avoid potential errors when the file does not exist
do n ' t show the algebra label if it be a hidden label
test ( ctelementimpl ) : fix npe in ctelementimpl . getmetadata ( ) ( # 3649 )
replace setFlags with addFlag in DefaultTrackOutput . java to improve clarity and consistency in flag management
added a check to prevent reordering when the cached entity is sorted by ID to ensure that reordering only occurs when the cached entity is not
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expiration message to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests ` Array . newInstance ( void . class , int ) ` to
added ` @ AddToRuleKey ` annotation to ` toolType ` in ` ClangCompiler ` and ` GccCompiler ` classes to
replaced hardcoded ` 10000 ` with a constant ` PINCODE _ TIMEOUT ` in ` PinCheck . java ` to improve maintainability
[ exemplar ] fix prometheusexemplarssample sample to return true
added @ Ignore annotations to multiple test classes to temporarily disable tests that require a MongoDB server to ensure tests are executed and are not skipped due to
http : / / issues . apache . org / activemq / browse / amq - 2370 - fix checkstyle violation
updated the condition to check for artificial tables in MetaDataSource . java to ensure that only artificial tables are processed in the metadata
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
updated session attribute handling logic in MongoSessionManager . java to ensure proper clearing of session when no nested attributes are present
replaced fixed size with size from layout in CameraSurfaceView . java to improve layout responsiveness for better user experience
refactor stopping handling in AbstractConnector to use CountDownLatch for clarity to improve code readability and maintainability by reducing redundancy
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : use system . currenttimemillis ( ) instead of stopwatch . taken ( ) in defaultmessag
replaced ` doOnError ` with ` subscribe ` for exception handling in ` DelayedMonoPublisherTest . java ` to streamline error
replace assertTrue with a failure assertion in WebsocketTest . java to improve error handling by providing clearer failure messages
refactor AllAppsTransitionController to implement OnLayoutChangeListener instead of using an anonymous inner class to improve code readability and maintainability by redu
refactor variable name from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve code readability and
int - 1342 add default - output - channel attribute to xpathrouterparser ( int - 1343 )
updated cacheSeconds from an integer to a string and added support for duration handling in MessageBundleProperties and CasCoreWebConfiguration to enhance flexibility
updated version string from " openapi : 3.0 . 0 - rc1 " to " openapi : 3.0 . 0 '
removed the append method from ByteBufferPool to streamline buffer handling to improve performance by eliminating unnecessary buffer operations
added a check to skip tests if " alt - rt . jar " is detected in the sun . boot . class . path to avoid unnecessary
updated username comparisons in JdbcScimUserProvisioningTests to use upper case for user names to ensure consistency and correctness in user identification across different
updated FlightRecorderProfiler to use ArrayList and List for setting options to improve flexibility in managing JVM options based on Java version
added a method to check if the stream is empty in WebCamInputPanel and updated imageDropHappened method in Webcam
added a condition to check if the content view has content before processing the buffer to ensure that the buffer is not empty and does not contain
camel - 20297 camel - atmos : fix javadoc warning in camel - atmos
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance flexibility in handling different output methods
added a new file TestCapacityUntilGCWrapAround . java to test capacities on 32 - bit platforms to ensure that increasing metaspace
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
do n ' t increment the end time if the res be not stamped at the start time
add unit test for http : / / issues . apache . org / activemq / browse / camel - 2852 - add error
tmi - jpeg : do n ' t throw ioexception if icc _ profile be miss .
fix terra rod not be able to reequip the rod . close # 1351
updated JoobyModule and SpringModule to ignore specific entry types before registering beans to ensure that only relevant configuration and environment providers are registered
refactor webapploader to use container . getparentclassloader ( ) instead of current thread . getclassloader ( )
added support for additional nameupdater . properties file in jmeter - core
added initialization for ` started ` and ` started ` variables in ` EllipsoidRegionSelector . java ` to ensure proper tracking of the region
updated URLs from " http " to " https " in JavaSEPort . java to enhance security by using a secure connection to the Cod
[ geos - 8470 ] fix getfeature to throw an exception for invalid sortby attribute
updated the null check for grantor assignment from ` grantTuple [ 0 ] . equals ( null ) ` to ` grantTuple [ 0 ]
added imports for GraphicsConfiguration , GraphicsEnvironment , and Transparency , and updated expected image handling in DiagramGenerationTest . java to ensure proper
added a null check for sidedDelegate in FMLCommonHandler . java to ensure proper error handling when attempting to install Minecraft .
refactor DataUtilities and ReTypeFeatureReader classes for improved code organization to enhance maintainability and readability of the codebase
fix locktest . lockislocked ( ) to use asserttrueeventually ( )
added methods to tokenize and join tokens in StringUtil . java to improve tokenization functionality for better text processing
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 585 :
refactor command handling and highlighting logic in SystemHighlighter . java to improve clarity and correctness of command highlighting logic
updated version and version date constants from " 1.0 . 0 " and " 2012 - 07 - 14 " to " 1.0 .
updated buffer position to use dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added functionality to check if the shell drag and drop is ready to handle drag operations to enhance user experience by allowing drag operations to proceed if the
log4j2 - 1349 add assumption that socketappender . getsocket ( ) return the correct traffic class
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to enhance security
update description text from place ' s description to the long description to ensure accurate representation of the place ' s long description
added JsonProperty annotation to ScimGroupMember class to enable proper serialization and deserialization of the value property
updated HqlQueryRenderer to handle multiple reserved words and added new tests for function names and schema scoping in HqlQueryRendererTests to
corrected the variable name from ' d ' to ' s ' in the requireNonNull method call to ensure consistency and clarity in error reporting
refactor Parser class to improve code readability to enhance maintainability and reduce complexity
updated the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted its logic accordingly to improve stream index adjustment
tika - 697 - add support for x - cpio mime type in mime parser
[ hotfix ] [ table - planner - blink ] remove dead code in flinksqloperatortable
added equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to enable proper comparison and hashing functionality for instances of OneTimeToken
added a condition to check if the assistant is not already launched before executing the fling condition to ensure that the fling condition only executes when
added a new file ` SolarisShortDSA . java ` that tests DSA signing and verification using a private key to address a
added a call to toggleSearchLabel ( false ) in ListFragment . java to disable the search label functionality for improved user experience
cloudstack - 4892 : fix npe when create a snapshot on secondary storage ( # 4893 )
replaced ` ServiceConnection ` with ` DetailsServiceConnection ` and added null check for ` mConnection ` to improve resource management and prevent potential
refactor exception handling in HttpClientTLSTest to use AtomicReference for better thread safety to improve clarity and maintainability of exception management in
removed the equals method from the ConjunctionScorer class to simplify the comparison logic by eliminating unnecessary method
added a null check for the variable ' v ' in the bindItems method to handle potential null pointer exceptions during item binding
add random commit to metadataraftgroupmanager ( # 11928 )
updated cache size comparison logic and added logging for cache shrinking to improve cache management and provide warnings when the cache size exceeds 90%
updated API path from " / api / v2 " to " / api / v3 " across multiple classes to align with the latest API
added a new method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the object is
added Optional handling for page data in AsyncPageReader and added a new test for empty dictionary pages in TestDrillParquetReader to improve
updated argument handling in SerumStreamingService and added validation for market data type in buildChannelName method to ensure correct argument types and improve error
add config to disable the animation when an item be charging on top of a mana pool .
[ java ] use egress . isConnected instead of ischallenged in cluster node restart test .
added exception handling for InterruptedException in WaitForHelper . java to improve error logging for better debugging
refactor DefaultServletTest to use assumptions for directory creation to improve test reliability and clarity regarding filesystem behavior
updated the injection of dialog and open screen styles in ResourcesInjectorFull . java to ensure correct styling is applied for the dialog and open screen
updated file handling methods in BaseLiquibaseTask and DBDocTask to use FileResource instead of String for changeLogFile and outputFile
use getx ( ) instead of gety ( ) in blockworldvector .
removed TODO comment and added final modifier to CacheEntry class to improve code clarity and enforce immutability of key and value fields
added regex quoting for resource configuration in ReflectionProcessor . java to ensure proper handling of special characters in the resource configuration
updated cache retrieval logic in FileCredentialsCache . java and modified argument handling in EmptyCC . java to ensure correct cache configuration and improve error handling
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
[ p2p ] increase fast sync minimum peer wait time for eth / ibft ( # 1181 )
simonstewart : fix checkstyle issue in webdriverservlet
added a condition to return false for " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format expressions
added a condition to clear pending rendering operations when the implementation is minimized to optimize rendering performance by avoiding unnecessary operations when the implementation is
fix hazelcasttestsupport . testiterativeuntiluntil ( ) to not sleep if the current time be below the deadline
fix continuously update key in write - behind write - behind queue
set the icon of the JLabel to null in GroupTreeCellRenderer . java to save some space for better visual clarity
updated test methods in TestBlacklistAwareRedirectResolver to use strict mode instead of strict mode to ensure tests accurately reflect the intended behavior of redirect
added functionality to close the server socket in ShutdownMonitor and updated test methods in ShutdownMonitorTest to improve resource management and ensure proper disposal of
updated memory management logic in RandomAccessStore . java to improve memory management and ensure correct chunk rewriting based on auto - compacting
refactor field handling in ` Json ` to use ` Class ` instead of ` object . getClass ( ) ` for clarity to improve code
[ hotfix ] [ runtime ] move componentclosingutil to coordination package
server : do n ' t try to destroy volume for vm that be in error state
cs - 15829 : fix npe in getipv6rangefromcidr ( ) when the ip range be empty .
renamed variable ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and related classes to
increased the leader retry duration from 15 seconds to 30 seconds in CollectionsAPIDistributedZkTest . java to allow more time
refactor error handling in multiple parameter classes by removing unnecessary parameters to improve logging and simplify error messages for better readability
updated drawing parameters in URLImage . java from x and y to - x and - y to correct the positioning of the graphics elements
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
pdfbox - 4892 : simplify code , a suggest by valerybokov
[ hotfix ] [ stream ] add exception cause to streamtaskexception
refactor tag expansion logic in Preprocess . java to improve performance and readability to enhance performance and maintainability of the tag processing logic
reformatted the code for better readability in MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for defining
fix ( jsonparser ) : do n ' t encode empty extension list
updated string splitting in Artifact . java and modified artifact extraction logic in LibraryManager . java to ensure proper handling of external meta entries without internal names
added an alias for " node _ popup _ scripting " in the entryNavigator to enhance the functionality of the entryNavigator by providing an alias
removed HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN from OverviewActionsView and added alpha
camel - 14284 : camel - jms should use getout ( ) instead of getout ( ) to avoid classcastexception
updated method signatures in multiple Java files to remove unnecessary throws declaration to improve code readability and maintainability
deleted deprecated classes related to AbstractDelegatedVerb and FailureContext to remove obsolete code to streamline the codebase
changed content variable to be final and added support for handling non - Micro requests in the GzipHandlerTest to ensure immutability of content and
fix onsubscriberedo to use backpressureutils . getAndAddrequest ( )
added logging functionality and improved code formatting in SpeedmentImpl . java to enhance debugging capabilities and streamline code readability
added a new class LoadDSpaceOAIConfig to load configuration from the ' dspace - config ' parameter to facilitate the
updated StoreScanner and TestWideScanner to improve row matching logic and adjusted test cases for improved performance to enhance the accuracy of key matching and
( chore ) camel - test - infra - jmx : turn off jmx on by default
replaced hardcoded ' / ' with a constant for the package separator in SourceLineAnnotation and added a conditional check in SourceCodeDisplay to
added functionality to retrieve the YARN binary path and application information in HiveConf and RemoteSparkJobMonitor to enhance Spark job monitoring and provide
added support for maria database in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
[ iotdb - 4892 ] fix log split time calculation in splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a test class for executing and returning string strings to facilitate testing
added a new file ` InvokespecialInterface . java ` implementing a functional interface and a lambda expression to demonstrate the use of
refactor EvictingBoundedList class for improved efficiency to enhance memory management and reduce memory usage
make turncosts support optional in graphhopper
added a condition to check if style . backgroundDisabled is not null and a validation for the selection value to ensure proper handling of disabled state and prevent illegal selection values
added a null check for the method name in RpcServer . java to throw an exception for unsupported operations to ensure proper error handling for unsupported operations
updated hotseatCellSize calculation to include border spacing to improve layout consistency for hotseat icons in the launcher
updated string concatenation logic in ExpressionTree . java to use values . get for partitionColumnIndex to improve code clarity and maintainability by using a
make namedtaskdecorator and taskdefinition compatible with version 4.0
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of ` equal ` from false to true in ` DisplayModeTest . java ` to ensure that ` isDisplayModeEqual
updated UnicodeToLatexFormatter to handle non - BMP code points and added support for " $ \ epsilon $ " in HTML conversion maps
added handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper formatting of ISO control characters in input values
simonstewart : fix npe in seleniumbackedselenium when the window handle be empty .
updated StringSearchPanel , BookmarksPanel , and DataBrowser to include a clear button functionality to enhance user experience by allowing users to clear all
refactor base URL construction in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for better URL handling to improve code clarity and maintainability
replaced ` Date ` with ` ParseDatetime ` for date comparisons in ` SoftAssertionsTest . java ` to improve date validation accuracy and
updated the adaptOrders method to include an additional boolean parameter for reverse order adaptation to enable the adaptation of orders in reverse order order order
fix a bug where delombok do n ' t print ` ` var ' '
simonstewart : fix checkstyle issue
updated the Configuration initialization to use a boolean parameter and removed unnecessary debug logging to simplify configuration handling and improve performance by avoiding unnecessary logging
replaced the call to ` drawChildren ` with a call to ` draw ` in the ` WidgetGroup ` class to ensure that the rendering of child widgets is properly handled according to the updated drawing logic
added unit test base on user forum issue
replaced the use of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` context . getC
added tests for ICU ' s getBestDateTimePattern method in ShadowICUTest . java and modified skeleton logic in ShadowICU . java to
updated the initialization of the ` object ` map in ` PlotSquared . java ` to use ` 16 ` color codes instead of ` 4 `
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and updated related constructors to utilize it to enhance configuration flexibility by
tika - 2696 -- add test to verify that tika - 2692 work with tika - 2693
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) `
updated the calculation of ` xDist ` to use ` Math . abs ` to ensure ` xDist ` is always non - negative for accurate
deleted the GUIRWTester . java file to remove unused code that is no longer needed in the project
removed the ` @ NullableDecl ` annotation from the ` countPlaceholders ` method in ` LazyMessage ` and related classes to simplify method signatures and
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
move thymeleaf . templateparser . markup into thymeleaf . templateparser . markup package
added a new test method ` testXPathString ` to ` XPathTest . java ` and updated test cases in ` XPathTest . java `
added @ Nullable annotation to FutureUtils . java to indicate that the method may return null to improve code clarity and indicate potential null values
add warn when invokedynamic be not resolve during call - graph construction
updated createdEmail and newEmail from " gmail . com " to " example . com " in ContextTest . java to reflect the correct
updated the response format from " badMessage : bad encoding expected . " to " bad / encoding % x " in HttpConnectionTest . java
added ` getColumnDataType ( int columnIndex ) ` method to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to
added default implementation of serviceClientConfiguration method in AsyncClientInterface , SyncClientInterface , AwsClient , and V2TestDynamoDbBase
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long ` with ` Instant ` for time handling in ` Statistics . java ` to improve time accuracy by using ` Instant ` for
added version parsing functionality to LibMediaInfoParser to ensure compatibility with newer MediaInfoLib versions
removed unused imports and refactored the ` reflectIdeaDependency ` method in ` ProjectReader . java ` to improve code clarity
added a new file ` SerialHeap . java ` and updated ` SerialHeap . java ` and ` SerialHeapName . java ` to implement
added @ SuppressWarnings ( " serial " ) annotations to several methods in Gson $ Types . java to suppress warnings related to serialization in the code
use mouse . getposition ( ) instead of mouse . getposition ( ) for mouse wheel event
updated the MongoQueryCreator to handle null parameters gracefully by providing a default empty string to improve error handling and prevent potential NullPointerExceptions during query execution
[ hotfix ] [ table - common ] [ table - common ] add multisettypeinfo to maptypeinfo to support multis
added a method to retrieve identity providers by their issuer in XOAuthProviderConfigurator to ensure only active identity providers with the specified issuer are retrieved
pdfbox - 4892 : improve parsing of cmaps with poor whitespace
refactor service handling in ContactsBackupJob to use a dedicated connection and binder for file expiration to improve code organization and facilitate
added a new class ` T6938454a ` and modified the ` checkWithinBounds ` method in ` Infer . java ` to
add account . isconfighidden ( ) method to accountlist and add it to accountid class .
added a check to ensure the number of supported bounds in DisplayController is consistent to avoid inconsistencies in display state handling
replace SchemaUtil . getSchemaKey ( schema . getSchemaName ( ) ) with schema . getSchemaKey ( ) in PMetaDataImpl . java and
do n ' t fire passive login event if the loginpassive action be set
added a new file Box2DTest . java and modified GDXTester . java and JoglApplication . java to include it to
patch by jbellis ; review by brandonwilliams for cassandra - 1348
[ hotfix ] [ test ] increase default buffer request timeout to 5 minute
chore ( deps ) : upgrade gapic - generator to 0.0 . 5 and update gax - generator to 0.0 . 5
added a help button to the OpenOfficePanel to provide users with a way to access help documentation for the OpenOffice integration
[ java ] use child option for tcp _ nodelay in netty acceptor and publishdecodingserver
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use wildcard generics to improve type
refactor class reference handling in ScanResultObject . java to improve clarity and maintainability of class loading logic
refactor connection handling in DecodeServlet . java to improve error handling and streamline resource management to enhance code clarity and maintainability while ensuring
added null handling logic to Querydsl and created a new IntegrationTests class for testing to enhance query functionality and ensure proper handling of null values
added null check for actor before iterating over actions in ParallelAction and SequenceAction classes to ensure actions are only processed when an actor is present
refactor : fix checkstyle issue in cttypetest
added synchronization around closing bucket writers in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and a test class ` JJ ` , ` JK ` , and `
added functionality to revoke an existing agent certificate in CertificateManager to enhance security by ensuring that existing certificates are properly revoked
added a check for HTTP status codes in AbstractHttpTest and implemented a test for writing a body after no body response to ensure proper handling of
added error handling for invalid script tags and language in ScriptTransformer . java to ensure compatibility with Java 6 and provide clearer error messages for script
updated connection pooling type from " BONECP " to " DBCP " and added HikariConfig and HikariDataSource to
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file lock and unlock functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing users to manage file locking
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear the endpoint cache when delete a keyspace . patch by jbellis
refactor wait logic in Locks and ThreadExecutionSynchronizer to use a dedicated waitForState method to improve code readability and maintainability by
updated SkylarkDescription , SkylarkRuleContext , and SkylarkDescriptionArg classes to use context dependencies instead of
simonstewart : make local and session storage interface extend storage interface
fix npe when create or replace a view in create view statement
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by catching all
updated query string handling in SpellCheckComponent . java to ensure default value is used when q is null
added validation for header values with illegal characters to ensure that headers contain only valid carriage return and newline characters to prevent runtime errors
[ gr - 26345 ] fix array base offset in hybrid layout .
add @ experimental annotation to astcommentcontainer and remove setcontainscomment ( ) method from apexcommentcontainernode
hhh - 14850 - add warn log when use lazy fetch mode
refactor NoGetOperationsFilter and NoUserOperationsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify the class hierarchy
added assertions to retrieve database and table names in TestCompactionTxnHandler . java to ensure correct retrieval of database and table names from the database
camel - 16400 : camel - timer - graceful - shutdown should not throw exception during graceful shutdown .
added a conditional check before adding a start trace in TraceBuilder . java to ensure traces are only added when the block is not processed
updated the ` contains ` method to check for null elements in the ` providers ` list to improve robustness by ensuring that null elements are handled
simplified the return statement in InsertOrUpdateGeneratorPostgres . java by directly returning the instance of PostgresDatabase to improve code readability
added tests for local index limits in LocalIndexIT . java and modified filtering logic in ExplainTable . java to enhance query validation and improve
added validation to prevent adding collections with the same name and type in the past to ensure that collections with the same name cannot be added to the
updated cursor position calculations in VDUBuffer . java and vt320 . java to improve accuracy of cursor positioning and ensure proper window management
removed the constant ` USE _ RETRIES ` from ` HttpShardHandlerFactory . java ` to streamline the code by eliminating
updated the VERSION _ NUMBER string in JavaVersion . java and added a new test for Java version 11.0 . 7 . 0.4
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
added a test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of the message source parser functionality
added null check for properties in RemoteCluster . java to avoid potential NullPointerException when accessing properties
updated IOException creation to include the original cause of the IOException to improve error handling by preserving the original cause of the IOException
ambari - 20611 . fix typo in javadoc of ambari - management - controller ( rlevas )
added a txConfidenceListener to manage transaction confidence updates to ensure consistent updates to the transaction ' s confidence when changes occur
[ netbeans - 4382 ] add support for g1 perm gen ( # 4382 )
removed unused imports and simplified return statement in NearbyController . java to improve code readability and maintainability
pdfbox - 4892 : make pdfcloneutility public , a suggest by valerybokov
added a check for non - home activities in BaseSwipeUpHandlerV2 . java to ensure that only non - home activities are processed
renamed the class ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants to improve clarity and consistency
updated method names from ` shouldGiveNetworkCountryIso ` and ` shouldGetSimIosWhenSetUsingSlotNumber ` to ` should
removed the setUnfreezeAmount method from UnfreezeBalanceV2Actuator to streamline the unfreeze balance handling process
fix typo in javadoc of conferenceschedulingxlsxfileio . java
replaced Google Commons Files with Apache Commons FileUtils for file copying to improve code maintainability and leverage Apache Commons file utilities
refactor AbstractListAssert , AbstractUriAssert , and Lists classes to improve code organization and maintainability
refactor Observable . java to improve code readability to enhance maintainability and facilitate future updates
refactor ` pushAll ` operation to use ` addMultiFieldOperation ` instead of ` BasicDBObject ` to improve code clarity and
added a null check for randomUUID before setting it in hubChangeLog to avoid potential NullPointerException when randomUUID is not initialized
added hover event handling in InputConsumer and updated hover event processing in OverviewInputConsumer and InputConsumerProxy to improve user interaction responsiveness
added a condition to check if ` confDir ` is null and ` boostrapConf ` is false in ` CoreContainer . java `
camel - 14284 : camel - netty - http should use max - header - size instead of max - header - size
hbase - 26400 increase client retry count for hbase test ( addendum )
replaced direct file path resolution with ` new File ( baseDirectory . getAbsolutePath ( ) ) ` in ` SourceSnippetHelper . java ` to
truffle - core : do n ' t fail if graph be not cache .
updated query command in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added currency adaptation logic for KrakenAssets in KrakenAdapters . java to ensure correct currency metadata is stored for Kraken
added a toString ( ) method to the AnyOf class and created a new AnyOf _ toString _ Test class to provide a meaningful string representation
updated email handling to use dimensions instead of entry key in AlertTaskRunnerV2 . java to improve clarity and functionality when grouping email recipients
[ beam - 8470 ] influxdbpublisher : do n ' t publish metric if measurement or database be blank
renamed doTransform method to downcast in multiple converter classes to improve clarity and consistency in method naming
updated loopback and local address checks in NetUtils . java to use a unified method for uniqueness checks to improve code readability and maintainability by
added a method to quote column names in DataTextFormatter to ensure proper formatting of quoted column names in the output
added methods to manage system properties and methods in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance functionality for setting and getting system
added a constructor to the UpdateRequest class that initializes the URL with a POST method to facilitate the creation of a new UpdateRequest
updated EnumSerialization from static to an enum in multiple Java files to allow for more flexible serialization options in the application
added a warning message for experimental response formats in DataImportHandler and ReplicationHandler to inform users that the response format is likely to change in the
updated debug logging to format module names and added a method to format strings to improve readability of module names and handle single - element values more
fixed row height of attributeregistrytable , attributeregistrytablet , manageaddonspanel , filerevisionsdialog , and manageaddonspanel
[ issue # 5446 ] fix the issue of broker not be notify when the last heartbeat be receive ( # 5447 )
( hadoop ) fix cif describesplits ( ) not handle 0 size estimate
simplified the conditional check in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
[ zeppelin - 4640 ] fix ruleagendaitem not be equal to ruleagendaitem
added import for StageIDsRearranger and conditionally resolve StageIDsRearranger in TezCompiler . java to enable dynamic stage ID
fix mbean name for messagingservice to match the name of the mbean .
updated memory consumption checks in LotsOfOutput . java to ensure accurate memory consumption and improve debugging output
added import statements for ` org . apache . lucene . document . Document ` across multiple facet - related classes to enhance documentation clarity and
updated ` LdapAutoConfiguration ` , ` LdapProperties ` , and ` LdapAutoConfigurationTests ` to use ` anonymousReadOnly ` and ` context
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the visibility of the EchoInputDoFn class from public to private to restrict access to the class for better encapsulation
added a ` finishMocking ` method to ` MockitoSession ` and modified validation logic in ` DefaultMockitoSession ` to ensure proper
updated dependency handling in GoTestDescription and added new test methods in GoTestIntegrationTest to improve dependency management and ensure correct functionality of rule generation
renamed buffer and handler variables from ` flush ` to ` readBuffer ` and ` writePending ` in ` SPDYAsyncConnection . java
update blockliquidwrapper to use getlowingblock ( ) instead of getstaticblock ( )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use a URI instead of an extra key to improve flexibility in
camel - 14284 : camel - apr - fix typo in javadoc .
[ hotfix ] [ cli ] add support for streaming plan in cli frontend
fix craftmanager . getrecipe ( ) to use computeifabsent ( )
[ hotfix ] [ test ] fix flakiness in testfilechannelrestart
simplified the whitespace check logic in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern matching for pg _ temp _ files in NeuteredLinesFilter . java to enhance filtering capabilities for PostgreSQL temporary files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added logic to handle " INTERVAL " and " NCLOB " data types in DataTypeFactory . java and modified condition checks in UnknownType
added a method to check if the timer is publishing an histogram before adding metrics to the metrics collection to ensure metrics are only recorded when the timer
updated the handling ofDivideUpstreams in ShenyuClientRegisterSpringCloudServiceImpl and modified the return statement in Divide
added a method ` registerListener ` to the ` ShadowSensorManager ` class to enable the registration of a sensor event listener with specified rate and
added SSL connection handling tests in SelectChannelServerSslTest to ensure proper handling of socket exceptions during test execution
camel - 16400 : camel - ignite - upgrade to 1.5 . 0 - fix npe in camel - ignite
updated print statements in AbstractClient . java to handle empty line counts to improve clarity of output when there are no lines to display
pdfbox - 4892 : catch all exception , not just ioexception
added tests and exception handling for HDR capabilities in ShadowDisplayTest . java to ensure proper functionality and error handling for HDR capabilities in the
added a finally block to reset the classloader to null to ensure proper resource management and avoid potential memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve debugging by providing more context about the source and
added a default constructor to the Message class to initialize the Message class without requiring parameters
added handling for GUI classes in the SerializableIdiom class to improve bug reporting by prioritizing low priority for non - GUI components
updated PhoenixDecimalObjectInspector to use PrimitiveTypeInfo for BigDecimal conversion and improved precision scale enforcement to enhance flexibility in handling
replaced GZIPOutputStream with OutputStream in CompressionResponseStream and modified content encoding handling in CompressionServletResponseWrapper to ensure proper output stream is used when the
updated variable names from ` WWWAuthenticate ` to ` authenticateHeader ` in ` getAuthorization ` and ` parseWWWAuthenticateHeader ` methods to
added a condition to return false for directory names starting with " com \ ibm \ \ " and " org \ omg \ \ " to
replaced direct calls to getThreadGroup ( ) with a method to retrieve the thread group name to improve code readability and provide a clearer
added logging functionality to MethodInvocationPrivilegeEvaluator to improve debugging and traceability of access decision processes
updated package structure and logger reference in DmozParser . java to improve organization and clarity of the codebase
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
server : add iso path for user vm to the vm ' s list of disk
replaced the existing SignalHandler with a new one in SigInt . java and updated the test method in SigIntTest . java to improve
replaced static import of ArrayUtils . isEmpty with ArrayUtils . isEmpty in NodeTool . java to improve code readability and maintainability by using a
updated AxonAutoConfigurationWithSpringCloudTest to use Spring Boot Test annotations and removed NoopDiscoveryClientAutoConfiguration to streamline configuration
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
mondrian : remove deprecate planningentityselector . setinitializedplanningentities ( false )
added build time tracking functionality to TwoLevelArtifactCacheDecorator and related classes to enhance build rule management by incorporating build timing information
replaced ` getFields ( ) ` with ` getDeclaredFields ( ) ` and updated the handling of fields in ` GroupByOperator . java ` to
added null check before adding block appearance in Wallet . java to prevent potential NullPointerExceptions during block addition
added CNC currency pair support in BTCEUtils and updated ticker retrieval in TickerDemo to support trading functionality for Chinac
updated skewAllowance from 5 to 15 in SamlIdPResponseProperties and updated related logic in SamlProfileSamlAuthNStatementBuilder
added sorting functionality to SongListActivity and updated query settings to include SortName to enhance user experience by providing a more relevant sorting criteria
removed redundant method ` readBodyToBytesIfNecessary ` in ` Utils . java ` to streamline request handling by eliminating unnecessary complexity
refactored mobspawnerblock and signblock to extend legacybaseblockwrapper instead of baseblock
refactor IcebergBranchExec to use SnapshotRef for tag retrieval to improve code clarity and error handling for non - tag tags
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
updated ` boxesSsboBinding ` and ` frameNumber ` variables in ` HybridDemoSsboInstancing ` and `
updated password change validation logic in IdentityProviderEndpoints . java and added debug logging in IdentityProviderEndpointsMockMvcTests . java to ensure correct validation
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that notInitializedInConstructors is cleared when assumeReflect
modified the SQL execution error message to include the connection ' s URL if the connection is closed to improve clarity in error reporting by distinguishing
added a new method ` testRequiredBody ` to ` SpringmvcClient ` to validate the body of requests for specific service names to ensure
updated regex patterns for user and password in CredentialInjector . java and updated JDBC URL in CredentialInjectorTest . java to improve clarity and consistency
added " Item4 " to the menuItems array and added a key stroke for the enter key in ActionListenerCalledTwiceTest . java to
updated debug output format and assertions in TestCoreParser . java to improve clarity of debug messages and ensure accurate test assertions
updated equality check for ` id ` and ` children ` in ` SimpleNode . java ` to ensure correct equality check for ` id ` and
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class within its package
lucene - 1188 : morelikethis # getdoccount should return the number of document , not the number of document
reformatted code for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query construction in MongoSessionDataStore . java to use append method for better readability to improve code clarity and maintainability by reducing
added a new native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to enable the use of a customized macro for
updated time zone values from ARAST to EET across multiple languages to ensure accurate representation of the time zone in the application
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the logger
hhh - 14529 - handle jdbcexception in sessionimpl when rollback be enable
improve routine for determination of download file suffix , so it give up instead of produce infeasible file name .
disable screen menu bar on macosx
add unit test for piecewise integration in ca
changed access modifier of ` STATE _ SCREENSHOT _ CAPTURED ` from private to protected in ` BaseSwipeUpHandler
added a test for modifying hive . metastore . uris and modified hive . exec . reducers . bytes . per . reducer in
added a call to ` invalidClasses . put ( entryName , value ) ` in ` EntryLoader . java ` to track invalid class entries
update mobileinput to use player team instead of sharded team
updated the domain parameter in the Cookie . Builder constructor from " comp1 " to domainHelper . getHostName ( ) to ensure the cookie is
added nullable validation logic to ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` ColumnSnapshotGenerator ` classes to ensure
refactor multiple security token service classes for improved organization to enhance maintainability and readability of the codebase
added functionality to delete documents and add assertions in CustomCollectionTest . java and modified CompositeIdRouter . java to improve query handling and ensure consistent
added snapshot handling functionality in ExecutablePreparedStatementBase for PostgreSQL database operations to improve snapshot management and support for bytea data types in PostgreSQL integration tests
updated cache conditions in DefaultServlet . java to include max _ cache _ size and max _ cached _ file _ size to ensure proper caching behavior
fix drag - and - drop functionality in jabref ( # 7358 )
replaced ` createDescription ` with ` Description . createTestDescription ` in ` ExecutionUnitRunner ` and updated test assertions in ` Cuc
replaced ` ! myVersion . isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for ` myVersion ` and ` buildTime
removed public access modifier from several static methods in TimeUtils and TimeUtilsTest classes to restrict access to these methods for better encapsulation
updated security frame checks in RefectionMHTests to use VersionCheck for version 18 and above to improve code readability and maintain compatibility with
updated file extension checks from " jpg " and " jpeg " to " . jpg " and " . jpeg " in PreviewImageFragment
updated method return logic in NativeImageDebugInfoProvider to handle HostedMethod instances to ensure accurate Java type resolution for hosted methods
added icon retrieval methods and updated classDisplayed initialization in DataTableTopComponent . java and DataTableTopComponent . java to improve UI consistency and ensure
refactor the substring extraction logic in CounterRequestAggregation . java to handle potential null index cases to improve robustness by avoiding potential NullPointerExceptions
updated the replacement logic in ` FindAndReplace . java ` and added a test for dollar signs to ensure correct handling of special characters in
fix npe when connect to jabber server ( smack - 5222 )
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method ` copyDir ` to copy directories and files from a specified directory to a specified destination to facilitate the copying of
added error handling for unknown datum classes in JacksonUtils to ensure proper error reporting for unknown datum classes
replaced ` buildAbiFromClasses ` and ` buildRuleResolver ` calls with ` requireRule ` for class and source ABI to
adjusted height calculation for item height in SelectBox . java to ensure proper height adjustment based on the list ' s item height
added normalization of database and table names in ObjectStore . java to ensure consistency in database and table naming conventions
added schema handling for Oracle databases in DbSqlSession . java to ensure correct schema is used for PostgreSQL and Oracle databases
removed the Logout method from HomeFragment to simplify the code by eliminating unnecessary logout logic
[ hotfix ] [ test ] fix task name in test
added null check for candidates in FastImportAction . java to improve robustness by preventing potential NullPointerExceptions
updated the managed check in ContainerLifeCycle to use a boolean variable for better readability to improve code clarity and maintainability by using a
rename iexecutionattributesdialect to iexecutionattributedialect to avoid confusion .
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that unsafe metadata is cleared before
fix nullpointerexception when loc be null
added null check for measurement in TabletInsertionDataContainer and implemented exception handling in DisruptorQueue to improve robustness by avoiding null pointer
deleted the Session2Token . java file to the class is no longer needed in the media package
bug cs - 15850 : do n ' t destroy the volume if the volume can not be remove
added a new ` Install ` class in ` SystemShortcut ` and integrated it into ` PopupDataProvider ` and ` InstantApp ` to enable
added a constructor to ` LdapAuthenticationProvider ` that initializes ` NullAuthoritiesPopulator ` and implemented it in ` LdapAuthenticationProviderTests `
fix codenameone - core and java - runtime so that they use java 1.5 source and target .
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the camera building process
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` MutableBits ` and improved error handling to enhance performance and
added handling for null results in JMESPathExtractor to improve robustness by preventing null pointer exceptions
updated import statements and added null check for currentUser authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertion statements in various test classes to remove unnecessary parentheses to improve code readability and maintainability
cloudstack - 4892 : fix typo in error message for vgpu enabled virtualmachines
updated method and variable names from ` ArrayList ` to ` HashSet ` in ` RobolectricTestRunner ` and ` Config ` classes to
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty
added a check for partial partition keys in HiveAlterHandler to ensure consistency between old and new partition keys to improve the accuracy of partition key comparison
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the visibility of the icon
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback for deployment and undeployment in StandardDeployer , StandardUndeployer , and ContextHandlerCollection classes to
added workspace listener functionality to PreviewControllerImpl and modified buildGraph method in PreviewUIController to enable dynamic graph updates based on workspace selection status
added checks for non - VM anonymous classes in ReflectionFactory and updated class name checks in ReflectUtil to ensure proper handling of anonymous classes during reflection
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the file path format in CatalinaAcegiUserRealm . java from " / / " to " file : " to ensure
updated server and action manager startup logging in AmbariServer . java to improve clarity of log messages during server and action manager initialization
added null checks and assertions for init and modify nodes in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions
updated the ` run ` method to accept a ` FileSystem ` parameter and modified user handling in ` SliderAppsViewControllerImpl . java `
added a check to ensure the background manager is not attached before attaching the window to avoid potential null pointer exceptions when the background manager is already
added tab switching functionality in AllAppsTabbed , Launcher , and PagedView classes to improve user experience by ensuring the correct tab is
added null check for the URL in BaseDataSource and implemented a test for invalid URLs in SimpleDataSourceTest to ensure that a valid URL is provided
added JUnit ` @ EnabledOnJre ` annotation to ` PebbleModuleTest ` and modified the instantiation of ` Pebble
added a new ` EditNameDialogListener ` to handle directory creation in ` FileDisplayActivity ` to enhance user experience by allowing directory creation with
added functionality to toggle bar borders in multiple activities to enhance user interface by allowing dynamic adjustment of bar borders
updated the SSL URI from " https : / / www . okcoin . com / api " to " www . okex . com "
jbrules - 2692 : add natural score comparator to acceptedforagetest . testpickmovemove * test
replaced ` FileChannel ` with ` SeekableByteChannel ` and updated input stream handling in ` Files . java ` and ` BytesAnd
refactor the ` getFlattenFieldTransferPair ` method to use a variable for ` FieldReference ` to improve code readability and maintainability
changed the type of ` MockHandler ` from ` MockHandler < T > ` to ` MockHandlerImpl < T > ` across multiple files
removed redundant checks for SERIALIZATION _ TYPES _ KEY and PROXY _ SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser .
added import statements for ActivityManager and set watch heap limit in QuickstepProcessInitializer . java to facilitate debugging by controlling the
refactor sumWithCompensation method calls in Collectors . java for improved readability to enhance code clarity and maintainability by reducing
log4j2 - 1349 do n ' t swallow exception in abstractloadbundlesetest
modified the serialization logic for the top - level deletion in PrecompactedRow . java to ensure proper handling of non - live deletions in the
modify rendering intent handling in ICC _ Profile and ColorConvertOp classes , and add an InvalidRenderIntentTest class to improve robustness of rendering intent processing and provide a test for validation
add meterregistrylifecyclelister to autoconfiguration of meterregistry
[ 3.0 ] fix log level for config center not find ( # 9440 )
added certificate generation tests in CertificateFactoryTest . java to ensure expected exceptions are thrown for invalid input
camel - 16400 : add ambiguity check for binary operator in simpleparser .
simplified the onTabUnselected method in EditorActivity and added focus change handling in IDEEditor to improve code readability and ensure
add user . name to accesslogvalve . openfail error message
updated scaling factors and modified mesh name retrieval logic in SkeletonModelGpuSkinningTest . java , OgreXmlLoader . java ,
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that the class is outdated and should no longer be used
added support for specifying the output directory for d . ts files during the transpilation process to allow users to specify the location of generated d
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated fetch timeout handling in StreamConfig . java to ensure that fetch timeout
[ beam - 1861 ] add timestamp . html to streamingdataflowworker . java ( # 1862 )
updated the maximum number of metastore server threads from 100000 to 1000 to optimize performance and reduce resource usage
changed the return type of the onTaskSnapshotChanged method from void to boolean to indicate success of the snapshot change operation
updated shadow radius assignment from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure shadow radius is set correctly for
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the behavior of chained messages with aggregation
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure correct validation
fix polyglotcontextimpl . isinternal ( ) to check source . isinteractive ( )
updated condition in CreateKeytabFilesServerAction to check for both previousCachedFilePath and cachedKeytabFilePath to improve clarity and correctness
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating display management capabilities
updated tooltip text assignment for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to ensure consistent user experience by displaying the
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` in ` LooksFrame . java `
changed the return type of the ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < Caption
added unit tests for entity insertion and removal in JPASQLBase . java to enhance test coverage for query results with factory expressions
added drag index handling in FreeformFinSetConfig . java to ensure correct drag behavior when removing points
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to incorporate the latest features
updated error message in Runtime . java and added spendAllGas ( ) method call to improve clarity of error reporting and ensure gas is spend
updated error message formatting in multiple classes to include newline characters to improve readability of error messages for better debugging
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
add support for platform - specific unsafe plugin in jdk 8
added Hint annotations and a test for blacklisted modules in AndroidBinaryModularIntegrationTest to ensure proper handling of module visibility in the build process
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable centering pages vertically for
added a call to ` doneProcessing ( ) ` on ` migrationInfo ` in ` MigrationRequestOperation . java ` to ensure proper handling of
updated KonnectedBindingConstants and KonnectedUPnPServer to use " baseUrl " instead of " moduleIpAddress " to
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
added database creation and query processing in TestJdbcWithMiniLlap and LlapBaseInputFormat classes to ensure the correct database context is
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL
added support for starting copy mode in ConsoleActivity for devices running Ice Cream Sandwich to enhance user experience by enabling copy
updated XML output writing to use try - with - resources for better resource management to improve compatibility with XML standards and enhance code readability
camel - 1645 : fix npe in abstractlistaggregationstrategy when use custom aggregation strategy
( chore ) camel - core : remove dependency on exchangehelper from camel - core
updated package structure and import statements for BasicConfigurator and SocketMin to improve organization and clarity of the codebase
added a condition to check if targetVN has PHI _ NODE before comparing it with sourceVN to ensure that PHI _ NODE
added import statement for SharedStringSource in TestXSSFRichTextString . java to facilitate the use of shared string source
added a new method ` invokeMethod ( IObject , MethodEntity , Environment , TraceInfo , Memory [ ] ) ` to the ` ObjectInvoke
refactor multiple dataset classes for consistency and clarity to improve maintainability and readability of the codebase
[ hotfix ] [ test ] migrate to junit 5
bugfix : use string . isempty ( ) instead of string . isempty ( )
changed the access modifier of the singleton instance from public to private to restrict access to the singleton and enforce encapsulation within the class
replaced direct usage of ` testPluginDefinition ( ) ` with a local variable ` pluginDef ` in ` IfStatementTest . java `
replace ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure correct
removed the nullSafe method from the TypeAdapter and updated its calls to simplify the code by eliminating unnecessary null checks
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new class ` EXIFReader ` to handle image metadata processing to facilitate the extraction and processing of ExifIFD
return none instead of unknown _ to _ sdk _ version when unit be unknown
[ rhdm - 358 ] fix pmml4datafactory . newinstance ( ) to work with pmml 2.0 ( #
updated log message formatting in FluentProtocol . java to improve clarity of error messages for repeated counter currency transfer started messages
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 32715 ] fix aarch64 emitting code for branchtargetindexoutofbounds .
added a try - finally block around the initializeJDKLogManager call in JDKXRLogger . java to ensure that the initialization state is
added a ` find ` method to ` DefaultTicketCatalog ` and modified ticket retrieval logic in ` HazelcastTicketRegistry ` and ` Hazelcast
removed unnecessary string concatenation for SSL configuration in TestSSL . java to streamline code for better readability and maintainability
[ hotfix ] [ runtime ] fix thread safety issue in sortmergepartition
( chore ) camel - jms : remove unused constructor in jmsio
updated ` PluginHandleController ` and ` PluginHandleDTO ` to include ` type ` and ` sort ` parameters to enhance plugin handle management by
updated the method call from ` nextSpan ( ) . name ( changedName ) . start ( ) ` to ` nextSpan ( ) .
added configuration options for GLKView drawable color , depth , stencil , and multisample in IOSApplicationConfiguration and IOSGraphics to
refactor loginit to use attemptlogin ( ) instead of webdriver . findelement ( by . name ( " username " ) )
[ pytorch ] support real ( ) and complex ( ) in jniutils
refactor lock name retrieval in SynchronizationStatistics . java to use a do - while loop to improve readability and prevent potential null pointer exceptions
refactor Implements and ShadowPicker classes for improved clarity to enhance code maintainability and readability
refactor HttpClientOptions creation to use a dedicated method for creating HTTP / 2 client options to improve code readability and maintainability by centralizing
added support for ` DynamicArray ` in ` DynamicStruct ` and improved type handling in ` SolidityFunctionWrapper ` to enhance type
updated the method for retrieving CSS properties in InlineLayout and FontUtil to include a default value of true to ensure consistent behavior in CSS property retrieval
added constructors to CopyStep to accept Path objects and a test for shell command internal path to enhance flexibility and ensure correct functionality of the Copy
fixed - rseaphore . addpermits ( ) method do n ' t call ' set ' and ' publish ' method . # 3
camel - 16400 : fix camel - dsl - dsl test to work with camel - core
added a new ` FlavorParser ` class and refactored the ` BuildTargetParser ` and ` BuildTargetParserTest ` classes to
changed the type of witnesses lists from List < String > to List < ByteString > and updated related methods to use ByteString instead of String to
added a check to ensure resultsMeta is not empty before printing to avoid printing empty results
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for testing to enhance performance by avoiding unnecessary unlink
added a ` addSpecialTokens ` parameter to various methods in ` HuggingFaceTokenizer ` to enable conditional handling of special tokens during encoding
[ hotfix ] [ runtime ] use collections . nCopies instead of manual list creation
updated LoadSingleTsFileNode to utilize AlignedChunkData for chunk data addition to improve clarity and maintainability of chunk data handling
added session storage context handling in the BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer classes to enhance session management and
added a test for schema validation in TestJspDocumentParser . java to ensure proper handling of XML schema validation in the application
added a default constructor to TypeAdapter and modified the @ Ignore annotation in Java 17RecordTest to disable the test until record support is added
improve handling of suspension event in debugger
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
remove unnecessary null parameter from createresourcepolicy ( ) method .
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor . java and updated assertions in BlockingTest . java to improve
added JUnit ' s @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
added normalization to the MD5 computation in CheckSum . java to ensure consistent formatting of Unicode characters in the checksum
refactor command handling in Example . java and update variable names for clarity to improve code readability and maintainability by using descriptive variable
bugfix # 252770 , make keylistener final
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings to
added functionality to check for multiple remote addresses in the RequestUtils class to ensure proper handling of multiple remote addresses in requests
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` in ` JsLibrary . java ` and updated its
refactor CookieManagerTest and UnmodifiableMaps to use a static method to retrieve the host address and port to improve code clarity and ensure
added a condition to check if the wrapped run was all whitespace before breaking the loop to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ pulsar ] support pause / resume split in pulsarpartitionsplitreaderbase
added support for HIVESCRIPTIDENVVAR in HiveConf and ScriptOperator classes to enable dynamic assignment of script operator IDs based on configuration
refactor the getListedTermCounts method to utilize Stream for sorting term counts to improve performance and readability by utilizing stream operations for
added a new action class ` UseSeparateStepSizeAction ` for enabling the use of separate step sizes in the Jog plugin to
refactor ` FileMenuFilter ` to use ` AccountManager ` and ` FileLockingHelper ` for improved file locking functionality to enhance
hbase - 25829 fix npe in roundrobintableinputformat when regionserver be empty
updated header values in HttpClientRequestAdapter from " false " to " 0 " and " 1 " in HttpClientRequestAdapterTest to ensure consistency in
pdfbox - 4892 : use try - with - resources for resource leak
added fullscreen support and modified display mode handling in GwtGraphics and GwtApplication classes to improve user experience by enabling fullscreen mode
changed the type of ` issuers ` and ` issuers ` from ` String ` to ` URI ` and modified the ` normalizeResource `
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate Dubbo configuration properties to ensure that the
replaced Gdx . files . internal ( fileName ) calls with resolve ( fileName ) in SkinLoader . java to ensure proper file resolution
updated logging level from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . lockInterruptibly ( )
changed the package declaration of the Compiler class from " java . lang " to " java . lang " to organize the code structure under a
fix nullerefandredundantcomparisonfinder to report false for catch - all exception
add defaulthttpdatasource to manifestfetcher so that it can be use in demo app .
added a configuration property for the maximum number of prepared statements per database connection to allow dynamic adjustment of statement performance based on database connection settings
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes to allow for more flexible
added a check for command errors in the AutoScalingHandler class to ensure proper error handling for invalid command payloads
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
updated the variable name from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve
added methods to remove cryptography restrictions in the Utilities class to enhance security management by ensuring only restricted cryptography permissions are retained
added a cancellation check before creating a new position and integrated teleportation logic in the Entity class to ensure chunk generation occurs only when the event is
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that page margins
modified the initialization of vContext in Vectorizer . java to ensure vContext is properly initialized before use to avoid potential null pointer exceptions
[ wialon ] set wialon position speed to 0.539957 ( # 1341 )
hbase - 25815 enable user metric by default ( addendum ) ( addendum )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
updated mUserPresent and mVisible flags and added a check for mAttached before unregistering the receiver to ensure proper state management and prevent potential
refactor multiple HTTP client - related classes to improve code organization to enhance maintainability and readability of the codebase
add params to the zadd ( ) method in pipelinebase . java to allow the zadd ( ) method to accept additional parameters
( chore ) camel - ds - spring - boot : fix checkstyle violation
updated the test class name from TestAsyncMessages to TestAsyncMessagesPerformance to enable performance testing and improve test reliability
refactor target node handling in VersionedTargetGraphBuilder and add test parameter handling in VersionPropagatorBuilder to improve code clarity and ensure proper
replaced hardcoded values for EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW with constants in TimeZoneProvider . java to
updated return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java for OLE
updated row and column assignments in JSONParser . java to ensure correct parsing of JSON data
replaced instances of ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` with ` StringUtils . aspectjNameToPattern (
updated DETAIL _ THUMB _ HEIGHT and added ACTION _ PLAY _ TRAILER functionality in BaseItemDetailsFragment to enhance
added a method to remove glyph information from long pointers in CStrike . java and implemented a native method in CStrikeDisposer .
act - 164 : fix terminateendeventactivitybehavior . terminateallbehaviour to record process instance end
camel - 16400 : camel - core - use @ xmlrootelement annotation to get the local name of the type .
updated the endpoint URL from " http : / / www . apereo . org / scottb . html " to " https :
add option to reset all preference to default value
hbase - 25815 make hbase . thrift . metrics protect ( # 258 )
[ danfossairunit ] remove deprecated channel for manual fan _ speed ( # 14829 )
( chore ) camel - core : use hamcrest assertion instead of junit in testendpoint
removed redundant calls to expansionHelper . stop ( ) in TweetActivity . java to streamline code by eliminating redundant checks
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to improve robustness by preventing null pointer exceptions
server : add default root disk size to user vm config ( # 4898 )
added preference handling for showing suggest apps in the drawer based on user preferences to enhance user experience by allowing suggestion apps to be displayed based on user
[ geos - 10663 ] add bbox crs validation for bbox filter
added validation for value and position parameters in LibrustzcashParam . java and updated IVK value in Librustzc
moved ithrowableentity from fml . mods . fml . common . registry to cpw . mods . fml . common
added random values for the x and y variables in NodeDataImpl . java to improve variability and randomness of node positioning
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for missing scopes to improve
refactor the initialization of ` declaredDepsBuildResult ` and ` firstOrderStdout ` and ` returnedStderr ` to use try - with -
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to handle the DEEP _ SHORT
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hashing behavior for object instances
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for better extensibility
added a boolean flag ` useProxyResponseCode ` to control NTLM proxy usage in ` HttpURLConnection . java ` to ensure proper handling of
[ aarch64 ] aarch64 : use scratch register in aarch64 move .
server : do n ' t calculate reserved and used capacities for all vms in the host
added a check for ` docs . getMaxScore ( ) ` before including ` includeScore ` in ` JSONResponseWriter . java ` to ensure
updated audio codecs in AudioRecorderTest . java from 22050 to 44100 to align with the latest audio encoding requirements
updated the calculation of newOriginX to include subjectBounds _ m . getMinX ( ) and scale in RocketFigure . java to
updated null and empty check for druid data source in DruidQueryBasedInputFormat . java to ensure proper handling of empty or null data sources
added ORIGINAL _ TYPE to the CustomProperty class and modified the pattern in CustomPropertyTest to enhance the property parsing functionality to include additional
added a static method ` create ` to the ` Index ` class to provide a convenient way to create an instance of ` IndexImpl ` with
simplified the return statement in Dates . java to improve code readability and maintainability
added a new index variable and updated schema compatibility handling in SchemaCompatibility . java and corresponding test cases in TestSchemaCompatibility . java to improve compatibility
added support for handling entity paths in QueryUtils . java to improve query processing by allowing for more flexible association handling
added synchronization to the spans list in TestSpanHandler . java to prevent Iterator pitfalls to ensure thread safety when accessing shared spans
updated method signatures to use ` List < ? > args ` instead of ` List < Object > args ` across multiple classes to enhance type flex
updated exception handling in ViewContextImpl . java to include InvocationTargetException and improved logging to enhance error handling and provide more informative logging for authentication
refactor OAuth2AccessTokenEntity class for improved clarity to enhance maintainability and readability of the code
updated error messages and status handling in SCBEngine , TestInvocationFactory , TestInvokerUtils , and HighwayServerInvoke classes to clar
added iOS resource files for Default - 1024w - 1366h @ 2x ~ ipad . png in GdxSetup . java
added ConcurrentMergeScheduler to TestSearcherManager to optimize merge performance during testing
updated conditional checks in QTestUtil and improved list handling in GenericUDTFInline and LazyBinaryArray to enhance code clarity and
refactor MapIterable , FJIterate , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 2506 : fix bug in spreadsheet key listener
added persistence and session factory services to HibernateBundleActivator and updated test cases in OsgiTestCase to improve service management and ensure proper
update timeout calculation in HikariPool . java to use connectionTimeout instead of subtracting from elapsedTimeMs ( start ) to improve accuracy
move component . xml to src / non - packaged - resources directory to avoid packaged resource .
updated file handling logic in Compat . java and FileOpener . java to improve file handling and ensure proper directory checks
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void ` in the ` row ( ) `
add check for duplicate port number in -- p2p - port and -- rpc - http - port
added a null mask feature to WebSocketClient and modified WebSocketConnectionD12 initialization to utilize a fixed mask generation to enhance flexibility in mask
modified the return type of genUDTFPlan method from RelNode to Pair < RelNode , RowResolver > in CalcitePlanner
added node selection statistics tracking for preferred and non - preferred node selections in multiple classes to enhance monitoring capabilities for node selection performance
added a new file ` Person . java ` that contains a class ` Person ` that contains a name property and its getter / setter methods to
refactor owner pointer handling in CPlatformWindow . java to improve clarity and functionality to enhance code readability and maintainability by using a
added clock functionality and animation handling in PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback transitions
fix bug where comparator output level be not update correctly
removed the ` final ` modifier from ` IMPL ` and modified exception handling in ` SegmentReader . java ` to enhance flexibility in class
added SwingUtilities . invokeLater to fireCellUpdatedEvent in Sudoku . java to ensure UI updates occur on the Event Dispatch Thread
replaced instances of ` DefaultInetAddressAdapter ` and ` DefaultTypeAdapter ` with ` InetAddress ` and ` CollectionTypeAdapter ` to
added methods to retrieve double , long , boolean , string , and boolean values from a Series and corresponding tests to ensure proper handling of null values
changed the option " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java to
updated boundary conditions and refined calculations in GeoRelationUtils and GeoUtils classes to improve accuracy in geometric calculations and ensure proper boundary conditions
cloudstack - 4892 : fix npe in vmserviceimpl . getdiskofferingid ( ) when service offering be
added cleanup method to HazelcastTest class to ensure proper resource management after tests
added tests for AES / " NoPadding " and " 9 / NoPadding " algorithms in BlockCipherTest . java to ensure proper exception handling
added logging filters to QFileClient to improve visibility of operation logs for better debugging
fix : beandefinitioninjectprocessor and beandefinitioninjectprocessor do n ' t visit all type parameter ( fixes # 469 )
initialize currentconnectionaddress to proxySocketAddress if it ' s null to ensure currentConnectionAddress has a valid value before use
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve code read
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential NullPointerExceptions
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` startActivity ( Intent intent
removed unnecessary ` this . ` keyword from ` SchemaCrawlerCommandLine ` and refactored the ` toString ` method in ` GrepOptions `
http : / / issues . apache . org / activemq / browse / amq - 2889 - add osgi configuration to
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests to enable dependency injection for PersonRepository in tests
updated the ` stop ` method signature in ` UIServer . java ` and adjusted log message formatting in ` TestVertxUIManual
blockcactus : fix switch / cases indentation in switch / cases
refactor mouse event handling in ThemeSelector . java to improve code readability and maintainability by encapsulating mouse event logic
[ java ] make abstractminmulticastflowcontrol . java extend abstractminmulticastflowcontrolfields instead of abstractminmulticastflowcontrol
added alignment and vertical alignment parameters to the ` editStringAt ` method in ` IOSImplementation . java ` and ` IOSNative .
do n ' t throw exception if the model file be null
added distinct query handling in GroupByExpression validation and improved group column count generation in QueryGenerator to ensure accurate group column selection for distinct queries
add getclosestlinkage and getsimplifiedsimplifiedstringsimilarity method to jninativesolinkage .
fix checkstyle issue in filelistpanel and jsyntaxtextarea
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables in MessagePackParser . java and updated return statements in MessagePackParserTest . java to improve code clarity
added locale management in AbstractSolrMorphlineTestBase to ensure consistent test environment by resetting the default locale
removed conditional logic for setting the size of the action bar based on the launcher state to simplify size assignment logic for better readability and maintainability
added a new test class ` MetricsReporterTest ` to verify metrics registration functionality to ensure proper functionality and error handling of the ` MetricsReporter `
( chore ) camel - test - infra - osgi : remove unused field
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ test ] use random name for sink list in streamkafkapptest
refactor DSAParameterGenerator to use a consistent BigInteger constant for strength checks and improve clarity to enhance code readability and maintainability by
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to enable FQDN support for AM machines during work submission to
fix clientoutofmemoryhandlertest fail on slow machine
added a new method ` getCmoObjectId ( int shapeId ) ` to multiple shape classes and updated ` setObjectId ( int shapeId )
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the correctness of the distinct
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
added support for binding and unbinding extensions in ManagedKubernetesClient to enable dynamic management of extension adapters in the Kubernetes client
updated subtitle and body formatting in DetailsDescriptionPresenter to use a dedicated method to improve clarity and organization of media item information
test : migrate authhandlerboot and rsaprovidertokenmanager to junit 5 ( # 4519 )
do n ' t throw exception if generate summary fails
replaced ` false ` parameters with direct calls to ` intPool . reset ( ) ` and ` bytePool . reset ( ) ` in
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated ShadowWindowManagerGlobal to support TIRAMISU and added a new WindowSessionDelegateU class to enhance compatibility with TIRAM
added logic to force adding scheme host and port based on request scheme to ensure correct link generation based on the request ' s server port
added support for MSSQLDatabase in foreign key constraint generation logic to ensure compatibility with MSSQL database operations
hbase - 25829 fix checkstyle violation in hstore . replacestorefiles
add filtereventhandler for pipe side check to pipeBehaviourEmzuli .
simonstewart : make htmlidentifier . shouldbeinjected ( ) configurable
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
exoplayer : fix thread safety issue in simplebaseplayer and listenerset
updated schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema to improve compatibility with Liquibase ' s schema configuration
updated color settings in SpriteBatch , SpriteCache , and AlphaTest classes and modified frame buffer drawing in LwjglDebugSt
fixed - rconnection . tocompletableFuture ( ) . join ( ) return batchpromise instead of completablefuture . await ( ) . join
added a check for the base core URL in SolrLoggerServiceImpl to ensure that only valid HTTP and HTTPS cores are added to the statistic year
renamed ` launchTask ` method to ` launchTaskFromView ` and updated its usage in multiple classes to improve clarity and consistency in
updated import statements and refactored constructors in MorfologikFilter to use specific dictionary resources to enhance flexibility in handling different dictionary
updated sorting options from " stars " to " communityRating " and " criticRating " in GridFragment . java to improve clarity and
added imports and modified visibility logic for ListRow in CustomListRowPresenter . java to ensure proper visibility of header items in the list view
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and reduce complexity
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to improve type safety and avoid potential
added support for jsr310 serialization with java time module in StandardJavaScriptSerializer . java to enable proper serialization of date and time data in
updated import statement for MDC from Apache Log4j to SLF4J to ensure compatibility with SLF4J logging framework
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to simplify type handling and improve code clarity
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified the ` buildWithBuck ` method in ` ProjectCommand
replaced the initialization of idleStrategy with a call to System . gc ( ) to ensure proper resource management and avoid potential memory leaks
updated OCFile and related classes to use ContentResolver instead of ContentProvider to enhance content handling capabilities and improve code clarity
removed unnecessary state change checks for autoscale , createMissingNodes , and self - loop checkboxes in ReportPanel . java to simplify the code
[ hotfix ] [ runtime ] add null check for slotowner in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to remove calls to ` System . gc ( ) ` and ` Runtime
removed redundant calls to ` super ( ) ` in multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added UIID handling in ScaleImageLabel to ensure the icon is set correctly when the UIID is set
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to ensure the correct entry is updated based on the
added support for the " - cp " option in the argument handling logic in the Main . java file to enhance flexibility by allowing both classpath
updated link and compiler parameters in avutil . java to ensure compatibility with the latest compiler features
set initialized to true in StorageService . java to ensure proper initialization state for storage operations
refactor Test7196045 . java for improved readability to enhance maintainability and reduce complexity
updated density and decay values from 1.5 f to 1.0 f and adjusted decay factor from 0.9 f to 0.95
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and ` OidcRedirectActionBuilder ` classes to support
ddl : fix unique constraint inline for non - nullable column
added federated sharing functionality to UsersAndGroupsSearchProvider and updated ShareFragment to check folder status to enhance user experience by allowing federated sharing
added an overridden method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure that document values are always available for
refactor bufferalignmentagent and bufferalignmentinterceptor to improve readability and error handling to enhance code clarity and ensure robustness against null
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and modified the ` IntObjConsumer ` interface to enhance functionality
do n ' t associate the save data with the temporary scoreboard if it be already associate with the global mapstorage .
changed return type of count methods from Long to long in multiple repository classes to improve performance and reduce memory usage
updated the logic for creating MTree snapshot based on the last modification time to improve clarity and accuracy of log messages regarding MTree snapshot creation
updated the dot product calculation in VectorUtil and added new test cases in TestVectorUtil to improve accuracy of the dot product score calculation and ensure
added IRREVERSIBLE _ THRESHOLD constant and methods to manage the latest confirmed block number to enhance blockchain management by allowing dynamic updates to the
refactor locale handling in GpsMainActivity and MainPreferenceActivity to use a centralized method for locale configuration to improve code maintainability and
added a check to determine if a new database was created in the LauncherClings and LauncherProvider classes to ensure proper handling of database
refactor error message formatting and improve iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to enhance code readability and maintainability
simplified the conditional check for ` datamodel ` in ` Constants . java ` to improve code readability and maintainability
added a check to ensure the current thread is not the same as the current thread in TestIndexWriterDelete . java to avoid potential race conditions
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports from ` apiclient . model . dto ` to ` jellyfin . sdk . model . api ` and updated related
added attributes to the document element in BatikSVGDrawer . java to ensure that all SVG attributes are included in the document element
updated exception handling in ConsoleKeys . java to include a try - catch block to improve error logging for user configuration parsing failures
added a check for the " WaitForResult " extra in CodenameOneActivity to ensure proper handling of the " WaitForResult " state based
updated HitQueue and PriorityQueue classes to use a Supplier for sentinel object retrieval instead of a prepopulate flag to improve flexibility in handling
added a new field ` mWidgetDescription ` and updated its visibility handling in ` WidgetCell . java ` to improve widget display by displaying a
added validation for attribute count in Attribute . java to ensure that the maximum registered attribute count does not exceed a defined limit to prevent runtime errors
change package of predicatestest from com . hazelcast . query to com . hazelcast . query . impl . predicates to improve organization and cl
camel - 16400 : added case - insensitivity support to the default header filter strategy . thanks to benjamin
refactor variable names and logic in InlineLayout and Breaker classes for clarity to improve code readability and maintainability by using more d
added ` @ NonNull ` annotations and refactored view inflation logic in ` ShareUserListAdapter . java ` to improve null safety and
refactored the ` shouldInstrument ` method in ` Setup . java ` to include ` isFromAndroidSdk ` and ` isExcludedList
added a check for insert destination before source in BrowserContentPane to ensure correct column count is returned when the association is inserted before the source
test : fix memory limit test on jdk 1.6 . 0
replaced singleton instance of CxxDeps with a singleton instance of EMPTY _ INSTANCE in AbstractCxxDeps and CxxLibraryDescription to simplify
added error handling for null rule in JavaTestRule . java to provide clearer feedback when a specified source under test is not among its dependencies
add support for minecraft 1.9 . 4 and 1.10 . 2
removed negative check for ' atIndex ' in StringUtils . java to ensure ' atIndex ' is always non - negative for proper functionality
increased timeout duration from 100 milliseconds to 500 milliseconds and changed sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility in managing assist content requests
updated the method to encode the witness address in VoteWitnessProcessor . java to ensure proper validation of the witness address before proceeding
updated DefaultMethodRegressionTests . java to improve test coverage to enhance reliability of method behavior during testing
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the codebase
updated import statements in KafkaOutboundAdapterParserTests to use KafkaException instead of KafkaProducerException to ensure compatibility with the latest Kafka library changes
added a call to container . closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management by closing the container loader
added a clear method to ExceptionThrowingTaskletStub and corresponding tests in FaultTolerantExceptionClassesTests to provide functionality for clearing committed
improve error message when application runner be not find
added an extraProperties parameter to TableConfigTunerUtils and related classes to allow for additional configuration options during tuner operations
added tracking of in - progress instances in PinotRealtimeSegmentsManager to ensure segments are only added if they are not already in progress
added a condition to return null if touchable is disabled to prevent processing on disabled touchables
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that pre
throw a retryablehazelcastexception if the cache config for the cache name have not be create yet
refactor module installation logic in JSweetTranspiler and ProcessUtil to use a dedicated method for checking if a node package is installed to
added @ ManagedObject annotation to MBeanContainer and Destroyable classes to enable monitoring and management of MBeans associated with a component
updated conditional check from ` settings . inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to simplify code logic
updated string comparison methods in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( )
updated isReifiable check in Types . java and added new classes T6558559a and T6558559b to
updated print statements in WorldEditListener . java to print the player ' s position instead of the edit position to improve clarity of player position
camel - 14284 : camel - kafka should shutdown the consumer when the executor be terminated .
removed the default implementation of the examples method in Schema . java to simplify the API by eliminating unnecessary defaults
modified thread interruption handling in AgentRunner . java to improve thread interruption logic and ensure proper termination of the agent execution
remove time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper removal of time columns from data source dimensions
simplified the condition in FacetComponent . java for better readability to improve code clarity and maintainability
replaced LinkerProvider retrieval with CxxPlatforms . getParseTimeDeps method in RustBinaryDescription and RustLibraryDescription to
added ` name ` property getter and setter methods to ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` NtlmProperties
added debug print statements and improved error handling in the CFGPrinterObserver and IdealGraphPrinterDumpHandler classes to enhance debugging capabilities and ensure
refactor scan range handling in BaseQueryPlan to use a local variable for SCAN ranges to improve code readability and maintainability by redu
added routeId to the filterToStringCreator return statement in RetryGatewayFilterFactory . java to provide more context about the retry configuration being processed
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced direct calls to ` onOverviewShown ` with ` onHomeShown ` and ` onOverviewShown ` in multiple classes to streamline
refactor conditional checks for min and max packed values in CheckIndex . java and add a new test method in TestPointValues . java to
updated the publish method call to use updateLastState instead of true to ensure the last state is updated correctly during the publish process
updated SQL string concatenation in MetastoreDirectSqlUtils . java to ensure proper syntax for string literals in SQL queries
added a null value to the exp list in SpliteratorCollisions . java to ensure proper handling of null values in the collection
simonstewart : add ` ` textcaseinsensitve ' ' and ` ` exacttextcaseinsensitve
simplified the while loop in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 186 - enh : add queryengine . forwardonlyfetchsize ( ) and queryengine . forwardonlyfetchsize ( ) to
added a check for ClosedChannelException before handling exceptions in HttpServerMultiplexChannelHandler to improve error handling and prevent unnecessary logging when the channel is
pdfbox - 4892 : preallocate arraylist to avoid massive resizing operation
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl . java to improve window radius adjustment based on device support
replaced ` ShapeDrawable ` with ` View ` for background and icon views in ` DesktopTaskView . java ` to improve flexibility
added initialization of upstreamCheckService in UpstreamCheckServiceTest . java to ensure proper initialization of the upstreamCheckService before use
updated logging levels from warn to debug in AbstractSession . java and AbstractSessionManager . java to improve logging granularity for better debugging without clutter
replace error logging with return statements in ZooKeeperHiveLockManager . java to streamline lock retrieval process and improve error handling
[ hotfix ] [ javadoc ] fix typo in javadoc
added a boolean flag ` containsCustomData ` and modified the mipmap generation logic in ` FileTextureArrayData . java ` to ensure
updated assertions in DefaultMaskingFormatterTest to use single quotes instead of double quotes to ensure consistency in string representation across different platforms
added a selectable flag and methods to manage selection behavior in the List class to ensure touch events are handled correctly when the list is not selectable
removed the check for empty vector values in LlapArrowBatchRecordReader . java to simplify the logic by eliminating unnecessary checks
added file separator expansion functionality in PolicyContext and modified related tests to ensure consistent file path handling across different operating systems
replaced ` Set ` with ` List ` for ` flatQueries ` and ` expandQueries ` in ` FieldQuery . java ` to improve
refactor TLS restrictions handling in the code to improve security and maintainability of the code
[ fix ] http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 528 :
updated the ` assertNodeStateProvider ` method to include an additional parameter for ignorable node values to enhance the functionality of the ` assertNode
added a check to delete the lock file if it exists to prevent potential conflicts with existing files in the workspace
updated NIOServerCnxn . Factory to use InetSocketAddress for clientPort to improve compatibility with socket address formats
added a new method ` getResponse ` to the ` RestClient ` class for obtaining a ` RestResponse ` to improve code organization and enhance
replaced ` segmentTarURIs . toString ( ) ` with ` segmentTarURIStrs . toArray ( new String [ 0 ] )
updated loginStudent method parameters from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD in AllAccessControlUi
added a null check for the item ID in EnhancedBrowseFragment and StdBrowseFragment to ensure stability by preventing potential NullPointerExceptions
increased the number of strings from 500 to 100 in TestSpecialOperations . java to improve test coverage and ensure more comprehensive
updated ByteArrayInStream initialization and removed hexToBytes method from WKBAttributeIO . java to simplify the code and improve performance by eliminating
renamed method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve cl
added a check for direct substates in AbstractStateMachine . java and updated assertions in ShowcaseTests . java to ensure proper handling of state
added type checking for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality
added a new ` JoinOperation ` interface to the ` PostJoinOperation ` class to enhance functionality by integrating join operations
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to ensure that the PostgreSQL test correctly
amq5035test . testdestroydurablesubscriber throw an exception if the durable subscription be in use .
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the codebase
updated MongoDbConnectionPoolProperties to use DurationCapable for lifeTime , idleTime , and maxWaitTime to allow configurable duration values for better
fix a possible npe in sdputils . createaudioparser ( ) .
refactor filter handling methods to return a boolean indicating whether filters were applied to improve clarity and control over filter application logic
added a timeout handling mechanism to the ShuffleHandler class to enable or disable timeout functionality based on user preference
replaced ` - 1 ` with ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in ` OrientationTouchTransformer . java
camel - 7999 : fix log message in xpathbuilder and xquerybuilder ( # 7999 )
updated the import statement for DataResource in NNDataSet . java and modified the file resource path in ClauseTest . java to ensure compatibility with
pmd : add unit test for edge case tokenizer ( # 1751 )
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure the ' atlas ' property is present before
camel - 15836 : camel - core - remove unused propertyplaceholderhelper from defaultcomponent
added a call to close the database connection in BlockchainTest . java and removed unnecessary message broadcasting in KafkaTest . java to improve resource
refactor line extraction logic in CoreMarkdownNodeRenderer to use a separate method for better readability to improve code clarity and maintainability by
updated import statements in WebServiceInboundGatewayParserTests . java to improve code clarity and maintainability
replaced ` ImmutableList . Builder ` with ` List ` for argument handling in ` ProjectableSQLQuery ` and ` SQLBindings ` classes to
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK environments
added keepAlive ( true ) to ReactorClient . java to ensure that the client maintains the connection to the server
replaced string literals for position and texture coordinates with shader program constants in MD5Renderer and ObjLoader classes to improve code readability and maintain
camel - 13850 : camel - jbang - allow to use the property component from the registry . thanks to benjam
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve clarity to enhance readability and maintainability of the code
updated the version number from 3.8 . 0 to 3.8 . 1 in the XMPPServer . java file to reflect the new release
updated type handling in types . java to use unannotatedType ( ) instead of t directly to improve clarity and maintainability of type
updated assertions in StorageGroupProcessorTest . java and modified sequence TsFileSize configuration in StorageGroupProcessorTest . java to improve test reliability and
updated class references from " org . eclipse . jetty . jaas " to " org . eclipse . jetty . ee10
set waitbeforestart parameter to 2500 in FFMpegVideo . java to allow for a longer wait before start time before processing
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage in ` OrcEncodedDataConsumer `
updated imports and refactored test methods in AccessorsTest . java for clarity and consistency to improve code readability and maintainability while
added a method to compile a method in GraalCompiler and implemented a getter method in LIRGenerator to improve code modularity and provide access
updated test annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use RunningStandaloneCondition instead of SpringRunner
fix boat not render correctly with water block
updated the ` toString ` method in ` Directory ` and added ` getLockID ` method in ` RAMDirectory ` to improve string representation of the
removed the method ` allowExperimentalOptions ( ) ` from the conditional check in the ` Launcher . java ` file to simplify the code
added methods for asserting paths in BDDAssertions . java to enhance the assertion capabilities for better usability
renamed variable ` hp ` to ` hostField ` and updated related logic in ` ForwardedRequestCustomizer ` and ` ForwardedRequest
updated logging level from debug to warn for multiple Kubernetes config files and improved logging message formatting to provide clearer guidance on configuring Kubernetes
added handling for file upload statuses in UploadListActivity to improve file management and user experience during file operations
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it to streamline provider installation process and improve code
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and tests to utilize the new ` TraceMessage
updated the select statement in StandardChangeLogHistoryService to use a computed column configuration instead of hardcoded values to improve code readability and maintain
hhh - 14850 - postgresql 8.1 do not support ` ` select current _ schema ( ) ' '
fix arrayindexoutofboundsexception in internalpartitionserviceloaderimpl and internalpartitionserviceloaderlitemembertest
added a check for the scheduler ' s state before starting it and improved error handling in ExecutionSchedulerManager and ExecutionSchedulerImpl to ensure proper
replace ` text . toString ( ) ` with ` text ` in ` BoxBuilder . java ` and modify conditional check in ` BoxBuilder .
refactor checkArgument statements in StatisticMap . java for improved readability to enhance code clarity and maintainability
change the return value of getStagedRectSlideEnd ( ) from 383 to 500 in TabletSplitToConfirmTimings . java to adjust
updated button name from " Random " to " waves . random " in WaveInfoDialog . java and updated command mode label in PlacementFragment
added a condition to check if ROAD ITEMS can be killed based on the plot area ' s ownership to ensure ROAD ITE
added a test for setting the touchExplorationEnabled in ShadowAccessibilityManagerTest and modified listener handling in ShadowAccessibilityManager to ensure
pdfbox - 5328 : avoid arrayindexoutofboundsexception in cmapsubtable . getcharactercodes ( )
simplify the code by remove the use of getpropertyasstring ( )
testnpoifsfilesystem now use poifs . create ( big ) instead of fs . writefilesystem ( fileoutputstream )
added imports and changed plot area retrieval logic in the code to ensure proper handling of plot areas and improve the reliability of plot retrieval functionality
updated version matching logic in TestWebHCatE2e . java to ensure compatibility with version 0.9 format
updated the check for ` count ` in ` pickleEvents ` from ` count < 0 ` to ` count < 1 ` to ensure correct validation
add client id to kafka consumer thread property ( # 6338 )
added error handling for javac execution in JavacCompiler . java to improve robustness by throwing an exception when the compilation fails
mow - 1349 make view repaint only when need
camel - 14284 : camel - spring - batch - fix checkstyle violation in camel - spring
added a method ` isAnimationFinished ` to check if an animation has finished based on the state time and frame duration to provide a way to
updated import statements in LoginInfoEndpoint . java and added a new test for custom fav icon in LoginMockMvcTests . java to improve code
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified refreshing text in ` HomeFragment . java
ggb - 1351 fix whitespace issue in text editor
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactor null checks and comparison logic in DataUtilities . java to improve clarity and efficiency to enhance code readability and prevent potential NullPointerExceptions
fix npe when compare nbt data , allow for deletion of enchanted books ( mc - 12770 )
test ( microprofile ) : add test case for async resource ( # 4891 )
updated header map suffixes from " - target - flat - headers . hmap " to " - target - user - headers . hmap "
added error handling and logging for send failures in MailService . java to improve debugging capabilities and provide clearer insights during message sending
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior
added a closing brace to the FileListListAdapter class to clean up the code and improve readability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OC
update child index from 1 to getChildCount ( ) - 2 in BubbleBarView . java to ensure the correct view is removed in the layout
removed " org . eclipse . jetty . websocket . util . server . internal . " from the hide method in JettyWebSocketConfiguration
change the default value of expiresSeconds from true to false in the S3Request constructor to ensure that the default behavior aligns with the intended
fix jfxradiobuttonskin # updateanimation ( ) when timeline be null
updated the logic for handling zero splits in DeweyNumber and added a test for zero splits in DeweyNumberTest to improve error
refactor category set string handling in MwVolleyApi . java to improve readability and ensure proper formatting of category set strings
corrected the spelling of " Invalid close control status code " to " Invalid close code 1111 " in WebSocketClientTest . java to
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure proper
removed duplicate code in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new file TestPorterStemFilter . java to test the PorterStemFilter functionality to ensure that the PorterStemFilter correctly
added a success parameter to the postBatchMutate method in Indexer . java to ensure that index updates are only written when the miniBatch
updated package names from ` exlore . support ` to ` explore . support ` across multiple test classes to reflect the new organization of
fix thread safety issue in chat window manager
removed redundant calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating redundant calls to Sys . touch (
updated ` HgCmdLineInterface ` and ` NoOpCmdLineInterface ` to include ` - mardu ` and ` -- unknown
camel - 16400 : fixed thread safety issue in camel - netty component . thanks to benjamin graf for
changed the ` direction ` , ` color ` , and ` intensity ` fields from public to final in several light classes to enforce immutability
added minimum dimensions for width and height in X11GraphicsConfig and WGLGraphicsConfig classes to ensure dimensions do not exceed 1 to improve st
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a meaningful string representation
added an AnnoFilterTreeSet class for filtering annotated classes based on inner classes to improve performance by avoiding unnecessary checks for inner classes
updated the handling of newLength in BytesColumnVector to ensure newLength does not exceed Integer . MAX _ VALUE to prevent potential integer overflow
fix flaky test in writebehindmapstorewithevictionstest # testwritebehindmapstorewithevictions
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI .
add equal ( poly ) method to check if a poly function have the same degree and coefficient
added a null check for the table before calling configureValue to avoid potential NullPointerException when table is not initialized
added error handling for Class . forName ( className , true , classLoader ) . newInstance ( ) in CustomChangeWrapper . java to improve robustness
refactor DistBuildConfig to use ` DistBuildConfig ` instead of ` ConfigPathGetter ` across multiple files to improve code clarity and
fix ( export ) : show warning message when double entry
added JUnit Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue
refactor doJoin method to return a boolean instead of void to improve error handling by indicating success or failure of join operations
removed the getAutodeps ( ) method from JavaLibraryDescription . java to simplify the interface by eliminating unused functionality
updated intent flags in LauncherTimelineCursorAdapter to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper task management when starting a
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable paging order by functionality in the query
updated assertions in RepositoryConventionPluginTests to reflect changes in repository URLs to ensure tests reflect the correct repository configurations
added a new class ` AffiliationTask ` to manage the affiliation of a specific node to facilitate the execution of affil
improve error message for invalid uri
changed the visibility of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling in CacheKey and modified conditional checks in CacheKeyTest to improve performance and correctness of cache key comparisons
updated file type detection implementations across multiple files to ensure compatibility with Unix file systems and improve file type detection functionality
added a call to wsSession . close ( ) in TestWsWebSocketContainer . java to ensure proper resource management by closing the WebSocket session
updated ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManager to use ` getVirtualSensorCallback ( ) ` instead of ` getParams ( ) `
added a condition to check if the context is not removed from the session if the context is before execution to ensure that the security context is not
replaced the variable ` lch ` with ` loopback ` and updated its logic in ` NetUtil . java ` to improve clarity and
replaced BUF _ SIZE with DEFAULT _ BUF _ SIZE and updated related buffer initialization in Zlib . java to improve clarity and
updated KeyInfoReferenceResolver to include secure validation and modified exception handling in several classes to enhance security and improve error messaging for better debugging
added a boolean flag to track if the icon change listener is already installed to ensure that the action listener is only set when the icon is properly
added Russian language support to the Language class to enhance localization capabilities for Russian - speaking users
hhh - 14850 - fix duration conversion in sqm to sql ast converter
added a call to disableStateVerification ( ) in SubstrateGraphKit . java to ensure that frame state verification is properly managed during graph
added cleanup methods and system property management in RobolectricTestRunnerTest . java and TestUtil . java to ensure proper cleanup of system
added support for the " org . slf4j . LoggerFactory " class in the web application context to enable the use of LoggerFactory
added a check for " jar " in the ` ChangePackaging ` class and a corresponding test in ` ChangePackagingTest ` to ensure
updated file download method in FileDownloadViaHttpGetTest and FileDownloadViaProxyTest to use withExtension ( " txt " ) to ensure
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to ensure the buffer is
replaced defaultUnits with preferredUnits in JogService and updated related methods to use preferredUnits instead of defaultUnits to improve clarity and
updated date formatting in DatePatternConverterTest to use UTC TimeZone to ensure consistent date formatting across different time zones
removed redundant return statements in Terminator . java to improve code clarity and maintainability
updated exception messages and added validation for file URIs in FileSystem . java and DistributedFileSystem . java to improve clarity of error messages and ensure correct
use jabrefexecutorservice instead of scheduleddexecutor in jabrefframe # showtrackingnotification
( chore ) camel - ftp : fix flaky test in ftpreconnectattemptserverstoppedit
replaced ConcurrentHashMap with ConcurrentSkipListMap in KeyedProperties . java to improve performance by avoiding unnecessary hash map operations
added ` ignore ` methods to ` JavaUtilLog ` , ` Logger ` , ` Slf4jLog ` , and ` StdErr
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code and improve readability
removed the cleanImage method call from PanelManager . java to streamline image processing by eliminating unnecessary code
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMap and SimpleFS directories to enable configuration of MMap and SimpleFS
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential NullPointerException when ` ic ` is null
updated the assertion in QueryEqualityTest to use " field1 _ s " instead of " field1 " to ensure consistency with field naming con
refactor ExtendedOperatingSystemMXBeanImpl to improve code structure to enhance maintainability and readability of the code
added functionality to install left commands in the SideMenuBar to enhance the organization of commands within the title bar
added a boolean flag ` advanceWindowed ` in ` AppSettings ` and modified ` setUpWindow ( ) ` in ` TweetActivity `
added support for SybaseDatabase in the dropPrimaryKeyGenerator condition to ensure compatibility with Sybase database operations
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] do n ' t reset last recording position when leadership be ready .
replace ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
added error handling for starting the HTTP server in ListenHTTP . java to ensure graceful shutdown of the server and handle potential exceptions gracefully
camel - 15836 - camel - aws2 - s3 : fix checkstyle violation in camel - aws2 - s3
[ hotfix ] [ webmonitor ] fix typo in taskmanagermetricshandler
bug 10663 : do n ' t drop key that do n ' t exist in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that password
added a maxEnergyLimit variable and updated energy limit assignment in VMActuator . java to improve energy management based on fee limits for constant
added ` maxInMemorySize ` property and its getter / setter methods to ` HttpClientProperties ` and modified the ` webClientPlugin ` constructor
refactor Cache class to improve cache management to enhance performance and maintainability of the code
added new test classes for Cucumber - related functionalities to improve testing capabilities and organization within the project
updated the way double values are written in TypeJsonUtils to handle JSON parsing errors and improve robustness against parsing errors
replaced hardcoded values for 656469746564 and 80806564 in Utf8StringBuilderTest . java to ensure consistent
added checks to ensure parameters are only processed if they are set to improve robustness by preventing potential null pointer exceptions during parameter processing
camel - 16400 : camel - circuit - breaker - load - balancing : limit the number of output on load balancing
added a maximum buffered document limit and updated assertion in TestIndexWriterExceptions . java to ensure that the test accurately verifies the maximum buffered documents
replaced ` putUnencodedChars ` with ` Sha1HashCode ` for hash generation in multiple classes to improve performance and reduce memory usage
removed unused enumValue and intValue methods from AsmRuntime . java to clean up the code and improve maintainability
add biomes for mangrove swamp , deep dark , and spooky to biome tag provider ( #
papplet : use a fixed thread pool for async image loading ( # 1188 )
refactor BaseTableUpsertMetadataManager to remove unnecessary parameters and streamline preloading process to improve code readability and maintainability by reducing
updated language strings from " \ u0646 \ u0648 \ u0631 " to " \ u0623 \ u
replaced calls to ` getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( ) ` for improved readability
camel - 16400 : camel - jbang - run should use -- repos = repos to make it easy to configure the jbang instance
added handling for NaN scores in CrawlDbReader to improve robustness by preventing processing of NaN scores
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure temporary files are deleted after tests run
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and added focus
[ hotfix ] [ checkpointing ] make checkpointscleaner thread - safe
added a new file XPathWhiteSpaceTest . java to facilitate XML validation testing using a specified schema file
fix bonsaipersistedworldstate . getmutablewithrollbacknotoverridetrieloglayer ( ) when there be no trie log
refactor FilledNewArrayInstruction class to improve code clarity to enhance maintainability and readability of the code
add timeout to simplenetworktest so that it do n ' t hang .
updated parentPath comparison from substring method to endsWith method to improve clarity and correctness in path handling
added a system . out . println for skin file loading failure to improve debugging by providing visibility into the skin file loading failure
added dirty flag and validation methods in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to manage the state of the accumulator
added a new constant ` UNDEFINED ` in ` Result ` and modified the return statement in ` TestStep ` to use ` Result . UNDEFINED `
updated assertion from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values in transaction registration
make uploadjobmultipartoperation implement IdentifiedDataSerializable and add checkjetisenabled ( ) method
[ hotfix ] [ runtime ] do n ' t swallow ioexception when recover data
bug fix : do n ' t create summary level for non - leaf node
replaced the ` pos ` variable with a ` sizeMask ` and modified the ` ensureAvail ` method to use it to improve memory
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
replaced the variable ' targets ' with ' endpoints ' and updated the array initialization logic to improve clarity and ensure the correct number of endpoints
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated transform function types in TransformFunctionType . java and TransformFunctionFactory . java to include additional parameters to enhance functionality by allowing additional transformations
added getSimpleName ( ) and getEnclosingElement ( ) methods to the VariableElement class to provide a standardized way to retrieve the name and enclosing
updated RFC reference from " RFC3280 " to " RFC5280 " across multiple Java files to ensure compliance with the latest RFC standards
updated version number from 2.17 . 3 to 2.17 . 4 and corrected type casting in SearchAnnotationVisitor to ensure compatibility with the
replaced HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and memory management when restoring selected items
refactor conditional checks in DirectUpdateHandler2 . java for better readability to improve code clarity and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve code clarity and ensure correct file path formatting
updated PreviewPositionHelper to accept a Context parameter and modified insets handling in TaskThumbnailView to improve layout handling based on split - screen mode and
[ java ] do n ' t publish a new leadership term if it be the same a the existing one .
test : fix unit test for error stream
refactor ByteArrayInputStream skipping logic and introduce a new Skip class for testing skip functionality to improve accuracy in skipping input streams and facilitate
refactor conditional logic for prompting updates in UpdaterTask . java to improve readability and maintainability of the code
peer : do n ' t download block if there be too many header
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include additional library dependencies for improved
refactor connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
refactor GranuleDescriptor and GTDataStoreGranuleCatalog to use a new utility class for property access to improve code maintainability and
added a check to send a 500 error response if the response is already committed to ensure that error handling is only attempted when the response is not
updated conditional checks in HttpSession . java for hold and connectionQueue size to ensure proper handling of hold values and simplify polling logic
updated fadeOutFakeTaskView behavior in HomeGestureTutorialController and added feature flags in SwipeUpGestureTutorialController to
change log level from info to warn for unknown component in prefab
updated the external group setup in LdapMockMvcTests to include specific superuser groups to enhance security by restricting access to specific superuser groups
updated thirtyDays initialization in FreezeBalanceActuator . java and added validation in TransferActuator . java to ensure thirtyDays is
updated the lastIndexOf method to use File . separator instead of ' / ' to ensure compatibility across different operating systems
ggb - 1351 fix keyboard button not be show in the gui .
updated GpsMainActivity to use the session ' s description instead of an empty string and updated AnnotationViewFragment to use EventBus for event
added a conditional check for the number of pages in JsoupNonVisualRegressionTest to ensure the test correctly verifies the expected number of
rename androidbufferallocator to androidnativebufferallocator to avoid confusion .
added handling for flags that start with " ! " in Main , PrimaryItem , and Util classes to ensure proper parsing of flags that start with
added a comment to the executeQuery ( ) method in JDBCHistoryCache . java to indicate that the execute ( ) method is intended to
updated string comparison for item use operations in BattlePassManager . java to improve code readability and maintainability
updated the test to use a fixed item count and modified the expected queue size calculation to improve clarity and correctness of the test by using
cloudstack - 4892 : remove unused test code and add dependency to affinitygroupdao
added a null check for the command and modified the conditional check for verbose options to improve error handling and provide clearer command usage feedback
updated LightOutputStream initialization parameters in multiple Java files to optimize memory usage and improve performance
changed the visibility of the Scanned class from package - private to public to allow access to Scanned from other packages
modified the visibility of blank lines in ClassWriter . java and added a new class T8032819 . java with multiple test methods to improve
removed assertion for the length of the sn variable in Person . java to simplify the code by eliminating unnecessary assertion checks
added null check for the file extension before checking it in the EXTENSIONS _ DENYLIST to improve robustness by preventing potential NullPointerException
do n ' t show contact right button menu if there be no contact
[ hotfix ] [ runtime ] fix checkstyle violation in simpleslot
simplified screen counting logic in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl to improve fd handling and resource management to enhance code clarity and ensure proper resource management during socket operations
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring removed items are
updated log message from " offsets are from the center of element " to " offsets are from the element ' s in - view center point "
added a new file ` bug4865918 . java ` that implements a Swing GUI with a custom scrollbar to address bug 4865918 by testing block increment of the scrollbar
replaced the ` VelocityEngine ` initialization with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by using
updated import statements in QuestCommand . java and added group triggers functionality in QuestCommand . java to streamline import statements and add group
replaced direct calls to ` startXmlFileChooser ` with a static method ` startXmlFileChooser ` in ` AccountsActivity ` to improve
added lombok . tostring ( callsuper = true ) to partitionchangeevent and tbapplicationevent
updated service configuration to use a constant for the configuration URI to improve maintainability and readability of the configuration code
removed viewport component and setJScrollPane in BrowserPanel to streamline scrolling functionality for improved user experience
added KEYCODE _ FORWARD _ DEL case to LwjglInput and updated related cases in ParticleEditor and Layout to enhance
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving the content type parts to optimize performance by avoiding
added regex pattern matching for author information in JSDoc . java to enhance comment processing by identifying author information more effectively
updated metrics constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES to CREATE _ TOTAL
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig for table management to improve error handling and
updated oauth2LoginLinks method to accept MultiValueMap as a parameter to enhance flexibility in handling query parameters during oauth2 login
updated Hijrah locale from " Hijrah - umalqura " to " Islamic Umm al -
added support for Firefox in WebAudioWrapper to ensure compatibility with both IE and Firefox environments
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` to enable custom server interceptors for gRPC requests
updated table creation statements in TestCompatibility . java to use default charset to ensure compatibility with the latest database schema changes
removed unnecessary calls to ` kill ( false ) ` and ` allocateOutgoing ( ) ` in ` WriterRecordBatch ` and ` StreamingAggTemplate
[ hotfix ] [ runtime ] fix typo in executiongraph
added a ` hasFrom ` flag to the ` Delete ` class and updated related methods in ` DeleteDeParser ` and ` DeleteTest `
refactor synchronization logic in SynchronizeFolderOperation . java to improve clarity and functionality to handle multi - status scenarios more effectively
refactor applicable test matching logic to use a new utility method ` applicableListTests ` to improve code readability and maintainability by centralizing
updated regex pattern in LogAnalyser . java for improved accuracy to ensure accurate parsing of log lines in the analysis process
( chore ) camel - google - cloud : enable integration test for camel - google - cloud
fixed - rsearch . value ( ) and rsearch . isminexclusive ( ) method do n ' t work in redis 6.0
[ ds - 3952 ] update cclicensestep to support select change and no license
added a null check for ` ifcRoot . getGlobalId ( ) ` before adding it to the guidIndex to avoid potential ` NullPointerException ` when
replaced ` . equals ( ) ` with ` objects . getComparisonStrategy ( ) . areEqual ( ) ` in ` OptionalAssert .
updated memory management logic in NoNewLineParagraphCssApplier and ParagraphCssApplier to handle memory limits more efficiently to improve memory management efficiency
added a new file TestArrayCopyToFromObject . java implementing a test method for ArrayStoreException handling to ensure that ArrayStoreException is correctly thrown when
updated string insertion syntax for Python paths in BuckPythonProgram . java to ensure correct handling of paths with special characters
fix bad logic . need to postprocess if socket be * not * close and it be an async request .
refactor findfiles method to accept visitallfiles parameter and deprecate old method
added JUnit Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to temporarily disable the test due to
[ hotfix ] [ test ] fix flaky testinternalinputbuffer
make splclassloader . autoloadcall more thread - safe
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and removed HLS support in ` PlaybackController `
updated JAAS configuration writing in BasicKrb5Test and refactored server and backend paths in KDC and OneKDC to
added a check for jsr250AttributeFound before returning ACCESS _ DENIED or ACCESS _ ABSTAIN in Jsr250Voter
updated import statements in MP4Parser . java to include specific Box classes for better organization to enhance code clarity and maintainability by organizing
added HS2 _ PROXY _ USER constant and modified session parameter handling in ConnectionFactory . java to enhance security by ensuring sensitive session parameters are
camel - 14284 : camel - hdfs - compress support bzip2 and snappy
added a sleep statement to the HttpClientTest class to allow time for asynchronous operations to complete before proceeding
fix xssfcell . setcelltype ( cell . cell _ type _ blank ) to work with multi - cell array formula
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve text rendering accuracy and clarify
replaced hardcoded ISTIO _ BIN _ PATH with direct reference to Commons . ISTIO _ VERSION in Fabric8Ist
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( )
patch by jbellis ; review by brandonwilliams for cassandra - 1348
fix putfromloadallbackupoperation . existinmemory ( ) to return false if key do not exist in memory
updated the return statement in ResponseFlag . java to include ERROR _ BIT instead of LENGTH _ BIT to ensure ERROR _ BIT is included in the
do n ' t add read policy if they do n ' t exist
added a SoftReference to ConcurrentHashMap for composite fonts to improve memory efficiency by reusing CompositeFont instances instead of creating new instances
updated height calculation logic in Tree . java to initialize prefHeight to 0 and adjust ySpacing accordingly to ensure consistent height adjustment for node height
[ drools - 5270 ] fix dmn feel validation error message ( # 2296 )
removed unused import statements from multiple Java files to clean up the code and improve readability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and modified execution logic in ` NavHandleLongPressInput
added null checks for ` id ` in ` ElementFactoryImpl ` and modified edge handling in ` ImportContainerImpl ` and ` ImporterG
[ beam - 8470 ] fix nullpointerexception in fnapicontrolclient and beamstategrpcclientcache
nifi - 1341 : binfiles should use sessionfactory . createsession ( ) when create Bin object
refactor the logic for finding the closest CoreBuild in Teams . java to improve efficiency by eliminating the need for a tile lookup
added a check to skip copying content - length header in RestTemplateCopyHeaderFilter to improve request handling by avoiding unnecessary copying of content -
updated Java2TypeScriptTranslator to handle class and character literals and improved test assertions in SyntaxTests to enhance TypeScript translation accuracy and ensure
updated filter calculations and sizing parameters in FilterFactory , ChannelizerViewer , PolyphaseChannelManager , and TwoChannelOutputProcessor classes to improve
added success tracking and handling for region server operations in Canary . java to improve monitoring and error handling for region server operations
[ hotfix ] [ cassandra ] remove node . environment from testcassandraconnector
added a call to resetCursorPosition in KahaDBStore . java to ensure the cursor position is reset after data changes
added minimum size adjustment in CallDialog and updated new frame dimensions in OneToOneCallPanel to ensure proper sizing of the call panel based on
fix loss of state information during world gen
simonstewart : make testhttpsamplersagainsthttpmirrorserver non - static
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to improve code clarity and ensure proper removal of principal entities
removed the parameter from the getTableSnapshot method call to simplify the table snapshot retrieval process
improve handling of poll error in apr connector . thanks to benjamin for the patch .
updated error message for licenseKey in AndroidGradleBuilder . java to provide clearer guidance on how to retrieve the license key from the
replaced ` getFileName ( ) ` with ` getDisplayName ( ) ` in ` DLNAResource ` and removed the ` isInsideTranscode
[ drools - 3540 ] fix relative package name extraction in kie - ci
added a conditional check to skip tests on features running version 19 and above to ensure compatibility with features running earlier than 19 and above
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method and updated its usage in ` AbsSwipeUpHandler `
[ hotfix ] [ javadoc ] fix typo in leaderlatch javadoc
added methods to initialize ZKSNARK parameters in SolidityNodeHttpApiService to facilitate the initialization of ZK
updated transaction confidence settings and added depth handling in Transaction . java and TransactionConfidence . java to improve transaction depth management and ensure proper handling of
refactor longtitude variable name from longtitude to longitude to improve code readability and maintain consistency in naming conventions
initialize platformName to " ios " to ensure compatibility with iOS platform configuration
refactor PageEditClient to improve code structure to enhance maintainability and readability of the code
refactor conditional checks for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code organization to enhance maintainability and readability of the code
added error handling for outgoing frame processing in AbstractExtension . java to improve robustness by logging exceptions during frame processing
replaced manual exception handling with privileged access to obtain the caller class loader to improve security by ensuring privileged actions are performed on the caller
added a method to retrieve all child categories and set their parent to null to ensure only relevant child categories are retained in the feed
updated the dialog title for different contrib types in ContributionManagerDialog . java to improve user experience by providing context - specific titles for different contrib
added a BigDecimal ' vwap ' field to the Ticker class and its corresponding getter / setter methods to enhance the Ticker class with
added a noWidgetsView parameter and updated bottom inset handling in SearchAndRecommendationsScrollController . java and WidgetsFullSheet .
add rendergraphapi to worldrendererimpl and add tintnode api to rendergraph
added a method to set the primary color in NCFirebaseMessagingService to ensure consistent theming across the application
updated ShadowUsbManagerTest . java to improve test coverage to enhance reliability of the ShadowUsbManager functionality
updated calculations in AbstractDifferenceRecommenderEvaluator and added logging statements in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve accuracy
added a call to ` this . selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration updates correctly
added a minimum value check for stroke width and height in AndroidGraphics . java to ensure that stroke width does not exceed 1 to prevent rendering issues
replaced HashMap with LinkedHashMap in multiple Java files to maintain the insertion order of elements in the options map
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to utilize a more efficient closure management approach
( chore ) camel - core : migrate to junit5 for camel - core
added new files WeWebsocketIngressIntegratedBootstrap . java and WeWebsocketPluginTest . java to implement websocket integration tests for the Sheny
remove unused test and fix checkstyle issue
refactor authentication equality check to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a check for the system property " jnr . ffi . compile . x86asm " in X86MethodGenerator . java to ensure
replaced direct calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and reduce
added a new annotation ` Insecure ` and modified the ` MessageBuffer ` class to utilize it to enhance security by allowing access to sensitive data
added new configuration variables for various Hive configurations in HiveConf . java to enhance configuration flexibility and support additional Hive features
replaced ` Set < String > scopes ` and ` Collection < Policy > policies ` with ` HashSet < > ( ) ` and added null
lucene - 1342 : make multireader . decrefonclose final
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 classes to improve code organization
simonstewart : fix flaky test in inputfieldtest
refactor ` getFirstTypeArgument ` method to be final across multiple classes to enhance immutability and prevent subclassing
replaced Set < Integer > with KeySet < Integer > and Values < Integer > in Int2IntHashMap . java to simplify method signatures
added a duration parameter to the FlipTransition constructor and updated background color handling in FlipTransition . java to allow customization of the transition
removed the trace logging statement for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary
updated majorVersion and minorVersion from 8 to 9 in ForgeVersion . java to reflect the latest release version
replaced System . err . println statements with LowLevelLogUtil . log statements for warning messages based on Java version to enhance logging clarity
[ javaparser ] add support for java 16 and java 14 language
updated conditional logic for setting background padding in ExpansionViewHelper . java to improve layout responsiveness based on the number of replies
do n ' t invoke partitionbackupreplicaantientropyoperation if there be no namespace
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information associated with seed URLs
added a null check before creating a cloned pattern in PatternBuilder . java to avoid potential NullPointerException when declaration is null
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
ww - 3506 add package name to action config if it be not empty
updated assertions in IterableTest to use ` Arrays . < Object > ` for null handling to improve type safety and clarity in null checks
added stream methods to MapIterable and PrimitiveObjectMap for improved performance and efficiency to enhance data processing capabilities in MapIterable and PrimitiveObjectMap
clone the notifInfo object before returning it to ensure that the original notifInfo is not modified externally
[ web ] fix case - insensitive check for command key .
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future feature additions
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap ` , and modified ` searchName
added a null check for the resource ID in PackageResourceTable and updated the default ResourcesMode in RobolectricTestRunner to ensure proper
added a condition to check for empty ulSize and ulPos before retrieving table buffers in TrueTypeFont . java to ensure proper handling of font
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static list to improve flexibility by allowing multiple message readers to be
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed the check for MavenDeployer in StandardMavenAuthenticationProvider . java to streamline the code by eliminating unnecessary checks
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and error handling for SSL operations in LinkyHandlerFactory and EnedisHttpApi to improve SSL connection reliability and provide
added imports for OracleSqlOperatorTable , SqlStdOperatorTable , and SQLStdOperatorTable , and refactored HiveFunctionRegistry to use
http : / / issues . apache . org / activemq / browse / amq - 2696 - fix jmx mbean name
renamed the parameter ` alias ` to ` possiblyFlavoredAlias ` and modified the method to return an additional string to improve clarity
camel - 14284 : fix odata2 consumer to return 0 for empty feed
added support for version 0.13 . 1 and 0.13 . 0 in MetaStoreSchemaInfo . java to ensure compatibility with different Hive
server : fix vm expunge error in advanceexpunge ( )
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that certain methods or classes are outdated and should no longer be used
refactor ONDashClockExtension and AlarmReceiver to use a dedicated method for title extraction to improve code readability and maintainability by
renamed the class ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated related assertions to improve clarity
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to improve performance by avoiding unnecessary commit calls
added an ` TestIdleListener ` interface to the session initialization in ` AsyncTimeoutTest . java ` to enable handling of idle states during session
add test id to the bigquery table name to make it unique
added background resource setting and resetting of the icon in HotseatPredictionController and BubbleTextView to improve visual clarity and ensure
corrected the spelling of " getFlushAfterQuery " to " FlushAfterQuery " in MondrianProperties . java to improve
[ native ] add abstract test for native query runner
refactor active features retrieval logic in LIMEExplanation . java and add assertions in LIMEColumnarTest . java to improve code cl
added a ` List < String > ` argument to the ` InstallCommand ` and modified the ` LaunchBehavior ` and ` InstallCommandTest `
replaced direct calls to ` getArea ( ) . getCurrentParagraph ( ) ` with a local variable ` area ` to improve code read
added a check for the availability of the pipeline state in ContainerBase and StandardContext classes to ensure that only valid components are processed when the pipeline
added clipping to the background view in QsbWidgetHostView to enhance the visual appearance of the widget ' s background
added time tracking and logging for flag processing in SQLManager and modified flag parsing in BlockTypeListFlag and PlotArea to improve performance monitoring and
added conditional logic to enable or disable the depth test based on whether the floating text is occluded to enhance flexibility in rendering behavior based on
move libffi context to target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ libfif _
replaced direct usage of ` TransactionDefinition . PROPAGATION _ REQUIRED ` with a variable ` propagationBehavior ` to improve flexibility by allowing
added support for L1Regularization and L2Regularization in LayerValidation . java to ensure proper configuration of layer regularizations based on available
added error handling for reading and writing in AbstractChecker . java to improve robustness by logging errors during read / write operations
changed the visibility of the ` colorStack ` variable from static to instance - level to allow multiple instances of ` GlyphLayout ` to maintain their
updated method calls from ` getMappedStatement ( id , false ) ` to ` getStatement ( id , true ) ` and ` hasStatement
convert tradableIdentifier and currency to lowercase before retrieving the depth in BTCEPollingMarketDataService to ensure case - insensitive depth retrieval
fix color test after hsbtype change ( # 14631 )
[ eip - 6110 ] remove unused field ` versionedhashes ` from ` enginepayloadparameter `
set trigger price to an empty string in MutableOfferView to ensure the trigger price field is reset when it changes
added error check to studentfeedbacksubmissioneditsaveaction to ensure that the home page is redirected when an error occurs
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2649 addendum fix npe in hstore . getresult ( )
# 113 - beaninterceptor . setloadedproperty ( ) should set changed property if bean be new or dirty
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control whether to always
added methods to set layer type and paint in ShadowRenderNode to enable functionality for managing layer types and paints in the rendering process
replaced specific imports with wildcard imports and added visibility handling for the popup menu in LWChoicePeer . java to improve code readability and
removed redundant null check for insert in StressProfile . java to streamline code by eliminating redundancy
replaced ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` across multiple
added null check for requests in MockServerEventLog and improved logging in HttpForwardObjectCallbackActionHandler to enhance robustness by preventing
[ hotfix ] [ runtime ] add warn log when property file can not be load
replaced the use of ` SessionDataSet ` with a try - with - resources statement in ` ClientMain . java ` to ensure proper resource
added a condition to check if the network supports multicast and the interface is up to ensure proper handling of multicast connections based on the network interface
updated sqlCommand initialization to include length parameter to ensure SQL commands do not exceed specified length limits
updated receiverCapsule methods to set the latestConsumeTime and setLatestConsumeTimeForEnergy in BandwidthProcessor and EnergyProcessor
added a new method ` invalidSessionStrategy ` to ` SessionManagementConfigurer ` to allow configuration of an invalid session strategy
improve error message when unable to serialize protobuf annotation
added a new test class ` MapAssert _ containsKeys _ Test ` for verifying keys in map assertions to ensure the correctness of key
updated JdbcProxyGenerator to use a DelegatorGenerator for generated statements and added JDBC4TemporaryPreparedStatementMethods interface to enhance proxy generation capabilities for JDBC
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated method signatures in ` DirectUpgradeTest ` to improve container initialization and
changed the type of ` ImmutableMultimap ` from ` ImmutableMultimap ` to ` ImmutableListMultimap ` in ` CxxFlags . java ` to improve
pdfbox - 4892 : use point2d instead of point2d . float , a suggest by valerybokov
added a static final EMPTY array and refactored the initialization of the hooks array in Method . java to improve memory efficiency by avoiding unnecessary
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` constructor and modified the authentication return logic to ensure that the authentication manager
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enable the listener to utilize the provided ` JobExecution
pdfbox - 4892 : use canexecute ( ) instead of canwrite ( ) in sharedlibraryloader .
doc : add hastimeseriesquerylanguage ( ) method to time seriesquery and time seriesqueryprovidortest
bug 62166 : fix typo in resultcollector and saveservice
added constants for Battery level , annotations , time , distance , and profilename in BundleConstants . java and updated CustomUrlManager . java
change the return type of the applyRule method from Hashtable to Map to allow for a more flexible implementation of the applyRule method
g3d - 335 : use absolute - screen - locateable instead of g3d - 335
updated JoglGraphics and ProjectiveTextureTest to use RGB565 format and changed texture and filter settings to improve texture rendering quality and
refactor ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve method usability by allowing access to the
camel - 14284 : property component intercept from uri should use resolve property placeholder . thanks to daniel for the patch .
updated the condition in ActionScheduler to check if the current time is less than or equal to the last attempt time to ensure that the action execution
updated dbg _ zip assignment to use a temporary directory and added null check for debug _ log before replacing it to ensure the debug zip file is
fix the notification overlay to not display the hud when it ' s hide
reset gate and trigger when pipe be reset
added Locale handling in TestSupplementary to ensure the default locale is restored after running tests to ensure tests are executed without affecting the default locale
updated the team color from 0.8 f to 0.4 f in the Team constructor to improve the visual distinction of the team
replaced HashSet with ArrayList for activeMatchedStates and added conditional logging for finer - grained logging to improve performance and ensure logging is only
updated the condition to check for null annotations in SoftAsserts . java to simplify the logic for checking expected exceptions
added error logging for invalid JSON and enhanced exception handling in StoragePluginRegistryImpl to improve debugging and provide clearer error messages during plugin saving
refactor call tree printer to use ` tocsvfile ` instead of ` reportutils ` to improve code readability and maintainability by redu
added null checks for ` note ` and ` noteTmp ` variables in ` DetailFragment . java ` to improve robustness by ensuring ` note
added functionality to track and calculate the number of peak tasks in AssetManager to improve task management and ensure accurate loading calculations
simonstewart : make firefoxdriver . default _ enable _ native _ events platform - independent
added support for customizable score and fetch interval in the Injector class to enhance flexibility by allowing customizable score and fetch interval configurations
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . List
updated condition in CoreContainer and added a method to check if zkController is null and introduced a test for sharing schema to enhance schema sharing functionality
updated sizeInBytes methods to include a boolean parameter for improved clarity to enhance readability and provide more detailed information about memory usage
updated assertions in VersioningTest to use assertNull instead of assertEquals for clarity to improve readability and ensure proper handling of null values
updated SQL query in ` AbstractJdbc2DatabaseMetaData ` and added a new test for domain columns in ` DatabaseMetaDataTest ` to ensure correct
[ java ] do n ' t try to append a new leadership term event if it ' s already complete .
removed unused method ` buildMediaType ` from ` WebClientPlugin . java ` to streamline code by eliminating unused functionality
replaced calls to ` fillUsingLengthPrefix ` with ` fill ` and ` fillAndGetIndex ` in multiple classes to simplify method names and
refactor compaction logic in AcidUtils and add a new test for cleanup after IOW and major table compaction to improve code readability and
set default value for immutable storage scheme and qualifier encoding scheme to NON _ ENCODED _ QUALIFIERS if null to improve robustness
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customizable pojo and rest producer
replaced hardcoded string " cache " with CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability by using
replaced ` AesGcmSivProtoSerialization . register ( ) ` with ` AesGcmSivProtoSerialization . register
added wooden _ slab item to the ore dictionary to allow wooden _ slab to be replace with wooden _
refactor multiple session - related classes for improved organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 ( 3.2 - snapshot )
hhh - 14850 remove skipfordialects from denormalizedtablephysicalincidentsetest
adjusted the center positioning of the sprite batch drawing in HelloWorld . java to correct the positioning of the sprite batch rendering
updated permission checks in PlayerFunctions and modified string representation in PlotId and WorldGuardListener classes to improve accuracy of permission checks and ensure proper formatting
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version should no longer be used in favor of a newer
updated print statement formatting in SSLSocketImpl . java to improve readability and maintain consistency in logging output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure the SQL parser correctly handles signed integer
refactor dependency type handling in CoNLLUOutputter and enhance semantic graph processing in SemanticGraphCoreAnnotations to improve code clarity and
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to utilize ` parseContext . makeTargetDescription `
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild . init ( ) . test ( ) `
replaced ` Block . blocksList . length ` with ` 256 ` in ` configBlocks ` initialization to optimize memory usage and improve performance
updated logging messages in BukkitMain . java and modified title handling logic in BukkitMain . java to improve clarity of supported
updated SQL statement escaping logic in AbstractSQLChange . java to correctly handle PostgresQuestionmarkOperators to ensure proper SQL syntax handling for PostgreSQL databases
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` B
added checks for file names ending in " . adoc " and updated shortname and permalink assignments in BuildNavAndPDFBody . java to ensure
updated the constructor of MqttBrokerConnection to include a false parameter to ensure compatibility with the latest version of the Mqtt library
updated the retrieval of ChangeSet to use the root change log if available to ensure robustness by avoiding null pointer exceptions when the root change
( chore ) camel - rocketmq : fix typo in staticmethodinterceptor and loginfo
added database drop functionality in TestHiveMetaStorePartitionSpecs and added logging in TestObjectStore to improve database management and facilitate
added a " order _ currency " parameter to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw to include a currency
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
updated method checks from ` method . getReturnType ( ) . getFullyQualifiedName ( ) ` to ` method . getReturns ( ) . isVoid
replaced ` YAML _ READER ` with ` YAML ` and added a new ` listYamls ` method in ` YamlResource `
removed public access modifier from equals and hashCode methods in Marker . java to enforce encapsulation within the Marker class
replaced anonymous inner class with lambda expression for thread creation and added a new method ` awaitTermination ( AsynchronousChannelGroup group ) ` to
added unit tests for the ` PersonWithAList ` class in ` MongoTemplateTests ` and created a new class ` PersonWithAList
ggb - 1186 sync applet panel size by difference between width and height
updated toolbar visibility management in DrawerActivity to implement a delayed disappearance of the toolbar for improved user experience
refactor ` initFirstPageReader ( ) ` and ` isExistOverlappedPage ( ) ` methods in ` SeriesReader . java `
server : do n ' t try to save password if vm be not run
set default values for usingOutputStream , usingWriter , and isCharacterEncodingSet to false to ensure proper resource management and prevent potential memory leaks
added a check to warn assignment side effects in GroupDialog to enhance security by preventing unintended side effect warnings during group assignment
refactor JSON and JSONObject conversion methods to improve code readability and maintainability
updated icon size check from maxHeightWithMargin to maxWidthWithMargin in FileUploadApiController . java to ensure proper handling of icon dimensions based on
updated method signatures and import statements in RegisteredServiceProperty , JwtTokenCipherSigningPublicKeyEndpoint , JwtTokenCipherSigningPublicKeyEndpointTests , and Jwt
added mime type checks for UNIX and non - Windows environments in Basic . java to ensure correct handling of file content types across different operating systems
implement netty ' s jzlib decoder and encoder for netty connection
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and refactored related logic in ` Class ` and ` MethodHandles `
renamed the ` doConnect ` method from ` doConnect ` to ` connect ` in ` ChannelProvider ` and ` ProxyChannelProvider `
added functionality to handle empty final columns in CSV files and created a test for empty final columns to ensure that CSV processing handles empty final columns correctly
added compass Gravity and margins to NearbyMapFragment to enhance the visual appearance of the map fragment
added a test method ` testInterpolation ` to ` GeoPathTest . java ` for distance calculations to ensure that the distance calculations are functioning
added HiveException to the getLeafFilterBuilderByType method and modified exception handling in ParquetFilterPredicateConverter to improve error handling and provide clear
added support for setting language for video streams in LibMediaInfoParser to ensure current audio track language is correctly set based on the provided value
added a warning log for compatibility issues with schemas in the new version to inform users about potential compatibility issues
replaced ` System . arraycopy ` with ` addAll ` in multiple array - related classes to improve code readability and reduce redundancy
reformatted the code for closing the connection in DataSourceProxy . java to improve readability and maintainability of the code
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of client registrations to improve flexibility in
added a method ` resetUIState ( ) ` to reset the UI state in ` SchemaUpgradeHelper . java ` to ensure the UI state
added a failedStep flag and modified conditional logic in JUnitReporter to handle pending exceptions to improve reporting accuracy by distinguishing between strict and non
add playerselector . java to allow . in entity selector ( # 82387 )
added Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection management to improve connection management and performance in concurrent scenarios
added ` stringType ( ) ` method calls to ` CoreOptions . java ` to enable string type handling in the application configuration
updated token handling in HqlQueryRenderer and updated context configuration in EclipseLinkUserRepositoryFinderTests to ensure proper processing of character and parameter
updated HTTP status handling to use constants instead of magic numbers to improve code readability and maintainability by using named constants instead of magic numbers
pdfbox - 4892 : avoid npe , a suggest by valerybokov
fix hikariproduceretest failure due to slow connection creation
updated ParquetFormatPlugin and ParquetGroupScan to utilize ParquetTableMetadata for file selection handling to improve metadata file existence checks and
updated the success determination logic in Jsr199Javac . java to utilize BuckJavacTaskProxy for javac
added a BaseTableModelListener to the DefaultSortedTableModel to ensure the table model updates correctly when changes occur
updated validation condition from 49152 to 65535 in ServerConfig . java to ensure that the number is within the acceptable range of 65535
added imports for DocumentsContract and updated root URI handling in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with
removed the startLogging method call from MainApp . java to streamline logging process by eliminating unnecessary logging calls
added ThrowableAnalyzer to handle RequestRejectedException and modified exception handling in FilterChainProxy to ensure proper handling of wrapped exceptions and improve error reporting
updated the ` StringBuilder ` class to use ` this . length ` instead of ` length + length ` and modified the ` arraycopy ` method to
pdfbox - 4892 : throw an exception if empty filterlist be pass to filter . decode ( )
add stopwatch class to make it easy to stop thing
removed unnecessary whitespace in PListStore . java to improve code readability and maintain consistency
added @ Deprecated annotation to multiple Continuation classes to indicate that these classes are outdated and should no longer be used in favor of newer implementations
[ hotfix ] [ zeppelin - 4892 ] fix context class loader in interpreter server
fix nullpointerexception in commandsourcestack . getentity ( ) . close # 3898
updated minSdk version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
corrected the parameter name from ' indexInTickArray ' to ' tickArrayIndex ' in the timerIdForSlot method to improve code
# 1188 - add getsimplename ( ) method to cqueryplan ( # 1188 )
updated URLs in BasePage and added a new WroSassProvider class with pre and post processors for Sass processing to ensure correct rendering of
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of showing the latest
changed the parameter name from " appContextLocation " to " contextConfigLocation " across multiple files to clarify the purpose of the configuration
refactor exception handling in OCSPChecker to use instanceof check for CertPathValidatorException to improve clarity and maintainability of exception handling
benchmarker : add option to disable write output solution
bulk client regen : set maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify slice size reopening functionality to address issue # 815 related to mapdb
added a shapeless recipe for pipe waterproof and slime ball in BuildCraftTransport . java to enhance gameplay mechanics
[ mahout - 1841 ] fix arrayindexoutofboundsexception in sequentialaccess sparse vector
added support for handling shulker entities in the BukkitMain and EntitySpawnListener classes to ensure that shulker entities are
added a ` getDebugLogger ( ) ` method to ` DIHWriter ` and ` SolrWriter ` classes to provide access to the debug logger
add warn about long destination name and mkahadb for :
replaced the instantiation of UpToTagChangeSetFilter with a new instance of UpToTagChangeSetFilter and added a check for tag matching to
[ beam - 8470 ] [ beam - 8470 ] use java . util . list instead of java . util . list in beam -
refactor BrokerRoutingManager to improve code readability to enhance maintainability and facilitate future updates
replaced Color . gray and Color . green with Color . GRAY and Color . GREEN in CandlestickRenderer . java
refactor layout parameter handling in InsettableFrameLayout to use TypedArray for better type safety to improve code clarity and maintainability by
added a new method ` duration ( ) ` to the ` BuildTargetDurationListener ` class and updated related tests to include it to enhance functionality
replaced ` @ Profile ( " " ) ` with ` @ Assume . assumeTrue ( ) ` in multiple integration test classes to ensure tests
added a null check for the user object before processing claims in OAuthConfirmationController . java to avoid potential NullPointerException when user is null
camel - 16400 : added advicewith to allow to replace a route from an endpoint .
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by avoiding blocking operations
fix listpublicipaddresses api to list all public ip address by source network id
added tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure correct behavior of the isIgnoringBatteryOptimizations method across
updated the way the version property is retrieved in Jetty . java to allow dynamic configuration of the version based on the build properties
added unit tests for verifying invocations with different verification modes in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct behavior of verification
tregex : fix npe in tregexexecnode when no match match
updated the profile start method to include a foreground option to enhance the user experience by providing a visual indication of the profile ' s status
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve resource management
replaced ` Map < String , String > ` with ` String [ ] ` for parsing field names in ` MetadataIndexer . java ` to
updated file logging to use file name instead of file object to improve clarity of log output and ensure proper view management
updated skippedEntries to include exception messages to improve error reporting for skipped entries in ClassFileReader and JdepsTask
added link storage functionality to Fetcher and updated FetcherMain to utilize Lucene for better indexing and indexing to enhance document storage management and
updated the ` populateBubble ` method to include an existing ` existingBubble ` parameter and modified its usage to enhance functionality by allowing the
[ hotfix ] [ runtime ] remove unnecessary warn log in scheduleroutepolicy
refactor buildRpcExt method to accept a single method instead of an array to simplify method handling by eliminating unnecessary array processing
[ java ] use nak _ multicast _ delay _ generator if destination be multicast .
replaced GsonBuilder with Gson for JSON serialization and improved error handling in ClientInformationResponseView . java to enhance JSON serialization capabilities and handle
added a check for ` openOrder . getFieldAmount ( ) ` before setting the average price in ` HuobiAdapters . java ` to
removed the rawExecutionReports method from the BinanceStreamingMarketDataService class to simplify the code by directly subscribing to the execution report
added a new method ` fail ( Exception e ) ` to ` LdapTimeoutTest . java ` and modified the failure handling logic to improve error
if the user dictionary file do n ' t exist , do n ' t attempt to read it
added a check for password file aliases before updating the password in AmbariServerConfigurationHandler . java to ensure that passwords are only published when
added a check to skip parsing of already parsed segments in ParseSegment . java to improve efficiency by avoiding redundant parsing of segments
[ hotfix ] [ yarn ] add yarn . application . attempt - failures - validity - interval to yarnconfigoptions
do n ' t swallow classnotfoundexception when h2 driver be not include
hbase - 25850 add default readtype to table snapshot - based inputformat scanner ( # 258 )
added fixed height and width options to the LoginInstanceRequest class to enable dynamic adjustment of instance display dimensions based on user - defined settings
added a cornerRadius parameter to the update method in ActivityControlHelper and related classes to allow dynamic adjustment of corner radius during animations
updated COMMANDS _ TO _ REMOVE from " DESCRIBE " to " DESC ( RIBE ) " and added filtering for cross product
added a retry mechanism for retrieving a connection from the connection pool in TxnHandler . java to address a potential BONECP bug to improve reli
change method name from ` txnEnsureReserve ` to ` txnCheckReserve ` and add a new method ` txnEnsureBackupReserve
added a final field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage the contents of the ` strings ` array
updated DELETE statements to use " DELETE CLIENT SELECT " instead of " DELETE ROWS " in CostBasedDecisionIT . java and added a new
added retryability check for SocketException in BaseServiceException to ensure proper handling of " insufficient data written " in error scenarios
added an ` ImmutableList < String > ` parameter to multiple methods in ` AdbHelper ` , ` AndroidDevicesHelperFactory ` , and `
updated the pattern for the SeedPattern in SortTest . java to allow for additional characters in the seed string to enhance flexibility in specifying seed
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` iterableEntries ` to improve code clarity
simplified the return statement in Workspace . java by removing unnecessary conditional check to improve code readability and maintainability
added a ` transmux ` boolean parameter to the ` ComponentListener ` constructor and updated related methods to enable conditional transcoding based on media
added localization functionality to the Picker class to enhance user experience by ensuring localized values are properly localized
camel - 14263 : camel - cxf - rs - do n ' t fail if the endpoint do n ' t find the
hhh - 14850 - handle lock acquisition and pessimistic lock in postgresql 8.1 dialect
added a null check for queryId in TestJdbcDriver2 and modified visibility annotations in HiveStatement to enhance code robustness and clarify
[ beam - 8470 ] add test that use unbounded pardo
updated HTML content formatting in GpsSimpleViewFragment . java to simplify file name display to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter from joinlogasfollower method .
replaced direct assignment of ` getHttpExchange ( ) ` with a local variable ` exchange ` in ` HttpSender . java ` to improve code
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and updated its
added null check for ` tree ` before processing markers in ` Recipe ` , ` SearchResult ` , and ` Markers ` classes to improve
use double instead of float for font size in xwpfrun . getfontsizeasfloat ( )
[ coo ] addressbookdocooresultparser do n ' t wrap email in an array
updated exclusions handling in RawMavenResolver to use a set instead of an empty set to improve flexibility in managing artifact exclusions for dependencies
added null checks and updated currency pair handling in DSXAdapters and DSXPairInfo classes to improve error handling and ensure proper initialization of exchange
[ hotfix ] [ table - common ] fix checkstyle violation in test
[ drools - 90 ] fix incremental build failure when kieservicepom be invalid
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before invoking ` defineOwnProperty ` to
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
[ gr - 16922 ] remove methodhandles . publiclookup ( ) . findstaticgetter and methodhandles . publiclookup ( )
added a parameter annotation for ` java . util . concurrent . CompletableFuture ` in ` DefaultNullnessAnnotations . java ` to enable the use of
updated the calculation of ` mFreezeCheckPoint ` from ` 9000 ` to ` 10000 ` in ` PlaybackController . java `
removed unused imports and updated internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline the code by eliminating red
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshallIn ` to ensure correct type
refactor TabsAndIndentsVisitor to improve indentation handling for method invocations to enhance code readability and maintainability by clarifying
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter . java to utilize JUnit ' s
updated the column writing method in HtmlProcessInformationsReport . java to use a wrapped text element to improve the readability of the report by
resolved - issue batch - 1342 : batch - 1343 : fix nullpointerexception in simplejobrepository
added a condition to check if the media folder should be hidden before adding the mon to the root to ensure that the mon is only added when
added null checks for actors in SplitPane and updated widget handling logic to improve robustness by preventing null pointer exceptions
added support for parameterized Java types in RemoveUnusedImports . java to enhance type management by including fully qualified type parameters
fix npe in uniquemodlistbuilder when select an empty modinfo list
changed logger initialization from private final to static final in TicketGrantingTicketImpl . java to improve performance by reducing object instantiation overhead
updated the timeseries root version from SNAPPY . RLE to SNAPPY . 81 + 12 in PhysicalPlanTest . java to ensure
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to handle enum ordinal values to improve value
updated conditional logic in CPlatformResponder and added methods to check locale and character modifiers in LWCToolkit to enhance character input handling for
[ java ] set aeron publication connection timeout to avoid test failure .
added a check to return false for specific request URIs in GTVGFilter . java to prevent processing of specific CSS , images , and favicon
added an assertion to verify the installation success in TestUtil . java to ensure the device is rooted before proceeding with the installation process
no effective change - code cleanup - ignore test for oracle
updated assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect the correct number of enabled secure transport protocols to ensure tests reflect the correct
updated Java library references in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of the Java library
added a condition to check if dismissing the haptic is not running before proceeding to improve user experience by preventing unintended
fix mixineventworldexplosion . cause to include projectile source
added SuppressLint annotation and implemented ItemId method in SymbolInputAdapter to suppress lint warnings during item ID retrieval
removed the " limit _ bids " and " limit _ asks " parameters from the getBook method and updated limit values from 10 to 50
camel - 7999 : camel - spring - xml - dsl - fix test failure on window
[ hotfix ] [ runtime ] add toString ( ) method to kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean for improved session management to enhance session management efficiency and maintainability
[ 3.0 ] fix nullpointerexception in tripleinvoker ( # 10729 )
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a runtime exception instead
added a method ` isStarted ( ) ` to check if the current deadline is started in ` Deadline ` and updated timer registration logic in `
added handling for closed channel exceptions in NettyRequestExecutor to provide clearer error messages when a channel is closed
added null check for genres in ItemListActivity to ensure text is set to null when genres is not available
[ hotfix ] [ runtime ] reset the master hook in checkpointcoordinator during region recovery
add support for mapped container in prefab with collection of mapped container
[ hotfix ] [ runtime ] fix npe in walnode # getcurrentwalfileversion ( )
added a test for retry same host on callback failure in HttpTest . java to ensure proper handling of error scenarios during callback failures
rename package - info . java to package - info . java for clarity and consistency
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server escape functionality to ensure correct handling of question characters in SQL Server queries
added nullability annotations to constructor parameters in CamelModule and updated related methods in JoobyBeanRepository to enhance code robustness by prevent
replaced manual synchronization with a utility method for waiting in JavaFXSEPort . java to simplify code and improve readability by leveraging
updated package structure from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
replaced instances of ` RegionDecoderCropBehaviour ` and ` BitmapCropBehaviour ` with a new method ` createCropperBehaviour
removed ` appName ` parameter from multiple method signatures in ` InputRC ` and related classes to simplify method signatures and improve code clarity
add unit test for install and uninstall command with ignored deps
danielwagnerhall : use -- headless = chrome instead of -- headless = chrome in test
replaced direct assignment of the value with interning of the value to improve memory efficiency by avoiding unnecessary object creation
added a " MOVE " status check to the condition in Connection . java to allow handling of the " MOVE " status alongside
updated formatting of date format strings in FixedDateFormat . java to improve code readability and maintain consistency in formatting
updated import statements from ` org . apache . curator . shaded . com . google . common . Lists ` to ` com . google
[ hotfix ] [ runtime ] fix spill in hsbuffercontext # startspill
updated permission checks for untrusted visit actions in Visit . java to ensure only authorized players with appropriate permissions are processed
avoids second attempt to initialize a xmpp connection if several thread call register method .
updated BasicURLNormalizer to include additional characters and added a new test for curly braces in TestBasicURLNormalizer to enhance URL normalization to handle
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a condition to compare clock rates in EncodingConfiguration . java to ensure consistent behavior when comparing clock rates
added ` getProjectPath ` method to ` ProjectGenerator ` and modified ` generateProjects ` method to return an ` ImmutableSet < Path > ` to
removed unnecessary native digit check and improved calendar ID retrieval in HostLocaleProviderAdapterImpl . java to streamline code and ensure valid calendar ID
added a new file ` MSwingUtilities . java ` that contains utility methods for image scaling and exception handling to provide a utility class for
camel - 14284 : camel - mail should use asyncproducer instead of producer to make it easy to send mail . thanks to
added @ RefreshScope annotation to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and CasCoreWebConfiguration classes to enable dynamic refresh of configuration
add a unit test for the onexception processor . thanks to daniel for the patch .
added new files Main . java and ScriptRenderer . java , and created ScriptRenderer . java for rendering script templates to provide a structured way to
added a condition to check if the input state is __ NONE before processing the FORM - encoded content type to ensure that the request processing correctly handles
added null checks for glyph width and height in BitmapFont and modified touch focus handling in Group , FlickScrollPane , and SelectBox classes to
replaced ` reportFailure ( ar . cause ( ) , callingContext , completionHandler ) ` with ` context . runCloseHooks ( close
simplify lexiconrecipemappings . stacktostring ( itemstack stack , boolean forceignore )
[ hotfix ] [ test ] make constanttimebackofftest more reliable
replaced specific StringUtils imports with a wildcard import and modified the conditional check for display name to simplify import statements and improve code readability
do n ' t use classpathurlstreamhandler in jollydayholidays
added a new file FieldUtils . java that contains utility methods for accessing and accessing fields in a structured manner to improve code organization and facil
simplified the assertion check in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to improve code
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom widgets to improve layout flexibility and ensure proper
added a method ` updateSettingsWithSaveLastAccount ` to ` XabberAccountManager ` to save the last account settings when an invalid
added a new method ` setvar ` to interact with ` LineReader ` for setting variable values to provide users with a way to set variable
fix passive catentity not fire event on animal tame ( # 7017 )
improve error message for unsigned range in windowframe
pdfbox - 4892 : add test to verify that the help font be set
added a call to set the application ' s mode in PageListController to ensure the application uses the correct mode based on the current state
added support for specifying Docker file paths and build arguments in ImageFromDockerfile . java and created a corresponding test class DockerfileBuildTest .
added a null check for threadInfos [ threadId ] before creating new ThreadInfo instances to prevent redundant object creation and improve performance
updated conditional check from ` 0.00001f ` to ` Utils . FLOAT _ EPSILON ` in ` PieChartRenderer . java
[ hotfix ] [ runtime ] add more log for singleinputgate and singlecheckpointbarrierhandler
added new table types to the Schema class to enhance functionality by supporting additional table types
added a minimumSimilarity parameter to FuzzyQuery and updated related classes to allow customizable similarity criteria for fuzzy queries
updated method names from ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
improve error message when immediateflush be set in the outputstreamappender
added support for Rabbit and Kafka auto - configurations in ZipkinAutoConfiguration to enhance auto - configuration capabilities for Rabbit and Kafka functionalities
added null check for the component in JLayer and created a new test class bug6875716 to ensure robustness by preventing NullPointerException
replaced ` import avro . shaded . com . google . common . base ` with ` import com . google . common . base `
added return and unwind block handling in BciBlockMapping . java and updated related methods in GraphBuilderPhase . java to improve block management
added legacyRenderer property and its getter / setter methods in Label . java to allow customization of the legacy renderer setting for improved flexibility
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` for counter and encryption bytes to improve code efficiency and
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
modified the ` thenComparing ` method to remove the generic type parameter and added a new ` Department ` class for testing to simplify the
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated anomalyResult ' s setEndTimeUtc method to use currentKey bucketMillis instead of null to ensure correct end time is set based on
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is properly managed and does not occur during parsing
added class loader configuration for MockFactory enhancer in MockFactoryTest to ensure proper class loading for mocking classes
added a new ` OriginalFormat ` class and modified the ` format ` method in ` ConverterWithEnumFormat ` to improve the handling of enum
replaced hardcoded string " yyyy / MM / " with a static final constant PATTERN _ YYYY _ MM in FileStorageUtils . java to
refactor JAWTRenderer class for improved rendering logic to enhance performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - lambda : fix camel - aws2 - lambda integration test
fix ( vmware ) : validate and replace mac address for nic in the network
added a check for " Authorization " in the string header name to ensure proper handling of authorization headers in the ProxyServlet
change method name from ` submit ` to ` execute ` in ` TraceableExecutorService ` to improve clarity and consistency in method naming
added ` getDetails ( ) ` and ` getDetails ( ) ` methods to ` AbstractAuthenticationToken ` and ` UsernamePasswordAuthenticationToken `
updated the random boolean value from ` nextBoolean ( ) ` to ` nextInt ( 5 ) ` in ` SolrTestCaseJ4 . java
replaced ` appendDot ( ) ` method with ` endSentence ( ) ` in multiple Geo - related classes to improve the clarity and
updated TimeFormat to use Locale . US for time formatting across multiple files to ensure consistent formatting across different locales
replaced specific imports with a wildcard import and modified unparsedArgs handling in GroovyParserVisitor and GroovyPrinter to improve code readability and ensure correct
added logic to adjust inset dimensions based on top , bottom , left , and right insets to ensure proper positioning of inset elements based
refactor gesture state management in TouchInteractionService to use a new default state to improve code clarity and maintainability by centralizing gesture state
replaced Joda - Time imports with Java ' s Instant and DateTimeFormatter for date formatting to improve compatibility with modern Java date handling practices
refactor openblas and openblas _ nolapack files to improve code organization and maintainability
replaced IOUtils . closeQuietly with java . io . IOException in TorrentsStorage . java to improve error handling and resource management
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
updated timeout values in AbstractDistribZkTestBase and AbstractFullDistribZkTestBase for improved reliability to enhance test
added a new class SearchResults to handle search results to provide a structured way to store and retrieve search results in a structured manner
fix npe in threadcpusamplersupport when there be no thread cpu
add a check to initialize the body if the primitive array is null before use it to avoid potential null pointer exceptions when accessing the primitive array
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " sorted .
updated feature flag from DISABLE _ TWOLINE _ ALLAPPS to TEAMFOOD in FeatureFlags . java and modified AppIcon
added a method to retrieve tenant pools for the current instance in InstanceResource . java to provide access to tenant pools for the current instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector ` to
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator . java ` and updated imports in ` InlineByteBuddy
added logging statements for compilation and preprocessing commands in CxxCompileStep and CxxPreprocessStep to improve visibility into command execution and error
add removecharacter ( string , charToRemove ) method to util class ( # 11345 )
[ 3.0 ] add support for metadata service protocol ( # 10385 )
[ drools - 3540 ] add datatransformertest ( ) method to kie - ci - runtime
changed the type of ` values ` and ` objval ` from ` Collection < ? > ` to ` Collection < Number [ ] > `
removed unnecessary boolean variable ` interesting ` and simplified conditional check in ` FormatStringChecker . java ` to streamline code for better readability and
updated the initialization of SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
refactor ITestDbTxnManager to improve transaction management functionality to enhance test reliability and maintainability
replaced manual connection handling with a try - with - resources statement in DatabasePlatformFactory . java to ensure proper resource management and automatic closure of
added a method to test the MapModel functionality in CodeFirstPojoClient and implemented a corresponding test in CodeFirstPojo to ensure correct
pdfbox - 4892 : avoid npe , a suggest by valerybokov
refactor item listener handling in ScaleDialog . java to improve clarity and maintainability of the code
fix nullpointerexception in itemtravelbelt . updateplayerstepstatus ( player ) . close # 1351
pdfbox - 4892 : continue instead of throw exception , a suggest by valerybokov
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to ensure predictable iteration order of keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and modified method signatures in CancelEventTimer . java
[ dc1394 ] use libusb - 1.0 instead of libusb - 1.0 for libdc1394 - 22
added conditional check for agentSupport before calling setAllConstructorsToPublic in MainMockTransformer . java and created new test classes for mocking static methods
pdfbox - 4892 : avoid duplicate object , a suggest by valerybokov
added support for window title define in sun . awt . x11 . xtoolkit
modified depth calculation logic to determine pixel size based on color model to improve support for transparency handling in graphics rendering
added error handling for reading the response body in OkHttpDataSource to improve error reporting by including the response body in InvalidResponseCodeException
added a static method ` exit ` to handle stack traces in ` TopLogging . java ` and simplified exit logic in ` TopThreadGroup .
updated the logic for determining the starting index in NativeRegExp . java to ensure correct handling of regex patterns regardless of global state
planner - 468 ignore optaplanner daemon solver test when upgrade to optaplanner 6.3 . 1
updated the variable ' highAllocation ' from ' lowAllocation ' to ' highAllocation ' in DefaultAllocator . java to ensure the correct allocation is
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO classes to enable efficient deletion of entries without feeds for improved
changed the return type of the appendToLabel method from void to returning the current instance to allow method chaining for better usability
[ java ] make lowlatencymediadriver no - op idlestrategy .
added handling for HttpStatus . NOT _ MODIFIED in CacheControlHeadersWriter and corresponding tests in CacheControlServerHttpHeadersWriter to ensure headers are
updated methods in InstrumentationPartialEvaluationTest to use ToolEvalNodeFactory instead of SplicedNode to improve code clarity and align with
updated paintTabArea method to include insets in SynthTabbedPaneUI to ensure proper rendering of tab area by accounting for insets
modified the ` getKrakenDepth ` method to accept an additional ` args ` parameter and updated its usage in ` getKrakenMarket
camel - 16400 : camel - core - add file . isabsolute ( ) method to fileendpoint and remotefile class
added a new method ` build ` to ` JavaProvenance ` for constructing ` JavaProvenance ` with specified classpath to enhance the functionality of
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java to improve debugging capabilities and ensure correct behavior when
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and ensure more compreh
patch by jbellis ; review by brandonwilliams for cassandra - 1341
added a check to ensure the output file is writable before executing the command to avoid errors when the test is run as root
added package info retrieval and logging in LauncherModel . java to ensure the application is enabled before proceeding with the packaging process
cloudstack - 1341 : databaseupgradechecker should throw cloudruntimeexception when database upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
replaced ` startsWith ( ) ` with ` regionMatches ( ) ` for string matching in ` LineReaderImpl . java ` to improve performance
added imports for SourcesFileResults and SourcesFileErrors , and refactored data table handling in Recipe . java to improve code organization and
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure that all tasks are dismis
add dbupgradesystemvmtemplate interface to make it easy to upgrade the system vm template
changed the ` conn ` variable from ` conn ` to ` final conn ` and removed redundant null checks in ` LdapClient . java ` to
refactor index handling in SequenceAction . java to improve clarity to enhance readability and maintainability of the code
patch by jbellis ; review by brandonwilliams for cassandra - 1340
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing of synthetic fields
added a LoggerProvider class and integrated it into the Configuration and ApplicationController classes to enable logging functionality using SLF4J for better logging management
replaced ` String ` with ` Object ` for port handling in ` ServerStatusCommand . java ` and updated related logic in ` ServerStatus
added deprecation warning for multiple glue classes that configure the spring context to inform users about potential configuration issues to ensure users are aware of potential issues with
added a method ` deepStart ` to the ` Startables ` class to facilitate the creation of a ` CompletableFuture < Void >
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and ` ShapeImpl ` classes to clean up the code and
fix laser table not be able to laser at all , close # 151
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the condition
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5398 - memorylimit
removed null check for ` p ` and modified condition checks for ` handlerName ` and ` norm ` in ` RequestHandlers . java ` to
updated the logging method to replace hyphens with periods in the servlet name to ensure consistent logging format by removing hyphens
updated PYTHONPATH handling in ProjectBuildFileParser to use Maps . filterKeys for better readability to improve clarity and maintainability of
updated audio format handling in DirectAudioDevice . java and Toolkit . java to improve error handling and ensure proper memory allocation for audio data
added null check for enums in ElasticSearchStringLookupService to improve robustness by avoiding potential NullPointerExceptions
updated error message formatting in CommitLogReader . java to improve clarity of error messages for better debugging
added assignment of the WebSocket session policy to ensure the WebSocket session uses the correct policy based on the container scope
removed the check for static fields in the current type in Java2TypeScriptTranslator . java to simplify the initialization logic for static fields
updated the webroot argument handling in UserService to allow dynamic configuration of the web root directory
( chore ) camel - spring - dsl : migrate test to junit 5 ( # 4403 )
[ netbeans - 4892 ] remove reflection to check if a profiler be attachable ( # 4893 )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated conditional checks in FloatingDecimal . java and added a new class ToString . java for testing double string representation to improve code clarity and
updated type checking in PropertyDescriptor . java and added a new test class Test7189112 . java for property setter validation to ensure proper type
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary
updated the origin setting logic in NettyRequestFactory . java to conditionally set the origin based on secured status to enhance security by ensuring
updated animations for task overlays in RecentsView and TaskView to improve animation behavior based on the state of the task overlay
enhanced error messages for illegal multi - value field types and refactored method calls in ORCRecordReader . java to improve clarity
added HLS sample links for TearsOfSteel and Bipbop 4x3 variants in DemoUtil . java
removed HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE and replaced HIBERNATE _ JPA _ METAM
updated Log initialization to use " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . apache . hadoop .
added diagnostic logging functionality to TestSpecificCompiler and a new test for handling union types with multiple fields to improve debugging and error tracking during compilation
updated session handling logic in WebSocketEndpoint and added a test for session closure in WebSocketIT to improve session management and ensure proper handling of closed sessions
updated delay values and method names from ` onDaoStateBlockChainChanged ` to ` onChangeAfterBatchProcessing ` across multiple services to improve the
rename xwork - 2.0 . dtd to xwork - 2.0 . dtd for consistency
added conditional logic to stop the stream based on its stop status to ensure that video tracks are stopped correctly based on the stream ' s stop state
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
fix checkstyle violation in gmlexamples
replace ` substream ` with ` skip ` for ` s . skip ( 200 ) ` in ` TargetType58 . java ` to improve
hhh - 10956 - fix nullpointerexception in compositeidfkgeneratedvalueidentity test
rename ` findfulltext ` action to ` downloadfulltext ` ( # 3550 )
updated URI registration logic to include host and port information to enhance the registration process by associating URIs with specific hosts and ports
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for a blank OSDB hash before retrieving the API result to enhance robustness by avoiding errors when the OSDB hash is
added token transfer functionality and validation checks in RuntimeImpl . java and MUtil . java to enhance contract transaction handling and ensure proper token validation
camel - 14284 : camel - ftp - do n ' t delete file in stepwise mode
updated the method call from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to correct the
added assertions and modified join logic in MapJoinOperator . java and HybridHashTableContainer . java to ensure proper handling of join results and
modified the constructor of HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint and added related methods to retrieve local address , port , and server
added ` intent . putExtra ( " id " , tweetId ) ` and ` intent . putExtra ( " id " , id )
added proxy authorization handling and refactored disconnect logic in HttpURLConnection . java to improve handling of proxy connections and enhance code clarity
replaced ` int _ numChildren ` with ` AtomicInteger ` and updated its usage in ` TraceContext ` and ` TraceContextTest ` to
refactor multiple data classes for consistency and clarity to improve code readability and maintainability
added enabled = false annotation to ValueTypeTests . java to temporarily disable tests that are not ready for execution
[ drools - 3540 ] move resourcefactoryservice implementation to kie - resources package
replaced ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to ensure consistency and clarity in
replaced AccountNotFoundException handling with a more general Exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling robustness
added null check for witnessService before validating permission to avoid potential NullPointerException when witnessService is not initialized
updated the method for constructing the tagged column name in JoinDesc . java to ensure the correct expression string is used for better clarity
added a check for the presence of Javadoc before setting it to avoid overwriting existing Javadoc if it is already present
replaced ` holderMethod ` with ` holderMetadata ` in ` CompiledICHolder . java ` and added a new ` RedefineInterface
updated revalidation logic in Tabs . java to use revalidateWithAnimationSafety ( ) instead of revalidate ( ) to ensure safe
[ hotfix ] [ connector / kafka ] remove unsupported metricgroup exception in bulkformat
updated the calculation of ` y ` in ` Polygon . java ` to use ` oldX ` instead of ` x ` to improve clarity
updated the ` createCache ` method to accept a ` Configuration < Object , Object > ` parameter to ensure compatibility with the ` Configuration ` interface
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2974855
refactor ShadowCookieManager to improve cookie management functionality to enhance code maintainability and readability
added a configuration option to disallow dropping external tables in StorageBasedAuthorization to ensure compatibility with managed tables while maintaining backward compatibility
updated conditional statement formatting in Stage . java and adjusted drawing position in ProgressBar . java to improve code readability and ensure correct positioning of background
sulong : cache byte order for llvm and big endian support in llvm language
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and updated the web view URL loading logic to enhance flexibility
corrected the spelling of " Parameter " in the exception message to ensure clarity and accuracy in error reporting for JDBC type specifications
camel - 14284 : camel - auditevents - allow filter without date after to return 400 bad request
renamed ` ExponentialTimer ` to ` PreciseThroughputTimer ` and updated related classes to improve clarity and consistency in naming conventions
added functionality to remove and delete soft bodies from the physics world to ensure proper resource management and prevent potential memory leaks
changed interface visibility from package - private to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow
[ hotfix ] [ zeppelin - 4892 ] fix log message in zeppelinhubclient
add unit test to ensure that the jingle element do n ' t have a namespace .
added null check for redplasma in bcstatcollector to avoid npe
added support for HTTP / 2 header in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditional checks in Remove . java for clarity and consistency to improve readability and maintainability of the code
updated delimiter variable and modified string concatenation in SimpleReport . java to improve clarity and correctness in reporting output formatting
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68
rename ` TickerDemo ` to ` StreamingTickerDemo ` and rename ` TickerDemo ` to ` StreamingTickerDemo ` to improve cl
added null checks for contract and contract address in Runtime . java to ensure proper handling of invalid contract types and prevent runtime exceptions
g3d : do n ' t create input3d if not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
scripttagpayloadreader : do n ' t throw parserexception , return false instead
added an @ Override annotation to the getRepositoryFactoryClassName method in JpaRepositoryConfigExtension to ensure proper method overriding and improve code clarity
changed the return type of the ` getExecutableCommand ` method from ` String ` to ` List < String > ` across multiple rule classes to
replaced instances of ` this . x ` and ` this . y ` with ` IOSGLES20 . x ` and ` IOSG
removed UploadPathActivity and its associated code from ComponentsModule to streamline the codebase by eliminating unused components
updated return statements in SimpleTextFieldsReader to handle cases where indexOptions is DOCS _ ONLY to ensure correct handling of total and sum term
fix : set implicit constructor in jpttreebuilder ( # 3649 )
added database parameter to populateValidateNullableIfNeeded and populateValidateUniqueIfNeeded methods to ensure compatibility with OracleDatabase during schema validation
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
removed unused IndexOptions and updated iterator assignment in PointInSetQuery to improve code clarity and maintainability
removed substring extraction from rawName in SchematicHandler . java to simplify the code by eliminating unnecessary substring operations
added handling for specific collection types in AbstractCollectionAssert . java and updated test cases in CollectionAssert _ isUnmodifiable _ Test . java to improve
changed the enum declaration from static to non - static in ProcessExecutor . java to allow multiple instances of ProcessExecutor to maintain their own options
added a confirmation dialog for characters with a twitlonger setting in Compose . java and refactored ComposeActivity . java to
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` to streamline the
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new classes ` ControllerCounter ` and ` DBCallback ` , and created ` DBCallback ` interface in ` DBCallback . java ` to
changed the parameter type of the deleteTicket method from String to final in EhCacheTicketRegistry . java to enforce immutability of the
added a new file FlywayMigrationRunner . java to implement Flyway migration functionality to facilitate testing of Flyway
updated HashMap . get and remove methods to check if the size is zero instead of checking if the map is empty to improve code clarity and
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release
added @ Nullable annotation to modifiers in CompressionCodec and related classes to indicate that certain modifiers may be null to improve code clarity and prevent potential
added null check for mainValue and improved error handling in LauncherHelper . java and TestHelper . java to ensure robustness by handling
rename test classes from ` BasicErrorControllerIntegrationTest ` and ` SampleDataGemFireApplicationTest ` to ` BasicErrorControllerIntegrationTests
make hotspotprofilinginfo support different compiler ir type
pdfbox - 4892 : remove clone ( ) from xssfsheet . cellcopypolicy
added a resetIconLoadResult method to FloatingIconView and updated its usage in Launcher . java and FloatingIconView . java
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` formFieldValuesToCaps ` to ensure
refactor resource retrieval in IconRecentsView to use a local variable for better readability to improve code clarity and maintainability by redu
deleted the AddAdapter . java file to the functionality is no longer needed in the project
[ wasm ] fix npe in nonstaticlifter when constructor code list be empty .
refactor sorting logic in OpTraitsRulesProcFactory . java to simplify the loop structure to enhance code readability and maintainability by reducing
log4j2 - 1343 log4j2 - 1343 testlogwatchertest . testlogwatchertest
added a print statement that prints " < any > " in Java2TypeScriptTranslator . java to enhance output formatting for better readability
updated the SDK version from 4799589 to 4913185 in SdkConfig . java to reflect the latest release version
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor . java to simplify the code by
removed the singletonLock variable and its associated logic in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary singleton lock
updated callback methods in CallbackActionExamples . java to include specific callback classes and strings to enhance clarity and usability of the callback functionalities
add appendToFile ( outputdir , fileName , encoding , false ) method to allow append file to the output directory
updated MavenExecutionContextView and MavenRepositoryMirror to compare settings before returning mirror results to improve accuracy in handling Maven settings and ensure correct mirror retrieval
added a ` name ` parameter to multiple ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoer
updated the service client matching logic in OAuth20CallbackAuthorizeEndpointController . java and added a new test in OAuth20CallbackAuthorizeEndpointControllerTests
replaced usage of ` values ( ) . toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with ` AnnotationParser . toArray ( ) `
replaced instances of ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` with ` getBadgedIconForUser ` and
updated the default value of the system ' s line separator in GlobalConfiguration . java to provide clearer guidance on the default line separator for
make sure that bestpathaccuracytracker and bestpathaccuracytracker inherit from doubledata
sanitize the input string in the base controller so that it do n ' t contain apostrophe
chore : update java and python dependency ( # 134 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include exception handling and added a test for verifying file contents to ensure
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
replaced return statements with assignment for containerType in AllAppsRecyclerView and updated logging methods in UserEventDispatcher to improve code clarity and
hbase - 25815 add deprecation for configuration key hbase . ipc . server . reservoir . initial . max and h
[ native ] fix npe in native window test
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve both generic and non - generic parameter types to improve parameter type retrieval logic
updated TestFSTs . java file to improve test coverage for FST functionality
ggb - 1359 make sure input box do n ' t have a vertical label
hbase - 25850 increase region split policy to use initial size instead of flush size ( chunhui )
reset the model state and start the loader in LauncherClings . java to ensure the model is properly initialized before loading the launcher
removed unused variables ` keys ` and ` updates ` from ` ManagedSelector . java ` to streamline the code by eliminating redundancy
added a set of excluded datasource names in SpringDataSourceBeanPostProcessor to allow filtering of beans based on specific criteria
added a call to storeUndoInfo ( ) in TableValuesView and removed unnecessary null check in TableValuesPanel to streamline the deletion process
camel - 15836 - camel - aws2 - kinesis : use clientconfigurationfactory . getconfig ( ) . getconfig ( )
refactor channel handling in VelbusSensorHandler to use a loop for multiple channels to improve performance and maintainability by reducing the number
removed unfavorable benchmarks from LocalCacheSelectorCode and modified delayable logic in BoundedLocalCache to disable tests due to unfav
added a test for illegal database paths in IoTDBSessionSimpleIT and modified PartialPath to throw an IllegalPathException if the path is invalid
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are cleared before garbage collection
rename ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and introduce a new method ` getHorizontalMarginPx
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
updated the XENSERVER _ NETWORK _ LABEL constant from " xenservernetworklabel " to " xennetworklabel " to ensure consistency in
updated libgdx version and nightly version from " 1.5 . 6 - SNAPSHOT " to " 1.5 . 7
added a private Set < String > metricNames in SolrCore . java to provide access to metric names for external use
replaced URI usage with Path usage in MavenManifestFactory . java to improve compatibility with URL - based path handling
replaced the direct call to System . getProperty with a static final boolean IS _ MAC to improve code readability and maintainability by reducing
refactor JdbcAggregationRepository to improve code organization to enhance maintainability and readability of the codebase
added slotList clearing and adding to other . slotList in Frame . java to ensure slotList is properly populated from the other frame
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure m _ predCount starts from a known value to avoid
added configuration merging functionality to the ConfigurationSpringInitializer class to ensure properties are correctly merged from the configuration instance
updated the parameter type of the ` setupLogging ` method from ` Logger root ` to ` org . slf4j . Logger root `
replaced HashMap with LinkedHashMap in multiple Java files to maintain the insertion order of elements in the aliasToWork map
added logic to look up the superclass of the type in TYPE _ HANDLER _ MAP when jdbcHandlerMap is null to ensure proper retrieval of
added debug logging statements in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , JmsItemWriter , and JdbcBatchItem
updated the parsing logic in LocaleUtils to strip off the ' ; ' character from the input string to ensure proper formatting of input strings by removing
updated the handling of the closeHandler in VertxHttp2Handler to use handlerContext ' s executeFromIO method to ensure proper execution context
make xssfevaluationworkbook and xssfevaluationworkbook thread - safe by use a cache
updated SchemaTextDetailType from VERBOSE to BASIC and modified conditional checks in BaseSchemaTextFormatter . java to improve clarity of schema text
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to utilize the
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure predictable iteration order of elements
added a check for table scan operator cloning in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding with
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to return knownClient if it '
added a clear ( ) method to achievementList . field _ 187981 _ e in StatList . java to ensure the achievement
initialize String fields to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo to ensure default values are set to avoid null reference issues
updated permission string from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog . java
added support for reading long data in ByteBuffersDataInput to improve performance by reducing the number of readLongs calls
replaced ` st _ atime ` and ` st _ mtime ` with ` st _ atime _ sec ` and ` st _ c
added a new file TestNoEagerReclaimOfHumongousRegions . java that tests eager reclaiming of humongous
added functionality to hide the app search bar based on user preferences to enhance user experience by allowing customization of the visibility of the search bar
changed the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure the correct
added a null check for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new ReloadPageAction class and implemented functionality for reloading the current display to enhance user experience by allowing users to reload the displayed page
changed log level from info to warn for non - info entries in ` SQLManager . java ` to improve log visibility for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
use serviceloader . load ( point ) instead of factoryregistry . lookupproviders ( point ) .
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure resources are properly released to prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and implemented logging in ` HiveViewImpl ` and ` JdbcConnector `
updated XML feature settings and hints initialization in multiple classes to ensure proper handling of external entities and improve code clarity
8274273 : jdbstopthreadidtest . java fail on window due to jdk - 8274273
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide functionality for retrieving type information
updated the variable name from ` runnable ` to ` future ` for clarity and consistency to improve code readability and maintainability by using a
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the application uses the correct HTTP port configuration
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to improve clarity and consistency in listener naming
updated DEFAULT _ BATCH _ SIZE from 10 to available processors in NewSessionQueueOptions . java to optimize memory usage based on available processors
[ hotfix ] [ runtime ] add error log when establish resource manager connection in taskexecutor
updated exception handling in LambdaRewriter and added fallback logic in AbstractMemberFunctionInvokation to improve error handling clarity and ensure fallback behavior is
updated exception message in ProgressBar to include minimum and maximum constraints to improve clarity of error messages for better debugging
updated message handling to include owner parameter in multiple classes to improve clarity and functionality of message processing
added new interfaces Cursor and Database , and a new abstract class Database with methods for managing database operations to provide a structured way to handle database operations
refactor assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 241 - enh : add setbeanid ( ) method to ebeanserver ( # 244 )
updated the transformation method in RuleSetToDocs from " tools / xslt / add - menu - to - site - descriptor . xsl " to
added a private List < RequestMatcher > matchers to the HttpSecurity class to manage multiple request matchers more efficiently
added hashcode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for ContactResource instances
replaced direct assignment of ` request ` and ` response ` with getter methods in ` AbstractProcessor ` and ` AbstractHttp11Processor ` to
updated logging messages and improved error handling in FileManager . java to enhance clarity of logging and provide more informative feedback during saving operations
added a reset method to mockControl in TestJdbcDataSource and implemented tearDown in TestIndexSearcher to ensure proper cleanup of resources after
updated import statements in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 2696 -- remove fallback parser from parserdecorator since it ' s no longer use
update fmlsecuritymanager . isvalidclass ( ) to check if the class be a dedicated server or server class .
removed unnecessary ' , ' signs from variable declarations in AccountUtils . java and IndexedForest . java to simplify code and improve readability
updated method call from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method to use a
added a new test method ` testJsxComment ` and modified the parsing logic in ` Parser ` and ` DumpingVisitor ` to enhance
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for testing purposes
added test cases for handling missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest to ensure proper error reporting when
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure the test does not exceed available resources to avoid resource exhaust
refactor conversion service usage in MapToLocalDateConverter to use a factory method to improve code clarity and maintainability by centralizing conversion
added a success variable to the HiveMetaStoreClient class to indicate successful operation completion
updated string comparison in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to ensure proper string comparison
updated tweet text checks to include " amp . twimg . com / v / " in addition to " vine . co / v /
added a @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes for improved code organization to enhance maintainability and readability of the codebase
added assertions and modified reference kind handling in MemberName . java to improve error reporting and ensure correct behavior when dealing with reference kinds
updated the default value of SUBMIT _ KEY _ UPDATES from " false " to " true " and added synchronization around runChange to ensure
added a else statement to handle MouseEvent in EditNodeTextField . java to ensure proper handling of MouseEvent instances during event processing
camel - 16400 : fixed bean expression to work with static method . thanks to benjamin graf for the patch
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor exception handling in AgentRunnerTest to improve clarity and maintainability to enhance code readability and ensure proper exception propagation
added description methods to multiple classes for better clarity and consistency to enhance code readability and maintainability by providing descriptive descriptions
refactor face addition logic in ObjLoader . java for improved clarity and maintainability to streamline the process of adding faces based on
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
replaced ` reentrantLock ` with ` lock ` across multiple files to improve code readability and maintain consistency in naming conventions
updated the ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes to
updated back method to use the event component instead of the current component to ensure the back operation uses the correct component context
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 528 . do n '
updated generic type parameters in ` ObjectArraySubject ` and ` StandardSubjectBuilder ` to extend ` T extends @ Nullable Object ` to enhance type
replace NutchConf with getConf in Fetcher , Generator , and Injector classes to ensure consistency in accessing configuration settings
bugfix # 251 , do n ' t remove boards pane if it ' s too late
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks before setting time intervals in ImportContainerImpl . java and updated test cases in ImporterGEXF2Test . java to
removed the logging level from the server port command in MockServerContainer . java to simplify the server port configuration for improved clarity
updated error logging to include exception message instead of just the exception to improve clarity of error messages for better debugging
replaced RobotsHonoringPolicy with CrawlMetadata in DispositionProcessor . java to streamline robots handling by using a centralized
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
updated file path comparisons in DefaultPackageScanResourceResolverTest to use File . separator for consistency to ensure consistent file path formatting across different operating systems
added alternative path method to ExpectNewDemo . java to provide a way to obtain alternative file paths for testing purposes
added initialization of the first filter in LogEntryParseTester to ensure the first filter is properly initialized before use
added a protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by providing a protection domain for the buffer alignment process
added dispose methods for mesh , batch , and texture in WaterRipples . java to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe optimizations and operations on external tables to enhance performance by preventing negative effects on certain operations
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
removed the FLAG _ SHOW _ WALLPAPER flag and set wallpaper offsets to zero in Workspace . java to streamline wallpaper
updated return values in SybaseASADatabase and modified SQL queries in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure correct sequence retrieval based on
nifi - 1343 : fix putsql autocommit to be set to false by default
added directory creation logic in SnapPuller and created corresponding test cases in TestReplicationHandler to ensure the parent directory exists before proceeding with
updated the AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in naming
refactor ` frame ` method to accept ` ByteBuf ` as a parameter across multiple classes to enhance flexibility by allowing different buffer types for frame
refactor constructor parameters in OAuth2LoginAuthenticationFilter and related classes for consistency to improve code readability and maintainability by standardizing parameter order
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to provide users with clearer guidance
updated the PlainFormatter to use ` truncatedTo ` for instant strings and removed the formatInstance method to simplify the code and improve readability by
updated the timeout duration from 1000ms to 3000ms and refactored the close method in AgentRunner . java to improve resource management by allowing
hhh - 14529 use methodhandles . privatelookupin instead of reflection . privatelookupin
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clar
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to expected sample results
updated IllegalArgumentException message formatting in GridLayout . java to improve clarity of error messages for better readability
updated string concatenation in DecisionNode . java and improved error handling in WagonCART . java to enhance code readability and ensure
added support for ordering and ordering of BoundSheetRecord in XLS2CSVmra and BoundSheetRecord classes to improve the organization and retrieval of
refactor variable names and calculations in ThrustCurveMotor . java for clarity to improve code readability and maintainability by using
updated InputSystemJme instantiation to use inputManager instead of a direct input manager to improve flexibility by allowing input management through the input manager
refactor hash code field handling in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code reliability
remove deprecate block . getmesh ( ) , no longer use
[ hotfix ] [ yarn ] fix variable name typo in yarnapplicationmanagerrunner and yarntaskmanag
added a new option ` EMPTY _ WORD _ OPTIONS ` in ` LineReader ` and modified matchers initialization in ` LineReaderImpl ` to
modify pushViewReplicaUpdates to include writeCommitLog condition to ensure correct pushing of view replica updates based on commit log state
updated clipboard handling logic and added default button ID handling in CaptureActivity and PreferencesActivity to improve user experience by enabling automatic opening of web content
added a new test method ` testBatching ` to ` JoinedTableTest . java ` for batching functionality to ensure that batching
added error handling for EntityExistsException in JpaPersistenceService to improve logging clarity for duplicate timestamp issues during item persistence
removed the deprecated ` format ` option from ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` to encourage the
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary operations
simplified the back key handling logic in ExtendedEditText . java to improve readability and maintainability of the code
updated the capacity calculation in AbstractStringBuilder and added a new Capacity class for testing to improve memory management and ensure correctness of string manipulation methods
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to handle note saving
added support for the ' footnotereference ' relationship in the xwpfwordextractor to handle the endnotes of the document
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context during authentication
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest . java ` to verify the GDALVersionInfo functionality
added a new file ` Lifecycle . java ` that initializes the UI components and handles network errors to facilitate the initialization and management of
fix deviantart ripper to wait for download to complete
removed unused imports from BodyTubeShapes . java and RocketFigure . java to clean up the code and improve readability
added support for RETINA mode in PJOGL . java to enable different scaling options for the canvas AWT and window NEWT
enable auto - selection of create project offline ( # 3550 )
refactor DiskDocValuesConsumer to use BlockPackedWriter for improved performance and readability to enhance performance and maintainability by reducing
[ ci ] use sorted set instead of collection for status route
removed unnecessary data list management and stream header assignment in GoAwayTest . java to simplify code and improve readability by eliminating unnecessary
added imports for DefaultBeanIntrospector , PropertyUtilsBean , and FluentSetterBean , and created a new FluentSetterBean class to enhance
replaced ByteStreams with CharStreams and added HttpResponse handling in BlockingHttpEndpoint , HttpEndpoint , and HttpEndpoint classes to improve response handling and
updated fileUrl initialization and modified method calls in FileSortByExpressionTest . java and FileSortByIgnoreCaseExpressionTest . java to streamline
replaced ` mLastAppearedTaskTarget ` with ` getLastAppearedTaskId ( ) ` in ` GestureState . java
pdfbox - 4892 : add option for write image scaling information , a suggest by petr slaby
added logic to handle aggregate function name in the column addition logic to improve query performance and clarity when aggregating paths
replaced LuceneTestCase with WithNestedTests and added cleanup method in TestSystemPropertiesInvariantRule to improve test structure and ensure proper
added xCapEnableBox and xCapServerUri selection logic in PresencePanel . java to enable or disable XCap features based on registration settings
ww - 3882 add exception handling option to the dispatcher
added ` stopEditing ` methods to ` CodenameOneImplementation ` , ` Display ` , and ` AndroidImplementation ` classes for handling text
nifi - 1186 : controlrate . getgroupname ( ) should return the default group name if no group name be specify
updated the ` showDialog ` method to include a new parameter ` isNewComponent ` and modified related conditions in the ` showDialog ` method to
added logging for error handling in ChatAnnotation to improve error tracking and ensure thread safety when sending messages to the client
added a check for the Windows OS type in HTMLDataFlavorTest . java to ensure the test is only run on MS Windows to avoid
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to support SQL server snapshot functionality
replaced ` newRecids . put ( newRecid ) ` with a ` offer ( newRecid , 1 , TimeUnit . SECONDS
use java . util . zip . zipfile instead of jrecompat . getinstance ( ) . jarFilenewinstance ( )
added a null check for the command class before creating instances of RegexRegisteredService to ensure that instances of RegexRegisteredService are created only when not
use ignore disk failure policy instead of best effort disk failure policy . patch by jbellis
removed the ` public ` access modifier from several methods in ` RipperInterface ` and ` RipStatusHandler ` to enforce encapsulation
[ java ] do n ' t rely on ipv6 address in peer discovery .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating an unused method
updated the computePartitionAssignment method to include a new ClusterDataCache instance to improve partition assignment efficiency by utilizing a fresh cluster data cache
simonstewart : remove the ` ` delete ' ' method from the ` ` docker ' ' protocol , since it be no longer
simonstewart : allow pipe - separated command to be pass to the defaultselenecmdialog
add multipleattemptsrule to createglossarytests so that it ' s not flaky
updated schema references from " $ ref " to " Components . COMPONENTS _ SCHEMAS _ REF " in ModelResolver . java to
refactor EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve code readability and maintainability by utilizing JsonUtils for JSON
added handling for the " gop " format in FormatConfiguration and updated related imports in DLNAMediaInfo and LibMediaInfoParser to
added a new file TestProfileReturnTypePrinting . java containing methods for testing return types to facilitate performance testing of method return types
replaced direct access to configLock with a ReentrantLock for thread - safe access to CURRENT _ VERSION _ INFO to improve thread safety
added AcquireReleaseColumnsSegmentOperator handling in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper resource management by acquiring and
danielwagnerhall : remove @ ignore from firefoxprofiletest
updated the ` getSystemBars ` method to return a ` Map < String , Map < String , Object > > ` instead of a `
do n ' t add dead bug to projectstats when add them
[ netbeans - 4892 ] disable the latest and recent release label for gtk ( # 4893 )
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check to return a date in the future if no by days are specified in the recurrence to ensure that the scheduled action returns a valid
refactor upload button functionality to utilize a menu item instead of a button to improve code readability and maintainability by consolidating menu item
refactor MessageExpression - related classes for improved organization and clarity to enhance maintainability and readability of the codebase
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading exchange metadata from an
added a WritableSerializer to JSON serialization for Writable types in CrawlDbReader to enable proper handling and serialization of Writable objects in JSON output
remove testjaspicbasicauthenticator since it ' s no longer use
added configurationPid = " discovery . mdns " to the MDNSDiscoveryService class to enable the discovery service configuration for the MDNS application
added null check for messageItem before scrolling to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use a custom ForkJoinWorkerThread to
updated assertions in RoleCommandOrderTest to check for DATANODE and NAMENODE roles to ensure that the dependencies contain the correct blocker roles
[ hotfix ] [ table - common ] add restorelocalinfofromtableinfo ( ) method to partinfo
removed unnecessary line breaks in multiple Java files to improve code readability and maintainability
added transformation and flipping logic for the logo sprite in BitmapFontTest . java to ensure proper rendering and flipping of the logo sprite
[ hotfix ] [ python ] exclude built - in aggregate from streamphysicalpythongroupwindowaggregaterule
do n ' t send statuschange . status . up if there be already a pending echo
added a method ` getUnreachableTokenOwners ( ) ` to ` Gossiper ` and updated references in ` StorageProxy ` to
[ giac ] do n ' t change x ( x ) to x / 2 if x = x ^ 2
updated content type handling in FormAuthenticator and SavedRequest classes to ensure a default value is used for the saved content type to improve flexibility
refactor ` _ display ` to ` display ` and add null checks for ` localEnv ` in ` XToolkit . java ` to
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` synchronized ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` in ` EnvironmentImpl .
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` to ` IdentityProviderEndpointsMockMvcTests
replace ` job ` with ` new ExpireJob ( ) ` in ` ObjectTypeNode . java ` and modify timestamp handling in ` PointIn
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 4372 ] send heartbeat to all broker when rebalance be change ( # 4373 )
add property cairo _ detached _ mkdir _ mode in cairo configuration ( # 1181 )
[ java ] do n ' t keep stable when there be a slow follower .
update default label pattern from authors3 to auth to align with new authentication standards
updated dependency handling in DBinaryDescription and DLibraryDescription to use CxxPlatforms instead of CxxPlatformsProvider to improve dependency resolution
camel - 14284 : camel - google - tt - make it possible to shut the service down
camel - 16400 : fixed file consumer on completion for dynamic file name .
added a new configuration option ` reopenReaders ` in ` SolrConfig . java ` and modified the condition in ` SolrCore . java ` to
added a new constant for the dialect version in FreeplaneVersion . java and updated MapWriter . java to include it to enable tracking of the
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a duplicate method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` WidgetSearchCondition ` and ` RequestPinItemTest ` to implement ` Condition ` instead of ` abstract ` to simplify the code
replaced TermQuery with ConstantScoreQuery and modified expected score calculation in TestFacetsCollector . java to improve search performance and accuracy by using
removed multiple unused Java classes from ConcurrentClassLoadingTest . java to clean up the code and improve readability
added a method to provide shared preferences for direct nearby uploads in CommonsApplicationModule to enhance configuration flexibility by allowing direct nearby uploads
added support for " SYSDUMMY1 " mode in database connection handling to enhance compatibility checks for different database configurations
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add sampler configuration methods in SamplerAutoConfiguration and SamplerAutoConfigurationTests to improve
added functionality to track the last process ID in POIXMLProperties and implemented a test for custom properties in TestPOIXMLProperties to improve
[ geotiffreader ] fix npe in float32 _ neg _ infinity _ nodata
added error handling for driver execution in CliDriver . java and refactored session ID generation in SessionState . java to improve robustness and
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and replaced ` Observable ` with ` Observable ` in ` MockRest
refactor selectByRuleIdSet method to use a partitioned list instead of a fixed list to improve performance by reducing the number of
added a method ` addExitDescription ` to ` ExitStatus ` and refactored stack trace handling in ` AbstractJob ` and ` Abstract
fix npe in multiblock render when the player be not the player .
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in naming conventions
removed unnecessary import of Collections and modified the minimum length calculation in PlotConfiguration . java to improve code clarity and maintainability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView and update text field handling to improve code readability and maintainability
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve code clarity by using a
added an assertion to verify that the message is not null in the AdvService to ensure that the service correctly handles cases where no message is
refactor key handling in MappingMongoConverter to improve clarity and ensure proper escaping of map keys to enhance code readability and prevent potential errors
updated Timber logging statements in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 13850 : camel - spring - boot should use the ` ` deprecated ' ' property instead of ` ` javaType ' '
refactor FuzzyLikeThisQuery to use Terms directly instead of using MultiFields to improve performance by avoiding unnecessary term retrieval when the field
modified the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter and modified its usage to enhance flexibility in displaying application links
replaced dspace . getServiceManager ( null ) with identifierservicefactory . getInstance ( ) . getidentifierservice ( )
updated the method call from ` bytes . length ` to ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to
modified the ` getDisplayScript ` method to return a null value instead of an abstract method to provide a default implementation for the ` getDisplayScript `
replaced ` keyToPress ` with ` keyToRelease ` in ` RemoteWebDriver . java ` and modified the mapping in ` Basic
pdfbox - 4892 : preallocate arraylist to avoid massive resizing operation
added synchronization to ensure thread safety when there are no active interfaces to improve stability and prevent potential deadlocks
fix bug # 45538 - hssfworkbook . getallembeddedobjects ( ) do n ' t return nested object
remove import of shdr from shadernodeloaderdelegate since it be not use
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to improve clarity by using a more descriptive variable name
pdfbox - 4892 : do n ' t create symbol font if it do n ' t have symbol
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
updated LiveTvGuideActivity and ProgramListAdapter to use mCurrentGuideStart instead of start and end to improve date handling and ensure accurate display
replaced direct method invocation with Whitebox . getMethod in MockGateway . java and added new test classes in MainMockTransformer . java to improve
added calls to ` dlopen ( findInLdLibPath ( " libfreetype . so " ) ) ` and ` findIn
refactor variable handling in FunctionParser to improve clarity and structure to enhance maintainability and readability of the code
[ gr - 16922 ] fix loop safepoint elimination for unsigned range guard .
fix a bug in typeframemodelingvisitor that be cause a classcastexception if the method be not an instance method .
added a LocalizedString class and refactored method arguments handling in multiple classes to improve code readability and maintainability by centralizing localized
added a configuration option to disable classpath search in the server configuration to allow users to disable classpath search functionality for improved flexibility
changed the access modifier of ` formats ` and ` minBufferSize ` and ` maxBufferSize ` from private to final and refactored array copying
updated default retries from 0 to 1 in Reference . java and updated assertions in AnnotationPropertyValuesAdapterTest . java to increase retries from 2 to
added support for loading and processing settings in TexturePacker to enable dynamic configuration of texture packing based on user input
added text views for uploaded images and used images in AchievementsFragment to improve user feedback by displaying relevant images in the UI
added mock and logger methods for annotation processing round and run processing round in TranslatingJavacPhaseTracerTest . java to enhance testing capabilities
added a new ` CategoryInfo ` class and updated the query parameters in ` CategoryInterface . java ` and ` MwQueryPage . java
updated assertion statements in AuthzAuthenticationRequest . java to use consistent variable names to improve readability and maintainability of the code
added accessibility support for taskbar timeout in TaskbarStashController to improve user experience by allowing automated visibility of the taskbar
added a check for the ' ^ ' character in the signature validation in GenericSignatureParser . java to ensure proper handling of the ' ^ '
updated access flag handling in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to ensure proper handling of
added null check for input in IntervalFilter and improved null handling in LowpassIntervalsSource to ensure input is not null and prevent potential NullPointerException
added tests for ` EntrySetIteratorLastHashNext ` and ` EntrySetIteratorLastNext ` methods in ` MapInterfaceTest . java `
added a serialVersionUID field to the TreeMap class to ensure serialization compatibility for the TreeMap class
updated createdAt to use Instant . ofEpochSecond instead of Instant . ofEpochMilli to ensure accurate timestamp representation for image creation
grobcov : use f2m locus instead of grobcov
added import for EncryptionUtils and called deleteKeyForAccount method in AccountRemovalJob . java to enhance security by ensuring private and public keys are
replaced hardcoded " keep - alive " with a static method ` keepAliveHeaderValue ` in ` AsyncHttpProviderUtils ` to improve code maintain
fix postjoinmapoperation when map have no interceptor and lite member join
remove duplicate inlining processor for text , javascript , and css in standarddialect
[ hotfix ] remove unused spillenabled parameter from longhybridhashtable
refactor environment variable retrieval to use a dedicated method for process environment retrieval to improve code readability and maintainability by encapsulating environment variable retrieval
ww - 4892 fix checkstyle violation in defaultactionmapper
added SerializableMode import and adjusted formatting in PluginSwitch . java to improve code clarity and maintain consistency in formatting
fix : field value should be set to null when declare nullable
added support for isolation level in select statements in DB2 mode to enhance compatibility with different database modes
refactor HiveConnection to use static final constants for transport mode , HTTP path , and transport mode to improve code readability and maintainability by
added a method ` isCacheable ( LeafReaderContext ctx ) ` to ` GlobalOrdinalsWithScoreQuery ` that returns false to
added a new file TestStrangeControl . java that tests StrangeControl functionality to facilitate testing of StrangeControl functionality in
updated file names from " % s . json " to " % s . jsfile " and " % s . jslib " in Js
added selection methods for start and end indices in ShadowEditText . java to enhance functionality for managing text selection within the ShadowEditText class
refactor startGRPCServer method to use try - with - resources for better resource management to ensure proper closure of gRPC server resources and improve code
added a ` use ` method to ` Jooby ` and updated its implementation in ` Router ` and ` JoobyTest
added a null check for fst in FreeTextSuggester . java to ensure that Lookup is not supported at this time to prevent runtime errors
updated string formatting in T4975569 . java and improved verification in T6729471 . java to ensure consistent line endings
added loading and instantiation logic for AbiWriter class in JavacInMemoryStep . java to enable dynamic handling of the ABI annotation processor functionality
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings about the use of BooleanMethod
added checks for thread shutdown before scheduling tasks in PullMessageService to ensure that scheduled tasks are only scheduled when the service is not stopped
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog to use an ordered list instead of an array to improve performance and maintainability by
removed unused import statements from BazaarRepository , CVSRepository , and IndexDatabase classes to clean up the code and improve readability
camel - 14284 : camel - google - gs : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the file Constants . java and DistanceUtils . java to the functionality is no longer needed in the project
replaced the diskDelimiter extraction with a substring extraction for the key to simplify the code and improve readability by eliminating unnecessary complexity
[ gr - 10663 ] fix fallback linker initialization for jdk 22.0
added a new test method ` testCreateInline ` and refactored the ` create ` method in ` RoleBindingOperationsImpl ` to improve
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configuration processes
updated FILE _ NAME _ PREFIX calculation to use Calendar . DAY _ OF _ YEAR instead of LOG _ DAYS to ensure accurate identification of the file
fix a typo in the variable name from ' o ' to ' v '
added error handling for ` fileManager . handleOption ` and created a new test class ` T8033711 ` to validate output from ` javap ` to improve robustness of option handling and ensure correct error messages are generated
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple Java files to simplify the code and improve
updated logging level from error to warn and modified task retrieval logic based on shutdown status to improve logging clarity and ensure proper handling of exceptions during
[ hotfix ] [ network ] enable tiered storage for hybrid result partition
make mailgun and sendgrid service more resilient to status code other than 200
added useGL20 configuration in Cuboc . java and modified LwjglApplication instantiation in CubocDesktop . java to enable
removed unnecessary type check for method return type in JimpleBody . java to simplify the code for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` HumanReadableException ` and refactored ` OutputMacroExpander ` to use `
[ hz - 2261 ] fix test failure in simpletestinclustersupport # assertnojobslefteventually
updated conditional check in MergeWordsListTask . java to include escape characters for file paths to ensure proper handling of file paths containing special characters
update instructorfeedbackresponsecomment and instructorfeedbacksessionresultsbundle and instructorfeedbackresponsecommentloadpagedata to use string key instead of
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` that implements a test case for object escaping to ensure correct behavior of object escaping through
replaced stream . skip ( ) and stream . read ( ) with IOUtils . skip ( ) and IOUtils . read ( ) to improve code
added interceptor management in ConnectionPool and improved error logging in JdbcInterceptor to enhance error handling and provide clearer logging during connection pool initialization
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all types of exceptions
added null check for block removal in LruBlockCache and implemented eviction methods in TestLruBlockCache to improve cache management reliability and
removed unnecessary null check for taskCount in RecentsView . java to simplify the code by always returning a valid task count
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to improve responsiveness by allowing
added a new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` and updated ` CoinmateExchange ` to
improve error message when systempath do not point at project . basedir
pdfbox - 4892 : avoid duplicate key in coswriter , a suggest by valerybokov
[ beam - 8470 ] add displaydata option to ptransform . setdisplaydata ( list < itemspec < ? > > )
replaced ` DefaultSubject ` with ` assertThat ( ( Object ) null ) . check ( ) . that ( " foo " ) .
added security property to disable MD2 and RSA key size in ClientJSSEServerJSSE . java to enhance security by preventing the use
added type checks for SUB _ COMMAND and SUB _ COMMAND _ GROUP in OptionData . java and updated error messages in OptionData . java to
updated module - info . java files in mmm and ppp modules to improve module documentation clarity and maintainability
added error handling in IOSImplementation . java and modified ensureConnection method to throw IOException to improve error management and ensure proper handling of IO exceptions
added a finally block to reset mFinished to null in LogEventChecker . java to ensure proper resource management and prevent potential memory leaks
refactor exception handling and writer closure logic in FileSinkOperator . java to improve error logging and ensure proper resource management
added diagnostics handling to the task execution in SchemaGenerator . java to improve error reporting for diagnostic issues during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a
updated DataSourceMonitorTests . java to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths before scanning classes to improve resource loading efficiency by avoiding redundant scans
[ hotfix ] [ test ] fix npe in testserviceutil when testinstance be null
updated handling of null values in RoutingInBoundHandler to ensure proper response behavior when the object is null
added ` natIp ` field and updated warning messages in ` EkeyUdpPacketReceiver ` and ` EkeyHandler ` to enhance packet
replaced ` io . netty . buffer . ArrowBuf ` with ` io . netty . buffer . ArrowByteBufAllocator ` in
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP headers and bodies in HttpConnection . java and created a new test case in RFC2616BaseTest . java to ensure
refactor MultiTimeout to use an AtomicReference for upstream and requestInitial to improve resource management and ensure proper initial state management for subscriptions
patch by jbellis ; review by brandonwilliams for cassandra - 1343
added an @ Test annotation to TestOrcTimezone1 . java to enable tests for the ORC timezone functionality
updated the ` conditional ` logic to include ` enabledMetricsSubstrings ` and ` enabledTimersSubstrings ` parameters to enhance flexibility in
added error handling for JSON processing in PinotSegmentRestletResource and updated return statements in TraceContext and TraceContextTest to improve robustness
modified JTable renderer to handle null superclass cases and added a new Test6888156 class for testing to ensure robustness by avoiding
added a check for the existence of the SHELL and BUSYBOX environment variables before adding arguments to the IDEService to ensure that
updated the number of subscriptions to delete from 10 to 1 to refine the cleaning process and reduce potential data loss
replaced ` LinkedList ` with ` LinkedHashSet ` in ` MockitoExtension ` and added dependency injection in ` JunitJupiterTest `
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
added transactionDisable ( ) method to BTreeMapTest . java to ensure transactions are disabled during file operations
added a new ` Iterator ( ) ` method to ` SortedIntList ` and created a new test class ` SortedIntListTest ` to
added a unregister call to JMXHelper in DefaultRemoteProxy . java and modified the catch block in JMXHelper . java to improve resource management by
[ hotfix ] [ config ] change default writebuffer size from 4MB to 64MB in rocksdbconfigurableoptions
removed the boolean parameter from the constructor of the Style class to simplify the constructor signature for better usability
replaced the addition of " message " with " addArgumentNoEncoding " in FacebookShare . java to ensure proper handling of message encoding in requests
[ beam - 8470 ] remove portable pipeline json graph from samza runner
update helloaudio to use ocean waves instead of nature . ogg
refactor LoopRotateBadNodeBudget class for improved clarity to enhance maintainability and readability of the code
added TypeInformation parameter to convertToMongoType methods across multiple classes to enhance type conversion functionality and improve type safety
do n ' t display imaginary unit in input box if it be not a complex
simonstewart : remove unnecessary toArray ( ) call from sendkeytoactiveelement
added a method ` getScaledInstance ` to ` AddAndScaleMultiImage ` for scaling images with specified dimensions to improve image scaling functionality and
removed the extendArgumentCheck ( ) and extendWrapStore ( ) methods from DBMaker . java to streamline the code by eliminating
add a call to updateshiftstatenow ( ) in anysoftkeyboard . java to ensure the keyboard state reflects the current state
removed the DETECTED _ ACTIVITY constant and updated related methods in multiple classes to streamline the detection process and maintain backward compatibility
updated imports from ` extensions ` to ` protocol ` across multiple classes to align with the new package structure for WebSocket protocol handling
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve readability
added comments to explain unused variables in multiple Java files to improve code readability and maintainability by eliminating redundancy
updated the exception message in WebSocketUpgradeHandler to include the status code to provide clearer feedback on the status of the upgrade protocol
corrected the formatting of the blockMode assignment in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed redundant code in Merge . java to streamline permission checks for plot ownership to improve code clarity and maintainability
removed deprecated getConversationID ( ) method from HttpContentResponse , HttpRequest , and HttpResponse classes to clean up the code and encourage the
replaced ` com . sun . speech . freetts . PhoneSet ` with ` de . dfki . lt . mary .
refactor stripQuotes method to use PlanUtils for cleaner code to improve code readability and maintainability by centralizing quote stripping logic
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of the rendering logic
replaced direct retrieval of resolution and remote artifact repositories with a single list to streamline repository management and improve code readability
( chore ) camel - cxf : close applicationcontext in cxfproducerclientfactorycachetest
refactor PhysicsClient class to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failures
added a new File instance for file creation in ZipFile . java to facilitate file handling within the ZipFile class
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method should no longer be used in favor of
fix : channel . uid be not initialize by default ( # 4370 )
added stack trace logging functionality to GenericDAOImpl and created StackTraceUtils class to enhance debugging capabilities by providing detailed stack trace information
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary test cases
added conditional logic to unparse arguments based on type in FunDefBase , ParenthesesFunDef , and BasicQueryTest classes to
updated the ` GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY ` query to use a multimap
rename ` supressWarnings ` to ` suppressWarnings ` and add a check for ` jdk . internal . misc . Innocuous
updated JsonTreeReader to handle additional JsonToken types and added a test for nextJsonElement in JsonElementReaderTest to improve error handling and ensure correct
added a ` -- " -- " option to the ` TestCommand ` class and a corresponding test in ` ExternalTestRunnerIntegrationTest ` to
added methods to dedup and index Solr in SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for managing duplicate and indexing of Solr documents
[ hotfix ] [ table - planner ] support flink planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before tests run
updated Progress and RSSReader classes to include a display percentage parameter and modified disposal logic to improve user experience by allowing customization of progress display
added a check to ensure the parent file does not exist before proceeding to avoid potential errors when the parent file does not exist
added methods to write and close POIDocument objects with try - finally blocks to improve resource management and prevent potential memory leaks
added line breaks to print options and sketch names in JavaBuild . java to improve readability of generated output
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ root ` and `
added generic user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance user authentication
added default port handling in NettyHttpServer , DefaultRouteBuilder , and FilteredRouter classes to enable dynamic application of default ports based on
updated SnmpTargetHandler to check if the handler is initialized before updating the status to ensure that the status is updated only when the handler is
add permission check for instructor who can submit session in section
added @ Incubating annotation and @ Deprecated annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path handling logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve code clarity
updated the string representation of newFlushedSize in DocumentsWriterPerThread . java to include documentstores to improve clarity of log output
use unlocalized name instead of func _ 149739 _ a ( # 3550 )
updated whitespace handling condition from ` stripWhitespaceX ` to ` stripWhitespaceY ` in ` ImageProcessor . java ` to improve text formatting by
updated the locking mechanism in FeedRefreshUpdater from a fixed value of 1 to a fixed value of 1000 to improve performance by allowing more concurrent access
updated the parameter passed to MetadataIndexNode in TsFileSequenceReader and added a test for MeasurementChunkMetadataListMapIterator in MeasurementChunkMetadata
remove unused parameter from makeresultfromdelimitedstring ( )
added preferred size setting for the pane in NavigationShareTab . java to ensure the pane displays correctly within its available space
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for KeywordAttribute in TestBeiderMorseFilter to improve
refactor UpnpAudioSinkReg , UpnpHandler , and UpnpEntryQueue classes to improve code organization and maintainability
fix lenswarp burst collide at wrong block position
added a new ` toJson ` method to ` JsonTest ` and modified import statements in ` JsonTest . java ` to enhance test coverage for
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
replaced ` Exception ` handling with ` Throwable ` logging in ` CoreContainer . java ` to improve error handling by logging a warning instead of
added https parameter to the KubernetesMockServer constructor to enable secure communication for the Kubernetes mock server
[ gr - 36422 ] fix foreign call in math . graph ( ) to correctly compute stamp .
updated HTTP methods in DefaultServlet and DefaultServletTest to use " GET , HEAD , POST , OPTIONS " instead of " METHOD _ NOT
tika - 2276 -- add support for geographic format in tiffextractor
replaced ` throw ` statements with ` return ` statements in ` ShowFileRequestHandler ` and updated exception handling in ` ShowFileRequestHandlerTest `
added exception handling functionality in ReflectorClassWriter and corresponding test in ReflectorTest to improve error handling and test coverage for exception management in the
added a ` clamp ` method to the ` Vector ` class and implemented its implementation in ` Vector2 ` to enhance vector manipulation capabilities by allowing
added imports and modified access token creation logic in ChainedTokenGranter . java to improve scope handling and streamline access token creation
refactor BC _ instanceof class for improved clarity to enhance maintainability and readability of the code
added a logger instance to the EditorBottomSheetBehavior class and removed save flags setting to improve logging capabilities and streamline save flag management
updated UaaUrlUtilsTest to use JUnit 5 annotations and modified setup and teardown methods to use JUnit 5 annotations to improve test structure
hhh - 14850 - fix nativequery . addScalar to accept basicdomaintype
added caching mechanism for font attributes in SunLayoutEngine to improve performance by avoiding repeated calls to getDirectoryEntry and getTableBytes
replaced IntBigArray with IntArrayList for blockPositionByHash and updated its size calculation to improve performance and memory efficiency by using a more
simonstewart : fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
refactor methods in BrokerRequestUtils for improved clarity to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to use a map for instance management to improve clarity and maintain the order of instances during instantiation
updated the method to use the base path of the build target instead of the absolute path to the build file to simplify the code and improve clarity by reducing dependency on the ParserConfig
camel - 14284 : camel - eip - message - default value should be null , not empty string
add keepaliveservice to the jabber connection so that the keepaliveservice do n ' t have to be
changed the default load factor from 0.67F to 0.67 in IntHashSet . java to correct the default load factor for improved
added methods to retrieve all data type physical variations in VectorizationContext , Vectorizer , and VectorPTFOperator classes to improve data handling
updated package structure of HtmlAssetTranslator and StringsResourceTranslator from com . google . zxing to com . google . zxing .
refactor conditional logic for handling vertical bar layout in OverviewState . java to improve readability and maintainability of the code
added import statement for javax . persistence . Entity in BaseActivityEventEntity . java to facilitate the use of JPA entity management
added tracing information for TouchInt interactions in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and monitoring of touch interactions
added a new file InvalidOptions . java that tests for unsupported javap options to ensure proper error handling and output validation for unsupported options
added a check to ensure the number of supported bounds in DisplayController is consistent to avoid inconsistencies in display state handling
refactor ` getClientIdAndClientSecret ` method to use a utility method from ` OAuth20Utils ` to improve code organization and reusability
change the default value of ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
added a condition to set the status of ShortcutInfo to DEFAULT and updated the infoUpdated flag accordingly to ensure that the status is set to
camel - 16400 : camel - seda - default unbounded queue size should not be hardcoded to 1000
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to Kernel and App classes to enable batch updates for improved performance
added HttpClient support to ThirdEyeApplication to enhance HTTP client management and configuration flexibility
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enhance data retrieval capabilities by allowing sorting of job instances
updated the ` CryptoFacilitiesTradeService ` to utilize ` OpenOrders ` and ` CurrencyPair ` for cancellation of crypto facilities orders
ggb - 1563 keyboard should be hide on click , not on mouseup
sulong : use memcpy ( ) instead of memmove ( ) .
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
add block tooltips to toolbarmanagerw . setblocktooltips ( true ) and setblocktooltips ( false ) to
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) instead of DateFormat . DEFAULT for date formatting to enhance flexibility in date formatting by allowing
updated playerSet format from " < UID : " to " ( " in ListCommand . java ) to improve clarity and consistency in player
added a check to return the current instance if the list is empty to improve performance by avoiding unnecessary method calls for empty lists
added handling for InvocationTargetException and wrapped CommandException in ParametricCallable . java to improve error handling for command execution failures
updated the ` getLikeExpression ` method to accept a boolean parameter for regex matching to enhance functionality to support regex matching in vectorized queries
added start and stop methods to StreamSupplierComponent and implemented start and stop methods in NativeStreamSupplierComponentImpl to enable better control over the lifecycle
updated locale handling in LuceneTestCase to ensure all available locales are set to the default locale
refactor multiple database - related classes for improved consistency and clarity to enhance maintainability and readability of the codebase
refactor context handler initialization to use a dedicated method to improve code readability and maintainability by encapsulating context handler initialization logic
camel - 16400 : camel - test - add support for routebuilder reference to camel - 9
nifi - 1792 : fix test fail on window due to illegalargumentexception
refactor the ` returnTypeSubstitutable ` method to remove the ` Warner . noWarnings ` parameter and streamline return type checks to
added a new ThrottleType enum and modified process logic in TestExecutor . java to support different character encoding types to enhance flexibility in processing
simplified the assignment of argb in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to
refactor Annotation and AnnotatedElement classes for improved clarity to enhance code maintainability and readability
added a new interface Model in the package org . apache . poi . hssf . model and updated Sheet and Workbook classes to implement
( chore ) camel - http - bridge : use constant instead of hardcoded string
added functionality to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder to enhance flexibility in entity management during item writing
added null checks for ShortcutInfo in InstallShortcutReceiver . java and improved error handling in Launcher . java to enhance robustness by
replaced direct instantiation of TwoDimensionalCollectionValuedMap with a boolean parameter to enable the creation of the TwoDimensionalCollectionValuedMap with
updated exchange specifications from BTC - e to Wex in WexExchange . java to reflect the correct exchange architecture and improve clarity
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness by preventing potential NullPointerException
added null check for files in SegmentInfos and created a test for opening the IndexReader after a delete operation to ensure that a FileNotFoundException is thrown
updated search date format in HSearchSortHelperImpl and modified FhirResourceDaoR4SearchWithElasticSearchIT to use lower case
updated the calculation of the percentValue in DeviceHandler . java to handle negative percent values gracefully to ensure that the percentValue does not exceed 100
updated limit checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 16400 : improve performance of camel - routes - collect from registry / directory
improve handling of playlist start time in getnextchunk ( )
updated test class names from ` com . apache . lucene . xmlparser . builders ` to ` org . apache . lucene . util
[ hotfix ] [ datastream ] fix bug in statefuloperatortest
removed unnecessary null check for fill and stroke in Area . java and Line . java to streamline code for better readability and maintainability
refactor blockchain initialization and database existence checks in Blockchain . java and BlockchainTest . java to improve code clarity and ensure proper functionality
trim whitespace from the matched value in SQLPlusSupport . java to improve data consistency by removing leading and trailing whitespace
added socket . setAsync ( false ) and socket . setAsync ( true ) in Http11AprProtocol . java to ensure that asynchronous
ggb - 2246 fix divider position in docksplitpanew
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics to ControllerMeter and Pin
hide shared avatars in LocalFileListAdapter to improve user interface by removing unnecessary elements
move mebis . scss from clientbundle to web
updated condition checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes from '
act - 716 : added guard to log interceptor to speed up runtime when log level be > fine
replaced CountDownLatch with assertWaitUntil in EventBusTracingTestBase . java to improve test reliability by ensuring all finished spans are
updated Locale initialization and added getter methods for locale in QueryParser . java to improve clarity and encapsulation of locale management
replaced array with collection in entrycustomizationdialog ( # 3649 )
jbrules - 2635 : fix bug in rulebase and add test case
added a new class ` OcspUnauthorized ` and updated ` PKIXRevocationChecker ` and ` OCSPResponse ` to handle OCSP responses
replaced a hardcoded sleep duration with a loop that checks server state to improve server stability by allowing more time for server operations to complete
added connection count functionality to SourceCounter and AvroSource classes to track the number of active connections to improve monitoring and management of active connections in the
add a builder method to the GraphQLinterfacetype that accept a list of field definition
refactor the ` createDefaultJavaPackageFinder ` method to return an ` ImmutableSet < String > ` instead of a ` Set < String > `
replace Writer with PrintWriter in ScriptExecutable . java to improve output handling by utilizing the PrintWriter interface
[ hotfix ] [ test ] use random uuid for temporary file in filesourcetextlinesitcase
added support for handling DataTable objects in JRubyStepDefinition to enhance compatibility with Cucumber ' s DataTable functionality
updated visibility settings for author in SearchImagesRenderer and refactored image node retrieval in ApacheHttpClientMediaWikiApi to improve user interface respons
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and facilitate future updates
improve error message for parse error near char
added methods to retrieve and set the bind address in the WebSocketClient class to improve connection management by allowing dynamic binding of the socket address
[ java ] delete aeron directory before close the clustered medium driver .
refactor size setting logic in WidgetGroup to simplify size setting logic to improve code readability and maintainability
replace ` sessionFixationAttribute . equals ( OPT _ SESSION _ FIXATION _ MIGRATE _ SESSION ) ` with ` Boolean . valueOf
refactor switch statement in LALogicLinesFragment . java to use edgeOption instead of parameters to improve code readability and maintainability
simonstewart : introduce exponential backoff in chromebinary so that it do n ' t interfere with slow machine .
added HTTP method and HTTP route handling in TraceExchangeFilterFunction and updated ClientResponseWrapper constructors to include HTTP method and HTTP route to enhance response handling
patch by jbellis ; review by brandonwilliams for cassandra - 1348
updated renderingIntent return values in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid render intents to
add parameter to contribution question edit form ( # 7273 )
added calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java `
added @ SuppressFBWarnings ( " REC _ CATCH _ EXCEPTION " ) annotation to KafkaExactlyOnceSink and removed Serializable interface from
added PGConnection support to the Proxy instantiation in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info in TokenAuthenticationHandler . java to provide clearer information about the absence of a token encryption secret for
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should no longer be used
[ ambari - 23526 ] make sure that we update topology cache on agent side when kerberizing the cluster ( # 951 )
added support for reading and writing iterators in NamedListCodec to enhance functionality to support additional data types and improve code readability
make sure assign completely lose partition do n ' t throw npe .
added import for InclusionRule and set schema inclusion rules in ApiExample . java to enhance schema filtering capabilities in the application
updated the expected value of the mean and var assertions from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct
mondrian : fix a bug in the sun . geogebra . geogebra . createlinearring ( ) method
added methods to retrieve the base name and dimension count from the ConstantPool class to enhance functionality for retrieving the base name and dimension count
added a method to set debug evaluation output for the next evaluation of formula evaluations to enhance debugging capabilities for formula evaluations
test : migrate testmodule to junit 5 ( # 4649 )
removed the ` false ` parameter from the ` ExoPlayerProfile ` instantiation and modified the condition in ` PlaybackController ` to simplify the
added a return statement to the DynamicStyleBar class to ensure the method exits early under specific conditions
added logging statements to the Utils class for setting and resetting database properties to improve visibility into the dump state for better debugging and monitoring
refactor ReactiveAuthorizationManager for improved authorization handling to enhance code maintainability and readability
added a check for boolean types in the type promotion logic to ensure proper handling of boolean types during string promotion
sulong : rename llvmbitframenuller to llvmbitaddressnuller to avoid confusion .
refactor multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
( chore ) camel - caffeine : add test case for transaction - aware cache manager proxy
added a method to calculate the bounding box of a mesh using vertex attributes to provide a way to calculate the bounding box based on the number of
added a new option ` -- target - hash - function ` to specify the hash function to use for computing target hashes to allow users to choose
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings to ListViewMultiChartActivity and implemented highlight arrow drawing in BarChart to improve visual clarity of chart
added a new entry to the sgPathPlanMap in the pgSgPathPlanMap map to enhance the management of path plan mappings
[ hotfix ] [ test ] fix typo in infinispanremoteproducerit
added a check for existence of the local repository directory before fetching artifacts in MavenArtifactFetcher . java and modified lock handling in MavenDependencyResolver .
updated fragmentShader declaration to include # ifdef GL _ ES to ensure compatibility with different OpenGL ES environments
replaced ` SortedSet ` with ` Set ` for server and table parameters in ` RSGroupInfo ` and ` TestRSGroupsAdmin2 `
added a try - catch block to load the JspPage class and changed log level from warn to debug in TagLibConfiguration . java to improve
updated CustomAnalyzer to set the default match version and added a new test for version awareness in TestCustomAnalyzer to improve version handling and ensure
added a new test method ` getApplicationInfo _ readsValuesFromSetPackageArchiveInfo ` to ` ShadowPackageManagerTest ` to ensure that the
replaced direct calls to ` method . invoke ` with ` MethodUtil . invoke ` and added package access checks to enhance security by ensuring proper
added progress update functionality to GradleBuildService and Main classes to enhance progress reporting by including project configuration and task operations
removed unnecessary synchronization block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
do n ' t throw poolinitializationexception if the initialization fail timeout be set to 0
removed the ` timeOut ` parameter from the ` getResult ` method and added an error method in the ` error ` method to simplify the method
changed the ` isNative ` field from ` boolean ` to ` transient boolean ` and removed the ` readBoolean ` method from ` JMethodId
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler ( # 4370 )
refactor TagSupport and related classes to improve code organization and clarity to enhance maintainability and readability of the code
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of request handling and logging to enhance debugging capabilities and
[ hotfix ] [ table - planner - blink ] fix typo in kafka dynamic table factory test
added error handling for repository retrieval in UsersPanel . java to improve robustness by avoiding null pointer exceptions when the repository is not found
added support for " . otf " and " . otf " file types in the SunFontManager class to enhance font detection capabilities for
refactor type matching logic in AnnotationMatcher . java to improve clarity and correctness to enhance readability and maintainability of the code
updated log level from " OFF " to " SEVERE " in Grep . java to improve error reporting for better debugging
( chore ) camel - core : avoid unnecessary string concatenation when debug level be not enabled
updated the includes and excludes list to be initialized with an empty list instead of an empty list to ensure that includes and excludes are only initialized when
added a method to check if the home intent should move to the default screen on the home intent to improve user experience by ensuring the home intent
updated the maximum bitrate from 110 to 30 in the PMS configuration to improve performance by reducing the bitrate limit
removed the ` getOptions ( ) ` method from ` CommandLineParser . java ` to simplify the code by eliminating an unnecessary method
trim whitespace from the description return value in MutableDatabaseProperty . java to ensure that the description is trimmed before returning it
updated the output filename format in XOMParserTest . java to ensure consistency in file naming conventions
removed the pid parameter from the error log message in ProcessBesuNodeRunner . java to simplify the error message for better clarity
added a getLoadedMusic ( ) and getLoadedSound ( ) method to MusicLoader and SoundLoader classes to provide access to
removed unused imports and simplified type casting in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enable screen recording for test case b / 215673732
added null check for lrPauseButton before setting it to false in CPUFeature and MemoryFeature classes to ensure the lrPauseButton is not selected
replaced instances of ` PreferenceCategory ` with ` mAccountsPrefCategory ` and refactored account creation methods to streamline preference management and
fix a typo in the presence presence type .
updated StringBuilder initialization to use a capacity of 0xFFFF if utflen is greater than Integer . MAX _ VALUE to improve memory efficiency by allocating
disable spring . metrics . export . statsd in integration test
refactor InterruptedException handling in the code to improve clarity and maintainability of exception management
refactor ServiceTicket class for improved clarity to enhance maintainability and readability of the code
updated SSL and HTTP connection handling in ConnectionCheckOperation . java to improve connection reliability by differentiating between HTTPS and HTTP scenarios
added a check for ` targetType ` before converting to ` String ` in ` ArgumentArrayMessageMapper . java ` to ensure proper handling of `
fix a bug in solrservicecommunitycollectionitemfilterplugin . getparentobject ( ) when the item be not an indexabledsp
replaced the use of ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) ` with ` i . set
refactor ( patternparameterconfigurator ) : fix checkstyle violation ( # 3649 )
changed the return type of the ` beginDraggingWidget ` method from ` void ` to ` boolean ` and added a check for drawable presence
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root variable and collected components in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
add a writeconfusionmatrix option to the test classifier to make it easy to write the confusion matrix .
fix a typo in last _ sample _ ok to last _ sample _ ok
added unit tests for Bluetooth state management in ShadowBluetoothHeadsetTest . java to ensure correct behavior of connected and disconnected devices in the
corrected a typo in the method name from " testAutowire " to " testAutowired " in PropertyBindingSupportTest
added " clone " to the objectMethods set and introduced a finalization method in ResultObjectProxy . java to enable cloning of objects while
added null check for counters object in IntegrationTestBigLinkedList . java to improve error handling and provide clearer logging for null counters
do n ' t call cangetinstanceinfo when the object be not implement .
updated the service filter logic in SamlIdPServicesManagerRegisteredServiceLocator to include service matching to ensure that only valid service IDs are processed
added null check for getActivity ( ) before invoking its runOnUiThread method to avoid potential NullPointerException when getActivity ( ) is null
rename logger variable to logger for consistency to improve code readability and maintainability
added a method to set the string type in DatabaseAdaptor and modified access modifiers in JDBCSessionDataStore to allow subclasses to access and modify the string
updated UIMAUpdateRequestProcessorTest to use suggested category instead of language and modified test method to include exception handling to improve test reliability
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods to improve code readability and maintainability
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
added a test for DROOLS2200 and modified the evaluation logic in DecisionTableImpl to ensure correct handling of negative values in the
make sure texture map creation finish before move on ( mac )
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user experience by providing context - sensitive options
replaced ` owner . getTypes ( ) . add ( e ) ` with ` owner . getType ( e ) ` in ` EnumFactory `
add ` ` text ' ' and ` ` description ' ' parameter to the ` ` hot reload ' ' action ( # 3550 )
fix for # 3649 : use hasspreadsheetlabel ( ) instead of isspreadsheetlabel ( )
changed BRIGHTNESS _ FACTOR to BRIGHTNESS _ MAX / PercentType . HUNDRED . doubleValue ( ) to ensure
refactor sscm history parser to handle context , revision , and date separately
added a ` isAdmin ` parameter to the ` createUser ` method and implemented the ` listUsers ` method in ` HomekitAuthInfoImpl ` to
added null checks for writeMethod return type in IndexedPropertyDescriptor and Introspector classes , and created a new Test6723447 class
replaced string concatenation with parameterized logging in DynatraceExporterV2 and DynatraceExporterV2Test to improve performance and
updated method signatures in Context , Request , and Response classes to use ' task ' instead of ' runnable ' to improve clarity and consistency in
added setcapabilitiesfrompongebuilder ( ) method to mixinitemstack to allow customization of capability
updated the assertion in LifecycleUtilsTest to compare the execution ID instead of the default value to ensure the test accurately verifies the correct execution ID
updated contract validation logic in Wallet . java and modified GetContractServlet . java to handle CreateSmartContract and TriggerSmartContract types to ensure proper
added new package - info . java files for Image , Image . java , and Virtualization . management packages to organize code structure and improve
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for checking the next node to improve thread safety
added duplicate handling for Java file files in JavadocTool and modified test execution in T7091528 to improve code robustness by preventing
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to ensure compatibility with
added a list of parameter names to the LoginServerTokenEndpointFilter and updated the constructor to accept a list of parameter names to enhance flexibility
added a new constant ` C _ KEY ` and updated language checks in ` LanguageFactory ` to support both CPP _ KEY and C _
replaced ` LinkedBlockingQueue ` with ` MoreExecutors ` and added a new ` MoreExecutors . newSingleThreadExecutor ( )
added caching and response header settings in LoginService and FormAuthenticator classes to improve response handling and ensure proper caching behavior in tests
added exception message to the error log to improve debugging by providing more context on the error
replaced AllHSSFUtilTests with specific test classes in HSSFTests . java and updated assertions in TestEmptyDocument . java
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before accessing its absolute path to avoid potential NullPointerException when the output file is not available
added import for ExternalResourceControlPriority and set access controller priority in Java2DRenderer . java to ensure proper access control behavior during resource resolution
added exception handling for drawing the graphics in TestTriggerCoverage . java to prevent build failures due to specific fonts on Windows machines
modified the visibility of the ` mbean ` variable and modified CPU time checking logic in ` GetInternalThreads . java ` to ensure immutability
added checks for empty comments and whitespace in TabsAndIndentsVisitor . java to ensure that comments are not processed when there are no
updated assertions in TestTriggerIntegration from 5.0 to 100.0 in SimDistribStateManager . java and TestTriggerIntegration . java
updated equality checks to use case - insensitive comparison for file paths and author to ensure consistent behavior regardless of file path casing
added a default value method to the ` getString ` method in ` ShadowBundle ` to ensure a default value is returned when the specified key is
refactor date and time formatting in TweetActivity to use a custom DateFormat instance to improve flexibility and maintainability of time display across different
added a check to return an empty list if no connections are available to avoid potential null pointer exceptions when no connections are available
updated keyboard request logic and refactored focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus
updated extra classpath handling in App . java to ensure proper formatting of file paths to avoid issues with path separators
[ fix ] coordinatematrix . solve ( ) do n ' t create a new matrix for each iteration
added import statement for org . springframework . integration . core . Message in GenericMessage . java to facilitate the use of Message
updated SQL queries in PostgresConnector and TaskAttempt classes to use a join method for better readability to improve code clarity and maintainability
updated filter selection logic in AquaFileChooserUI . java to ensure only valid file filters are set to improve user experience by preventing
added synchronization around synchronized blocks in P2PTransportManager . java to ensure thread safety when accessing shared resources
updated the method to return a string representation of Boolean values and added a test for the toFormulaString method to ensure correct conversion of Boolean values
updated import statements in PGtokenizerTest . java for consistency to improve readability and maintainability of the test code
refactor final variable handling in Java2TypeScriptTranslator and update related test cases to improve clarity and correctness in variable processing and ensure
added sequence creation and alteration for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment functionality
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of character data during reading
removed assertions for " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " in ImageParserTest . java to ensure that the
updated parent assignment from ` getParent ( ) ` to ` parent . getParent ( ) ` to ensure the correct parent component is referenced
reformatted import statements in multiple Java files for consistency to improve code readability and maintainability
replaced ` ENGINE _ finish ( engine ) ` with ` ENGINE _ free ( engine ) ` in ` NativeCryptoTest . java ` to
refactor iteration event handling across multiple classes to improve clarity and maintainability of the iteration event processing logic
updated HttpContent handling in FormDataHttpContentProcessor and NettyStreamingFileUpload to release resources properly to ensure proper resource management and prevent memory
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are removed after tests are recovered
added a check for " twitter : / / " in the BrowserActivity to launch an activity if the URL contains " twitter : / / "
added awaitHostStatus call to DeploymentGroupTest . java to ensure the test waits for the host status to complete before proceeding with further operations
updated logResult call from false to true in VisibilityController . java to enable logging of list labels for debugging purposes
increased the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing more
added @ Override annotations in StandardTypeMapperComponent . java to ensure proper method overriding and improve code clarity
added support for handling fraction resources in the PackageResourceLoader and Converter classes to enhance resource loading capabilities for fractional values in the application
removed file confirmation check from BasicFrame . java to streamline code by eliminating unnecessary checks
added assertions to ensure tagGroupId and tagArtifactId are not null before calling findNewerDependencyVersion to avoid potential NullPointerExceptions during execution
hbase - 13357 if maxtables / maxregions exceed quota in a namespace , throw quotaexceededexception ( ashish singhi )
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the token handling logic
refactor TestFuzzPreLoop . java for improved clarity to enhance maintainability and readability of the code
added a check to ensure f0 is non - negative in HTSVocoder . java to prevent potential errors when f0 is negative
updated logging statements and added null checks for pkColumn and fkColumn in SchemaRetriever and TableRetriever to improve logging clarity and prevent potential NullPointerException
remove the clearencoders ( ) method , it ' s no longer need .
added preference handling for empty pages in Workspace . java to allow customization of workspace behavior based on user preferences
added a warning to indicate that cucumber - needle has been deprecated to encourage users to use cucumber - cdi2
replaced ` activity . getTheme ( ) ` with ` resources . newTheme ( ) ` and updated theme handling in ` ShadowThemeTest `
updated error messages in VerifyFast . java for improved clarity to enhance readability of test failure messages for better debugging
no effective change - no effective change - no effective change
added a condition to check if the propertyNode is an IdentNode and added script functions for PROTO and SETPROTO to enhance property handling and
updated the shuffle method to include a random seed in TestFilterDirectoryReader . java to ensure consistent randomness in the readers collection
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to handle user name equality to improve user experience by providing appropriate sharing options based on
updated the path formatting in CookieRetrievingCookieGenerator to ensure a valid path is appended to the builder to avoid potential errors when the path is
updated formatting in multiple Java files to improve code readability and maintain consistency
updated backup count check from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated the comparison logic in ValidationResult . java to check if the page number differs from the current page number to ensure that the correct page number is
added a null check for the focused widget before evaluating highlighted index in UIDropdown . java to ensure that highlighted indices are only processed when the
fix checkstyle issue in soundsutil . playsoundatlocationexclusively ( )
refactor ApplePackageDescription to better manage AppleCxxPlatformFlavorDomain to improve clarity and reduce redundancy in platform flavor retrieval
simonstewart : add test case for clickhousifysql ( )
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
updated EnglishPTBTreebankCorrector . java file to improve code readability and maintainability
added a new file ` TestGetLoggerNPE . java ` that tests the ` getLogger ` method to handle potential ` NullPointerException ` during logger
added a ` getData ( ) ` method to ` PathSharingContext ` and refactored ` ActionDirectory ` and ` ScriptedProcessor `
do n ' t throw espressoexception if the method be not synchronized
added support for ` NEXT VALUE FOR ` in ` NextValExpression ` and updated related classes to support it to enhance the functionality of the `
improve error message when resource bundle be not pre - cached
added a threshold check and improved cache clearing logic in BoundedLocalCache . java and created a corresponding test in BoundedLocalCacheTest
added Leverage _ Level parameter to QuoineExchange and implemented order direction in QuoineNewMarginOrderRequest to enable financial
added a method to bind properties in PropertyDescriptor and created a new Test7192955 class for validation to ensure properties are correctly bound and validated
replaced ` int failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwj
added null check for parent component ' s buttonsAwatingRelease before resetting it to null to prevent potential NullPointerExceptions when the parent component is not
updated wrapWidth calculation and adjusted computePrefHeight method in LineCell . java and adjusted wrapWidth setting in StyledTextAreaSkin .
updated error message formatting in XSLTErrorResources _ it . java to improve code readability and maintain consistency in formatting
changed ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` to maintain
refactor string concatenation in multiple classes to use String . format to improve readability and maintainability of the code
replaced ` getNamespaceURI ` with ` getNamespace ` in ` StaxXmlPullParser . java ` to simplify the code by directly accessing the
removed conditional checks for nested joins in multiple test classes to streamline test execution by eliminating unnecessary checks
server : allow query by admin only for root admin
added a check for JavacFileManager in SourceFileManager and modified the constructor of CompletionTaskProcesor to include a cursor parameter
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest assertions instead of J
add support for null handler in textrenderer and metadatarenderer
fix ( tcp ) : fix symbol file mapping issue ( # 2694 )
removed debug print statements from TermFilterTest . java to clean up the test output and improve readability
removed the Reflection class and its related imports from Jooby . java and TypeConverters . java to streamline the codebase by elimin
refactor ThreadlessExecutor to introduce methods for handling finished states and waiting states to improve code readability and maintainability by encapsulating state
refactor error handling in DateTimeFormatter and add tests for null return behavior in TestDateTimeParsing to improve robustness by ensuring proper handling of null arguments
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` chunkLengthInKB ` to improve
added a case for WILDCARD in Types . java and created a new T7034495 . java with generic interfaces to prevent crashes
replaced a while loop with a while loop in LotsOfEvents . java to improve code readability and maintainability
updated conditional checks for HOP characters in TransclusionDecideRule . java to improve clarity and correctness of character processing logic
remove micronaut . version . printversion ( ) since it be no longer use
added unit tests for the Area3DPtg formula handling in TestBugs . java to ensure proper functionality and validation of name definitions in Excel
updated MindIcon to include a description if the name starts with a slash to ensure that the icon description is correctly formatted for better readability
updated onHomeIntent method to accept an additional parameter for internal state handling to enhance flexibility in handling home intents based on the internal state
refactor preference tree retrieval logic in CxxBuckConfig . java to improve readability and maintainability of the code
added ` showDetails ` method to ` FileDisplayActivity ` , ` FileDetailFragment ` , and ` OCFileListFragment ` classes to
updated function names from " $ apply " to " apply " across multiple files to standardize function naming conventions and improve code readability
fix high - level encode test case to account for the size of the symbol
updated header descriptions and parameters formatting in SourceBuilder . java to enhance readability and maintain consistency in parameter formatting
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the data set reflects changes in the adapter
removed a static method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the connection configuration by eliminating
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct functionality of
chore ( deps ) : remove unused method from defaults3crtasyncclient
updated error messages in DudPasswordTest from " DEF length 110 object truncated by 28 " to " corrupted stream - out of bounds length found
improve error message in hazelcasttestsupport . testcollectionsize ( ) for clarity
replace bailout with exception in case of graalinternalerror .
mow - 1349 fix for image not load in web
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a ` limit ` parameter to the ` getOrderBook ` method in ` YoBitMarketDataService ` and updated related methods to
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in ` StressHierarchyBaseClass . java ` and updated
add maxstringlength to standarddataflow so it do n ' t exceed string length
updated the retrieval of engines from configuration to use an empty string instead of a null value to ensure that the engine configuration defaults to an empty string
renamed the class ` FullIterator ` to ` WheelIterator ` and updated its implementation in ` TimerWheel ` to improve clarity
improve error message when generate bug annotation
replaced hardcoded wait time with a constant for chunk readiness to improve maintainability and readability of the test code
changed the visibility of the menu item from true to false in ListFragment . java to hide the uncompleted checklists menu item
refactor DefaultResultSetHandler to resolve the nested result map and add a new Contract class for managing ownership to improve code clarity and facil
added null checks and unregistration logic for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to ensure proper handling of null
added VertxGen annotation to PumpImpl . java to enable code generation for the PumpImpl class
removed unnecessary casting of FileDisplayActivity to mContainerActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by
trim whitespace from tokens in ConfigAttributeEditor and add a test for trailing and leading spaces to ensure proper formatting of configuration attributes in the editor
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux classes to improve code organization and maintainability
add unnamed module support for jdk9 +
added a check for " pg _ " before setting the " relKind " variable in DatabaseMetaData . java to ensure that " SYSTEM TABLE "
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
updated the RQST case value from - 1 to 1 in ThriftHiveMetastore . java and HiveMetaStore . java to
added a new module - info . java file for module exports and dependencies to establish modular structure for better encapsulation and modularization
added logic to manage the flush state and fill state in SslConnection . java to ensure proper handling of encrypted output and fill state during SSL connections
updated Log4j2LogDelegateFactory and LoggerFactory to improve logging functionality and add a new test for NoExceptionInInitializerErrorTest to
added server VM checks and modified execution logic in ExecutionEnvironment . java and Test7029048 . java to improve test reliability by
rename ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations to improve clarity and consistency in naming conventions
updated PGProperty to use " org . postgresql . ssl . LibPQFactory " instead of null to ensure compatibility with the latest PostgreSQL SSL
disabled the @ Test annotation in TestInterProcessSemaphoreEdges . java to temporarily disable tests that are currently failing
added sorting functionality to the theme keys in EditableResources . java to ensure consistent ordering of resource names based on case sensitivity
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminals to enhance terminal
added support for additional file extensions " . gr " and " . grs " in ClassType . java to enhance functionality by allowing additional file
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to ensure predictable iteration order for combined vectors
added a check for the size of values in XPathEntityProcessor . java to ensure that the loop does not exceed the bounds of names and values
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` to ` readPhoneStatePermission ` and ` accessW
[ log4j2 - 1343 ] add option to turn off template - based resolution
refactor AsmUtil to use wildcard generics for MethodVisitor and ClassVisitor instances to improve type safety and reduce casting overhead
added a new class LoggingAuditService to log user authentication success and failure events to facilitate auditing of user authentication success and failure
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness
fix a bug in beandefinitioninjectprocessor when a proxy be use with abstract class
camel - 16400 : camel - http - allow to configure http proxy via system property . thanks to benjamin gra
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding standards
added a call to jdkSerialFilter ( ) in System . java to enable serial filtering for the JDK implementation
improve log message to provide more information about the pool size
removed the ` forceFinished ( true ) ` parameter from the ` forceFinishScroller ( ) ` method across multiple classes to simplify the method
updated the method signature of ensureRealtimeClusterIsSetUp to use rawRealtimeTableConfig instead of realtimeTableConfig to enhance configur
added error ( ) and error ( ) methods to ValidationReport and updated error message handling in RefValidator to improve error reporting and provide clearer
updated inline QSB handling in InvariantDeviceProfile to use closestProfile . inlineQsb instead of displayOption . inlineQsb to improve
updated createClassPath method to handle URL decoding correctly to ensure proper handling of special characters in the location
updated the expected string in the Given annotation from ' 10 ' to ' ( . * ) ' in TransformSteps . java to allow for more
fix npe in pgraphicsjava2d . fillrect ( 0 , 0 , width , height )
replaced hardcoded timeout duration with a configurable variable in the FaultToleranceTest class to improve flexibility by allowing customizable timeout durations
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
added a method to set the Docker image URL in the Environments class to ensure the application uses the correct Docker image configuration
[ zeppelin - 4892 ] fix test failure on jdk11
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced ` createHardLink ` with ` copyFile ` in ` SnapshotTaker . java ` and added checks for file existence before copying to
refactor method name from ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming
[ pytorch ] add device check to mxndmanager ( # 1358 )
added a check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to avoid
updated test classes to use JUnit4 runner instead of InstrumentationTestCase to improve compatibility with modern Android testing framework
added ` GasLimitRule ` and ` ParentGasLimitRule ` to the list of rules in ` CommonConfig . java ` to ensure proper
changed the access modifier of ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java ` to
renamed the variable ` autocommit ` to ` runInTransaction ` and updated related logic accordingly to clarify the purpose of the transaction
add null check for listener in TripleServerStream . java to prevent potential NullPointerException when listener is null
[ hotfix ] [ doc ] update documentation in jobmanageroptions and restartstrategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing for discount categories to
refactor Common class to improve code organization to enhance maintainability and readability of the codebase
refactor Launchable class to use try - with - resources for better resource management to ensure proper resource cleanup and avoid potential memory leaks
refactor StreamExecDeduplicate class to improve code readability to enhance maintainability and reduce complexity in the code
added a warning log for sending Kafka messages to the topic to improve error handling and provide visibility into message sending issues
dataes - 356 - add immutable annotation to simpleelasticsearchpersistententity and simpleelasticsearchpersistentproperty
fix setcoord ( ) method to return true if setcoord ( ) fails
added scroll event logging and swipe event handling in AskGestureEventsListener . java to improve debugging and gesture responsiveness during user interactions
ngramestimator : do n ' t compare by key if they have the same size
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align
updated StatsLogCompatManager to retrieve folder icon labels and cardinality to enhance functionality by providing more relevant information about the folder icon
replaced calls to ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java for testing skeleton predicates to facilitate testing of loop predicates in a graphical environment
modified the ` SelectionHighlighter ` class to implement a ` setHandler ` method and modified the ` equals ` method in ` equals ` to
added a new ` StringResultConverter ` class and modified the ` stringValue ` method in ` AsmRuntime ` and ` AsmUtil `
camel - 19751 : disable camel - test that do n ' t run reliably on apache ci
changed the condition from ` WaitForSingleObject ( console , 100 ) ! = 0 ` to ` WaitForSingleObject ( console , 100 ) =
added null checks for the buffer before setting it in the setInBuffer method to prevent potential NullPointerExceptions when buffer is not initialized
updated the assertion in TestSolrDiscoveryProperties to use File . separator instead of " data / " to ensure compatibility across different operating systems
updated OS detection logic in AutoUpdaterServerProperties . java to handle Windows and Mac environments to ensure compatibility with macOS pre - Catalina
updated the Lock constructor to accept a String lockName instead of a File object to improve clarity and usability by using a more descriptive
replaced ` appIcon ` with ` allApps ` in ` Overview . java ` to retrieve the visible bounds of the all apps view
updated method calls to use ` ClientDatagramEndPoint . this ` instead of ` Invocable . this ` to improve code clarity and
updated GET _ STEP _ EXECUTIONS string to use " order by STEP _ EXECUTION _ ID " instead of " oreder "
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added a check for unknown buttons
[ hotfix ] [ rest ] add test case for taskrestrepositoryit
replaced logger references with a static final logger reference in multiple classes to improve consistency and maintainability of logging throughout the codebase
updated expiration time handling in SsoAccessTokenProvider and added new test cases in SsoAccessTokenProviderTest to improve accuracy of token expiration checks and
[ geos - 6640 ] skip test that fail on macos
added mock interface methods to GreetResourceMockedTest and OciMetricsCdiExtensionTest classes to enable mocking of alarm suppression
reordered conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
added a null check for the MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE statement to prevent potential NullPointerException when accessing the MediaDatabase
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure consistency with the parent context for
updated file and folder footer formatting logic in OCFileListFragment . java to improve clarity and functionality when displaying file and folder lists
changed the default value of HashKnownHosts from " yes " to " no " in ScpServerTestSupport . java and modified key retrieval
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the codebase
added a new test class ThreadFactoryTest for testing thread creation to ensure that the thread factory behaves as expected in a multi - threaded
refactor lock period retrieval to use a dedicated method for dynamic properties to improve code readability and maintainability by reducing redundancy
added a new TicketModel instance in EditTicketPage . java to initialize the ticket model for further processing
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss app
updated constructors in multiple assertion classes to accept a self - type parameter to enhance type safety by ensuring proper type casting for assertions
added a new menu item ` MENU _ QUOTE ` and implemented it in ` TweetActivity . java ` to enhance user experience by
fix a potential deadlock in jmeterthread . stop ( )
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` in ` MediaCodecAudioRenderer . java ` to clarify
added a conditional check before offering and closing failures in ServerHTTP2StreamEndPoint . java to ensure failures are only offered when the result
corrected the spelling of " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for concurrent operations
replaced ` Subscription ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` RestAdapterTest `
added error handling for creating the ` components . yml ` file in ` ComponentPresetManager . java ` to ensure proper error logging when the file
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated column qualifier handling in tests to improve clarity and
[ marygui ] remove the unused flag and update the audio effect when the locale change .
added error handling for invalid sessions in Session . java and updated assertions in SessionHandlerTest . java to ensure that invalid sessions throw an appropriate exception
hhh - 14529 remove exceptionhelper . java that be no longer use
updated key pair generator initialization from 256 to 255 in JceX25519Domain . java to improve security by using a larger key pair
added a codec setting for the Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure consistent handling of postings
[ hotfix ] [ runtime ] add debug log for empty checkpoint range header
added support for RSA / ECB / OAEPPadding algorithm in the OperatorHelper class to enhance security by allowing the use of OA
updated platform imports from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the macOS
added handling for SecurityException and improved error logging in DebugSourcesResolver . java to enhance robustness by logging warnings when resolution fails
removed conditional check for OS . IS _ UNIX before returning values in AbstractTest . java to simplify code logic for better readability and maintainability
updated error handling in FileUploadUtils and added logging for segment generation in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure generated files are
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added ` BufferUtils . freeMemory ( byteBuffer ) ` in multiple
enable the use of the PIPELINE _ DOWNLOADER flag in FastSyncChainDownloader . java to enable the use of the PIPELINE
replaced ZONE _ OFFSET with DST _ OFFSET in SimpleDateFormat and added a new test class Bug7130335 for Mosc
replaced direct references to ` mRollo . mState . iconCount ` with a local variable ` iconCount ` to improve code read
server : fix npe in listvirtualnetworks when there be no router
refactor StringBuffer class to improve performance to enhance efficiency of string manipulation operations
set the uid of the rule in the RuleResource class to ensure the rule is associated with the correct UID
added a null check for the listener before unsubscribing to prevent potential NullPointerException when the listener is null
added a pretty _ print property to JoltTransformJSON to enable users to apply pretty print formatting to the output of the Jolt transform for
change access modifier of access _ table from private to public to allow access to access from outside the class
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use " No resources were found at " instead of " Resource " to improve cl
improve error handling of xmpptransport . run ( ) by throw an ioexception instead of stop ( )
refactor multiple classes related to control , controlFactory , ExtendedRequest , UnsolicitedNotification , and DocFlavor to improve code organization
added additional parameters to the AmbariManagementControllerImpl class for better tracking of upgrade suspension status to enhance error handling and provide better
updated copyright year in FindsByCssSelector . java to reflect the current year and ensure compliance with current standards
removed the initialization of ` wfields ` in ` Resolver . java ` to simplify the code by eliminating unnecessary variable assignment
added a constructor to ` OAuthProperties ` that sets encryption and signing keys using ` CipherExecutor ` to enhance security by enabling configurable encryption and
hbase - 25829 fix npe in htabledescriptor . getcolumnfamilies ( ) ( # 2538 )
replaced AllowedResourceAliasChecker with a lambda expression for alias check to simplify the alias check logic for improved readability and maintainability
refactor ObjectInputStream , ObjectStreamClass , and package - info classes to improve code organization and maintainability
[ java ] add reset ( ) method to cluster interface to reset idle strategy .
updated the incrementation of ` currentChunkID ` in ` ChunkedWriter . java ` to ensure correct incrementing of ` currentChunkID
added a new abstract class AbstractJobExecutor to implement job execution functionality to provide a base class for job execution handling in batch processing
replace return statement with replayFuture assignment and break in RecoveryStrategy . java to improve clarity and maintainability of the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
do n ' t call super . getserviceids ( ) if discovery be disabled
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt (
improve trace of invalid frame state during runtime compilation .
updated currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure accurate aggregation of time values
updated the ` answer ` method to return a globally configured answer if the method is abstract to enhance functionality by allowing stubbing of abstract methods
refactor package access checks in NashornScriptEngine and Context classes to utilize Class instead of String for better type safety to enhance security
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup in ` ContextPathPluginTest ` to
refactor code to use a more descriptive variable name and improve font handling in ContributionListPanel . java to enhance code readability and
added handling for the " has - touch - interaction - service " request in the QuickstepTestInformationHandler and TestProtocol classes to ensure accurate
replaced the try - catch block with a Mutex . EVENT . writeAccess method in ConnectAction . java to improve thread safety and encapsulate
replaced ` String ` with ` BuildTarget ` in multiple locations in ` TargetsCommand . java ` to improve type safety and clarity in
added new files ` ArrayHelper . java ` , ` Asserts . java ` , ` Enums . java ` , and ` NativeRegExp .
added support for HOME and END commands in the Less . java file to enhance user interaction by allowing keyboard shortcuts for home and end actions
removed synchronization around the retrieval of connected plots in PlotHandler . java to simplify code by eliminating unnecessary synchronization
replaced the logic for launching a share activity with a chooser activity in the Utilities class to streamline the process of launching activities
changed the constructor visibility of the Roster class from public to package - private to restrict access to the constructor for better encapsulation
added basic constraints to the certificate generation to enhance security by enforcing stricter certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address test failures due to incorrect
replaced the usage of Integer . MAX _ VALUE with a direct assignment of precisionStep in TrieDateField and TrieField to simplify the code
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` to test array field access and field retrieval to ensure that array types return a zero - length
wait for hazelcast process to be destroy before shut down hzstartit
replaced ` @ Singleton ` with ` @ ApplicationScoped ` and added a ` init ` method to the ` ApplicationSettingsService ` class to
change safepoint value from 0 to 1 to ensure safepoint value is always positive
updated thread name field to use " Ljava / lang / String ; " instead of " [ C ] " to ensure compatibility with Java '
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
add stroke and font support to pgraphicsjava2d . stroke ( ) and pgraphicsjava2d . font ( )
fix ( sql ) : fix a bug in sqlvalidatorimpl . expanddynamicstar ( sqlidentifier , sqlidentifier )
added a method to find nested children in Comment2000 to facilitate the retrieval and management of nested comments
added a status warning icon for the PMS frame in HTTPServer . java to enhance user experience by providing a visual indication of the status
fix mouseevent . getmodifiers ( ) , mouseevent . getmodifiersex ( ) , and mouseevent . getmodifiers ( )
make amd64countleadingleadingzeronode and amd64counttrailingzeronode cycle - 3
( chore ) camel - as2 : fix npe when disposition notification be not set
refactor Locale class for improved clarity to enhance maintainability and readability of the code
added a button to clear logs in ErrorConsoleController and implemented a method to clear logs in ErrorConsoleViewModel to enhance user experience by allowing
updated mRecentsAnimationController initialization in RecentsView . java to ensure proper initialization of the animation controller
updated caption handling in Debug and CaptionMap classes to use LocaleHolder instead of ConsolePlayer to improve localization support and simplify message formatting
added connection pooling method and modified execution count in multiple test classes to improve resource management and prevent potential memory leaks
[ java ] add operablink capability to defaultdriversessions .
show download error dialog if download fails
added multiple LIFX product entries for " LIFX " and " LIFX Switch " to the LifxProduct class to enhance
added asynchronous handling for replica creation in OverseerCollectionProcessor and improved test cases in CollectionsHandler to enhance asynchronous processing capabilities and enhance test
refactor ` PGSQL _ PK _ BYTES _ LIMIT ` and ` CHARSET ` constants in ` PostgresDatabase . java ` and ` Post
updated LogPanel and SummaryPage to use objectId instead of a hardcoded string to ensure consistency in referencing the repository ' s HEAD identifier
bugfix : use unit _ XYZ instead of unit _ y for parent tail
added a new method ` browserDestroy ` to ` AndroidImplementation . java ` and modified the ` deinitialize ` method to ` destroy ` to
added a wait for active collection readApiTestViolations in AutoScalingHandlerTest . java to ensure that the test does not hang indefinit
refactor the loop to use an index - based approach for processing terminal attributes to improve readability and maintainability of the code
updated soft reset action logic to include controller state checks to improve clarity and accuracy of controller state checks
disable on - disc stream cache to speed up texture pack reloading .
updated parentFolder assignment logic in Request . java and RequestV2 . java to ensure proper retrieval of DLNA resources based on media renderer
cloudstack - 4892 : fix typo in ispersistent variable name ( # 4893 )
replaced ` deleteOnExit ( ) ` with a custom ` close ( ) ` method in ` FileOutputStream ` to ensure temporary files are deleted
added error handling for Forbidden responses in StandardGitHubRepository . java to improve robustness by logging specific HTTP 403 responses
log4j2 - 1349 add getoriginal ( ) method to messagefactory2adaptertest
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex from " ( [ 0 - 9 ] { 1 , 2 } ) " to " ( [ 0 - 9 ] { 1 ,
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience with smoother transitions
refactor ProjectCommand to use passedInTargetsSet for better clarity to improve code readability and maintainability by reducing redundancy
added a timezone setting and an assertion for the format2445 method in TimeTest . java to ensure correct formatting of time values in UTC
refactor MediaSessionConnector to improve session management to enhance performance and maintainability of media session handling
replaced the deprecated JSSEFactory with a direct call to getSslImplementation in Http11NioProcessor . java to improve compatibility with the
updated the calculation of the accuracy in GpsLoggingService to use the current location ' s accuracy instead of the altitude value to ensure accurate accuracy
added a method to check if futures are enabled in BinanceExchange and updated client order ID handling in BinanceAccountService and BinanceTrade
change variable name from ' accounts ' to ' instructorCoursesTable ' and ' instructorAccountsTable ' to improve clarity and consistency
set accept queue size to max worker threads in ThriftHttpCLIService to optimize resource usage based on available worker threads
replaced direct class name retrieval with a constant for the watchServiceEnabled variable to improve code readability and maintainability by avoiding repetitive
camel - 14284 : camel - jms - allow to configure jms connection to use ssl by default
replaced ` UserException . parseError ( e ) ` with ` UserException . validationError ( e ) ` in ` DrillSql
updated the calculation of the duration in GCInspector . java to ensure that the duration is always non - zero for a really fast collection
fix nodewithcommentblock . getcommentonlinecomment ( ) to return empty optional
replaced Unsafe usage with a method to check if the operating system is a macOS and modified memory reservation logic to improve compatibility with macOS
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting
hbase - 25815 add procid to hbaseadmin . waitforoperation ( ) and add procid to hbaseadmin .
camel - 14284 : camel - cxf - allow to specify the service class when create a cxfendpoint
refactor the YamlChangeLogSerializer to use a container map for storing database change logs to improve the structure and organization of the YAML output
updated output formatting in SchemaPrinter . java to improve readability of output messages
remove regeneration of all roads from the plot , since they be no longer need
updated references to ` getContext ( ) ` in ` HomeFragment ` to use ` getActivity ( ) ` instead of ` getContext ( ) ` to
updated @ GeneratedValue annotations to include " native " generator in multiple classes to ensure compatibility with the native entity naming conventions
removed the country parameter from the getSystemTimeZoneID method to simplify the method by eliminating unnecessary dependency on country information
updated the write method in BZip2Codec to include position and remaining parameters to enhance output handling by providing more detailed information about the data being
ggb - 1359 move startlogger ( ) from appw . java to appw . java
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified Value . java to use it in both Type . java and Value .
updated equality checks for group comparisons to use ` . equals ( ) ` instead of ` = = ` to improve code readability and avoid potential
updated Liquibase . java and LiquibaseDropAll . java files to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and reduce complexity
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` to improve the flexibility of
patch by jbellis ; review by brandonwilliams for cassandra - 1188
fix serialization issue in fml metadata collection ( # 3550 )
modified the logic for setting and deleting elements based on the presence of a previous element in the array to ensure proper handling of previous elements in the
updated file handling logic in FileUploader . java to correctly associate the current upload with the parent file to ensure the current upload correctly references the correct
added a new file UTF8ReaderBug . java that tests supplementary characters in UTF - 8 to ensure proper handling of supplementary characters in
added a new test class ` ProxyBuilderTest ` to verify the functionality of the ` sayHello ` method in a ` Foo ` interface to
updated subscription streams from " depth " to " depth20 " in BinanceIntegration and BinanceUsIntegration classes to ensure compatibility with the latest
added resetAllocation ( ) method to SimpleParallelizer and implemented resetAllocation ( ) method in Wrapper to reset allocation state for better resource management
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
added synchronization around retrieving system properties in Agent . java and created a new AgentCMETest . java file to ensure thread safety when accessing system
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to include conditional checks for the last label index to ensure accurate width and height calculations based on
added delay and abort test methods to ` CodeFirstSpringmvcIntf ` , ` TestResponse ` , and ` SpringMvcIT
replaced direct retrieval of string values with a loop for adding term frequencies to improve performance and readability of the code
replaced the usage of ` requireRule ` with ` new BuildTargetSourcePath ` in ` Omnibus . java ` to simplify
add a chat message when the versioning feature be disable .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to ` MediaFolder ` to
removed the " - b " argument from the AidlStep and modified the format string in GenAidlTest to streamline command
do n ' t delete obligation when compare equal ( # 79 )
added a todo to test the functionality of the FakeHttpLayer class
[ hotfix ] [ runtime ] remove error handler from embeddedleaderservice
refactor CompositeDiscoveryClient to use reactive programming instead of stream - based operations to improve performance and readability of the code
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in configuration handling
[ hotfix ] [ doc ] update jobmanageroptions documentation
replaced the method ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and updated related visibility logic to improve code clarity and
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4068 :
refactor test setup in AuditAliasCommandIntegrationTest to use JUnit ' s @ Before annotation to ensure proper initialization of the ProjectWorkspace before
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and reduce unnecessary
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling for periodic refresh in CachedStore . java to improve robustness by logging errors during periodic refresh failures
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and modify provider
added a method to check default background fill settings in HSSFCellStyle . java and updated color handling in HSSFPalette . java
refactor ZonedDateTimeFormatterBenchmark for improved clarity to enhance maintainability and readability of the benchmarking code
added a new method ` shouldBufferUpdate ` to ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdateProcessorTest ` to
added a null check for motor and stage in SimulationListHandler . java to ensure robustness by preventing potential null pointer exceptions
make / editreplace / / editscript / / editreplace / / editreplace / / editscript and / editreplace / / editreplace
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the declaration of the processor variable to be final to ensure that the processor reference cannot be reassigned after initialization
added a listener to handle write failures in the WritableKeyProcessor to improve error handling and provide feedback when the end of the stream is reached
added support for " CUBE " database type in MySQLDatabase . java to enhance compatibility with Cube database features
added a try - catch block around the rm call in TestReplicationHandler . java to handle potential IOException during the removal process
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to
refactor field retrieval in DefaultOkHttpClientFactoryTest for clarity to improve readability and maintainability of the test code
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ` os ` variable in ` RawMessageContentRedirectInterceptor . java ` to prevent potential ` NullPointerException ` during execution
ggb - 1343 fix for ggb - 1343 and ggb - 1344 , ggb - 134
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified exception handling in ` UIUtil . java `
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added preference for unread pull notifications in TalonPullNotificationService to enhance user experience by allowing users to toggle unread pull notifications
added a check for the parent object type in IsNullNode . java to ensure that only valid object types are processed to avoid potential errors
updated Box2DTest . java , Pong . java , and OrthographicCamera . java to use the application ' s graphics context
updated LinearLayoutManager and layout manager initialization in ViewPostDetailFragment . java to improve code readability and prevent potential null pointer exceptions
changed log level from trace to warn for background operation abort logging to provide a less severe logging level for better visibility of background operations
added debug print for method instance name and flags in JimpleBodyBuilder . java to facilitate debugging by providing visibility into method instances
ggb - 1353 fix for ie10 + and ie11
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter in the ` getNotificationUsers ` method to enhance user retrieval by filtering
updated the base URL in CGIARProvider from " droppr . org " to " srtm . csi . cgiar .
removed property listeners and removed listeners in MotifFileChooserUI . java and created a new test class bug6520101 . java for
change return type of handle method from void to boolean in multiple UI classes to indicate success or failure of the operation
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods in ` BuildRuleResolver ` to improve type safety and error handling for
added a visibility condition to the transportSpinner based on makingShortcut to improve user interface responsiveness by hiding the transport spinner when necessary
modified the handling of ` attributes _ field ` in ` lintEnv . info . lint ` and added new classes ` T7043371
updated backPressed method to return a boolean and modified its return type from void to boolean to improve control flow by allowing back navigation based on button
added support for enabling or disabling long view index in QueryServices and updated the method for retrieving the view index data type to improve flex
replaced " V " with " v " in SDRTrunk . java to standardize the output format for better readability
updated private key path handling in PrivateKeyParserTests to ensure consistent path formatting to improve readability and prevent potential issues with path formatting
mtable : remove unused columnposition parameter from diffdropcolumn ( ) method .
updated IndexWriter instantiation to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with the latest testing
hbase - 25815 add option to disable column family check in hbase importtsv ( # 258 )
[ java ] : use logsubscriptionid instead of logrecordingchannel to avoid memory leak .
replaced direct calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " )
added a condition to return early if the first element of the JSONNodeNew is of type " i " to handle cases where the first element
[ hotfix ] [ table - planner - blink ] fix typo in procedure javadoc
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) in applyResourceBundle method to ensure proper resource loading based on the system ' s
[ wasm ] add normalization pass for kotlin array creation .
lucene - 9692 : do n ' t increment position when there be at least one value in the termenum
fix nullpointerexception when author list be miss
added OSGiTest . java for testing Google Gson annotations and sun . misc dependencies to ensure proper functionality and correctness of import - package
do n ' t check if a controller service be enable for a dependent service and increase test coverage
hbase - 25815 htable . setautofill ( false ) should not clear buffer on fail
fix : fix type casting in ctscanner , defaultjavaprettyprinter , signatureprinter , and annotationtest
added hasuserdata ( ) method to simplefeatureimpl to check if there be a userdata
removed the ` throws HiveException ` declaration from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to
refactor RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future updates
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for better performance
added a new file ` InJavaSourceSet . java ` to handle Java source sets and updated imports in ` UsesJavaVersion . java `
updated resource path handling in TestGDALParser to use a variable fitsFilename to improve code readability and maintainability by avoiding hardcoded
added a new method ` createGetter ( Object obj , String attribute , boolean enable ) ` to the ` ReflectionHelper ` class to provide a
remove defaultprefs check - no real use ?
added a new constant ` INDEXER _ NO _ COMMIT ` and updated related classes to use it to control commit behavior in the indexing process
createvolume api : allow both disk offeringid and snapshotid to be pass when create a volume .
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to ensure content is never null and improve test cl
added null checks and methods for adding and subtracting periods in LocalDate , LocalDateTime , and ZonedDateTime classes to enhance robustness by ensuring proper handling of
added a new file ` Issue382 . java ` to handle specific error types for various HTTP error scenarios to enhance error handling capabilities and ensure
replaced the private static method ` signum ` with a direct return statement in ` PositionUtils . java ` to simplify the code and improve read
added a conditional statement to hide the text view in AttachmentAdapter to improve user interface by hiding the text field when conditions are not met
fix ( import ) : fix npe in jdtimportbuilder and jdtimportimpl
simonstewart : do n ' t cast to firefoxoptions to firefoxoptions
added a new LiquidBlock class implementing BucketPickup and updated access modifiers in the LiquidBlock class to enhance block functionality and
amq2902test : do n ' t try to log exception if it ' s already in the log .
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
[ log4j2 - 1343 ] do n ' t try to find a distinct observation if it already exist .
updated system property checks to include specific annotations for Nightly , Weekly , and BadApple in LuceneTestCase . java to
refactor method name from ` createLogger ` to ` getOrCreateLogger ` in ` SQLEditorSupport . java ` to improve cl
add denyaccess ( class . class , method . class , proxy . class , field . class , field . class , proxy . class )
fix for pgraphics2 . updatepixels ( x , y , c , d ) , use writableraster . getbytes ( x , y
updated the verification of transactional properties in HiveAbstractReader . java to ensure that partition and table properties are correctly added to the transactional properties
refactor scrolling logic in Workspace . java for better clarity to improve readability and maintainability of the code
hhh - 14850 - introduce unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator for jdbc batch
remove analysiserror . shouldnotreachhere ( ) without message
added a new test class ` MockWithStaticStateDemo ` and created ` PartialMockingRetainsStateTest ` to verify the behavior of
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing of
refactor security handling in SecurityUtil by introducing a null check for the ugi before executing the action to improve robustness by handling potential
added error handling for audio buffer allocation in OpenALMusic . java to provide clearer context on the error encountered during audio buffer allocation
camel - 14284 : rename reslovestringparameter to resolveparameter and deprecate it
refactor precision and scale handling in RexNodeConverter to improve accuracy in determining the decimal type based on the unscaled value
replaced direct calls to ` getAttestationProperties ( ) ` with ` orElseGet ( Attestation : : empty ) `
updated the account update method to use ` Long . toString ( now ) . getBytes ( ) ` instead of a fixed string to ensure the account
replaced instances of ` AxialStage ` with ` RocketComponent ` and updated selection handling in ` BasicFrame ` , ` DesignPanel
added a long - running - time parameter to the Args class and initialized it in the INSTANCE to allow dynamic configuration of the VM ' s long
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and added a new class Ideas _ 2012 _
replaced imports of sun . misc . Service with java . util . ServiceLoader in HttpServerProvider , HttpsServer , and ScriptEngineManager
mondrian : fix gml3 encoding test ( # 3649 )
simplified assertion statements in TestRestClientRequestImpl . java to improve readability and maintainability of the test code
added a condition to check if the reference database equals the comparison database before checking if the backing index already exists to ensure that unique constraints are only
removed the ` addAndroidConstants ` method and modified the logic for setting Android properties to streamline the code and improve readability by elimin
replaced assertions with await statements in multiple test classes to improve test reliability and readability by using await statements
added user _ args and is _ daemon and timestamp fields to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance trace
[ gr - 16922 ] fix module support in jdk 11 +
[ hotfix ] [ table - planner - blink ] fix typo in log message
added a new file TheRockMetaDataDemo . java to demonstrate the functionality of the TheRockExchange to provide an example
updated FloatingDecimal and FormattedFloatingDecimal classes to use strictfp and added a test for strictness in ParseDouble to ensure proper handling
replaced unparseIdentifier with columnName in ColumnStatsSemanticAnalyzer . java to simplify the column name appending process
added a test method ` replaceField ` in ` JavaTemplateContextFreeTest ` and modified the method signature in ` BlockStatementTemplateGenerator `
added a check to exclude synthetic classes from static instantiation in InstantiateStaticClass . java and introduced a new test method in Bug1282 . java
removed the method ` projectFilesystem . getPathForRelativePath ( basePath ) ` from ` WorkspaceAndProjectGenerator . java ` to simplify the path retrieval
added support for handling pending rescue in IkStepDefinition . java to improve rescuption management and ensure proper handling of pending rescuues
removed the ` final ` modifier from ` equals ` and ` hashCode ` methods in ` AbstractType ` and ` BigintType ` , `
added a method to retrieve the SyncLevel enum and updated its usage in UpdateLog . java to provide a way to set the default SyncLevel
[ hotfix ] [ test ] fix test flakiness in controlcommandsstest
added a condition to check if the slice is not in CONSTRUCTION and not in RECOVERY state to ensure that recovery operations are only
pdfbox - 4892 : fix typo , a suggest by valerybokov
added SDK path handling in AppleBundle and SwiftStdlibStep classes to enable dynamic SDK path configuration based on execution context
[ hotfix ] [ runtime ] clean up transient blob in blobserver and blobcache
cloudstack - 4892 : fix typo in warn message ( # 4893 )
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct data type
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the proxy retrieval in EmbeddedVelocityToolboxView to use the class loader to ensure compatibility with different classloader configurations
refactor nightly warning handling to use Version . isNightlyBuild ( ) instead of Version . contains ( " nightly "
added support for handling Oracle database statements in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements in Oracle databases
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide configuration for
fix ( hawtio - system ) : fix port number in jolokia test
updated BLOB _ SIZE and SLIDER _ MARGIN constants and refactored time formatting logic in DrawAudio . java to improve
added a method to add a multifactor authentication provider bypass to DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
refactor findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods in MaxRectsPacker . java to
[ drools - 3540 ] fix checkstyle violation in kie - ci - java module
added methods to set and get the help page in PMS and updated help page handling in HelpTab to improve user accessibility by allowing dynamic
added a new file ` GeocodeProviderFactory . java ` and a new interface ` Constants . java ` for managing Omni Notes Beta
removed the import of ` util ` from ` CharArraySet ` in ` LuceneAnalyzerUtil ` and ` LuceneTokenizer ` to simplify
[ hotfix ] [ test ] fix checkstyle violation in optiontest
updated GATEWAY _ SERVER _ ID from " GATEWAY _ SERVER " to Protocol . GATEWAY _ SERVER _ ID and modified
updated conditional logic in SegmentsInfoRequestHandler . java and modified collection creation in CollectionsAPISolrJTest . java to improve clarity and functionality
updated the calculation of ` numPredictiveAppCols ` to use ` 4 ` for phone devices to ensure correct application column count based on device
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` for checking scalar subquery input to improve code readability and maintain
added a new class ` BlockBuildCraft ` that extends ` BlockContainer ` and a custom ` onBlockRemoval ` method to manage inventory
updated layout parameters for drag - and - drop functionality in DeviceProfile . java to ensure correct positioning of the drag - and - drop component
use start ( ) instead of run ( ) in yahoosession
added null checks and improved client shutdown logic in HiveMetaStore and HiveMetaStoreClient classes to ensure proper resource management and prevent potential memory
updated the ` getDisplayScript ` method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` and added a test for handling the
removed static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in ZkCoreNodeProps . java to streamline code
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance and reduce dependency on ThreadLocalRandom
added a check to ensure the launcher is ready before performing backup operations to avoid potential errors when the launcher is not available
updated IllegalArgumentException messages in Cell . java to include a placeholder for better error reporting to improve clarity of error messages for better debugging
added unit test base on user forum issue
rename ` setBodySpace ` to ` setBarSpace ` across multiple dataset classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated FileMessageHistoryTest to use TemporaryFolder for file creation and assertions to improve test reliability by ensuring that files are created in a temporary
added debug logging statements to multiple loggers in Grasscutter . java to improve performance during development and troubleshooting
changed the ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods to be static
updated state checks in Launcher and Workspace classes to include a method to retrieve the workspace ' s state to ensure proper handling of workspace states and
refactor multiple array assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
added a conditional check for cacheable before notifying new templates in SnippetTemplate . java to ensure templates are only notified when cacheable is enabled
added a new ` SCOPE _ SOLR _ CORE ` constant and modified related classes to utilize the new ` SCOPE _ SOLR _
updated the table name from " CREATE TABLE measurement ( logdate date not null primary key , peaktemp int , unitsales int ) PARTITION
rename ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' ' for clarity
refactor session handling logic in HttpSessionContextIntegrationFilter to simplify session creation logic to improve clarity and maintainability of session management logic
added a new file TestIfWithDeadRegion . java that contains a method to retrieve a string from a Supplier to facilitate testing
corrected a typo in the variable name from EnglishUdLas to EnglishUsdLas in DependencyParserITest . java
added HighResolutionTimer to manage high - resolution timing in SnowflakeIdGeneratorTest . java to ensure concurrent access testing is properly managed
added a static UI flag and modified toast handling in MainFragment to conditionally display a toast bar based on user preferences to enhance user experience by
replaced a custom Privilege implementation with a lambda expression in WindowsSecurity . java to improve code readability and ensure proper resource cleanup
replaced ` setParameter ` with ` setParameterIfAbsent ` and updated parameter handling in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler
replaced hardcoded error message with localized strings in multiple files to improve internationalization support and maintain consistency across the application
tika - 2696 -- add mime type for tika - ooxml / vnd / openxmlformats - officedocument
added logging statements for glue loading and feature loading in Runner and FeaturePathFeatureSupplier classes to enhance debugging capabilities and improve type safety in feature path
camel - 16400 : camel - eip - documentation - enricher - fix xml line break on window
do n ' t schedule schema pull if there be no migration
added debug logging for stored notify and playback devices in DeviceConfiguration . java to improve traceability of device configuration and ensure default capture device is used
added WebsocketConfig class and updated ReactorNettyWebSocketClient constructor to accept ShenyuConfig to enhance WebSocket configuration flexibility and
added support for the ISuiteRunner and TestRunnerAdapter in CacheValidationListener to enhance test listener management and ensure proper cleanup during test execution
added a check for non - empty content length before adding it to the document to ensure that the content length is only added if it is not
fix thread safety issue in defaultsolvemanager # solvingterminated ( )
added error handling for creating a non - existent time series in MManager . java to improve robustness by ignoring PathAlreadyExistException during concurrent
added a method ` check ` to the ` Authz ` class to provide a way to check if the authentication result was successful
changed access modifiers of several methods from public to protected in ShadowActivityManager , ShadowMeasuredParagraph , ShadowSettings , and ShadowStaticLayout to
cloudstack - 4892 : fix the bug in listpublicipaddresses api call , when the public ip address be in a reserved state
updated HttpParser to initialize _ valueString to an empty string instead of null and updated test method names for clarity to improve code readability and
added a static method ` threadCompleteInitialization ` to ` J9VMInternals ` and refactored the ` completeInitialization ` method to
added methods to create and retrieve external storage directories in ShadowEnvironment and created corresponding tests in EnvironmentTest to enhance functionality for managing external storage directories and
[ drools - 9 ] add unit test for mvel type coercion
removed unnecessary whitespace and improved code formatting in LoggingConfig . java to enhance code readability and maintainability
added exception message to the log statement to provide more context for debugging when an exception occurs during the construct process
added a check for the presence of " tel : " in the toNumber string before processing it to ensure that " tel : " is correctly
modified visibility logic for sharedWithMeIconV based on file type to ensure sharedWithMeIcon is only visible when the file is not a
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and set its value in TestTxnCommands3 . java to
updated constructors and constants in ExecuteStatementOperation and Operation classes to include session and query ID logging to improve clarity and maintainability of session management
replaced instances of ` Lists . newArrayList ( ) ` with ` Arrays . asList ( ) ` and ` Sets . newHashSet ( ) `
fix fail unit test . call gettypename because name include the namespace and it be different .
removed an unused method ` onErrorInStep ` from ` StepListenerSupport ` to streamline the code by eliminating unused functionality
refactor Wallet class to improve code organization to enhance maintainability and readability of the wallet implementation
camel - 14284 : fixed camel - netty - http to work with http content type . thanks to benjamin
replace System . out . printlns with log . infos in TestNonBlockingAPI . java to improve logging consistency and facilitate
added a check to return false if the row index exceeds the size of the connection list to prevent potential ArrayIndexOutOfBoundsException during database connection handling
add methodwithsamenameasenclosingclass rule to check if a method have the same name as the enclosing class
added ExtendedPlatformComponent to manage platform - managed objects in ManagementFactory and created a new ExtendedPlatformComponent class for platform - managed objects to enhance
replace single quotes in SQL queries with double quotes to ensure proper handling of special characters in SQL queries
updated parse method calls to include " org / knowm / xchange / bleutrade / dto / " in multiple test classes to ensure
refactor TextEscapeUtils for improved readability to enhance maintainability and ease of understanding for future developers
added a filter parameter to the FilteredQuery and modified its instantiation in AbstractSpatialFieldType . java to enable filtering functionality based on user - defined
updated progress display logic in GpsLoggingService and added posting to updateResultsEmailSent in AutoEmailHelper to improve user feedback during email
changed the ` inlinks ` collection from ` ArrayList ` to ` HashSet ` and modified the ` iterator ` method in ` LinkDb ` to
added synchronization to stopScan method in TradfriDiscoveryService to ensure proper cleanup of outdated results during scanning
updated filter functionality in HiveMetaStoreClient and modified testFilterForPartition method to accept a filterAtServer parameter to enhance flexibility in filtering
added ` Abandoned ` status to the ` requestWorkflow ` , ` proposalWorkflow ` , and ` bugWorkflow ` collections in ` TicketModel
set default value of columnAliasPrefix to null in multiple platform classes to ensure consistent initialization of columnAliasPrefix across platforms
replaced instances of ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat `
log a warning if run on a 32 - bit jvm on a 64 - bit system . this may limit performance .
pdfbox - 4892 : do n ' t copy ' b ' key in pdfcopy , a suggest by valerybokov
added DAEMON option to TerminalClient and implemented daemon mode handling in OptionEnum to enable the application to launch a web pendant UI
added a new class ` FlushIndexTask ` to manage index flushing in the benchmarking framework to facilitate the flushing of the index
patch by jbellis ; review by brandonwilliams for cassandra - 1343
added a condition to check for SEASONS output in MediaLibraryFolder . java to ensure compatibility with additional output formats
added a new file LocalSocketAddress . java to test IPv6 availability of DatagramSocket to ensure proper handling of IPv6 addresses in the socket
updated grid size points in GridSizeMigrationTask . java from 2 , 3 , 5 , and 6 to 4 , 5 , 6 , and
replaced direct calls to ` getName ( ) ` with direct references to ` classInfo . name ` in ` SerializerPojo . java ` to
added read - only support and improved transaction management in the Context class to enhance security by preventing operations on read - only contexts
refactor LookAndFeelCommand . java for improved readability to enhance maintainability and ease of understanding for future developers
replace floor ( boxIndex ) with ceiling ( lastRunStart ) in BlockBoxing . java to improve accuracy in determining the last run
updated assertion in GracefulStopTest to check for both ClosedChannelException and EOFException to ensure that the test correctly verifies for both EOFException and
replaced the usage of ReentrantLock with direct calls to put and get methods in NetJavaImpl . java to simplify code and improve
updated NetworkParameters class to improve network parameter handling to enhance performance and reliability of network operations
removed conditional logic for setting account asset optimization in DynamicPropertiesStore . java to simplify code by eliminating unnecessary optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and a constant J9 _ GC _ POLICY _ NOGC to
added validation for contract input in TransactionCapsule . java to ensure that invalid protocol buffer exceptions are properly propagated to the P2pException
remove the exceptiontypechecking . java file that be no longer use .
updated resource path in HelpContent . java to include " en / " and modified error logging in HelpContent . java to improve user experience by
added a new file ProcessorInfo . java to provide information about available CPU processors to facilitate monitoring of CPU usage across different operating systems
printingbugreporter : add - html option to generate html output
refactor logback logging system to use constructor instead of optional
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to use a dedicated updateDataOfCluster method to improve code readability and maintainability
added conditional configuration for tag propagation in SleuthTagPropagationAutoConfiguration and updated test cases in SleuthTagPropagationAutoConfigurationTests to
refactor RustCompileUtils to use a switch statement for handling different dep types to improve code readability and maintainability by consolidating logic
updated oauth2LoginLinks method to accept MultiValueMap as a parameter to enhance flexibility in handling query parameters during oauth2 login
hbase - 26400 use firstkey in halfstorefilereader instead of splitkey to get the first key .
hhh - 14850 - deprecate hibernate . tuple . generationtiming in favor of hibernate . tuple . generationtiming
added a new test method for layer normalization with nan values in TestLayerOpValidation . java to ensure correct behavior of layer normalization with nan values
refactor ` showShareFile ` method to use ` getFileOperationsHelper ( ) ` instead of direct calls to ` showShareFile ` to
added a new test class LiquibaseUpdateMojoExecutionTest to verify the execution of Liquibase updates with relative Clob
convert the proxy type from " proxyType " to uppercase to ensure consistent formatting of the proxy type in the application
split mod _ minecraftforge so that client arnt require to have mlmp instal if they do n ' t use a mp mod .
refactor JdbcDatabaseSnapshot to improve column retrieval logic and filter handling to enhance performance and maintainability by consolidating key retrieval and filtering logic
added a container for a label in the CSSBorderTest class to enhance the visual appearance of labels in the UI
added ` @ ConditionalOnClass ( RetryTemplate . class ) ` and ` @ ConditionalOnMissingBean ` annotations to ` RetryAutoConfiguration `
updated superclass constructor from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to improve layout matching functionality
updated the calculation of the parentTaskName in PinotHelixTaskResourceManager . java to use currentTimeMillis ( ) instead of nanoTime ( )
added error handling for ` AddServiceRequest ` parsing in ` ServiceResourceProvider ` to improve robustness by catching ` UncheckedIOException ` and
simplified the return statement in IndexDatabase . java by removing unnecessary boolean variable to improve code readability and maintainability
[ giac ] avoid arrayindexoutofboundsexception when round ( x ) < 0
refactor AnonCipherWithWantClientAuth class to improve code clarity to enhance maintainability and readability of the code
added @ Deprecated annotations to ProducerTemplate . java to indicate that these elements are outdated and should not be used in new code
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flaky test in evictiontest # testeviction
replaced the method ` encodeInternal ` with a direct variable ` saltedPass ` in ` Md5PasswordEncoder . java ` to
simplified the addition and removal of the ViewTreeObserver reference in IconRecentsView . java to improve code readability and maintainability
refactor Response class for improved clarity to enhance maintainability and readability of the code
change sstablemetadata . maxtimestamp from long . min _ value to long . max _ value in sstablemetadata . gettimestamp ( )
remove unused import and set preferred size of securitypanel .
added a check for non - empty replies before calling the ` getReplyingToHandles ` method in multiple classes to ensure that replies are only
replaced ` ToStringBuilder ` with ` Objects . toString ( ) ` in ` HitbtcBalance ` and added ` hashCode ( )
fix ( sql ) : fix order by clause with in statement
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity of
replaced the direct call to closeOpenFile ( ) with a direct call to open the OpenCookie to streamline the code by elimin
updated import statements and connection manager initialization in JsonToGrpcApplicationTests . java to ensure compatibility with the latest version of the library and improve
updated energy calculation logic in PipePowerWood . java to simplify energy setting logic for better readability and maintainability
added a check for the existence of the temporary output file before deleting it to ensure the temporary output file is properly cleaned up after use
updated the JSON property name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a test for retrieving trades
add a check to return null if the time limit be exceed in advancetimeby ( ) .
updated the expected Citation string in CitationStyleGeneratorTest . java to ensure consistency in citation formatting
replaced manual SQL statement creation with a static final SQL statement for inserting columns to improve code readability and maintainability by eliminating manual
g3d - 335 : add show _ deprecations _ for _ equation _ in _ expression _ in _ equation _ in
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when accessing the component
added caching configuration for meta scan when startrow is null and scanRoot is null to optimize performance by reducing unnecessary scans when startrow is
updated the script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
updated Math . java and StrictMath . java files to improve mathematical functionality and maintain consistency
added a debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug option for enabling transient taskbar
[ hotfix ] [ javadoc ] fix typo in accessexecution and archivedexecutionvertex
added a condition to set density to 3f when scale is 3 to ensure consistent density representation for 3D graphics
replaced ` optional ` with ` vararg ` in the ` Parameter ` class to clarify the purpose of the variable related to variable
added an exception to the log message in RegionStateStore . java to improve error handling and debugging information
replaced a custom AssertTask with a lambda expression for assertions in TestClusterUpgradeUtils . java to improve readability and maintainability of the
updated logging message and refactored AsyncHttpConnection and AsyncContextTest classes to improve clarity of log messages and enhance asynchronous request handling
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search interface
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : set
skip amd64 test on linux / amd64
added type checks for Integer , StringValue , and IntValue in Scalars . java to improve handling of different input types and ensure proper string conversion
updated error handling for primary key specifications in CreateTableStatement . java to provide clearer error messages for missing or multiple primary keys
added conditional logic to set drawable resources for LMP devices in CellLayout , Hotseat , and Launcher classes to enhance UI consistency
throw an exception if there be no isolate to query for flutter views
added multiple ` addHeaderWriter ` methods to ` HeadersConfigurer ` for various content type options , xssProtection , cache control , and
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and facilitate easier debugging
[ grid ] move distributed cdp test to grid - router
added type = " type " to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to ensure the @ AggregateRoot annotation
added functionality to manage prebuilt libraries in Python in - place binaries and corresponding test cases to enhance the handling of prebuilt libraries in the
added client authentication handling in NetServerOptionsConverter and updated default values in HttpServerOptions and NetServerOptions classes to ensure proper configuration of client authentication
updated directory paths in HiveConf and MetastoreConf to use user ' s system name instead of " / user / hive / repl /
refactor task view visibility handling in RecentsView . java to improve clarity and efficiency in determining visibility changes between primary and secondary tasks
no - jira - add timeout to amqptransformertest
removed the clearAll ( ) method from DataTableTopComponent . java to optimize performance by eliminating unnecessary method calls
renamed ` controller ` to ` flowController ` across multiple files to improve clarity and consistency in variable naming
refactored the handling of the exchange sum number in OperatorTreeGenerator and added a new test for the PipelineBuilder with exchange nodes to ensure the exchange sum is correctly set and validated during pipeline execution
added use of io . github . classgraph . ClassLoaderHandler in module - info . java to enable class loading functionality in the application
refactor solve method to accept a Solution parameter and update bestSolution assignment in SolverBusiness and SolverAndPersistenceFrame to improve clarity
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that the code executes only when throwable is not null
replaced direct access to queryInfoMap with a local variable queryInfo to improve code readability and maintainability
fix auto workbench not work when there be no material
fix ( gl200 ) : fix gl200 text decoder
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity
added multiple calls to HttpMethed . waitToProduceOneBlock in HttpShieldTrc20Token004 . java to ensure proper
ww - 3506 add support for inject initializable to xwork container
add longtasktimer . sample to the context ( fixes # 269 )
changed the data type of SYNC _ DELTA _ RATE from float to double and updated fetch time calculations to improve precision in fetch
add deprecation warning to abstractfragmentinsertiontagprocessor when use unwrapped fragment expression
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` in ` SessionData . java ` to improve thread safety
fix for http : / / issues . apache . org / activemq / browse / amq - 2370 - ensure copy
added constants for main and secondary color constants in ColorExtractionAlgorithm . java and updated extractInto method to return null to enhance color extraction functionality and
added accessibility check for the data folder in SketchBuilder . java to ensure that only accessible members are included in the source folder list
updated the ` appendContent ` method to use ` StringUtils ` instead of ` TextUtils ` and added a ` includeTitle ` parameter to improve consistency
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in the NettyStreamingService to improve visibility and debugging during the reconnection process
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to utilize internal Javassist instead of OGNL
replaced ConcurrentLinkedQueue with ConcurrentHashSet for thread management to improve performance and reduce contention
simplified string concatenation for address information in SocketExceptions and ExceptionText classes to improve code readability and maintainability by eliminating unnecessary
added a method to check if the view directory is under the repository to ensure that the view path does not conflict with the repository directory
remove tab header area from jabrefframe ( # 7370 )
added " - XX : + UseCompressedClassPointers " and " - XX : + UnlockExperimentalVMOptions " to multiple test
removed error logging for non - active and non - replaying update logs in PeerSync . java to streamline the code by eliminating
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
removed redundant calls to ` waitForReplicasInSync ` across multiple test classes to simplify the code and improve readability by eliminating redundancy
camel - 16400 : camel - rest - dsl - java - dsl - java - dsl - java - dsl - java - dsl -
updated version handling in ApexLanguageModule to use external version instead of a hardcoded 45 string to ensure compatibility with different external versions and improve
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread management to improve performance and resource management by using a singleton instance of AggregateEngine
updated WebSocketAsyncConnection to accept ByteBufferPool instead of StandardByteBufferPool to improve memory management and performance by utilizing a dedicated ByteBufferPool
added scroll position adjustments for the thumbnail in UploadActivity to improve user experience by ensuring the correct thumbnail is displayed during uploads
fix ( core ) : fix sql code generation for column alias ( # 2261 )
added ` @ Override ` annotation and refactored animation handling in ` LauncherAnimUtils ` and ` LauncherStateTransitionAnimation ` to
added a check to disable the default user agent based on configuration to enhance security by preventing unintended user agent settings
added a check for pubsubhubbub in FeedRefreshUpdater and integrated it into ApplicationSettings to ensure pubsubhubbub is only processed when
changed the visibility of the finalize method from public to protected to restrict access and enforce encapsulation within the SSLSessionImpl class
updated method signatures and assertions in StubJarClassEntry and CalculateAbiFromClassesStepTest to include synthetic classes to ensure proper handling of synthetic
add dspacewebapp . java to make it easy to run a web application from the command line
added a null check for the leftTableAlias in CalcitePlanner and implemented a method to retrieve the table alias containing a specified column to ensure
updated the key name in the withIdentity method to include a " Trigger " prefix to improve clarity of the key ' s purpose in the
replaced info log statements with warn log statements for broadcast transactions to improve log clarity and provide more informative feedback during transaction failures
update basicmaptest to not use wildcard import
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum ` TlsClientCertPolicy ` and updated ` GitBlitServer ` to use it to manage client certificate policies to
removed unnecessary thread handling for subscription failure in KrakenFuturesStreamingService to simplify the subscription process and improve logging clarity
added HTTP headers to the ProxyWebSocketHandler and implemented sub - protocol handling to enhance WebSocket communication by allowing customizable WebSocket protocol settings
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve visibility into request handling for debugging purposes
simplified dimension formatting in HolidayEventFormatter . java to improve readability and maintainability of the code
updated test cases and added inner class handling in FinalizePrivateFieldsTest . java and FinalizePrivateFields . java to improve test coverage and ensure correct
updated UnexpectedJobExecutionException . java to improve error handling to enhance reliability of job execution failures
deleted the ` shouldUseOpaqueButtons ( ) ` method and simplified button opacity logic in ` AquaUtils . java ` to simplify
updated ` DrillSidewaysQuery ` and ` DrillSidewaysScorer ` to use ` maxCost ` instead of ` maxFreq
added a new entry for GeoDegeneratePath in classRegsitry to support degenerate path functionality in the application
removed the ` preFill ` parameter from several constructors in ` Pool ` , ` FlushablePool ` , and ` ReflectionPool ` classes to
added logic to update and apply the taskbar stash state based on the launcher state to ensure the taskbar stash is updated correctly when not in
added null check for default style before comparing styles in CascadeDeleteVisitor . java to enhance robustness by preventing potential NullPointerException
refactor size and width methods in GuiUtil and add a new addTo method in StatusTab to improve code readability and maintainability by
refactor icon assignment logic in FileTreeViewHolder . java to streamline directory and file name checks to improve code readability and maintainability
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo for string comparisons to improve readability and maintainability of the test code
refactor XMLReporter to synchronize access to test results to ensure thread safety when accessing shared data
[ native ] add test for native probability function query
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to ensure proper cleanup of resources associated with the client container
hhh - 14850 - add droptemporarytableafteruse ( ) method to sybasease15dialect
simonstewart : do n ' t try to convert a color to a rgb if it ' s already a rgb
refactor SolrCore , XMLWriter , DocIterator , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code organization to enhance maintainability and readability of the code
updated the hexadecimal representation of address and reserve size in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation messages for
improve handling of skipped ad group in adsloader
updated equality check to use a boolean variable for clarity to improve code readability and maintainability
updated the string resource for the frequency button from deg _ text to unit _ hz in the WaveGeneratorActivity to ensure accurate representation of frequency
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the initialization of ` all ` with ` new TreeMap < Integer , LabelSelector > ( includedLabelSets ) ` to simplify the code
fix npe in vertexlighterflat . getvertexformat ( ) and setvertexformat ( )
added tracing tags for messages sent and received in multiple interceptors to enhance observability and debugging capabilities in the tracing framework
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . getTimeZone ( timeZoneStr ) ` in ` ScheduledTrigger . java
added ` AsyncBucket ` and ` InMemoryExtension ` classes for managing local bucket builders in ` Bucket ` and ` Bucket4j ` to
updated class directory validation logic in resexhausted003 . java to ensure the correct class path is used for test execution
updated formatting and formatting in AbstractConnector . java for consistency to improve code readability and maintainability
refactor OngoingStubbing class for improved readability to enhance maintainability and facilitate future updates
added a ` Optional < WebServer > ` parameter to the ` createWebServer ` method and modified the ` getValidWebServerPort ` method
rename ` productConstructor ` to ` constructor ` for clarity to improve code readability and maintainability by using a more descriptive variable name
added a check to ensure the thread allowlist is not empty before clearing it to avoid illegal state exceptions when the thread allowlist is util
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the correct item writer is
phoenix - 4640 fix dmnanalyser . findgaps ( ) and dmnanalyser . find
add a test for sliding window combiner in combinetest . testslidingwindowcombine ( ) .
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure ` bindAllApps
removed the assertion for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
refactor the Solution class to improve readability and structure to enhance maintainability and clarity of the code
replaced direct property retrieval with a conditional check for ` useScreenMenuBar ` in ` AquaMenuBarUI . java ` to
fix setrawlocation ( ) method that do n ' t fall when set location .
refactor query logic in SimpleJpaRepository to use a query specification and set a maximum result count to improve query accuracy and ensure the maximum
added timestamp , parent hash , nonce , and difficulty , and number fields to BlockUtil . java to include additional parameters for the genesis block
make safepoint insertion phase independent of graaloptions . genloopafepoints
hbase - 25829 fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs ( # 2589 )
changed access modifiers of constructors and methods in ArtifactResolver from package - private to public to allow access to these methods from other packages
fix potential resource leak in chunkprocessingpipeline # dispose ( )
added a validation check for ` maxBufferedDocs ` in ` IndexWriter . java ` to ensure that ` maxBufferedDocs ` is at least
added functionality to track whether the login is currently in progress during configuration changes to improve user experience by ensuring proper login flow during configuration changes
added null checks for source and valueExtractor in Pump . java and implemented a test for UUID reversal in PumpTest . java to
added methods to create a load balancer and modified access modifiers in HttpShardHandlerFactory , LBHttpSolrServer , and LBHttpSolr
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationServiceSelection
added import statements for Server and HandlerList in TestJNDI . java to enable handling of HTTP requests in a Jetty server
reformatted code for improved readability and consistency in SortedDynPartitionOptimizer . java to enhance maintainability and clarity of the code
change the return value from ` loop instanceof NioEventLoop ` to ` true ` in ` FileStreamChannel . java ` to ensure that
updated the logic for setting the number of nulls based on the new row count to ensure that the new number of nulls does not exceed the number
camel - 19099 : camel - jbang - export - camel - kamelet to camel - jbang - export - camel - jb
replaced OkHttpOAuthConsumer with AuthorizationState and updated task handling in OSMJob . java to enhance authorization checks and improve error handling during
remove debug print from testmetaaccessprovider and add a main method to basicptxtest
added clientAuth property to IoTDBRestServiceConfig and updated RestService to support client authentication to enhance security by allowing client authentication based on configuration
updated the injection logic in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjectionTest .
replaced hardcoded constants with Spring ' s InitializingBean in BloomUriUniqFilter . java to improve flexibility and allow for
changed the cursor adapter setting from false to true in HomeFragment . java and added a refresh preference in TweetPager . java to enable the
increased the intermediate header height ratio from 1f to . 75f in ProfilePager . java to improve the responsiveness of the
replaced ` RuntimeEvent ` with ` RecompilationEvent ` and added a new class for handling recompilation events to improve event logging
added support for handling host - sys - prepped configuration in multiple classes to enable dynamic configuration of host - sys - prepped status in the
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
added a loop to delete trailing slashes from the location string to ensure proper handling of URLs with leading slashes
added property handling for entities and scores in StaticPipeline to ensure proper initialization and validation of entity and score configurations
updated file path handling in Frame . java and WhoopsModule . java to support configurable whoops behavior based on configuration to enhance flexibility
[ geos - 6560 ] catalogrepository . getdatastorebyname ( ) return null if datastore do not exist
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
renamed MultiLineTests to MultiLineGridlikeTextTests and added MultiLineJaggedTextTests to improve clarity and organization of
camel - 14284 : fixed intermittent test failure in twoconsumertopictest
removed unnecessary initialization of IMeasurementSchema and MeasurementSchema lists in TsFileWriteAlignedWithTSRecord and TsFileWriteWithTablet classes to stream
update expectedMemoryUsage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory usage during
updated logging library path from ` slf4j - log4j12 - . * ` to ` slf4j - reload4
added a waitForAssert to the assertion in HueBridgeHandlerOSGiTest . java to ensure that the assertion completes before proceeding with
updated package structure from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple activities
[ drools - 1276 ] disable test due to known issue in drools - 1276
added a constructor to PullRequestMergedEventsStream that accepts a File file , topicName , personalAccessToken , and StreamDataProducer to initialize the service and
refactor AbstractExpressionPart class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ doc ] fix typo in taskslot javadoc
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in NettyWebSocket and NettyWebSocketTest to simplify the
added error handling for unlocking the lock in MoveTask . java to improve robustness by handling LockException during lock release operations
refactor JRubyBackend to use ResourceBundle for gem path retrieval instead of Properties to improve resource management and reduce reliance on external properties
transaction : use byteutil . empty _ byte _ array instead of zero _ address .
refactor initialization of classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix test failure in jobmanagerstartuptest
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
added a Bundle extras to the builder in FileDisplayActivity . java to store additional data needed for the display functionality
updated particle handling logic in ParticleEmitter . java to continue instead of break to improve performance by avoiding unnecessary iterations when the particle is not
updated expected cluster names from " clusterNew " and " clusterOld " to " clusterNew " and " clusterOld " in Ambari
removed the nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added logging for NoResultException in JpaTicketRegistry .
refactor Bug4823811 . java for improved readability to enhance maintainability and clarity of the codebase
refactor pattern deletion to use a custom path relativizer to improve flexibility and maintainability of the code
[ decoz ] add schedule to request full state ( # 11968 )
refactor ShibbolethCompatiblePersistentIdGenerator to use an attribute attribute instead of a salt - based ID conversion to enhance flexibility in
updated injection annotations in RequestValidationService . java to improve code clarity and maintainability
refactor key handling in UiThreadHelper to use a Bundle for logging keyboard visibility to improve logging accuracy and maintainability by centralizing the logging
removed redundant lines in FileNodeProcessor and modified MManager clearing logic in MManagerBasicTest and MTreeTest to improve code clarity and
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a testslurpfile ( ) method to ensure that slurpfile ( ) and slurpfilenoexceptions ( )
changed access modifier of ` client ` and ` wrap ` methods in multiple classes to enhance encapsulation and indicate that these interfaces are intended to be
refactor span retrieval logic in TraceWebFluxTests to use a dedicated method to improve code readability and maintainability by reducing duplication
added support for DateWritable type conversion in Hive schema converters to enhance date handling capabilities in data processing
updated the split method in StyleConverter to use Patterns for better readability to improve code clarity and maintainability by using a standardized
ggb - 1357 add validation for positive double value in input dialog
refactor column count checks in SemanticAnalyzer . java for better clarity to improve code readability and maintainability by reducing redundancy
refactor conditions and conditions in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability while
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to use specific classes instead of wildcard imports to improve code clarity and reduce potential naming
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest
refactor biome dictionary to use supertypes instead of subtypes to improve code clarity and maintainability
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and
added TestStabilityRule imports and modified the @ Ignore annotation in TaplTestsLauncher3 . java to enable test stability for specific
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
added a check for non - empty log file suffix in SnippetUtils . java to ensure that the log file suffix is only processed when it
updated PythonBuckConfig . java to improve configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure that system shared library names are correctly added and cleared
[ meiligao ] fix meiligao protocol decoder ( fix # 232 )
added null check for tile before calculating battery capacity in PowerDiode . java to avoid potential NullPointerException when tile is null
added a new ` TrimCache ` class to manage cache trimming to improve user experience by providing feedback on cache size changes
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated error handling in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw a NotAuthorizedException instead of returning false to provide clearer feedback
refactor the ` call ` method signatures and add a new ` schedulePeriodically ` method in the ` Scheduler ` class to enhance type safety
replaced ` refreshListOfFilesFragment ( false ) ` with ` getListOfFilesFragment ( ) . onItemClicked ( operation .
added logging for file matching and improved error handling in StreamUtil . java to enhance debugging capabilities by providing clearer error messages when multiple files
updated the ` create _ table _ with _ environment _ context ` method to use ` CreateTableRequest ` instead of ` EnvironmentContext ` to
added a volatile boolean ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
updated indentation checks in multiple parser classes to ensure proper handling of indentation levels to improve code readability and prevent errors during parsing
added networkwifistatusreceiver and changewifistatusevent to allow customization of video autoplay
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility control for the collapse handle in the WidgetsBottomSheet to improve user interface by hiding the handle when not needed
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript parameters to implement functionality for escaping
added a condition to return early if no units to scroll are available to optimize performance by avoiding unnecessary processing when no units are available
updated conditional check from ` size ( ) > 1 ` to ` size ( ) ! = 1 ` in ` Manager . java ` to ensure
added methods to add and put enums in JsonArray and JsonObject classes to enhance functionality for adding and storing enums in JSON format
added hashCode ( ) method to IPPPrintService and created a TestRaceCond class for verifying hash codes to ensure consistent hashing behavior
hhh - 14850 - db2idialect and db2zdialect should use getversion ( ) instead of get
added a condition to check if the transaction fee is greater than zero before establishing a connection to ensure that connections are only made when the transaction
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
clear data first subsample by when the buffer be encrypt .
removed public access modifier from several class constructors in multiple classes to enforce encapsulation within the package
added import statement for Retrofit in Part and PartMap classes to enable the use of Retrofit functionality in the code
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and handling for Java objects to enhance code clarity and maintainability while ensuring
added TYPE _ TASKBAR _ OVERLAY _ PROXY to AbstractFloatingView . java to enable taskbar overlay functionality in the floating view
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated alpha calculation in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation handling for recents activities
removed the parameter from the createRenderScript method call to simplify the render script creation process
pdfbox - 4892 : fix typo , a suggest by valerybokov
add a method to check if a plugin bundle be a system bundle to improve code readability and maintainability by reducing duplication
removed unnecessary import statements and formatted method calls in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replaced hardcoded value of 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest .
refactor configuration handling in Overview . java to use a more descriptive variable for clarity to improve code readability and maintainability by
server : fix npe in agentmanagerimpl . checkifatache ( hostid ) when try to find attache
added a null check before converting the value to data in DefaultRecordStore . java to avoid potential NullPointerException when the value is null
cloudstack - 5892 : improve error message when agent setup fail on non kvm machine
updated error messages in ParamAction . java to include name and value attributes to improve clarity of error messages for better debugging
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept an Object parameter to improve flexibility in
added a method to strip method parameters from the method parameter in MethodOpener . java to improve parameter handling by removing unnecessary parentheses
updated version name and code for GreatVoyage from " GreatVoyage - v4.2 . 1 - 56 -
mondrian : use set instead of list to prevent duplicate
[ geot - 6640 ] symbolmblayer now support group and graphic - resize
ggb - 1352 fix for ggb - 1353 and ggb - 1354 , center and resize popups
updated error messages from " Function : " to " Function - " in ValidationSuite . java to standardize terminology and improve readability
added a new ` StartingWindowListener ` class and modified the initialization of its transition manager in ` QuickstepTransitionManager ` to improve the management
added a doc comment inherited from MBeanServerConnection to clarify the purpose of the MBeanServerConnection class
updated exception messages in CheckPackageAccess . java to include " com . sun . corba . se . impl . " and modified package definition
increased the timeout duration from 30 seconds to 90 seconds and added a check for the executor service ' s termination status to allow more time
changed loggingEnabled from a boolean to a Boolean and added a null check for loggingEnabled in XRLog . java to ensure loggingEnabled is
added @ JsonIgnore ( true ) annotations to the Schema class to exclude certain fields from JSON serialization
increased the timeout duration from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
refactor train method calls in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity and organization of module hierarchy
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a null check for tableIsTransaction in SemanticAnalyzer . java to ensure tableIsTransaction is initialized correctly to avoid null pointer exceptions
[ java ] : move recordingwriter . writefragment ( buffer , header ) to replaysessiontest .
fix cuesubtitle . getcue ( ) to return an empty list instead of 0
kairos : add alias to the datastoregroupbytypeandtag method in kairosdatastoretest
updated currency pairs in VaultOfSatoshiBaseService to use " USD " instead of " CAD " and " CAD _
hhh - 14850 - fix test failure on the ci - server
updated import statements in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to use the correct KafkaSender class to ensure compatibility with the
added integration tests for Gwt binary building in the Buck build system to ensure proper functionality and reliability of the Gwt build process
added condition to hide loading cause label in BrowserContentPane and improved error handling in SQLConsole to enhance user experience by ensuring loading causes are
reformatted code for better readability in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code maintainability and
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML property management for improved security
added new interfaces ` InterfaceWithDefaultMethod0 ` and ` InterfaceWithDefaultMethod1 ` , implementing ` Decoy ` , and ` Instance ` ,
updated SQL query patterns in SqliteFieldPredicateView . java to use GLOB instead of escape characters to enhance query flexibility by allowing more
change access modifier of getDMNProfiles method from private to protected to allow subclasses to access and override the method
fixed - redissonscript . loadlua ( ) method do n ' t wait for slave entry to be load . # 2698
refactor field volatile handling in staticobject to improve code clarity and ensure type safety
updated debug log messages to use the size of targets instead of the string representation to improve log clarity and provide more granular logging information
fix memory leak in fmloutboundhandler . sendproxy ( )
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool settings in WebServer . java to improve configurability
replaced ` idsToShortcuts ` with ` removedShortcutInfos ` and added a check for non - empty ` idsToWorkspaceShortcutInfos
remove unnecessary type check before converting to string in DefaultHttpClientBinderRegistry . java to simplify code and improve readability
removed the case for the home case in DetailFragment . java to simplify navigation logic for improved user experience
added a condition to check if the Android market is present before processing play services to ensure that play services are only processed when a market is present
refactor cell start and end handling in TableBlockParser and add a new test for handling outside whitespace after headers to improve code clarity and
added support for optional bridging header in NewNativeTargetProjectMutator , ProjectGenerator , and AbstractAppleNativeTargetBuilder to enable custom
refactor PotentiallyDeadCode to use a HashSet for unused methods and streamline source path generation to improve code clarity and maintainability by
added support for ` findDiamond ` option in ` Attr . java ` and created new classes ` T6939780 . java
replace calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( )
removed unused imports and logging statement in SolrCacheHolder . java to improve code clarity and reduce unnecessary logging during cache registration
added catch block for AuthenticationException in LdapCtxFactory . java to improve error handling for authentication failures
updated the calculation of ` float . floatToRawIntBits ` to use ` - ( d1 - d2 ) ` instead of `
added a local file for " logback . dev . xml " in JoobyMojo . java and modified the Main . java
added a new class JaasEventCheck to handle Jaas authentication events to facilitate monitoring of authentication events related to Jaas authentication
replaced direct usage of currentPage and hotseat with a list of views to animate to improve code readability and maintainability by reducing
updated comparison logic in ` ConjunctionSolrSpellChecker ` and added a new test class ` ConjunctionSolrSpellCheckerTest ` to
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add agent . script . timeout to make it configurable
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in table parameter management
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and accuracy in SQL update
replaced ` WeakHashMap ` with ` Collections . synchronizedMap ` for schemaTypeCache to improve thread safety when accessing the schemaTypeCache
refactor header handling logic in StaticServerHttpHeadersWriter to improve clarity and correctness to ensure headers are not added if they already exist
[ hotfix ] [ test ] ignore test that relies on files not within cmu
added a call to mkdirs ( ) in TestCollector . java to ensure the storage directory exists before running tests
added a setting for chunked streaming mode in StarTreeJobUtils to optimize data transfer efficiency for improved performance
add basicsyntaxchecker , multiplesyntaxchecker , singlesyntaxchecker , and singletypesyntaxcheckertest to jsonschema
hbase - 25829 addendum fix checkstyle violation in pbcell and pbtype
added a new test method ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` to ` BeanPopulatorTest ` and created ` Node
added IOException to the getRemoteName method in AccountingTransceiver . java to handle potential I / O exceptions during remote name retrieval
added IllegalArgumentException handling and enhanced HttpClient creation in UserAccountManagerImpl , ClientFactory , and ConnectivityServiceImpl to improve error handling robustness and
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for ` AspectJMethodSecurityInterceptor ` in ` GlobalMethodSecurityBeanDefinitionParser ` to enable support for ` AspectJ
updated import statements and added hostname verification logic in Connection . java to enhance security by enabling endpoint identification verification based on system property
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enable the
replace invocation . invoke ( ) . joinInternal ( ) with invokeUrgent ( ) . joinInternal ( ) in ClientSchemaService .
added destruction of joints in the world upon removal from the body to ensure proper cleanup of joint resources when body is modified
fix npe in searchfilter when no filter string be provide
[ hotfix ] [ test ] move sourcereaderbasetest to sourcereadertestbase
added null checks for document and folder in DocumentsStorageProvider . java to improve error handling for file not found scenarios
added a new interface ` HookDefinition ` and ` JavaHookDefinition ` for implementing hooks in the Cucumber runtime to provide a structured way
added a private method ` flushIfDeadlockRisk ` to encapsulate the buffer flushing logic to improve code readability and maintainability by
updated the setExoOptions method to include an additional parameter for live TV support to enhance flexibility in setting Exo options based on
added a call to remove user and role from the identifier collection in DMRDecoderState . java to streamline identifier management by eliminating
added an INVISIBLE constant and refactored color handling in Color . java and RailButtonShapes . java to improve code readability and
updated null handling logic in CountAggregationFunction . java and added a new test for null handling query option in NullHandlingIntegrationTest . java to
initialize the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the transaction state
added escaping for XML name in StreamInitiation . java to ensure proper handling of special characters in XML names
updated file initialization to use the configuration for the work directory to allow customization of the work directory based on user - defined settings
added functionality to mark a rule as deprecated in RuleSetFactory to ensure users are aware of the deprecated status of the rule
fix amd64directcallop to use codebuffer . position instead of dummy label .
[ hotfix ] [ table - common ] add min and max time constant to timerange
refactor BitDocIdSet class to improve code organization to enhance maintainability and readability of the code
refactor connection handling into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
refactor media handling in DetailFragment and GalleryActivity to improve readability and maintainability of the code
fix the tank not drain the tank if the player be sneaking
added handling for legacy build rule views in CsharpLibrary . java to ensure correct source path resolution for dotnet libraries
improve handling of ' get ' type of ' get ' packet . thanks to franz for the patch .
added a null check for the runtime variable in IntrinsificationPhase . java to ensure that the runtime variable is not null before proceeding with
[ hotfix ] [ runtime ] fix npe in metrictrackingwindmillserverstub and streamingdataflowworker
pdfbox - 4892 : optimize objectid , genid , and objectoffset retrieval to improve performance
added a constructor to LwjglAppletApplication that accepts a Canvas and LwjglNativesLoader configuration to facilitate
simplified the string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and handle potential null
refactor password policy handling in LdapAuthenticationHandler to utilize account state handling to improve code clarity and maintainability by centralizing password policy
refactor Int2ObjectCache to improve caching performance to enhance efficiency of object retrieval in the cache
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated resolver settings in ` LdapUtils ` to
refactor Readable class for improved readability to enhance code maintainability and readability
refactor page break test to use TestSupport . WITH _ FONT for better font handling to improve code readability and maintainability by utilizing
updated the icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java ` to improve
updated Java version checks in Constants . java to use StringTokenizer for parsing JVM version to improve compatibility with different Java versions
updated network timeout check in PoolUtilities to check for Integer . MIN _ VALUE instead of true to ensure compatibility with non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredList to improve performance and memory efficiency
added multiple @ Override annotations to CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
added a comma at the end of multiple lines in ChartProvider . java to improve code readability and maintainability
fix file dialog not work directory for append / open database
simplified the return statement in JavacParser and added a new class ExtraSemiTest for testing Java source generation to improve code
added support for ' AFTER ' and ' BEFORE ' queries in User and UserRepository classes to enable querying users by their creation date in the database
updated Test15FloatJNIArgs . java file to improve test coverage and ensure compatibility with recent changes
updated import statements and modified version string formatting in plugin . java to improve clarity and consistency in version information formatting
nifi - 1188 : fix mockprocesscontext . decrypt ( string ) to return correct substring .
[ java ] ensure that reentrant call be not require during callback .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added timeout annotations to SslBytesServerTest . java to ensure tests do not hang indefinitely
renamed Peer class to improve clarity to enhance code readability and maintainability
added methods to ` RealtimeIndexingCoordinator ` , ` toImmutable ( ) ` , and ` toHistoricalIndexSegment ( ) ` ,
updated FailureWatcher to check for null exportedData before writing to the output to avoid potential NullPointerException when accessing viewCaptureDataSupplier
refactor fast scrolling logic in RecyclerViewFastScroller . java to use getScrollThumbRadius method to improve code readability and maintainability
updated method names and imports in BuckWSServerPortUtils , BuckEventsConsumer , BuckToolWindowFactory , and BuckWS
added a condition to check if the platform is Windows before creating the JCheckBox to ensure that the checkbox is only added on non - Windows platforms
updated import statements in HttpConfigurationAuthorityOverrideTest . java to use Jakarta EE annotations to ensure compatibility with the latest Jak
updated the image cropping logic in QuickstepAppTransitionManagerImpl to support both horizontal and vertical layout to improve layout handling for app transitions based
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to enhance user experience by allowing better control over full - screen behavior
add unit test for stringutils . playeddurationstr ( string , string )
added credential handling methods for MapWork and ReduceWork in DagUtils . java to enable secure credential management for map and reduce work types
( chore ) camel - maven - plugin : use entrySet ( ) instead of keyset ( )
trim whitespace from the thread name in SessionState . java to ensure consistent thread naming by removing leading and trailing spaces
updated the message from " Not yet " to " You can ' t add a description until the next point has been logged to a file to
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract class ` Unused ` and implemented a test for it in ` Main . java ` to ensure that the ` Unused
ambari - 20613 . rename hbase _ master _ host from hbase _ master _ host to hbase _ master _ hosts
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the project to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of records instead of a single record to enhance functionality by allowing multiple records to be returned
updated maxDelegateLockPeriod validation to allow greater than or equal to 10512000 in ProposalUtil and updated related logic in DynamicPropertiesStore to
fix nullpointerexception when the network rate be 0
removed unnecessary initialization and specification handling in CmcExchange . java to streamline the code and improve maintainability
updated configuration handling in GossipLocalNode and changed configuration file names from " config . json " to " config . conf " and " config -
allow client tpc config to be disable by system property ( # 16400 )
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple API applications to ensure compatibility with the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computating modular inverse to improve clarity and functionality of
refactor key assignment logic in NamedObjectList . java for clarity to improve readability and maintainability of the code
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple classes to improve clarity and consistency in directory cleanup
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat and registered it in SerializationUtilities to enable support for RCFileInputFormat in serialization processes
added default methods for retrieving Java types and categories in TypeMapperComponent to enhance type mapping capabilities for columns in the application
added error handling for invalid host headers in Request . java and created a test for invalid host headers in RequestTest . java to improve robustness
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for time zone retrieval to improve test reliability and maintainability by using reflection
remove unused method addoutgoingvalues ( ) and forEachoutgoingvalue ( ) from standardop
changed the visibility of ` cfsDir ` and ` segment ` fields in ` SegmentCoreReaders . java ` and ` SegmentReader . java
added hasMainThreadProfile method to AggregateDao and AggregateRepository classes to check for the existence of the main thread profile to enhance functionality by allowing
added a check to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi to enforce compliance with B
updated constant names from " greekLowerCase " and " greekLowercase " to " greekLowercase " and "
refactor HSSFSheet and Sheet classes for improved organization to enhance code readability and maintainability
discourage backward compatibility with dspace 4.0
updated BasicDateTime to remove specific month names from the list to ensure accurate date representation by removing specific month names
updated SurfaceSyncGroup initialization to use a specific name for clarity to improve readability and maintainability of the code
removed BsonObjectId casting and updated method calls in GridFsTemplate and GridFsTemplateIntegrationTests to simplify code and improve readability by using direct
added unit tests for total size and bytesSoFar in ShadowDownloadManagerTest . java and implemented corresponding methods in ShadowDownloadManager to enhance test coverage
refactor character handling logic in TextField . java to improve clarity and maintainability of text insertion logic
added a check to skip processing if the current instance is the same as the target in GroupNodeViewModel to optimize performance by avoiding unnecessary
added ` afterSetStatements ` method to ` Lower ` and ` BlockLexicalContext ` classes for handling statement termination to improve code clarity
added hashCode method to IntervalXYDelegate and updated equality checks in XYSeriesCollection to ensure proper hash code generation for instances of IntervalXYDelegate and
make clientqueuedisruptiontest cleanup after each test
refactor CloudWatchAppender and related classes for improved readability and organization to enhance maintainability and clarity of logging functionality
updated serialization method in Gson to use SpecialFloatingPointValues instead of SpecialDoubleValues to ensure compatibility with JSON serialization for floating point values
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty subtags before canonicalizing and modified language tag handling in Locale and LanguageTag classes to improve robustness of language
kvm : add configuration for enable / disable ssh to kvm agent
removed the ` public ` access modifier from several constructors in ` ScheduledAction ` and ` SchedulerWhen ` classes to enforce package - private access for
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline dependencies by removing unnecessary package
added a condition to exclude the " - " character from the filter in the SimpleSearchQueryConverter to ensure that the filter does not contain invalid
updated text in sortColumnsLabel from " natural order " to " Natural column order " in BrowserContentPane . java and updated UI
removed unnecessary array copy operation from Utils . java to improve performance by eliminating unnecessary object creation
updated the write method in HtmlSessionInformationsReport to use htmlEncodeButNotSpace for remote address to improve security by preventing XSS
fix itemstatetriggerhandler . isitemactive ( ) to correctly identify item state
removed unnecessary synchronization blocks in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
added a thread pool for moving files in Hive to improve performance and responsiveness during file operations
added a new method ` trigger ` to ` WrapTimer ` for scheduling timer tasks with a specified period to enhance timer functionality by allowing users to
added support for ` Types . LOCAL _ DATE ` and ` Types . LOCAL _ DATE _ TIME ` in ` TypeStringUtils ` to enhance type
updated error logging to include a verbose option for better control over error reporting to improve user experience by allowing more granular control over error logging
added menu toggling logic to the ClickStartHandler and ItemControls classes to ensure the menu is only toggled when the application is
s2s vpn : do n ' t allow vpn connection to be esitablished between account ' s VPN gateway and customer gateway
updated error handling in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error handling consistency and ensure
pdfbox - 2576 : do n ' t try to extract text if pdf be encrypted
[ 3.0 ] fix the problem that the service be offline for a long time without re - registration ( # 10200 )
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code clarity and maintainability
updated URI handling in HostsList . java to use a variable for the selected item to improve code clarity and ensure the correct URI is used
refactor Java6Assertions and Conditions classes for improved clarity to enhance code maintainability and readability
changed the return type of ` replaceOrderBulk ` from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexPrivateOrder
refactor enterDefault method to enterIdentNode and implement enterFunctionNode in FindScopeDepths . java to improve clarity and functionality of
added a new utility class J9ConstantHelper for retrieving long values from reflection to improve code modularity and facilitate easier access to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior to ensure that concurrent modifications do not
add a method to notify roster offline in BaseTransport and update TransportSession to remove them from the roster .
replaced direct property retrieval with overlayed properties retrieval in MapOperator and PartitionDesc classes to improve property management by utilizing overlayed properties
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers in MessagePackFactory and updated copy method in MessagePackFactoryTest to enhance robustness by prevent
added system . setProperty ( " mockserver . logLevel " , " WARN " ) in Main . java to configure logging level for better error handling
removed the @ Test annotation from AbstractRegistryFactoryTest . java to ensure proper test execution for the AbstractRegistryFactory functionality
removed the JettySolrRunner implementation from AbstractSolrMorphlineZkTestBase . java to streamline the code by eliminating unnecessary
replaced scoreMap with termScoreMap and added a new key for search terms in scoreMap to enhance scoring functionality by associating terms with
updated condition checks and added a new method ` eq ` in ` U64 . java ` to handle negative values and improve parameter comparison logic
added headline style to the MainViewModel to improve the visibility and aesthetics of the application
updated notifyChange logic in WallpaperColorInfo . java to include support for dark text to ensure changes are only notified when dark text support
[ hotfix ] [ checkpoint ] remove unnecessary method in checkpointrequestdecider
updated MAX _ POOL _ SIZE and CORE _ POOL _ SIZE constants in Parallel . java to adjust pool size and keep alive time
replaced ` filter ` with ` anyMatch ` for provider matching in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
added TestRequirements . notWindows ( ) and TestRequirements . notArm ( ) to OpenCVImageFactoryTest . java to ensure compatibility
fix for http : / / issues . apache . org / activemq / browse / amq - 2696 - set the prefetch
[ py4j ] fix python proxy return value throw by python proxy .
added a new Repeatable annotation called Issues to support multiple Issue annotations on types and methods to enhance the usability of annotations by allowing for multiple related issues to be documented together
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated import
updated socket connection logic to use a resolved address if the socksProxyHost system property is not set to improve flexibility in connecting to the
[ hotfix ] [ javadoc ] fix typo in slotstatus
removed unused import of ClassUtils in ReflectionUtils . java to clean up the code and improve readability
replaced ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ excludeCipherSuites ` , and ` _ includeProtocols
added a static variable ` systemResource ` and modified its assignment logic in ` Resources . java ` to improve resource management by caching the system resource
added a constant for the extra size of the plaintext segment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test to verify that an invalid circuit breaker fallback throws an IllegalArgumentException to ensure proper error handling for invalid fallback URIs in the circuit break
added SSL support for HTTP connections in AppPage . java to enhance security by enabling hostname verification during HTTPS connections
set the size limit of the byte read counter in PerformanceTest . java to improve memory management and prevent potential overflow issues
removed the ` preferAES ` field from ` ProtectionPolicy ` and ` StandardProtectionPolicy ` classes to streamline the code by elimin
( chore ) camel - opentelemetry : use logger instead of system . out
remove elbintegrationtest . testloadbalancerinstanceoperations since it be no longer use .
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity and
added error handling for file creation in DiacriticTest . java to improve robustness by handling InvalidPathException during file creation
hhh - 14850 - add support for ojdbc6 timeout in oracle 11
updated file handling in TextureUnpacker . java to check for the existence of the atlas file before reading to improve error handling and provide clearer
refactor AmbariManagementControllerImpl to use a write lock for cluster operations to ensure thread safety when modifying service states
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the result set ' s close method behaves correctly to ensure that the result set ' s close method behaves
refactor input stream handling in InputStreamBodyGenerator and add new test cases in ChunkingTest to improve code clarity and enhance test coverage for
added logic to remove pre - deleted databases from the schema response to ensure that only relevant databases are retrieved from the schema map
replaced ` writeAndFlush ` with ` write ` in ` Http1xUpgradeToH2CHandler . java ` to streamline
added a check for base item ID in EnhancedBrowseFragment and implemented item deletion functionality in FullDetailsFragment to ensure that deleted items are correctly
refactor RuleFinder to implement RuleBank interface and simplify rule retrieval to improve code organization and maintainability by centralizing rule management logic
add a try - catch block to handle potential exceptions during the initialization of the cipher to improve error handling and provide clearer feedback on potential issues
added new files TestMonomorphicObjectCall . java and Object . java for testing monomorphic object handling to facilitate testing
replaced the ` removeMetaDataSource ( session ) ` method with ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 25829 fix npe in shouldseek ( ) method in defaultmemstore ( # 258 )
[ hotfix ] [ runtime ] remove local _ state _ sub _ directory _ root from taskmanagerconfiguration
modified the constructor of AlterTimeSeriesStatement to accept a boolean parameter and modified its initialization in AlterTimeSeriesStatement . java to enhance flexibility
fix condition . matchtext ( string , string ) . matchtext ( string , string , string )
added error handling for retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due
updated the handling of the body in HttpClientIntroductionAdvice to ensure non - null values are added to the parameter map to improve
use char [ ] instead of string to avoid security vulnerability
bug 10363 : do n ' t try to invalidate the session in case of an illegalstateexception
refactor equals and isUniformDistribution methods in Counters and CountersTest classes to improve clarity and correctness of counter equality checks
modified the ` initialize ` method to accept a ` SimulationStatus ` parameter and set warnings accordingly to enhance the method ' s functionality by allowing
sulong : use currenttimemillis ( ) instead of system . currenttimemillis ( ) in sulongsyscallclock
refactor variable handling in PrettyPrinter to use a variable reference to improve code clarity and maintainability by reducing redundancy
added null check for ` currSize ` before creating ` Node ` instances in ` LRUDictionary . java ` to ensure ` currSize `
refactor filtering logic in DatagramSocket and DatagramChannelImpl for improved clarity and efficiency to enhance code readability and maintainability
testquerydns : migrate test to junit 5 ( # 4529 )
added a new class NutchServerInfo with properties for starting date , job data , and running jobs to provide a structured way to access
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to simplify attribute handling and improve code maintainability
added timestamp functionality to CqlInserter and ThriftInserter classes and updated timestamp handling in SettingsColumn to allow users to specify a
refactor DSAParameterGenerator to use a consistent BigInteger constant for strength checks and improve clarity to enhance code readability and maintainability by
updated NumberUtils and Numbers classes to use longBitsToDouble and intBitsToFloat methods to improve precision and performance when converting integers to
updated the mask comparison logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior for
added checks for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to data integrity constraints
( chore ) camel - core : fix checkstyle violation in rewriterequestforstatictopic
added a new method ` addTab ` to ` Tabs ` and refactored tab creation methods in ` Tabs . java ` to
replaced instances of ` new String [ size ( ) ] ` with ` new String [ 0 ] ` across multiple classes to improve performance and
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment and mockenvironmentbuilder
refactor return statements in MavenVisitor to use if statements for clarity to improve readability and maintainability of the code
updated mock secrets and names from " MOCK _ APP _ SECRET2 " and " MOCK _ APP _ NAME2 " to "
added a new file FormatCheckingTest . java to validate class name formatting to ensure proper error handling for illegal class names in the Java process
updated line number handling in CodeGenerator . java to ensure correct line number assignment for method execution
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create radio buttons with text , icon , and command parameters in RadioButton . java to enhance flexibility in creating radio buttons with
updated cache initialization in LRUCache and modified CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to optimize memory usage
int - 1343 add support for ' capacity ' attribute in channel definition .
fix npe in osgi management name strategy when symbolic name be null
papplet : load the mode class from the system ' s ` ` usemode ' ' system property to load the mode class .
added error handling for adding and removing the shutdown hook in IOManager and improved logging in YARNSessionFIFOITCase to enhance st
replaced ` projectRoot ` with ` androidManifestPath ` in ` RobolectricTestRunner ` and related methods to improve clarity and
updated header propagation logic in AbstractMessageProducingHandler and added a new test for non - existent headers in AbstractReplyProducingMessageHandlerTests
refactor CompareMode class to improve readability to enhance maintainability and ease of understanding for future developers
added HasTests interface to RustBinaryDescription and RustLibraryDescription classes and implemented it in RustBinaryDescription and RustLibrary
updated placeholder and error drawable resources in FileMessageVH . java to use the correct drawable resource for better clarity and consistency
refactor OnExitTest . java for improved clarity to enhance maintainability and readability of the code
added a method to handle user preference changes in TaskbarManager to ensure the taskbar is recreated when the user preference changes
refactor heap dump logic to differentiate between IBM VM and non - IBM VM environments to improve compatibility with different JVM implementations and enhance
( chore ) camel - mybatis : ensure session be close even if commit fails
updated driver name from FIREFOX to IE and modified methods in ExportedWebDriverFunctions and InternetExplorerDriver to enhance compatibility with IE
updated TriggerPatterns and variable declarations in IteratorToFor . java to improve type safety and clarity to enhance code readability and maintainability by
added a call to set the application state to unavailability in JmxApplicationProvider to ensure the application is in a unavailable state before proceeding
updated position and limit calculations in ByteBufferAs , Heap , and StringCharBuffer classes to improve clarity and correctness in position and limit calculations
removed the ` toUri ( ) ` method from the ` moveStrSplits ` array to simplify the code by eliminating unnecessary URI conversion
refactor array handling in NativeArray , ArrayData , and ObjectArrayData classes to implement setEmpty methods for better clarity and functionality to
changed the visibility of Protocol and Transport enums from package - private to public to allow access to these enums from other packages
replaced ` doc4 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` and updated assertions in ` TestMultiPhrase
do n ' t allow offline payment to be reservation
added a new ` _ onTimeoutThread ` field and modified the handling of timeout events in ` HttpChannelState . java ` to ensure thread
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , StacklessLogging , and ServerTimeoutsTest to improve
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
patch by jbellis ; review by brandonwilliams for cassandra - 1348
added support for the " Home " model in the HeosDiscoveryParticipant and HeosPlayerHandler classes to ensure proper handling of homescreen
added a new class ` Wait ` and implemented its functionality in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest `
refactor attribute handling in Neo4j to utilize AttributeController for setting node and edge attributes to improve code clarity and maintainability
added a null check for serverName in the SessionManager class to ensure proper handling of null values to avoid potential NullPointerExceptions
nifi - 1746 : move rocksdb to nifi - controller - repository so that it can be use in future .
updated the method to retrieve the " IS _ GRANTABLE " boolean from the results object to ensure accurate retrieval of the " IS _ GR
added logging and modified URL validation logic in JavaScriptContext . java to improve debugging visibility and ensure proper handling of JavaScript URLs
( chore ) camel - cxf - mtom : skip test on macos
added logic to handle column modification based on whether the column descriptor is null to ensure proper handling of column modifications based on whether the column descriptor is
added Disposable interface to the Texture class to ensure proper resource management and disposal of texture objects
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper instead of WebappRegistrationHelper to ensure robust handling of
[ besu ] allow goquorum genesis file to be specify if goquorum compatibility mode be enable
replaced IOException with Throwable in HttpInput . java to improve error handling by replacing IOException with Throwable
added a condition to skip the Thailand check for " JP " in LocaleTest . java to address potential issues with era changes in
updated response annotations from ` HostResponse . Wrapper ` to ` HostResponse . HostResponseWrapper ` across multiple services to align with updated API documentation
updated filtering logic in FilteredQuery . java to include a boost comparison to ensure accurate query equality and hash code generation based on the boost value
added a new line to the constructor of FileMenuFilter to improve code readability and maintainability
ggb - 1351 fix for ggb - 1352 use scrollpanel instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
fix an npe in spongecommoneventfactory when there be no entity .
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to ` ColumnMapItemPreparedStatementSetter ` and ` ItemPreparedStatementSetter ` to
patch by jbellis ; review by brandonwilliams for cassandra - 1343
added null check for the ' type ' attribute in the MiniAapt class and improved error handling for invalid item resources to ensure proper error
added support for the " SpEL " operator in the OperatorEnum and created a new SpELJudge class in the OperatorJudgeFactory
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 25244 , use eventqueue instead of sun . misc . service
updated import statements in CertBlacklist , ConscryptCertStore , ConscryptHostnameVerifier , and ConscryptTest classes to improve code
updated variable types from ' l ' to ' long ' for start _ offset and length in ShadowArscAssetManager9 . java to ensure
updated the source and target options in SetupHid . java from " 1.5 " to " 6 " to ensure compatibility with the latest
changed the access modifier of ` extractMetadataColumns ` method from private to public and modified project retrieval logic in ` PushProjectIntoTableSourceScan
added imports and modified sorting logic in AboutActivity . java to improve code clarity and ensure canonicalized names are prioritized
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed action in HomeFragment to ensure that refresh behavior is only applied when live streaming is
added exception handling to MappingException in AuditConfiguration . java to improve error reporting for better debugging
( chore ) camel - core : fix flaky test in fileconsumertest
updated type parameters in CompositeType and DynamicCompositeType classes to use generics to improve type safety and eliminate unchecked warnings
added support for transport support in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to enhance the application ' s capability to
updated various input consumer classes and added delegator name logging to improve clarity of gesture handling and enhance debugging capabilities
make changeparentpom . changeparentpom more robust by avoid npe
added a check for " Disabled " output in TestLargePageUseForHeap . java to ensure proper handling of large page support in the heap
cloudstack - 1341 : skip migration if the database do n ' t exist
updated the ` getTestParameters ` method to throw ` IOException ` and adjusted the path handling in ` BrokerXmlConfigStartTest . java ` to
added a new file ` TestObjectStreamClass . java ` that implements a serialization test for ` ObjectStreamClass ` to facilitate
modified conditionals in ZoneAwareDiscoveryFilter to check for null data center info to simplify the condition for better readability and maintainability
change log level from error to warn in OpenTracingTracer . java to improve logging clarity and reduce noise in error logs
added a toString ( ) method to the Generator class to provide a readable string representation of the generators registered
refactor URI handling logic in ` URI . java ` and add new test cases in ` Test . java ` to improve code clarity and
added error handling for missing resources in ClusterControllerImpl to ensure proper exception is thrown when a requested resource does not exist
added error handling for API response extraction in AccepttoApiUtils . java to improve robustness by preventing null pointer exceptions during response extraction
added conditional logic to allocate ByteBuffer based on application type and version in VertexBufferObject . java to ensure compatibility with Android versions less than 5 and
refactor SybaseASADatabase class to improve code structure to enhance maintainability and readability of the codebase
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor and updated related methods to support backward compatibility while maintaining backward
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for easier
added FLAG _ ONE _ SHOT and FLAG _ MUTABLE constants and modified createMutablePendingIntent method in AndroidImplementation . java to enhance
added methods to set and append read column IDs in HiveFileFormatUtils and HiveInputFormat to improve configuration handling for column IDs in Hive
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added a method to display a temporary toast message in SavedExperiments . java to improve user feedback by notifying when a toast message
added version handling in ServiceModule to ensure serviceInfo has a default value when it is null to ensure serviceInfo has a valid parent version information
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correctness of the ` toJson ` method across various collection types
simonstewart : rename seleniumserver to sslcertificategenerator so that it would well reflect our new interface .
refactor the iteration over replies in ExpansionViewHelper to use an index variable instead of a loop to improve readability and maintainability of
increased the timeout duration for resource access exception in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource
added a new test method ` testNGramFilterPayload ` to ` TestNGramFilters ` to validate the payload handling of NGram
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest . java ` and refactored
cloudstack - 5893 : fix npe when try to stop a vm that fail to start .
added a ThreadLocal to manage the state of ` _ tryWriteAgain ` in ` SslConnection . java ` to ensure that ` _ run
refactor actor parent handling and visibility check in Actor . java to improve code clarity and ensure proper visibility checks for actors
added logging for deployment group name and message in RollingUpdateOpFactory . java to improve visibility into deployment failures for better debugging and monitoring
[ hotfix ] [ table - common ] fix checkstyle violation in table - common
added error handling for username retrieval in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent class to improve error handling and provide feedback when a
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and facilitate easier debugging
updated default QTYPE assignment to use LuceneQParserPlugin . NAME instead of OldLuceneQParserPlugin . NAME to ensure consistency with the
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an overridden method ` isInitialized ( ) ` in ` JavaLanguageServer ` and created a new class ` LocalsCompletionTest _ template `
updated the parameter of the ` test _ fetch _ token _ from _ authorization _ code ` method from ` false ` to ` true ` and
added beginTransaction , setTransactionSuccessful , and endTransaction methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to improve database operations and
replaced byte array handling with ByteArrayOutputStream for string conversion to improve performance and memory efficiency when reading data from the input stream
added multiple @ Override annotations and simplified exception message handling in MessagingTemplate . java to improve code readability and maintainability by reducing redundancy
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a source file is an ` J . CompilationUnit `
added maximum buffered documents and RAM buffer size settings to TestIndexWriterMergePolicy to optimize memory usage during merging operations
added functionality to clear the ` wits ` list in ` Manager ` and created a test for updating witnesses in ` ManagerTest ` to
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing potential NoSuchElementException during iteration
flume : remove log4j . level from flumenode and flumemaster . logversion and flumeshell . logenvironment (
updated authentication metrics assertions in BasicAuthIntegrationTest and DaemonStream classes to enhance authentication accuracy and improve thread safety in test cases
replaced HashMap with LinkedHashMap for storing graph nodes in DependencyUtil to maintain insertion order and improve predictable iteration order
add jersey error mapper to jersey support module ( # 4891 )
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by encapsulating header validation logic
added a switch statement for handling specific system properties in System . java to improve code clarity and maintainability by reducing redundancy
changed method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and corresponding tests in ` StringTest ` to enhance flexibility
[ gr - 21752 ] add to investigate jvm . countertime ( ) and jvm . getClassId ( ) in checkgra
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory handling in PersistenceManagerProvider to use a conditional datasource to improve flexibility in data source management based on configuration
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
removed the ` ConstantState ` parameter from the ` updateTextButtonWithDrawable ` method and modified drawable handling in the ` updateTextButtonWith
updated try - with - resources usage in XmlParser and YamlParser classes to use a try - with - resources statement to ensure proper resource management
added support for coalesce operations in RexNodeConverter and registered a new function for COALESCE in SqlFunctionConverter to enhance the
camel - 14284 : fix camel - hl7 - hl7 unit test . thanks to stan lewis for the patch
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading during proxy factory generation
updated DefaultDateTypeAdapter constructor and added synchronized keyword to improve thread safety to ensure thread safety during serialization and deserialization processes
reformatted method parameters in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to use setURI and simplify query handling to improve code clarity and maintainability by centralizing URI setting logic
added a method to filter old entries based on a limit on the size of entries to improve performance by reducing the number of entries processed
change log level from fatal to warn in FSHLog . java to better reflect the severity of the log message being requested
replaced ` getValues ( ) ` method with ` NodeMapIterable ` and refactored iterator implementation in ` NodeMap . java ` to
updated import statements and variable naming for clarity in DiscoveryClientRouteDefinitionLocator . java to improve code readability and maintainability by using a
added a check for non - empty fields before adding operations in MongoRecordReader and updated return logic in RexToMongoTranslator to ensure operations
of - 2599 : add admin to the admin list if it ' s empty .
replaced ` MultiFields . getFields ( searcher . getIndexReader ( ) ) ` with ` getSlowAtomicReader ( ) ` in multiple classes
replace ` bean . tostring ( ) ` with ` ObjectHelper . className ( bean ) ` and ` ObjectHelper . getIdentityHashCode ( bean )
simplified the conditional check for ` primitiveType ` in ` GroovyParserVisitor . java ` to improve code readability and maintainability
svm : remove uninterruptible code from frameinfoqueryresult and java _ lang _ substitutions
increase offer timeout for seda block when full test
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure readLen does not exceed buffer size to improve robustness by preventing
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated SQL query in IconCache . java to include user serial number to ensure correct icon retrieval based on user - specific data
( chore ) camel - defaultmq : fix typo in semaphore name
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method and modified its logic to conditionally include the resource
added a method to fixBaremetalForeignKeys in Upgrade410to420 . java to ensure foreign keys are correctly referenced in the database
removed the interface IJava2DRenderer from Java2DRenderer and removed its implementation from Java2DRenderer to simplify the class structure and
added onTearDown method to DefaultAudioSink to ensure offload buffer is cleared when the audio track is tear down
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling upstream tasks to improve task scheduling efficiency and control over task execution timing
[ hotfix ] [ doc ] fix typo in streamtype javadoc
updated assertion message in Assert . assertTrue to include additional context to improve debugging by providing context on the assertion failure
updated imports and modified user authentication logic in FilestorePage . java and RootPage . java to enhance security by restricting access to admin
( chore ) camel - elasticsearch : temporarily disable test due to intermittent ci failure
int - 1735 lifecycle method now only match if the name / param - types match and the lifecycle interface be actually assignable from the declare class
updated button text from " leftButtonAltcoin " to " buyAltcoin " and " sellWithFiat " to
camel - 16400 : fixed issue with invalid url in restlet endpoint .
block : remove unused params from createnextblock ( ) and createnextblockwithcoinbase ( )
removed Serializable interface from BTreeMapJava and refactored serialClone method in ConcurrentSkipListMapTest to simplify serialization handling and improve test
added a null check for the cause before logging the error message to improve error handling by avoiding null pointer exceptions during startup rule execution
reformatted conditional statement for clarity in Main . java to improve code readability and maintainability
replace ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java
deleted the PlainVerifier . java file to remove unused verifier class to streamline the codebase
added a condition to close system windows when the alt tab triggered to improve user experience by closing recent apps when the alt tab is triggered
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog visibility and behavior management to enhance user experience by ensuring proper
updated the charset parsing method to include " UTF - 8 " as a default character encoding to ensure consistent character encoding for MIME types and improve compatibility
added a call to ` super . deinitialize ( ) ` in ` TextField . java ` to ensure proper initialization of the TextField class
replaced custom serialization methods with TestUtilities for LogFormat to streamline the serialization process and improve code readability
updated the parsing logic in LogicalGenerator and GroupByFillDataSet to use ` previousUntilLastClause ` instead of ` previousClause ` and updated
updated array size handling in JAXWSExceptionBase . java to throw a negative array size exception to ensure proper error handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4529 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for the thread to
[ hotfix ] [ runtime ] change default scheduling strategy from legacy to region
added support for setting and getting a title in ShadowActivity and ShadowDialog classes to enhance the flexibility and usability of title management in the
replaced Apache Commons Logging with Apache POILogFactory and POILogger in POIFSFileSystem . java to improve logging consistency and
refactor alarm handling to use regex pattern instead of regex to improve readability and maintainability of the code
add remove latency to mapdeletemessagetask ( # 11959 )
refactor status handling in Option and Response classes to use a switch statement for better readability to improve code clarity and maintainability by using
added a method to find the javac location and improved error handling in the CheckResourceKeys . java file to enhance the robustness of
add project name support for stable channel ( # 4246 )
added a new test class ` DeprecatedStubbingTest ` for testing deprecated stubbing behavior to ensure that the deprecated stubbing functionality behaves as
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server
fix a couple of test failure due to the addition of nml and nbr
bouncy castle : allow rsa key exchange by default
replaced ` output _ reader ` with ` reader ` in multiple files to improve code readability and ensure proper resource management
refactor PubSubAPI and SDMAPI to use a unique identifier for OAuth service handles to improve code clarity and maintainability by avoiding
replaced ` AGGRESSIVE _ EASE ` with ` EMPHASIZED ` in ` TaskbarEduView .
added handling for UpdateRegionLocationPlan in ConfigPhysicalPlan and updated logging in ProcedureManager and RegionMigrateProcedure to improve logging clarity and ensure
added a new file ` FileDialogLeakTest . java ` that tests the functionality of ` FileDialog ` to ensure proper resource cleanup and
hbase - 25819 addendum fix testopentableincoprocessor to be independent of hbase - 25819
truffle : fix uninterruptible annotation check in trufflefeature
[ hotfix ] [ protobuf ] remove unused split method in protobuf code generation
updated conditional check from ` disi = = null ` to ` disi ! = null ` in ` DrillSidewaysScorer .
updated methods in ExoPlayerTest and FakeMediaSource to use ` assertTimelineChangeBlocking ( ) ` and added a ` Handler ` for
added support for Java version checks in Constants . java to ensure compatibility with Java 9 and above
updated FileReporter constructor to accept both String and File types to ensure proper handling of null inputs for FileReporter
changed the condition from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to correct the logic for
added menu item support for the home button in DirectMessageConversation to enhance user experience by allowing back navigation through the action bar
added GET _ USER functionality to the Constants and updated protocol version from 5 to 6 in RpcServlet and RpcUtils to enhance user management capabilities and
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable compatibility checks for different operating systems
replaced the variable ` startClass ` with a local variable ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code
updated exception message and added local handling for parameter register numbers in DexBody . java to improve error message clarity and enhance local management for
replaced calls to getAsyncContext ( ) . getResponse ( ) with event . getSuppliedResponse ( ) in TestAsyncContextImpl . java to
jbrules - 2692 : fix nimbus look and feel in commonapp and cloudbalancingapp
updated regex pattern in AppPage . java to ensure consistent formatting of version string to improve code readability and maintainability
refactor animation listeners in LauncherAppTransitionManagerImpl . java for improved clarity and maintainability to streamline animation handling and ensure
updated the exception message from " No network found for " to " No network found for version " in DumpedPrivateKey . java to provide clear
rename offerpayload to newofferpayload for clarity to improve code readability by using a more descriptive variable name
updated milestoneParameters initialization to use WicketUtils for handling open tickets and repositories to improve clarity and functionality by differentiating between open tickets and
pipe wood : set the battery amount to 80 , close # 1186
updated getClusterKey method to include blueprint name and revision in the cluster key retrieval to improve clarity and maintainability of cluster key management
set the downgradeAllowed variable to true in UpgradePack . java and add a test for downgrade functionality in UpgradePackTest . java to
replaced ` fEntityScanner . scanQName ( fElementQName , NameType . ATTRIBUTE ) ` with ` fEntityScanner . scanName
added emulate _ system _ loadlibrary configuration to enable emulation of system library loading
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` LauncherModel . java `
updated entry handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure the directory exists before writing the output stream to
updated the formatting of the ` doTest ` method in ` TestSecretKeyCredentialHandler . java ` to improve code readability and maintainability
camel - 16400 : camel - jbang - fix routebuilderfinder to use springcontext instead of springcontextaware
[ hotfix ] [ doc ] fix typo in metricoptions documentation
hbase - 25815 testfulllogreconstruction . testflushlogentries should set dfs . support . append and dfs . heartbeat
added ` reuseAddress ` and ` setTrafficClass ` methods to ` DatagramSocketOptions ` to enhance configuration flexibility for socket settings
change server shutdown message to use getshutdownmessage ( )
danielwagnerhall : remove deprecate ` ` locatable ' ' interface .
updated error messages in VersionInfo . java to clarify field requirements to improve user understanding of version field requirements
renamed ` equalityPredicateColumns ` to ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
reformatted code for better readability in HelloMessage and HandshakeHandler classes to improve maintainability and clarity of the code
updated formatting in Navigator . java to improve code readability and maintain consistency
updated visibility of constants in RecordReaderFactory and added a new record reader configuration class in RecordReaderFactoryTest to improve accessibility of constants and
added support for ` GREATER _ THAN _ EQUAL ` and ` LESS _ THAN _ EQUAL ` criteria in ` MongoQueryCreator ` to
refactor GROUP BY clause validation in CalciteSqlParser to use a set for group by expressions to improve code readability and maintainability by
replaced UnsupportedOperationException with Unsafe . invokeCleaner in MappedByteBuffer and introduced AtomicInteger for buffer reference counting in FileChannelLinesSpliterator to improve memory
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` to improve code readability and maintainability by
added a schedule ( ) method to CircuitBreakerImpl and updated its usage in CircuitBreakerTest to enhance the circuit breaker functionality by allowing for
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags for
changed the property name from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in Sub
added JUnit @ Disabled annotation to TableExtRetrieverTest . java to temporarily disable tests that are not ready for execution
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety during concurrent access
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java
updated character handling in HttpParser and added a test for encoded headers in HttpParserTest to improve error handling and ensure correct encoding of HTTP headers
change the layout set in the ConfigurePagerActivity from trends _ activity to configuration _ activity to update to reflect new configuration settings interface
updated log message in SLWTTextListing . java to include position and position in the document to improve clarity of log output for
refactor ForceLeaderTest to conditionally use Tlog replicas and add a new ForceLeaderWithTlogReplicasTest class to improve test reli
refactor Thread class to improve thread management to enhance performance and maintainability of the code
refactor template file suffixes to use named constants for clarity to improve readability and maintainability of the code
camel - 16400 : camel - cxf - add support for namespace attribute in soap message . thanks to benjamin
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated the way day and month values are appended to the output in ToChar . java and added a new test case in TestFunctions . java
added imports for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits . java to enable configuration of valid transaction and write
replaced ` ArrayList < String > ` with ` Collections . emptyList ( ) ` for column and column types in ` JsonSerDe . java
add a check to ensure that the book path be not null before loading data to avoid potential null pointer exceptions and improve logging clarity
updated the SSTDeserializer class to include a check for ContinueRecord and modified the manufactureStrings method to include it to ensure proper handling
added a default grid column constant and modified the return logic in AppPreferencesImpl . java and ExtendedListFragment . java to improve code clarity
updated the diff error message in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line contents match but line -
fix stick ad playback with drm - protected content
removed the ` @ Api ` annotation from multiple @ Path annotations in OkexV3 . java to streamline the API endpoint for improved
simplified conditional statements in LineUtilitiesTests . java to improve code readability and maintainability
added error handling for varargs and old array syntax in JavacParser . java and created new classes T6569633 . java with
added verification for playback thread in DefaultDrmSession and DefaultDrmSessionManager to ensure proper usage of playback thread and prevent runtime exceptions
added METHOD variable handling in VariableContext and corresponding tests in TestVariableContext to enhance functionality to support method calls and improve test coverage for variable contexts
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java and removed the asNullableBoolean method from ExperimentJSON
updated buffer limit calculation in Piece . java and SharingPeer . java to ensure correct buffer limit is applied based on the current position
added response timeout functionality to NettyRoutingFilter and related classes to enhance network request handling by allowing customizable response timeouts
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` and updated method signatures in ` CxxLibraryFactory ` and ` Native
( chore ) camel - main - add unit test for rest configuration
added a method to visit RexFieldAccess in ASTConverter and implemented conversion logic in RexNodeConverter to enhance the handling of field access
replaced direct calls to QueryLogEntry . values ( ) with a static final constant QUERY _ LOG _ ENTRY _ VALUES to improve code readability
add proxy . noproxy predicate to webclientrequestbuilderimpl . relativizeuri ( uri uri , proxy proxy )
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and correctness to enhance code readability and ensure proper initialization
added reflection access checks and improved access control checks in the NativeObject and ReflectionCheckLinker classes to enhance security by ensuring proper access control
changed constructor visibility of CollisionMap from public to package - private to allow instantiation of CollisionMap from other packages
tradeservice : deprecate getrawinputfromtransactioninput ( transactioninput input )
refactor code to use a switch statement for log level assignment to improve readability and maintainability of the code
server : remove region _ id from user table insert statement ( # 4371 )
added support for encrypting old excel files in OldExcelExtractor to ensure proper error handling for unsupported formats
[ gr - 36443 ] [ gr - 36443 ] add -- add - exports = org . graalvm . nativeimage
removed redundant else statement in TimeLineCursorAdapter . java to streamline code for better readability
increased the timeout duration for the scheduler in BatchingStateChangeUploadSchedulerTest from 10 to 50 to improve test reliability by allowing more
refactor file creation and deletion logic in ShadowContext and ContextTest classes to improve code clarity and ensure proper handling of directory creation and deletion
refactor exception handling to use Class . forName for specific exceptions to improve flexibility and maintainability of exception creation
increased WAIT _ TIME _ MS from 10000ms to 60000ms in LauncherInstrumentation . java to allow more time for the
updated ConnectOAuth2RequestFactory and ConnectTokenEnhancer to use a wildcard import and added AUD parameter handling to enhance flexibility in
camel - 20297 camel - kafka : remove default value for breakonfirsterror in camel - kafka
added a new constant selectableItemBackground to the R . java file to provide a background color for selectable items in the UI
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
updated eventType assignment in TxnSetOperation . java to ensure correct event type assignment when record is null
move resumelistener into resumeexternaldownload so that it can be reuse .
replaced " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to ensure
added size and setting logic for formats in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve format management and
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer
updated the conditional check in CompressedInputStream to account for the maximum compressed length to ensure proper handling of input stream lengths by accounting for the
camel - 14284 : camel - redis - use idempotent repository for string - to - object mapping . thanks to stan lew
fix vanilla bug where damage be not be use in container repair .
make legacylocalrepositorymanager work correctly for local repository .
[ hotfix ] [ runtime ] check if taskmanager have be initialize before start it
added ability to deploy a file in a repository if you want to deploy it .
replaced calls to ` FileStorageUtils . getTemporalPath ( ) ` with a new method ` getInternalTemporalPath ( ) ` in `
replaced Google API client imports with Google Commons library imports and added a findByEntries method to FeedEntryStatusDAO to enhance code maintainability
added thread execution handling in ContextImpl . java and updated related tests in BlockedThreadCheckerTest . java to improve thread management and ensure proper
updated the ` instantiate ` method to accept a ` formatterString ` parameter and added a null check for the output argument to ensure that a valid
updated file input stream handling in LoadContactsTask . java to ensure compatibility with different Android SDK versions
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with ` this . remoteAddress ` and ` this . remoteHostname ` to
added a null check for the shadowClass in Robolectric . java to ensure that a valid shadow class is not annotated with @ Implements
added support for optional tls mutual authentication in NettySslContextFactory to enhance security by allowing optional TLS mutual authentication requirements
updated charset import and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper exception handling for SSL exceptions in requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility of consumer and producer in subclasses
refactor SitemapWidgetEvent creation and event handling in PageChangeListener and FrameRenderer classes to improve code readability and maintainability by organizing
updated warning log message from email to SMS in CommunicationsManager . java to provide clearer guidance on sending SMS messages
# 164 - optimize draft query for live bean ( # 164 )
added error handling for IOException during file transfer in MultipartBody . java to improve robustness against resource unavailability issues during file transfer
refactor : fix sonarqube warning ( # 3649 )
refactor EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes to improve code organization and maintainability
fix attachfileaction to use the working directory if it exist ( # 3550 )
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to configure schema information loading options for improved functionality
updated package name from org . openj9 . test . loadLibrary to j9vm . test . loadLibrary and modified test method to
replace throwing an exception with returning null in TestReader . java to simplify error handling by allowing a default return value instead of throwing an exception
added getter and setter methods for properties in ProjectProperty . java to ensure properties are set correctly based on their properties
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and avoid potential memory
refactor DataStreamJob to improve code structure to enhance maintainability and readability of the code
refactor error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential memory leaks
camel - 14284 : camel - cxf should use classhelper to get the class name , not the class name
added a condition to check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of HTTP / 2
refactor LambdaToMethod and ClassFileVisitor to improve parameter handling and condition checks to enhance code clarity and ensure correct handling of lambda expressions
fix a bug in the tregex pattern that could lead to an illegalargumentexception in some case .
increased the timeout parameter from 5000 to 60000 in FileUtils . copyURLToFile to allow more time for the file copy operation to complete
added a method to set phrase slop in QueryParser to enhance query parsing flexibility
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test stability by allowing more time
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure compatibility with the
add scheduleparallel ( ) method to make it easy to schedule task on the main thread
updated visibility logic in ` EditShareFragment . java ` to check if edit options are available before displaying the compound to improve user experience by ensuring
added a minimum progress value of 1.1 f to the DepthController to ensure progress stays within a valid range
do n ' t send the address to the client when the packet be receive .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null check for the service before retrieving it in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction
[ pantheon ] add ` ` hidden ' ' flag to pantheon command ( # 1341 )
added doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) to AndroidConfigurer to prevent
removed the method ` isSupported ` from ` NegotiateAuthentication . java ` to simplify the code by eliminating unnecessary context class loader checks
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unused functionality
camel - 14284 : camel - jms - persistent and camel - jms - temporary should use bean name to avoid conflict . thanks to
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
pdfbox - 4892 : do n ' t flush / close mcblock for tagged image , a suggest by valerybokov
log4j2 - 1349 add unit test for patternselector
simonstewart : do n ' t throw exception when run test in hta mode
added a new class ` MwThankPostResponse ` and modified the ` thank ` method to accept a ` MwThank
added SocketBased interface and modified ChannelEndPoint to extend SocketBased to enhance socket handling capabilities in the application
updated revokingStore initialization and size adjustment in Manager . java to improve clarity and functionality of the revoking store management
added unit tests for HQL collection implicit joins in HQLTest . java to ensure correct functionality of HQL collection queries in JPA
replace newline characters in assertions in NonVisualRegressionTest . java to ensure consistent newline handling across different operating systems
replaced references to ` toCommit ` with ` filesToCommit ` and updated references in ` IndexWriter ` and ` SegmentInfos ` to
changed method modifiers from final to public in BaseError . java to allow subclassing of methods in subclasses
added validation to validate the percent value in ConsumeUserResourcePercentActuator to ensure that the percent value is within the acceptable range of 0 to
added a condition to check for the show _ old _ login resource before displaying the legacy login to ensure that the legacy login display only occurs when
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming
removed unnecessary else statement for setting the response page in EditTeamPage . java to streamline the code for better readability and maintainability
updated debug log message from " error with cred file during startup " to " Error initializing plugin credentials " to improve clarity of error reporting during
added shutdown logic for server socket channel in ConnectionManager . java to ensure proper resource management and logging during shutdown
refactor Rocket class implementation to improve code readability and maintainability
refactor dynamic partition specification creation logic into a separate method to improve code readability and maintainability by reducing duplication
simplify round - half - up calculation by introduce a boolean flag for usescientific .
added ` visitDirectory ` method to ` JarDirectoryStep ` and modified ` visitDirectory ` method in ` DirectoryTraversal ` to ensure entries are
added a new file ` JWKSetEditor . java ` that implements a property editor for JWK sets to provide a way to set JWK sets as
replaced the ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` with a single ` finish
improve performance of jfr and toespressonode when trace throwable .
change default value of ` fetcher . threads . per . host . by . ip ` from ` true ` to ` false ` to disable thread
modified the condition for setting ` timeToLiveOfQuery ` in ` StatementUtil . java ` to handle both null and zero timeout cases to ensure
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to conditionally include
refactor ReplicaPosition class for improved clarity to enhance maintainability and readability of the code
server : schedule stats update task immediately if initial delay be negative
updated animation interpolator in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use FINAL _ FRAME instead of allAppsFade to
updated swipe length calculation in Background . java to account for display density to improve user interface responsiveness during swipe gestures
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and exports for better modularity
fix nullpointerexception in jsontype # settextvalue ( string ) when value be null
removed unnecessary parentheses around context assignment in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] use configuration . get ( ) instead of configuration . getOptional ( )
refactor ` reportInnerClassReferences ` method to accept a ` Element ` instead of a ` TypeElement ` to improve type safety and clarity
updated the construction of the command in TimestampCheck . java to include an additional space to ensure the command is properly formatted for proper execution
replaced FluentIterable with MoreCollectors for file listing in ChromeTraceBuildListenerTest . java to improve code readability and leverage mod
[ 3.0 ] fix dubbo service registration by default ( # 9440 )
do n ' t end all session if security otr mode be disabled
added new properties for node label outline size , color , and transparency in PreviewProperty . java and updated renderProcessing method in NodeLabelRenderer .
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the method call from false to true in Win32FontManager . java to enable font rendering functionality in the application
added a null check before processing the visitor in TreeVisitor . java to ensure that the cursor is reset when the visitor is not null
disable error handling for jdt batch compilation when no classpath be available
added ` ContentAlignmentPoint ` and ` TextAnchor ` properties to ` LabelBlock ` and ` LabelBlockTests ` classes to enhance label rendering
refactor Class and Parameter classes for improved clarity to enhance maintainability and readability of the codebase
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
changed the type of ` isLoopback ` from boolean to Boolean and added null checks for ` networkInterface ` in ` NetworkInterface . java `
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
updated the file download test to include a specific file extension to ensure the test verifies the download functionality correctly for missing pdf files
nifi - 1357 - add el - rest - output - no - hits property to jsonquery and abstractpaginatedjsonquery
service offering : remove aggregation ratio from quota update
[ java ] do n ' t swallow exception in election . workcount ( ) .
fix potential deadlock in streamfilesp . processfile ( ) ( # 11959 )
refactor widget handling logic in PageChangeListener . java to improve readability and maintainability of the code
added a method to check if the workbook is write protected and updated username length handling in multiple classes to ensure proper handling of file sharing records and
added error handling for unregistering invalidated sessions in PluginMonitoringFilter to improve robustness by logging warnings when an exception occurs during session checks
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the message from " Bridge reports light as reachable = false " to " Bridge reports light as not reachable " to improve clarity and accuracy
add a method to check if the fml client be loading and add a patch to the gamesettings . java file to ensure that the game
add unit . millions and unit . thousands to ui and blockinventoryfragment
refactor MessagePackParser to use a switch statement for handling BYTES and STRING types and add a new class BinKeyPojo to improve code
added a new test method ` usingReservedWordsAsIdentifiers ` to ` HqlQueryTransformerTests ` and modified ` JpqlQueryTransformer
added unit tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps in JSON representation
added conditional calculations for x2 and y2 in GeometryUtils . java to ensure coordinates are correctly positioned based on their offsets
updated sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to utilize SortingOrderDialogFragment for improved sorting functionality to enhance
do n ' t crash if the testplan can not be find
updated method names from " dbmsName " , " schemaName " , " dbmsType " , and " dbmsOperationHandler " to
modified the argument handling logic in the parser to check for non - strict mode identifiers before adding to the parameters list to ensure proper handling of non
updated the default protocol setting from " SSL - HTTP / 1.1 " to " scf . getProtocol ( ) " to ensure the correct
cloudstack - 4892 : set default displayvolume to true ( # 4893 )
updated the version method to accept a boolean parameter and improved message retrieval to enhance flexibility in versioning and provide clearer version messages
updated condition checks and logic in ChangeLogParameters . java for better handling of found change logs to improve code clarity and ensure correct retrieval of
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical issues
hhh - 14850 skip test that fail on oracle due to basicformatterimpl
updated socket timeout handling in Connection . java to ensure proper handshake and timeout settings for the SSL socket
updated action bar size calculations for fragments in both HomeFragment , DMFragment , ListFragment , MentionsFragment , and MentionsFragment to ensure
change the default value of the CHA option from false to true in EspressoOptions . java and make classes final in DefaultClassHierarchy
http : / / issues . apache . org / activemq / browse / amq - 2696 - fix thread context class loader
refactor JodaTimeRangeRandomizersTest to simplify import statements and improve test assertions to enhance readability and maintainability of the test code
updated WebDescriptor . java to redirect XML schema URLs based on SERVLET _ MAJOR _ VERSION to ensure compatibility with newer Jak
fix ( kubernetes - client - api ) : fix readiness check for node .
replaced ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure correct endpoint handling in the application
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version changes in the
added security check before calling Reflection . getCallerClass ( ) and ReflectUtil . checkPackageAccess ( type ) in ObjectStreamClass and Object
removed unused imports and changed visibility of UGSCommandCount from private to private in Utils . java and XLCDCommunicator . java
refactor DefaultMetricsTagProvider to use a HashMap for tag management instead of an ImmutableMap to improve immutability and thread - safety of the
updated the addition of the MockBrowserTest suite in ClientDriverSuite . java to ensure proper test execution for the MockBrowserTest
change default setting from Level . OFF to Level . ERROR in Launcher . java to improve error handling for better user experience
changed variable declarations from private to private final in IconNormalizer . java to ensure immutability of critical variables and improve code readability
added a configuration option to enable or disable the first call of the prepare prefix in the PrepareInterceptor to allow users to choose whether to invoke the
refactor showWorkspace and showWorkspaceAndExitOverviewMode methods to improve focus handling and streamline state management to enhance code clarity and maintainability
added singleton annotation and removed eager singleton binding in Auth . java and AuthWithStoreFeature . java to simplify binding setup and improve code clarity
updated the incomingAssociations method to accept a boolean parameter for ignoring invisible associations to enhance flexibility in handling associations based on user preference
cloudstack - 4892 : remove private ip from the capacity table when delete a pod
updated command string formatting in ProfileServlet . java and added documentation for empty diagram and Linux 4.6 + to improve clarity of command usage
fix ( modelresolver ) : add required flag to ref field ( # 3550 )
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration ` and `
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
fix hue id generation for large hue ( # 11935 )
added image handling logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the correct drawable is set when picture is set
updated compaction message to clarify that compaction on insert - only tables will always run via queries regardless of the value of this configuration
added a null check for mWaitingToSend ' s storage path in FileDisplayActivity . java to ensure stability by preventing potential null pointer
updated resize threshold checks to use a new method ` checkResize ( ) ` instead of ` resizeThreshold < = keysAssigned ` to improve code
refactor LDAPConnectionService to improve code readability to enhance maintainability and facilitate easier debugging
removed the ` @ XmlAttribute ( required = true ) ` annotation from ` AggregateDefinition . java ` and added ` @ Deprecated ` annotations to
removed debug tracing logs from TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to clean up the code and improve performance
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions from ` hits . length ( ) ` to ` hits2 . length ( ) ` and ` hits3 . length ( ) `
added a new file LucenePackage . java that implements a LucenePackage class to facilitate the retrieval of the Lucene package
corrected the calculation of the ` sizeInBytes ` in ` RAMDirectory . java ` to ensure correct addition of the existing sizeInBytes value
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomK
added a null check for the drawer toggle before animating animations to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings about the unused subject parameter
added logic to determine whether to scan modules based on classpath and class loader overrides to improve flexibility in scanning modules based on configuration settings
fix msbib converter to handle corporate latex field ( # 3649 )
added handling for core recovery cancellation in CoreContainer to ensure proper management of core states during shutdown
refactor time measurement calculations in bug5070081 . java to use a dedicated method for better readability to improve code clarity and maintain
removed debug print statements and simplified the condition for clicking the first option in the found list to streamline the code and improve readability by
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added trust resolver , role hierarchy , and permission evaluator to the SecurityEvaluationContextExtension to enhance security expression capabilities by allowing customizable trust resolver and
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize defaults correctly for valid DH parameter generation
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( ) `
refactor the ` combine ` method in ` DistinctSqlAggregation ` to use a loop for accumulating values to improve performance by reducing
added a test method to verify post - login activities for a user during successful authentication to ensure that post - login activities are executed for successful user
extractorspanishstrippedverb now accept a dictionary path
refactor CharArraySet to simplify code initialization and improve type handling to enhance code readability and maintainability by reducing redundancy
updated error message to clarify that track count cannot be changed after adding track formats to improve clarity and accuracy of error reporting
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and updated related tests to ensure compatibility with
updated character encoding handling in PinotClientRequestServlet and StringDictionary classes to ensure consistent character encoding and improve efficiency in string indexing
updated case name from " Logical Analyzer " to " Logic Analyzer " and modified drawable resources in InstrumentsFragment . java to improve cl
added static variables for instanceClassName and instanceClass in AbstractVector . java to optimize instantiation of Vector instances based on class name
[ hotfix ] [ cm ] remove syncmetaleader ( ) call from cmmanager
remove unnecessary conversion of student result to equal share format html
added TestLoggingExtension to DiagramRendererTest to enable logging functionality for diagram rendering tests
camel - 16400 : camel - core - add support for usecamelcasemapping to map property name to camelcase
added support for VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance compatibility
replaced direct calls to getSslSessionData ( ) with a local variable for SSLSessionData to improve code readability and maintainability by
added a new file ` CreateNewSpreadsheet . java ` that demonstrates the use of ` XSSFWorkbook ` to create
replaced ` Duration ` with ` long ` for TTL and time - to - live in ` CacheProperties ` and related classes to improve cl
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in ` LauncherBackupHelper ` and ` Launch
updated the testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with
replaced synchronized block with synchronized ( this ) block in SunFontManager . java to ensure thread safety when accessing shared resources
added a condition to check if the character is a ' < ' in DocClassUtil . java to ensure proper handling of the ' < '
removed String . format call from the return statement in Workspace . java to simplify the code and improve readability
added import for Scope and displayed a message for validation errors in ValidateCommandStep . java to provide user feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize WebMergedContextConfiguration for resource configuration to improve flexibility and maintainability of web application context loading
updated scroll handling logic in Component . java and modified component retrieval in Container . java to improve responsiveness and ensure proper handling of pointer events
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated related methods to use ` String ` instead of ` Long ` to improve clarity and consistency
replaced occurrences of " $ 1 " and " $ 2 " with " $ \ n1 " and " $ \ t1 " in
simonstewart : make sure we do n ' t have to escape backslashes in the regex
mondrian : fix typo in javadoc of mondrianproperties
added error handling and stack trace printing in ProcessTools . java and modified launcher path handling in CustomLauncherTest . java to improve debugging capabilities and
removed the embedded image test method from TumblrRipperTest . java to simplify the test by eliminating unnecessary complexity
added a check for the presence of a slot before converting the store type in CodeGenerator . java to ensure conversion only occurs when a valid slot
refactor extractor initialization logic in ContainerMediaChunk and InitializationChunk to improve readability and maintainability of the code
replaced ` IndexWriterConfig ` with a custom ` PrintStreamInfoStream ` and added a ` toString ` method to handle UTF - 8 encoding
added support for dynamic service loading in TikaConfig and created DummyParser for parsing XML elements to improve flexibility in loading services based on configuration
added diagnostic reporting for unexpected package - info comments in DocLint . java and updated list initialization in DocLintTester . java to improve error
added support for both DELTA _ IMPORT _ CMD and IMPORT _ CMD in DataImportHandler . java and DataImporter . java to enhance
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest . java ` to ensure that inner
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
updated the ` checkItemPlacement ` method to accept an ` ArrayList < Long > ` parameter for workspace screens to enhance item placement checks
simonstewart : add a ` ` / quitquitquit ' ' endpoint to jetty7appserver .
refactor data handling in LLRealtimeSegmentDataManager to use a list for transformed rows to improve code readability and maintainability by redu
added a check for Windows OS and excluded Teredo display names in Tests . java to improve compatibility with Windows environments by ignoring Tered
added a check to ensure that the protocol provider is registered before attempting to add a contact to ensure that the application does not attempt to add a
replaced bean definition registration with bean component registration for user details service factory to improve clarity and maintainability of bean management
changed the parameter of the drawBitmap method from left to null in FastBitmapDrawable . java to avoid potential null reference issues during bitmap rendering
update MeitrackProtocolDecoder and TotemProtocolDecoder to update date format to ensure accurate decoding of Meitrack and Totem
changed method visibility of ` getFontPath ` and ` getPlatformFontPath ` in ` SunFontManager ` and ` X11FontManager ` to
added @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] fix clientmapstoretest
added a flag to keep empty sentence in DocumentPreprocessor and related classes to allow users to optionally retain empty sentence data during document processing
added error handling for artifact subdirectory creation in ` MavenArtifactFetcher . java ` to improve robustness by ensuring exceptions are thrown for invalid subdirectory creation
removed static imports and replaced null return statements with direct calls to JavaCompilerService . NO _ MODULE _ COMPILER to simplify code and improve
fix npe in directagentattache when resource return null
refactor sendEmail method to throw MessagingException instead of catching the exception to improve error handling and provide clearer logging during email sending
fix nullpointerexception in pipeitemsobsidian
updated date parsing methods to accept a Locale parameter across multiple classes to enhance flexibility by allowing different locale configurations for date parsing
added a new boolean field ` includeDecals ` and corresponding getter and setter methods in ` StorageOptions ` and ` StorageOptionChooser ` to
updated the ` generateDocumentation ` method to include a ` null ` parameter and added a suppress warnings in the ` getImplementedDatabases ` method to
updated HiveProtoLoggingHook to use a dynamic queue configuration and improved performance logging functionality to enhance logging capabilities and ensure accurate reporting of performance metrics
updated log messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory to enhance clarity and consistency in log messages
updated the version check in ignoreRecordAttribute to use a constant for the major version to improve maintainability and readability of the error message
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication tests to ensure correct handling of password authentication in LDAP contexts
updated import statements and condition in TaskCompiler . java to use BasicStatsNoJobTask for footer scan to improve code clarity and ensure correct
do n ' t reload on save all ( # 3550 )
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix ( kubernetes - client - api ) : handle terminal exception in reflector . start ( )
added support for both numeric and dynamic number columns in EdgeDataTable and NodeDataTable to enhance data handling flexibility for dynamic number columns
added null checks for groupId , version , and plugins in RawPom . java to enhance code robustness by preventing potential NullPointerExceptions
added a null check for apiInfo before assigning it to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added lighting functionality and debug logging in PhotoPanel and FlameRenderer classes to enhance texture management and ensure proper disposal of texture resources
updated scene parameter from 460 to 520 and added local variable handling in InsnListEditor and InsnProxyListEditor to improve scene
updated condition in CSSParser to handle cases where the character index exceeds the length of the string to improve robustness by preventing ArrayIndexOutOfBoundsException
added configuration for default look and feel decoration in UIServiceImpl to enhance user experience by allowing customizable look and feel appearance
removed unnecessary EXISTS clause from SQL query in HostRoleCommandDAO . java to simplify the query and improve code readability
replaced F2 _ TEST and F6 _ UNKNOWN with F5 _ TRANSPONDER _ TEST _ REPLY and F6 _
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and correctness to enhance swipe detection logic for better user experience
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` in ` ColorsActivity . java ` to improve
refactor String class to improve readability to enhance maintainability and ease of understanding for future developers
updated logger initialization across multiple classes to improve logging consistency and maintainability
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the
added assertions to verify the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected under various conditions
test : migrate cufiltertest to junit 5 ( # 4529 )
updated classpath appending to use the system ' s PATH _ SEPARATOR constant to ensure compatibility across different operating systems
changed the visibility of the augmentSuccessViewModelObjects method from static to instance - level to allow subclasses to access the method without needing an
hhh - 14529 add assertion to verify that property ' id ' and ' name ' exist in the metamodel
removed the ` getConf ( ) ` parameter from multiple ` Outlink ` instances in multiple parser classes to simplify the code by eliminating unnecessary
removed the ` LexicalContext ` parameter from multiple methods in ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures
added import statements and modified return statements in UseLambdaForFunctionalInterface . java and TypesInUse . java to enhance code clarity and ensure
replace appendClassSelector with createFileSet in TestNGAntTask . java to simplify the file set addition process
removed the conditional check for root input type in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary
[ forge ] fix miss mapping for registry event . ( # 7038 )
removed redundant assignments of x3 and y3 in Intersector . java to streamline the code for better readability and maintainability
added default implementations for SBE methods in MessageDecoderFlyweight to indicate that these methods are not yet implemented by the specified SBE version
updated ElasticsearchContainerTest to use a dynamic version string instead of a hardcoded version to ensure compatibility with different elasticsearch versions and improve test reliability
copy the bytebuffer before parse the peermessage to avoid concurrent modification exception
added version handling and updated cluster name and cluster version in ClusterDefinition . java and GSInstallerClusterProvider . java to improve cluster management by
camel - 14284 : camel - ftp should use setconfiguration ( ) instead of setconfiguration ( )
[ zeppelin - 4892 ] [ zeppelin - 4893 ] [ zeppelin
updated local variable assignment logic in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest .
added a check for basic constraints in ForwardBuilder and created BuildEEBasicConstraints class for testing to ensure proper handling of basic constraints and facil
added initialization method to JdbcPostgresqlDAO to ensure values with the same time will be upserted if the database version is greater than 9
updated SimpleEchoClient to set maximum message size and added buffer size validation in AbstractWebSocketConnection to improve WebSocket connection performance and enforce minimum buffer size
replaced undeleteAll and rollbackUndeleteAll with pendingDeleteCount and asserted pendingDeleteCount in SegmentReader . java to simplify the
updated scope validation logic in ClientRegistration and added new test cases in ClientRegistrationTests to ensure that scopes are not null and improve test coverage for
added null checks for orderBy before setting parameters and explanations in CartesianProductStream . java to avoid potential NullPointerExceptions during execution
[ hotfix ] [ test ] fix checkstyle violation in clusterentrypointtest
cloudstack - 4892 : remove snapshot . state . backedup check for kvm ( # 4893 )
replaced direct call to LogUtils . initHiveLog4j ( ) with a variable initLog4jMessage to improve logging cl
added a check for non - empty tasks before accessing the first element in AssetLoadingTask to avoid potential NullPointerExceptions when no tasks are available
change the return type of deletenode ( ) and deletepubkeyslistnode ( ) from void to boolean to allow the caller to decide if
fix bug in relationcompositekey and tskvLatestentity ( # 1181 )
added validation for empty barcode found in Code128Reader and Code39Reader to ensure that empty barcode results are treated as false positives to avoid
replaced TreeSet with LinkedHashSet for the suites variable in SSLContextImpl . java to maintain insertion order while maintaining the order of cipher suites
updated control character validation in Escaper . java and modified expected string in InternationalizationTest . java to ensure correct handling of control characters
[ hotfix ] [ table - planner - blink ] fix sql source overload for sqlprovider
added null check for aliasChildren in InternalMNode . java to prevent potential NullPointerExceptions when accessing aliasChildren
added a method to calculate the layout transition offset for a specific page in PagedView . java and updated scroll delta calculation in Workspace . java
updated variable names and formatting in JavaTemplate . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added a method to set the accessibility of the method in WidgetInterceptor to ensure the method is accessible for further use
added a check to ensure the literal initializer is only set for non - " database . server . id " fields to avoid unintended behavior
updated the Mozilla version in AbstractRipper from Macintosh to Windows NT 10.0 and updated Firefox to match the latest version
added a web interface menu item to the BasicSystemUtils to provide users with a way to access the PMS server ' s server address
added a new variable ` actualValue ` and updated related statements in ` HandleGetter . java ` and ` InnerThen . java ` to improve
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] remove unnecessary toString ( ) call from queue and filecheckpointio
replaced the call to loadBattlePassManager ( ) with a call to loadBattlePassManager ( ) before avatar post
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified SSH configuration in the SSH container to ensure compatibility with
added a bigObject array and a call to System . gc ( ) in ThresholdTest . java to force an initial full - gc to improve
added checks for log names starting with ` getName ( ) ` in ` StdErrLog . java ` and updated logger level handling in ` Std
fixed - rremoteserviceloader . getremoteserviceloader ( ) method do n ' t support service name parameter . #
added methods to check and set the selected state of emblem in MultiButton . java to enhance button functionality by allowing dynamic selection of emblem
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align with the new playback
( chore ) camel - core : fix checkstyle issue
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to ensure proper resource management and prevent potential memory leaks
updated background color handling in ProgramGridCell and modified getThemeColor method in Utils to improve color management by using theme resources instead of brand attributes
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters to the ToolingApiLauncher for various artifact types to enhance the flexibility and usability of the tooling API
updated the order of parameters in TestPayloadCheckQuery . java to ensure the correctness of the query handling logic
refactor ConsoleReader to streamline character printing and add a new test for reading line with a mask to improve code readability and ensure correct
added user information to the exit status message in BaseCommand . java to provide more context about the command execution flow
move test class to org . graalvm . compiler . api . test package .
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
added a condition to check for Java 8 emulation in the StreamExInternals class to ensure compatibility with Java 8 streams when emulateJava
updated texture references from " wheel . png " to " sys . png " in DecalTest . java , MusicTest . java ,
updated intent filter registration and unregistration in Launcher . java to ensure proper registration and unregistration of the close system dialog receiver
updated import statement for Cluster in HostsRemovedEvent . java to ensure proper reference to the correct Cluster class in the code
updated the ` reuseRefreshToken ` flag and added ` allowIntrospection ` property in ` ClientDetailsEntity ` , introduced ` allowIntrospection `
replaced direct write calls with HTML encoding for user and session attributes in HtmlSessionInformationsReport . java to improve security by preventing X
added PhrasePrefixQuery to the list of query links in Query . java to enhance functionality by providing additional query options
replaced ` size ( ) = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` CommentsParser
replaced the method ` isLiteralString ` with ` isThisElementAnOperandInABinaryStringConcatenation ` in ` NoValueOf
updated method signatures from ` A ` to ` Object ` across multiple classes to simplify type safety and improve clarity in assertions
updated the ` ThrowingFunction ` interface to use a more specific exception type and modified its imports to improve type safety and clarity in exception
added methods to retrieve and set the uploaderBehaviour in AppPreferences and PreferenceManager classes to improve code modularity and encapsulation by centralizing
fix ( prettyprinter ) : fix npe when try to initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s testing framework
corrected the method name from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to
updated PageMarkerResources to use the current page indicator instead of adding a new page to enhance user experience by providing a more relevant page indicator
added a reinvocations variable and updated string concatenation in BasicInvocation . java to track the number of reinvocations for better debugging and tracking
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to improve accuracy of padding calculations by
added a break statement to the switch statement in Recognize . java to ensure proper flow control in the code execution
added preference handling for home screen visibility in Workspace , FolderNameEditText , PopupContainerWithArrow , and PopupContainerWithArrow
updated ExcelBatchReader to handle string formula types in cell processing and added a new test for text formula in TestExcelFormat to improve flexibility
immutablefield : add test for assignment in anonymous inner class method
added a new ` userAgent ` field and modified the initialization logic in ` HttpGetter . java ` to retrieve the user agent from the application settings
added @ XmlAttribute ( required = true ) annotation to AvroDataFormat , BarcodeDataFormat , and Base64DataFormat classes to ensure
changed log level from info to debug for file not found logging to reduce log verbosity and improve performance during normal operation
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use a method for retrieving unique ID to improve compatibility with older server versions and
camel - 16400 : camel - jbang - add support for include pattern in defaultroutescollector
added a vertexColor flag and modified color binding logic in PShape3D . java to allow customization of vertex color settings for improved
added a new parameter ` isPkColumnFiltered ` to the ` SchemaDotFormatter ` and modified related methods in ` SchemaDotFormatter `
removed ShadowMatrix dependency and simplified matrix value retrieval in ShadowMotionEvent . java to simplify code and improve performance by eliminating unnecessary shadowing
changed package structure of MetaRules . java from com . facebook . buck . parser . api to com . facebook . buck . parser
refactor class handling logic in GroovyEngine . java to simplify class definition checks and improve readability to enhance code clarity and maintainability by
hawtio - spring - boot : add plugin context listener to make it easy to configure hawtio plugin .
removed redundant print statement in NativeCodeGenerator . java to streamline output for better readability
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` Flight
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ have _ different _ types ` to validate
removed unused variables related to flattenName and package names in AutomaticDependencies . java to improve code clarity and reduce redundancy
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to clarify the purpose of the variable related to scope
simonstewart : fix the marionette test to work well with the firefox driver
camel - 16400 : camel - jbang - add route . description property to allow customization of route description
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a line to set the edge ' s weight in ImporterCSV . java to ensure that the edge ' s weight is correctly set for
add a method to calculate the cost per hour based on the start date in the quota manager
updated SQL query to include additional attributes from pg _ attrdef in DatabaseMetaData . java and modified tuple assignment in DatabaseMetaData . java to enhance
added a null check for the binarized variable in SentimentAnnotator . java to ensure that binarized sentences are not built by
added user details to the returned string representation of the User object to improve debugging by providing more context about the user ' s properties
updated the body extraction method in MessageHelper to check for null before converting it to a string to improve robustness by avoiding null pointer exceptions
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to fromexecution
improve roster access to check if a node be a member of a group
added a classpath reference to the project in AbstractJRubyMojo and removed unchecked suppression in CucumberMojo to ensure proper
refactor MethodHandle conversion logic and add a new test method for user method signatures to improve code clarity and ensure proper handling of method signatures
added import statements for StopFilterFactory and NamedSPI in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated condition checks in URLImage . java from ` > ` to ` ! = ` to ensure image dimensions do not differ from placeholder dimensions
added a condition to check if the class name starts with " META - INF / " and modified the logic for appending unique package names to ensure
added background task scheduling for background tasks in ImageDownloadService . java to ensure UI updates are performed on the UI thread when using Edt
updated the expected value in StackWalkerTest to use a dynamic version check based on the major version to ensure compatibility with different versions of the Stack
changed the visibility of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and its usage in multiple test files to simplify the method signature and eliminate unnecessary
removed server restart and exit settings in TestDatabase . java to simplify server configuration and improve server responsiveness
added null and empty check for block in NodePathsConvertOperator and improved child iteration logic in SchemaQueryMergeOperator to enhance robustness by
added total harvesting time retrieval and updated related methods in various classes to enhance the system ' s ability to track and display total harv
updated drawing parameters for particle fonts in ParticleEditor . java to improve visual clarity and performance of particle animations
added handling for the " keyserver _ port " configuration in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java
added TRANSPARENT color to the SvgViewerFactory class to enhance the visual appearance by providing a transparent background
removed the minSdk parameter from the @ Config annotation in ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code by removing unnecessary
updated the ` containsExactly ` method to accept varargs and utilize ` asList ` for converting them to a list to improve method flexibility and simplify the argument handling
updated the Bandwidth builder to include refillGreedy and added a key check before building the AsyncBucketProxy to enhance flexibility in
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to clarify functionality and improve code readability
added support for post - execution hooks in the Generator and SemanticAnalyzer classes to enhance lineage evaluation based on query properties and hooks
added error handling for NoClassDefFoundError in REngine . java to ensure compatibility with cases where no class definitions are found
refactor TraceFilter and TraceWebFilter to use SpanAndScope for span management to improve code clarity and maintainability by encapsulating span
updated exception handling in AbstractUpdateCommandStep to use a fallback message if the getCause ( ) method is null to improve robustness by avoiding
updated SolrServerException instantiation to include the base URL in the exception to improve error handling by associating the exception with the base URL
updated landscape setting logic in HSSFPrintSetup . java to handle non - landscape scenarios correctly
updated return statement in JavaVoidObjectInspector to handle null input correctly to improve robustness by preventing potential NullPointerExceptions
added validation for argument names in ArgDesc . java to ensure that invalid argument names do not lead to runtime errors
added support for in - memory background location listener in AndroidLocationPlayServiceManager to improve user experience by enabling direct access to location services
updated the condition from ` primitiveType ! = GL10 . GL _ POINTS ` to ` primitiveType = = GL10 . GL
trufflestring : do n ' t check if two array have the same length and stride
added a method to set the command list status in the ComboBox class to ensure the command list reflects the current state of the component
nifi - 1358 : fix issue with tls alias filename that contain forward and back slashes
replaced hardcoded ` zkcli . sh - cmd ` with a dynamic call to ` zkcli . sh - zkhost ` to improve
updated comparison logic in FirmwareUpdateProgressInfo , BridgeHandler , WemoLightHandler , and WemoLightHandler to ensure proper
added a check for remoteGrpcStatus before posting console events to avoid unnecessary console event posting when remoteGrpcStatus is OK
refactor method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
add entity id to tick tick if it ' s an entity tick
added a method to retrieve error string from an error enum in GLSurfaceViewAPI18 . java to improve error handling by providing a
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 541 . add
updated the server URI assertion in RFC2616BaseTest . java to use " http : / / myhost : 1234 / tests / "
added a call to addToHelperList ( ce ) in the Construction class to enhance the functionality of the helper list
added a condition to handle cases where the length is - 2 and updated the return value from - 1 to - 2 to ensure proper handling of
added security permissions and modified context class loader handling in Transport and TCPTransport classes to enhance security by restricting access to class loader operations
refactor file synchronization logic in ReceiveExternalFilesActivity to ensure proper handling of file paths and avoid null pointer exceptions
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is
removed debug logging statement in BarrowmanCalculator . java and simplified the deltap calculation in TubeCalc . java to improve code clarity
updated node and edge column handling in TimelineControllerImpl . java to ensure proper column addition based on the type of the node or edge
added a method to register extra components for the BrokerAdminApiApplication to enable proper handling of additional components for the broker admin application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the fix for bug
peergroup : use a linkedlist instead of a list to avoid concurrentmodificationexception .
fix infinite loop in abstractbuilder . save ( ) . close # 159
updated ConfigNodeSimpleConsensusSnapshotTriggerThreshold and RatisRetryPolicy to use a supplier for RatisConsensus to improve flex
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a check for the ManagedService annotation before creating a JMXHelper instance to ensure JMXHelper is only registered when the ManagedService annotation is present
tika - 2276 -- add support for non - unicode entry name in zip file
added a new file TestSplitThruPhiDivMod . java that implements modular arithmetic and division tests to demonstrate and validate
added methods to lookup generic interfaces and superclass templates in TemplateRegistry . java to enhance type resolution capabilities for parameterized types
updated the constructor of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added comments to the languagesExcluded array to indicate that Chinese , Indian , and Arabic symbols are not yet available to provide cl
increased the size of the byte array and updated transfer logic in TransferCompletionHandler . java to accommodate larger data transfers to improve
change focus listener to windowadapter in sipcommmenu and sipcommpopupmenu to be consistent .
modified semantic exception handling to check for null source before throwing an exception to improve robustness by avoiding null pointer exceptions when the source node is
fix ( mesh ) : scale aabbscale when render a skeleton ( # 4358 )
added getSolrHome ( ) method to DistributedClusteringComponentTest and overridden getSolrHome ( ) in BaseDistributedSearchTestCase to
added import for org . springframework . context . annotation . ComponentScan in SpringWebConfig . java to facilitate the use of
removed the getAccount ( ) method from UserListItem . java to simplify the code by eliminating an unused method
added unit tests for the ` installPackage ` method in ` ShadowPackageManagerTest ` and updated package information handling in ` ShadowApplicationPackageManager
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added imports and constructors for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to facilitate the initialization and handling of transaction
add support for shuffle member list in client cluster service
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by utilizing a more suitable representation of crawl data
refactor JsonDeserializer to improve code structure to enhance maintainability and readability of the code
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH in TsfileDBConfig . java and modified fetchSize handling in QueryProcessExecutor . java
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to ensure accuracy in error reporting
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize ` title ` to an empty string in ` Lwjgl3WindowConfiguration . java ` to ensure ` title ` has a default
added handling for empty response bodies in AsyncHttpClientCall and corresponding tests in AsyncHttpClientCallTest to ensure that a non - null response body is
deprecate embeddedserverinstance and deprecate in favor of discoverserverinstance
replace macadapter constructor with jabrefframe . registermacevents ( ) for compatibility
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related references to improve cl
reformatted the return statement in HandlerLibrary . java to improve code readability and maintainability
changed the visibility of the ` hideUnprivilegedObjects ` variable from non - final to final in ` PgConnection . java ` to ensure
update test to use configurationmanager . getinstance ( ) instead of new constructor
added support for saving Giphy Android 11 video URLs in IOUtils . java to enable compatibility with Android Q and ensure proper video handling
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 263 : fix
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor logger instance retrieval logic to use computeIfAbsent for improved readability to streamline the code for better performance and maintainability
deleted the DataOutputOutputStream . java file to remove unused code to streamline the codebase
updated transaction IDs from " 1 " to " 2 " in TestAcidOnTez . java to ensure correct data retrieval for improved
change log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity and improve performance during class enhancing
added methods to retrieve the default provider name and updated provider name handling to ensure compatibility with different operating systems and improve provider identification
added imports for Captor and CaptorAnnotationProcessor in MockitoBeforeTestNGMethod . java to enable processing of Captor
added checks for enabled class and method names in TestSuiteBuilder . java to ensure that onlyRun and testMethodNames are valid before proceeding
refactor GroovyAutoComplete and GroovyLanguage classes to improve prefix handling and import statements to enhance code readability and maintainability by streamlining
fix import . java to use osm instead of graphhopper
simonstewart : do n ' t use httpclientfactory . defaultclientfactory . withretries ( ) in handlesession .
changed the visibility of the mHideSysUiScrim variable from final to non - final and added logic to toggle the visibility of the
refactor cancellation logic in ` Call ` and ` OkHttpCall ` classes to improve code clarity and ensure proper management of cancellation state
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and correctness to enhance swipe detection logic for better user experience
changed the RequestMatcher interface to extend the RequestMatcher class from org . springframework . security . web . util . matcher . RequestMatcher to
updated DeferredAttr . java to include IF and added a new test class ImplicitLambdaConsideredForApplicabilityTest . java to enhance
move boxed and boxedprimitiveequality test to a separate test for j2ktt
added unit tests for default and with density in DeviceConfigTest and implemented dimension setting in DeviceConfig to ensure correct handling of display metrics based on
replaced IOException with RuntimeException in ExternalViewReaderTest and modified timestamp initialization in PinotDataTypeTest and PluginClassLoader to improve error handling and simplify
updated the icon resource from ` drawable . logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to
added content setting to errorBuilder in FileUploader . java to ensure error messages are properly displayed for better user feedback
refactor ConcurrentHashMap implementation to improve thread safety and performance
added methods to adapt user trades in the AbucoinsAdapters and AbucoinsTradeService classes to enhance functionality for handling user trades
added economy check and modified plot claiming logic in multiple classes to improve plot management and ensure proper economy behavior during
simonstewart : add support for firefox and internet explorer in htmlunitdriver
added handling for VARBINARY data type in BlobType . java to ensure correct database data type is returned for VARBINARY data types
refactor version handling logic in SetCookieSupport . java to improve clarity and correctness to enhance code readability and maintainability by redu
[ flink - 17790 ] [ runtime ] fix thread safety issue in libfifcontext
replaced ` Context ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer ` to ensure compatibility with Vert . x thread
updated timeout settings and added deadServerNoTimeout method in LdapTimeoutTest . java and LdapTimeoutTest . java to improve test reliability by
corrected the spelling of " UniocdeData . txt " to " UnicodeData . txt " in the Usage message to ensure
camel - 14284 : camel - cxf - relay - test should set the header on the exchange , not on the client - side
updated multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and modified the return value in BoosterSet to ensure proper handling of BoosterSet
[ jabref ] add proxy support to jabref
replaced ` __ BLOCKCHAIN __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` and updated time calculations
replace throwing an InternalError with returning false in Class . java to improve error handling by providing a default return value instead of throwing an exception
updated import statements and logging statements in TestIPCUtil . java to use Apache Commons logging instead of Mortbay ' s Log
removed unnecessary chunked transfer handling in NettyRoutingFilter . java to simplify the code by eliminating unnecessary transfer encoding configuration
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that previous attributes are reset before processing new data
added pollingPeriod parameter to VerificationAfterDelayImpl and updated related methods to improve verification reliability and error handling during delay verification
added compaction management configuration and modified conditional logic in SemanticAnalyzer and QueryCompactor classes to enhance query optimization and optimize performance during compaction operations
[ zeppelin - 4892 ] copy all jar file from zeppelin . sh to zeppel
hbase - 25829 fix checkstyle violation in hbaseadmin . gettableregions
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated ` calcXBounds ` method in ` BarLineChartBase ` and ` CombinedChartRenderer ` to utilize ` xAxisModulus `
added a try - finally block to release the reader in SimpleSAX . java to ensure resources are released properly to prevent memory leaks
added release of headerBuffer in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it
added a null check before closing the result set in JdbcExecutor . java to avoid potential NullPointerExceptions when closing the result set
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest database
fixed bug 138175 - usestringbufferlength do n ' t handle empty literal .
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the ` createDb ` method to return a ` Connection ` and modified its return type to return the database connection to improve resource management and
refactor CreateCustomMetric and ListResources classes for consistency to improve code maintainability and readability
hbase - 25829 add config option to disable off - peak compaction ( # 2695 )
updated BitstampDepositAddress to handle both " address " and " error " fields and added JSON unmarshalling tests for deposit address to
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to improve error handling by using a response ' s abort method
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the linkPath is correctly resolved to
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and changed ` operationType ` to ` InvocationType ` to
added a loop to check if the network interface supports multicast before returning it to ensure that only supported multicast interfaces are processed in the network interface
reordered the validity check for checksum checks in ChangeSet . java to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to provide a placeholder for future implementation of the clone method
updated return statements in Circle . java to use equality check for radius and radius to improve accuracy of geometric validation based on radius
updated frequency band assignment logic in P25Channel . java and added @ Override annotations in P25ExplicitChannel . java to ensure proper handling of
renamed ` tapSquareSize ` and ` inTapSquare ` variables to ` tapRectangleWidth ` and ` inTapRectangle ` to improve
change default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable duplicate on write operations
added a ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` method and modified the ` getCryptoFacilitiesFills ` method
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes to provide access to the ` delegate `
updated Snackbar handling in FileActivity and adjusted synchronization logic in FileDisplayActivity to improve user experience by providing clearer error messages and synchronization
added quiche _ conn _ stream _ writable method in ForeignIncubatorQuicheConnection and JnaQuicheConnection to
added a boolean parameter to the JavaScriptContext constructor to enable additional functionality for improved context management
removed the ` Align . left ` parameter from ` TableCell ` constructors in ` BaseTextFormattingHelper ` and ` TableCell ` classes to
added a new file ` TracingAutoConfiguration . java ` to configure tracing in the Cloud Foundry application to facilitate automatic tracing of
added a Para instance to the start parameter before adding it to the second parameter to ensure the second parameter is correctly associated with the start parameter
updated the ` getPrunedQueryableSegments ` method to include a ` List < IndexSegment > ` parameter and adjusted segment retrieval logic to
[ hotfix ] [ test ] fix typo in vertxbuffertest
fix for bug # 5228 - messagesubmissionchunk do n ' t contain hyphen and normal date
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` DataIntegrityViolationException ` instantiation to include ` WriteResult ` and ` MongoAction
[ hotfix ] [ coordination ] fix return statement in jobcoordinationservice
updated the ` bitsToHumanReadable ` method to utilize a new ` mimeType2HUmanReadable ` map for different image types to
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a check to return early if overview state is disabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
updated error message from " deeplearning4j . org / cpu " to " deeplearning4j . konduit . ai / performance
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated the context initialization method to accept it to enhance flexibility
added null checks for incoming Fields , Terms , DocsAndPositionsEnum , and LeafReader constructors in FilterLeafReader . java to ensure that
add key size validation to jcecmfencryptorbuilder and add unit test
updated IOException handling in NetSocketReader and SoftEndOfStreamException to provide a more informative exception message to improve error clarity and provide more
removed unnecessary @ Inject annotations from multiple Java classes to improve code clarity and reduce unnecessary dependencies
updated the size of the BundledDistributionTest and added assertions for database user attributes in PostgreSQLTest to ensure the test accurately reflects the
[ hotfix ] [ stream ] add pipeline . name option to streamexecutionenvironment
updated the calculation of scale based on the device profile type to ensure correct scaling based on the device ' s layout requirements
updated the IcePlainsBiome class to extend SnowyBiome and modified the population settings to improve the biome ' s functionality
removed timezone parameter from getMinTime and getMaxTime methods in DataUpdateManager and StorageUtils classes to simplify method signatures and improve code readability
[ wasm ] add the isqualified flag to the constructor of thisreference .
updated regex pattern in XhamsterRipper . java to use \ w instead of ' wmde . ' to ensure compatibility with various
fix a memory leak in glowworld . getentities ( ) .
hhh - 14850 - oracledialect . tostring ( ) should return the schema name if the schema be null or empty .
fix an npe in the console filter ( # 3550 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select and deselect all
[ java ] use termlengthmask instead of termwindowlength in networkpublication .
fixed typo in javadoc of guildupdateownerevent .
updated inPortalTicks increment logic in Player and Entity classes to ensure proper handling of tick values for creative and non - creative environments
added compression support and updated text fill calculations in ClusterMonitorTileSkin . java to enhance visual clarity and customization of chart items based on
refactor multiple codec template classes to improve code organization to enhance maintainability and readability of the codebase
changed the data type of lengthDataBits from int to long in Base64 . java to ensure proper handling of larger length values and prevent potential
removed unnecessary null check for renderer in RendererConfiguration . java to simplify the condition for better readability and maintainability
cloudstack - 4892 : do n ' t allow volume to be create with same disk offering ( # 4893 )
updated import statements in Order . java and HitbtcAdapters . java to use specific classes instead of wildcard imports to improve code clarity
fix idle count bug in realtime consumption ( # 4327 )
updated the service name from " JRuby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify
replaced the variable ` name ` with a local variable ` displayName ` in ` ConfigCategory . java ` to improve code readability and maintain
updated the condition in ` ParticipateAssetIssueActuator . java ` to include a check for negative exchangeAmount to ensure correct handling of
removed the infinite loop condition in FeedUtils . java to simplify the code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to ` HDFParserTest . java ` to ensure compatibility of HDF4 parsing with Java
added a new constant for CALCITE _ 6092 _ FIXED and modified cast assertions in SqlOperatorTest . java to enhance test coverage
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quietly close multiple AutoCloseable instances to improve resource management and prevent potential memory leaks
replaced the variable ` posBtn ` with a direct reference to ` common _ yes ` in ` RemoveFileDialogFragment . java ` to
added a check for non - zero width and non - zero height before drawing the image to avoid potential errors when the image dimensions are invalid
replaced ReflectionHelpers . callInstanceMethod with a dynamic method invocation for defining the class to improve flexibility and maintainability of the code by
updated the regex pattern in ` GUIUtil . java ` and added validation tests in ` GUIUtilTest . java ` to improve regex accuracy and
replace boolean conflict with long conflicts in CachedRowSetWriter . java to improve readability and maintainability of the code
move pubspec . yaml file to pubspec . yaml file ( # 1181 )
added a check to return the reference object if it is the same instance to optimize performance by avoiding unnecessary object assignments
added handling for seed files and improved error logging in the Injector class to enhance robustness by ensuring only valid seed URLs are processed
added a condition to check if the original view is hidden before hiding it to ensure the original view is not hidden when the original view is
updated the calculation of ` maxNodes ` in ` DefaultLoopPolicies . java ` to ensure ` maxNodes ` does not exceed ` maximumDesired
added a logging mechanism for unsupported texture coordinate types in CombinedTexture . java and modified UVCoordinatesGenerator . java to check for it before adding
added error handling for file deletion in EncodeActivity . java and added validation checks in DecodedBitStreamParser . java to improve robustness by
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality by providing seek and close methods for better resource management
updated substring calculation in the SQL query and added a query parameter for oldPrefix length to improve accuracy of the SQL query and ensure the correct length
replaced the direct addition of the collection to the convertedValsList list to simplify the code and improve performance by reducing unnecessary method calls
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new one
added a nightly warning dialog when the Universal Gcode Sender is a nightly build to inform users about potential bugs and report them
modify getresponsessortedbyrecipient to sort by recipient team name if sortbyteam = true
updated return message in UnnecessaryThrows . java to clarify the purpose of the variable to improve understanding of the code ' s
deleted the CacheApplication . java file and replaced it with CacheData in CommonsApplication . java to streamline the codebase by eliminating
replaced calls to ` realObject . getApplicationContext ( ) . startService ( ) ` and ` realObject . getApplicationContext ( ) .
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to check SDK version before updating configuration to ensure compatibility with newer Android versions and avoid potential null pointer exceptions
added a new constant for stack repository link existence in VersionDefinitionResourceProvider . java and a corresponding test case in StackManagerTest . java to
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during execution
added " com . sun . org . apache . xml . internal . resolver . helpers " , " com . sun . org . apache .
rename ` save ` method to ` add ` and update execution context in multiple classes to clarify the method ' s purpose and improve method
added handling for LoopExitNode in GraphUtil . java to ensure correct input substitution for loop exit nodes
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and added a method to set the current recy
added a condition to check if the terminal is supported before proceeding to ensure that operations are only performed when the terminal is supported
changed the data type of ` timeAllowed ` from ` long ` to ` Integer ` in ` CloudExitableDirectoryReaderTest . java `
added a session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that the session is valid before proceeding with
refactor column handling in ChangedIndexChangeGenerator to use a local variable for consistency to improve code readability and maintainability by reducing red
replaced Vector with ArrayList for adding and removing RadioButtons in ButtonGroup . java to improve flexibility and maintainability of button management
refactor UserManagerCompat and UserManagerCompatVN classes to extend UserManagerCompatVM and update demo user detection logic to ensure compatibility with
added methods to retrieve database version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and modified the return statement in Reorganize
replaced ` Set < BuildRule > ` with ` MapDifference < BuildRule , RuleKey > ` in ` ActionGraphCache . java
added LockDatabaseDesc and UnlockDatabaseDesc classes to the Hive plan plan to support locking and unlocking databases in the Hive framework
refactor RankingTopComponent and RankingUIModel to use set methods for setting properties to improve code readability and maintainability
added handling for DisconnectMessage in HandshakeHandler and updated logging in NodeImpl to improve disconnection handling and provide clearer logging for incompatible protocols
added a test method to set and delete a storage group in IoTDBAuthorizationIT . java to ensure proper functionality and error handling for storage group
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling NamedVariable in type validation logic to improve type validation accuracy and provide clearer error messages for missing or malformed variable types
added ` afterTestClass ` and ` beforeTestClass ` methods to ` StepScopeTestExecutionListener ` to provide a standardized way to
replaced specific imports with a wildcard import and updated metadata buffer capacity checks in CountersManager . java to improve code readability and maintainability
replaced string concatenation with parameterized logging in MultiSteps and SendEmail classes to improve performance and readability of log messages
hive - 14905 : joindesc . joinkeys should not be null ( jesus camacho rodriguez
added a PrincipalResolver to the authentication handler registration in WebAuthnConfiguration . java to enhance flexibility by allowing custom principal resolution during authentication
added an ` ImmutableList < Path > searchPaths ` parameter to the ` addSettingsFromFile ` method and updated the ` XcconfigParser `
changed variable declarations from non - final to final in Oracle . java to enforce immutability and ensure immutability of fields
[ hotfix ] [ doc ] disable unaligned checkpointing until rescaling be complete
add unsupportedoperationvisitor to allow query parser to throw exception for unsupported operation
make compiletheworld test log configurable ( graal - compile - theworld . log )
added a check to throw CannotDelambaException for non - LocalVariable instances in LambdaRewriter . java to ensure proper error handling for
added support for MySQL ' s timestamp column type in CreateTableGenerator to ensure proper handling of timestamp values for MySQL databases
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 585 :
added a condition to set the Ejection delay when stageNr is zero in the SimulationListHandler to ensure proper motor behavior when stageNr
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related test methods to improve clarity and align with
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
updated ` validateIssuerClaim ` and ` determineIssuer ` methods to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to
updated string concatenation and added null check for the DocCollection reference in ClusterState . java to improve robustness by preventing potential NullPointerExceptions
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` to ensure
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance foreign key management capabilities in the database and schema handling
[ java ] do n ' t use election state . init in election test .
replaced the static import of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetooth
updated FileSelection to throw a DrillRuntimeException for null or empty root and improved selection root handling to enhance error handling and ensure correct selection
add oninventorytick to iforgeitem and iforgeitemstack , deprecate in 1.20 . 1
fix export of war to a zip file by default
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( ) is
added options handling in AppsCustomizePagedView and updated binding logic in Launcher and PendingAddItemInfo to improve widget binding functionality
added constants for airPressure , airQuality , CO2PPPM , and VOC _ PPM in EcobeeSensorThingHandler .
refactor code for improved readability and consistency in the OperationSetServerStoredContactInfoFacebookImpl . java file to enhance maintainability and
added environment variables for AAPT and AAPT2 executables in Genrule . java and GenruleTest . java to enable the use of
truffle : do not dump access table if truffleinstrumentbranches . value be false .
added null check before disposing the message in Validator . java to avoid potential NullPointerException when disposing the message
added @ Getter annotation and changed the access modifier of the db variable from private to final in TronStoreWithRevoking . java
updated log warning messages in CoreContainer . java to clarify that LogWatcher functionality is not yet implemented for log4j
replaced printStackTrace ( ) calls with fail ( ) and return statements for cloning failures in CategoryPlotTests . java to improve error handling and
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` and added a null check for ` n ` in ` IOSImplementation . java
[ scene2d ] use intmap instead of hashmap for vertexbuffer attribute
removed territory = en _ us from the JDBC connection configuration to simplify the connection configuration for better resource management
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to improve robustness by avoiding potential NullPointerExceptions
updated javadoc and default language handling in TestHtmlTag . java and added new test cases in TestUseOption . java to enhance documentation clarity
updated the condition to check if the result is incomplete and contains at least 10 items to ensure that the completion logic only proceeds when there are
updated the command - line argument for ` HybridClusterIntegrationTestCommandLineRunner ` to use ` timeColumnName ` instead of ` timeColumnName `
updated variable names and output format handling in SiteSnapshotVariationsTest and OutputOptions to ensure correct file extension is used based on the output format
updated condition to check if QSB is disabled before calculating the bottom margin to ensure proper layout behavior when QSB is disabled
added equals and hashCode methods to AnimationList and updated equality checks in SceneKey and GltfModelKey classes to enhance object comparison and hashing
added a ` setDate ` method to ` AbstractGenerator ` and updated the ` setDate ` method in ` HttpGenerator ` and ` HttpConnection `
replaced instances of ` Adler32 ` with ` CRC32 ` in ` Store . java ` to improve performance by using a more efficient
cloudstack - 1343 : add null parameter to xenheartbeatinterval configuration ( # 2297 )
added a new constant ` ZERO _ AREA _ FIN ` and updated geometry warning handling in ` FinSetCalc . java ` to improve cl
added a private class ` DocumentMetadataSerializer ` to serialize ` DocumentMetadata ` to enhance JSON serialization capabilities for better compatibility with different backend versions
hhh - 14850 - add trunc ( ) and date _ trunc ( ) to h2 and oracle dialect
added error handling for memory pool not found errors in MetricUtils to improve robustness by providing clearer error messages when memory pool is not found
updated the ` UserContext . ensureSignedUp ` method to include a ` useJavaScript ` parameter and improved error handling in ` FileAccess
updated error messages in ValidationTask . java to use RUNTIME _ PROTOTOTOTOTYPE _ TYPE and Types . PROTOT
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
updated return statements in PrecompiledContracts . java to use new DataWord ( 1 ) instead of new DataWord ( ) . getData ( )
refactor BadgeState handling in AllAppsContainerView to utilize BubbleTextView for updating item information to improve code clarity and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated method calls in ResourceService and ResourceHandlerTest to correct context handler initialization to ensure proper functionality after ContextHandlerCollection is started
added a condition to return false for workspace custom identifier in Cling . java to ensure proper handling of custom workspace identifiers in drawing logic
remove assertion that lookupModule be not null in trufflejdkservices .
added JUnit @ Ignore annotation to the shadowInvocationWhenChildIsInstrumentedButUnshadowed method in ClassicSuperHandlingTest . java to
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , ItBitTradesDemo , ItBit
ww - 4642 fix npe in profilinginterceptor and scopeinterceptor
changed the ` Utils ` class to be final and added constructors to ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois
cloudstack - 1343 : fix potential resource leak in registriesapiutil . getuseraccount
replaced direct class name retrieval with direct string comparisons for Vector and Hashtable in Util . java to simplify code and improve readability by avoiding
added tableNameWithType to the warning log message in RetentionManager . java to provide more context for debugging retention time issues
trim whitespace from the first character of the fragment list in QueryExecutorImpl . java to ensure that only whitespace - separated strings are processed
fix resourcepackfilenotfoundexception when use modfile . getfilepath ( )
refactor transformer builder handling and button visibility in PartitionToolbar . java to improve code clarity and maintainability by using a more descriptive variable
modified conditional logic in RecentsView . java to check if the task view is focused or fully visible to ensure proper handling of task visibility
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to improve
replaced ` Comparator . comparing ` with ` thenComparing ` in ` QueryCommand . java ` to simplify the comparison logic for better read
adjust damage calculation for block haybale to ensure correct damage for block haybale
refactor environment variable handling in WindowsProcessAddressSpace . java and J9DDRImageProcess . java to improve clarity and consistency in
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance configuration flexibility by allowing plugin property values to be
updated conditional check from ` hashTable ` to ` isEmpty ( ) ` in ` HashJoinBatch . java ` to improve code readability and
updated timestamp validation logic in ` Timestamp . java ` and refactored test methods in ` TimestampTest . java ` to improve accuracy of timestamp
[ java ] use context . archivecontext ( ) . clone ( ) in clusteredserviceagent . java to simplify code and improve readability
added a condition to check if the compiled condition is not met and modified assertions in LambdaForm . java to ensure that compilation conditions are only evaluated
added a new test method ` testImage2 ` and ` testImage2Joined ` to ` AbstractTest ` and ` DB2Online
refactor TogglableFlag to use a constant for the launcher namespace and update related methods to improve code readability and maintainability by
updated log messages in DockerClientFactory to include exception details to improve clarity of log messages for better debugging
added a check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest to use Hamcrest ' s assertThat for better readability to improve test clarity and maintainability by
added new functional interfaces for BytePredicate , FloatPredicate , and ShortToLongFunction in the package com . speedment . common . function to provide
changed the return type of ` getSubsColor ` and ` setSubsColor ` methods from ` int ` to ` String ` and updated related
added a conditional check before deregistering the invocation registry to ensure that deregistering only occurs if the future completes successfully
replaced the control frame byte appending with a direct output method in AbstractWebSocketConnection to simplify the code and improve readability by using a dedicated
added a check to ensure the WelcomeActivity is only started if the intent has the " redirected " flag set to false to improve user experience
added a new class ` ShadowCheckedTextView ` to handle the ` isChecked ` and ` setChecked ` methods in ` Robolectric
added Serializable interface to ParserState and modified visibility of GETTER _ CACHE and changeCallback in AccessorProperty and Property classes to ensure proper serialization
added a new certificate type " identrustdstx3 [ jdk ] " to VerifyCACerts . java to support additional certificate
replaced calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` with ` context . setAttribute ( TEMP
smack - 141 : allow occupant nick to be specify in occupant .
updated QuicSession constructor to include a context map and refactored connection handling in QuicConnection and QuicConnection classes to enhance session
replaced writer . setMergeScheduler and writer . getMergePolicy with writer . getConfig ( ) . setMergeScheduler and writer . get
refactor ICU4JImpl and TextPosition classes to use descriptive variable names to improve code readability and maintainability by using descriptive
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange and AbstractDatabase classes to ensure proper handling of ComputedDate
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
added a check for writable resources in SAML configuration and updated logging level in filesystem metadata generator to improve error handling and provide clearer logging for metadata
make graphprinterdumphandler protect to allow subclassing of graphprinterdumphandler
updated the calculation for average price in HuobiAdapters . java to ensure accurate average price is set for order processing
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Field instead of String to improve type safety and clarity in projection operations
refactor player addition logic in FakePlayer . java to check for existing viewers before sending a packet to improve performance by avoiding unnecessary packet
added null check for layout in Workspace . java and implemented constant state management in FolderAdaptiveIcon . java and ShiftedBitmapDrawable . java
refactor SPDYClient to use AsyncEndPoint and AsyncSPDYConnection for improved connection handling to enhance code clarity and maintain
fix ( dubbo - common ) : fix npe when write null object ( # 10385 )
pdfbox - 4892 : fix checkstyle violation in extracttext and extractimages
refactor BarrowmanCalculator to improve code structure to enhance maintainability and readability of the code
added a check to return early if axes are not visible in the view to improve performance by avoiding unnecessary processing when axes are not visible
replaced direct calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap methods to improve performance by avoiding unnecessary method calls
fix checkstyle issue in xmlworkflowserviceimpl
added SSL support for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java class to enhance security by
replaced hardcoded clock rate calculation with a method to retrieve the real used clock rate to improve clarity and maintainability of clock rate representation
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated Swift module name retrieval from getProductNameForBuildTargetNode to getModuleName in ProjectGenerator and added a setter method in AppleLibraryBuilder
added lock management for release operation in TestSlot . java to ensure thread safety during concurrent access to the registry
# 1188 - fix for findids ( ) with inheritance ( # 1189 )
updated WebSocketServletRFCTest to use ByteBuffer for reading from input instead of a close frame to improve clarity and correctness of WebSocket connection
[ wasm ] fix memory leak when yield a function .
[ type : refactor ] add ttl option to clickhouse log collection
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomPreconditionWrapper and XMLChangeLogSerializer
replaced the use of ` QueuedThreadPool ` with ` Server ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to
added error handling for Fresco initialization in CommonsApplication . java and modified VectorDrawableCompat initialization in NearbyController . java to
modified the return statement to check for non - null and non - empty objectName before trimming to improve robustness by avoiding potential NullPointerExceptions
updated error message in UserDataException from " could not find file ' " to " could not open file " to improve clarity of error reporting
[ hotfix ] [ table - planner - blink ] fix initialization of plannerclass and executorclass in environmentsettings
updated variable names and subject handling in KeyTool . java for clarity and consistency to improve code readability and prevent potential null pointer exceptions
added a deprecated annotation to RuntimeOptions . java to indicate that the class is outdated and will be removed in future releases
replaced manual byte encoding with direct byte retrieval for UTF - 8 strings to simplify code and improve performance by reducing unnecessary byte array allocation
added a new interface ` PermissionEvaluator ` for permission validation in the security framework to provide a mechanism to evaluate permissions based on authentication and target domain
added support for ERASE _ LINE _ ON _ FINISH option in LineReader and modified prompt handling in LineReaderImpl to enhance user experience
[ hotfix ] [ runtime ] fix checkstyle violation in masterfilesystem
replaced ` SIGN _ ERROR ` and ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ SIGN _
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 565 .
fix fullnettyclientresponse throw httpclientexception instead of httpclientexception ( # 4370 )
change the center of the spinner container from centering it to centerAbsolute to ensure the spinner is displayed in an absolute position
[ hotfix ] [ network ] fix memory segment recycling in networkbufferpool
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve resource management and prevent potential memory leaks
replaced ` @ RunWith ( AndroidJUnit4 ) ` with ` @ Rule ( RetryTestRule ) ` in ` AbstractIT .
refactor ` QueryStateMachine ` and ` CallTask ` to use ` transactionManager . isAutoCommit ( ) ` instead of ` session .
added a new package - info . java file and updated import statements in CsvFieldType , CsvTable , and CsvTest classes to organize code
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ runtime ] remove unused constructor in streamtasktestharness
refactor URL handling logic in Request . java and add a test for CONNECT requests in RequestTest . java to improve code clarity and ensure
updated storage point retrieval methods in MainApp , DataStorageProvider , and WhatsNewActivity to improve compatibility with different Android SDK versions and enhance
added methods to handle session availability and unavailability in the SessionManager class to improve session management by allowing priority changes for available and unavailable sessions
added a new package " liquibase . pro " to the ServiceLocator to enable scanning of Liquibase Pro files for improved
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to simplify the deletion process
updated the ` loadWithNewGlobal ` method to accept an additional argument for arguments to enhance functionality by allowing additional arguments to be passed during global
refactor path matching logic in FastPathResolver . java to improve clarity and consistency to enhance code readability and maintainability by standardizing
updated the ` weigher ` method to use ` toIntExact ` for calculating the retained size of slices to improve accuracy in calculating the retained size
rename ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` across multiple classes to improve clarity and consistency in naming con
[ flink - 3596 ] [ table - planner - blink ] [ table - planner - blink ] add support for lead
added a call to clear the headers in AbstractProxyServlet to ensure the request headers are reset before processing new requests
added a check to skip processing if SA attach is not expected to work - test to ensure that the test does not run on unsupported platforms
added null check for bgColor before checking alpha value in GraphicsDevice . java and created a new class TranslucentWindow . java to ensure
added null checks for user information before displaying them in UserInfoActivity to enhance user experience by providing informative error messages when information is unavailable
added ` PrecompiledHeaderSerialization ` class and modified ` PrecompiledHeaderData ` to support serialization and deserialization to ensure compatibility with different machine environments
[ hotfix ] [ table - common ] support update - mode in kafka connector
added a new test class ` MultipleOutputsIntegrationTest ` for testing named output groups to ensure proper functionality and integration of named output groups in the
updated regex pattern and added content handling in FileSettings . java to ensure consistency in content formatting and improve readability
nifi - 1357 : fix bug in statelessflow and statelessvalidationcontext that could cause npe
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added the @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar behavior during testing
added new device status entries for " leaving - dock " and " energy - save - mode " to enhance functionality by representing additional device states
make both exception occur during item model load print in the log ; close # 2696 .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix ( gl ) : do n ' t use pixel scaling for 2x graphics
updated RussianLowerCaseFilter implementation to improve filtering accuracy for Russian - speaking users
removed server and client properties from CsvBulkLoadToolIT and modified setUpTestDriver method to use EMPTY _ PROPS to simplify test setup and
replaced File . separatorChar and File . pathSeparatorChar with ' _ ' in displayName to ensure consistent display name formatting across different operating systems
use seekablestream instead of littleendien for wavloader . load ( )
added support for repeatFirstLineIndent functionality in ColumnText . java to improve code readability by allowing customizable indentation behavior
changed the type casting in the equals method of Oid from Oid to Object to ensure proper type handling and avoid potential ClassCastException
fix npe in hikariproxypool if metric trackerfactory be null
use controlflowanchored instead of controlflowanchornode to avoid infinite loop
added a call to setFocusPainted on buttons [ i ] in WindowsPlacesBar . java to improve the visual appearance of buttons by removing
added checks for UniqueConstraint , PrimaryKey , and ForeignKey in DatabaseSnapshot . java to ensure proper handling of primary key and foreign key types
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and updated its implementation in ` AccountAPI `
check dc . title in group rest to prevent unprocessable group creation
fix bug in gapinsertiondetector when there be no word
added a new test class RubyScriptTextTest to verify the functionality of caching and reusing the script engine to ensure that the script engine is
updated thread count from background threads to database update threads in FeedRefreshUpdater and added getter and setter methods in ApplicationSettings to allow dynamic adjustment of
increased the threshold of FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to
updated the initialization of SystemClassName to use " Ljava / lang / System ; " instead of MetaUtil . toInternalName to ensure correct
hhh - 13644 fix nullpointerexception in getresultstream ( )
added a null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing configuration properties
added BinaryFrameGenerator and TextFrameGenerator classes to provide functionality for handling binary and text WebSocket frames in the application
simonstewart : use seleniumwait instead of localdriver . findelement ( ) in pageloadingtest
updated random double generation logic in RandomGeo3dShapeGenerator . java to use a random boolean for both latitude and longitude to improve randomness
added a method to keep the classloader alive in ResourceBundle . java to improve resource management by allowing for garbage collection of classloader instances
change return value from false to true in SQLiteDatabase . java to reflect the intended functionality of the method
fix findjsr166lockmonitorenter to check for ' ljava / util / concurrent / ' instead of ' ljava
added MkdirStep import and modified steps in AndroidAar , AppleBundle , and FatBinary classes to ensure the output directory is created
updated coordinate comparisons and error messages in MeshLeveler . java for improved clarity to enhance debugging capabilities by providing more context in exception messages
[ drools - 5261 ] skip kie - pmml parsing if jpmml library be not available ( # 5269
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate validation of the thermal status during shutdown
added OS - specific temporary directory handling in MountableFile . java to ensure compatibility with different operating systems when creating temporary directories
added a check to ensure memory mapping is enabled only for non - Windows operating systems to improve performance by avoiding unnecessary memory mapping operations on Windows
added a null check for the organization in the PluginManager class to ensure that plugins require an organization in the pom . xml file to avoid runtime
updated license agreements in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the application
updated the method call to retrieve the Java class path from the system property to ensure the child process execution uses the correct class path based on the
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java `
added JUnit Pioneer annotations and a test for Javadoc change in AddLicenseHeaderTest . java to address issue # 3198 related to
changed the LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PH
added a new div class ` noPrint ` to the ` HtmlThreadInformationsReport ` class to improve the visual presentation of thread information
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and updated TEST _ VERSION _ CURRENT
added symbolicator and task fields to BsdDebuggerLocal . java and modified OS condition in PlatformInfo . java to enhance debugging capabilities for mac
replace weakreference with weakreference in fmlclienthandler , fmlindexedmessagetoserializer , and fmlclienthandler
improve logging of networkdispatcher exception in case of connection reset by peer
[ java ] set default admin buffer if conductor byte buffer be null .
added a break statement in the TouchImageView class to ensure proper flow control in the code execution
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
remove the flushonsslhandshakecomplete ( ) method that do n ' t do anything
added checks for assignability of generic types in TypeUtils . java to ensure proper handling of generic type variables in type resolution
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush in ColumnFamilyStore . java to improve performance by utilizing a concurrent
added null check for errs in MemberEnter and modified error count checks in JavaCompiler to enhance error handling and improve error detection logic
replace ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` in ` BugInfoView . java ` to improve browser appear
replaced ` finish ( ) ` with ` dialog . cancel ( ) ` for the negative button in ` AboutActivity . java ` to
updated division calculations to handle negative values and added unit tests for division operations to ensure correct handling of negative values and validate functionality through compreh
added a method to read a stream from an InputStream and refactored the image loading process to use this method to improve code readability and
added variable definitions and undefining functionality to CaseStmtToken and ExprGenerator classes to enhance the handling of variable declarations and improve code clarity
added exception handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during handshake process
added " psapi . lib " to the " AdditionalDependencies " attribute in the WinGammaPlatformVC10 . java file to ensure compatibility with
updated comment handling in StringUtils and StringUtilsTest to use the system ' s line separator to improve compatibility across different operating systems
updated TemplateEngineFreemarker to use UTF - 8 encoding and modified malicious JavaScript in ApplicationController to enhance security by preventing
replaced ByteArrayInputStream with String for byte array conversion in CRDGeneratorTest . java to improve readability and maintainability of the code
make field final so that it can be use in unit test
added a check for the existence of the " testngEmailableReporter " system property before adding it to the emailableReporter to avoid unnecessary
added quote handling in CommandLineBuilder and modified test assertions in CommandLineBuilderTest to improve command line parsing logic and enhance test coverage for quoted quotes
removed public access modifier from several interfaces in the Clock , DelegatingGauge , MetricProducer , and RegistryProducer classes to enforce package - private access
added a call to set the number of reduce tasks in FreeGenerator . java to ensure the job uses the correct number of reduce tasks based on
fix default value for objectfield in schema generator ( # 2321 )
updated FILEVERSION from " 505365 " to " 532077 " in SaveService . java to reflect the correct file version for
updated extensions in FloatTextureData . java from " texture _ float " to " OES _ texture _ float " and " GL _ AR
make fileserver . write ( ) and fileserver . writefile ( ) synchronized
added a null check for outputDirectory and jarStream in ClassDump . java to ensure output directory is set only when both properties are null to avoid
added performance measurement for SQLite execution in ShadowSQLiteConnection to enhance performance tracking during database operations
replaced ` JDKToolFinder . getCurrentJDKTool ( " jmap " ) ` with ` JDKToolFinder . getTestJDKTool
mondrian : add a new enum ` ` ogc _ exception _ report ' ' and ` ` skip _ missured _
updated bufferPosition calculation and added EOFException handling in RAMInputStream and TestRAMDirectory to improve buffer management and ensure proper exception handling during input stream
improve error message when jsp resource be miss
updated ForkJoinPool and ForkJoinWorkerThread constructors to include an innocuous parameter and modified access control context handling to enhance flexibility
updated CHECK _ EVERY _ N from 10000 to 0xFFFF and modified memory checks in Caches . java to improve performance and enhance debugging capabilities
hbase - 25828 testsplittransaction . testregionopen ( ) do n ' t need to pass regioninfo to openhregion
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
added a new test method ` testJaasDemo ` to ` DemoModulesTests . java ` to validate JAAS demo configuration for
added a condition to check if spanX and spanY are zero before creating a folder in CellLayout . java to ensure folder creation only occurs
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
added a check to prevent re - opening of a table that depend on a higher ID to ensure that the database cannot be re - opened
added a check for the row and column index before parsing the value in TiledLoader . java to avoid potential errors when processing XML gid values
fix concurrency issue in inmemorytilecache . setworkingset ( )
added a new file ` Solution . java ` that implements a solution that calculates the number of steps based on input values to implement a solution that
add addresschecker interface to track bad ip
fix rendering of translucent render type ( # 6640 )
fix for show config default value twice in tooltip ( # 2257 ) ( # 3338 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and ` Capability ` classes to
added a null check for recieptents before mailing and updated time conversion methods to ensure robustness by preventing potential NullPointerExceptions
refactored the isSingle method to use a dedicated method to improve code readability and maintainability by reducing duplication
added a ` failFast ` parameter to the ` DockerClientFactory ` and updated logging in ` RemoteDockerImage ` and ` ImageFromDocker
added a resourcesMode parameter to the AndroidMetadata constructor and updated its usage in RobolectricTestRunner . java and AndroidMetadata . java
[ ambari - 20613 ] fix dateutils . truncate in historicprocessinstancequeryimpl . getdate ( ) method
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) `
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution failures
refactor TreeMap implementation to improve code readability and maintainability
added methods to enable and disable asynchronous stack traces in the Display class to improve error handling and debugging capabilities in the application
added a method to set the glow color in BubbleTextView and updated Folder to utilize it to enhance visual feedback by allowing custom
added style classes for link and desc in LinkedFilesEditor . java to ensure consistent styling of links and descriptions in the UI
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added a test for class name matching in ResultSetMetaDataTest to
removed unnecessary IOUtils . deleteFilesIgnoringExceptions check in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify
added null check for _ info before checking status in HttpConnection . java to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a String provider to enable initialization of ShadowLocation with a specific provider
updated maxRAM assignment logic in LauncherPreferenceJavaFragment . java to accommodate larger device RAM values to ensure that the maximum RAM
add stats of no data included map to local map stats ( # 16400 )
added logging functionality to FileProfileActivator to enhance visibility into file activation process for better debugging and monitoring
updated the string used in the addToBody method from " noname1234 " to " invalid _ " to improve clarity by using a more
fix a bug in the collection of role in guildimpl . getroles ( )
updated the array length check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure
added assertions to verify the deletion of a record in the DashboardUserMapper to ensure that the delete method behaves as expected in the test case
rename recipient to primaryparticipant in instructorfeedbackresultspagedata to make it clear that it belong to a participant rather than a recipient
sulong : add specialization for deref address in pointer store node .
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
added a help auto - width option to the ` terasology ` command to provide users with guidance on how to use the standalone launcher
added a check for old interactions before setting the action bar title in DrawerActivity . java to enhance user experience by providing clearer feedback on
updated CommandLineParserTest . java to improve test coverage to enhance reliability of command line parsing functionality
added interpolators for ALL _ APPS and ALL _ APPS _ CONTENT _ FADE in QuickstepAtomicAnimationFactory and Portrait
updated the method to use ` javaNameFromExternal ` instead of ` toUnderscoreSeparated ` for better clarity to improve code readability and
added native methods for setting and retrieving frames in CWrapper . java to enhance functionality for window management in the application
added validation for variable references in ` Checker . java ` and created a new ` ValueTest . java ` class to ensure that only valid constant
updated test classes for MontgomeryMultiply , TestMulAdd , and TestSquareToLen to improve code clarity and maintainability
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null check
refactor JiraConfiguration to improve code organization to enhance maintainability and readability of the configuration settings
updated string concatenation for error and coverage failures in UploadBuild . java to improve clarity and consistency in error reporting
updated bounds calculations in DeviceProfile . java to account for search bar positioning to ensure proper layout adjustments by accounting for the search bar
fix disconnection in case idletimeout be 0 ( # 1391 )
refactor OverviewCommandHelper to run on the UI thread for launching activities to ensure that activities are executed on the correct UI thread for
removed unused imports and methods related to source group handling in AppleSource . java to streamline code and improve clarity by eliminating
increased sleep duration from 220000ms to 320000ms in TestSimTriggerIntegration . java to allow more time for the trigger to
updated return statements in FloatSelectiveStreamReader to use positionCount instead of outputPositionCount to improve clarity and consistency in position handling
added null checks for ` bestSoFar [ 0 ] ` and ` bestSoFar [ i ] ` in ` AbstractNodeCostSearch . java `
added a condition to skip processing for specific UI components in ResourceEditorView . java to improve performance by avoiding unnecessary processing for specific UI components
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized before use to avoid potential null pointer exceptions
added unit tests for IMEI and MEID methods in ShadowTelephonyManagerTest and implemented methods in ShadowTelephonyManager to
added debug debug statements to SimpleHostRoutingFilter for Zulul requests to improve debugging capabilities for Zulul routes
added a ` destory ( ) ` method to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex
[ rocketmq - 1342 ] fix the test failure of normalmessagemessagesendandresendit ( #
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 in OutputStreamWriter to improve code readability and maintainability
hbase - 25829 bulkload should throw ioexception instead of multipleioexception if multihfile do n ' t exist
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated its usage in ` RippleWithdraw
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
simplified exception handling by consolidating multiple exceptions into a single catch block to improve code readability and maintainability by reducing redundancy
added a null check for the method body and method modifiers in Java2TypeScriptTranslator . java to ensure proper error handling when invoking abstract methods
added logging functionality using StacklessLogging in TestFileSessions . java to improve error handling during disk sweep operations
added serialization support for ` SqlDataType ` and refactored static fields in ` Entities ` and ` MutableColumnDataType ` to ensure proper serialization
renamed SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added a null check for claimRequestString before parsing to prevent potential NullPointerExceptions when claimRequestString is null
updated the constructor of ` HiveFilterSetOpTransposeRule ` to use ` RelBuilderFactory ` instead of ` FilterFactory ` to improve flex
updated type hint processing logic in UpdateMapper and added tests for null values in UpdateMapperUnitTests to improve type safety and ensure correct mapping of
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest and added a method to retrieve core status to improve code
initialize transformers and locators to an empty list to ensure that transformers and locators are properly instantiated to avoid potential NullPointerExceptions
updated string concatenation syntax in AbstractQuerydslProcessor . java to improve code readability and maintainability
add a tostring ( ) method to pegraphdecoder for debug purpose
replaced instances of ` setOf ( ) ` with ` copiedSetOf ( ) ` and ` copiedListOf ( ) ` in `
camel - 14284 : camel - mail should use objecthelper . getidentityhashcode ( this ) to avoid npe .
fix for http : / / issues . apache . org / activemq / browse / amq - 2370 - avoid npe
updated getIdentifierName ( ) to include isPropertyName ( ) method to ensure the identifier name is correctly marked as a property name
added a new class ` WaveGeneratorActivity ` to handle the launching of the ` WaveGeneratorActivity ` in the ` InstrumentsFragment `
added null check for ` m ` in ` KeyedProperties . java ` and improved error handling in ` SheetOverlaysManager . java
fix : add test case for podit . log ( ) and exec ( )
added a test method to verify that no index is detected and created a new one to ensure that SolrCore correctly handles cases where no index is
add dispatchmethodkokra call to graalkerneltester so that it do n ' t call super . dispatchmethodkokra
[ scb - 2682 ] fix the order of defaultmxrecord in dns client ( # 2695 )
refactor thread creation in XToolkit to use a privileged action for thread creation to improve code readability and maintainability by using a
added validation in SelectBox . java and set the selected Linux version in UITest . java to ensure proper functionality and support for Linux 6
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by printing stack trace instead of throwing an exception
added a ` SplitState ` parameter to the ` createState ` method and modified related logic in ` FlowBuilder ` and ` SplitState `
changed the ` connectionState ` variable from ` int ` to ` volatile int ` in ` SSLSocketImpl . java ` to ensure visibility of
increased the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and updated related test assertions in EnableIntegrationTests . java
replaced ByteBuffer with MemoryUtil for memory allocation and encoding methods to improve memory handling efficiency and maintain consistency in memory management
added catch blocks for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error handling and
[ java ] unusedmodifier : ignore enum declaration for unused modifier
replaced lambda expressions with method references in multiple Java files to improve code readability and maintainability
added SSL parameter name to parameterized parameters in AbstractHttpClientServerTest to improve clarity of test output by specifying SSL context
refactor exception handling and log warning messages in TransformationHelper . java to improve clarity of error messages and ensure correct state formatting
updated permission handling in ActiveConnectionRESTService to use activeConnectionPermissions instead of userPermissions to ensure proper access control for active connections
replaced direct equality comparison with Apache Commons Lang ' s EqualsBuilder in Point . java to improve code readability and leverage Apache Common
added a null check for outputRoot in the process method to prevent potential NullPointerException when outputRoot is null
pdfbox - 4892 : add annotationfilter interface , a suggest by valerybokov
refactor StackTraceCleaner class to improve stack trace management to enhance performance and maintainability of stack trace handling
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for CSS and JavaScript files
hhh - 14850 - skip testliteralinselectexpressiontest for oracle8i
renamed the parameter from ` slot ` to ` slotSize ` and updated the upgrade method to improve clarity and ensure proper handling of version
added a ` getStats ( ) ` method to various classes and updated ` DocBuilder ` to use ` AtomicLong ` instead of ` AtomicInteger `
added long polling functionality and thread management in the KieClient class to improve performance and responsiveness during long - running operations
updated scrolling functionality in PagedView and BaseOverview to use scroll methods instead of fling and gesture margins to improve user experience by enabling
updated unlocks initialization in UI and added a new button in PausedDialog to enhance user interface by providing an option to show unlock status
added a call to clear the drop list in PlayerEventListener to ensure the drop list is reset before processing new events
add default param for stream result so that it can be use with auto - config annotated result
updated exception handling in testNormalizeOrder method from MalformedURLException to IOException to ensure proper exception handling for input / output operations
updated the output format in TsFileSketchTool . java to include chunk type and modified the planIndex handling in LocalTsFileInput . java
added headersToExclude to the UmbrellaHeader class and updated assertions in ProjectGeneratorTest to exclude specific files from processing
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encode ( ) method to RequestPlugin . java to enhance request processing capabilities
mondrian : do n ' t use float ( ) in sql query for oracle
added null or blank password validation in LdapAuthenticationProviderImpl . java and created a corresponding test class in TestLdapAuthenticationProviderImpl . java to
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a call to clear the complexWriters in ProjectRecordBatch . java to ensure proper handling of complex writers when conditions are not met
added @ SuppressWarnings ( " serial " ) annotations across multiple cache classes to suppress serialization warnings for improved code clarity
changed the visibility of the ClassGraphClassLoader class from public to package - private and modified the condition for checking class loading to improve encapsulation and
fix exception schema parse if _ errors array be top - level ( # 1813 )
added a constructor to the EventSourcingRepository class that initializes eventStore and snapshotTriggerDefinition to ensure that eventStore is not null and
refactor binary node handling by removing unnecessary variable assignment to improve code readability and maintainability
modified search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure leading and trailing spaces are removed from the search text
[ nuvo ] disable page on command in standalone mode ( # 11935 )
tmi - tiff : use baseline . planarconfig _ chunked instead of extension . planarconfig _ planes
added a call to the ` is . close ( ) ` method in ` ItemListTag . java ` to ensure proper resource management by closing
add averageutil class to make it easy to calculate and store average value .
added new classes SigInt and SigIntBarrier for handling signal handling in the application to facilitate the handling of the INT signal
refactor graph handling in ExporterGEXF to use HierarchicalGraph and EdgeIterable for edge creation to improve code clarity and maintainability
replaced byte buffer handling with Text for null handling in TCTLSeparatedProtocol . java to improve performance and compatibility with character encoding
[ # 7373 ] feedbackrubricquestiondetails : handle invalid index in response ( # 7374 )
updated the type check for ` accordingTo ` in ` CatalogComparator . java ` to ensure accurate comparison of ` CatalogAndSchema . CatalogAnd
refactor BrowserMobProxyTest to improve method names and setup / teardown methods for better clarity to enhance code readability and maintainability
added integer . toString ( ) to the formatted string in criticalErrors to ensure proper formatting of string values for better readability
added a call to mTextWatcher . reset ( ) in InPlaceEditView . java to ensure mTextWatcher is reset before further operations
refactor InternalByteArray and TruffleString classes for improved code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ graph ] fix generic type in outedgesfunction
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new ` DiacriticTest . java ` class
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and add a method to assert execution completion to improve test reliability
do n ' t create workspace reader if there be no makebehavior or project activation
updated SSL configuration logic in ServiceRegistryConfig . java and added dynamic IP port assertions in TestServiceRegistryConfig . java to ensure correct SSL configuration
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary parameters from the Jdbc3Connection constructor to streamline the constructor signature for better readability
added a synchronized method ` ensureInstance ( ) ` to retrieve the servlet instance to improve thread safety by ensuring the servlet is properly instantiated before use
added logging and expiration logic for deltaServerTime in BinanceExchange and BinanceBaseService classes to improve traceability and ensure accurate server time
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " binding in Tomcat
added null check for the component form before deregistering animated to avoid potential null pointer exceptions when accessing the component form
updated the ` decodeResource ` method to accept an ` BitmapFactory . Options ` parameter and modified related methods in ` ShadowBitmapFactory ` and
[ java ] replace executor . execute ( ) with executor . execute ( ) in example .
added click handling and linkification for tweets in TimelineArrayAdapter to improve user interaction by allowing links to tweets and emojis
added " text " to the unmodifiableDataTypes list in PostgresDatabase and modified numeric type handling in NumberType and ColumnSnapshotGenerator to ensure
fix entryprocessorbouncingnodestest . testentryprocessorwhile2nodesbouncingnodes . testentryprocessorwhile2nodesboun
updated state checks from isHardDeletableState to isRemovableState and modified error messages in AmbariManagementControllerImpl and Amb
[ mielecloud ] fix createbridgeservlet to handle reconfiguration failure
refactor robots expiration checks in PreconditionEnforcer and improve synchronization in CrawlServer to enhance code clarity and ensure thread safety during robots processing
added null check for displayName in TestInterfaces , Equals , and IndexTest classes to improve robustness by avoiding potential NullPointerExceptions
updated SpriteBatch to accept a default ShaderProgram parameter and modified shader creation logic to enhance flexibility by allowing custom shaders to
added options setting for synchronous commit in TestUtil . java to ensure synchronous commit functionality is consistently applied
added type coercion functionality to ` SortedSetTypeCoercer ` and refactored the ` fillSortedSet ` method to use `
refactor confirmation message handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing appropriate
added a check for a valid character range in URLPathEncoder . java to ensure that only valid characters are processed to avoid potential errors
added a dynamic port allocation for the fragment storage registration in UserContext . java to improve flexibility by allowing dynamic port assignment based on the current
added an expectation for returning an empty map in HostResourceProviderTest to ensure that the test correctly handles cases where no clusters are available
[ hotfix ] [ yarn ] remove unused logger from yarnentrypointutils
make sipcommframe . java more resilient to change in the background color .
removed the ShadowHtml class and updated related assertions in HtmlTest and ShadowHtml to simplify the codebase by eliminating unused shadow functionality
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated JettyLogger initialization to use H3 and Quic classes instead of Jetty logger to improve logging configuration for HTTP3 and QUIC
changed the visibility of the ` addListeners ` method from private to public and added a test for listener validation in ` MockSettingsImplTest `
[ hotfix ] [ javadocs ] fix typo in statehandlestore
replaced the import of ` Constraint ` with ` org . eclipse . jetty . http . security . Constraint ` across multiple test files
update instructorcourseenrollresultpagedata and instructorcourseenrollsaveaction to use constant instead of string
use try - with - resources to prevent resource leak
( chore ) camel - 1145 : avoid port conflict with other test
refactor jar parameter retrieval methods to use ` BuildTarget ` instead of ` buildTarget ` across multiple classes to improve clarity and consistency in
remove the # validating - cerficates link , it ' s no longer need
cloudstack - 4892 : remove getpagesizeval ( ) method from listcapacity api
added handling for the ` CLOSED ` case in ` IteratingCallback . java ` to ensure proper termination when the callback is closed
added a boolean field ` isAuthorized ` and updated access control logic in ` AccessControlContext ` to ensure proper tracking of authorization status during access control
refactor OSGiDeployer to handle OSGi service registration and deployment events more robustly to improve code clarity and ensure proper
added support for handling " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type is set for
refactor the initialization of ` types ` and ` profiledArgumentTypesAssumption ` in ` OptimizedCallTarget . java ` to
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` and ` MapRenderer . java `
updated file paths in PolicyMonitorTest to use target directories instead of test resources to ensure the tests use the correct directory structure for test resources
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure the trashbin list is cleared before adding new files
replaced ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` with ` com . sun . jdi .
sulong : fix llvmcheckglobalvariablestoragenode . execute to return a boolean instead of void .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and updated related logic to include relevant intent information to enhance event handling
added a constant MAX _ BURN _ TARGET _ LOWER _ FLOOR and modified the return statement in BurningManPresentationService
replaced specific imports with a wildcard import and modified the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to streamline import
refactor item assignment logic in DMLTransformer to handle empty insert statement cases to improve code clarity and ensure correct selection behavior based on the
updated import statements in ServiceValidateControllerTests . java and modified the pgtUrl parameter in testValidServiceTicketWithInsecurePgtUrl
updated the ` getDefaultValidFunctionName ` method to include an ` isStatement ` parameter and modified its logic to improve function name handling and ensure proper
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic type parameters in multiple classes to improve type safety and clarity to enhance code readability and maintainability by explicitly specifying the type of
added a new Dimension ( 320 , 200 ) in DeviceConfiguration . java and modified the return statement in CallGTalkImpl . java to
added test for PostgreSQL ' s PGobject update functionality in ResultSetTest . java to verify correct behavior of date updates with PGobject objects
updated PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY when the user does not have an email to improve error handling by providing a clearer
replaced direct child element retrieval with a direct document element retrieval to simplify code and improve readability by directly accessing the document element
refactor Cache class to improve cache management to enhance performance and maintainability of the code
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone and SPTResource classes to improve cl
add a check to make sure the binding be valid before try to bind it .
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to enhance testing capabilities by allowing chaining of
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the calculation of recordedTime in Locations . java to include a new value of 619315200000L to ensure accurate time representation
added a condition to resize the status if the terminal type starts with AbstractWindowsTerminal . TYPE _ WINDOWS to ensure the status is resizable
updated the host version state handling in the UpdateDesiredStackAction and RepositoryVersionState classes to ensure that the host version is only marked as installed
move jre _ bundle _ deploy . jar to a separate directory for integration test
use linkedhashset instead of hashset to avoid concurrentmodificationexception
replaced the try - catch block with a final variable ` op ` in ` OperationServiceImpl . java ` to improve code readability and
[ hotfix ] [ knative ] fix checkstyle violation in knativeenvironment
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to standardize the naming convention for the
added a call to ` connect ( ) ` in ` CloudSolrClient ` and a test for uploading configurations in ` TestCloudSolrClientConnections
synchronize access to allbindings to avoid concurrent modification exception
added functionality to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner to improve resource management and
added import statements for LinkedHashSet and TreeMap in SecureXStream . java and updated styles handling in XStreamPersisterTest . java to enhance style management
[ drools - 3540 ] add a method to set the kiemodulemodel to the internal kiebuilder
refactor Farmland handling in BlockEventListener to use instance checks for block data to improve efficiency and clarity in event processing
added a default method ` getLocalIp ( ) ` that returns ` null ` to provide a default implementation for retrieving the local IP
updated serialization and deserialization of OBJECT _ VAL in JdbcStepExecutionDao and added new test cases in AbstractStepExecutionDaoTests to improve data handling
updated the calculation of b0 and b1 in AbstractDictionary , BigramDictionary , and WordDictionary classes to correct the handling of Chinese
added support for Python 3 and modified resource loading in Python . java and tensorflow . java to enhance compatibility with Python 3 and improve resource management
refactor PluginTab to use a refresh mechanism for fetching plugins to improve code readability and maintainability by encapsulating the table refresh logic
change log level from info to warn for reloading , saving , and trimming history file
cloudstack - 4892 : fix npe in vmwarestoragestoreprocessor when vmware . vmware . vmware .
camel - 14284 : camel - sftp should stop the sshd when it be stop .
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
updated ` GpsSettingsActivity ` and ` Session ` to use ` Utilities . GetBuildSerial ( ) ` instead of ` Build . SER
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null checks for spatial and skeletonControl in AnimControl . java to ensure proper removal of skeleton control when spatial is not initialized
added functionality to set smart replies in ShadowRankingTest and updated ShadowRanking to use a reflector interface to improve flexibility in managing smart
[ java ] do n ' t add segment file if it do n ' t start with the prefix .
update the retrieval of the ` carrot2ResourcesDir ` to use ` initParams ` instead of ` resourceLoader ` to improve flexibility in resource directory configuration
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to address potential
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the
updated return statements in RecommenderMapper and added exception handling in Retriever to improve error handling and provide clearer feedback when key is null
added ClientInfo import and setup method in SurrogateAuthenticationEventListenerTests . java to ensure client - specific information is utilized during tests
set isUserView to false in CardPresenter . java to reset user view state for better user experience
refactor diagram output format check to utilize utility class instead of utility class
added initialization of constructBatchHistogram and syncLogTimePerRequestHistogram in LogDispatcherThreadMetrics . java to improve code readability and maintainability
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for the SQLite connector
added a sleep statement to the StreamResetTest class to ensure proper synchronization during test execution
removed conditional check for " new " web type in permissionsManager initialization to simplify permission management by always initializing permissionsManager
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a depth value of 0.5 f
replaced manual array copying with a constant for MIN _ SIZE in BinaryDecoder . java to improve code readability and maintainability by using a
[ hotfix ] [ javadoc ] fix typo in executiongraph javadoc
removed the ` removeNotification ` method from ` NotificationActivity ` and removed the ` onBottomLayoutClicked ` method from ` NotificationRenderer ` to
updated exception handling logic in DefaultExceptionConverter and updated test cases in ExceptionsTest and EndpointTest to improve clarity of exception messages and ensure accurate
fix nullpointerexception in glowcontainer . getsnapshotinventory ( ) ( # 1193 )
replaced MethodHandle usage with reflection for setting a setter in ProxyMaker . java to improve compatibility with reflection and enhance code clarity
updated the way bitand values are retrieved in MathTest . java to use intValue ( ) instead of direct integer creation to improve type safety and
replaced ` StringUtils . join ` with ` String . join ` for metrics and datasets in ` BaseEmailContentFormatter . java ` to simplify
added functionality to manage and display a simple panel in the LayoutPanel to enhance the user interface by providing a visual representation of the layout
added a null check for the location parameter in the server dead server check to ensure proper handling of cases where the location may be null
updated BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for missing key parameters in the BasicChecker class to ensure that missing key parameters throw a CertPathValidatorException to improve error handling
refactor the handling of ignored media types in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability by encapsulating
added taskNum variable and improved debug logging in LlapBaseInputFormat . java to enhance clarity and maintainability of logging by using
updated @ SpringBootTest annotation to include properties for bean definition overriding to resolve potential bean definition conflicts during testing
added null check before closing indexReader in DeleteDuplicates . java to avoid potential NullPointerException when indexReader is not initialized
refactor BTCMarketsStreamingAdapters , BTCMarketsStreamingMarketDataService , BTCMarketsManualExample , and B
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to verify rendering behavior for specific code blocks to
added a new file CompatibilityTest . java to validate internal DTD loading and property verification to ensure that internal DTDs are correctly validated
added new utility classes for push and security functionalities in the Nextcloud client to enhance the application ' s capability to handle push - related operations
fix tablerebalancer . getnextsinglesegmentassignment ( ) and tablerebalancer . getnextsinglesegmentassignment ( ) to use instancestate
update version number from 2.6 . 1 to 2.7 . 0 in ExoPlayerLibraryInfo . java to reflect the latest release
log4j2 - 1349 fix test failure on window
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 549 . a
set default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
updated anomaly classifier and detection methods to use anomaly function specifications instead of sacling to improve clarity and consistency in the anomaly
added error handling for broadcast idle command execution in LauncherInstrumentation . java to improve robustness by logging failure to wait for broadcast idle
added unit tests for font and link tags in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure correct retrieval of
move statscomponent . java from src _ work / minecraft / src _ base / common to src _ base / common
added permission handling for phone call requests in Launcher . java to ensure proper user experience by requesting necessary permissions when a phone is requested
updated the return value from 32 to 36 and modified the initialStatus method to accept a FlightData parameter to enhance simulation functionality and improve localization
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , and GeoEncodingUtils classes for improved readability and performance to enhance code
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to provide a way to check if the Docker
added a new constant VPX in CodecTypes . java to support VPX format in the application
added coordinator address option to the distribution build classes to enable remote connections to the coordinator thrift server
added a static method ` match ` to ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality
added a condition to check if the entry ' s value is positive before adding it to the labelValues collection to ensure that only valid entries are
added null check for result and improved information formatting in App . java to enhance code robustness and provide clearer information when the result is
removed the @ Test annotation from TestPerfBenchMarkDriver . java to simplify test execution by eliminating unnecessary test annotations
added functionality to set the materialization time for creation metadata in ObjectStore and created a test for it to ensure that the materialization time is
added error handling for missing native dependency in VoskSTTService to improve robustness by logging warnings when native dependencies are missing
remove the ' isonebird ' property from the ' sampler ' element and update the response code for ' browse ' and ' clear '
updated breakpoint weight logic in GlyphView . java to improve clarity and correctness of break weight evaluation
refactor sync reading logic in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of read
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address issue related to SOLR - 13028
refactor steps and processors to use a LinkedList for storing unwound data to improve readability and maintainability of the code
replaced the ` flavorsForFormats ` parameter with ` setToSortedDataFlavorArray ` in ` ClipboardTransferable `
added an infoport argument to the TestThriftServerCmdLine class to enable the server to use an available port for testing purposes
added a check for end - of - file in RegExpScanner to ensure that scanning does not proceed if the end - of - file is reached
replace Boolean . getBoolean ( ENABLE _ METRIC _ PROPERTY _ NAME _ PREFIX + name ) with a set of enabled metrics and timers to
fix nullpointerexception in jabber chat room jabber implementation .
improve error message for missing or inaccessible file
refactor refresh token creation into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error reporting for path transformations
[ hotfix ] [ yarn ] remove dead code in yarnapplicationmanagerrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a placeholder implementation for
added SSL URI to the BTCChinaExchange ' s BTCChinaMarketDataService initialization to ensure that the BTCCh
make cpdtask use the project ' s base dir if available
added new classes ` OauthController ` and ` Oauth2PluginTest ` to handle HTTP authorization and authorization in the Shenyu framework to
refactor SemgrexPattern class to improve code readability to enhance maintainability and facilitate future updates
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed duplicate implementations in ` EntryStream ` and ` Entry
improve error message in restcodec and add exception handling in exceptiontoproducerresponseconverter
added a comment to the shouldComeFromThisClassLoader logic in RobolectricTestRunner and RobolectricClassLoader to clar
added a condition to check if the audio encoding is not present in the transmittableAudioEncodings map to ensure that the condition does not proceed
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator ` and added a new test for ` CreateTable
added tests for station 3Gml31 and station 3Gml32 in NormalizedMultiValuesTest . java to ensure correct handling and validation
added a volatile boolean field ` wasInvoked ` and refactored HTTP and HTTPS handling in ` NetworkTestUtils ` and ` UaaHttpRequest
added a check for configuration before calling expandRegexMapping in ColumnarDataSource . java and modified return types in RowProcessor . java to ensure that
updated ` CustomSeekProvider ` to use a constant for seek length and refactored related methods to improve code readability and maintainability by
added new classes for handling XLCD commands in the GrblCommunicator and XLCDController classes to facilitate
[ drools - 3540 ] use kmodule . xsd resource in kieschemamodulemarshaller to load xsd from a different
added checks for non - empty ` blockMessage ` and ` transactionMessage ` in ` EventQuery ` , ` EventQuery003 ` , and
replaced multiple thread state awaiting methods with a constant WAIT _ FOR _ TEST _ THREADS _ TIMEOUT to improve code readability and
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added unit tests in ` DelegatingMethodTest ` to
updated constant values from 20000 to 10000 in EnergyCost . java to accommodate larger resource allocation values
added exception handling for configuration saving and reloading in the command method to improve error handling and ensure configuration is properly managed during command execution
deleted the SpringTransactionHooks . java file and replaced it with AbstractSpringTransactionHooks . java to streamline the codebase by eliminating
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` to test uninitialized string value retrieval to ensure that the uninitialized string value is
added handling for provided dependencies in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to include a query for dependency resolution to enhance dependency management
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard
added a static boolean variable ` sSavedBugreport ` to control the saving of bug reports to improve performance by avoiding unnecessary system anomaly
added a constant for " cinepack " format in FormatConfiguration . java and updated format handling in LibMediaInfoParser . java to
added hand movement animation offset configuration and a poke method to the Player class to enhance the user experience by providing a smoother and more
replaced ` blobs . data . describe ( ) ` with ` blobs . digest . toString ( ) ` in ` GrpcCasBlob
deleted the HSQLDBServerFilesFilter class and updated file listing logic in TestUtility . java to streamline the code by eliminating
walletappkit : do n ' t restore seed / key if restorefromseed or restorefromkey be null
update latestVersion assignment from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and add a trace
added a method to check if a type already exists in the method invocation to optimize performance by avoiding redundant type checks
replaced hardcoded value of 6 * 3 with a constant NUM _ VALUES in AmbientCubemap . java to improve maintainability
profilerruntime : show profiler mode reset message if current mode be not configure properly
added handling for zero values in multiple GenericUDF classes to ensure correct conversion of zero values to byte , short , and long based on the
replaced temporary file creation with temporary folder creation in BoundedOverheadBlockStoreTest and DerbyBlockStoreTest to improve test reliability
added itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) method to itemstack .
fix mc - 167447 : use line _ width instead of alpha
simonstewart : set the default browser startup page to 0 in firefox
added conditions to check for HTTP CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of HTTP connection status codes
updated task type from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose
replaced ` shutdown ( ) ` with ` closeIdleConnections ( 1L , TimeUnit . MICROSECONDS ) ` in ` HTTPHC
added a check for aggregate function suffixes before creating new metrics in AmbariMetaInfo . java to ensure only valid aggregate function identifiers are processed
added a method to set fullscreen parameters in TaskOverlayFactory and updated corner radius retrieval in TaskView to enhance fullscreen functionality and ensure consistent
added a new file ` Solution . java ` that counts the number of frequencies from a given input to provide a solution for counting the number of
[ java ] initialize socketchannel ch1 to null in clusteredagentmanagerimpl . java to avoid potential null pointer exception .
refactor MutisignOperationerGodicTest . java for improved clarity to enhance maintainability and readability of the test
added exception handling for NoSuchElementException in StaxEventItemReader and created a test for restarting at the end of a file to improve robustness
simplified import statements and added null check for qualifiedResourceName in TestAttributeSet to improve code readability and prevent potential NullPointerExceptions
updated imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json
updated OS detection logic to handle AIX systems and added a mapping for Linux - s390x - 64 to ensure compatibility with AIX
bug 10363 : use getroutercontrolip ( ) instead of getprivateipaddress ( ) for access detail command
added a method ` invokeWithoutBlockingWithResultSync ` to the ` RunnableWithResultSync ` class to facilitate asynchronous execution without
int - 1343 remove unused test class from xmpp - ignore
replaced integer casting with Math . round for rectangle dimensions in PortraitPagedViewHandler . java to improve precision and clarity in
reformatted code for better readability in TestClusterDumper . java to improve code maintainability and adhere to coding standards
[ hotfix ] [ table - common ] fix classsize alignment for row cache
camel - 16400 : camel - spring - boot should add the type converter to the context if it can not be find .
added conditional task handling in SparkCrossProductCheck . java to enable dispatching of multiple tasks in a conditional context
refactor action handling in Launcher and LauncherModel classes to improve clarity and maintainability of the code
updated conditional logic in LoginInfoEndpoint and added tests for passcode prompt presence in LoginInfoEndpointTests to ensure that the passcode prompt is
hbase - 25829 add a todescriptivestring ( ) method to the assignmentmanager class to provide a string representation of the region
updated HuobiAccountInfo and HuobiAccountServiceRaw to use ' msg ' and ' result ' instead of ' message ' and
added support for adding " PERIOD " as a reserved word in MariaDBDatabase to ensure proper SQL generation for period columns in Maria
[ beam - 8470 ] [ beam - 8470 ] [ beam - 8470 ] [ beam - 8470 ] [ beam -
added new descriptions for Android 7.1 Launcher shortcuts in VersionChangeLogs . java to clarify the purpose of the Launcher shortcuts
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and TestUtil . java to
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] ensure that conductor agent invoker be always available to avoid potential npe .
updated type validation logic in ` ppp Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to improve
refactor menu item visibility and item visibility methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
updated BTCETransHistoryResult to include additional BTC _ deposit and BTC _ withdrawal types to ensure accurate representation of
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of elements
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should no longer be used
added a condition to check if the end time is greater than the sequence time in LastQueryExecutor and created a new test for handling unseq
updated request string formatting in HttpResponse . java to ensure consistent line endings for improved readability
added a static block to set the SLF4J simple logger to " ERROR " to ensure proper logging behavior for apache HTTP wire logging
added a safe area setting for the title bar in Sheet . java to enhance user experience by preventing interaction with the title bar
modified the iteration over TimeSeriesChunkMetaDataList to use an index - based access instead of an index - based access to improve performance and readability
added a test for parsing and deparsing SQL statements in AlterTest . java to ensure the SQL statement can be correctly parsed and deparsed
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - redissonexecutorservice . executecallable ( ) method return a completablefuture instead of a java . util . concurrentmodificationexception .
replaced hardcoded constant PART _ SUFFIX with a constant constant SUIT _ FILE in FileSystemSplit . java to improve code maintainability and
[ hotfix ] [ table - common ] fix checkstyle violation in orc
added null check for nameArg in CompareFunctionsProcessor . java to ensure proper assignment of valueArg when nameArg is not null
add warn log for insufficient space to reduce scope for requested file
removed the ` toString ( ) ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector `
added a check to return early if the state handler is invalidated in AbsSwipeUpHandler and null check in TaskAnimationManager to prevent further
added methods to retrieve and set lock timestamps in AppPreferences and PreferenceManager classes to improve preference management by centralizing preferences management
updated the way the artist is set in MediaInfoParser by introducing a method to retrieve the artist based on the stream kind to improve code
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 1882 : fix npe in splittext when there be no header file
added handling for Windows - specific key store types in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increase default check timeout from 400 to 1 _ 000 in resttemplatesendertest and webclientsendertests
added a condition to check if the result code is not FILE _ NOT _ FOUND before proceeding with further logic to ensure proper handling of
added animation functionality to the Slider class to enhance user experience by allowing customizable animations during animations
updated assertions in LineSeparatorProcessorTest from ` eol ` to ` lineSeparator ` to ensure consistency in line separator handling
updated maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a test for negation of a conditional in UnwrapParenthesesTest . java and modified the condition in UnwrapParentheses . java
camel - 20297 camel - hazelcast : fix npe in hazelcastqueueconsumertest . testpolltimeout
added a new ` TextFeedbackTest ` class and modified ` AllTests ` and ` TestRunner ` classes to implement unit tests for feedback functionality
replaced ` Math . round ` with ` Float . compare ` for score comparison in ` DefaultSolrHighlighter . java ` to improve precision
updated DENSITY cases in AddAndScaleMultiImage and ResourceEditorApp to use try - with - resources for FileOutputStream to ensure proper resource
added a method to retrieve the array class element offset in HotSpotReplacementsUtil and updated the loadHub method in ArrayCopySnippets to
log4j2 - 1349 add performance check to defaultlogpublisher to avoid npe
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable and disable remote SCM support in the application
added additional states to the OnOffType condition in MieleApplianceHandler . java to enhance the state determination logic to accommod
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` and updated related calls to
[ hotfix ] fix checkstyle violation in localzookeeper
added unit tests for ` ProjectGenerationEvent . Finished ` and ` ProjectGenerationEvent . Started ` serialization to ensure proper JSON representation and consistency of event data during serialization
ggb - 1352 fix selection bug for polygon function with no degree
refactor JavaCompiler to improve code structure to enhance maintainability and readability of the code
hbase - 25850 integrationtesttimeboundedrequestswithregionreplicas should throw an exception if no time remain to execute random read
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " to the ldflags list in NdkCxxPlatform .
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added a new test for variable filtering in SpringCloudCircuitBreakerTestConfig to
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
added a check for NS _ SPREADSHEETML in ReadOnlySharedStringsTable . java to ensure proper handling of shared string URIs
added a new method ` getAccountNet ` to ` HttpMethed ` for fetching account network information to enable users to obtain account network information
added a check for ` availTextWidth ` in ` SwingUtilities2 . java ` and modified the look and feel setting in ` Test
replaced the instantiation of ` flatteningIterator ` with a direct push of ` FileIterator ` to ` flatteningIterator ` to simplify the
removed HTML tags from title and body in TweetLinkUtils to ensure consistent HTML formatting by removing HTML tags
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update java microgenerator to 2.16
added a test method to reload and delete existing question in InstructorFeedbackEditQuestionsUiTest . java to ensure that all existing questions are
updated row counting logic in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct handling of first and last
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] change the variable name from ` pendingSessions ` to ` pendingClusterSessions ` for clarity to improve code readability and maintain
added hashCode and equality checks for keyInspector and valueInspector in AbstractParquetMapInspector to ensure proper comparison and hashing behavior for instances of Abstract
added a condition to flush the Quic session when the remote connection is closed to ensure proper resource management and prevent potential memory leaks
added AutoCloseable interface to SplitReader in SplitReader . java to ensure proper resource management and automatic closure of resources
removed the deepCopy method from GsonBuilder to streamline the code by eliminating unnecessary duplication
replace null return statements with a constant NOT _ FOUND in LLScanner and LLSourceBuilder classes to improve code readability and maintainability by
refactor file handling in RestClientRequestImpl to use CompletableFuture < ? > instead of an array to improve performance and simplify asynchronous file operations
updated the dispatchStatusString method call in GrblController . java to ensure proper handling of controller status updates
updated class loader handling in MockFactory and added a new SearchingClassLoader class to improve class loading flexibility and facilitate easier
simonstewart : add test for refresh flag bug
added support for LEFT _ SEMI _ JOIN in the condition check in ConstantPropagateProcFactory . java to enhance query optimization by allowing LEFT
simplified response and request termination logic in HttpReceiver and HttpSender classes to improve code readability and maintainability by eliminating unnecessary
use arrayoopdesclengthoffset instead of arraylengthoffset .
http : / / issues . apache . org / activemq / browse / amq - 2696 - add default policy to the
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a check for running before stopping the app context in CrawlController . java to ensure that the app context is only stopped when it is
changed the return type of the ` drawItem ` method from ` void ` to ` GlyphLayout ` in the ` drawItem ` method to
refactor SpringmvcClient to utilize MetricsPublisher for metrics retrieval instead of JsonUtils to streamline metric retrieval and improve error handling
removed the ` SAFE _ ACCOUNT _ AGE _ DATE ` constant and simplified the lambda expression in ` AccountAgeWitnessService . java
refactor switch statements in ` StructureHeader ` and ` StructureReader ` to improve code readability and maintainability to enhance code clarity and
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and related tests to enhance the flexibility and functionality of the web flow
add dextransformer and deadassignmenteliminator . v ( ) . transform ( jbody ) to dexbody .
refactored enrichedruledto to use property instead of rule . getconfiguration ( ) . get ( ) . get ( )
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated argument handling in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - planner - blink ] remove sqldialect from executioncontext
updated ` AndroidPackageableCollection ` and ` AndroidBinaryGraphEnhancer ` to use a ` Supplier < ImmutableSet < String > > `
add a unit test for astpackagedeclaration . getpackagename ( ) to ensure that the package name be correctly generate
added a method to set the minimum cross compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum unseq file level for
[ hotfix ] [ runtime ] move activeresourcemanager to active package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI creation logic in ZipResource . java and added unit tests in ZipResourceTest . java to improve URI handling and ensure proper parsing of
updated the spacing and functionality of the ProgressListener and rightButton listeners in ExpandableUploadListAdapter . java to improve code readability and ensure
refactor configuration retrieval logic in RobolectricTestRunner and add a test for merging parent class and method configurations to improve clarity and
added a filter to the list of blocks and items in ModelLoader . java to ensure only valid blocks and items are processed to improve data integrity
removed the ` abstract ` modifier from methods in ` AbstractDataChangedListener ` and added logging functionality in ` WebsocketDataChangedListener ` to
updated JSONPojoConvertor to handle enum types correctly and added color handling in tests to improve type conversion logic and enhance test coverage for color
added a deprecation warning for the ` -- view ` option in IjProjectCommandHelper . java to inform users that the ` -- view `
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated its usage in ` GWTRequestWrapper
added orientation correction functionality to GyroControl to enhance sensor event processing based on device orientation changes
increased BIOME _ LIST _ SIZE from 256 to BiomeGenBase . getBiomeGenArray ( ) . length to
updated method calls from ` println ( ) ` to ` print ( ) ` in ` GetInterfaceTest . java ` to ensure consistency in method
replaced the assignment of the Environment variable in FileCompilerConfig . java to ensure the correct environment is used for compilation
added a new interface ByteToLongCollector with Supplier , BinaryOperator , and ToLongFunction functionalities to provide a standardized way to collect objects
added preload functionality to MMapDirectoryFactory to enable or disable preloading of map files based on user - defined parameters
added custom metrics for various enabled components in BukkitPlatform to enhance monitoring capabilities for various components in the application
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the codebase
added aspect ratio and default card image initialization in CardPresenter . java to ensure proper visual representation of card images in the application
do n ' t increment authmethodcount if it ' s implicit
updated cloning logic to check for non - empty arrays before creating clone instances to avoid unnecessary cloning when empty arrays are provided
added tests for system . nanotime ( ) and system . nanotimejit ( ) in TimeChangeTest . java to ensure
added trimming of lines in MultiPartFilter . java and printed request parameter in MultipartFilterTest . java to ensure proper trimming of input
fix entitylivingbase . getexperiencedrop ( ) event not fire . close # 3649
updated error handling in OpenUVBridgeHandler and OpenUVReportHandler to include specific error messages to improve clarity of error messages and enhance user
[ flink - 13535 ] [ table - planner - blink ] remove unsupportedoperatorsvisitor from sqlplanner
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated related methods to enhance dependency management and improve code clarity
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a boolean flag to determine if the entire rocket is scaled to ensure that the selection option is only set to the first rocket component
replaced ` Arrays . toString ( ) ` with ` bytes ` in assertions in ` UpdateableResultTest . java ` to simplify the assertion
added logic to retrieve time boundary information for offline and realtime tables to ensure proper handling of time boundaries for offline and realtime tables
do n ' t add socket to the poller if it ' s already paused
updated regex pattern and modified album title retrieval logic in EightmusesRipper . java to improve accuracy of album title processing and enhance
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to improve code
added a condition to check if the device is a phone and not a landscape device in QuickstepLauncher . java to ensure proper handling of
replaced calls to ` getValue ( query , PROPERTY ) ` with ` unwrap ( QueryImpl ) ` in ` PartTreeJpaQueryIntegration
refactor file reading logic to use a dedicated method ` readMatchingLines ` to improve code readability and maintainability by encapsulating functionality
removed dynamic check for the streamMethod in JpaQueryExecution . java to simplify the code by eliminating unnecessary dynamic method checks
added null check for entity in PhysicsProcess . java to ensure robustness by preventing potential NullPointerExceptions
add a test case for the entryprocessor that clear the map when value attribute be indexed
add support for join the jitsi - conference - room in the jitsi - meet protocol . add the jitsi -
updated color calculation in Utils . java and modified HTML message in UtilsTest . java to improve color representation and enhance HTML message formatting
fix menu disabling when text input be null ( # 8727 )
updated the scratch path format in Aapt2Link . java from " link - tree " to " % s / link - tree " and
replaced instances of ` new Capture < > ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java `
g3d - 335 : do n ' t clear selected geos , only update selection when need
added exception handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error management and provide clearer context
added isCanceled ( ) method to BehaviorCall , Calls , and ExecutorCall classes , and removed the canceled flag from ExecutorCallAdapterFactory to
removed the ` isAnnotationPresent ` method from multiple classes and added a default implementation in ` AnnotatedElement ` and ` AnnotatedTypeFactory ` to streamline
added a default implementation of removeAllWidgets in UILayout . java to provide a placeholder for future implementation of the removeAllWidgets method
[ hotfix ] [ yarn ] fix log message for yarn test
opensslcipher . getoutputsizeforfinal ( inputlen ) should return the maximum of the input length .
added logic to set useDirectProfile and useVlc based on Fire TV Stick settings to ensure high - resolution content is transcoded
[ beam - 8470 ] [ beam - 8470 ] make datasetsource . show ( ) static
replaced the import of ` Date ` with a wildcard import and modified listener handling in ` GpsLoggingService . java ` to improve code
modified the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` and modified the handling of wide
added support for BaseItemDragListener in FolderIcon to enhance drag - and - drop functionality for better user experience
added a method ` createEmptyArtifact ` to ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` SignavioConnector `
removed unnecessary whitespace in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed unnecessary check for August year in the video fragment ' s m3u8 link check to simplify the condition for better readability
camel - 14284 : camel - ftp - do n ' t allow root directory in sftp path
camel - 15836 - camel - weather : fix unit test that fail on slow ci server
corrected the spelling of " groupSortStr " to " sortWithinGroupStr " in QueryComponent . java to improve code readability
fix double plant not work correctly for small plant
replaced setFocusable with setRequestFocusEnabled in TranscodingTab . java to enable request focus for the tree component
kvm : fix npe in vmserviceimpl . start ( ) .
refactor DB2TestSystem and related imports in DockerDatabaseWrapper and TableIsEmptyGenerator to improve code clarity and ensure proper handling of
added a method to set the UnitsGroup in DoubleModel and updated seek value handling in GeneralOptimizationDialog to enhance flexibility in unit handling
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC in the
added functionality to set the number of samples in the fpp configuration based on the number of samples to ensure the fpp configuration uses the correct
updated test assertions in StepWithSimpleTaskJobParserTests to use " step " instead of " job " to ensure consistency in naming conventions
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability of variables and improve code clarity
make sure ggbabs ( ) do n ' t have a space before it
added a new method ` addServiceOutput ( ) ` to ` DDLSemanticAnalyzer ` and modified the logic for adding service outputs to
[ drools - 5261 ] fix drlxparseutil . toclassorinterfacetype ( class < ? > declclass )
added a comment to hide the " org . eclipse . jdt . " class in WebAppContext . java to improve code clarity by
modified the return statement from ` super . useAuthCache ( ) ` to ` false ` in ` NegotiateAuthentication . java ` to
replaced ` namespace ` assignment with ` Utils . capitalize ( segments [ 0 ] ) ` in ` PageTitle . java ` to ensure consistent
( chore ) camel - direct : throw directconsumernotavailableexception instead of directexchangeexception
added a null check for the ZooKeeper object before resetting it to null to avoid potential NullPointerException when zooKeeper is not initialized
corrected the spelling of " Initializing mods Phase 2 " in the progress bar message to ensure consistency and accuracy in the progress bar display
added a method to run on the UI helper thread using a dedicated method to improve code readability and maintainability by centralizing the UI helper
added a call to ` updateLastRemoteStreamId ( streamId ) ` in ` HTTP2Session . java ` to update the last remote stream
set text antialiasing to text _ antIALIAS _ on for the header and toolbar to improve text rendering quality in the user interface
[ java ] do n ' t use term window size for subscription in publication .
refactor : remove static import in ctannotationimpl . java ( # 3649 )
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a call to ` getRGBPixels ( new Rectangle ( x , y , 1
added a new method ` newPrintStream ` to create ` PrintStream ` with specified encoding based on ` sun . stdout . encoding ` property
updated vibrate from 1 to 25 in TouchableMovementMethod . java to improve the responsiveness of the touchable movement
fix checkstyle issue in the flybush code
removed unnecessary whitespace in WebSocketClient constructor and added a default constructor to improve code readability and maintain consistency
simonstewart : make sure i18n test do n ' t fail on mac o x
improve error reporting in sharedgraphbuilderphase . reportunresolvedelement
restore the system state after the test to ensure that the system state is restored after the test execution
added a new ` LowercaseComparator ` class and modified the ` putAll ` method in ` CoNLLUFeatures ` to use it to
refactor JavadocTool to use a unique set for source files and streamline parsing logic to improve code readability and maintainability by reducing
danielwagnerhall : ignore test that fail on firefox
added validation for the length of keys in HighestKvno . java to ensure that the number of keys matches the expected number of keys
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging warnings for unsupported attribute retrieval
[ beam - 8470 ] use writeresult instead of pdone in beamio and writewindowedtobigquery
corrected the method name from " copySnippetRequestEntity " to " createTemplateRequestEntity " in CreateTemplateRequestEntity . java and added
added a new file TestMultiANewArray . java to test multi - dimensional array initialization to ensure that the JVM correctly handles multi - dimensional
cloudstack - 4892 : add config option secondary . storage . vm to disable secondary storage ( # 4893 )
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve readability and maintainability of the code
added theme setting in PreviewTabView to ensure the preview tab displays the selected theme based on user preferences
added null check before closing the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` to validate idle timeout behavior in HTTP connections to
add dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures property to make it easy to
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to
updated variable type from ` JpaPagingItemReader < Foo > ` to ` JpaPagingItemReader < Foo > ` and
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for non - critical messages
updated ColorExtractionService to utilize a new method for updating hotseat palette to improve code clarity and ensure compatibility with newer Android versions
added default transformer methods for DataTableEntryByTypeTransformer and TableCellByTypeTransformer in TypeRegistry to enable customization of table entry and cell transformations in
removed assertion for newAvailableShared < = initShared in AtomicRemainder . java to simplify code by eliminating unnecessary assertion
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update to 2.16 . 0
removed the projectGenerated field and its associated method from ProjectGenerator and WorkspaceAndProjectGenerator to streamline project generation logic by eliminating unnecessary
[ hotfix ] [ runtime ] fix checkstyle violation in driverutils
added functionality to retrieve and display contact information in the application to enhance user experience by allowing users to view contact information
guac - 1391 : rename permission to objectpermission so that it would well reflect our new permission type .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ drools - 3540 ] fix typo in traitfactory # setmode
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve
replaced manual closing of per - doc consumers with a call to IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to ensure the menu is displayed when the button is clicked
updated error messages for null and non - null references in Subject and OptionalSubject classes to improve clarity and accuracy of error messages related to null
ggb - 1351 fix line height for help button
test : move protobufferutilitiestest to core . util package
fix jabref split pane divider position and side pane width ( # 8630 )
fixed bug in open file on mac , and improved generation from aux by include crossreffed entry .
[ geos - 8470 ] fix geoserverfeaturesource to use metadatamap instead of map
renamed the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of
do n ' t cache avatar for meta contact if the avatar change .
updated import statements in ShellCommand . java and ShellFactoryImpl . java to ensure compatibility with the latest SSHD library structure
added a test for cleaning up the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is
added a suppresswarnings annotation to the ` inject ` method in ` ComponentContext . java ` to suppress unchecked warnings during bean injection
added regex patterns for handling empty and invalid comment lines in ACLFileParser . java to improve parsing robustness by ensuring that comment lines start with
updated the ` isReadable ` method to include ` FileSystemPlugin ` and ` userName ` parameters in ` MapRDBFormatMatcher ` and ` Map
added ancestorDimensionValues to StarTreeNodeImpl and updated logging messages in StarTreeImpl and StarTreeNodeImpl to improve clarity and
added user unlock check before dumping plugins in TouchInteractionService and modified view closing logic in BaseQuickstepLauncher to ensure plugins are only dumped
updated condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure correct handling of position strings in the Photo
refactor PKIXValidator to improve certificate validation logic to enhance clarity and maintainability of certificate validation logic
[ hotfix ] [ hadoop - tests ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
cs - 15836 : do n ' t skip project network if acl type be set to true
updated the retrieval method in RuntimeTypeAdapterFactoryFunctionalTest to use get instead of remove to ensure correct retrieval of the type field from the
added methods to store and store undo information for properties in App . java to improve the management of undo information during property changes
added a privileged action to retrieve the system property in XRCompositeManager to ensure that the system property is retrieved in a privileged context
replace assertEquals with awaitility in StreamCloseTest . java to improve test reliability and readability
updated the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessorPerField ` , and ` TermVectorsConsumer `
added deprecation handling in ConfigurationMetadataGenerator and modified property processing in AbstractJpaProperties to ensure only non - deprecated properties are processed
replaced capacity and mask variables with length - based operations in BiInt2ObjectMap and Int2ObjectHashMap classes to improve performance by redu
updated the number of mv files thread from 25 to 15 in HiveConf . java and corrected variable names in Hive . java to improve performance and
do n ' t swallow exception in parallelniosender . send ( ) . close ( ) .
added a null check for the context in SchemeAndroidIDE . java to ensure that a new instance of SchemeAndroidIDE is returned when the context
[ gr - 16905 ] fix native - image - build - server . sh to remove custom class loader
changed return type of modifyGrantedAuthorities method from void to List in SwitchUserAuthorityChanger and modified authority array initialization in SwitchUserProcessing
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and create new subclasses for RawJaxrsIntegrationTest and JaxrsSpringIntegrationTest to improve code organization by separating different integration test implementations
do n ' t throw sqlfeaturenotfoundexception when query timeout be not support
added data providers for GeneralTestsData and SupplementaryCharactersTest in XslSubstringTest . java to enhance test coverage for substring methods in
replace ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and
added support for sequence handling in MariaDBDatabase and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB and improve
updated string concatenation syntax in multiple Java files to improve code readability and maintain consistency
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test classes to utilize the ` TableDataManagerProvider ` for
added support for both " jsse . enableMFLExtension " and " jsse . enableMFLNExtension " in SSLExtension to
refactor ObjectHashSet and ObjectHashSetInteger to simplify instantiation and improve clarity to enhance code readability and maintainability by removing unnecessary generic type
updated character limit in Compose and TweetFragment from 22 to 23 in MainActivity and TweetFragment to adjust character limit for shortened
add a default value for datapoint ttl in cassandra datastore ( # 1193 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept a boolean parameter for enabling prompt functionality to enhance user experience by allowing
added a method ` getTerrainAtCell ` to retrieve terrain from a cell coordinate to facilitate the retrieval of terrain
added default value printing functionality in Pretty . java and created a new class T6665791 . java with a Java compiler task to enhance
added error logging when the quest keys - . / resources / QuestEncryptionKeys . json file is not found to improve debugging by providing
updated the return statement to include a check for non - push protocols to ensure compatibility with non - push protocols in the request handling logic
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method from BlockUtil . java to simplify the code by eliminating unnecessary signing functionality
modified the return statement in FileSystemView . java and added security checks in Win32ShellFolder2 . java and Win32ShellFolderManager2
refactor row height retrieval and modify row copying logic in ` ColumnText . java ` and ` PdfPRow . java ` to improve accuracy
added a SparseArray for undo notes and modified note removal logic in ListFragment to improve the management of undo notes based on user interactions
[ # 7270 ] uploadbackupdata : fix issue with question and response id be not update correctly
removed null check for data in getTransferData method to streamline code by eliminating unnecessary exception throwing
# 1343 - remove unused pstmtdelegate interface ( # 1344 )
replaced custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify code and leverage built - in functionality for better performance and maintainability
refactor MethodHandle initialization in NashornBeansLinker . java to use a static lookup method to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
replaced CountDownLatch with goAwayLatch in IdleTimeoutTest . java to improve clarity by using a more descriptive variable name
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve cl
replaced ThreadLocal with null for currentBook in multiple classes to simplify book management by eliminating unnecessary object creation
added a method to check if a class supports the provided object and updated the vote method to accept it to ensure that only valid object types are
removed unused imports from DataLoader . java to clean up the code and improve readability
added row count tracking functionality to AbstractUpdateCommandStep and updated postUpdateLog method to accept an integer to track the number of rows affected
mow - 1343 fix margin positioning in suggestion
initialize foregroundFPS and backgroundFPS with a default value of 60 to ensure default values are set for better application performance
added ObjectReleaseTracker imports and assertions in HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of resources in the transaction
updated WebSocket frame handling in DefaultHttpServer to use ChannelFutureListener instead of DefaultWebSocketFrame to improve code clarity and ensure proper closure of
replaced instances of ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and added new test cases for ` OnStateMachineError `
refactor list background handling in SettingsActivity to use a dedicated method to improve code readability and maintainability by encapsulating background setting logic
replaced Apache Commons Lang with OpenHAB ' s StringUtils in RMEThingHandler . java to ensure compatibility with the OpenHAB
added a new method ` accumulate ` to the ` WeightedAvgAccum ` class to facilitate the accumulation of sums and
updated formatting in Put . java for consistency to improve code readability and maintainability
replaced VALID _ CACHE _ SET with REGEXP _ CACHE and updated regex compilation logic to use a cache to improve performance by reducing redundant
added a reset method to GameThread to provide a way to reset the game thread state
added a realm check in the login method in DigestAuthenticator to ensure that only the realm matches the login service ' s name to enhance security by
refactor parameter handling in SavedRequestAwareWrapper to improve parameter merging logic to enhance parameter management and ensure correct handling of null values
updated InfoStatus messages in BasicConfigurator , LoggerContext , and ContextInitializer to improve clarity and consistency in logging output
replaced the ` countDown ` method with a ` wakeup ` method in ` CommitLog ` and ` HAService ` classes to stream
added a check to exclude Android O and above in PhotoViewerActivity and UserAutoCompleteHelper to ensure compatibility with devices running Android O and above
updated schema info level from minimum to basic in SchemaCrawlerTest . java to align with the latest schema crawling requirements
replace zipOut with bufferedOutputStream in SaveTask . java to improve performance by reducing the number of write operations
replaced ` random . nextBytes ( data ) ` with ` randomFixedByteLengthUnicodeString ( random , data . length ) ` and
fix mc - 103516 : entity . isvalid ( ) return false instead of entity . isvalid ( )
added Tomcat container adapters to the list in ProbeConfig . java to support additional container adapters for improved functionality
[ drools - 3540 ] fix protobufinputmarshaller to use deep hashcode instead of hashcode
reformatted case statements for consistency in NowSearchTerm and SearchTermBuilder to improve code readability and maintainability
pdfbox - 4892 : remove public access modifier from pdfcloneutility class , a suggest by valerybokov
added support for HTTP methods and headers in RemoteEndpointServiceAccessStrategy to enhance flexibility in handling endpoint URLs and headers
added a new method ` newResponseBuilder ` to ` ResponseBuilder ` to encapsulate response creation logic to improve code readability and maintainability
added a notification to the manager in AsyncBackgroundTaskManagerTest to ensure that the command starts in the test environment
updated the ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` to improve robustness by avoiding potential
replaced instances of ` TokenFilterFactory ` with ` CharFilterFactory ` in ` LukeRequestHandler . java ` to streamline character
replaced null argument checks with ParamChecks for plot , generator , and hotspot in AbstractCategoryItemRenderer . java to improve code readability
added verbosity handling in ExecutionContext to control output based on verbosity settings to improve flexibility in logging output based on verbosity settings
added schema handling for Oracle database types in DbSqlSession . java to ensure consistent schema formatting for Oracle databases
fix asyncloggerallthreadcontextimplementatortest failure in ci
added a new file TestShrinkToOneRegion . java that includes a main method for garbage collection to facilitate testing of the shrink -
replaced string splitting with Splitter for better readability to improve code clarity and maintainability
lucene - 9692 : fix bug in analyzinginfixsuggester when use binary context
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and functionality of the attachment encoding process
[ zeppelin - 4892 ] remove output of provenance hash from stripprovenance
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed ` FORMATTER ` from ` final static ` to ` static final ` across multiple test classes to enforce immutability of the FORMATTER
replaced Apache Commons Logging with Java ' s BigDecimal and RoundingMode in UDFRound . java to improve precision and performance of rounding operations
refactor configuration handling in GraalJSScriptEngineFactory to use ConfigParser for injection and use included libraries to improve code readability and maintain
changed Test1 and Test2 classes from package - private to public to allow access to these classes from other packages
updated player event notifications to use " deny . no _ enter " instead of " permission . no _ permission _ event " for better clarity
fix bug in conditionandor and conditioninconstantset . getadditional ( ) method that do n ' t work
replaced instances of ` NumericDocValuesField ` with ` NumericDocValuesField ` in ` BaseNormsFormatTestCase . java `
added dynamic body and circle transformations to Box2DCharacterControllerTest . java and modified friction reset logic in World2DCharacterController
added tests for FLIGHT _ RECORDER _ OPTIONS and modified memory size options in TestMemoryOptions . java to ensure proper handling of memory
removed redundant assertions in ObjectAlignment . java and Options . java to simplify code and improve readability by eliminating redundancy
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTest ` , and
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
make acceptablethrowawayitems a list to avoid concurrentmodificationexception
replaced direct calls to ` invokeExact ( x ) ` with casts for boolean , byte , char , and int to ensure type safety
removed unnecessary whitespace in MessageHandler . java to improve code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the locale in the EvaluationContext class to enhance functionality for locale management in the application
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in DrawerActivity . java to prevent fall - through behavior in a switch - case structure
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug log message format to improve code clarity and maintainability by
ww - 3506 add xwork . loggerfactory system property to allow customization of loggerfactory
rename test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to clarify the purpose of the test related to P2
updated bean names in AvailabilityHealthContributorAutoConfiguration and AvailabilityProbesAutoConfiguration to include " livenessStateHealthIndicator " and " read
added a ConcurrentMap for storing PStore instances in a ConcurrentMap to improve thread safety for concurrent access to local PStores
changed the visibility of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
replaced ` Provider ` with ` ServiceProvider ` and updated related methods to improve clarity and consistency in service provider management
do n ' t throw unsupportedmessageexception . raise ( message . write ) in javaobjectmessageresolution . execute ( )
added checks for toolchain creation in AbstractCell and ToolchainProvider classes to ensure correct behavior when toolchains are present and improve toolchain management
make polyglotengineimpl . removecontext ( context ) thread safe
replaced occurrences of ` indexOf ` with ` contains ` for string comparisons in ` AbstractCheckDescriptor . java ` to improve code readability and
updated the ` setLinkerFlags ` method to use ` setExportedLinkerFlags ` and ` setExportedPlatformLinkerFlags `
updated the method for updating recents rotation in AbsSwipeUpHandler and RecentsView classes to improve code clarity and maintainability
updated type parameters in multiple listener classes to use wildcard generics to improve type safety and eliminate unchecked warnings
updated the object array to include the hash of the new block header to ensure the correct hash is used for the new block ' s header
defaultmessagestore : use getstorepathcommitlog ( ) instead of getstorepathcommitlog ( )
removed unnecessary try - with - resources statement in MicrometerMetricManager . java to improve resource management and avoid potential memory leaks
[ issue # 7270 ] add get message count to compaction log ( # 7271 )
added multiple @ Deprecated annotations to AbstractJPASubQuery , JPACommonQuery , and JPAQueryBase classes to indicate that these classes
added a method to check for the existence of the " keyguard _ status _ view " system UI object in AbstractLauncherUiTest . java
removed static modifier from logger and sessionIds in SessionRegistryImpl . java to enforce immutability and improve thread safety
added a check to return false if the cookie jar is empty in InMemoryCookieStore and implemented a test for removeAll on an empty store to
[ bonsai ] fix nullpointerexception in bonsaistateupdater and bonsaivalue
changed the parameter type of the ` getText ` method from ` String ` to ` CharSequence ` across multiple repository classes to allow for more flexible
added @ NotYetImplemented annotation to AlertsTest . java to mark the test as not yet implemented to address a known issue in the
added a finally block to ensure the destination connection is returned even if an IOException occurs during the connection process
rename ` WindowsCommandLineEscape ` and ` WindowsCreateProcessEscape ` to ` WindowsCreateProcessEscape ` and update related references to improve clarity
added synchronization to the heartbeatExecutorService in DbTxnManager . java to ensure thread safety when accessing shared resources
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and added tracing and cancellation handling in ` Caching
added updateFirstLineShowing ( ) method to TextArea . java to fix drag - selecting text out of the TextArea ' s bounds
added paths for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper configuration file paths are used for mapreduce operations
refactor graphics configuration retrieval logic in Component . java to improve clarity and efficiency to enhance readability and maintainability of graphics configuration handling
tika - 2276 -- fix oom test in legacy mode
camel - 14284 : camel - core - optimize pipeline . doprocess to reduce code duplication
refactor PrintTagList to accept a model file argument and improve tag handling to enhance usability by allowing users to specify a model file and
replace ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and add a new test for
http : / / issues . apache . org / activemq / browse / amq - 2696 - fix test failure
[ java ] fix flaky startfromtruncatedrecordinglogtest by wait for cluster to be ready .
updated the calculation of the arc variable in LineBorder . java and modified the outer assignment in Test4252164 . java to improve accuracy
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that processing occurs only when galleryImages is not null or
updated deployment ID handling in StandardChangeLogHistoryService and modified column definition in CreateDatabaseChangeLogTableGenerator to ensure the DEPLOYMENT _
pdfbox - 2576 : update example to use interactive form instead of fdf
removed the ` moreColumnOk ` parameter from several methods in ` AlterTableAddConstraint . java ` to simplify method signatures and improve code
camel - 6443 : fixed quickfix engine to only be reuse when they be properly start , to avoid use broken engine .
added displayZoomControls and modified mixedContentMode methods in RoboWebSettings . java to enhance zoom control management capabilities in the application
add corporea block , brick , and slab to the registry , so they can be use .
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future updates
added a method ` EnableDisableMenuItems ( ) ` to disable menu items based on user settings to enhance user control over menu item visibility based
updated the message from " headline server search " to " favorite headline " and " favorite filter list " in the ExtendedListFragment to
use @ setting instead of @ serviceregistry . setting in entitytests .
added auto - resizing and auto - creation options to the MotorMountConfigurationPanel and updated the constructor of MotorMountTable
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and document properties in POIXMLProperties . java and updated TestPOIXMLProperties .
updated the call to ` super . doStop ( ) ` in ` HandlerWrapper . java ` to ensure proper handling of the stop operation
[ java ] check if cncfile be empty before try to create it .
replaced instances of ` NonMarkedFoo ` with ` FooCommand ` in ` UnsatisfiedTypeBounds . java ` to improve cl
added support for handling JMod files in ClassFileSourceImpl . java to enable proper loading and management of JMod files in the project
updated TreeBackedElement and TreeBackedPackageElement to remove the ` PostEnterCanonicalizer ` parameter and added null checks to improve code
replaced direct assignment of tokenRequest with a new PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGran
updated array index reference from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct retrieval of array elements based on
added sync method to ZooKeeperAssign and ZooKeeperWatcher classes to ensure data consistency during ZooKeeper operations
added checks for EGL exceptions in GlUtil . java to ensure that the current context is valid before proceeding with operations
[ drools - 3540 ] fix npe in ruleflowgroup . deactivate ( ) when ruleflowgroup be not active
added a return statement in HystrixDashboardConfiguration . java to ensure the method exits early under specific conditions
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added a failure assertion in IoTDBPipeIT . java to improve error
make clientqueuedisruptiontest cleanup after each test
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated GeoPointField and GeoPointInPolygonQuery classes to enhance functionality and improve code clarity to enhance code maintainability and facilit
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to facilitate testing of
remove null check for itemstack . item ( ) in favor of itemstack . isempty ( ) .
renamed variable ` stream _ path ` to ` stream _ timeseries ` and updated related references in ` TSParser . java ` to improve cl
added a check to return 0 if the value is less than EPSILON in TubeCalc . java to ensure that negative values are not processed
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage . create ( ) ` and ` _ storage . list ( )
removed the call to blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource management and avoid potential memory leaks
dbtriggerbasedhistoryddl : add ` ` create with history view ' ' and ` ` recreate history view ' ' method for postgres
updated the parameter in the checkEngine method from 2 to 3 in CarrotClusteringEngineTest . java to align the test with the new
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored since it needs to be rewritten
added a new class ` ParserStateObjectInputStream ` and modified ` ParserCacheCommand ` to use it to whitelist deserialization of ` RemoteDaemonic
updated object quoting strategy handling in ChangeSet and DatabaseChangeLog classes to ensure proper assignment of object quoting strategy based on the change log configuration
replaced ` MetainfoParser . parse ` with ` MetainfoParser . fromXmlStream ` in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused or redundant code
added a method to quote path lists in AntCompiler . java to ensure proper handling of path separators in endorsed arguments
added scrim animation functionality in the Launcher and AllAppsBackgroundDrawable classes to enhance user experience by providing visual feedback during screen transitions
updated the threshold from 2 ^ 24 to 1 ^ 24 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest .
chore ( regen ) : update license year for generated file ( # 54 )
added handling for long and UNC path prefixes in WindowsPathParser and added corresponding tests in PathOps to ensure correct path parsing and validation for
replaced ` InetSocketAddress ` with ` MulticastSocket ` initialization in ` Promiscuous . java ` to simplify socket initialization by elimin
removed unnecessary writer . close ( ) calls in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
clone nBits before returning it to ensure that the original nBits array is not modified externally
changed the access modifier of the deriveCollectorName method from private to protected in ProfilerCollector and added custom test cases in TestProfilerCollector to enhance
refactor type hint checks in MappingMongoConverter for better clarity to improve code readability and maintainability by encapsulating type hint checks
added performance measurement for creating proxy factories in ProxyMaker . java to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as the cause to improve error reporting by providing more context about the connection issues
replaced the method ` reinflateWidgetsIfNecessary ( ) ` with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new file ` DeleteInsideFileDialogTest . java ` that implements a file dialog test to demonstrate the functionality of deleting
simonstewart : do n ' t call display . update ( ) in lwjglabstractdisplay if there be a render
[ # 7270 ] instructorstudentlistpageuitest : add test case for show a profile picture
added support for " onlyrun " and " method " system properties in TestIgnorance . java to enhance test flexibility by allowing
removed the ' pointer ' parameter from the fling method signature in ScrollPane . java to simplify the method signature and improve usability
added null check for pageable in QueryDslJpaRepository to ensure proper handling of null pageable scenarios
[ hotfix ] [ runtime ] add computememorysize ( ) method to memorymanager
increased timeout duration from 2000000 to 20000 in JMSPublisherConsumerTest and updated method parameters in PublishJMST
refactor SnowballAnalyzer to improve code structure to enhance maintainability and readability of the code
refactor StreamingAggTemplate to initialize previousIndex and streamline batch handling to improve clarity and maintainability of the streaming aggregation logic
throw graalerror if the plugin need to null check the receiver .
added a default stream method to StreamSupplierComponent that uses a default parallelism strategy to enhance performance by reducing the number of parallel processing operations
updated logging messages and modified file movement logic in MediaMonitor . java to improve clarity of log messages and enhance error handling for file movement failures
updated InjectorProxy and StandardInjectorProxy to use newInstance method instead of setAccessable to enhance flexibility in creating instances with different constructor parameters
[ hotfix ] [ streaming ] remove out . close ( ) from flinkstreamingcreatefunction
added test cases for parsing and deparsing SQL statements in various test classes to ensure proper handling of unsupported SQL statements and improve test coverage
replace null return with an empty list return in AppleTest . java to ensure that the method returns an empty list instead of null
mondrian : remove deliberate breakage of test suite .
added a ` websocketReconnect ` parameter to the ` startWebsocket ( ) ` method and updated connection state handling in ` WebSocketConnection . java `
replaced setAttribute calls with removeAttribute calls for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _
hbase - 25836 testregionreplicastorereplicationendpoint . testregionreplicastoreoperationfailsonfails
added initialization and configuration for PMS in FormatRecognitionTest . java to ensure proper initialization of PMS before running tests
fix ova data disk template creation ( # 4891 )
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 instead of SpringRunner and SpringJUnit4
added @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated table and column names from " metricVal " to " metricVal1 " and updated corresponding assertions in AppendOnlySchemaIT . java to
added a check to ensure the document count of deleted documents matches the segment document count to prevent corruption index errors
introduced a new method ` getLoggerName ( ) ` and ` logTrace ( string message ) ` in ` SipLogger . java `
[ fix ] filamentfactory should use 0.9 for staves w / no starting barline
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` and
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
replaced static fields with instance variables for field references in HotSpotObjectConstantImpl . java to improve code readability and maintainability by
replaced calls to ` result . add ( token , o ) ` with ` result . addFrequency ( token , o ) ` in multiple
added watermark to the filesystem matching process to ensure that the file matching process uses the correct watermark for better accuracy
hhh - 14850 - make ctedefinition final in sqmctestatement . registercopy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enhance functionality by utilizing ResultSetMetaData for data retrieval
updated the library command to use the root directory instead of the output directory to ensure the library uses the correct root directory for better output management
updated slider range from - 180 to - Math . PI in RailButtonConfig . java to improve visual clarity by using a more appropriate
use timers . run ( ) instead of exec . submit ( ) for save .
added support for expression language in KerberosProperties to enhance flexibility in Kerberos configuration
removed conditional checks for remoteMountPointComponent before setting translate and rotateDegrees in ThirdPersonRemoteClientSystem . java to streamline the code
added a ScrimView parameter to the setupViews method and updated related animations to enhance the UI responsiveness and visual feedback during the
[ hotfix ] [ state - backends ] enable periodic materialization by default
added a ` value ` field and getter / setter methods to ` ProtocolParameter ` and corresponding methods in ` ProtocolParameter ` , ` List `
add a new test case for chunking with head
add bumped check to checkrouteranswer to make it easy to check if the router be up to date
added Content - Type header to SwitchToPostInterceptor and updated SearchRequestUnitTest to include it to ensure proper handling of form data in request
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet to improve error handling by logging a warning instead of throwing an exception
added initialization of AndroidNet in AndroidDaydream . java to ensure proper handling of null network connections
updated formatting of parameters in LLRealtimeSegmentDataManager . java to improve code readability and maintain consistency
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 25829 remove hbase - prefix - tree from tablemapreduceutil ( addendum )
added a flag to track back navigation status in DesignerActivity and modified the root variable in XMLLayoutInflater to ensure proper handling of back
refactor PushbackInputStream to improve code structure to enhance maintainability and readability of the code
lower phase : do n ' t create a lower tool if it do n ' t have one .
updated the error message from download _ folder _ failed _ content to sync _ folder _ failed _ content to improve clarity by using a more
added support for \ r \ n in Makefiles . java and updated parser references in MakefilesTest . java to ensure proper handling of line
replaced direct calls to ` getDeletedDocs ( reader ) ` with ` MultiFields . getDeletedDocs ( reader ) ` to improve performance
replaced the superclass method setTransformRefresh ( ) with setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper refresh behavior for
do n ' t insert safepoints when the method be uninterruptible .
added framebuffer size callback and modified window size handling in LwjglWindow . java to improve handling of window size changes and ensure proper
replaced ` centerTaskParallaxToRight ` and ` otherAdjacentTaskParallaxToRight ` with ` centerTaskPar
replaced instances of NodeLiteralNode with NullLiteralNode and updated related methods to improve clarity and functionality to handle null values more effectively
added methods to set the total size and length of files in CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure accurate file size
updated AndroidNdkScriptGenerator to correctly locate the AndroidManifest . xml and modified AntScriptGenerator to include Mpg123Test to ensure proper
camel - 14868 - camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource / / destinationkey
added a role check for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to ensure proper authorization handling
refactor ZookeeperClientServerRegisterRepository to improve data handling and event type management to enhance code clarity and ensure proper handling of node registration
refactor methods in ReturnsDeepStubs for improved clarity and consistency to enhance code readability and maintainability by using more descriptive
updated contract . getCallValue ( ) to return a new Byte ( " 0 " ) if the call value is empty to ensure that the
fix formatting of log message in bibentry ( # 3649 )
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and updated the algorithm name from " PBEWithHmac
tmi - tiff : do n ' t throw ioexception if the offset be too large .
added validation to ensure job parameters are in the form name = value to improve error reporting for invalid job parameters in CommandLineJobRunner
updated message content assertions in SmtpTests and MailTests to use single quotes to ensure consistency in message formatting across test cases
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
replaced synchronized locking with AtomicLongFieldUpdater for lastSequenceId in LongSequenceGenerator . java to improve thread safety and performance in concurrent scenarios
added a new file ` Test . java ` containing a static method ` sum ` and a main method ` main ` to provide a utility for
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and modified access modifiers in WifiUsabilityStatsEntryBuilder to enhance compatibility
added a new Java file ` Solution . java ` that implements a solution that checks the order of elements based on input values to provide a solution
patch by jbellis ; review by brandonwilliams for cassandra - 1348
refactor taskbar recreation logic to use a boolean variable for better readability to improve code clarity and maintainability by reducing red
refactor synchronization logic in SyncFutureCache . java to improve performance and maintainability of the code
updated DEFAULT _ DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and modified
pmd : fix uselessstringvalueof rule to correctly handle string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the correct
add a default max type shard size to hollowproducer .
added support for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBack
refactor CompilationTask to improve code structure to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis and modified parameter handling in DDLTask to ensure location is not shown in test mode to improve clarity in
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to execute a clear database change log statement
added version handling to RestClient and CallPath classes to ensure proper URL construction based on the call version and improve path comparison logic
updated exception messages in PhoenixDriver . java and added a closed check in PhoenixDriver . java to improve error handling
simonstewart : fix typo in javadoc
added a test method to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT ` to ensure
[ gr - 36422 ] fix deoptimization during dev mode .
added a check to return the original string if the length is less than 2 and implemented unit tests for removal of leading and ending quotes to ensure
updated JpaQueryCreator to use a dynamic type variable for handling NOT _ CONTAINING to improve code readability and maintainability by redu
do n ' t push branch id if it ' s too long
added dispatch ( new P25Message ( mMessage . copy ( ) , duid , mAliasList ) ) to P25MessageF
added a null check for the handler in WebSocketImpl . java and created a test for clearing client handlers in WebsocketTest . java to ensure
fix checkstyle issue in discoveryit
refactor widget padding initialization in AppWidgetResizeFrame and Launcher classes to use a new padding resource to improve consistency and maintainability of widget
added ` hideAllApps ` method to ` TaskbarUIController ` and updated ` closeOverlay ` method in ` BaseActivityInterface ` to
removed synchronization from the launch method in CrawlJob . java to improve performance by avoiding unnecessary sleep
updated the calculation of ` p ` in ` JavaSEPort . java ` to account for the ` canvas . x ` and ` canvas .
refactor notification handling in UploadService to use startForeground instead of notify to improve code clarity and ensure foreground notifications are handled consistently
fixed bug 138278 - excessivepubliccounttest do n ' t work correctly with static final field .
hbase - 25815 testthrifthbaseservicehandler fail on slow ci server
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for non - critical information
added exception handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve error logging
added a new class ` BittrexTickersResponse ` and updated ` BittrexMarketDataServiceRaw ` to use it to
hhh - 14529 : entityentry . getenumconstants ( ) should use state . getenumconstants ( ) instead of type .
updated ` registerSession ` and ` unregisterSession ` methods to accept an instance of ` Object ` instead of ` Class < ? > ` to
updated character array to include UTF - 8 characters to ensure proper handling of Unicode characters in file operations
added support for setting and getting a stylesheet in ResourceService and updated related methods in ResourceHandler to improve flexibility in managing stylesheet content and ensure
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before tests are executed
replace ` ObjectParameterStrategy ` with ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to ensure proper method invocation for pointer
updated the condition to exclude CockroachDatabase from the sequence generation logic to ensure compatibility with CockroachDB ' s sequence generation
removed the condition for checking the name of " java . lang . String " in ObjectStreamClass . java to simplify the condition for better read
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and introduce a new class SymbolNotFoundError to improve error handling by providing a
added logic to handle both pseudo - fields and non - pseudo - fields in BinaryResponseWriter to improve flexibility in document retrieval based on field
added handling for PING and PONG cases in WebSocketImplBase and created a test for WebSocket pausePing functionality to improve WebSocket functionality and ensure
updated NON _ IDENT _ ESCAPES string to include a hyphen to ensure proper matching of identifiers with hyphens
updated DnsResolverProvider to use wildcard imports and modified DNS cache configuration in HostnameResolutionTest . java to improve code readability and flexibility in
added @ ConditionalOnClass ( MessagingTracing . class ) annotation to TraceMessagingAutoConfiguration . java to ensure that TraceMessagingAutoConfiguration is only
hhh - 14850 - fix syntax error in sqlquery for db2
updated import statements in multiple Java files to include specific event and widget classes to streamline dependencies and improve code clarity
added a condition to set status to VERIFY _ CLOSE _ TAG when a slash is encountered in XMLLightweightParser to ensure proper handling of
set the visibility of TouchCharInput to GONE in TouchCharInput . java to improve user interface responsiveness
added a null check for the current user before comparing the ID to avoid potential NullPointerExceptions when the current user is not available
refactor index assignment logic in JSObjectLinker to handle negative index values to improve robustness by preventing potential errors when setting slots
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to remove the ' final ' modifier and set the ' suffix '
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and removed its associated method from RocketFigure3d . java to streamline the
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` ExtraFieldPropagationTest ` and ` AWSPropagation `
added a PendingIntent to FileDownloader and FileUploader classes to ensure the notification content intent is set correctly for file operations
refactor nextOrd method to introduce a set ( ) method to improve code readability and maintainability by encapsulating the logic in a
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary try - catch block for loading " sun . awt . shell . Win32ShellFolderManager2 " in WToolkit . java
added null and empty checks for principal , password , and keytab in setAdministratorCredentials method to ensure that only valid credentials are accepted to
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and updated widthUsed calculation for tablet and two panels to
fix ( gl ) : do n ' t render sketch window color
refactor hashing logic in Hashing . java to improve performance and maintainability of the hashing algorithm
updated the accept method to accept a folder name instead of a file string to improve clarity and accuracy of file validation logic
added string resources for user information in the ` addToListIfNeeded ` method to improve localization support for user information display
added a null check for the type variable before assigning it to avoid potential null pointer exceptions
increased ACTIVITY _ START _ DELAY from 500ms to 800ms in Launcher . java to allow more time for
added a constant for the WEBAPP _ HOME in SolrJettyTestBase and updated path configuration in JettyWebappTest to improve maintain
simplified diameter assignment and cleared the selected motor set in ThrustCurveMotorSelectionPanel . java to improve code clarity and
added import for BufferUtil and cleared the buffer in ByteBufferPool . java to ensure buffer is properly cleared before use
add test case for create notification rule via rest api
updated configuration keys from " authorization " to " authentication " in the LDAP group configuration to align configuration with the current authentication standards
added delete operations for exchange and queue in DurableOnTransient . java to ensure proper cleanup of pending data during exchange deletion
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
added error handling for connection failures in ServerInfoService to improve robustness by providing specific error messages when the connection fails
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added exception handling for illegal state exceptions in the SulongLibrary class to improve robustness by preventing application crashes due to illegal state
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
refactor ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` io . grpc . NameResolver . Helper ` to
added a check for non - empty annotations before converting them to JCAnnotation and adjusted position handling in JavacParser . java to ensure annotations
added " com . sun . naming . internal . " to CheckPackageAccess . java to enhance package access checks for internal classes
changed the default value of the strict flag from false to true in StaxEventItemReader . java to enable strict validation by default
lucene - 9443 : fix over - nexting in offline sorter ( # 1188 )
modified the ActionResetingPool class implementation to enhance functionality and improve code maintainability
added a check to determine if the light state is in XY mode before converting it toHSB type to ensure that the conversion only occurs when
refactor CellLayout to use targetCell instead of child views for folder creation radius calculations to improve code clarity and maintainability by centralizing
replaced direct calls to showLoadingDialog ( ) with a call to callerActivity . showLoadingDialog ( ) in FileOperationsHelper . java
added a null check for the uigestureFile before loading logs to avoid potential NullPointerExceptions when the uigestureFile is not available
updated ` FieldNamingPolicyTest . java ` to use ` Locale . getDefault ( ) ` for name comparisons to ensure consistent behavior across different locales
added listener configuration to the result object to enhance the functionality of the XmlSuite by allowing dynamic listener management
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated related method handles to support loading a new global context
add json string serialization / deserialization for startree ( # 2133 )
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer , OAuth2LoginConfigurer , and Saml2LogoutConfigurer classes to
replaced occurrences of " \ " with ' \ ' in multiple file handle classes to ensure consistency in character encoding across different operating systems
[ drools - 2270 ] fix null pointer exception when in ( ) be call with null value
added import for FieldCache and modified purgeFieldCache method in TestDistributedSearch . java to improve performance by ensuring proper field cache management during
add unit test for boundary message event on subprocess and inside subprocess multi instance
refactor resolveInterfaceOrVirtualCall to accept a target parameter and introduce resolveStaticCall in PointerAnalysisImpl and JimpleProgramManager to
http : / / issues . apache . org / activemq / browse / amq - 2696 - add messagegrouphashbucket
added constants for NETSCAPE _ SLOT _ ID , PRIVATE _ KEY _ SLOT _ ID , and FIPS _ S
added alignment support and modified widget addition in Layout . java and GdxRenderer . java to enhance layout flexibility and improve mouse button functionality
[ hotfix ] [ test ] temporarily disable unalignedcheckpointitcase
added imports and a condition to check class types in JDK13Services . java to ensure that only valid classes are processed to avoid runtime errors
added a check to prevent duplicate entries in the keywordToReference map to ensure that the keyword is only added if it does not already exist
camel - 16400 : fixed the issue of multicluster . size ( ) be call on a non - collection pair .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve readability by eliminating
escape special character in telegraf name ( # 647 )
add the udp port to the multicast address so that the client can broadcast on the same multicast address .
rename operatormulticast to operationmulticast for consistency
updated send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for message delivery
added a try - finally block around the node start logic in VertxTestBase . java to ensure proper resource management and prevent potential memory leak
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper resource cleanup when the session factory is destroyed
simonstewart : do n ' t open the home page if there ' s no local storage
[ pytorch ] add test case for tuple and map of tensor
added a task stack listener to clear the INVISIBLE _ BY _ STATE _ HANDLER in RecentsView and removed it from BaseActivity
pdfbox - 4892 : improve performance of date pattern matching , a suggest by valerybokov
camel - 14284 : camel - cxf should initialize the property map to avoid npe . thanks to benjamin
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added debug logging and adjusted play time calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure play time is correctly set based on
added a conditional check for BailoutOnException in C1XCompilation . java and modified exception handling in C1XOptions . java
replaced hardcoded signup and passwd values with null values in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations in slotprofile
replaced ` onlyFormat ` with ` format ` and added a method to retrieve it to improve clarity and encapsulation of date formatting logic
added support for NoDataContainer in GeoTiffReader and corresponding test in GeoTiffReaderTest to enhance image processing capabilities by utilizing
sulong : fix npe in llvmwritenode when there be no source section
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in JdbcExecutionContextDao and DefaultExecutionContext
added a CountDownLatch to track the start of connection states in TestPathChildrenCache to ensure proper synchronization of the connection state during tests
added null checks for array retrieval methods in ArrayTypeHandler . java to improve robustness by preventing potential NullPointerExceptions
replaced the use of ` RegexpTunnel ` with reflection to retrieve the prefix using reflection to improve flexibility and maintainability of the code by
updated the application pick method to use Application . class instead of null to ensure correct application type is used for configuration selection
[ drools - 3640 ] fix npe on mutable global ( # 3641 )
added validation checks for asset names , URL , and description in AssetIssueActuator and TransactionUtil classes to ensure asset names and descriptions are valid
make copy paste work for textfield , not just textfield
updated action label and property descriptions in LGWebOSActions and LGWebOSUpnpDiscoveryParticipant classes to improve clarity of action
replaced direct node configuration settings with addAll method for seed , active , and trust nodes to enhance flexibility by allowing multiple nodes to be added
throw runtimeexception if some thread ( s ) fail
log4j2 - 1349 add a modularization option to the timebasedtriggeringpolicy to allow for more flexible time
added methods to performItemClick and findItemContainingText in ShadowAdapterView and ShadowListView to enhance item click functionality and improve error handling
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a null check for loopScope and implemented afterMethodScope method in GraphDecoder and PEGraphDecoder to ensure proper handling of method scopes and
refactor session handling in HttpSessionDestroyedEvent and add unit tests for security contexts to improve code clarity and ensure correct retrieval of security contexts from
added a test for changing the service name in ZipkinSpanReporterTest to ensure that the service name is correctly set when a span is received
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory , and modified spooling behavior in Javac
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the lock timeout from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more time for the lock to
updated methods in ConfluentSchemaRegistryDeserializerProvider to include cache capacity and configurations to enhance flexibility in schema registry deserialization by allowing configurable cache
rename ` remind ` to ` checkatstartup ` for clarity to improve code readability and maintainability by using a more descriptive
added method definitions for key , strongKeys , weakKeys , strongValues , softValues , and maximumSize in NodeGenerator . java to enhance
hhh - 14850 - do n ' t throw a transientpropertyvalueexception in cascadingactions when a proxy be transient
added methods for retrieving and setting prototype and proto check in ScriptObject . java to enhance object extensibility checks and ensure proper handling of prototype
updated default read mode from " heap " to " mmap " in CommonConstants . java and modified segment loading logic in ImmutableSegmentLoader . java
added import for ByteArrayTemplate and implemented a conditional check for byte class in ArrayTemplateBuilder . java to enable handling of byte data types in the
added Hipchat support in SamlServiceProviderProperties and created a new configuration class for Hipchat to enhance SAML service provider integration with H
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval logic to improve performance and ensure uniqueness of command
updated warning log message to include the context of the uncovered HTTP methods to improve clarity of logged warnings for better debugging
do n ' t call checkloggedin ( ) if the user be already log in
http : / / issues . apache . org / activemq / browse / amq - 2370 - ensure that the transaction manager
server : fix checkstyle violation in vmwareresource
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated constants and constructors in UAX29URLEmailTokenizer . java to clean up the code and encourage the use of updated
removed unnecessary Map < Object , Object > from ScriptObject and updated assertions in ContextTest to improve code clarity and maintainability by using more
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future updates
[ ds - 3952 ] fix locale conversion for eperson and workflow
replaced ` @ PostConstruct ` with ` @ InitializingBean ` in ` JaversTransactionalDecorator ` and added ` afterPropertiesSet
removed unnecessary null check for pgTypeName in TypeInfoCache . java to simplify code by directly associating pgTypeName with the type
added multiple server settings for handlers in ScopedHandlerTest . java to improve test reliability by ensuring consistent server configurations
improve calltimeoutexception handling during wait - notify phase
replaced ` isBlank ` with ` isEmpty ` for password validation in ` RestLoginProcessingFilter . java ` to ensure proper handling of empty passwords
updated permission validation logic to check for " * " instead of just " " to ensure proper permission validation for specific permission nodes
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the type of ` postLogin ` from byte array to String in multiple classes to allow for more flexibility in handling post - login data
added imports for GenericComponentModifier , FinSet , and FlightConfiguration , and modified simulation handling in GeneralOptimizationDialog . java to improve
camel - 16400 : camel - main - allow to turn on / off context reloading . thanks to benjamin
( chore ) camel - test - infra - log4j - upgrade to log4j 1.3 . 0
refactor PrologSizeSanityCheck . java for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for non - closeable content type in RequestBody . java and created a corresponding test in RequestBodyTest . java to ensure
added a condition to check if embedded settings are enabled in EmbeddedNeo4jServer . java and modified beans initialization in DefaultBeanContext .
update movementdebugcommand to use default value for player movement
updated the random method to use a half - length total weight instead of a fixed index to improve the efficiency of the random number generation process
replaced StringBuilder with direct string concatenation for cache string in GsonParser . java and updated timestamp validation in MetricsResourceTest . java to simplify code
updated parameter descriptions for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clarify the
fix checktransactionsynchstatus ( ) call in sessionimpl and sharesession contract
refactor PipeTaskCoordinator to use PipeTaskCoordinatorLock instead of ReentrantLock and introduce a new class PipeTaskCoordinatorLock to
modify dependency jar creation to conditionally use preinstrumented jars based on system property to enhance flexibility in dependency resolution based on configuration
changed the condition from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` in ` ExecDriver . java ` to
added validation for unsupported attributes on dynamic fields in IndexSchema to ensure proper error handling for unsupported attributes in dynamic fields
do n ' t send random read repair if we do n ' t have to
replace ImmutableSortedSet with Iterables for adding system include roots in PrebuiltCxxLibrary . java and add a test for includesDirs in Pre
updated AdaptableX509CertSelector to set default values for startDate , endDate , isSKIDSensitive , and isSNSensitive , and modified
log4j2 - 1343 use abstractappender . parseint instead of string . isempty ( )
mark the GuiScreenEvent class as deprecated to indicate that the class is outdated and should no longer be used in future development
added methods to manage categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 637 - change spi for servercache , add servercachetype to allow different cache construction for query bean and bean cache
updated RocketComponent to iterate through all child components and set their properties to null to ensure proper handling of overridden properties for child components
[ netbeans - 4892 ] fix compilation cancellationexception in javacompilerservice
refactor Task class to use a Supplier for better flexibility and clarity to improve code readability and maintainability by reducing boiler
refactor WanReplicationServiceImpl to use a volatile StripedExecutor for thread safety to improve thread safety and prevent multiple instances of Wan
added null checks for partitions and tables in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness by
refactor lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java for improved readability to enhance code clarity
added unit tests for file deletion functionality in FilesTest . java to ensure proper functionality and error handling of file deletion operations
removed exception handling for socket closure in ServerSocketAdaptor and SocketAdaptor classes to simplify resource management by directly closing sockets
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replace ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` to improve clarity
added null check for ` cn ` in ` ItemInfo ` and updated ` mInsets ` in ` Workspace ` to ensure proper handling of
changed the visibility of the String constant from public to private to restrict access to the constant for better encapsulation
updated the Java D URL and type for CSV and JSON files in SimplePostTool . java to ensure compatibility with the latest Solr updates
ggb - 1342 fix for ggb - 1343 and ggb - 1344
refactor client container startup and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve resource management and
updated condition in Linux . java to check for null or presence of the type to ensure proper handling of cases where the type is not present
destroy webapplicationcontext after each test to avoid memory leak
added search functionality to the RemoteBrowseHandler to enhance user experience by allowing dynamic search results based on user input
removed the visibility of the neutral button in SetupEncryptionDialogFragment to improve user interface by hiding the button when not needed
refactor countitems ( ) method to use itemdao . countitems ( ) instead of itemdao . countnotarchived
updated SQL syntax in CREATE VIEW statements and column descriptions to use single quotes to ensure compatibility with SQL standards and improve readability
added logging and exception handling functionality in CheckTokenEndpoint . java to improve error handling and logging for OAuth2 exceptions
updated multiple Java classes to implement a new method lookupSeriesPaint to enhance functionality by allowing customization of series painting methods
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use a parameterized entity for updating identity zones to improve test reliability and cl
updated tooltip delay from 20000ms to 10000ms and added tooltip text for variable substitution in SQLConsole to improve user experience by allowing more time
added support for JUnit 5 and updated warning messages in ActionProviderImpl . java to ensure compatibility with Surefire 2.22 . 0
replaced HumanReadableException with RuntimeException in WorkerShellStep . java to improve error handling by providing a more specific exception type
[ hotfix ] [ stream ] introduce experimental annotation for datastream api
refactor StreamCepstrumSource class to improve code readability to enhance maintainability and facilitate future updates
added a bounds check for index in the List class to prevent index out - of - bounds errors when accessing items
updated assertion in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct type checking for parentheses in expressions
added confirmation = true and requiredType = RequiredType . NONE to the DebugPaste command to ensure users receive confirmation before executing the command
replaced ` get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing informative exceptions when
simonstewart : do n ' t focus mathquill ggb when focus mathquill ggb
replaced instances of ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and updated related imports and method calls to improve code clarity and
updated the environment variable handling in Jooby . java to retrieve the logback resource based on the application ' s environment configuration to ensure
replaced ` RetryListenerSupport ` with ` RetryListener ` across multiple classes to simplify the implementation and improve code maintainability
fix bug in elastic meter registry ( # 498 )
modified the Contribution class to enforce immutability of email and author fields to ensure that the email and author fields cannot be reassigned after
refactor string appending logic in JUnitFormatter to use a while loop to improve performance and readability of the code
modified the way elements are initialized in Subject . java to ensure compatibility with non - LinkedList instances to avoid potential ClassCastException when accessing elements
updated exception messages to include the resource URL in StaxEventItemReader to improve clarity of error messages for better debugging
simplify testmultirendertarget so that it do n ' t interfere with other test
added null check for currentProfile before retrieving the client in DelegatedAuthenticationClientLogoutAction . java to avoid potential NullPointerException when currentProfile is null
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure namespace declarations are correctly added
added BigInteger constants for parameters in KeyStoreManager . java to facilitate cryptographic operations in the KeyStoreManager class
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
fix bpmndeployer to set the engine version of the process definition
updated property names from " resource . loader " to " resource . loader . class " , " resource . loader . class " , and "
updated thread verification logic in CEntryPointSnippets and VMThreads classes to enhance thread verification logic and improve code clarity
added null check for the map before retrieving values in GenericUDFMapValues . java and created a new TestGenericUDFMapValues .
renamed the variable " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of
added support for oil well generation rate and enable oil spouts in the BCEnergyConfig and OilGenerator classes to enhance energy
added a check for the existence of the " . clean - me " file in ImportContext . java and updated related conditions in JobQueue .
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5398 -
removed unused import statements from CRLDistributionPointRevocationCheckerTests . java to clean up the code and improve readability
updated constant values for EXTID _ ZIP64 , EXTID _ NTFS , EXTID _ UNIX , and EXTT in ZipConstants .
refactor ZipFileSystemProvider to use a separate method for file existence checks to improve code readability and maintainability by encapsulating file creation logic
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ` in ` IfControllerPanel . java ` to
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper method overriding and improve code clarity
added Gson serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable proper serialization and
add deletebook ( ) method to databaseadapter to be able to delete book
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of responseMsgPos in AbstractAjpProcessor . java to correct the position of the response message in the buffer
fix shutdown of admin console plugin on shutdown .
refactor unregisterHandlers method to use instance variables for binaryConsumer , textConsumer , closeHandler , and exceptionHandler to improve code clarity and
added properties retrieval for device ID transformation method , enable ID table , and log file in IoTDBDescriptor . java to enhance configuration flexibility for
updated NUM _ DOCS _ PER _ TYPE and introduced a new DelayingSearchComponent class for improved search functionality to enhance test coverage and
updated the condition for verifying access error in TestSignatureInfo . java to ensure that the error check accurately reflects the presence of the
tx . hashforwitnesssignature ( ) should use witnessscript instead of scriptcode
updated the expression in IndexSchema from " / schema / types / fieldtype " to " / schema / types / fieldType " to support additional
added NullCompleter import and modified value comparison logic in Completers . java and created OptionCompleterTest . java for testing options to
[ hotfix ] [ s3 ] fix checkstyle violation in s3utils
[ iotdb - 3330 ] fix npe in iotconsensusserverimpl ( # 3338 )
pdfbox - 4892 : do n ' t try to upload a zip file if it do n ' t already exist
updated the reply button ' s alpha value in TweetFragment . java to improve visibility and aesthetics of the reply button
added mocking for ` AccessLogContext ` and modified string concatenation in ` AccessLogSupportTest . java ` to improve test clarity and
use tmp / testfiles - deleteme in marycachetest to avoid test failure
remove redundant null check for subscribers in SettingImpl . java to simplify code and improve readability
added a null check for the marshaller in AbstractSamlObjectBuilder and updated exception handling in AbstractSaml10ResponseView to improve error handling by providing
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing
added a check to ensure the asset directory exists in dev mode before serving static assets to prevent errors during development when the asset file does not exist
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend . db . put ( )
changed the default format constant from " value - tag - index " to " value - index " to standardize the label format for better consistency
updated the algorithm and hint settings in MainActivity . java to use request . getHints ( ) instead of putHint to improve code clarity
[ native ] enable native secp256k1 and altbn128 by default
rename DuclsSandboxTest to SandboxTest and update related references accordingly to improve clarity and consistency in test class naming
camel - 1560 : camel - cxf should use exchange . setexception instead of logger . log
added public access modifier to the forwardPropagateTree method in SentimentCostAndGradient . java to allow access to the method from other classes
updated the SQL query to include a time range in the group by statement to ensure accurate counting of records within a specified time range
add warning when $ { project . basedir } expression be use during profile activation
refactor Style class to improve code readability to enhance maintainability and reduce complexity
added zoom functionality to ShareActivity to handle back key events to improve user experience by allowing zoom - out navigation in the ShareActivity
added a check to skip reading deprecated fields when ignoring deprecated fields to improve performance by avoiding unnecessary processing of deprecated fields
added send functionality to the LauncherFragment to enhance user experience by providing visual feedback during floating - compose interactions
[ hotfix ] [ yarn ] fix checkstyle violation in yarn module
added Progressable parameter to createSequenceWriter and related classes to enable progress tracking during file writing operations
[ hotfix ] [ connectors / common ] fix checkstyle violation in sourcecoordinatorprovider
remove a contribution from the ContributionListPanel and update the panel ordering and colors accordingly to ensure the panel reflects the current contribution state and
renamed the class ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated its logger initialization to improve clarity and
added a check to set dPath to the system ' s user . dir if it is empty to ensure dPath defaults to the user '
updated sample rate handling in DefaultAudioSink . java to ensure proper sample rate is used based on the provided format
log4j2 - 1349 remove unnecessary getdata ( ) call from mapfilter
renamed VerificationInOrderWithCallsTest . java to improve clarity to enhance code readability and maintainability
updated the method call from ` z ` to ` x ` in the ` setFromAxis ` method to correct the axis ' s positioning to
corrected the constant name from " colelction . delim " to " collection . delim " to correct a typo in the constant name
[ java ] add test to verify that the listener be connect at the start of the server .
bugfix # 5355 - fix documentation for union and union type
refactor one - handed mode support logic in RecentsAnimationDeviceState . java to improve code readability and maintainability by reducing
added onDetachedFromWindow method to manage running tasks in AppsCustomizePagedView to ensure all pending tasks are canceled when the
added a dictionary resource parameter to MorfologikAnalyzer and updated MorfologikFilter to accept it to enhance flexibility in
replaced count variable with thrown variable and updated exception handling logic to improve clarity and correctness of exception handling logic
updated the initialization message format in GradleBuildService from " debug " to " " to ensure consistency in message formatting across the application
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for handling lock timeout and MVCC anomaly detection to improve clarity
refactor tooltip text application in ComponentTreeRenderer to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in the await statement to allow more time for the zipkin server to become up
[ ripme ] add username and password to deviantart ripper
refactor Google signed package key management to use constants instead of arrays to improve code readability and maintainability by reducing redundancy
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description to the template data in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance user experience
replaced the method ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure the
refactor language retrieval logic in Locale . java and add error handling in LocaleTest . java to ensure correct language code retrieval and improve error handling
refactor Liquibase parser usage to use ChangeLogParser and encapsulate the creation of UpdateVisitor to improve code readability and maintain
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added customizable text for no data display in Chart . java to improve user experience by providing more informative feedback when no data is available
added synchronization to checkHeadWritten ( ) method in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when accessing
refactor chunking logic in NettyResponse . java to use a separate method for ssl handling to improve code readability and maintainability by
updated HTTP / 2 header limits to include " : scheme " and updated related test cases to ensure compliance with HTTP / 2 standards and improve
fixed - localcachemap do n ' t respect storemode = localcachemap . localcachemap . storemode . localcach
camel - 14284 : camel - jpa should use component . getentitymanagerfactory ( ) and component . gettransactionmanager ( )
corrected the spelling of " fallSpeed " to " jumpSpeed " in PhysicsCharacter . java to ensure accurate representation of the
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure that syntax extensions are only applied when reparsedFunction is
updated logging variable names and refactored order book handling in BitstampPusherService . java to improve code readability and maintainability by
added deprecated methods to retrieve old segment URIs in FileUploadDownloadClient . java to prepare for future removal of outdated segment URLs
updated the query to use a filter parameter instead of a direct query to enhance query flexibility by allowing filtering based on specific criteria
added a method ` assertPredicateFails ` in ` LanguageTestSupport ` and implemented it in ` JuelLanguageTest ` to improve test coverage
added a bound check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to
updated the formatting of the " Import - Package " attribute in ManifestReversion . java to improve code readability and maintain consistency in formatting
refactor DataSyncConfiguration class for improved readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to facilitate the initialization of the JavaSnippetRepository
refactor time bucket update logic in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are updated correctly based on the number of
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
( chore ) camel - pg : use try - with - resources for prepared statement
replaced ` com . sun . syndication . feed . synd ` with ` com . rometools . rome . feed
added content - length header handling in TransferCompletionHandler and updated NettyTransferAdapter initialization to ensure accurate tracking of total bytes to transfer based on
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor from EnhancedRuntimeException that is no longer needed to streamline the code by eliminating unnecessary complexity
log4j2 - 1343 fix socketappendertest hang on slow machine
camel - 14284 : remove unused class from endpointbuilder and endpointbuilders
updated exception handling in ` ByteArray . java ` and modified method signatures in ` compare ` and ` compareFallback ` methods to improve error handling and
added input proxy disabling logic and logging for touch events in RecentsAnimationWrapper . java to ensure proper handling of input events during touch
camel - 6770 : disable camel - restlet - restlet - test until camel - 6770 be fix
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameter
move module - info . java from com . hazelcast . tests to com . hazelcast . test . modulepath ( # 11928
added a method to retrieve source directories in JavaLanguageServer . java and updated logging messages in JavaServerConfiguration . java to improve clarity of
updated the menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve
renamed methods from ` nodeIsAncestorOfItself ` to ` nodeIsNotAncestorOfItself ` and updated assertions accordingly to clar
fix y - coordinate calculation in worldeditplayer . getposition ( ) . gety ( ) .
added PathNotExistException handling and improved measurement checking logic in InsertNode . java to enhance error handling for non - existent data types during partial
removed extraneous single quotes from the end of a code block to correct syntax and prevent potential compilation errors
[ hotfix ] [ datastream ] remove unused mailboxexecutor from datastream operator factory
hbase - 25829 add pre - check for settablestateinmeta and fixmetatabletype in master rpc service
replaced lambda expression with method reference for retrieving meter IDs to improve code readability and maintainability
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) instead of getTestClass ( ) to ensure the correct class type is used
[ drools - 3540 ] fix kieservice . delete ( ) to use lastdata instead of remoteitems
adjusted the calculation of allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by
[ hotfix ] [ core ] fix checkstyle violation in flink - core
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
hhh - 14850 - make session . close ( ) return void instead of connection
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
replaced ` exception . printStackTrace ( ) ` with ` exception = = null ` for null checks in ` SchemaValidatorTask . java ` to
replaced ` UncheckedIOException ` with ` IOException ` in the catch block to simplify error handling by avoiding unnecessary exception throwing
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
ruby flavor : replace string . substring ( ) with string . subsequence ( ) .
updated logging level from warning to debug in DerbyDatabase . java and added null checks in BaseLiquibaseTask . java to improve
remove unused flag usecaches from nio2endpoint
refactor ` readCityDatabase ` and ` readCountryDatabase ` methods to use ` Resource ` instead of ` MaxmindProperties ` to
update instructorfeedbackresultspageuitest to use openview for helper view
added scan parameter to the useEncodedQualifierListOptimization method in EncodedColumnsUtil . java to ensure the optimization only applies to non - raw
removed the ` public ` access modifier from several methods in ` ApprovalStore . java ` and ` ApprovalsControllerService . java
added a ` mStartedDownload ` flag and a delayed notification for downloading progress to manage the state of the download process to ensure that notifications are
replaced ` getOpenView ( ) ` with ` getAnyView ( ) ` in ` TaskbarDragLayerController . java ` and added
updated project version from 1.0 . 11 to 1.0 . 13 and modified copyright year in JFreeChartResources . java to reflect
replaced ` yield ( ) ` calls with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread yield
refactor GsonBuilder to improve code structure to enhance maintainability and readability of the code
added null check for centerGeo before adding it to circleCenters and fixedPoints to avoid potential NullPointerExceptions when adding coordinates to circleCenters
remove espressooptions . espressohome from espressoproperties and use homefinder instead
doc ( doc ) : clarify javadoc of ctqueryable , ctcodeelement , ctif , and ctvariablewrite
changed the visibility of ` deleteSession ` and ` timeToDieInSeconds ` from protected to private in ` DeleteSessionAction . java ` to enhance
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
initialized the size of ` sz ` and modified ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` ,
updated triggerMediaScan method to include the file parameter to enhance media scanning functionality by associating it with a specific file instance
removed conditional printing of test results in TestRunning . java to simplify the test result handling logic
added custom G - code settings to MainWindow to enable custom G - code settings for improved user experience
camel - 14284 : camel - jbang - use bufferedoutputstream instead of bufferedoutputstream to improve performance
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and modified exception handling in TestBadConfig . java to enhance test reliability by ignoring specific exceptions
added a method to remove fragments and the action bar in GpsMainActivity to improve fragment management by ensuring the action bar is properly hidden when
updated spanishTokens and spanishTokens2 to use an empty string instead of " = RRB " to simplify the token list and improve
replaced ` Range . asByteRange ( ) . asByteRange ( ) ` with ` Range . Byte ` and added a check for
updated G - code files and modified output statements in VisualizerCanvas . java , GcodeViewParse . java , and VisualizerCanvas .
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
updated method call formatting in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a condition to close the exchangeClient when the query is complete to ensure proper resource management and prevent potential memory leaks
fix file path validation for integrity check ( # 3550 )
removed unused import of SolrClient and initialized shardToClient in ChaosMonkey . java to streamline code by eliminating unnecessary
do n ' t try to use the database config file if it do n ' t exist
reformatted the code for adding subfolders in NestedRepositoryTreePanel to improve readability and maintainability of the code
change constructor of ExtensionTypeHeader to public and add validation for type and length to ensure type and length are within valid bounds to prevent runtime errors
pdfbox - 4892 : do n ' t swallow ioexception when generate field appearance
changed the default value of ` deleteOnShutdown ` and ` pushOnShutdown ` from ` false ` to ` true ` and added getter and
updated the ` handleEvent ` method to include a ` MonoSinkStateMachineExecutorCallback ` and added error handling for state machine triggers to
added a test for multiple Python executables on the first path in BuckConfigTest . java to ensure that the correct executable path is used
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface by allowing signin functionality
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN configuration to HiveConf and TezCompiler to allow
updated error logging messages in RegistrationRestRepository . java to use the correct email format to improve clarity and accuracy of error messages during email sending
move util . reflection out of the package - info . java and remove unused package - info . java
added a static method ` listableCollector ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` OidcTestsSuite
removed the ' center ' variable from multiple Circle , Ellipse , Polygon , Polygon , and Rectangle classes to streamline the code by elimin
removed unnecessary conditional check for pcollection in RegisterAndProcessBundleOperation . java to simplify the condition for better readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance security and performance of SSL connections
updated assertions in ConfigurationProperties and ConfigurationPropertiesTest to use defaultMaxExpectations ( ) and defaultMaxLogEntries ( ) to ensure consistency in
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error message for access confirmation errors
[ 3.0 ] add consumerclassloaderfilter to support use custom class loader ( # 9041 )
added a boolean parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and ` setRol
refactor grid translation handling in TaskViewUtils and TaskViewSimulator classes to improve code clarity and maintainability by consolidating translation logic
refactor Assertions class to improve code readability to enhance maintainability and facilitate easier debugging
added null checks for currentDateTimeFunction in multiple database - related classes to ensure that currentDateTimeFunction is only returned when it is not null
added a method to convert a path to an anonymous path in IOUtils and updated Log4jUtils to use this method to improve path handling and
added a new parameter ` contentDescription ` to the ` call ` method in ` DigitalWellBeingToast . java ` and
added a check for zero timeout before waiting on the metaAvailable wait in CatalogTracker . java to ensure that the wait duration does not exceed a
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
change genericitem to use stateconverterutil . defaultconversion ( state , typeClass ) instead of null
added integration provider support and a test for fetching posts and their details in BidirectionalOneToOneNPlusOneTest . java to enhance the
added functionality to remove extra empty screens and updated startSearchPageIndex initialization to improve user experience by ensuring search page index starts from zero
fix arrayindexoutofboundsexception in markbasepointersphase
updated string formatting in GoogleLineChart and GooglePieChart to use backslashes instead of single quotes to ensure consistency in string formatting across different
refactor batch wait logic in SendingAccountor . java to improve clarity and error handling to enhance the robustness of batch processing and
hbase - 25850 walprettyprinter : add position option to seek to in the file ( # 258 )
updated the port parameter from 1 to 0 in the NettyTransceiver initialization to ensure that the transceiver starts on the correct port
added sorting of events before generating a report in SimpleReport . java and created a test for it in SimpleReportTest . java to ensure that
added a test method to verify CSV line description containing double quotes to ensure correct formatting of CSV lines with escaped quotes
added support for the chinese algorithm in the dcorefchinesebenchmark slowitest
of - 2599 : do n ' t send iq message to non - remote server .
removed the @ JniImpl annotation from VM . java to simplify the code and improve readability
updated configuration settings for blocking and robots in Fetcher2 . java to improve code readability and maintainability by using constants instead of string literals
added a condition to check if the media ' s HDR format is " dolbyvision " before processing the SID to ensure that
updated the package name from " other _ package " to " other _ package2 " in AstTests . java to reflect the new package structure
fix worldborder . setworldbordersize ( ) and worldborder . getworldbordersize ( ) ( # 1188 )
hbase - 25829 add replicationstatus to hmaster to check if master can host user region
mow - 335 : remove the caller from the login operation if the login be successful .
updated the ` markDataResourceOnline ` method to use a ` List < InstanceConfig > ` instead of a new ` ArrayList < InstanceConfig
changed the visibility of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add a test to verify that erroneous maven project contain a reference
simplified the condition for comparing oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor ` getControllerId ` and ` addRelay ` methods to accept a ` configId ` parameter across multiple classes to improve code clarity
replace ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper session
removed the condition for generating refresh tokens in OidcConsentApprovalViewResolver . java to simplify the consent approval check logic
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the extractor method in BaggagePropagation to use NoopGetter to provide a default implementation that returns null to improve code clarity
refactor ConditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree root has children to ensure that the tree root is valid before proceeding with calculations
pdfbox - 4892 : use unfiltered stream instead of filtered stream in jbig2filter
updated log messages and added intent result listener functionality in FacebookImpl . java to improve clarity of log messages and ensure proper handling of permission publishing
updated date pattern return values in ShadowICU . java and added a new test for datePicker in ShadowICUTest . java to ensure
removed KeyguardManager dependency and simplified device lock check in TouchInteractionService . java to simplify code and improve readability by eliminating unnecessary
cloudstack - 4892 : fix npe when create a volume with custom disk offering ( # 4893 )
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel to improve performance and responsiveness by using asynchronous file operations
refactor code for improved readability by removing unnecessary lines in SigInt . java and SigIntTest . java to enhance code clarity
ggb - 1353 remove unnecessary updatebyboundboxresize ( ) method , use prepareboundboxresize ( ) instead
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
refactor compute benchmark to use a lambda expression instead of lambda expression to improve code readability and reduce boilerplate code
added setOnRefreshListener to UploadListFragment and implemented onRefresh method to notify the adapter when data changes are made
change file handling in bibdatabasecontext to use path instead of file object ( # 3649 )
replaced instances of ` ParticleEmitter . class ` with direct calls to ` emitters . get ( i ) ` in ` Particle
simplified the retrieval of the first service and engine in Tomcat . java to improve code readability and maintainability by reducing
updated error message formatting in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing when not in playback
replaced the use of ` findByPK ` with ` findById ( 0L ) ` in ` DeleteServiceTest . java ` to simplify the
refactor inner class field clash detection logic in Java2TypeScriptTranslator and add a new class InnerClassFieldClash to improve code
added logging and follow redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enable flexible configuration of logging and redirect behavior based on
added awtUnlock and awtLock methods in XToolkit . java to ensure thread safety during display change operations
hhh - 10183 use sqlserver2008dialect for nationalizedscalarquerytest
added a call to ` revert ( ) ` in ` OPCPackage . java ` and modified the ` verifyZipHeader ( input ) `
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified ` NO _ MORE _ ORDS ` to use ` assertEquals
updated error messages in CGIHandler and added JavaVM start method in JavaVM to improve clarity of error messages and ensure proper execution flow
added additional checks for line endings in LineReaderImpl . java to ensure proper handling of additional line endings
replaced ` List ` with ` Set ` for ` hashCodes ` and updated related methods to utilize ` ImmutableSet ` for better immut
added a check to return early if there are no vertices to optimize performance by avoiding unnecessary processing when there are no vertices
updated test methods and added verification error handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root
remove unused import of node in typesystem .
refactor JsonObject class to improve code readability to enhance maintainability and reduce complexity
updated conditions for idleTimestamp in SelectChannelEndPoint . java and modified HttpConnection . java to check maxIdleTime in HttpConnection . java to
fix farmlandblock . cansustainplant ( ) to return true for plant that can be sustain .
added assertions for primary keys in QueryDatabaseMetaDataIT and modified query parameters in UpgradeUtil to ensure correct retrieval of primary keys and improve query functionality
updated date formatting in HttpCookie to use Locale . US and added a new test class B6791927 for cookie expiration validation to ensure
added null checks before closing the database connection to prevent potential NullPointerExceptions during database operations
increased the poll timeout from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow more time for processing tasks
fix economyallocationstage to include tracebuilder and globalliveness analysis phase based on tracera option
add save keybinding to source tab ( # 8798 )
modified ObjectMapper initialization to set line separator to ensure consistent line endings across different operating systems
updated path handling in NativeEnvironmentRepository to ensure compatibility with Windows paths to ensure consistent path formatting across different operating systems
added post - construction and shutdown methods for Application instances in multiple test classes to ensure proper resource management and prevent memory leaks during test execution
[ java ] remove redundant validation of record log in recovery module .
chore ( deps ) : upgrade gapic - generator - java to 1.8 . 0 and update gax - java to 1.18
fix test flakiness on travis
added a private boolean variable ` reverseImage ` and updated its initialization in ` CameraManager . java ` to streamline the initialization of the reverse
updated string comparison in multiple Java files to use ` . equals ( string ) ` instead of ` . equals ( string ) ` to improve code
camel - 14284 : camel - dm - match - link should exclude id - meta and id - meta , not id - meta
updated JUnit annotations and method visibility from public to package - private in AuthenticationSuccessListenerTests to ensure compatibility with the latest testing framework and improve
replaced the usage of ` New . arrayList ( ) ` with ` ArrayList < String > ` and updated type retrieval logic to improve performance
refactor TypeUtil to improve code structure to enhance maintainability and readability of the code
updated the trigger time format in AbstractAlertNotifyHandler to include the default timezone to ensure accurate date representation for alert notifications
added a method to create a MethodHandle for AbstractMethodError throwing based on the method ' s modifiers to enhance error handling for abstract method errors
camel - 16400 : camel - core - optimize simple function expression validation to avoid invalid ognl expression
removed empty check for ` toExplore ` in ` AbstractParser . java ` to simplify code by returning ` TargetGraph . EMPTY `
camel - 14284 : camel - jclouds should use copy ( ) to copy the data to the output stream
( chore ) camel - consul : disable test due to osgi bundle not release yet
updated conditional check in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` to define file extensions related to language source and header to provide a centralized list of file
refactor thread - local date format initialization to use ThreadLocal ' s withInitial method to simplify the initialization process and improve performance by avoiding
removed deprecated options for FastTLABRefill , DeferPollingPageLoopCount , SafepointSpinBeforeYield , and
added displayName property to Pac4jBaseClientProperties and updated related client configurations to allow customization of the display name for better user experience
replaced RuntimeException with EarlyTerminationException in multiple operators to improve error handling by providing a more specific exception type
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and consistency
improve handling of closed http connection . jm - 658
add a null check for the parent in the capability dispatcher to avoid npe when the parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling for better clarity
added a @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService to indicate that the class is outdated and should no longer be used
modified the length handling in HyphenationTree to correctly decrement and modify the original length after creating a Hyphenation instance
added a sleep ( 200 ) to the IQRegisterHandler class to ensure that the registration process has sufficient time to complete before proceeding
fix checkstyle issue in simpleaccountregistration . java ( # 241 , # 244 )
corrected the spelling of " PARAMETER _ NEEDS _ TO _ BE _ NAMED " to " PARAMETER _ NEEDS _
added a boolean flag ` providersChanged ` to ` ConfigurationManager . java ` to track provider changes effectively
added a method to handle quoted identifiers in the token rewrite stream to ensure proper formatting of identifiers based on configuration settings
pdfbox - 4892 : skip non - name entry for postscript name , a suggest by valerybokov
updated the type of the loader variable and removed unchecked suppression in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
modified the condition in the window ' s hit detection logic to account for cell relationships to ensure proper handling of hit points within the window boundaries
added null check for appManifest before accessing targetSdkVersion to avoid potential NullPointerException when appManifest is null
refactor ` ConfigurationMetadataGenerator ` and ` CasConfigurationMetadataCatalog ` to use ` MAPPER ` instead of ` DefaultPrettyPrinter ` to
added userName property and its getter / setter methods to Driver and related classes to support user management within the driver context
camel - 14284 : camel - xslt - add setter and getter / setter methods to allow customization of the xslt transformer
added HadoopShim dependency and updated related classes to utilize it to enhance compatibility with Tez ' s Hadoop shim functionality
updated variable names for clarity in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve code readability and
added null check for request context before logging access in CoyoteAdapter . java to enhance robustness by preventing potential NullPointerExceptions
updated ThroughputLogger to return early if startTime is zero and modified message formatting in ThroughputLoggerTest to improve logging clarity and
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) instead of checking for " debug " to ensure
[ scb - 2682 ] fix miss meter detail statistics in defaultlogpublisher ( # 2694 )
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback system property
added @ NotNull annotation to methods in CipherExecutor , DefaultCookieValueManager , and DefaultCasCookieValueManager classes to enforce non - null
replace ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER `
refactor container initialization in AbstractWaitStrategyTest and HttpWaitStrategyTest to use try - with - resources to ensure proper resource management and avoid
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect a new version of the Lucene
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a new method ` generateShieldAddress ` to the ` RpcApiService ` class to facilitate the generation of shield
change return type of readConsoleInput ( ) methods from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes to improve data handling and align with the string - based processing of console input
updated regex patterns for platform identification in TestStabilityRule . java to improve accuracy of platform identification in test cases
added a conditional check for multi - valued fields in DefaultSolrHighlighter . java and modified highlighting test in HighlighterTest . java to
updated the ` tryToLogin ` method to accept credentials for authentication to enhance security by allowing user credentials to be set during the login process
updated entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to improve entity management and ensure proper fight property
( chore ) camel - jms : fix checkstyle violation
removed the wrapCollection method from the update method in DefaultSqlSession . java to simplify the method signature for better usability
added logging for unknown currency exceptions in BTCEAdapters . java to improve error handling and debugging for currency parsing issues
refactor subscription name handling in DurableConduitBridge . java to improve clarity and maintainability of the subscription validation logic
pdfbox - 4892 : adjust default value , a suggest by valerybokov
updated startController method to accept a boolean parameter for tenant isolation and added tenant creation methods in multiple test classes to enhance control over tenant isolation during
simplified the return statement in HasSettings . java by directly returning the value of response . getValue ( ) to improve code readability and
added a check for non - empty attrs before validating the size of the attrs array to ensure that the size check is valid before proceeding with
added abstract methods for retrieving JDK name , JDK type , and language level in AbstractIjProjectConfig , and updated IjProject
updated the Experimenal label from " Experimenal " to " Experimental " in HiveSessionProperties . java to clar
added test cases for ` Scott ` and ` UserDetails ` in ` GrantedAuthorityEffectiveAclsResolverTests ` to ensure correct
use the solved javaparser object instead of the class to avoid reflection
added a static variable ` numberOfButtons ` and updated the return statement in ` XToolkit . java ` to ensure that the number of buttons
updated import statement from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary . Asserts .
added a new class ` MessagePackFactory ` and refactored ` newUnpacker ` methods in ` MessagePack . java ` to improve
add is _ cave tag to biome , close # 1181
rename ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
added a condition to check if the component is not horizontal before setting the layout and updated UIIDs accordingly to ensure proper layout behavior based on the
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` to
updated the return statement in AndroidInput and AndroidLocklessInput to use hasMultitouch instead of touchHandler instanceof AndroidMultiTouchHandler to
[ java ] do n ' t check if the commit position counter be close in clusteredserviceagent .
# 241 - add record for usersite and recordid ( # 244 )
added error handling for malformed IP addresses and port retrieval in HttpConverterRegistrar . java to improve robustness and provide clearer configuration feedback for invalid
bug cs - 15850 : do n ' t ignore storage _ allocated and allocated capacity in listapiresponsehelper
replaced ` openInput ` with ` fileLength ` in ` NRTCachingDirectory . java ` to improve file handling by using file length
refactor JavascriptCompiler to use a new method for generating a class and improve exception handling to enhance code clarity and maintainability by reducing
removed the synchronized keyword from the store method in UISettings . java to ensure thread safety when accessing shared resources
added a check for native text input and changed the visibility of the fireDataChanged method from private to public to ensure proper handling of text input
[ beam - 8470 ] retry on aborted transaction when emulator support one transaction at a time
replaced the use of diamond operator with diamond operator in multiple Java files to simplify code and improve readability
changed the type of the return statement from double array to short array in ObjectInputStream . java and added a new class CloneArray . java with a
updated nonce retrieval method from ` getClaim ` to ` getStringClaim ` and improved error logging in ` OIDCAuthenticationFilter . java `
added a condition to return true for relationships in DCInputSet to ensure proper handling of relationships in the input set
added functionality to store and retrieve the server Slogan capability in the application ' s capabilities table to enhance capability management and improve code clarity
refactor conditional logic for tinting menu items in DrawerActivity . java to improve code readability and maintainability
replaced fail ( ) with System . out . println ( ) and added Assume . assumeNoException ( ex ) in SolrRequestParserTest
added a check to return early if there are no missing symbol events to optimize performance by avoiding unnecessary processing for empty events
added " Data 5 - 4 " to the list of data entries in StringHelperTest . java to enhance the readability and organization of the test
added a warning log if the data provider return an empty array or iterator to indicate that the data provider returned an empty array or iterator to improve
( chore ) camel - maven - plugin : replace usage of collections . empty _ set with collections . emptylist ( )
fix selection style for freeplane 1.9 . 8
updated the parameter name from ' mass ' to ' restitution ' in setRestitution method to improve clarity and consistency in the
added a new file ` AutoFtpActivity . java ` that implements FTP sending functionality to facilitate automated FTP testing in the
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added methods to retrieve and set component state in various classes to enhance functionality for managing component states in the application
added a new class ` RemoteExecutionEnabled ` and implemented serialization and deserialization for ` RemoteExecutionConditional ` to enable and disable remote execution based on
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` @ SuppressWarnings ( " squid : S3551 " ) ` annotations to
added a method to assert shadow variables are not stale in AbstractScoreDirector to ensure that shadow variables are not stale during score calculations
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to align
added logging statements to handle non - ByteBuf instances in DatagramPacketDecoder , DatagramPacketDecoder , DatagramPacketEncoder , and Datagram
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation ` and updated directory removal logic in ` FileDisplayActivity
added assertions to verify the presence and retrieval of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly set
added a deprecated annotation to ISchemaRegion . java and updated test methods in SchemaRegionBasicTest . java to indicate that these methods are outdated
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided before processing
replaced calls to notify ( ) with notifyAll ( ) and wait ( ) in QueryExecutorImpl and AbstractJdbc23PoolingDataSource to
updated @ AllArgsConstructor annotation to include JsonCreator mode to ensure compatibility with JSON serialization for improved functionality
added a check to throw SQLFeatureNotSupportedException for unsupported view types in MetaDataClient . java to indicate that creating an index on a view is not
added a new ` Website ` class with properties for name , URL , and URI to facilitate the population of ` Website
added JUnit setup method to BSFormatterTest . java to ensure consistent locale settings for tests
improve logging of badly downloaded jar file
updated assertions in MultiPartParsingTest to use Matchers for case - insensitive comparison to improve test reliability by ignoring case sensitive values
added a check for single parameters in the SimpleExprGenerator class to ensure that only single parameters are processed in the expression generation process
added a volatile boolean flag ` createdVertx ` and modified the conditional check for ` vertx ` to ensure that ` vertx ` is
added a node parameter to the writeAttributes method in NodeStyleBuilder . java to ensure the node model is passed to the writeAttributes method for
updated log messages in SynchronizeFolderOperation and modified file retrieval logic in FileDisplayActivity to improve logging clarity and prevent potential null pointer exceptions
added a ` ignoredReadStatus ` property to the ` Entries ` class and updated related methods to handle unread flags to ensure entries are returned regardless
replaced MavenTestingUtils . getTargetDir ( ) . toURI ( ) with MavenPaths . targetDir ( ) . resolve ( " test - classes
added validation for data types in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to ensure only valid data is processed to improve data integrity and prevent
updated the isPlaying logic in GwtMusic . java to check if the sound is not paused before determining play state to ensure that
added a new permission ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` MainCommand ` and ` Captions ` classes to
refactor query option handling to use HashMap instead of ImmutableMap for improved flexibility to enhance code maintainability and facilitate easier debugging
replaced calls to ` toUri ( ) . getPath ( ) . endsWith ( " / " ) ` with ` path . getFileName ( )
updated assertions in ResourcesTest to use constants for emoji and text to improve readability and maintainability of the test code
replaced the native method NMTWaitForDataMerge with a new method NMTOverflowHashBucket and NMTMallocWithPseudo
[ hotfix ] [ serializer ] deprecate eitherserializersnapshot . snapshotconfiguration ( )
updated AddressResolverOptions to use constants for NDOTS and ROTV options instead of hardcoded values to improve flexibility and maintainability
added a call to the superclass ' s __ associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML schema paths to the new official URLs to ensure the application references the correct external resources for XML namespaces
move commonmimetypelocator to test package so it can be use by other module .
updated RepositoryVersionState from INIT to NOT _ REQUIRED across multiple classes to ensure the repository version is not mandatory for service components
updated the CompareControl instantiation in GenerateChangeLogTask . java to include additional schema comparison configurations to enhance the comparison functionality to accommodate different
[ hotfix ] [ testng - tests ] migrate testng to testng - annotations
added a new file ProgressiveJPEGTest . java that implements a progressive JPEG rendering test to demonstrate the use of progressive
replaced ` setAlphaTest ( true ) ` with ` mat . setFloat ( " AlphaDiscardThreshold " , 0.01 f )
improve error message for native - image build on window
added a null and non - empty check for the text before setting the size in the Label class to avoid potential NullPointerExceptions when the text is
updated the method call from ` readVarInt ( ) ` to ` readVarInt ( ) % 1 _ 000 _ 000 ` to ensure
added constructors to PushUtils and removed them from ThumbnailsCacheManager to enforce singleton pattern to prevent instantiation
replaced the calculation of ` length ` with directly accessing ` curConfig . getLength ( ) ` to simplify the code by directly accessing ` length
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the filename pattern for loading presets from " . * csv " to " ( ? i ) . * csv " to improve flexibility in
added a conditional check for duration before announceting accessibility in TaskbarStashController . java and modified conditional checks in ActivityContext . java
replaced ` Args . getInstance ( ) . getMyKey ( ) . getNodeId ( ) ` with ` RefreshTask . getNodeId (
add a test to make sure we can target both jdk 1.3 and jdk 1.5
test : replace powermock with mockitojunit in quotaresponsebuilderimpltest
added error and output streams to TestSchemaToolCatalogOps . java to manage standard error and output streams for testing purposes
added DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and cleared the data encryption key to enhance security
updated MongoQueryMethod to accept RepositoryMetadata as a parameter to enhance query functionality by incorporating repository - specific metadata
fix for tomcat 1.0 . 1 - use entityresolver2 instead of reader .
updated import statements in MetaDataEndpointImpl . java to remove redundant imports to streamline code and improve readability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry interval in TxnHandler . java to
replaced variable ` xl ` with ` xAxis ` in ` BarChartActivity . java ` and updated line offset calculation in ` LineChartActivity
added methods to check for printable characters and Windows system names in FsUtils . java to enhance input validation and ensure proper handling of system names
rename ` ` in ' ' method to ` ` using ' ' in ` seleniumrunner `
make defaultprojectbuildingrequest process plugin configuration by default
change division by 1000 to divide by 1000d in ProxyConnectionManager . java and ServerTrafficCounter . java to ensure precision is correctly represented for
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return the user ' s remote host instead of
do n ' t show community list if user be not admin
added thread counter to long and short compaction threads in CompactSplit . java to improve thread naming for better debugging and monitoring
replaced getApplication ( ) . getPackageName ( ) with resources . getResourcePackageName ( R . array . wallpapers ) to retrieve the package
added a method to filter players in the plot visible to improve player visibility handling in the plot rendering process
updated multiple Java files related to AndroidManifest , ResName , and ShadowMediaPlayer to improve code organization and maintainability
rename MlibOpsTest . java to MlibOpsTest . java to improve clarity and consistency in naming conventions
8274243 : [ gr - 3649 ] add support for java . management . internal . operatingsystemimpl
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test case in SchemeGenerator
updated key and iv initialization logic in UploadFileOperation . java to streamline key and initialization process to improve code readability and maintainability by
added @ Stability annotation to WorkProfileTest . java to indicate stability for specified flavors as part of b / 2436889
removed redundant check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
refactor LockFreeBucket class to extend LockFreeBucketContendedTimeMeter and extend LockFreeBucket _ FinalFields _ CacheLinePadding to
patch by jbellis ; review by brandonwilliams for cassandra - 1348
updated maxBitrate retrieval to use user preferences for bitrate settings to ensure bitrate settings are based on user - specific preferences
refactor ZipkinHttpSpanExtractor to check for both traceId and spanId presence in carrier to improve code readability and maintainability by
do n ' t create duplicate offer account if not bsq swap or dao activation
remove reflection for dartservercompletioncontributor . withtypetext ( string , boolean , boolean , boolean ) ( # 3550 )
added a call to set the project in the LauncherUtils class to ensure the project is properly set before use
updated ` JsBundle ` , ` JsLibraryBuilder ` , and ` JsBundleWorkerJobArgsTest ` to include ` ProjectFilesystem ` to
updated multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor MetricsDSLContext class for improved clarity to enhance maintainability and readability of the code
removed the implementation of ` VersionConfig ` and modified the ` universes ` builder to use ` ImmutableMap . builderWithExpectedSize (
added a try - catch block around the bindShadowClass method to handle potential TypeNotPresentException to improve robustness by preventing crashes
changed the access modifier of the validateTypes method from static to public and updated the exception message format to allow external access to the validateTypes method
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added logging functionality to the SimulationStatus class to improve debugging and monitoring capabilities
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and 14 in Splash . java to improve the visual presentation of the
added a runLater ( ) method to the notification addition process in UserInterfaceComponentImpl . java to ensure that notifications are added on the UI thread
added a mock for the ` ReturnsElementsOf ` class in the ` AdditionalAnswers ` and ` ReturnsElementsOf ` classes to enhance test coverage
corrected the spelling of " non - equality " in the error message to improve clarity and accuracy of the error message
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify indexing behavior of line - file documents
added a method ` getVersionCode ( ) ` to ` MainApp ` and refactored version code retrieval in ` WhatsNewActivity `
camel - 16400 : fixed ambiguous bean invocation with string and inputstream body .
updated assertions in ` MultiPartInputStreamTest . java ` to use ` getSubmittedFileName ( ) ` instead of ` getContentDispositionFilename ( )
added buffer ownership checks and buffer handling in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leak
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by providing a clearer
refactor JerseyClientConfiguration to improve code readability to enhance maintainability and facilitate future feature additions
int - 1343 remove unnecessary import of characterstreamreadingmessagesource and characterstreamwritingmessagehandler
updated print statements in InstanceOfPatternMatchTest . java and removed unnecessary type casting in RemoveRedundantTypeCastTest . java to improve code
added logic to manage column and row counts in StringDict and Table classes to ensure proper handling of empty array entries in the table
added a ` AutoCloseable ` interface to ` GenericContainer ` and implemented a customizable ` withCustomizer ` method in ` GenericContainer
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve error handling and ensure
added support for a schemapattern option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection configuration flexibility by allowing
added null check for tlsSession in ProvSSLSessionImpl . java to ensure proper handling of null values when tlsSession is null
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 class implementation to improve code readability and maintainability
sulong : add fallback ( ) and setfallback ( ) method to llvmglobalcontainer .
added IPHONE to the @ Ignore annotation in JavascriptEnabledDriverTest . java to enable the test for IPHONE and SELENE
refactor FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
replaced ` ResName ` with ` int resId ` across multiple classes to simplify resource identification and improve code clarity
( chore ) camel - docker : refactored context tls file resolution logic into a separate method to improve code readability and maintainability
replaced ` @ After ` with ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to set up the test setup
refactor type variable handling in mmm Attr . java and add a new class T6450290 . java with generics to improve type
added logging level configuration to the LoggingFlags and LoggingOptions classes to allow users to specify a custom logging level for better control over log output
added logging statements to LauncherModel , SecondaryDropTarget , ModelWriter , and modified deleteItemsFromDatabase method to accept a Collection to improve
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added deprecated forEachOperation and hasMatching methods in MutationOperationGroup . java to improve code clarity and prepare for future removal of deprecated methods
updated the calculation of ` numPredictiveAppCols ` to use ` 4 ` for phone devices to ensure correct application column count based on device
updated String initialization to use UTF - 8 character encoding to ensure proper handling of character encoding in string processing
added a new class ` RequestMatchers ` and corresponding tests for ` anyOf ` , ` allOf ` , ` allOf ` , `
do n ' t show text field in temporary mode if not in applet
updated calculations for height and width in ProgressBar to account for background bottom and right widths to ensure correct positioning of the knob elements based on
updated the path for the external function definition from " src / test / resources / external _ functions . json " to " jsonDefinitionPath "
added final modifier to ` extra _ L0 ` and ` extra _ L1 ` variables in ` BruteArgumentMoverHandle .
added a condition to check if the state handler is invalidated before proceeding with gesture handling to ensure that the gesture handler does not proceed when the
updated layout calculations in DynamicGrid and Workspace classes to use constrained edges for landscape and portrait layouts to improve layout responsiveness and accuracy
added a condition to check if the redir file is " / robots . txt " in HttpRobotRulesParser . java to ensure proper handling
[ netbeans - 4892 ] add warning icon to nb - javac library ( # 4893 )
updated button names from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to improve clarity and
updated UDFOPDivide to handle zero values in null checks and added a new TestUDFOPDivide class for testing to
reformatted code for better readability and maintainability to improve code clarity and ensure proper handling of ABANDONED batch statuses
replaced ` filterProcessesUrl ` with ` logoutRequestMatcher ` in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser `
add onDestroy method to unbind uploadServiceConnection in ShareActivity and ContributionsActivity to ensure proper resource cleanup when the activities are destroyed
corrected the variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a call to set request timeout in RaftServerConfigKeys to ensure proper request timeout configuration for the Raft server
updated logging level and removed runtime exceptions in TsFileResourceManager and ResourceManagerTest to improve logging clarity and ensure proper handling of time index
added setSystemProperties ( System . getProperties ( ) ) method to MavenModuleLoader to ensure system properties are properly set during module loading
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to Server
added support for custom itemblock registration in blockanimatedtorch
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when closing the writer
added a method to retrieve HiveConf from a specified configuration directory to facilitate the configuration of the Hive configuration based on the Tez
added " Muting Users " link to the links in FeaturesActivity to provide users with direct access to the Muting Users page
added initialization property for " jdk . reflect . useDirectMethodHandle " to disable direct method handle usage to improve performance by avoiding unnecessary
hbase - 25815 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] remove duplicate code in abstractyarnclusterdescriptor
replaced calls to ` getPronunciations ( word , null ) ` with ` getWord ( word ) . getPonunci
removed newlines from JSON structure in JsonUtilsTest . java to streamline JSON output for better readability
added ` id ` to ` compose ` in ` TimeLineCursorAdapter ` and ` TimelineArrayAdapter ` while handling ` notiId
added a warning log for terminating the message listener to indicate that underlying ring buffer data related to a reliable topic is lost
improve error message when no class be find to analyze
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
initialized the isIncompatible variable to true in DLNAResource . java to ensure proper handling of incompatible resources
updated the method signature of ` createAccount ` from ` Account ` to ` AccountCreateContract ` to align the method signature with the new contract
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 2370 - fix the bug that the
updated the ` enableOffHeapFormat ` variable and updated the default star tree format version from " ON _ HEAP " to " OFF _ HEAP
updated title handling in FeedUpdateService to truncate title length to ensure title does not exceed a maximum of 2048 characters
updated JColorChooser to use ColorChooserComponentFactory for the preview panel to improve flexibility and maintainability of the preview panel management
changed logging level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension checks
added null check for reusable bitmap before retrieving it to avoid potential null pointer exceptions during bitmap processing
added layoutParams field and its getter method in FakeView . java to provide access to layout parameters for external use
added a check to prevent IllegalStateException when a cursor is already closed to ensure proper error handling and prevent operations on a closed cursor
pdfbox - 4892 : simplify code , a suggest by valerybokov
temporarily disable test that fail on ci
added a ` ts ` field and its getter / setter methods to the ` Message ` class to store and manage the timestamp associated with messages
[ bugfix ] add log to genericexceptionmapper and validationvalidationmapper
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor from other packages
remove ` ` weighting ' ' , ` ` edge _ based ' ' , and ` ` turn _ costs ' ' hint from ` `
removed public access modifier from multiple test classes to enforce encapsulation within the test package
refactor CSRF setting logic into a separate method to improve code readability and maintainability by reducing duplication
fix a bug in eclipseloaderpatchertransplants when use a bootstrap class loader .
jbrules - 2231 : add numericdisabled flag to rule sheet parser to determine if numeric be disabled or not
updated log level from info to debug for default value logging in HiveConf . java to improve performance by reducing log verbosity when debug logging is
added null checks for axes and buttons in Lwjgl3Controller and modified controller polling logic in Lwjgl3ControllerManager
updated import statements in WeldFactory and WeldFactoryTest to use the new package structure to ensure compatibility with the latest version of Cuc
added a null check for the host before saving the port forward in PortForwardListActivity . java to ensure that the savePortForward method is
added a new property ` SHOULD _ SNAPSHOT _ DATA ` and corresponding getter and setter methods in ` GlobalConfiguration ` , and updated related
added logging for the event path and modified job scheduling logic to ensure the job is only scheduled if it does not already exist to improve debugging and
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
simplified conditions for touch event handling in StatusBarTouchController and related classes to improve code readability and maintainability by reducing complexity
refactor VectorReader and related classes to remove the implementation of VectorReaderImpl to simplify the code structure and improve maintainability by eliminating
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test classes to align with the latest Mockito API changes
replaced ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` in multiple files to simplify path handling and improve code clarity
updated ` completeMapAndTransformRow ` and ` transform ` methods to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to
added a null check for the extractor before instantiating it in ControllerMethodInvoker . java and updated annotation annotations in Param . java and Params .
cloudstack - 4892 : do n ' t set max secondary storage for unlimited volume ( # 4893 )
fix the inventoryeffectrenderer not render correctly when press the shift
added a deprecated constant for the COLD _ READS _ TO _ OMIT _ KEY in SizeTieredCompactionStrategyOptions . java to
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 4370 ] fix the bug of popmessagemetrics ( # 4371 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related
added handling for UpgradeRequest and UpgradeResponse in UpgradeConnection and ClientConnectTest classes to enhance websocket connection management and ensure proper handling of upgrade requests
added timeout functionality to AndroidImplementation to allow customizable connection timeout settings
updated getUserAccessPermissions and getTeamAccessPermissions methods to include permission checks for users and teams to improve permission handling by ensuring only authorized users and
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure the SQL parser correctly handles quoted cast expressions
added logic to check if a file is writable or executable based on the operating system to ensure correct permission checks based on the operating system ' s
added logging for thread group and thread per group and refactored executor selection logic in FixedThreadExecutor . java to improve thread management and enhance
added null check for field before checking for " catalogname " to avoid potential NullPointerException when field is null
updated method signatures from CasEventListener to InitializingBean across multiple configuration classes to ensure compatibility with Spring ' s InitializingBean for better bean management
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in the DeflaterOutputStream class to ensure the deflation of the deflation stream is
added a new file ` gsp001 . java ` containing a native method for retrieving system properties to facilitate testing of JV
fix beandefinitioninjectprocessor to correctly handle @ bean declare with @ bean .
[ jme3 ] add camerode and lightcontrol to jme3 . 1 . x and jme3 . 1 .
refactor popup window handling in PopupNotificationPanel to use SwingUtilities to improve code readability and maintainability by reducing redundancy
replaced specific NoInstanceException and InvalidInstanceException with InferenceException in the inference process to simplify error handling by eliminating redundancy
added a method ` getFeatureValue ( ) ` to ` FeatureField ` to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` VerificationAfterDelay ` method to allow
added JSON properties ` OnBuild ` and ` ExecutionDriver ` to ` ContainerConfig ` and ` Info ` classes to enable configuration of on -
updated icon assignment logic in Toolbar . java to differentiate between RTL and LTR layouts to ensure appropriate icon appearance based on the
added a new boolean property ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory ` to allow configuration of position increments
updated EmailsTest and SystemErrorEmailReportTest to use an InternetAddress instance for email addresses to improve clarity and maintainability of email
set mTryShareAgain to false in FileActivity . java to disable sharing mechanism for improved user experience
added functionality to determine the tty name based on the version of JansiNativePty to improve compatibility with different versions of Jansi
refactor bandwidth size calculation in BandwidthProcessor . java to use a new variable for better clarity to improve code readability and maintainability
replaced direct assertions with Awaitility ' s await for span checks in Issue410Tests . java to improve test reliability by ensuring
updated API URL constants in EaseeBindingConstants . java to use a dynamic API base URL instead of hardcoded values to improve flexibility
[ beam - 8470 ] [ beam - 8470 ] fix flakiness in kafkaioit
updated the ` allOf ` method in ` SearchResultMatcher ` to check for ` itemName ` instead of ` itemName ` to simplify the matching logic
added SSL certificate trust management and SSL session handling in OkHttp . java to enhance security by enabling secure communication with client and server certificates
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` byte ` and ` int
added null checks for stdout and stderr in ShellStep . java to enhance robustness by preventing potential NullPointerException when workingDirectory is null
increased the timeout duration from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous operations to complete successfully
refactor ` escapeDatabaseObject ` methods to use ` objectName ` instead of ` tableName ` and ` objectType ` instead of ` tableName ` to
added a boolean variable ` inputChanged ` and modified the condition for input validation in ` MaterialRenameDialog . java ` to improve input handling logic
added a new test method ` stateChangeShouldApplyToOtherInstancesOfSameDisplay _ postKitKatFields ` to ` ShadowDisplayTest
[ geos - 8470 ] add directinvocationservice interface and add test for it
added handling for ` KEY _ X ` and ` KEY _ Y ` keycodes in ` GlobalKeyDispatcherW . java ` to enable proper
updated SQL query construction in PgDatabaseMetaData . java to include server version checks to ensure compatibility with PostgreSQL versions prior to 9.0 and improve
removed the initialization of the message variable to allow for better flexibility in message handling
removed IOException declaration and updated URI handling in getPathsFromResource method to simplify error handling and improve code clarity
added support for monitoring and application monitoring in the CollectorServer class to enhance monitoring capabilities for Jenkins applications
updated attribute handling in HeadersBeanDefinitionParser to use resolvePlaceholders for disabled and defaults - disabled attributes to improve attribute resolution flexibility and ensure correct
updated EOFException handling and improved logging messages in ProtobufLogReader . java to enhance error handling clarity and provide more informative log messages
updated destroy method calls in DefaultApplicationDeployer and added shutdown logic in NacosRegistry to ensure proper cleanup of naming services during application des
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status code to improve code clarity and maintain
refactor AuditEvent initialization and JSON output formatting in AuditEventTests . java to improve code readability and maintainability
added checks for floating error before returning 0 in Interpolation . java and modified the return statement in Interpolation . java to ensure proper handling of
fix default folder path for forge world edit ( # 6640 )
refactor the addition of the dx executable path to use a local variable for clarity to improve code readability and maintainability
added multiple assertion checks for PointRangeQuery instances in TestPointQueries . java to ensure consistency and correctness of point range query comparisons
hbase - 25829 addendum fix testhfilecleaner testhfilecleaner fail on window
added a condition to display the file name in the file label based on the file transfer request to ensure the correct file name is displayed based on
removed the throw statement from JedisClusterCommand . java to streamline error handling by eliminating unnecessary exception throwing
[ hotfix ] [ table - common ] set chainingstrategy to always for rowtimeminibatchassgineroperator
replace RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor and add new test cases for regex and
added multiple benchmarks for HashMap and CompactMap in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWrite
added a new HashMap for G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B with a
added a check for empty fields and refactored identifier completion logic in GroovyEngine . java to ensure proper handling of empty fields and improve code
set drawable to false for geopoints that do n ' t need it
added configuration options for TCP keep - alive and read socket timeout in HiveConf . java and updated server socket initialization in HiveServer . java to
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java
no effective change - remove unused import
refactor ` RealtimeSegmentRelocator ` to use ` TimeUtils ` for thread creation and period parsing to improve code readability and
vpc : do n ' t start vpc if it ' s already start
updated the calculation of windowAlpha in WindowTransformSwipeHandler and modified the condition in FloatingIconView to ensure windowAlpha does not exceed
updated schema validation error message in SecurityNamespaceHandler . java from 3.2 to 4.0 to ensure users update their schema declarations to the
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
( chore ) camel - disruptor : make field final
added a new test class ` TestConfigureUDF ` for testing configuration in ` TestConfigureUDF ` to facilitate testing of
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve flexibility in matching line endings
replaced calls to logger . debug ( ) and logger . info ( ) with direct calls to logger . debug ( ) and logger . info
updated method names from ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` in ` ShardDao ` and ` ShardClean
added support for Java 17 and 17 - preview in the JavaLanguageModule to ensure compatibility with the latest features and improvements
added a constant for the number of seconds to wait for compression jobs in TimeBasedRollingPolicy and updated lossiness factor in FileAppenderResil
do n ' t assert lastlocationaccess when there be only one usage of memory
added a method ` getSteps ( ) ` to the ` SimpleJob ` class and modified the ` getStep ` method to return an unmodifiable list
removed unnecessary ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
fix longtasktimer to use base time unit instead of nanosecond
[ hotfix ] [ euphoria ] skip partitioning for hash partitioner in reducebykeytranslator
changed the data type of ` value ` from ` String ` to ` CharSequence ` and modified related logic in ` HostEditorActivity . java `
updated the ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and refactored the ` putDatabaseVersion ` method to use `
added a constant MAX _ TWEETS _ IN _ CONVERSATION to limit the number of replies processed in the query execution
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to
updated the tail page addition logic in the Queue class and added a new test for persisted byte size in the QueueTest class to ensure correct handling
fix : use class . getimplementationtitle ( ) instead of getclass ( ) . getimplementationtitle ( )
added a ` grow ` method to the ` DataIO ` class and refactored the buffer resizing logic to improve code readability and
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the submitted file name associated with
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure data is marked as read when loading is complete
added ClassNotFoundException to main method and modified the instrumentJar method to handle negative array size exceptions to improve error handling and provide clearer diagnostics during class
added a method to check for spill possibility in HashAggTemplate . java to ensure proper handling of memory allocation during partition flushing
replaced calls to ` getDocStoreSegment ( ) ` with a direct reference to ` dsName ` in ` IndexWriter . java ` to
added a default name ID format constant and a check for supported name formats in SamlProfileSamlNameIdBuilder . java to ensure that the
added error handling when a password change is aborted to improve user experience by providing a clear error message when the password change is aborted
removed redundant closing brace in Deadlock2 . java to improve code clarity and maintainability
added a method to get the maximum idle time in NioReceiverMBean . java to provide a way to configure the maximum idle time for the
deleted the FontScalingTest . java file to the functionality was deemed unnecessary or redundant
updated RRD4jPersistenceService to check if filter dates are before and after to ensure data integrity by preventing invalid date filters
added a check for ` numVectors ` in ` GenericUDAFComputeStats . java ` to prevent further processing when ` numVectors ` is
test : migrate executablerefstest to junit 5 ( # 4529 )
added null checks for ` view ` and ` glassPane ` in ` JLayer . java ` and created a new ` bug699
camel - 16400 : added wiretap support to senddynamicprocessor . thanks to benjamin graf for the patch
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ` planner . enable _ topn ` in ` PlannerSettings ` and implemented it in ` PushLimitToTopN
[ java ] remove unnecessary aeronDirectoryName assignment in ArchiveLoggingAgentTest , ClusterLoggingAgentTest , and DriverLoggingAgentTest to
fixed - connection . ping ( ) and connection . setqueued ( false ) should n ' t be call if connection be already queue . #
replaced InputStream with FileOutputStream and refactored the getConfVarURL method to return a URL instead of an InputStream to improve performance by avoiding
updated model creation to use criteria . getDevice ( ) instead of using defaultDevice to improve flexibility in model selection based on user - defined criteria
added menu inflation and menu item selection methods in SimulationViewer . java to enhance user experience by providing direct access to motor details options
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
fix ( hawtio - system ) : use hawtio . dirname instead of user . home
added a condition to return SINGLE _ SPACE when comments and whitespace are empty to improve handling of empty comments and improve code clarity
changed ` mClosed ` and ` mActualDictionary ` to be ` volatile ` across multiple classes to ensure visibility of these variables across multiple threads
added a call to printStackTrace ( ) in ContextHandler . java to improve error reporting by displaying stack traces of exceptions
fix customitemdroptest to work with custom item .
added a conditional check for partitions in DDLTask and modified related methods in DDLSemanticAnalyzer and related classes to enhance partition management by allowing
[ nfs ] fix nfssecondarystorageresource . read ( byte [ ] bytebuf , int size )
[ java ] remove unused control stream id in echo service node and basic auction cluster node .
added support for spatial operator ( ogc : spatial _ operators ) in wfs capability
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix to address issue SOLR -
updated condition checks in Http11InputBuffer . java to ensure proper handling of client preface requests to improve robustness of request parsing logic
[ java ] change the default value of the isIngressExclusive variable from true to false to ensure that the cluster operates in a non -
replaced hardcoded HBASE _ OFFHEAP _ PCT _ KEY and HBASE _ BUCKETCACHE _ SIZE _ KEY with a
added methods to increment and update the running record count in JSONRecordReader . java to improve code clarity and maintainability by encapsulating record
added filtering of out year entries from mergedItems in CategorizationFragment to ensure only relevant items are included in the merged list
updated drawing color values in CacheableTextView , CellLayout , HolographicOutlineHelper , and HolographicTextView to
added a check for OpenGL ES 2.0 in Mesh . java to prevent IllegalStateException when using render methods with OpenGL ES 2.0
improve backgroundprocess so that it do n ' t leak the actioncontext
refactor table name handling in BaseSemanticAnalyzer and related classes to include database name as a parameter to improve clarity and consistency in database
added connection timeout configuration and changed the visibility of the count variable from static to static final in TestConnections . java and StubConnection . java to
[ hive ] add test for approx _ percentile ( ) and approx _ percentile ( )
updated default idle and write timeout configurations in WebSocketConstants and WebSocketChannel classes to ensure consistent handling of idle and write timeouts across connections
updated the method to retrieve shares from the user ' s platform account instead of the account ' s name to ensure compatibility with the user ' s
refactor InetAddress handling to use generics for improved type safety to enhance code clarity and prevent potential ClassCastExceptions
refactor button management methods in PlaybackControlView . java for improved clarity and maintainability to enhance code readability and maintainability
updated the ` isPresent ` method to accept a session ID instead of a session ID to improve clarity and functionality of session presence checks
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
change the default value of useexceptionprobability from true to ___ _ to allow for more flexible configuration of exception probability
updated the method of determining newPlateColor based on theme to enhance color consistency for themed icons
guac - 1391 : remove dependency on passwordencryptionservice from mysqluser .
updated aliases in Middle . java to include " centre " to enhance functionality by allowing both center and centre options
added dependency injection for DirectUpload in CommonsApplicationComponent and changed DirectUpload class visibility to public to allow the DirectUpload class to be accessible
added space adjustments for left and right axes in BarChartActivity and BarLineChartBase to improve chart layout responsiveness by adjusting
added support for both CLASS _ ABI _ FLAVOR and SOURCE _ ABI _ FLAVOR in AndroidLibraryDescription and
added operationEventStatusType to requestParams in OnlineHubService and changed the services list from final to non - final in CompositeLogService to
added debug logging for parameters and implemented visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure proper annotation management
( chore ) camel - jms : rename startbundle ( ) to setup ( ) and teardown ( )
refactor process creation to use a variable for classpath to improve code readability and maintainability by reducing redundancy
updated resource loading path to include " res " separator for " android " package to ensure correct path formatting for resource loading in Android environments
[ hotfix ] [ table - common ] remove unnecessary ' this ' keyword from method
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting to escape percent characters in ShouldHaveMessage . java and added a new test method in ShouldHaveMessage _ create _ Test
fixed - jcachemanager # geturi should return the cache manager ' s uri , not the cache manager ' s
reduce log level in case of activititaskalreadyclaimedexception
reordered the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
replaced the calculation of value in EntityPropertiesPacket to use the base value from the instance to ensure the correct base value is written for the
sonosaudioprovider : do n ' t play sound uri if the thing be not initialize
increased wait time from 500 milliseconds to 5 seconds in multiple test classes to allow more time for tests to complete before timing out
updated logging level from info to debug in LightThingHandler . java to provide more granular logging for troubleshooting issues related to
cloudstack - 1343 : use fixed thread pool for asyncjobmanagerimpl to improve performance
updated import statements and modified method signatures in Reporter . java and ReturnsSmartNulls . java to enhance clarity and maintain consistency in method signatures
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in the ` generate ` method to improve type safety
updated package and module - info . java files for consistency and clarity to improve maintainability and readability of the codebase
added a check for non - empty physical column names in OrcPageSourceFactory and a corresponding test in TestHiveFileFormats to ensure
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine . java ` file to enable audio
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and added new test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to
simplified the condition for checking presence of leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
renamed the method ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and refactored
simonstewart : fix a couple of typo in the method name .
updated sample rate handling in DefaultAudioSink . java to ensure proper sample rate is used based on the provided format
add a method to get and set a formula in the xssfname class to allow for customization of the formula
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to accommodate
[ geot - 6640 ] fix bug in simpletypegt . parsepatternschema ( ) and add unit test
added unit tests for ClassPathXmlJobRegistryContext to ensure proper functionality of job retrieval and retrieval in the Spring Batch framework
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet should use the advanced label instead of the consumer label
camel - 15836 - camel - log4j2 - remove showout method from logendpointbuilder
refactor event submission logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating metadata
added checks to ensure only non - canceled , filled , and rejected orders are added to the limitOrders list to avoid adding invalid orders that are
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout handling and ensure correct pixel size calculations
[ jruby ] convert ruby _ timestamp to jrubyeventextlibrary . rubytimestamp
added a condition to return the resource if the path ends with " / " and the resource alias ends with " / " to ensure correct resource
updated the function name from " TypeErrorThrower " to " TypeErrorThrower _ GETTER " in ScriptFunctionImpl . java to accurately
updated variable names and logic in JEditTextArea to improve clarity and functionality to enhance code readability and maintainability by using more d
added null check for callerloopscope before setting guardsstage and stage flags in GraphDecoder . java to ensure proper handling of null caller loop
test ( sniperprettyprinterjavaprettyprinterjavaxtest ) : migrate sniper to junit 5 ( #
updated URLOutputStream instantiation to use try - with - resources for better resource management to ensure proper resource management and improve clarity in exception messages
added import for dev . morphia . annotations . Entity and @ Entity annotations in Mail . java to ensure proper entity management within the application
updated default values for includeTablespace from false to true and added a new command parameter to enable tablespace inclusion to enhance flexibility in table
added getter methods for ` metaDataBuffer ` and ` valuesBuffer ` in ` CountersReader ` to provide access to these buffers for external use
added a boolean flag ` hasReadNonEmptyFile ` and modified ` container ` and ` fieldVectorMap ` clearing in ` ScanBatch . java
updated failure message formatting in StringSubject . java and added a test for string named equality failure in StringTest . java to improve clarity of
added a constant for matching library names in LibUtils . java to improve code readability and maintainability by centralizing library pattern matching
changed catch blocks from NoClassDefFoundError to Exception and Error in JrtJavaBasePackages . java and PackageHelper . java to handle
added checks for file system safemode and wait for write operations to ensure data integrity by preventing operations on non - safe file systems
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for unsupported compilers
do n ' t cache plugin descriptor in defaultplugincache because it ' s not use
do n ' t update the mobile indicator if the presence status change .
remove unused method ` withresourceandparams ` from ` ServletRequestdetails ` and ` resourcemethodtest `
added a new file ` AccountInfoFetchIntegration . java ` for testing account information fetching to ensure that the ` getAccountInfo ` method behaves
added mouse wheel functionality to VDUInput and vt320 classes and updated mouse reporting logic in TerminalView to enhance user interaction with the terminal interface
updated library path retrieval to use a variable for clarity to improve code readability and maintainability by reducing repetitive method calls
# 241 - remove deprecated columnhstore annotation ( # 244 )
fix metadataindex . setplayerskinflags ( ) to ignore player skin flag .
fix flaky test in loadbalancerwithservicetests
fix potential npe in mapservice . getentryview ( ) when member be null .
replaced System . getProperty with AccessController . doPrivileged for retrieving the OS version to enhance security by using a privileged action for accessing system properties
added a new constant for the Freemarker configuration file suffix and modified the file suffix initialization to allow dynamic configuration of the file suffix
[ issue # 3390 ] fix select message queue by hash ( # 3391 )
added animation callback to the toolbar panel animation to ensure proper styling of the dock pane after animation completion
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ` for binding caret in ` StyledTextAreaVisual
refactor ` PrebuiltAppleFrameworkDescription ` , ` CxxBinaryDescription ` , and ` CxxGenruleDescription ` to util
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple classes to enhance parameter handling capabilities in the repository
added a null check before setting the password attribute name in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and created a test for default values in DataUtilitiesTest to ensure proper handling of array types and
updated SSL engine creation logic to use hostName based on client authentication to ensure correct host name verification when the address is null
updated assertions in TestFSTableDescriptors . java to use assertTrue instead of assertEquals for cachehits to improve clarity and correctness
danielwagnerhall : do n ' t use uri for cookie deletion , since we do n ' t use it
added a boolean flag ` mHasEndedLauncherTransition ` and modified gesture state checks in ` AbsSwipeUpHandler ` and ` Recent
added charset attribute to HTML elements in HTMLListWriter and HTMLWriter to ensure proper character encoding for HTML files
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator handling in various operators
added a new class ` bug6337518 ` and modified the ` arrowButton ` addition in ` BasicComboBoxUI . java ` to
[ hotfix ] [ test ] fix typo in testrandomaccessbuffer
refactor UserInfoActivity to improve code organization to enhance maintainability and readability of user information handling
added imports and updated broadcast notifications for HomeContentProvider in multiple services to ensure that changes to the content URI are properly communicated to the Home
added functionality to manage a stay pressed state for ` BubbleTextView ` to improve user experience by handling view focus consistently
added a ` Throwable ` parameter to the ` getFallbackResponse ` method across multiple classes to allow for more detailed error handling during fallback responses
removed unnecessary condition checking for _ compile _ only in DumpBytecode . java to simplify the condition for better readability and maintainability
added null check for tags before accessing its length in ChannelUri . java to avoid potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS and modified SQL pattern handling in RegexpUtil . java and TestSqlPatterns . java to improve regex pattern matching
fix : folder name be lose when change the orientation of the device
updated method call from ` getOnlyElement ` to ` getLast ` in ` PythonDslProjectBuildFileParser . java ` and added a
updated the Schedule annotation from " * " to " 0 " in CleaningService . java to simplify the schedule configuration for better clarity
added partition validation logic to handle partitioned tables in TransactionalValidationListener to ensure proper validation of table structure for partitioned tables
added a new feature ` polling ` in ` SnapPuller . java ` to enable polling functionality in the replication process
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL execution in ` ShadowSQLiteDatabase `
simplified the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in multiple test classes to include " failed to inline " to improve clarity and accuracy of test failures
updated keepalive timeout settings in WebClientFactoryImpl . java and modified thread pool initialization in QueuedThreadPool . java to improve connection stability and
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified logging in ` DispatcherTest . java ` to
camel - 14284 : camel - cxf - do not try to attach cxf message attachment if dataformat be cxf _ message
added support for the ' ~ ' character in the ClientUtils class to enhance functionality for user input in the application
camel - 14284 : camel - slack - allow to configure consumer delay a a duration instead of a long
use fireblockharvesting instead of blockid . getblockdropdrops ( ) . getdropdrops ( ) .
updated the layout size in TranscodingTab . java and modified the audio passthrough checkbox formatting in TranscodingTab . java to improve layout spacing
added a new file ` bug8057791 . java ` that demonstrates the use of Nimbus Look and Feel
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and functionality of
refactored subscription manager initialization and added a new test for Ethereum API integration to improve code clarity and ensure proper functionality of the
updated conditional check from ` to . length ( ) > 0 ` to ` to ! = null ` to improve null safety to avoid potential NullPointerException
refactor ParquetFixedWidthDictionaryReaders to handle dictionary reading based on the usingDictionary flag to improve flexibility in reading fields based on dictionary
updated layout calculations for landscape orientation in PortraitPagedViewHandler . java to improve layout responsiveness for landscape orientations
added a new annotation ` Log ` and ` LogInterceptor ` in the ` org . apache . shenyu . examples . springcloud
updated the string concatenation for thread state and trace in QueuedThreadPool . java to handle empty trace cases more gracefully to improve clarity of thread
updated CacheGenerator to include an implementation parameter and modified related methods in CacheProvider to enhance cache functionality by allowing specification of implementations
updated the createReferenceMap method to include totalFrameSize ( ) to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
camel - 16400 : camel - karaf - camel - graphql - add unit test for camel - graphql
test case for bigdecimal detector ( for rfe 2891944 )
removed URL encoding for key and value in HttpClientIntroductionAdvice . java to simplify the code and improve performance by avoiding unnecessary
refactor unsupportedPlatformTool to a separate class UnsupportedPlatformTool to improve code organization and clarity by separating the tool implementation into its own
replaced double loopCount with int loopCount and added time unit conversion for recovery delay to improve performance and clarity of recovery delay calculation
added ` size ( ) ` method to ` FlightConfiguration ` and ` FlightConfigurationImpl ` classes to provide a way to retrieve the
[ drools - 6540 ] fix addressmanager test to work with jdk 1.6
updated UI layout specifications and column specifications in VLCVideo . java to improve user interface responsiveness and layout consistency
updated repository path from ` bisq / bisq ` to ` bitsquare / bitsquare ` in multiple files to ensure the application references the
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " / . m2 " and modified file handling in MBoot . java to ensure correct user configuration and improve
added binding for the GL _ ARRAY _ BUFFER buffer in VertexBufferObjectWithVAO . java to ensure proper buffer management during rendering operations
refactor ServerHttpSecurity class for improved security handling to enhance code maintainability and readability
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers management in HttpClientProperties and updated CasCoreHttpConfiguration to include BasicHeader to enhance HTTP header handling capabilities in the application
add user password not valid exception to thingsboard error response ( # 1181 )
deleted the NoOpConfigPathGetter . java file to the functionality was deemed unnecessary or redundant
replaced Codec . base16Decode ( keyHex ) with Bytes . fromHexString ( keyHex ) in EngineAuthService . java to improve
updated float style handling in FloatUtil . java to ensure proper handling of float values and improve inline block positioning
planning : add import statement to planningfactproperty , planningentitycollectionproperty , planningscore , planningentity , and
updated the ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instead of a ` CaseInsensitiveHeaders ` to improve header management
replaced ` String ` encoding with ` Charset ` in ` ProxyServer ` and ` Realm ` classes to standardize charset handling and improve
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to ensure
replaced ` Long . valueOf ( ) . compareTo ( ) ` with ` Long . compare ( ) ` in ` ExpandableUploadListAdapter
replaced error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to reduce log verbosity and improve performance during debugging
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and functionality of authentication handling
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : check if filter be our own before remove it from the network
added a static method ` wrap ` to ` BCPGInputStream ` and removed the duplicate code in ` PGPKeyRing ` and ` PGP
replaced BufferedOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBase
updated FocusTransitionTest . java file to improve focus transition testing functionality
updated import statement from ` org . gwtproject . core . client . GWT ` to ` com . google . gwt . core .
added a check for MapRedTask before retrieving counters in CounterStatsAggregator . java to ensure proper handling of MapRedTask instances and avoid potential
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use a dedicated method for color changes to improve code readability and maintainability by encapsulating color
changed the parameter from ` false ` to ` hidden ` in the constructor of ` TaskHelper ` to allow for customizable visibility of the task
http : / / issues . apache . org / activemq / browse / amq - 2276 - fix test failure
pdfbox - 4892 : use try - with - resources to prevent resource leak
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler for enhanced scripting functionality
lsra optimization : do n ' t spill in dominator if the loop depth be less than the spill depth
[ micronaut - 5482 ] add a test case to make it easy to run the script .
refactor ` PgResultSet ` and ` PgStatement ` to use ` closeInternally ( ) ` for resource management to improve code clarity
initialize serviceAdvisorType to PYTHON to ensure proper initialization of service advisor type
refactor resolver initialization in GenericDatumReader to use ThreadLocal for better thread safety to improve performance by avoiding multiple instances of the resolver
replaced Collection with List in Path and modified method signatures in PdfContentStreamProcessor , PdfCleanUpContentOperator , and PdfCleanUpContext
replaced ` new byte [ 512 ] ` with ` memo ` and updated assertions in ` SendCoinShieldTest . java ` to improve
added a new method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation based on date and locale to
removed redundant conditional check for argument count in CodeGenerator . java to streamline code for better readability and maintainability
removed the percent parameter from the scroll method calls in multiple classes to simplify the scrolling logic and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity by indicating the class ' s purpose
fix a bug where a boolean can not be cast to an int .
replace ArrayList with a boolean flag for better control over media type handling to improve code clarity and performance by avoiding unnecessary object creation
added a new boolean variable ` false ` to ` TaskView . java ` to control the behavior of the TaskView component
added auto - increment functionality to CreateTableChange and modified LiquibaseDataType to return false to ensure correct handling of auto - increment columns
initialize errorText to a default value of " Command failed due to Internal Server Error " to provide a clearer error message when an internal server
updated import statements and modified command - line arguments in LocalManagementTest . java to enhance performance testing capabilities and improve code clarity
replaced ` add ` method with ` push ` method for currentStatus and boosterStatus in ` BasicEventSimulationEngine . java ` to
added support for binding an AJP connector to a specified port in GitBlitServer . java to enable the server to run on a specified
added type coercion logic for compound types in TransTypes . java and created a new Intersection03 . java file with assertions to ensure
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the test class
added a native method to start the toolkit thread only if it does not already exist to improve thread management by avoiding redundant thread creation
[ gr - 26345 ] optimize bundle content store in parallel .
fix hide surface on opengl on window
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve flexibility and maintainability
added functionality to enable fullNode and solidity HTTP services based on configuration settings to enable conditional service addition based on configuration settings for enhanced flexibility
added ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and updated ` GoogleCloudFirestoreTicketRegistry ` to include it to
refactor Generate class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] remove nullableparameters from json _ format ( jsonmap )
added a new boolean flag ` DOTS _ ONLY ` and modified related conditions in BadgeRenderer , IconPalette , and PopupContainerWith
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow for overriding the
added a test for invalid excluded package patterns in OgnlUtilTest to ensure that ConfigurationException is thrown when setExcludedPackageNamePatterns is called
updated deviceUdid initialization logic to handle " mac " platform alongside " iPhone " in AppleTest and IdbRunTests
updated DefaultHttpClientFilter to replace error logging with warning logging and modified response handling in TestDefaultHttpClientFilter to improve logging clarity and ensure proper
added null checks for mScript before binding and executing it in AllAppsView . java to ensure that script execution occurs only when mScript is
added a new constant ` TEXT _ BURN ` and modified the conditional check in ` Utilities . java ` to conditionally apply the shadow layer
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper resource cleanup after tests are executed
added a retrieval of the parser for the specified name in SecurityNamespaceHandler . java to ensure the parser is correctly associated with the specified name
added a fastpath check in BoundedLocalCache and created a test for it in BoundedLocalCacheTest to improve cache handling logic and ensure
refactor RawConnection to extend WebSocketConnection and implement complete methods in RawConnection and WebSocketAsyncConnection to improve connection management and enhance WebSocket connection handling
added multiple test methods for soft assertions in SoftAssertionsPerfTest . java to enable testing of multiple assertion methods for improved test coverage
added TEST _ FAILURES _ EXIT _ CODE constant and modified the execute method in PythonRunTestsStep . java and PythonTestIntegrationTest .
added conditional logic to adjust xAdvances based on markupEnabled before breaking the loop to ensure proper positioning of elements when markup is enabled
refactor score comparison logic in TestBooleanRewrites . java to use streams for expected and actual results to improve readability and maintainability of
updated the logic for obtaining the enclosing class in TypeHandlerRegistry to ensure the correct superclass is used for anonymous classes
remove unnecessary instanceof check for playersocketconnection . flush ( )
added a check to prevent multiple calls to removeOnDrawListener in the Launcher and LauncherAnimUtils classes to improve performance by avoiding
refactor multiple classes related to CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and modified condition in ReplicaAssigner . java to streamline import statements and
change the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to enable the MEDIAPARSERV
fix beandefinitioninjectprocessor . isacceptable ( ) for method with @ around .
added assertions and verification for permission checks in FolderPermissionBase . java to ensure proper permissions are enforced during table operations
do n ' t publish status if the status be due to the registration state change .
updated the color calculation in PastelColor . java to use a constant for better readability to improve code maintainability and ensure consistent color
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve code readability and maintainability by redu
refactor request method handling to use HttpMethod . fromString for better readability to improve code clarity and maintainability by reducing redundancy
add a parameter to the method to infer the position of the parent phrase if it ' s present .
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
updated class loading logic in Table . java to handle HivePassThroughOutputFormat correctly to ensure correct output format is used based on class name
refactor ChunkListener and BeforeChunk classes to improve code organization and readability
updated bounds check for start and length in DOMBuilder . java to ensure proper handling of edge cases to prevent potential ArrayIndexOutOfBoundsException
updated conditional logic in ClusteringCoefficient . java and modified method calls in EigenvectorCentrality . java and DiameterUI .
camel - 14850 - camel - aws2 - translate : add verifier to check if the service be supported in the specified region
added a new file ` TestClass . java ` implementing an interface with static methods and a default method to demonstrate the use of
camel - 16400 : fix defaultkeyselector to work with property placeholder . thanks to daniel for patch .
replaced instances of ` instanceof ThreadDeath ` with ` throw ` for ` ThreadDeath ` in ` LogResolverBean . java `
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
updated JGit version from " JGit 1.0 . 0 ( 201106090707 - r ) " to " JGit
refactor client key assignment logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
added a transformer parser and a test bean for it to enable the use of method - invoking transformers in the integration namespace
updated BACK _ FACTOR and REWIND _ TIME constants and modified conditional checks in ResumeObj . java to improve responsiveness and accuracy
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` , ` Button ` , and ` Java
updated usage string formatting in UtilityCommands and DocumentationPrinter classes to improve clarity of command usage and ensure non - empty usage messages are displayed
updated attribute name from " collection . map " to " collections . map " in the request to ensure consistency in attribute naming conventions
updated methods in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of seqFiles and unseqFiles to
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
refactor project ruleset synchronization logic in ProjectPropertiesModelImpl . java to improve readability and maintainability of the code
fix synchronization issue in abstractsootfieldref . getfieldunsafe ( )
micrometer - 1560 : use name . tag instead of name . snake _ case in indexbuilder .
added ControllerListener and commandCreator methods to IController , TinyGController , and BackendAPI classes to enhance controller functionality and improve unit handling
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify the rendering behavior of a large horizontal
replace System . out . println with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize output
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
updated condition from ` if ( frameLength = = 0 ) ` to ` if ( frameLength < = 0 ) ` to ensure correct handling
updated return statements in IntFloatMap and IntIntMap from zeroValue to defaultValue in IntFloatMap and IntIntMap classes to ensure consistent
replaced direct icon setting with a Runnable for UI updates in ImageDownloadService to ensure UI updates occur on the Event Dispatch Thread to ensure UI
added null check for registered and demand in HandlerRegistration . java to improve robustness by preventing potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` HtmlNode ` classes , and
added null check for results in RedisDistributedMapCacheClientService . java to avoid potential NullPointerException when results is null
added logging statements to indicate whether MobFileCache is enabled or disabled to improve visibility into cache configuration for better debugging
refactor ColConvCCMTest . java for improved clarity to enhance maintainability and readability of the test code
refactor variable declarations and method calls in Check . java for clarity to improve code readability and maintainability by reducing redundancy
pdfbox - 4892 : avoid unchecked cast , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` jsonData . asString ( ) ` and added a new `
camel - 14284 : camel - file - consumer - do n ' t throw exception if file be not find
added a Runnable that executes on the Event Dispatch Thread in bug6638195 . java to ensure that the Runnable executes on the Event Dispatch
updated maxSize calculation to use getMaxBinaryMessageSize instead of getMaxTextMessageBufferSize to ensure consistency in message size handling
updated steeringValue calculations in TestFancyCar and TestPhysicsCar classes to correct the logic for adjusting steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using ` MessageDigest
updated JdbcSerDe to utilize LocalDate and LocalDateTime for date handling and timestamp conversion to improve date handling accuracy and ensure compatibility with local date and
updated version number from 2 to 3 and refactored metadata handling in ParseData . java to ensure compatibility with version 3 and improve metadata reading
refactor FlywayAutoConfiguration to extend FlywayInitializerJpaDependencyConfiguration and modify entity manager factory bean initialization to improve dependency management
added sorted ( ) method to ClassesImpl . java to ensure the classes are processed in a predictable order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor memory scope handling in TestCloseScope0 . java to differentiate between MemoryScope and ResourceScope implementations to ensure compatibility with different Java
increased the timeout parameter from 500 to 5000 in the test method to allow for a longer period for operations to complete in testing
updated CaptchaChannelProcessorTests . java to improve test coverage to enhance reliability of the verification process
added logic to update the owning collection when a change is made to the item ' s owning collection to ensure that the item ' s ownership is
added a retry mechanism for saving registry cache properties with a maximum of 3 attempts to improve reliability by limiting the number of attempts to save
replace ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` initialization to ensure the correct directory is used for tracking
fixed bug in unusedimports relate to for loop and generic .
added validation for sink descriptors in HiveIcebergStorageHandler and implemented bucketed table checks in IcebergTableUtil to ensure that insert
updated assertions in BootstrapTests to reflect changes in the number of SAML configuration keys and added a check for legacy SAML keys to ensure correct validation of
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for non - static
refactor getAddressVector method to improve clarity and consistency to enhance code readability and maintainability by using a more descriptive variable name
removed multiple WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , WAITING _ TO _ LEAVE _
added IOException handling to Lock release methods and created a new LockReleaseFailedException class to improve error management and provide clearer exception messages during lock release
updated package declaration from test . jdbc . datasource to org . springframework . batch . test to organize test - related classes under a more
fix spel expression transformer to handle unary operator correctly
updated ByteBuddy initialization to use TypeValidation . DISABLED to disable type validation for improved performance
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling by using `
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified lock wait timeout in
[ log4j2 - 1343 ] log4j2 - 1343 can not reference system property of applicationpid
refactor HTTP redirect handling in ServiceApiRequest to improve connection management and error handling to enhance robustness by limiting the number of HTTP redirects and
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and updated MicroserviceFactory to use EnvironmentConfiguration
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX and DB _ PREFIX constants in BaseAndroidTestCase . java and modified database deletion methods in GeocodeHelperTest
updated return statement to retrieve unread count for the current account to ensure accurate tracking of unread items for the current account
added a new test method ` testVirtualThreadPoolPreview ` and modified the ` testVirtualThreadPool ` method in ` DistributionTests . java ` to
added a limit parameter to the getAllOrder method and updated market price key retrieval logic to enforce a maximum limit on the number of orders returned
added null check for the user before retrieving user settings to prevent potential NullPointerException when accessing user settings
updated the method of retrieving the absolute file path in LocalFileSystem and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure
added MAX _ WIDTH and MAX _ HEIGHT constants and updated the bounds setting logic in ComponentBuilders . java to ensure dimensions do not exceed defined
added logging capabilities and deprecated connection manager timeout in CommonsHttpSolrServer . java to improve debugging and control over connection manager timeout settings
removed exception handling for document creation in PrintController . java to streamline error handling for better clarity and maintainability
replaced Optional . of ( String . format ( " save - analysis / % s " , crate " " ) ) with a lambda
added checks for numeric input in SpellChecker and created a corresponding test in SpellCheckerTest to improve spell - checking accuracy for number inputs
removed unnecessary whitespace in the MESSAGE constant declaration to improve code readability and maintain consistency
added methods to retrieve and show file actions in FileDisplayActivity to improve file action handling and user interaction
hbase - 25829 fix npe in log replication time and configuration file ( # 2589 )
updated the parameter order of the update method call in StoreCachedTest . java to ensure consistency in parameter order for consistency
renamed the parameter from ` materials ` to ` theMaterials ` and modified the constructor to use it to improve clarity and consistency in
updated dependency strings in DependencyBank . java for improved clarity and organization to enhance code readability and maintainability by providing more descriptive
added maximum recycled views settings for RecyclerView in AppsContainerRecyclerView to optimize memory usage and improve performance during view recycling
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that building executables
fix baritone control when no location for a mining be available
added imports for ParsedNode and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating ParsedNode and ResourceAccessor functionalities
added null handling support in filter operations and new unit tests for range and equality filtering to enhance query functionality and ensure correct behavior with null values in the data
added type checks for bootstrap method parameters and arguments in JDynamicInvokeExpr . java to ensure correct argument types for bootstrap methods to prevent runtime errors
increase port to avoid test failure
removed formatter clearing from runtimeOptions in CucumberInstrumentation . java to improve performance by avoiding unnecessary formatter clearing
changed the type of ` contacts ` and ` contacts ` from ` List < RegisteredServiceContact > ` to ` DefaultRegisteredServiceContact ` and
added a conditional check for workspace cell padding before adjusting workspace labels to ensure workspace labels are only hidden when necessary to improve layout responsiveness
updated assertions in ReplicationFactorTest to use a new method for better clarity to improve readability and maintainability of test assertions
sulong : add support for pre - initialization in llvm context . patchcontext ( )
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable the tests
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced ` Integer . valueOf ( values [ 0 ] ) ` with ` Integer . parseInt ( values [ 0 ] ) ` in ` Visual
updated error messages in Copy . java and modified file traversal parameters in Files . walkFileTree to improve clarity of error messages and ensure proper
refactor segment name validation logic in HLCSegmentName , LLCSegmentName , and SegmentName classes to improve clarity and maintainability
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
replaced ` DateTime . now ( ) ` with ` new DateTime ( clockReader . getCurrentTime ( ) ) ` in ` DueDate
updated the return statement in TargetCpuType . java to include " - target " and " x86 _ 64 - none - linux - android
added a method ` deleteAllFiles ( ) ` to ` FileDataStorageManager ` and integrated it into ` ManageAccountsActivity ` to enable file
updated command - line help text from " - ? " to " - h " in SchemaCrawlerCommandLine . java to correct the command - line
added a static method ` createSuiteDescription ` to create a ` Description ` instance with a ` displayName ` and ` uniqueId ` parameter to improve
replaced the use of a Hashtable with a direct decoding method for barcodes to simplify the decoding process and improve code clarity
removed the ` sources ` parameter from the ` BuckTarget ` constructor and its usage in multiple classes to simplify the constructor and eliminate unnecessary dependencies
[ grid ] add unit test for zoomcontextfinder . getrange ( )
added support for dependency tracking in JRubyScriptEngineConfiguration and JRubyScriptEngineFactory to enhance control over dependency tracking during script execution
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
patch by jbellis ; review by brandonwilliams for cassandra - 1341
refactor WelcomeWindow to use a cache for image rendering to improve performance by reducing image loading overhead
updated tuner configuration handling and error logging in multiple classes to improve clarity and ensure proper resource management during tuner execution
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enable testing functionality for the
added includeString assignment for " db : hsqldb " in TestFilter . java to ensure compatibility with HSQLDB database configurations
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
trufflestacktrace . materializehostname ( ) should only be call when there be no stack trace .
improve service export for javaci in graal .
add test for duplicate command handler resolution in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ stream ] enable fine - grained resource management in batch job
fix entityfish hook not be able to take damage into account . close # 3563
camel - 14263 : camel - aws2 - * : fix javadoc warning in camel - aws2
rename ` commandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
renamed ` useShortNames ` to ` compressPackageNames ` and updated related methods in ` GangliaReporter ` to improve cl
added a check to return early if there are no items to improve performance by avoiding unnecessary processing when there are no items
added a conditional bean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure a bean is only
replaced StringBuffer with StringBuilder and added properties functionality to XMLLayout to improve performance and enable dynamic property management
added functionality to remove the " responseHeader " parameter from multiple response writers to enhance response handling by allowing the removal of " responseHeader "
fix a bug in escherproperty . getpropertyname ( ) and add unit test for it
updated method call from ` getBuildRuleType ( key ) ` to ` Description . getBuildRuleType ( key ) ` to ensure consistency with the
modified the method to retrieve and modify the scene hierarchy in SootClass . java to ensure the method is called on the correct scene instance
added null check for disputesPerTradeId and disputesPerDelayedPayoutTxId in TradeDataValidation . java to avoid
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified the ` retrieveColumns ` method
wallet : set not _ seen _ in _ chain transaction confidence type to not _ seen _ in _ chain .
refactor body argument handling and header processing in HttpClientIntroductionAdvice . java to improve clarity and efficiency in processing HTTP headers
refactor condition checks in CraftingHelper . java for improved clarity and functionality to enhance code readability and ensure proper handling of JSON
hbase - 26467 region . close ( ) should log a warning if open fails
refactor length comparison logic in Credential . java to use Math . min for better performance to improve readability and maintainability of the code
[ java ] do n ' t check if the subscription have an image if it do n ' t have it .
refactor destroy method to use destroyForcibly ( ) and wait for the process to terminate to simplify the process destruction process handling
added support for Oracle database in TestDefaults . java to ensure compatibility with Oracle database configurations
camel - 14284 : do n ' t try to connect to the store if it be not connect to the store .
throw parsecancellationexception if there be more token in the query that have not be consume
camel - 18131 - camel - aws2 - translate : add georgian , greek , gu to the list of supported
added a method to retrieve the data file name in Model . java and updated model initialization in Voice . java to improve model handling and ensure correct
added emailDomain functionality to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow configuration of email domains for LDAP identity providers
added timeout configuration constants and methods to retrieve read and connect timeouts in ViewRegistry to improve configurability and allow for customizable timeout settings
do n ' t call processdeferredconcepts if there be no concept link to save later
added RedisCategory annotation to RedisServiceRegistryTests . java to categorize tests related to Redis functionality
added JUnit @ NullAndEmptySource and @ NullAndEmptySource annotations and modified the test method to use parameterized tests to enhance test coverage
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the
removed unused imports from multiple Java files to clean up the code and improve readability
updated event handling in ContractEventTriggerCapsule and LogEventWrapper to include event signature and event name to improve clarity of event signatures and
updated file filtering logic in FileTestHelper . java to include session ID suffix to ensure only valid file names ending with " _ " for session
replaced ` g . clearRect ` with ` g . fillRect ` and set the background color using ` g . setColor ( getBackground
added a conditional check for compilation errors before processing invokers in PackageBuilder . java to ensure that compilation errors are properly reported for invokers
removed debug print statements from multiple Java files to clean up the code and improve readability
added a check for NaN score values in TestFieldCacheSort . java to ensure that score comparisons are only performed for valid score values
replaced direct assignment of oldKeys with a Set . copyOf method in DeviceState . java to ensure immutability of the oldKeys set
added a method to handle zero time values in ColumnSnapshotGenerator and created a corresponding test in MySQLIntegrationTest to ensure proper handling of zero time
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` t
updated generic types in FunctionAllGroupHeadsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector to use wildcard generics to
[ kie - issues # 229 ] add test case for edit session model ( # 2296 )
updated the instantiation of msClient to use ' this . conf ' instead of ' conf ' to ensure the correct configuration is used for the Hive
added a check to return early if mModalness equals modalness to optimize performance by avoiding unnecessary processing when the modalness is unchanged
added unit tests for codec capabilities in ShadowMediaCodecListTest . java and implemented native global settings in ShadowMediaCodecList . java to ensure
fix issue # 5460 : confirm button should request focus when enter key
added validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy and XRPMBlit
updated the group separator in FormatData _ uk . java from " . " to " \ u00a0 " to ensure correct representation of
refactor loops handling in AsyncStressTest and StressTest classes to use AtomicInteger for thread - safe operations to improve thread safety and ensure
added functionality to handle beta flavors in achievements and leaderboard fragments to improve user experience by informing users of unavailable achievements
added access , name , and description fields to the SearchMethodVisitor class to enhance the functionality of the SearchMethodVisitor to include additional context information
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve test
reformatted code for setting media duration in DLNAResource . java to improve readability and maintainability of the code
[ hotfix ] [ resequence ] remove unused @ xmlrootelement annotation from resequencerconfig
refactor transaction handling methods in TableReader . java to improve transaction management and resource acquisition to enhance code clarity and ensure proper resource management
flume - 2852 : remove keymanager - type and trustmanager - type from thriftsource and thriftrpcclient
replaced JavaIsoVisitor with TreeVisitor for single source applicability in PrimitiveWrapperClassConstructorToValueOf . java to improve code readability
added exit ( ) method in Blockmania . java to handle tab key events to improve user experience by preventing abrupt termination of the
replaced ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple classes to standardize access specifier usage across the
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging in ` Check . java ` to improve method clarity
updated stripes and stripeStats assignments in OrcInputFormat . java to ensure correct retrieval of stripe statistics based on input format
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated the URL scheme from " http " to " https " in MyhentaicomicsRipper . java to enhance security by
added command - line argument handling for version output in App . java to provide users with information about the current version of the application
fix a bug where export list be miss a comma
added keyboard configuration handling and input connection handling in ConsoleActivity and TerminalView classes to improve user experience by allowing dynamic rotation behavior based on keyboard settings
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ScoreDoc > ` and added a
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 15836 : camel - jbang - allow to specify the class name of the headersmapfactory in the jolokia
updated formatting in JavaCompiler and Diagnostic classes to improve code readability and maintainability
int - 1343 add support for jms namespace handler for outbound gateway ( int - 1344 )
updated the index variable from ` i + 1 ` to ` i2 ` in the expected condition to correct the logic to ensure the correct index
refactor script engine handling in AbstractScriptProcessor and improve error logging in InvokeScriptedProcessor to enhance code clarity and ensure proper logging of
added ` org . postgresql . PGStatement ` to the proxy instances in ` PooledConnectionImpl . java ` and created a test for
do n ' t flush memtables in cassandraiotest because it ' s not thread - safe
changed log level from error to warn for fragment limit in AtomicRemainder . java to provide a more appropriate logging level for memory management issues
patch by jbellis ; review by brandonwilliams for cassandra - 1348
fixed - rblockingdeque and rblockingqueue . poll ( ) method do n ' t handle negative timeout value . # 569
removed unnecessary string concatenation from printMap calls in JobInspectCommand . java to simplify output formatting for better readability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor sorting logic in ChildHolder to use entrySet and class comparator to improve readability and maintainability of the code
[ rocketmq - 3446 ] fix acl client to use session credential ( # 5446 )
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling of
[ zeppelin - 4892 ] fix npe in notebookserver when interpretergroup be null
corrected a typo in the variable name from ` funN ` to ` lt ` in ` ExpressionNodeEvaluator . java ` to ensure
removed public access modifier from verifyIdsAreStable and getNodeId methods to enforce encapsulation within the NodeIdAccessor class
bug cs - 15850 : provide guidance to attach volume to vm before create snapshot policy
removed public access modifier from methods in ItemWriter . java to enforce encapsulation within the ItemWriter class
updated the parameter of the ThingImpl constructor from an empty string to " test " in RoombaHandlerTest . java to ensure the ThingImpl
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory for directory initialization in TestNorms . java to optimize memory usage and improve performance during testing
added a static block to calculate the line height based on the actual height of the buffer to ensure that the buffer ' s height does not exceed
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the wallet functionality
bugfix # 207274 , remove hat _ js _ rohino and hat _ nashorn from oql
remove the menu item from the button group instead of remove it from the menu to ensure the button group is properly removed from the menu
added resolve and replaceTokens methods to AbstractDataImportHandlerTest and Context classes to enhance functionality for token resolution and replacement in the application
updated BSQ block explorer handling in PreferencesPayload . java to improve null safety and avoid potential NullPointerExceptions
added methods to retrieve and set session attributes in StandardSession and Session classes to enhance session management capabilities by allowing retrieval and setting of session attributes
added assertions to verify the presence of a plain bean and its properties in TestDbJson _ List . java to ensure the correctness of the
updated the array size of averages from pageSize to initialPageCount to ensure correct initialization of averages based on the initial page count
refactor BatchCommandLineLauncher to improve code structure to enhance maintainability and readability of the code
added datasource and transaction manager beans to BatchMetricsApplication to enable database and transaction management in the application
change glowrootloghttpservice to implement httpservice instead of unauthenticatedhttpservice
pdfbox - 4892 : add non - stroke java composite to pagedrawer , a suggest by valerybokov
removed synchronization from close method and added synchronization for segment refreshing in DocumentsWriter and IndexWriterPerThread to improve performance by reducing unnecessary
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance the flexibility and functionality of property management in the UI
updated method calls to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` for better readability to improve code clarity
do n ' t update the stored copy of the tree for a full save , because convertsubtree affect it
refactor Affix and Dictionary classes to utilize Pattern instead of String for condition handling to improve flexibility and maintainability of affix logic
replaced diamond operator with diamond operator in KrakenAdaptersTest . java to improve code readability and adhere to
removed the import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code structure to enhance maintainability and readability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary error handling for unsupported data encodings
added MarkerFactory import and modified logging condition in HttpSolrCall . java to improve logging clarity and ensure proper logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata services when instance changes
fix infinite recursion in defaultentityqueryrepository
updated the message construction in HubChangeExecListener to include a check for the changelog ID before displaying it to improve clarity of communication failure messages
added decode hint support and improved error handling in AbstractBlackBoxTestCase to enhance test reliability and provide clearer feedback on decoding failures
updated the ` executeCompilation ` method to return a ` ProcessExecutor . Result ` instead of an ` int ` to improve type specificity and
modified the iteration logic in ObjectStore to set the query range based on the query ' s maximum events to ensure the query does not exceed the
simplified the validation check in the ValidatedLocalValidatorFactoryBean class to improve code readability and maintainability
fix entityawareworldprovider . cleartemporaryblockentities ( ) to clear all temporary block entity .
intrinsifyarraycopyphase : do n ' t check if the destination type be the exact type of the source type .
removed unused logging configuration in TestCoyoteAdapter . java to improve code cleanliness and reduce unnecessary logging overhead
removed the ` WantedAnywhereAfterFollowingInteraction ` exception class and its associated tests to simplify the exception handling by eliminating
added null checks for ownerAddress and keyAddress in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure that only valid accounts
refactor scriptlauncher to use a sortedmap instead of a comparator
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
replaced ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve consistency and clarity in property
updated the instantiation of ` implClass ` to use the interface class ' s class loader to ensure that the class loading process uses the correct class
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
updated export namespace declaration logic to use a conditional check for definition scope to improve clarity and maintainability of the generated TypeScript output
replaced EmptyServerHandler with AbstractHandler for handling HTTP requests to improve request handling by copying the input stream to a null output stream
simplified the list of listeners in HelloInput . java by removing unnecessary array creation to improve code readability and maintainability
fix npe in abstractsqmpath when the lhs be null
updated package structure for test classes in the oc framework to improve organization and clarity of test files
refactor BufferedImage initialization and filter handling in AwtCanvas . java to improve performance and clarity when creating a new BufferedImage instance based on the
[ gr - 36400 ] fix jvmci native library location for hotspotgraal
[ beam - 8470 ] remove dataflowportabilityapiunavailable from pardotest
replaced ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl .
added serialVersionUID to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
fix javadoc error report by ci
log a warning if max size configuration do n ' t allow any data in the map
updated return statements to use " LST " instead of " AST " in multiple Java files to standardize terminology and improve clarity in
refactor scoring logic in ThreadedAcousticScorer . java to improve readability and maintainability to enhance code clarity and
replaced an AssertionError with a null return statement in NetHooks . java to simplify error handling by avoiding assertion failures
updated method calls in ApplicationControllerFluentLeniumTest . java to use window ( ) . title ( ) instead of getServerAddress ( )
added default makestring methods to ParallelIterable , RichIterable , AbstractSynchronizedRichIterable , AbstractMultiReaderMutableCollection , and AbstractMulti
replaced hardcoded ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` Oidc
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer and related classes to enhance the filtering of weak associations during analysis
refactor Deflater class to improve compression efficiency to enhance performance and reduce memory usage during data compression
added error handling for Throwable in Font . java to ensure that IOException is thrown for potential issues during font processing
added a null and empty content check in VersionTypeBinding . java to ensure a default version is returned when the content is null or empty
refactor NearbyListFragment to directly return the places list from loadAttractionsFromLocation to simplify the code and improve readability by
camel - 14284 : camel - core - use case - insensitive comparison for content type in mailconverters
add support for openssl 1.1 . 0 and 1.2 . 1 in opensh private key spec .
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding folder name suggestions to enhance flexibility in folder name
replaced specific Hibernate annotations with a wildcard import and modified entity retrieval in InheritanceCacheTest . java to streamline import statements and enhance
updated import statement in ConnectOAuth2RequestFactory and added user approval request handling in TofuUserApprovalHandler to ensure compatibility with the latest
updated InfluxNamingConvention to use delegate . tagKey ( key ) instead of delegate . tagKey ( key ) to ensure consistency in tag
add a dump ( string , double , double ) method to oneproblemhere and twoproblemhere
updated the key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the new cookie structure
added a static method ` classMetadataUnsupported ( ) ` to ` Platform ` and updated its usage in ` Subject ` and ` Platform ` classes to
added functionality to enable and disable the clearing of all tasks in OverviewActionsView to enhance user experience by allowing users to easily clear all tasks
updated timeout duration and modified cluster version creation logic in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve clarity and ensure proper
remove memoryleaktest due to memory leak
updated the return statement in ServletTester . java to use InetAddress . getLocalHost ( ) . getHostAddress ( ) to improve flexibility in
added a check for the " MVdWPlaceholderAPI " plugin in ServerListener . java and modified the BAN _ DELETER setting
[ hotfix ] [ test ] add assertclustersizeeventually to abstractpartitionassignmentscorrectnesstest
added a singleton holder for FFIProvider in FFIProvider . java to ensure a single instance of FFIProvider is used throughout the
added a test method for hierarchical file listing in BatchProcessTest . java to ensure that hierarchical file listing behaves as expected in the batch processing
added null checks and improved null handling in MongoTemplate to enhance robustness and prevent potential NullPointerExceptions during object saving
replace directInputCount and directSuccessorCount with NODE _ LIST in Position initialization to improve clarity and maintainability of the code by using
added a BigDecimal field ` accTradeValue ` and its getter method in ` BithumbTicker ` and updated related tests to use it to
updated log messages in RealtimeSegmentDataManager to use segmentName instead of a hardcoded string to improve logging readability and maintainability by
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replaced ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex and FixedByteSVMutable
refactored multiple dictionary - related classes for consistency to improve code maintainability and readability across the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
camel - jbang - fix test failure on slow ci server
updated conditional check from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java `
updated the random value generator from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in AutologinIT . java to
added a check for UniqueConstraint in StandardObjectChangeFilter to ensure correct matching behavior for unique constraints
updated string manipulation and language code handling in MediaDetailFragment . java to improve code readability and maintainability by using a HashSet for language codes
do n ' t swallow arrayindexoutofboundsexception in findbugs2
add a reference filter to the listimages api ( # 4358 )
http : / / issues . apache . org / activemq / browse / amq - 2370 - remove the bridgeerrorhandler
added checks for " # ifndef " and " # endif " in OpExclusionUtils . java and set all ops to true if
added a return statement that returns false in DatabaseCommand . java to ensure the method correctly indicates a failure condition
updated HonestPoliticianExample . java to include multiple Politician entries for clarity to improve code readability and
[ zeppelin - 4396 ] fix npe in beanshellinterpreter when initfile be null or empty
updated RestletComponent to use getPort ( ) method for port assignment and added conditional logic for URL formatting to ensure proper port assignment based on the
removed unused imports and added a case for WALL _ SIGN in the SchematicFormat . java file to streamline the code and improve
added a system property for " hive . query . max . length " in QTestUtil . java and modified overridden configurations in SessionState .
updated access modifiers and refactored HTTP configuration initialization in WebServer and related classes to enhance encapsulation and ensure consistent server version settings
updated sink processor names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple
updated HiveConf to check if " spark . app . name " is not equal to " spark . app . name " and modified SparkConf
updated variable name from ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve code readability and maintain
simonstewart : fix the window . restore ( ) and window . maximize ( ) method in windowtest . java and add
refactor methods in LocalCellProviderFactory and AbstractEmbeddedCellBuckOutInfo for improved clarity and functionality to enhance code maintainability
added an assertion to check if the error message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that
updated the calculation of table offset and length in TrueTypeFont . java to ensure that the values remain within the valid range of 0x7
added a customization method to the DirectMethodHandle class to ensure that the form ' s customized state is validated before use
refactor buffer initialization and coordinate checks in LineChartRenderer . java to improve code readability and maintainability by using descriptive variable names
refactor flavor handling in AndroidBinaryDescription to improve clarity and maintainability to enhance error handling for unsupported flavors in the build process
updated buffer assignment from offset to i in LwjglGL11 . java to ensure correct buffer assignment for improved performance
added new classes Property , PropertySuper , and TestClassResolutionFail for handling LinkageErrors to provide a base class hierarchy and test class resolution
do n ' t remove shutdown hook if completely shutdown be enable
updated FilterChainProxy to use FilterChjainProxy and removed the URL variable from the VirtualFilterChain constructor to simplify the class structure and
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( intermediateResult . elements ( ) , 0 , size )
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified table retrieval logic in QueryTypeAnalyser to ensure that
replaced the instantiation of ` baseType ` with ` null ` in ` DatabaseInfoRetriever . java ` and initialized literalPrefix and literalSuffix to
updated link references in multiple Java files to use ` @ link ` annotations to improve code readability and adhere to best practices for linking
replaced instances of ` ObjectEqualEvaluator ` and ` ObjectNotEqualEvaluator ` with ` ObjectContainsEvaluator ` and ` BooleanNotEqualEvaluator
updated paths in BuildCommandIntegrationTest and ConfigSettingIntegrationTest to use " / / osx _ config " instead of " / / config
added sound effect functionality to the AllAppsView class to enhance user interaction by enabling sound feedback
changed the exception type from Exception to IOException in the main method to improve error handling by providing a more specific exception type
added setGranularityEnabled ( true ) method to leftAxis in BarChartActivitySinus . java to enable granularity functionality for left - axis
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by encapsulating version comparison logic
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory creation and OS support checks to improve test reliability and ensure compatibility with different
added ` close ( ) ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` PreparedStatementTest ` classes
[ log4j2 - 1343 ] fix intermittent test failure in socketserverfunctionaltest
[ beam - 4142 ] fix checkstyle issue in hadoopresourceid
removed unused import statements for sprite batch constants in IsometricStaggeredTiledMapRenderer . java to streamline code and improve read
removed redundant call to handleService . unbindHandle ( context , item ) in ItemServiceImpl . java to streamline the code by elimin
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the codebase
removed unnecessary condition checks for mDownHitTarget in OtherActivityTouchConsumer . java to simplify the code logic for better readability and maintainability
updated NavbarButtonsViewController to use UI _ MODE _ NIGHT _ MASK for dynamic UI mode adjustments to improve button appearance
replace abort ( ) with throw ( ) in PolyBenchLauncher . java to ensure that the error is properly propagated to the caller
refactor index handling in ClassWriter to use a separate variable for refKind and memberIndex to improve code clarity and maintainability by reducing
added BlockFormattingContext parameter to the findBox and findElementBox methods in BasicPanel . java to enhance layout handling by incorporating
refactor WorkerProcess and WorkerShellStep to improve error handling and output formatting to enhance robustness by providing standard error messages when launching processes
added null operator checks and exception handling in CheckedListReplaceAll . java to ensure robustness by preventing NullPointerExceptions during operator processing
added conditional test for writing to the socket in SslConnectionTest . java to ensure that the write operation behaves correctly based on the test state
added listener registration and modification logic in DeviceFlag and FeatureFlags classes to improve listener management and ensure immutability of the defaultValue variable
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
focus date box use javascript so that datepicker will appear .
refactor synchronization and subscription logic for own trades and user trades in KrakenStreamingTradeService . java to improve code readability
replaced System . err . println with System . out . println in ChangeableUrls . java to standardize output formatting for better readability
refactor SparseRowMatrix to use a boolean for random access instead of RandomAccessSparseVector arrays to enhance flexibility in matrix creation by allowing
bug cs - 15829 : check for null poolid before persist usage event
refactor input stream handling in Utilities . java to dynamically determine the path based on job configuration to improve flexibility and maintainability of file input
[ beam - 8470 ] use guava v26 _ 0 _ jre instead of com . google . common . map . ImmutableMap in
added a resetInternalState method to the MemoryCallGraphBuilder class to ensure memory cCT provider is properly registered before execution
fix npe in conferencechatmanager due to miss multi - user chat operation
added file write validation to ensure the file can be write to prevent illegal user action exceptions
added a new ` FolderSyncActivity ` class and integrated it into the ` DrawerActivity ` to enable users to navigate to the folder sync
[ hotfix ] [ network ] close network buffer pool in sequentialchannelstatereaderimpltest
fix a bug in spanishtreenormalizer when there be a comma in the word
replaced the usage of ` pointReader . pointValue ( ) ` with ` heapPointWriter . getPackedValueSlice ( i ) `
added a new ` LocaleRandomizer ` class and its corresponding test class to provide functionality for generating random locale values based on a specified seed
tika - 3745 -- add unit test for mime type for x - font - printer metric
[ netbeans - 4892 ] add version 10.0 and 9.0 for auto - upgrade
removed the doPrivileged block from the TCPTransport class to streamline the code for better readability and maintainability
added a default value of 0 for the read timeout parameter in the socketWrapper . read method to ensure a default value is used when reading the
increased the initial delay from 120ms to 600ms in TimelineMetricConfiguration . java to improve responsiveness by allowing more time
updated error message formatting in SelectStatement . java to improve clarity and consistency in error reporting
added date handling functionality to the ThirdEyeJiraClient to ensure proper parsing of date values in the issue builder
refactor priority handling in several classes to use a new PriorityGenerator class to improve code organization and enforce better parameter validation for priority attributes
added a constant for the maximum scalar replacement code size and updated the condition for scalarReplace to ensure scalarReplace is only evaluated when the entire class
added a new media property ` Media . DATE _ TAKEN ` and modified the folder and file sorting logic to include it to support the
updated drawing calculations for images in TexturePacker2 . java to adjust image positioning for improved rendering accuracy
refactor WebSocket upgrade filter handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve code clarity and maintainability by
added shutdown calls for validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added ` RawJsonRequestBodyAnnotationProcessor ` to the ` JaxrsSwaggerGeneratorContext ` and created a new ` RawJsonRequestBodyAnnotationProcessor
added a new method ` newTarget ` to the ` LoggerUtils ` class to create a new ` Target ` object with specified target type and
replaced direct instantiation of ` ListBeanContainer ` with ` new ArrayList < > ( entries ) ` in ` BeanContainer . java ` and
hbase - 25829 fix testmetricsregionserver to use blockcachemetrics instead of blockcounthit
camel - 16400 : added oncompletion to the cachedoutputstream so it can be close when the exchange be complete .
added device ID setting to the position object in TeltonikaProtocolDecoder . java to ensure the position is correctly associated with the specified device
replaced direct calls to ` Files . readFirstLine ( buildFile . toFile ( ) , Charsets . UTF _ 8 ) ` with
added a null check for the operator in visitAssignop and created a new test class FailOver15 to ensure proper handling of operator initialization and
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified the ` onCreate ` method in ` BaseActivity ` to
fix isochroneresource . getconnectedpolygon ( ) to return the first connected polygon that contain a given point
modified DrillViewTable to accept a path parameter and modified related methods to enhance flexibility in view handling by allowing different view paths
updated the PooledByteBufAllocator constructor to include additional allocator configurations to enhance memory allocation flexibility and configuration options
changed the type of the return statement from double array to short array in ObjectInputStream . java and added a new class CloneArray . java with a
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads used for low - level IO thread pool to allow
added conditional checks for Java version 8 and 11 in SecurityServicesFeature . java to ensure proper initialization of SSL classes based on Java version
updated latitude and longitude range checks in LatLonGrid . java and added a new test for growing polygons in TestLatLonGrid . java
refactor ExpectedConditions to use a WebDriver instance instead of a variable to improve code readability and maintainability by using a more descriptive variable
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its access level to private to enhance functionality by allowing
added a test for retrieving the enclosing object of SomeInnerClass in the ReflectorTest to ensure proper functionality of inner class references in the reflector
added " auto _ generate _ android _ facet _ sources " configuration to IjProjectBuckConfig to enable automatic generation of Android facet sources
refactor updateHub and updateHubForRollback methods to use a single message variable for better readability to improve code maintainability and clarity
added properties support to Link class and corresponding tests in QuickLinksConfigurationModuleTest to enable dynamic property resolution for links in the application
updated the ` toString ` method in ` YamlConfigFileDTO ` to use ` Yaml . dump ( this ) ` instead of ` @ EqualsAnd
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCall in AwaitableServerClientCallConfiguration . java to improve type safety
refactor ` forName ` methods in ` Class . java ` to utilize ` CallerSensitiveAdapter ` and improve class loading logic to enhance class
replaced usage of Hamcrest matchers with Hamcrest ' s isEmptyOrNullString for better readability to improve code clarity
replaced ` LinkedBlockingQueue ` with ` LinkedBlockingQueueEx ` in ` GroupExecutor . java ` to improve compatibility with modern Java
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated imports and refactored HumanTime class to utilize Jchronic options and Calendar for date validation to improve code clarity and
fix miss spark _ isolated and spark _ recessive pattern in banners
updated method signatures to use ` getUri ( ) ` instead of ` exchangeSpecification ` across multiple services to ensure the correct URI is used for proxy
removed redundant print statements in RecordGenerator . java to streamline output for better readability and maintainability
( chore ) camel - kafka : remove auto - commit feature for kafka consumer
removed the releaseLock ( ) call and added outputStatement ( sql ) calls in LoggingExecutor and StandardLockService to streamline lock management and
added @ SuppressWarnings ( { " unchecked " , " rawtypes " } ) annotations to AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to
added synchronized keyword to several methods in Database . java to ensure thread safety when accessing shared resources
camel - 14284 : camel - spring - boot - auto - configuration - maven - plugin should check for mutability of nested property .
updated the method call from ` getVirtExTicker ( currencyPair . baseSymbol ) ` to ` getVirtExTicker ( currencyPair . counterSymbol
camel - 13850 : fix checkstyle violation in camel - core
replace UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor
added synchronization around date and number parsing in DefaultJobParametersConverter . java to ensure thread safety when accessing shared resources
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
changed the height map height scale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of the height map
replaced ` equals ` method with ` notSame ` in ` SecurityConfig ` and updated assertions in ` SecurityConfigTests ` to ensure that
updated the default value of ` dumpPartitionId ` from ` false ` to ` false ` to ensure consistent behavior by defaulting to a non
added UTXOSetTest to verify transaction output handling in UTXOSetTest . java to ensure correct functionality of UTXOSet
[ java ] ignore unused variable name that start with " unused "
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for job parameters overriding previous restart parameters in JsrJobOperator to ensure correct job parameters are used during job restarts
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` in ` Database
removed redundant initialization of ` principal ` in ` JaasAuthenticationHandler . java ` to streamline the code by eliminating redundancy
refactor core closing logic to use a separate executor for better resource management to improve resource management and ensure proper shutdown of Solr cores
added visibility logic to mActionsView based on fullscreen progress to improve user interface responsiveness based on fullscreen progress
refactor parameter handling in RunIdIncrementer to ensure a fresh JobParameters instance is used when parameters are null to improve code clarity and
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added tests for retrieving matched devices in SchemaRegionTestUtil to ensure the correctness of matched devices functionality in the schema region
[ 3.0 ] add warn log for metric event error ( # 10729 )
added a conditional check for ` max ` in ` EigenvectorCentrality . java ` and created a new ` Eigenv
updated registry creation and naming logic to use a random port instead of a hardcoded port to improve flexibility and avoid conflicts with different registry ports
refactor geometry data creation to use a unified method for better readability and maintainability to improve code clarity and maintainability by reducing
change amplifier from 2 to 0 in BlockEntityBeacon . java to ensure correct amplifier is set for the entity
refactor TubeCalc class to improve code readability to enhance maintainability and reduce complexity
( chore ) camel - http : disable health check by default
added validation for groups in DefaultValidator to ensure that only interface and non - interface classes are included in the groups list to prevent runtime errors
added @ key headful and @ run main / timeout = 500 bug8057791 . java to address multiple test failures related to the
make thread daemon to allow speedment application to exit via main method completion fix # 322
simplified version string handling in ItemLexicon . java to improve readability and maintainability of the code
added reflection access check in JavaAdapterFactory . java to enhance security by ensuring proper access control for the type
add lazysessioncreation = true to the test so that it do n ' t interfere with other test .
updated ` initIOContext ` method in ` CombineHiveRecordReader ` , ` HiveInputFormat ` , and ` RCFileRecordReader
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a method ` configurationChanged ` to ` FileStore ` and modified root removal logic in ` JavaLanguageServer ` and ` ScanClassPath `
added error handling for session callback registration and unregistration in PackageInstallerCompatVL . java to improve stability by preventing application crashes
removed the ` src / test / org / apache / lucene / index / index . cfs ` and ` src / test / org
[ hotfix ] [ runtime ] add factory method to akkarpcserviceutils
added retry configuration for mapreduce . map . maxattempts in TestExportSnapshot . java to control the maximum number of attempts failed during export
pdfbox - 4892 : do n ' t set non - symbolic flag for font - specific encoding
added a new test class ` SslConnectionTest ` for verifying SSL connection behavior to ensure that the SSL connection is properly closed before filling the
added validation for address family types in InetAddress and NetworkInterface classes to ensure that only valid IPv4 and IPv6 addresses are processed to improve error handling
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure correct serialization of dates in various locales and timezones
refactor Message class to improve code readability to enhance maintainability and reduce complexity
nifi - 1796 : fix putdatabaserecord to not generate the sql when there be only one record
updated loop condition in TableOutput . java to correct the calculation of the maximum width to ensure proper alignment of output elements based on the current width
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a priority setting for format string checks in FormatStringChecker . java to ensure correct handling of format strings with empty parameters
[ java ] ignore non - final loop variable in a for - each statement .
updated PDFExporter to use PDF version 1.5 and enhanced PDF export options in tests to improve compatibility and functionality of PDF exports
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping of role attributes to granted authorities in the user details process
cloudstack - 1341 : add ldap . read . timeout configuration to ldap . configuration ( # 2342 )
refactor TestDescription class to improve code organization to enhance maintainability and readability of the test cases
correct ` ` form ' ' typo ( # 6855 )
replace ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to avoid unnecessary memory allocation
added a condition to check if the state handler is invalidated before proceeding with gesture handling to ensure that the gesture handler does not proceed when the
updated the maximum distance calculation for folder creation in Workspace . java to improve the responsiveness of the UI by adjusting the maximum distance based
updated property handling in OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve code clarity and maintainability by using
refactor Testjsig class for improved readability to enhance maintainability and reduce complexity
update mana calculation to use stack . getCount ( ) instead of a hard - coded value to improve accuracy in mana calculations based on the
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to the serialVersionUID field to suppress warnings related to serialization compatibility
refactor validation logic in DataRegion . java to improve clarity and error handling to enhance code readability and ensure proper cleanup of resources when
added new classes ` Switch21 ` , ` Switch19 ` , and ` SwitchPatternMatching ` , and ` SwitchNull ` , and `
updated error message formatting in ComparableSubjectTest . java to improve clarity of error messages for better debugging
added a standalone flag to the XML content in StreamHelper . java and created a corresponding test class in TestStreamHelper . java to enable the
updated array size validation and improved error message formatting in Int2ObjectCache . java to ensure proper array size validation and enhance clarity in
added order handling for security filter chains in WebSecurityConfiguration to ensure proper ordering of security filter chains during configuration
removed the TimeInForce . GTC parameter from the OrderType constructor in BinanceTradeService . java to simplify the method signature and improve
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implementing Randomizer to simplify code and improve maintainability by leveraging
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure compatibility with
camel - 14284 : camel - jms - provide documentation and parameter schema for camel - jms component
added error handling for NoSuchFieldError in SourceUtils . java and created a new TestGetBound class in TestGetBoundTest . java to
refactor LeafFilterFactory to encapsulate the logic for creating FilterPredicateLeafBuilder based on Parquet type to improve code readability and maintain
resolved - issue batch - 1206 : fix artifact name in batchpropertybeanpostprocessor ( # 1206 )
added a loop to read all available certificates in HttpsSegmentFetcher to improve certificate handling by logging certificate serial numbers and issuer DN
modified the logic for retrieving the default boolean value in Config . java and added a new DnsFallback . java class for testing DNS fallback functionality to
ww - 3506 add exception to defaulttheme when write tag fails
changed the type of the ` success ` property from ` boolean ` to ` String ` and updated its usage in the ` DepositAddress
replaced a custom Privilege implementation with a lambda expression in WindowsSecurity . java to improve code readability and ensure proper resource cleanup
removed " address " and " phone " scopes from the builder in CommonOAuth2Provider and its tests to simplify the scope configuration by focusing
refactor the submit method to use a new Start class for managing the start state to improve code readability and maintainability by encapsulating the
added hue and saturation constants and updated request parameters in WLedHandler to handle color hue and saturation based on segment index to improve color color representation
replaced the isValidCaller method with a static final Set of valid caller names to improve code readability and maintainability by utilizing a central
added a method ` caseJSRInst ` to the ` InstSwitch ` class to enable handling of JSR instances in the switch logic
added transaction management to the subscription activating subscriber to ensure that only one subscription can be activate at a time
refactor database update and insert logic in DBMSProcessor . java to improve code readability and handle SQL exceptions more effectively
added elevation property to ContactItemInflater for devices running Lollipop and above to improve contact appearance on devices running Lollip
renamed ` typeInformation ` to ` identifier ` in ` Identifier ` class to improve clarity and consistency in naming conventions
added privileged actions to file operations in SandboxFileManager . java to enhance security by ensuring file operations are performed with the appropriate privileges
refactor Groovy parser and printer to correctly handle the " [ " and " ] " operator in Groovy expressions to improve clarity and correctness
updated warning message to include the exception class name instead of the exception message to improve clarity of the warning message for better debugging
updated character reading and compression logic in RecordInputStream , UnicodeString , and TestUmlatReadWrite classes to improve clarity and correctness
added a test for downloads file with Norway characters in the name to ensure that the download functionality correctly handles Norway characters in file
replaced RuntimeException with CancellationException and added cancellation methods in AsyncResource and FingerprintScannerSample classes to improve error handling and provide clearer feedback
[ hotfix ] fix npe in timedmemberstatefactory when statistics be null
added a new test method ` removesObjectFromExplicitCollection ` in ` MongoTemplateTests . java ` to verify the removal of objects from a
updated copyright year from 2015 to 2022 in multiple Java files to reflect the current year and ensure compliance with copyright standards
[ beam - 1341 ] fix platform independent line separator in coder # isdeterministic
added a boolean variable ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in RecentsView and Paged
refactor HiveIcebergMetaHook to use a centralized map for COMMON _ HMS _ PROPERTIES to improve code maintainability and
refactor address checking logic in multiple classes to use a new method ` isAddressInUse ` to improve code readability and maintainability by redu
added a command line argument to the TestNestmateAttr class to configure the test class path for execution
replaced logger import with verbose _ schema in Grep . java to improve logging clarity by using a more descriptive variable name
added @ Override annotation to several classes that implement the interface to ensure proper method overriding and improve code clarity
add nested use savepoint support to transactionmanager and scopetrans
replaced a fetchSize variable with a ThreadLocal < Integer > for thread safety in QueryProcessExecutor and related classes to improve thread safety and
[ java ] use noopidlestrategy instead of backoff idle strategy for embedded pingpong .
refactor handling of blocking calls in HttpClientIntroductionAdvice to use a new handleBlockingCall method to improve code readability and
added HDP _ VERSION property handling in SliderAppsViewControllerImpl . java to dynamically set the HDP version for application configuration
refactor JavacProcessingEnvironment to store ServiceLoader and implement close methods for ServiceIterator to ensure proper resource management and prevent potential memory leak
added DeepCloner class and modified parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to enable deep cloning
added binding for JETTY _ SHOW _ STACKTRACE to false in ResourceBase . java to control stack trace visibility for debugging purposes
added type checking for OBJECT in NativeObject . java to ensure proper handling of unsupported object types
replaced instances of ` sun . jvm . hotspot . types . OopField ` with direct references to ` OopField ` to
updated ` JwkKeyListView ` to use ` PublicKey ` instead of ` RSAPublicKey ` and updated serialization logic to support additional key
use only writable boot image heap when spawning isolates
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for unsupported MBean features
removed unused import of OrderClassLoaders in MavenPluginCollector . java to clean up the code and improve readability
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator
http : / / issues . apache . org / jira / browse / amq - 61616 - add example for activemq
updated the sendCommand calls to include ` byteArrayMin ` and ` byteArrayMax ` based on ` min ` and ` max ` values to ensure
added handling for empty indices in Protobuf annotation serialization to ensure proper representation of empty indices in the graph representation
[ java ] remove correlationId from the async command id set when it be no longer need .
added logic to save and handle file conflicts in FileDataStorageManager and FileDownloader to ensure proper handling of file conflicts during storage operations
updated generic types in ExecutionContext and related classes to improve type safety and code clarity
replaced calls to ` StrUtils . splitFileNames ( ) ` with direct calls to ` splitFileNames ( ) ` across multiple filter
added support for remarks reporting and useInformationSchema for Oracle and MySQL drivers to enhance database configuration flexibility for different database types
updated the instantiation of MethodInterceptor to include a handler and added serialVersionUID to ensure compatibility with serialization and suppress warnings related to deprecated methods
replaced ` Date ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time tracking in ` FileChangedExclusiveRead
[ hotfix ] [ table - planner - blink ] wrap executioncontext class loader in executioncontext
added a runOnUiThread method to handle buffer changes in TerminalView and TerminalTextViewOverlay to ensure UI updates occur on the main thread
refactor configuration processing logic in ConfigDispatcher . java to improve code readability and ensure proper namespace handling
refactor freeze operation handling in OperationActions and OperationRegistry to improve clarity and maintainability of the freeze operation logic
added support for InsecureTrustManagerFactory in TlsConfig and updated TlsUtils to utilize it to enhance security by allowing configuration of SSL trust
refactor code to use a temporary variable for the source path in searchSubPackages method to improve readability and maintainability of the code
updated ` ExporterGDF ` to use ` EdgeColumnsGDF ` instead of ` nodeColumns ` and added a new ` edgeId
added cascade type to the OneToOne annotation in DefaultUserInfo . java to ensure that related entities are automatically removed from the database
updated equals and hashCode methods in Message class to use Arrays . equals ( ) instead of getMessageId ( ) . equals ( ) to improve performance
updated character encoding in AsyncProvidersBasicTest . java from " ? ? ? ? " to " \ u017D \ u017
[ hotfix ] [ runtime ] remove unused iskeyserializertypevariablesized method
added a method to check static permissions in ProtectionDomain and updated SubjectDomainCombiner to utilize it to ensure proper handling of static permissions
added null check for recipe in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers
refactor parsing logic in Parser . java to improve readability and maintainability of the parsing logic
added a method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to
added a new file ` Issue596 . java ` and modified ` Status . java ` and ` HttpHandlerImpl . java ` to handle
updated bitwise operation from ` ~ ( 1 < < bitIndex ) ` to ` ~ ( 1L < < bitIndex ) ` to ensure
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the import layout logic
refactor ConsoleUIService to improve input handling based on environment variables to enhance flexibility in terminal configuration based on environment settings
replaced Mockito assertions with Mockito ' s TestAccountManagerCallback for testing account manager futures to simplify the test setup and improve readability
replaced the enclosingType assignment with a direct return statement in the AnalysisType class to simplify the code and improve readability by eliminating
updated method names from ` get * ` to ` entries * ` in ` Pairs . java ` and ` InPairsExpression . java `
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the method call by eliminating unnecessary timeout configuration
fix ( mqclientinstance ) : fix npe when consumerinfo be empty or not ( # 4805 )
[ java ] generate the source identity in the driver conductor to avoid race condition .
added a new file ` TopTabAction . java ` that implements a toolbar for displaying the top - tab to enhance the user interface by providing
camel - 14284 : dynamicrouter should use reactive executor to avoid deadlock .
replaced ` TestCase ` with ` JUnit ' s ` @ Before ` and ` @ Test ` annotations in ` AggregateItemReaderTests
updated the constructor of Object $ { valueTypeCap } Procedure to use generics to enhance type safety and improve code clarity
added functionality to retrieve and display the number of wikidata edits in the AchievementsActivity and updated network URLs in Networking
added validation to ensure the length parameter is within the allowable range of Short . MAX _ VALUE to prevent illegal argument exceptions
[ dumb ] do n ' t accumulate bug for long . min _ value .
refactor CategoryDataset , CategoryRangeInfo , DefaultCategoryDataset , IntervalCategoryDataset , IntervalToPieDataset , DefaultCategoryDataset ,
updated InvalidTopologyTemplateException to include acceptable credential type values to provide clearer error context for invalid credential types
updated random number generation parameters in TestVectorUtil . java to ensure consistent random number generation across elements
changed the return type of the compareBy method from int to long in DateUtil . java to improve precision and performance of date comparison logic
added SSL property handling in TestUtil . java and updated its usage in PGPropertyTest . java to enable secure communication by allowing configuration of SSL
enable safebrowsing in ChromeDriverFactory and add tests for various file types in FileDownloadToFolderTest and FileDownloadViaProxyTest
added null checks before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in DLNAResource . java to ensure proper handling of transcoding based on configuration settings
added empty check for ` gherkinRows ` and modified return logic in ` DataTable . java ` and ` TableDiffer . java `
added a custom ignore tag to the RobustJavaMethodParser class to exclude specific native code from processing
camel - 13850 : camel - jdbc - optimizelocking - aggregation should throw optimisticlockedexception instead of runtimeexception
fix ( config ) : add parent property to configproperties ( # 8898 )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments for toolbar and fragment container to improve compatibility with
deleted the ClusterNodeInfo . java file to the functionality is no longer needed in the codebase
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for ciphersuite selection in ServerHandshaker . java to improve visibility into ciphersuite selection for debugging purposes
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates appropriately to improve user experience by
added a HashMap for node labels and modified logic in ImportContainerImpl to handle duplicate node IDs with labels to improve validation and error handling for node
added a new file R2303044ListSelection . java that implements a GUI testing framework for list item selection to facilitate
[ java ] use hasclienttimedout instead of checkkeepalivetimeout .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify the behavior of compound properties with
added rowCounts to track the number of rows processed in StatsRulesProcFactory to improve accuracy in calculating the new row count based on parent statistics
updated path handling and query parameters in SpringBootDocBuildTemplate . java to improve clarity and correctness in handling API method paths and request
fix checkstyle issue in notificationmanager and notificationserviceimpl
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the ` createBuildEngineDelegate ` method to
improve error message when parse json fails
added a conditional check for debug logging in WidgetsModel . java to ensure logging only occurs in debug mode to improve performance by avoiding unnecessary
refactor Console and Scanner classes for improved clarity to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to
added verification for the ` send ` method in ` SimpleMailMessage ` and ` MimeMessage ` classes to ensure that the ` send ` method
added exit and quit properties to Global . java and removed them from ScriptingFunctions . java to enhance functionality by allowing the " quit " function
http : / / issues . apache . org / activemq / browse / amq - 2370 - remove unused variable
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
cloudstack - 1341 : fix npe in vmware context when no cookie be find
corrected the order of authority assertions in ResinAcegiAuthenticatorTests . java to ensure the correct authority is used in the cast result
updated ByteUtil . bigIntegerToBytes method to include a 32 - bit parameter to ensure proper memory allocation for key operations
updated system property key from " fml . disabledMods " to " fml . modStates " to align the property name with the
refactor account selection handling in ReceiveExternalFilesActivity to use a dedicated showAccountChooserDialog method to improve code readability and maintainability by
updated exception message in CollectSink . java to include host IP and port to improve debugging by providing more context on the connection issue
improve validatorcontractcontroller result validation ( # 2979 )
updated TexturePackerFileProcessor to handle empty JSON files gracefully to improve robustness by avoiding null pointer exceptions when reading settings
added a null check for ` dataSource ` and ` dataSourceJNDI ` in ` PooledConnection . java ` to ensure proper handling of connection
updated TARGET _ MB from 10 _ 000 to 1 _ 000 and modified the count calculation in TestRefprocSanity . java to optimize memory
added null checks for currentConsole before writing to prevent potential NullPointerExceptions when currentConsole is not initialized
added a delay for credential refresh in KinesisConfigUtil to improve user experience by allowing more time for credentials to be refreshed
refactor dialog handling in SingleUploadFragment to use a dedicated method for showing information alerts to improve code readability and maintainability by reducing
added a ` pack ` parameter to the ` test ` method in ` T4501661 . java ` and modified the ` test `
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and modified Ham
added a check to ensure dependencies are only added if they are not provided in the PluginBundleManager to ensure only relevant dependencies are processed in the
added a HashSet for managing ZipFileInputStream instances and modified releaseInflater method to ensure proper resource management and prevent potential memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in naming conventions
added methods to run active or idle contexts based on key ranges in SequenceGeneratorSource . java to ensure proper handling of context states during execution
[ hotfix ] fix typo in blobserver # getcurrentactiveconnections
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to improve
added support for " ppc64le " architecture in Bits . java and ByteArrayAccess . java to enhance compatibility with additional architectures
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a reference link to the pull request to provide users with guidance on
replaced hardcoded timeout values with a maximum value of Long . MAX _ VALUE in waitWithDeadline method calls to improve code clarity and
replaced instances of ` Date ` with ` Instant ` in ` DateUtilTest ` and ` OffsetDateTimeTest ` to use ` Instant `
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to indicate that YouTube Player doesn ' t work on Lollipop yet to improve user experience by notifying users
added error handling for unterminated SQL characters in Parser . java and created corresponding tests in StatementTest . java to ensure proper parsing of SQL statements
added a null check for mVibrator to prevent potential null pointer exceptions during vibration
updated table border and color settings in DotRenderer . java and modified arrowhead and arrow tail logic in DotRenderer . java to improve table rendering
added a static final ENCODED _ CONF array and a method to check if the name is encoded in HiveConf . java to improve configuration
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved readability to enhance maintainability and facilitate easier debugging
validate default uri implementation with proxy uri ( # 3903 )
replaced BitmapLruCache with NetworkedCacheableImageView and added loadImage method to improve image loading performance and support loading from memory
removed unused parameters from the LauncherAnimUtils instantiation methods to simplify the code and improve readability by eliminating unnecessary parameters
updated controller version handling in DependencyBank . java and modified controllers version retrieval in BuildScriptHelper . java and DependencyBank . java to ensure compatibility
refactor LaunchedURLClassLoader to improve code structure to enhance maintainability and readability of the code
replaced ` JdbcUtils . queryForObject ` with ` DataAccessUtils . requiredSingleResult ` in ` DataSourceHealthIndicator . java `
add cache - control to the layout - tag so that we do n ' t cache it .
updated warnMsg format to use Locale . ENGLISH to ensure consistent formatting of warning messages across different locales
added a constructor to the SolrQueryParser class that accepts an Analyzer to enhance flexibility in query parsing by allowing custom analyzer configurations
updated copyright year in multiple Java files to reflect the correct copyright year to ensure compliance with licensing requirements and improve code clarity
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added support for handling VoidColumnVector in VectorizedBatchUtil to ensure consistent behavior when processing VoidColumnVector instances
updated variable name from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using a more descriptive variable name
removed the isTypeMatch method from AbstractConfig . java to simplify the configuration addition process
added a new method ` offer ` to the ` SessionDecorator ` class for managing session headers to enhance the functionality of the ` offer ` method
rename ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll ` and `
add nobootstrap annotation to bootstrapinserter so that it do n ' t try to create a static block
hbase - 25850 tabledescriptorchecker should use tabledescriptorbuilder . max _ filesize and tabledescriptorbuilder . memstore _ flush
updated commitList fillTo method to use requestedCommits instead of maxCommits to improve clarity and correctness of commit handling logic
updated ` main ` method to include ` InvocationTargetException ` and modified ` run ` method to invoke ` invokeAndWait ` instead of ` invokeLater
added a static final string for the BUILD _ ID and refactored build metadata handling in CachingBuildEngine to improve code clarity and
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline the code by eliminating redundancy
added import for TezConfiguration and modified copyInto method in TezConfigurationFactory to enhance configuration handling and improve code clarity
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is not initialized
removed the conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to simplify the code logic for better readability
added null check before stopping the most recent sound and a method to forget the most recent sound to improve robustness by preventing potential NullPointerExceptions
report discontinuity only once for newly render first frame
added decimal formatting constants and added additional number tick units to NumberAxis . java to enhance readability and maintainability of the code
refactor TargetGraphAndBuildTargets to use ` TargetGraphAndBuildTargets . of ( ) ` instead of ` builder ( ) ` to
removed the use of ` IndexFileNameFilter . INSTANCE ` for file name filtering in ` IndexFileDeleter ` and ` IndexWriter ` to
add fullboundingboxladders feature to forge dummy container to disable stitching .
added a compression level parameter to the ` ApkBuilderStep ` and ` SignedJarBuilder ` classes to allow customization of the compression level
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify that static fields are included in the generated
added support for BYTES data type in FieldSpec , MetricFieldSpec , and SingleValueSet classes to enhance data handling capabilities for BYTES data types
updated StringBuilder construction and message formatting in multiple assertion error tests to improve readability and consistency of error messages
updated hash code method in Trade . java to use Objects . hashCode to improve null safety in hash code calculation
added cache management functionality and tests in SpringDataJPAJoinFetchPaginationTest . java and ForumService . java to enhance cache management capabilities
german pronunciation . featuredefinition and german pronunciation . treepath should use the locale prefix .
refactor SimpleHttp to handle empty request bodies and add a mock server for nullPost in TestHttpPlugin to improve HTTP request handling and ensure
added a dispatcher and shutdownNow method to ClientSideSlb and ClientSideSlbTest to ensure proper resource management and shutdown of the okhttp
updated texture setting logic in TextureRegion . java to differentiate between flipping and non - flipping modes to ensure correct texture rendering based on
improve error message for unknown property in defaultdiscoveryservice
added a null check for contextPath in MetricsPublisher . java to ensure contextPath defaults to " NA " when it is null
[ drools - 3540 ] fix re - initialization of kie - container ( # 3550 )
added a new constant B _ TREE _ MAP _ ROOT _ HEADER and a validation check in BTreeMap . java to ensure the correct
added precompiled header handling and validation in ` AbstractCxxSourceRuleFactory ` to ensure compatibility between prefix and precompiled headers in the rule
added a new class ` AccWeakReference ` and modified ` WeakReference ` to use it for security checks to enhance security by ensuring privile
updated import statements and modified method visibility in ObjectMap , ObjectSet , and OrderedMap classes to enhance encapsulation and improve code readability
changed the direct state of isDirect from true to false in VertexBufferObject . java to ensure that the direct state accurately reflects the
remove duplicate code in maryclient . getaudioeffecthelpTexts ( )
modified the ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods to return ` Vector2 ` instead of void to
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated border spacing logic for folder cells in CellLayout and DeviceProfile classes to ensure consistent border spacing across different container types
refactor valueNumeric and defaultNumeric initialization to use a new ValueNumeric class to improve code clarity and encapsulate numeric parsing logic
updated authentication check in FormAuthenticator to check for deferred authentication to ensure proper handling of deferred authentication scenarios
updated argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - start - ini "
added a default partition value to dynamicPartValues and updated its usage in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used
[ hotfix ] [ runtime ] add null check for operatorfactory in streamnode and streamgraph
updated the return statement in DefaultArtifact . java to include a classifier check before concatenating the version and artifact ID to improve clarity of artifact
camel - 14850 : kafka consumer should not call staterepository . getstate twice for the same topic . thanks to daniel
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when a class cannot be loaded due to
updated GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistrationWizard . java
doc ( regen ) : fix typo in cryptokey documentation ( # 130 )
updated expectedMessageCount in LumberjackMultiThreadTest to use a configurable concurrency level to improve test flexibility by allowing different message count
fix playerupdatehandler . getplayerdisplayname ( ) to return player name if player be dead
refactor Exchange class to improve code readability to enhance maintainability and reduce complexity
api : add api _ key and secret _ key parameter to updateusercmd , a they must be specify with apiKey
refactor switch - case statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest to use
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the metadata export process
added error handling for SQL integrity constraint violations in dropping tables to ensure that only materialized views can be dropped to maintain data integrity integrity
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency with naming conventions
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` and marked the class as deprecated to indicate that the
added condition to check if the group is a root group before adding subgroups to the menu to ensure that subgroups are only added when the
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified path validation logic to improve clarity
refactor GCThreads creation and verification logic in TestDynamicNumberOfGCThreads . java to improve clarity and maintainability of
changed the return type of getHostFlavorMap and related methods from ImmutableFlavor to Flavor in CxxPlatforms . java and Known
updated CreateTable and CreateTableDeParser to utilize PlainSelect for creating table operations and parameters to enhance flexibility in SQL statement creation and
added alpha transparency to the background color drawable in ChatViewerFragment to enhance the visual appearance of the chat background
test : migrate ctiteratortest to junit 5 ( # 4511 )
added clear method calls in CharTokenizer , KeywordTokenizer , TokenStream , and StandardTokenizer classes to ensure proper resource management and avoid potential memory leak
add a test case to make sure we do n ' t crash on block statement .
updated type parameters in ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` to use ` StateMachineConfigurerAdapter ` instead of `
simonstewart : do n ' t use link locator in selenium test
updated StringConverter to use Integer . MIN _ VALUE and Integer . MAX _ VALUE for maximum fraction digits to ensure consistent formatting of floating - point
remove dependency on currentunitofwork from aggregatelifecyclistener
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to
removed a conditional check for ' ~ ' in FencedCodeBlockParser . java to streamline code by eliminating unnecessary checks
added socketTimeout functionality to manage socket read operations to allow configurable socket timeout settings for improved network reliability
added a sleep mechanism in ElementAttributeTest . java to handle potential interruptions during thread sleep
added UTF - 8 encoding to the BufferedReader in HttpUtils . java to ensure proper handling of character encoding in HTTP requests
refactor List class implementation to improve code readability and maintainability
added URI handling to AsyncFileImpl and modified AsyncFileImpl to use Path instead of Path to improve error handling by providing a more specific exception
added API annotation to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that CucumberEngineExecutionContext is stable
fix npe in nuagevspmanagerimpl when there be no vsp device
renamed ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity ` to
updated Java version constants and method calls in ConstantPoolTagTests . java to ensure compatibility with the latest Java versioning
improve error message when recompile with - xlint
added a method to clear the client header map in AsyncHttpClient to facilitate easier management of HTTP headers in the application
replace Vector with ArrayList for input and output file handling to improve code readability and performance by using a more modern data structure
updated the default grid column value from 4.0 f to 3f in AppPreferencesImpl . java to improve the visual appearance of the
added a condition to check if view creation is not needed in the planner logic to ensure that view creation is handled correctly during query planning
updated datePattern construction and assertion logic in TestHS2HttpServer . java to improve clarity and correctness of date validation logic
added a try - catch block around the asObject method call in GraphPrinter . java to handle potential exceptions during the conversion process
updated the driver from IE to FIREFOX and modified the test method in SingleTestSuite . java to ensure compatibility with FIREFO
updated byteOffset calculation to use Math . addExact for better accuracy to ensure byteOffset does not exceed BYTE _ BLOCK _ SIZE and improve
replace instance variables with instance variables for firstEncoder and secondEncoder in InteractionValueEncoder . java to improve flexibility and maintainability of the
added error handling for Throwable in TcpTransport . java to ensure proper resource management and reporting of unexpected errors
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization in the code
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver and removed SourcePathResolver dependency to simplify the class
add a confirmation dialog for saving and discarding changes .
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in AccessTokenEndpointController to enhance security
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the buffer is properly initialized before
updated the ` initTableMapperJob ` method to accept a ` Class < ? extends InputFormat > ` parameter and updated the ` setInputFormat
updated the method call from ` append ( jrubyClasspath , testClasspathElements ) ` to ` append ( jrubyClasspath , testClasspathElements
sulong : throw an exception if eval do n ' t have a language .
added deprecation warning for master RESERVE and updated commit duration handling in ReplicationHandler to ensure compatibility with Solr 7.1 and enforce mutual
renamed ` cacheVariableName ` to ` cacheForeignKey ` and updated related references in ` DIHCacheSupport . java ` to improve clarity
change return type of generateeckeypair from long [ ] to Object [ ] in eckeypairgenerator . java to allow for more flex
[ hotfix ] [ state ] add suspend with job in cancelling state
replaced the static instance of ` RotationTouchHelper ` with a constructor call in ` RecentsAnimationDeviceState . java ` to
refactor stream filtering and filtering logic in UniFiControllerCache . java to improve readability and maintainability of the code
updated variable names from ' lwp _ id ' to ' unique _ thread _ id ' across multiple classes to improve clarity and consistency in
do n ' t add an offer to the list with the same id if it be already in the list .
tweak test to use constant instead of hardcoded value
updated MockitoMethodInvocationControl to handle Class instances correctly and refactored method calls in SystemClassUserTest and SystemClassUserCases to
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` in multiple classes to improve exception handling by
replaced the import of DisplayUtils with a call to putExtra ( EXTRA _ FILE , ( OCFile ) null ) in FileDisplay
added error handling and improved file management in StoreDirect and StoreWAL classes to enhance robustness and provide clearer error messages during file
added screenshot task snapshot handling in AbsSwipeUpHandler . java and removed the stopSwipePipToHome method in SystemUiProxy .
added hidden property and its getter / setter methods to CommandArgumentDefinition and LiquibaseCommandLine to enable conditional handling of command argument visibility based
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
[ geos - 6560 ] use stylegroup . getld ( ) instead of stylegroup . getcatalogfromstyle ( )
added permission checks for launcher activities and modified shortcut creation logic to enhance security by ensuring only authorized activities can create shortcuts
added getId and getId methods to TiledMapTile , TmxMapLoader , and StaticTiledMapTile classes to enable tracking of tiles
refactor Manager class to improve code organization to enhance maintainability and readability of the codebase
updated JDBC connection URL and session configuration in JDBCExample . java and SessionExample . java to ensure compatibility with version 0.13 and improve session
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance the changelog generation process by allowing users to specify whether
replace ` registryCache . putIfAbsent ` with ` registryCache . put ` in ` JmxRegistry . java ` to improve performance by avoiding
planner - 2270 add singlebenchmarkrunnerexception logger . warn instead of logger . error
changed the visibility of the doPutRecord method from final to non - final in AbstractCacheRecordStore . java to allow subclasses to override the
do n ' t set physicalwidth / physicalheight in tools . getgamedir ( ) and remove it from fileselectorfragment .
added tests for handling large and slow responses in FastCGIProxyServletTest . java to improve test coverage and ensure proper handling of response content
added a call to startService in MarkReadService to start ReadInteractionsService to enable interaction reading functionality within the MarkReadService
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are logged only when linting is enabled
added port configuration handling for SMTP server in Email . java to allow dynamic configuration of the SMTP port used in the application
added retry mechanism for reloading SSLFactory in TlsUtils to improve reliability during SSL factory renewal by allowing retries on failure
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy -
updated the error message in the assertion in SpyingOnRealObjectsTest . java to clarify that the test is due to mocking
added functionality to check if the line ends with a line ending with a line ending tag in InlineBoxing and LineBox classes to improve line
updated the logic for constructing the parent path in UnpackContent . java to handle potential null values and avoid potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
refactor input stream creation in NinjaServletContextTest to use createHttpServletRequestInputStream to improve code readability and maintainability by reducing
added properties property for management endpoints in AbstractCasEndpointTests to enhance configuration flexibility for web exposure settings
added validation to ensure the current graph is a dynamic graph to prevent illegal argument exceptions during execution
add a default value to scopeone annotation ( fixes # 469 )
added support for suppressing exceptions in JSONPath expressions to enhance error handling by allowing exceptions to be suppressed during JSON processing
removed redundant call to ` ControllerLeaderLocator . create ( _ helixManager ) ` in ` HelixServerStarter . java ` to
updated usage instructions in CLHSDB and HSDB classes to include a - help option to clarify the command usage for users
refactored the configuration of ` FaultTolerantChunkProvider ` in ` FaultTolerantStepFactoryBean ` and ` SimpleStep
[ hotfix ] remove deprecated write class from sdk
refactor AccessibilityManager usage to directly reference ` accessibilityManager ` instead of calling ` getAccessibilityManager ( ) ` to improve code clarity and streamline access to the AccessibilityManager instance in tests
add a group display id to track usage statistic ( # 3550 )
removed SourcePathResolver from JavaSourceJar and related classes to simplify the code by eliminating unnecessary dependencies
refactor enum data type handling in PostgreSQLDatabaseConnector and introduce a new class PostgreSQLEnumDataTypeHelper to improve code organization and facilit
updated log path comparison in LogFileTests . java to ensure compatibility across different operating systems
replaced calls to ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple classes to align with the new
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop index tables
added a condition to update the disabled flags based on the visibility of the ActionsView to ensure scrolling is only enabled when the view is not visible
added a specific highlighter for syntax highlighting in non - Windows environments to enhance compatibility with non - Windows environments
add optional local variable annotation to cross - site scripting
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to indicate completion of metadata processing
replaced ` boolean ` return with ` void ` return in ` removeTaskTarget ` and modified bitmap size calculation in ` ThumbnailSearchResultView
added environment variable handling for release flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to
updated type casting logic in Lower . java and added a new class T6500701 . java to improve type safety and demonstr
added tests for crlf new lines in comments and Javadoc in AddImportTest . java to ensure correct formatting of new lines in generated code
added hubMode property and conditionally set Liquibase Hub Mode in AbstractLiquibaseChangeLogMojo to enable configuration of Liquibase Hub Mode through the existing properties structure
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify the code and improve readability
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to enhance error handling
replaced manual method lookup with reflection to retrieve the setIndexerThreadPool method to simplify the code and improve readability by eliminating the need
removed the " : 5000 " prefix from the SMS address in GameCanvasImplementation . java to simplify the address format for better readability
refactor MapJobExecutionDao to use a copy method for storing executions to ensure that modifications to executions do not affect the original JobExecution object
added a new file ` DownloadTest . java ` to implement a network request for downloading PNG images to facilitate testing of image uploads
updated language normalization in multiple files to ensure consistent language handling and improve code clarity
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for argument type checks in ` GenericUDFRound . java ` to improve error
added null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when accessing selectedVersion
removed multiple AntPathRequestMatcher entries from the SecurityConfig class to streamline the security configuration by eliminating unnecessary matchers
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a conditional check before creating the bean definition writer and resolving type references in BeanDefinitionInjectProcessor . java to improve efficiency by avoiding unnecessary
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix energency and thermoregulation notification schedule ( # 11388 )
remove unnecessary code for socketstatus . open , socketstatus . stop , and socketstatus . timeout in apr .
deleted the SunToolkitSubclass . java file to remove unused or redundant class to streamline codebase
refactor translation handling in DefaultRenderableSorter and add a method to check rotation or scaling in Matrix4 to improve code readability and maintain
added a test for registering wrapper handlers in TypeHandlerRegistryTest . java to address issue # 165 related to type handler registration
pdseparation : do n ' t convert alt color space to rgb if it be a pdlab
replaced hardcoded API URLs with dynamic configuration from BuildConfig to improve flexibility and maintainability by centralizing configuration values
camel - 13850 : camel - platform - http - add test case for camel - main http health check
add a null check for the block position before accessing its properties to avoid potential NullPointerExceptions when accessing block state
added a test for altering a table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that the primary key
updated offset initialization in FileFloatSource . java and added conditional assertions in TestFunctionQuery . java to improve code clarity and ensure correct document
removed DrillMongoConstants . ID from the fields list in MongoRecordReader to streamline data handling by eliminating unused constants
added disconnection methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes to ensure proper resource management and state management
added support for AUTO _ INCREMENT in the Parser and created a test for it in TestCompatibility to enhance database compatibility checks and ensure correct parsing
fix ( kubernetes - client - api ) : update sharedindexinformer to use sync period
server : fix npe in template detail when create a new template .
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for improved image size retrieval and color array initialization to
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the codebase and improve maintainability
move stocktickstream . dat to / org / drools / examples / broker / data instead of / stocktickstream . dat
added a new variable ` legendTop ` and updated its assignment logic in ` PieChart . java ` to ensure correct positioning of the
added a check to return early if the world transform det ( 0 ) is zero in BaseShader . java to optimize performance by avoiding unnecessary
added a new file ` MaryScriptCreator . java ` that implements a script generation process to facilitate the creation of Mary
added remote source host attribute to the flow file in ListenHTTPServlet . java to enable tracking of the remote source host in the flow file
removed redundant code in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leaks
changed the attribute key from " xlink : href " to " href " in ComponentDescription . java to simplify the link attribute retrieval for better
camel - 15836 - camel - aws2 - s3 : use s3 _ streaming _ upload _ timeout _ checker for timeout check
hbase - 25829 add log for regionserver when cluster be shut down
added null check before logging stopped spans in Slf4jSpanLogger and updated warning messages in DefaultTracer to enhance robustness by preventing
trim whitespace from the active option before adding it to the configuration to ensure only valid options are added to the configuration
added support for customizable wallpaper depth settings in DepthController to enhance user experience by allowing customizable wallpaper depth settings
added assertions to check the success count of the overseer action in OverseerTest . java to ensure that the overseer action
replaced the method ` getKernelVersion ( ) ` with a default return value of ` true ` in ` LinuxFileStore . java `
refactor ExecConstants for improved clarity to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better debugging
added a method to set the scan attribute for paging in TableSnapshotResultIterator and modified ScanUtil to accept a PhoenixConnection to
modify the condition for setting the lowRange in Request . java and RequestV2 . java to ensure that lowRange is within the valid range
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and modified cache size calculation in AsyncWriteCache
cloudstack - 4892 : host join api should return zone uuid instead of uuid ( # 4893 )
[ zeppelin - 4892 ] fix utf - 8 encode issue in python interpreter ( zeppelin - 4
updated filesystem removal logic to include the zfs parameter to ensure that the filesystem is removed only if it matches the zfs instance
replaced the ` obj ` variable with a ` json ` variable and updated its usage in the ` HttpRequestBuilder ` class to improve clarity
updated hard commit wait duration from 2 milliseconds to 3 milliseconds in SoftAutoCommitTest . java to improve responsiveness during soft commit operations
add error handling for listener . beforeevent ( ) and listener . afterevent ( ) in selenidelogger
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
updated error logging statements in SyncQueue . java to ensure consistent formatting to improve code readability and maintainability
updated the Ryuk container version from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and
replaced the method ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and
do n ' t use the mapped path for the patchy library if it do n ' t already exist
[ hotfix ] [ test ] remove yarnclient dependency from yarnitcase
add stats of no data included map to localmapstatsprovider
deleted the AllTests . java file to the test suite was deemed unnecessary or redundant
added character handling for non - breaking hyphens and zero - width space characters in AbstractWordConverter to improve text formatting for non - breaking hy
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` for testing stack trace invocations to ensure that large stack
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` to improve clarity and
added a new boolean variable ` eventHandled ` to ` UIText . java ` to indicate that the event has been handled
deleted the ` Controller ` annotation from ` io . jooby . annotations ` and renamed the ` Weldby ` class to `
added a boolean flag to monitorCaptureGroupsInEmptyCheck in TRegexBacktrackingNFAExecutorNode and modified conditional checks in NFAT
added a protected field ` liquibaseProLicenseKey ` and updated its usage in ` AbstractLiquibaseMojo ` to
refactor setmeasurehierarchieshierarchies ( ) method to use setmeasurehierarchieshierarchieshierarchies ( )
add a debug info option to generate debug information
mondrian : fix typo in javadoc of mondrianproperties
added support for handling multiple Friend paths in Kotlin and Kotlinc steps to improve flexibility in specifying source paths for K
added aliases for BATK , BRAH , MANDAIC , and modified script file handling in CheckScript . java to enhance
updated ` ExecutionCommand ` to use ` equals ` for string comparison and added a method to convert a JSON string to ` ExecutionCommand ` to
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated the handling of CSS number and percentage types in CSSParser . java to improve clarity and correctness of parameter validation in the cmy
added a new test method ` testLocalIndexReverseScan ` in ` LocalIndexIT . java ` to verify the behavior of local index reverse
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated assertion methods in ` BackupHelperTest
updated toast messages in ItemListActivity and LiveTvGuideActivity to use string resources for better localization to improve user experience by providing more d
updated condition checks in RendererUtilities and added new test cases for XYSeries and XYSeriesCollection in RendererUtilitiesTests to improve code clarity and
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid calculations instead of Iterator to improve type flexibility and maintainability by
added a try - catch block around the SQL addition of a column in FileContentProvider . java to handle potential exceptions when attempting to add a
removed system . err . println statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor calculation and refactored data size calculations in ConvertJoinMapJoin . java to improve performance by optimizing data size
updated the ` buildView ` method to accept a ` Context ` parameter and updated background resource settings to enhance flexibility by allowing background resources to
added an ` assertAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests `
vpc : setvpcid ( long vpcid ) should set vpcid to null to avoid npe
[ hotfix ] [ test ] disable flinksavepointtest on flink 1.11
replaced ` @ ` annotations with ` @ ` annotations in multiple Java files to improve code readability and maintain consistency in annotation usage
modified the loop condition in Actor . java to check if the index is within the bounds of the actions array to improve performance by avoiding unnecessary
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to align with the new Bitmex library structure
add test for virtual metadata in relationshiprestrepositoryit
added null check for spatial in LodControl . java to avoid potential NullPointerExceptions when spatial is null
modified the ` lastTokenFiltered ` variable to true in ` ConditionalTokenFilter ` and updated position increment handling in ` FixedShingleFilter ` to
replace graph . unique ( ) with graph . addstateafter ( ) in unsafestorenode .
replaced ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base + offset , value )
added an assertion to verify that the casEventRepository ' s load method returns an empty list to ensure that the event repository behaves as expected
removed redundant ` attributeTemplateName ` and ` attributeLine ` parameters from ` AuthenticationAttrProcessor . java ` to streamline code by eliminating
added null check for the key parameter in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
added a method to set the typeface in CodenameOneTextPaint to throw a RuntimeException if the typeface cannot be set in the
added ` open ` methods to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS ` ,
danielwagnerhall : remove deprecate fail ( string ) method from webdriverrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor ` DefaultResultSetHandler ` to use ` this . useConstructorMappings ` instead of ` resultObject . isUseConstructorMappings ( )
updated SQL statement formatting in CreateTableGeneratorTest . java to ensure consistency in SQL generation format
added handling for filter mode in VectorizationContext . java to ensure correct vectorization behavior when processing filter expressions
updated the type of ` moveSelectorConfig ` from ` Class < MoveSelectorConfig > ` to ` Class < MoveSelectorConfig > ` to
replace ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to simplify the code and improve readability
updated cluster name handling to use constants from IoTDBStartCheck . DEFAULT _ CLUSTER _ NAME to improve code readability and maintainability by
improve logging and exception handling in peergroup . connect ( )
added support for customizable style strings in Nano . java to enhance flexibility in styling based on user - defined options
use adventure nbt instead of jnbt for block entity fix
updated return message from " Use ` String ` " to " No # toString ( ) on String " in NoToStringOnStringType . java
updated the JVM argument from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to optimize
replaced ` int ` with ` FailureContext ` in ` retryFailed ` method and added retry logic in ` DataProviderRetryAnalyzer ` and
updated token retrieval from ` tokens [ 0 ] ` to ` bandwidth ` in ` BucketStateIEEE754 . java ` to ensure correct
simonstewart : add webdriverbackedselenium . selectpopup , deselectpopup , capturenetworktraffic , and capture
modified the ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplify its usage to streamline the entry printing process and
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintain consistency
added validation checks for dialog properties in Dialog and Frame classes to ensure components are valid and prevent illegal state exceptions during component operations
changed the ` state ` field from private to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the ` state `
updated RedisObjectFactory to use RedisStandaloneConfiguration for sentinel configuration to enhance configuration flexibility for Redis connections
add lastseendelayedmessage property to jabber jabber implementation to ensure that the jabber jabber message be
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify
replaced the creation of a share operation with a service call in the FileOperationsHelper and OperationsService classes to streamline the process of creating
removed unnecessary check for isInjected in BeanDefinitionInjectProcessor . java and added dependency injection in FieldPropertyInject . java to simplify the logic and
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` for y calculations to improve code readability and maintain
[ sinttest ] treat npe a test failure not a abort condition
tmi - exif : do n ' t read interop subdirs if they do n ' t exist
added support for ENABLED _ LS mode in VersionTargetGraphMode and updated related logic in VersionedTargetGraphCache to enhance dependency management by supporting both
added a condition to check if the child format is a video before proceeding with media processing to ensure that media processing only proceeds for video
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a method to load native services and modified the load method in LwjglNativesLoader . java to enable dynamic loading based on
added support for escaping characters in CSV request handling to enhance flexibility in CSV processing by allowing users to specify escape characters
updated grant type validation logic in ClientRegistrations and updated test methods in ClientRegistrationsTests to ensure only valid authorization code grant types are accepted
updated exception messages and added self - suppression logic in Throwable and SuppressedExceptions classes to improve clarity of error messages and ensure proper handling
added SQL query assertions and modified OrderedResultIterator initialization in DerivedTableIT . java and ClientAggregatePlan . java to improve test coverage and
added a method to retrieve the R square value in RegressionEvaluator and a corresponding test in StreamExpressionTest to ensure correct handling of the
added handling for request headers in ThreadContextMDCServletFilter to enhance context attribute management for improved request handling
refactor SparkPlanGenerator to use a local variable for MapWork instead of casting to MapWork to improve code readability and maintainability by
refactor image loading logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code organization and reduce redundancy in image retrieval
updated caching logic in JwtIssuerReactiveAuthenticationManagerResolver and added a test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to improve
updated the resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
do n ' t cache interop type if it ' s not a method .
removed unnecessary sleep calls from AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delays
added a new file ` KernCrash . java ` that implements a graphical text rendering with kerning crashes to provide a
added a fail ( ) statement in LinkedHashTreeMapTest . java to ensure the test case correctly identifies and reports failures
added a method ` getInterfaceAddresses ( boolean addPrefix ) ` to retrieve network interface addresses to provide a way to retrieve interface addresses based on
clean up housekeeper task after shutdown
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method in the ` DBMaker `
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
added checks for today and birth year in ValidatorTest . java to ensure proper validation of max age constraints based on date validity
added error handling for alarm and error codes in GrblController . java to improve error reporting by including specific error codes
updated the return statement in Workspace . java to handle cases where no screens are available to improve user experience by providing a default button label
removed the ` count ` parameter from the ` getTrades ` method in ` BittrexMarketDataService ` and related methods to
updated return statements in ConsoleReader . java and adjusted index calculations in MemoryHistory . java to improve code clarity and ensure correct handling of null
updated the path for jdkPath from " . jdk " to " . jdk " in the JavaBuild . java file to ensure
updated methods in ProjectCommand , ProjectCommand , and TargetNode to use getType ( ) instead of getDescription ( ) . getBuildRuleType ( )
added a logger parameter to the JFCModel constructor and updated related methods to utilize it to enhance logging capabilities for warning messages
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent illegal argument exceptions
added methods to create and drop a view in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance database interactions and
added support for testing stable floating - point and double types in NaNTest . java to ensure tests are only executed on supported platforms to avoid
added a new ` DesktopTaskbarUIController ` class and modified ` TaskbarManager ` to check for PC features to enhance taskbar
added task count listener to the moditemadapter to enable / disable the install button
refactor methods in Files . java for improved clarity to enhance maintainability and readability of the code
replaced ` Set ` with ` Collection ` for interceptor management in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation to simplify the
add debug log to resourcepackloader . generatepackinfo ( ) for mod file
chore : update gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added grow methods to the Cell class for improved layout management to enhance usability by allowing dynamic resizing of cells
replaced ` StringTokenizer ` with ` HashMap < KeyStroke , ActionListener > ` and simplified key handling in ` DefaultInputHandler . java ` to
no - jira - add try - catch to prevent test failure
replaced ` long [ ] [ ] ` with ` byte [ ] [ ] ` in ` MetricsMemoryTester . java ` and added
deleted the JobParametersPrototype . java file to the functionality was deemed unnecessary or redundant
hide option column if security be enable for ` information _ schema . mappings ` ( # 24501 )
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable file dumping during
improve eos propagation workaround for amazon model and secure codec
[ java ] do n ' t set publisher limit if there be no spy position .
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` in ` BaseFormatter . java ` to ensure that
[ driver ] enable ssl by default for presto driver uri
added error output options to the build method in DOMConverter . java to improve error handling for XHTML output in the rendering process
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
added ` retained ` parameter to ` Event ` and updated related calls in ` Session ` , ` Event ` , and ` Session ` classes to
updated JSON serialization format in TestResultSummary . java and EventSerializationTest . java to ensure compatibility with the new test case naming conventions
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
updated import statement for ` Parsed ` in ` LatexToUnicodeAdapter . java ` to ensure compatibility with the latest Fastparse library version
added read - write lock and reentrant read - write lock for SSL context initialization to improve thread safety and prevent potential race conditions during SSL
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability in ` AppModule . java ` and
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to ensure compatibility with the latest SQL standards
changed log level from debug to trace in FirmwareUpdateService . java to provide more granular logging for the firmware update handler availability
added unit tests for retrieving null dates and timestamps in DateTest and GetObjectTest classes to ensure correct handling of null values in date and timestamp data
refactor string concatenation logic in ` StringSubject ` and ` Subject ` classes to improve readability and maintainability to enhance code clarity and
added a test for retrieving repository permissions for multiple teams in UserModelTest . java to ensure correct permission handling for repository permissions across multiple teams
added a new file Test7088020 . java that tests method type compatibility with MethodHandles to ensure proper error handling for method type mis
replaced the method ` matchAudienceRestriction ` with a check for audience URIs in ` Saml2ResponseValidator . java ` to simplify audience
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve cache consistency and maintainability
updated PrintStream _ stderr initialization to null and modified stream assignment logic to improve robustness by avoiding null pointer exceptions when the stream is not set
added a new warning constant ` SEPARATION _ ORDER ` in ` Warning . java ` and modified ` BasicEventSimulationEngine . java `
updated the parameter from offlineTableConfig to realtimeTableConfig in the optimize method to ensure the query optimizer uses the correct realtime table configuration
added functionality to enable or disable the hbase normalizer in the PhoenixHBaseAccessor and UpgradeCatalog240 classes to enable or disable
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added functionality to set and get the Bluetooth class in ShadowBluetoothDevice and ShadowBluetoothDeviceTest to enable testing of Bluetooth class
rename contains ( ) method to containsprofile ( ) for consistency
[ te ] sum ( [ ] ) should throw an error if the list be null or empty
replace graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to improve
updated coreNodeName construction to use getCoreName ( ) instead of coreName to ensure the correct core name is appended to the node name
add backpressure to chat activity so that it do n ' t refresh the contact list
updated TaggerParserPosTagCompatibilityITest . java to improve test coverage for tagging compatibility
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the condition in ` elemtype ( t ) . tag < = lastBaseTag ` and added a new class ` T7005671
updated triangle calculations in DelaunayTriangulator and changed the test class to use DelaunayTriangulatorTest to improve
added @ Override annotation to ArrayList , HashSet , LinkedList , PriorityQueue , and Vector classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use a builder pattern to improve readability and maintainability of the test code
update yellow zone state handling in StackOverflowCheckImpl . java to improve clarity and functionality of state management during stack overflow checks
added new imports for ContentValues , SQLiteDatabase , and ContentValues , and removed deprecated methods from ShadowContentValues and ShadowSQLiteDatabase to
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated the comparison logic to use ` ArrayUtil . getUnsignedComparator `
updated Locale . java to include a script parameter and modified locale initialization logic to enhance locale management by allowing customizable script settings
updated return statement from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning message to improve clarity and accuracy of the warning message
updated import statements in DefaultConfigurationTestSuite and TokenRevocationEndpointTest to use UaaJunitRunner ' s allSuiteClasses method to stream
trim whitespace before adding items in GzipFilter and updated test parameters in GzipFilterDefaultTest to ensure leading and trailing whitespace is removed before processing
updated the assignment of _ outputType in Response . java to ensure consistency in output type assignment
updated the default implementation from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest version of the Nashorn library
replaced ` LooperExecutor ` with ` FutureTask ` and refactored ` ViewCapture ` to use ` FutureTask ` and `
[ mary ] add support for ' dfki - pavoque - styles ' query parameter .
added a check to ensure the parent folder exists before creating it to prevent runtime errors when attempting to create a folder that does not exist
updated bind IP address from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure compatibility with
camel - jbpm - fix typo in workitemhandler to workitemhandler
pdfbox - 4892 : remove unused import , a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` in multiple classes to improve clarity and consistency in naming conventions
refactor multiple Dalvik - related Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor defaultjavaprettyprinter to use super - class instead of super - class ( # 3649 )
added a call to freeMemory ( bytes ) in the OperatorContext class to ensure proper memory management by freeing unused memory
updated string formatting in QueryByExamplePredicateBuilder and simplified replacement logic in StringQuery to improve readability and maintainability of error messages
replaced ` long evictionCounter ` with ` AtomicLong ` and added a new ` add ` method in ` ConcurrentLRUCache ` to
replaced ` runInJavaFXThread ` method with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor ` to ensure
use intendeddestination instead of localhost to determine if the destination be an Inet4Address
set the data root and source root for the database in MainFrame . java to ensure the application uses the correct database and source configurations
added MarkedClientEnabled and MarkedServerEnabled constructors to configure the admin client and server modes to improve logging and enable configuration of admin client and server operations
[ hotfix ] [ table - common ] fix typo in tableenvironment javadoc
modified the timeout handling in MapperBuilderAssistant and modified the fetchSize configuration in ExecutorTestHelper to allow for more flexible statement timeout settings
removed the ` hangingTscTimeout ` parameter from multiple methods in ` JSweetTranspiler ` , ` TypeScript2JavaScriptTrans
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocation
updated precondition checks in ArtifactFilesystem and ArtifactFilesystemTest to use BuildArtifact instead of SourceArtifact to ensure correct type validation and improve test accuracy
tika - 2807 -- add unit test for the office parser in excelparsertest
do n ' t trigger concurrent modification in case of circular modification
do n ' t wait for data to be available in tcpnioconnection . writetopipe ( )
added validation checks for ` actual ` and ` expect ` values in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubject
added VERTICAL _ SWIPE _ INDICATOR and modified mMidProgress and mMidAlpha calculations in ShelfScrimView
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when navigation is not initialized
ggb - 1353 fix for mow _ pin _ image on mac o x
updated error handling logic in the ErrorOccuredInOnExceptionRoute class to improve error reporting accuracy for better debugging
updated scheduling method from scheduleAtFixedRate to scheduleWithFixedDelay and changed log level from info to debug in AstroDiscoveryService to improve scheduling
[ fix ] singlepassandimagebasedlightinglogic do n ' t increment the texture unit if it ' s already - 1
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang
updated import statements in GuiceFactoryTest . java to use specific classes instead of wildcard imports to improve code clarity and reduce potential naming conflicts
added methods to check and set system features in RobolectricPackageManager to enhance functionality for managing system features in the package manager
refactor property handling in RCAFrameworkLoader and add a test for augmenting paths in RCAFrameworkLoaderTest to improve code clarity
added logging statement to track the start of cancellation watch dog to improve monitoring and debugging of cancellation events
added a null and empty check for enumerationValues in RADProperty . java to ensure that enumerationValues is reset when no values are present
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve code readability and
added synchronization to collect and send telemetry data to ensure telemetry data is collected in a separate thread to improve thread safety during data collection
removed conditional database type check for altering the UPGRADE _ ITEM _ TEXT column type in UpgradeCatalog260 . java to simplify the
updated error messages in BaseTableDataManager to include available space and write - permissions to provide clearer guidance on directory permissions for users
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added selector ID to the key in Matcher . java to enhance the matching functionality for better context
updated debug logging syntax in GouraudShadingContext . java to improve readability and maintainability of the code
updated ALPHA _ INDEX _ HIDDEN _ WHILE _ DREAMING to NUM _ ALPHA _ CHANNELS and added taskbar alpha
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintainability
added a check for the ` conn ` instance before executing the ` version ( ) ` method in ` CockroachDatabase . java `
updated file index retrieval logic in ServerMainTest . java to handle cases where " 2 . log " does not exist to improve robustness of
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to provide access to the
changed access modifier of the useShaders ( ) method from private to public to allow access to the useShaders ( ) method
updated the BindableFilter condition in DruidAdapterIT . java to include an OR clause to ensure correct filtering of bindable filters based on
updated ZkStateReader initialization in CloudSolrServer . java to ensure consistent timeout settings for ZkStateReader
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5657 ,
added a new interface ` ClientRegistrationIdentifierStrategy ` with a method to retrieve client registration identifiers to provide a flexible way to retrieve client registration
replaced a loop with a while loop for checking the existence of " < script > " in the result to improve code readability and ensure
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to improve clarity of
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encapsulating
changed log level from info to debug for reconnect backoff logging in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
updated import statements and modified method signatures in InternalDropAllCommandStep and HubUpdater classes to include HubRegisterResponse parameter to enhance functionality by allowing
replaced manual bitwise operations with Byte . toUnsignedInt in multiple Java files to improve code readability and maintainability by utilizing a standard
( chore ) camel - core : fix checkstyle violation in opentracingtransactionproducer
updated the default value of ` DepFiles . ENABLED ` from ` CachingBuildEngine . DepFiles . ENABLED ` to ` CachingBuild
changed the default value of rangePannable from true to false to disable range panning functionality
updated work mode handling logic in AllAppsContainerView . java to ensure proper management of the work mode switch based on the current active page
changed the visibility of the ` glCaps ` and ` renderer ` variables from private to private in ` Visualizer2TopComponent . java `
added handling for CancellationException in FunctionTest . java to improve robustness by preventing application crashes due to cancellation
changed constructor visibility from default to protected in JarFileResource and JarResource classes to allow subclasses to access these constructors for better extensibility
refactor DefaultTrackSelector class to improve code readability to enhance maintainability and facilitate future updates
added a sleep mechanism for unseq merging in LevelCompactionTsFileManagement . java to ensure that the merging process does not hang indef
updated the currency type from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test verifies the correct currency type
added a table annotation to the Post table and updated assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to enhance clarity and
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and updated the ` updateHiveLLAPSettingsIfRequired `
updated the onComplete method call in SendHeadersFirstPublisher . java to ensure proper completion handling of the header publisher
camel - 14284 - camel - aws : use @ jsonpobjbuilder instead of @ jsondeserializers for ssecustomerkey
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling and provide clearer context for unsupported value types
refactor wrap method to use javacroundenvironment instead of inner to improve clarity and consistency in the codebase
removed annotation printing from ParameterInfo . java to clean up the code and reduce unnecessary output
added support for ac3 streaming and modified playback logic in PlaybackController . java and VideoManager . java to enhance playback functionality and improve
updated the return statement in LocalNode . java to return a new HttpResponse with a content map containing a value to ensure that the response contains the
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to Commons DBCP
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` to verify the correct functionality of SQL queries in the
refactor RTimerTree class implementation to improve code readability and maintainability
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add a test case for issue # 358 that show that text do n ' t look good
replaced direct instantiation of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` with a customizable ` ClientThreads ` and ` ScheduledExecutor
refactor ViewResultsFullVisualizer to use Box and JCheckBox for better UI layout and layout management to improve code readability and maintainability
added descriptions for phone numbers and user resources in ScimUserEndpointDocs . java to improve clarity and usability of user and phone number
changed ` DeleteFiles ` , ` IndexFiles ` , ` IndexHTML ` , and ` SearchFiles ` classes to be public and added default
added null checks for property and responseMap in JsonHttpPropertyRequest . java and added error logging in URLStreamProvider . java to improve error
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if the parallel variable is not equal to DEFAULT _ PARALLEL before proceeding to ensure that the parallel variable
fix checkstyle violation in testvmwareutil and testvmwarecontextfactory
added a condition to handle SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ C
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary system output during tests
fix bindycomplexonetotomanykeyvaluepairunmarshalltest and bindycomplexonetotomanykeyvaluepairunmarshall
change default value of ` useowner ` and ` usetimestamp ` from ` true ` to ` false ` in ` JabRefPreferences .
updated the method signature of ` runAndCheckException ` to accept ` ThrowingRunnable ` instead of ` Runnable ` to improve exception handling by allowing
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 - camel - aws2 - sdb : use component id instead of configuration property to avoid reflection configuration .
updated version from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquibase
change default value of proxy . cert . validity from 7 to 90
updated ThreadHandler to introduce smoothDelta and lastDeltaUpdate to improve responsiveness and accuracy of timing calculations
updated HttpBatchReader and HttpScanBatchCreator to handle pagination conditions when table name is not provided to ensure proper functionality when pagination is applied
added null check for the CompactionInfo client in Worker . java and implemented a test for FindNextCompactException in TestWorker . java to
added onSaveInstanceState method to ShadowFragmentActivity and updated fragment state handling in FragmentActivityTest to ensure that onSaveInstanceState is called for fragments
[ hotfix ] fix checkstyle violation in batchresourcefactorybean
added a test method to validate the parsing of Android color references in ColorResourceLoaderTest to ensure that the color resource loader correctly identifies color references
added error handling for NoResultException in AbstractJPAQuery . java and implemented a test for unique results in AbstractStandardTest . java to
renamed the variable ` fromCache ` to ` owner ` and modified the logic for adding communities to ensure the owner is correctly associated with
updated depthPref reference from ' l ' to ' LawnchairApp ' in DepthController . java to ensure compatibility with Lawnch
removed redundant import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and ` Ener
added null checks for extensions and improved string representation in ExtensionStack . java to ensure proper handling of null values and enhance clarity in output
2 . x : fix flowableflatmap . flatMap ( ) cancel inner subscriber ( # 6635 )
added connection timeout configuration in MultiGetRequest and modified connection manager initialization in ControllerStarter and ServerTableSizeReader to improve connection handling and provide
reformatted code for clarity in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replace ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update the model testing
replaced multiple instances of SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher with a single instance of SystemResourcesEdgeEventFetcher and
added a new test for output hash calculation when cache is not writable to ensure that output hash is not calculated when caching is not writable
camel - 14284 : camel - netty - add option to use bytebuffer in camel - netty
updated the method call to use ` Warehouse . getQualifiedName ( tbl . getTTable ( ) ) ` instead of ` alterTbl . getOld
updated the IllegalArgumentException to include a specific error message about the Vertx instance configuration to provide clearer guidance to users regarding the necessary option for domain socket creation
test ( typehandler ) : add test case for serialization and deserialization of color type handler
refactor StreamEx class to improve code readability to enhance maintainability and reduce complexity
removed hint settings for query query timeouts in SessionImpl . java to streamline query configuration for improved performance
added a new class ` StaticLoggerBinder ` that implements ` LoggerFactoryBinder ` to facilitate the creation of a single logger instance
replaced multiple calls to ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , set ) `
added orientation comparison logic in TaskbarManager . java to ensure proper handling of window orientation changes
escape the occupant ' s nickname in the jabber chat room to ensure proper formatting and prevent XML injection vulnerabilities
removed redundant parameter in StoreDirect . java and added new test cases in Issue265Test . java to improve code clarity and ensure proper functionality
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to improve code clarity and suppress unnecessary warnings during compilation
( chore ) camel - drools - core : move brokentest to integration - test - utils
updated conditional statements in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
alter approach in an attempt to reduce ci failure
updated total difficulty update in BlockchainImpl . java and added a test for invalid block total diff in ImportLightTest . java to ensure
modified action assignment logic in DefaultPlaybackController . java to check if the player is a current window seekable before returning BASE _ ACTIONS
replaced ` ArrayList ` with ` CopyOnWriteArrayList ` and updated synchronization in ` NativeLibrarySupport ` and ` SecurityServicesFeature ` to
added a conditional check for mUniformAlloc before calculating the bend angle and bend distance in AllAppsView . java to improve performance by
added a check for the existence of a colon in the key in HttpURLConnection to ensure proper validation of the key format
added PrincipalResolver to the authentication metadata populator in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration . java to enable the use of bean
replaced ObjectMapper with Noggit for JSON parsing in DelegationTokenResponse . java to improve compatibility with modern Noggit library and enhance
added a method to remove trailing slashes from the StringBuilder in IoUtil . java to improve performance by avoiding unnecessary string manipulation
added a new method ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to provide functionality for
hbase - 25829 bulk load should not fail if hfofdir be null ( # 25829 )
added event handling for water potion in BlockFire . java to ensure proper fading behavior for water potions in the game
reformatted method calls in CellLayout . java for consistency to improve code readability and maintainability
refactor calculations in ContractStateCapsule and ReceiptCapsule for improved readability to enhance maintainability and clarity of the code
added handling for input unready in AsyncContentProducer and added a new test for it in BlockingContentProducer to ensure proper handling of input read
added a null check for weightField in DocumentDictionaryFactory . java to ensure that weightField is mandatory to avoid runtime errors
added plist variable substitution functionality in ` AppleBundle . java ` and created a test for it in ` AppleTestIntegrationTest . java
add ability to turn laser turret out of the team . close # 1181
changed the return type of ` adaptOrder ` methods from ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to ` Object ` to allow for
added a new file PreParseGrammarTest . java to facilitate XML schema preparsing to facilitate testing of XML schema
added @ SuppressWarnings ( " doclint : missing " ) annotation to multiple Java classes to suppress warnings related to missing serialization and version compatibility
added FontManager import and call overrideFont method in ExtendedEditText . java to ensure consistent font overrides across the application
added null check for currentUser in AuthorizeTag and implemented a test for unauthorized access to ensure proper handling of unauthorized access when no user is
camel - 14284 : camel - cxf - ensure safe uri contain unsafe character
added a method to set up the test data in JDBCGeometryTestSetup to ensure proper initialization of the test environment
removed the import of DumpHandler in MultipartFilterTest . java to eliminate unused dependencies and streamline the code
[ hotfix ] [ runtime ] stop restore attempt for already cancel task in backendrestorerprocedure
add option to create rmi registry if rmi . create be set to true
replaced String . join with StringUtils . join for improved readability to enhance code clarity and maintainability by using a more concise
updated display metrics handling in ParallelUniverse and added new test cases in QualifiersTest and RobolectricTest to ensure accurate display metrics
[ java ] : add memberid to service heartbeat to track the id of the cluster member .
added support for the " TotalThreadAllocatedBytes " attribute in TestThreadMXBean based on the major version of the system
modified the return statement in CustomExpression . java to handle special cases for Double . NEGATIVE _ INFINITY and Double . POSITIVE _ INFINITY to
updated debug logging statements and improved exception handling in AjaxListener . java to enhance log clarity and ensure proper exception management during message processing
added authentication methods to the AuthenticityController and created corresponding tests in AuthenticityFormTest to enhance authentication flow and ensure proper testing of
added assertion to ensure nextNode is alive in LoweringPhase . java and corrected formatting in SnippetTemplate . java to enhance code reliability by
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for HttpClientRequestImpl
fix defaulttrackselector . compare ( ) to use reverse order
refactor RuntimeSerialization class to improve serialization handling to enhance performance and maintainability of the serialization process
ggb - 2203 fix cropping of image on the left side
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated related references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 1343 - add content - disposition - filename option to mailcontenthandler to allow customization of the content - disposition
updated the URI construction in ThumbnailsCacheManager . java to use fileId instead of remote path to improve clarity and accuracy of the preview URL
added support for marking input stream in Source . java to ensure proper handling of input stream state and prevent potential data loss
added @ Deprecated annotation to AsyncProcessor , AsyncSubject , and SerializedProcessorTest classes to indicate that these classes are outdated and should no longer be
added a configuration property for showing error stack information in the server to allow users to control the visibility of error messages on the error page
bug 10363 : do n ' t fail domain cleanup if deletion fails
[ sparc ] remove useless bailoutexception from sparcarithmeticlirgenerator . emitforeigncall
[ drools - 5481 ] deprecate ruletemplateconfiguration method in favor of ruletemplateconfiguration
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to use ` Display . INSTANCE . callSerially
increased the DEFAULT _ TIMEOUT _ MILLIS from 100 to 1000 milliseconds in UnboundedSourceSystemTest . java to allow more time for
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve clarity and correctness of resource name qualification
deleted MrefStat . java and MrefStat1 . java files to remove obsolete classes related to lambda method statistics to streamline the codebase
added StringUtils . isBlank check for scope in DependencyInsight . java and updated scope handling in DependencyInsight . java to ensure default scope is
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability by reducing
( chore ) camel - core : use hamcrest assertion instead of junit in test
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding test cases in BitcoinURITest . java to enhance functionality for
planner - 383 fix a bug in abstractfrompropertyvaluerangedescriptor that could lead to illegalargumentexception
removed duplicate calls to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
fix potential deadlock in jfrbuffernodelinkedlist and jfrchunkwriter
[ hotfix ] [ table - common ] simplify null value check in basicabstracttuple
refactor LintUtility to use InputResource for reading linter configurations to improve compatibility with modern Java file handling and enhance error logging
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a ` post ( Runnable
fix infinite loop on inventory tick
added a case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BABY
added @ PublicEvolving annotations to StateTtlConfig . java to indicate that the class is intended for evolving operations
added null handling in PreparedStatement and Array classes to handle null values appropriately to ensure proper handling of null values in prepared statements
[ java ] add description for describe - all and describe - all to archive tool .
replaced single quotes with double quotes in StringBuilder . java to improve code readability and consistency
added a new test method ` jsonSnapshot ` in ` SiteSnapshotVariationsTest . java ` to validate JSON serialization with additional arguments to enhance
refactor BroadTest to improve cache invalidation logic to enhance test reliability by ensuring transactions and blocks are properly invalidated
added support for enabling and disabling PRIVACY mode in AmcrestHandler and DahuaHandler to enable and manage camera
removed the ` throws NoSuchBuildTargetException ` declaration from ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods to simplify method
updated constructors in ChangeLogIterator to accept a List < RanChangeSet > and List < ChangeSetFilter > as parameters to improve flexibility
improve error handling for guest exception in polyglotlauncher
updated environment variable retrieval from getenv to getEnvOrSystemProperty to ensure compatibility with different operating systems
added serialVersionUID to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor spacing handling in SpacesVisitor to use dropParentUntil for clarity to improve readability and maintainability of the code
add copy ( boolean nearcache ) method to servercacheoptions to allow copy of near - cache option
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify border visibility behavior on floated elements
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and
updated the URI from LIVE _ URI to PROD _ URI and added logging for sandbox host exceptions to improve error handling and provide clearer
updated string concatenation in SpringResourceAccessor . java for improved clarity and consistency to enhance code readability and maintainability by standardizing path
updated MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE _ CENTIME
updated vertexMask retrieval from getMask ( ) to getMaskWithSizePacked ( ) in DefaultShader . java to ensure vertexMask is
deleted the Tls12SocketFactory . java file to the functionality was deemed unnecessary or redundant
refactor texbibentryresolvers to use stream api instead of stream . distinct ( )
added a method to check if Robolectric is running in legacy mode to ensure compatibility with Robolectric ' s legacy resource management
added handling for FirebirdDatabase in DoubleType . java to ensure correct data type is returned for Firebird databases
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer . java ` to ensure proper initialization of ` DataSource
test : add @ api annotation to unittest . stubs ( # 4441 )
updated command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1 "
no effective change - code cleanup - use try - with - resources
updated TermScorer to use PostingsEnum . NONE when scoreMode needs scores to improve scoring behavior based on score mode requirements
[ beam - 8470 ] fix npe in dataflowmetrics when metric be null ( # 8470 )
server : fix account _ data _ center _ virtual _ search bug in vmware
refactor dynamic partition pruning to use a new method for finding the target object inspector to improve code readability and maintainability by reducing
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStepTest
added logic to set the row selection interval based on the selected row in ThrustCurveMotorSelectionPanel . java to ensure that the
rename assertthrows to assertarraystoreexception so that it do n ' t conflict with j2cl
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added environmentName parameter to HttpClientBuilder and modified user agent handling in HttpClientConfiguration to enhance flexibility by allowing user agent customization based on the
refactor session management by encapsulating session restoration logic into a separate method to improve code readability and maintainability by reducing duplication
updated assertions in IssueTest and Reporter classes to use Object instead of String for results to enhance type safety and improve clarity in test results
updated ByteArrayDataSource initialization to handle null content type to ensure correct content type is used when content type is null
send activationrequestdenied event instead of actiationid
removed an unnecessary addition operation in the return statement and added an @ Override annotation in the getAppletInfo method to improve code clarity and maintain
added a method to update task views snapshot radius in RecentsView and TaskView classes to ensure consistent snapshot radius updates across task views
added logging for swagger generation and updated revision handling in StaticMicroserviceVersions . java to improve traceability of swagger generation for 3rd party services
changed the return type of the put method from void to int in ArrayMap . java to allow the method to return the updated index value
updated KafkaContainerCluster and KafkaContainerClusterTest to use ` GenericContainer : : start ` instead of ` Stream < Startable > ` to
http : / / issues . apache . org / activemq / browse / amq - 2370 - retry send back message if
updated header handling logic in StaticServerHttpHeadersWriter to check for duplicate headers to improve accuracy in determining if headers should be added based on case
replaced direct class loading with package access checks in EventListenerList . java to enhance security by ensuring proper package access validation
added applications list and image list functionality to the ApplicationsFragment and created a CustomAdapter class to enhance the app ' s functionality by allowing dynamic
updated applyIcon method to accept both icon and task parameters to enhance flexibility by allowing both icon and task to be applied
refactor DownloadStateCursor to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
basesqmtosqlastconverter : do n ' t create an insert statement if there be no target path
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests and modified onSetUp method in HibernateCursorProjectionItemReaderIntegrationTests
added a new ` Poller ` class and modified the handling of input stream reading in ` DataInputStreamWithTimeout . java ` to improve thread safety
added ENABLED _ TS ( 0 ) case to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 . java to improve code organization to enhance maintainability and readability of the code
rename ` testnet3 ` to ` oldtestnet ` for consistency
apps - 3353 remove unnecessary updateifinselection call in propertiesviewd
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and modified the ` flush ` and ` writeBytes ` methods in ` HdfsIndex
pdfbox - 4892 : do n ' t clip path if there be no current path
simplified the local address assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor TemplateTransformer to use a dedicated method for adding values to the row to improve code readability and maintainability by reducing duplication
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
replaced ALPHABET with CHECK _ DIGIT _ STRING and updated related references in Code39Reader and Code39Writer to improve clarity and
fix : do n ' t expect type to be generic and void in nodegen
removed unnecessary conditional check for fieldType . stored ( ) in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix timestamp with nanosecond in where clause
removed conditional check for ` postedRunnableStacktraces ` before adding a new throwable to ` runnables ` to simplify the code and improve
fix typo in javadoc of abstractgscsprocessor .
replaced ` assertInitialized ( conn ) ` with ` waitUntilInitialized ( conn ) ` in ` ConnectionPoolTest . java ` to improve
updated method calls from ` null ` to ` " single " ` in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest
replaced size parameter with a filterCount variable and updated related methods in FaultTolerantChunkProcessor and related tests to improve clarity and
updated tabbed method formatting in FileWithTabs . java and modified file handling in T4994049 . java to improve code readability
replaced conditional return statements with a static import for ` assumeTrue ` in ` ConsoleReaderTest . java ` to improve code readability and
removed unnecessary admin check from session retrieval logic in GetFeedbackSessionsAction . java to simplify session retrieval logic by eliminating unnecessary admin check
updated the calculation of newSelection and condition checks in AllAppsView . java to adjust selection logic for improved UI responsiveness
bugfix # 25244 , do not notify client on result availability if profiledappthreads = 0
refactor DataModelManagerDialog and DbConnectionDialog to handle null connectionList and improve directory deletion logic to enhance robustness and prevent potential NullPointerException
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String . valueOf ( ) ` to
replaced segment size calculation with SegmentInfo ' s sizeInBytes method and added a test for no documents index to streamline segment size calculation and
added validation for dvert field in ArmatureModifier . java to ensure the dvert field is not null before proceeding with validation
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
added a custom UnsupportedOperationException to prevent filling in the stack trace to improve error handling by avoiding unnecessary stack trace filling
updated the calculation of line height in LabelPainter to use a stream - based approach to improve accuracy of line height calculation
replaced the singleton instance of RotationTouchHelper with a constructor that accepts a DisplayHolder to improve flexibility by allowing the constructor to accept
refactor the handling of quoted strings in AVA . java to improve clarity and correctness in quoting logic to enhance code readability and
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` in ` ServletHandlerInterceptor
renamed the test method from ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig (
updated assertion in TestSqlEntityProcessorDelta . java to correct the syntax for retrieving the country name from the substring to ensure accurate validation of the
refactor Cache class to improve cache management to enhance performance and maintainability of the code
renamed variable ` e ` to ` ev ` and updated scope handling in ` ResourceSetRegistrationEndpoint . java ` to improve code clarity
removed IOException declaration and updated IndexSearcher initialization in TestUnifiedHighlighterTermVec . java to simplify code and improve performance by elimin
added a new Java file ` main ` to the ` GcodeTable ` class for testing persistent JTable functionality to demonstrate the
updated the connection timeout configuration to use a dynamic value from the configuration to enhance flexibility by allowing dynamic configuration of connection timeout
updated multiple Java files to improve code clarity and formatting to enhance readability and maintainability of the codebase
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future updates
removed the static String declaration for HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to streamline
add a new file ` MarketsPrintTool . java ` for printing market information for Fiat , Crypto , and BSQ currency
endpointaddressinterceptor : add validation for component name in accountid ( # 4370 )
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality in the application
refactor ServerSpanThreadBinder class for improved clarity to enhance maintainability and readability of the code
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and adjusted block
updated the type of " Location " and " number " in Csv2Shape . java from Point . class to Point . class and Integer .
updated gas cost retrieval in VM . java and removed unused imports in Program . java to improve code clarity and reduce unnecessary dependencies
refactor parameters handling in the Parameters class to improve code readability and maintainability
added a method to ignore null values in the piePlot to improve data handling by ignoring null values
refactor bundle loading and expiration handling in ResourceBundle . java to improve efficiency and clarity in bundle management
pdfbox - 4892 : fix typo , a suggest by valerybokov
add allowduringediting to accelerateableaction , executescriptaction , freeplaneaction , freeplaneaction
added userModified variable to LoginSamlAuthenticationProvider . java to track user modifications during authentication process
added a new file TestSealedObjectNull . java that tests the unsealed behavior of a SealedObject with a null cipher to
updated method names from ` onOpen ` to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added a static final Set for SNOW in BlockEventListener . java to ensure compatibility with versions prior to 1.17 that does not include S
added a lastTradeId tracking and modified the constructor of CryptsyPublicTrade to include the trade ID to ensure unique trade identification and improve
added error handling for closing the HMS connection in HiveStreamingConnection . java to ensure proper resource management and logging of exceptions during connection closure
make glowserver seed a random long instead of current time .
updated device profiles in DynamicGrid . java to include " Nexus 5 " as a new device profile to enhance device compatibility with the Nexus
2 . x : fix npe in refcount reset if connection object be n ' t null ( # 6635 )
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve compatibility with reflective context management
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in FormatToken and TokenFormatter classes to enhance formatting capabilities for text
added checks for non - empty file names and updated file existence checks in SaveTask . java and related tests in SaveAndLoadTaskTest .
added synchronized keyword to several methods in MLogWriter to ensure thread safety during concurrent access to these methods
log4j2 - 1349 add support for mutable log event in smtpmanager
updated the PADDING property builder to use NonNegativeLengthLike instead of LengthLike to ensure proper handling of negative padding values
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation by elimin
fix handling of jimple catch trap in methodirbuilder .
refactor JUnitRunner and AndroidPlatformTarget to use Joiner for better readability and clarity to improve code maintainability and provide clearer
updated cacheSize from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified the JSON structure in ` TestInvocation
added error handling for KeyStore loading in ProvKeyManagerFactorySpi . java to ensure robustness by initializing the keystore if it ' s null
[ hotfix ] [ test ] fix flaky test in upstreamcheckutilstest
ggb - 1193 fix bug in dockmanagerw . updatepaneposition ( ) .
added checks for specific shader extensions before setting limits in GLRenderer . java to ensure appropriate limits are applied only for supported OpenGL types
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
do n ' t handle save all notification for project that do n ' t have data
added UTF - 8 encoding handling and improved JSON serialization in ZQLJobManager to ensure proper handling of file encoding based on system properties
added a check for the length of arguments before accessing their type in IkStepDefinition . java to avoid potential ArrayIndexOutOfBoundsException when accessing args
replaced hardcoded header strings with a constant in FakeOSSOHeaderDecoder . java to improve maintainability and reduce hardcoding of header
added @ Deprecated annotations to options and options in GenerateJavaSources . java and JavaGeneratorMojo . java to indicate that these options are outdated
removed debug log statements related to Apache Derby driver class checks in DerbyDatabase . java to streamline log output for better readability and
[ hotfix ] [ test ] add timeout to cepepstest and cepjavatypetest
updated the parallelStream method from ` parallelStream ( ) ` to ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to
updated condition to check for the existing Liquibase Hub mode before updating the properties file to ensure that the Liquibase Hub mode
added new constants for COREINFO _ VERSION _ IBM _ SUCCESS _ KEYS and COREINFO _ VERSION _ FAILURE _ KEYS in Constants
refactor font logging logic in FontFamily . java and add a new DebugFonts . java file to improve font handling and facilit
added HTTP version handling in NegotiatingServerConnectionFactory to ensure compatibility with HTTP / 1.1 negotiation
added RateControl . NO _ RATE _ CONTROL to HTTP / 2 settings in SettingsBodyParser and MaxConcurrentStreamsTest to improve HTTP
added a new file Test6741426 . java that implements a Runnable that displays a JTextField using Nimbus look and feel
updated the error message in the CSRF token assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to provide more context in the
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to enhance robustness by preventing potential NullPointerExceptions
added package declaration for s3copyobjectrequest . java to organize S3 - related classes under a specific package for better organization
removed unused accentColor parameter from setup methods in SettingsActivity . java to streamline setup logic by using viewThemeUtils for preference categories
updated the error message in TemporaryFolderUsageTest to include the fileAtRoot parameter to improve clarity of the error message for better debugging
replaced ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . MAP `
add address validation to clientnetworkconfig . addaddress ( string , null )
added a new certificate type " keynectisrootca [ jdk ] " to the VerifyCACerts . java file to enhance certificate
log4j2 - 1349 : return the number of output in the batch instead of void
added a conditional check before setting the menu mode in ModeToggleMenu . java to ensure the menu mode is only set when the popup is not
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream
added a new test class ` FinalizerInfoTest ` to verify the behavior of ` MyObject ` and ` GC . finalizer _ info
camel - 16400 : use doonnext ( ) instead of map ( ) in cachingroutelocator
refactor address retrieval logic in BurningManService to improve clarity and maintainability to enhance code readability and facilitate
refactor StringSubject class to improve readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
renamed the method ` setMaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query handling in RetweetActivity and Search classes to replace " from : " with " @ " to ensure accurate saving of recent queries
removed conditional check for forRebalance in SimulatorDiscoverer . java to simplify code logic for better readability and maintainability
added a POST endpoint to import an account from the YubiKey account registry to enable the application to store and manage YubiKey accounts effectively
updated shader program additions in ShaderManagerLwjgl . java and modified parameter names in FontMaterialProducer . java and AbstractNode .
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted padding behavior in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for the subName parameter in HierarchyBase . java to ensure caption is set correctly when subName is not provided
updated the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to ensure
added null checks for ` sim ` and modified condition checks in ` CustomExpression . java ` to enhance robustness by preventing potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify the functionality of multiple database connections to ensure
updated substring delimiters from single quotes to double quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and adhere
refactor line separator handling in DefaultJavaPrettyPrinter and add StringTokenizer functionality in CommentTest to improve code readability and ensure proper line separation
truffle : use atomicreferencefieldupdater for singleimplementor snapshot
added null check for filters before adding queries in SimpleFacets . java to prevent potential NullPointerException when filters are not present
fix ( thinghelper ) : add child thing to the merged thing
replaced ` printHelp ( ) ` with ` error ( ) ` for command validation in ` Ktab . java ` to provide clearer
added a check for the existence of the output file before returning it to avoid unnecessary processing when the output file already exists
added date parsing logic for date strings in DateConverter . java to ensure correct parsing of date strings that include T , plus , and minus
added assertions to verify the existence of a post by its slug in SpringDataJPALockTest and modified the PostRepository to use a query
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added checks for ` OfflineConnection
added a static request factory for SimpleClientHttpRequestFactory in ClientRegistrations . java to configure HTTP request timeouts for improved network reliability
added assertions to verify the existence of a non - canonized file in SourceTest . java to ensure the correctness of file path handling and
remove graalvm . version property from defaulthomefinder and use system . getgraalvmversion instead .
added validity checks for access token and refresh token in ClientAdminBootstrap to ensure default values are set for client validity settings
updated the return statement to include a conditional check for the Android API version to ensure the correct API version is returned based on the current options
refactor references in PropertyPlaceholderHelper for consistency and clarity to improve code readability and maintainability by removing unnecessary ' this ' keyword
updated the string format in Resources . java from " ( { 9 , number , # } ) " to " ( { 9 , number ,
refactor ZkSolrClientTest to utilize CountDownLatch and AtomicInteger for managing collections to improve synchronization and ensure correct handling of collection processing
added BigInteger type import and added BigInteger class in MongoMappingContext . java to enable support for BigInteger data type in MongoDB mapping
added a condition to check if the button text matches the text displayed in HomeFragment to ensure that the toast message is only shown when the button
added a condition to check if MEncoder no out - of - sync is enabled in MEncoderVideo . java to ensure proper handling of video
increased the default event loop thread count from 10 to 15 in ConfigurationProperties . java and updated its value in ConfigurationPropertiesTest . java
changed access modifiers of variables and methods in CountMin4 and CountMin4 classes from abstract to protected to allow subclasses to access these variables and
added sorting functionality to ` ExternalFileField ` and created a new test class ` ExternalFileFieldSortTest ` to enhance sorting functionality and ensure
updated the exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to provide a more specific error message for
updated event formatting and added source ID handling in OpenRocketSaver , DocumentConfig , and FlightDataBranchHandler classes to improve XML
changed the access modifier of the check method from private to protected final to allow subclasses to access the check method for better extensibility
added synchronization handling for file synchronization in FileActivity to improve error handling and user feedback during file synchronization operations
updated the URI generation in ThumbnailsCacheManager to use URLEncoder for file path encoding to improve URL handling and avoid potential issues with special characters
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential null pointer exceptions when accessing
updated total value from 0 to 1 in IntHashSet . java to ensure accurate addition of the value in the hash set
added a conditional check for locked status before updating the entry in FeedRefreshUpdater . java to ensure that updates are only performed when the lock is
refactor conditionals in SolarisAclFileAttributeView to streamline ACE handling logic to improve code readability and maintainability
refactor LatLonTree to use an array for storing edges instead of a list to improve performance and readability of the code
added import for IOUtils and closed the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
remove newline from comment in bibtexparser ( fixes # 3641 )
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure unknown arguments are ignored when strict mode is set to
add support for custom constraint in defaultvalidator and customconstraintsvalidatorfactory
camel - 14284 : camel - http - verifier should use http4 instead of http
added a method to wait for things to level out in TestCloudPivotFacet . java to ensure that the tests have sufficient time to complete
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve test structure to enhance maintainability and readability of the test code
replaced String with StringBuffer for appending details to improve performance and readability of the code
renamed ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in type handling
[ java ] abort recording descriptor poller if dispatch complete .
added cache key and lookup key attributes in EntityProcessorBase . java and updated related logic in TestCachedSqlEntityProcessor . java to ensure proper
added a new file PutfieldError . java that throws an exception for incompatible class change errors to demonstrate handling of PutfieldError
camel - 15836 - camel - aws : fix dns lookup for private to public address .
patch by jbellis ; review by brandonwilliams for cassandra - 1348
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
removed the redundant ` encodedLength ( ) ` method declaration in ` Flyweight . java ` to streamline the code by eliminating
refactor TestMethodResultMapBuilder for improved clarity to enhance maintainability and readability of the code
fix findnulleref to handle java . lang . numberformat , java . lang . illegalargumentexception , java . lang . runtimeexception
[ hotfix ] remove unused lock field in tasklocalstatestoreimpl
updated return statements in Utils . java to format time values as " m " , " h " , " h " , and " d "
updated conditions for handling DeepShortcutView in Utilities . java and FloatingIconView . java to improve code clarity and ensure correct drawable retrieval
changed the type of ` JwtClaimValidator ` from ` String ` to ` Object ` and modified the validation logic in ` JwtIssuerValidator `
renamed methods for buying and selling quick rates in the Coinmate API to improve clarity and consistency in method naming
added a new configuration class ` CoverageConfig ` and refactored ` CoverageController ` to use it to improve code organization and maintainability by
added a check to ensure the event bus is registered only if it is not already registered to avoid unnecessary registrations
added a check for ASCII characters before normalization in NormalizerBase . java to ensure that only ASCII characters are processed in the normalization process
[ hotfix ] [ runtime ] use partitionservice . aremigrationtasksallowed instead of partitionservice . ismigrationallowed
added error handling and assertions in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that SQL updates fail with expected error messages and
( chore ) camel - cometd - producer - consumer : migrate to junit4
updated HTML tag attributes in HtmlTag and related tests to ensure compatibility with HTML5 standards and improve code clarity
added a br / > < br / > in HtmlCoreReport . java to enhance HTML formatting for better readability
updated the calculation of ramBytesUsed to include null checks for scores and docs to ensure that ramBytesUsed is only updated when scores are not
added a custom type adapter for StringHolder in CustomTypeAdaptersTest . java to enable custom serialization and deserialization for collection elements in JSON
set extra data from mining parameters in MergeCoordinator and add a test for it in MergeCoordinatorTest to ensure that extra data is utilized
added a static final Map for argument handling in DependencyParser to improve flexibility by allowing multiple arguments to be processed dynamically
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the codebase
updated variable name from ` configedThreshold ` to ` configuredThreshold ` in ` DefaultMigrationAddressComparator ` and introduced a default delay in `
renamed the parameter ` part ` to ` partOrList ` across multiple classes to improve clarity and consistency in parameter naming
[ zeppelin - 4892 ] move the twitterbootstrap resource to the correct directory for statistic
remove spanishtreebanklanguagepack . basiccategory ( no longer use )
hhh - 14529 add load method to abstractentityloader and deprecate loadbyuniquekey ( )
hbase - 25850 regionserverflushtableproceduremanager . removeall ( ) do n ' t remove cancel element from taskpool
added a check to set the size of the superclass if both width and height are zero to ensure proper sizing behavior when dimensions are zero
fix checkstyle issue in hikariconfiguration
replaced the ` assureMatchVersion ( ) ` method with a default value of ` Version . LATEST ` in ` AbstractAnalysis
fix proxy resolution for interface and abstract method ( # 4890 )
added a condition to check if the input is an COMMA before executing the match method to ensure that the COMMA pattern is processed correctly during parsing
refactor multiple subject classes for consistency and clarity to improve maintainability and readability of the codebase
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5657
moved PublishSubscribeChannel and related classes from the channel package to the dispatcher package to improve organization and clarity of the codebase by aligning
updated executionId type from String to Long across multiple classes to improve handling of execution IDs for better data consistency
added width and height checks to the digest update method in ImageProcessor . java to ensure dimensions are within acceptable bounds for processing
removed logging of overlay version in SolrConfig and added necessary imports in SolrConfigHandler to improve logging clarity and enhance code maintainability
updated the delayUntil value in FileSyncAdapter to use the current time instead of a 24 - second interval to ensure that automatic synchronizations are
fix test failure in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` for better clarity to improve code readability
added URI handling and improved error logging in DefaultPackageScanClassResolver . java and added a new test method in DefaultPackageScanClassResolver
[ hotfix ] [ table - common ] [ table - common ] add utility class for timestamp extraction
added a new class SpringSecurityAuthenticationSource for LDAP authentication handling to provide functionality for retrieving principal and credentials from the SecurityContext
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced autoSuggestDialog with SimpleFormDialog in GenericViewFragment . java to improve user experience by reusing the custom filename dialog
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the parameter of the stream method from ' collection . getName ( ) ' to ' collectionName ' in the ReadDbObjectCallback constructor to ensure
map overview : do n ' t zoom when touch up
updated KNearestNeighborClassifier to accept a Similarity parameter and modified the classification method to return a ClassificationResult instead of void to enhance the
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to simplify query creation and improve performance
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity
updated package - info . java files for consistency to improve clarity and maintainability of the package documentation
added MTU request handling and corresponding tests in ShadowBluetoothGattTest and ShadowBluetoothGatt to ensure proper functionality of MTU
refactor code to encapsulate servlet output stream creation into a separate method to improve code readability and maintainability by reducing duplication
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for unsatisfied link issues
replaced HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager . java to improve thread safety for concurrent access
updated the message in Japanese language from " Japanese " to " All " and " Grouped " to improve clarity and
updated size condition from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and adjusted assertions in ` JDBCType
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced the ` isScreenReaderActive ` method with a ` AccessibilityStateTester ` for managing accessibility states to improve accessibility
added support for ` COMMAND _ BEHAVIOR _ SIDE _ NAVIGATION ` in ` MenuBar ` and ` SideMenu
removed the assignment of Disposable subscription in PoloniexManualExample . java and added debug logging in WampStreamingService . java to
added validation for the energy limit in UpdateSettingForEnergyLimitContract and updated error messages in UpdateSettingForEnergyLimitContractActuator
updated variable names from ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and
camel - 14284 : added getter and setter for namespaceprefixref in SoapJaxbDataFormat . java to facilitate
updated assertions in TestRange . java to use a new method for comparing dates to improve clarity and maintainability of date comparison logic
added JettySolrRunner support in BasicAuthIntegrationTest and updated security properties in ZkStateReader to enhance security checks by verifying server
add pricefeed to tradechartsviewmodel to support sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and
updated variable names and logic in NativeString . java to improve clarity and ensure correct handling of string lengths
added a new ` FileDataStorageManager ` instance and saved a file in ` FileDownloader . java ` to enable file data storage for
[ java ] set the length of the randomAccessFile in the mappedrawlog .
added a method to check if the registry is running and a method to delete a file if it exists with a retry mechanism to enhance reliability
removed unused imports and invoked componentPresetDao . startLoading ( ) in Quick3dMain . java and TextureTest . java to streamline
added @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " javadoc " ) annotations across multiple Java files to suppress compiler warnings related to
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added support for setting isolation level to TRANSACTION _ READ _ COMMITTED or TRANSACTION _ SERIALIZABLE in SQLExceptionCode and Phoenix
added transaction attribute handling in AbstractStepFactoryBean and enhanced error handling in ItemOrientedStep and SkipLimitStepFactoryBean to ensure proper
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and refactored security interceptor to enhance client configuration and improve
added a menu item to the list and updated the visibility of the category in the ListFragment and NavigationDrawerFragment to enhance user experience by allowing
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` and updated the method name in ` FileDisplay
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve code clarity and ensure consistent text size calculation
added a check to ensure the fact is valid before processing to prevent potential null pointer exceptions during constant analysis
refactor multiple Java files related to DistBuildTargetGraphCodec , convertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintain
change ArrayListSpanAccumulator to return a new ArrayList instance from the spans array to ensure that the original spans array is not modified after creation
removed unnecessary locking mechanism and simplified the validation process in Liquibase . java to improve code efficiency and readability by eliminating unnecessary
added a method to set the revision in MicroserviceVersions and updated related tests to ensure proper handling of revision changes in microservice versions
refactor foreign key and index name handling in TableRetriever to improve clarity and consistency in naming conventions to enhance readability and maintainability
camel - 15836 - camel - aws2 - s3 : add unit test for s3 component configuration
removed currency pair parameter from getBitstampUserTransactions method in BitstampAccountService and added a new method in BitstampAccountServiceRaw to stream
added error handling for component retrieval in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing component
do n ' t send push request if remote setting be disable
replaced hardcoded values for legacy addresses with dynamic dataset loading to improve flexibility and maintainability of legacy address comparison tests
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
added snackbar setup logic and refactored push notification handling in NotificationsActivity . java to improve user experience by ensuring push notifications are
[ java ] close the channel in case of an ioexception .
replace null checks with StringUtils . isEmpty for better readability to improve code clarity and prevent potential NullPointerExceptions
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 1357 : add timezone support to the about and flow resource
updated assertion in Splitter . java and improved the splitOwnedRanges method in StorageService . java to enhance code clarity and ensure
no effective change - code cleanup - remove unused variable
removed synchronization around adding and notifying active circuits in CircuitManagerImpl . java to improve performance by reducing unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more appropriate exception type
[ hotfix ] [ runtime ] move sink and source from runner to runner class
replaced error logging with info logging for user authentication failures to improve logging clarity and provide more informative information during user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
ggb - 1343 fix point length for function with no exception
reformatted constructor parameters in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and maintain consistency
refactor database connection handling and logging in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper closure of database connections
update default tls protocol to support jdk 17 and j16
updated exception messages in CountersManager from " Unable to allocate counter , values buffer is full " to " Unable to allocate counter , metadata buffer
modified audio handling logic in MediaManager . java to ensure stopAudio ( false ) is called when mCurrentAudioQueuePosition is zero to improve audio
updated debug logging statements in HttpConnection . java to include cancellation status to improve logging clarity and reduce unnecessary conditional checks
added ` isTransient ( ) ` method to ` JpaPersistentPropertyImpl ` and implemented it in ` JpaPersistentPropertyImplUnitTests
updated stack version assertions and added test cases for HDP - 2.1 . 1 and HDP - 2.2 . 0 to ensure
truffle : make eval ( ) return object instead of symbol .
pdfbox - 4892 : avoid guess encoding of url if it ' s binary
updated the property name from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
remove duplicate code in javaparser and javaparser from javaparser - java
removed the DEFAULT _ OFFHEAP constant from DictionaryIndexType and BloomFilterHandler to simplify the code by using the default configuration directly
updated TableWriterTest to use System . getProperty for line separator to ensure compatibility across different operating systems
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate easier debugging
added a boolean flag ` ownsTexture ` to ` ParticleEffect ` and modified its initialization logic in ` ParticleEffect . java ` to
added new LDAP - related configurations to HiveConf . java to enhance configuration options for LDAP authentication in the application
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated input method management in DetailActivity to include SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY to enhance user experience by allowing forced
added a test for converting a map of primitive types to a primitive map of maps in DataTableTypeRegistryTableConverterTest . java to ensure correct
updated the size calculation in TestFileSystem from 100 , 500 , and 50 to 50 , respectively to optimize memory usage and improve performance during testing
updated error message formatting in ContentTypeManager . java to improve clarity of error messages for better user understanding
changed the ` dropSequences ` method from an abstract method to an abstract method in multiple database classes to allow subclasses to override the ` dropSequences
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced the assignment of ` destinationField ` with a local variable ` f ` to improve code readability and maintainability
bugfix : only gather parent and parent style when the map be active
added a test for retrieving an object after an upsert for a non - existing object in MongoTemplateTests . java to ensure that the findOne method
hbase - 26400 fix the calculation of mid in rowindexseekerv1 , byteBuff , bytebuffer , bytebuffer ,
added functionality to record and record app launches in the Launcher and Stats classes to enhance tracking of app launches and improve intent handling
added graphics creation and disposal for the graphics object in JavaSEPort . java to improve graphics management and prevent memory leaks
update instructorfeedbackresultspagedata to use teammembersfromroster instead of teammembersinspage
added a check to return a valid inventory ID if the player ' s inventory id is zero to ensure that a valid inventory ID is returned instead
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure the loop only terminates if the configuration is found
updated the ` ReloadableJavaParserVisitor ` and ` ReloadableJava8ParserVisitor ` classes to include ` returnTypeAnnotations ` when ` returnType
updated the initialization of blended tiles in TileMapRenderer to handle null values more gracefully to improve robustness by ensuring blended tiles
removed specific sun classes from Probe . java to simplify the code by eliminating unnecessary dependencies
modified the getArea method in IfcTools2D . java to handle the absence of the last segment to ensure accurate calculation of the
removed unnecessary initialization of lockOnSync and simplified variable assignment in Throttler . java to improve code clarity and reduce unnecessary object creation
pipeeventbus . addactions ( ) now call super . onactionactivate ( )
updated the timeout value of ZkController from 1000 milliseconds to TIMEOUT milliseconds to improve test reliability by reducing the timeout duration
added a new test method ` passcode _ with _ client _ parameters ` in ` TokenMvcMockTests . java ` to verify the correct
added support for ` LengthFilter ` and ` KeepWordFilter ` in ` TestRandomChains . java ` to ensure that the constructor correctly handles
removed the import of org . junit . Ignore in RandomPlaneTest . java to eliminate unnecessary dependency on JUnit ' s Ignore annotation
update llvmx86 _ 64bitvastart to use int . tounsignedlong ( ) instead of int . tounsignedint (
refactor the creation of ` btCollisionObject ` instances in ` btCollisionObjectArray ` and ` btRigidBody ` to
added copyright property and updated OPENROCKET _ URL in AboutDialog . java and updated copyright handling in BuildProperties . java to enhance build
add getdistributedobjects ( ) method to jetclientinstanceimpl and add test
added debug print statements to FinSet . java and updated variable values in MassCalculatorTest . java to improve traceability of calculations and ensure
replaced TOTAL _ MEMORY with MAX _ MEMORY in memory semaphore initialization to ensure accurate memory management by using the maximum available memory
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher and modified method parameter name in CreateAlignedTimeSeriesPlan to improve error handling
burningman : do n ' t validate the number of output in the delayed payout .
updated JsonLoaderTest to use JSON formatting and added exception handling methods to improve code readability and ensure proper exception handling during JSON processing
updated capacity validation in ObjectSet . java from a minimum of 1 to a maximum of 0x40000000 to ensure that the table size is
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve clarity and ensure valid data scale is set before processing
replaced ` @ AddToRuleKey ` annotations with ` @ AddToRuleKey ` for several fields in ` AppleTest . java
added security checks and improved content handling in FileHelper and TextHelper classes to enhance security and prevent application crashes due to security exceptions
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for attribute resolution in ` ShadowThemeTest ` to enhance functionality and ensure correct
updated the sheet name check in HSSFWorkbook to use the size of sheets instead of a hardcoded - 1 to ensure correct identification of
replace primaryColor ( ) with elementColor ( ) in ManageAccountsActivity . java to improve the visual consistency with the element ' s theme
added null check for replyHandler in DefaultEventBus and simplified path resolution in DefaultPlatformManager to improve robustness by avoiding potential NullPointerExceptions
added binary collation support to MariaDbDbmsType and MySqlDbmsType classes to enable flexible collation handling based on database type
added a default method ` whenType ` in ` Tree . java ` to return an ` Optional < T > ` to improve type safety by
refactor user view destination retrieval in ItemLauncher . java to improve code readability and maintainability by reducing redundancy
replace ` @ Produces ( MediaType . APPLICATION _ JSON ) ` with ` @ Response . temporaryRedirect ( URI . create ( applicationSettingsService .
[ flink - 26012 ] [ kinesis ] ensure the deserializer be serializable when create a kinesis consumer
( chore ) camel - core : fix checkstyle violation
replaced Thread . sleep ( 2000 ) with a try - finally block in LeaderElectionTest . java to ensure proper resource management and prevent potential
renamed methods from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
added a protected method ` read ( EndPoint endPoint , Buffer buffer ) ` to the ` ProxyHandler ` class to improve code reusability
replaced instances of ` BufferUtil . allocate ( length + 32 ) ` with ` ByteBuffer . allocate ( length 11 ) ` in ` AB
modified the ` prepareStreamsToUpload ` method to return a boolean instead of throwing an exception for unknown actions to improve error handling and provide feedback
updated comparison logic in AbstractConfigLoader and modified test cases in TestMicroserviceConfigLoader to ensure consistent ordering behavior and improve test reliability
added a new file ` PicOfDayAppWidget . java ` to handle application widget updates for Picasso images to facilit
server : fix default service offering id for internal load balancer
updated import statements and refactored join condition handling in HiveParserCalcitePlanner . java to improve code clarity and maintainability by
[ hotfix ] [ doc ] deprecate some of the transformation class
added user and password options for accessing the remote jmx in NodeToolCmd . java to enable secure authentication for remote JMX access
removed redundant initialization of scratch in Stemmer . java to streamline code by eliminating unnecessary duplication
updated widget handling logic in AppsCustomizePagedView . java to use mPageViewIconCache correctly based on the number of widgets
ggb - 1353 fix for 3d view in 3d view
updated rotation positioning logic in GcodeRenderer . java to ensure rotation values are non - negative to prevent rendering issues with negative coordinates
added a new option for workspace directory in OptionEnum . java and updated TerminalClient . java to set the workspace directory to enable users to set
updated the file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure the test file
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure compatibility with JUnit
refactor OAuthConfirmationController to use a model for authorization requests instead of a model attribute to improve code clarity and maintainability by reducing
refactor assertions in HibernateIT . java to use assertTrueEventually for session management to improve test reliability by ensuring sessions are closed
refactor EventBusHook class for improved readability to enhance maintainability and ease of understanding for future developers
refactor MultiPaintEventTest class for improved readability to enhance maintainability and facilitate easier debugging
changed the assignment of mNewScale from final to non - final in WorkspaceStateTransitionAnimation . java to ensure consistent initialization of mNewScale
refactor synchronization logic in SyncFactory . java to improve code readability and maintainability
added handling for unique key fields in LukeRequestHandler to ensure proper identification of unique keys in the schema
added document filtering to strokeColor and backgroundColor in BorderEditor and updated border color handling in EditableResources to enhance visibility and customization of
add miss @ truffleboundary annotation to binaryparser .
[ hotfix ] [ test ] replace slotpoolimpl with slotpool in defaultschedulertest
added logging statements for pending requests in GatewayRSocket and modified backpressure handling in PingPongApp to improve debugging capabilities and ensure proper back
added a toolbar item click listener to the RecentChatFragment class to inform users when the action is under construction to enhance user experience by providing
updated InfoDropTarget to extend UninstallDropTarget and modified startDetailsActivityForInfo and startUninstallActivity methods to improve drag - and -
replaced calls to ` symbolTable . getTail ( ) ` with ` symbolTable . push ( ) ` and ` symbolTable . pop ( ) `
updated API URL and EVENTLOG _ WIKI from " testwiki " to " commonswiki " in CommonsApplication . java
refactor index handling in Stmt . java to use a dedicated method to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ` with direct calls to ` sort ` in multiple classes to improve code readability and reduce unnecessary object creation
added support for DateTimePatterns in FormatData _ hr _ HR . java to enhance date formatting capabilities in the application
added a call to clear focus on the clickedView in DetailFragment to ensure the clickedView retains focus after interaction
updated language selection logic and removed null check for savedLanguageValue in DescriptionsAdapter . java and SpinnerLanguagesAdapter . java to improve code
updated time zone names from " WSST " to " WSDT " across multiple languages to accurately reflect the current daylight saving time in
added native methods for registerGlobal and registerWeak in FastGetField . java and modified accessFields method in FastGetField . java to
added default value handling for union types in ReflectData . java and updated test assertions in TestReflect . java to ensure proper handling of null values
increased offerTimeout from 300ms to 1000ms in SedaBlockWhenFullTest . java to allow more time for the block
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when resourcePath . getRClass ( ) is
added constructor to hapifhirdialect , h2 , hsqldb , hsqlserver , h2 , h2
camel - 16400 : added connection - close header to httpproducer . thanks to daniel for the patch .
increased the timeout duration from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify that the count of tickets with status = ' FREE ' and final _ price _ cts > 0 results in
refactor Parser class to improve code readability to enhance maintainability and reduce complexity
refactor CasProcessingFilter to improve code readability to enhance maintainability and facilitate future feature additions
use getfirstelementchild ( ) . getchildren ( ) instead of getfirstnode ( ) . getchildren ( )
planner - 2858 add support for enum object in the look - up strategy
update metaPortStart and dataPortStart values and add waitingToShutDown method in ClusterEnvBase and ClusterNode classes to ensure proper
updated logging level from warn to info in ELContextCleaner . java to provide clearer information about the absence of cached beans
added a default content type of " application / octet - stream " in WebdavEntry . java to ensure proper handling of content - type for
added a ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created corresponding tests in ` LazyTraceThreadPoolTaskExecutor
fix ( distanceop ) : skip line with less than min distance
replaced ` required ` with ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in labeling
updated the ` next ( ) ` method in ` PurgingPartitionIterator ` to call ` updateProgress ( ) ` to ensure progress updates are
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least three points and updated localVertices assignment accordingly to ensure that only valid polygons contain at least three points
replaced ObjectMapper instantiation with ObjectMappers ' s newDefaultInstance method across multiple files to improve consistency and leverage ObjectMappers ' s
added null check for coeff in GeoImplicitCurve . java to prevent potential NullPointerException when coeff is null
updated the handling of Unicode names in ExternalNameRecord and added a test for bug 47384 to ensure correct reading of Unicode names and validate
fix typo in description of abstractjmsprocessor . destinationtype
added conditional logic to exclude " username " and " password " prompts based on the return value of ` returnLoginPrompts ` to ensure
replaced ` remove ` with ` removeIf ` for listener removal to improve performance by avoiding unnecessary removal of the same listener
added a functionality to toggle the spin button in the PieChartActivity to enhance user experience by providing a more intuitive visual indication
bug cs - 15850 : do n ' t kill the copy process if the vhd file be already copy to secondary storage
hbase - 25829 skip normalizing table if it have quota ( # 2589 )
updated import statements and added a resize method for pressure in AndroidInput . java to improve code clarity and ensure proper resizing of pressure values
added a new method ` propertyValuesOf ` to retrieve property values from an array to enhance flexibility in property value retrieval for testing purposes
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test due to known issues
fix a bug in the hipperhock ' s getentitieswithinaabb method that cause it to return null . close #
added authentication dialog creation in SsoWebViewClient . java to enhance user experience by providing interactive authentication options
added functionality to delete documents and queries in TestStressIndexing2 . java to improve document management and query handling in the indexing process
[ flink - 22559 ] [ test ] ignore upsertkafkatetableitcase due to flakiness
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j , k - > new ArrayList
added a configuration for DeserializationFeature . ACCEPT _ SINGLE _ VALUE _ AS _ ARRAY in DefaultEntityMapper to enable handling of single value
updated localization message from " Localization update : " to " Localization update : BE , UK , and SL . " to provide
updated SHORTCUT _ CATEGORIES from an array to a dynamic retrieval from ResourceUtils to improve flexibility by allowing dynamic retrieval of application
updated visitExpressionInstanceOf and visitRelExpressionInstanceOf to visitRelExpressionInstanceOf and added new test cases in FEELParserTest to
nifi - 1358 : add content - type to the flowfile to be able to specify the mime type of the flowfile
fix bug in hapi when create a bundle with conditional delete and update on same resource
rename ` exitButton ` to ` doneButton ` and update related listeners in ` HelpActivity . java ` and ` SearchBookContentsActivity .
polish ` ` fix typo in javadoc ' '
refactor ` invalidateStalePartition ` method to accept ` List < PartitionNameWithVersion > ` and ` MetastoreContext ` as parameters
bug 62166 - view result tree : use circularfifobuffer instead of unboundedfifobuffer
updated the icon resource from ` ic _ group ` to ` ic _ chat _ bubble ` across multiple classes to improve the visual representation of chat
[ java ] use volatile read instead of direct read in broadcast receiver .
updated test method names in MocksCreationTest . java for consistency and clarity to improve readability and maintainability of test code
[ te ] detection - minor fix for integration test ( # 3774 )
increased the timeout duration from 10 seconds to 30 seconds in awaiter method calls to allow more time for awaiting tasks to complete before
removed the BuildSlaveFinishedStatusEvent class and its associated methods from DistBuildRunCommand and DistBuildSlaveEventBusListener to simplify the event
cloudstack - 4892 : fix template uuid name to use utf - 8 encode .
added test case for depositing a workspace item without a workflow
added distinct ( ) to classpath file processing in ClassLoaderSupportImpl . java to ensure unique classpath files are processed
removed the method ` isBoxedPrimitive ` from ` Unbox . java ` to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a test for ordering of flags in TestSpecificCompilerTool to improve code readability and ensure
added a null check for the table before deleting the directory in HiveMetaStore . java and modified partition handling in TestHiveMetaStore .
updated asynchronous execution settings and error handling in HiveServer2 to improve performance and provide more informative error messages for better debugging
added a try - catch block around dismissDialog call in Launcher . java to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for the execution task role and streamline the filter initialization to improve code readability and maintainability
fix a bug in the telephony conferencing sip implementation . patch by stu hood ; review by stu hood
do n ' t reload the log model ( # 3550 )
added checks for channel and socket states in ChannelEndPoint . java to ensure proper handling of input and output shutdown scenarios
refactor SetNullableGenerator class to improve code clarity to enhance maintainability and readability of the code
camel - 16400 : fix camel - example - reportincident to use cxf instead of cxf
updated import statements and refactored form handling in NettyRoutingFilter . java and FormIntegrationTests . java to improve code readability and
added @ ApiOperation annotations to several service classes and updated their implementations to enhance API documentation clarity and maintain consistency across service implementations
replaced the ` update ` method with ` update ( ) ` and modified lifecycle listener management in ` Lwjgl3Application ` to
updated the FG _ FK color from 90 to 200 in UIUtil . java to improve the visibility and aesthetics of the
do n ' t require mp3 in the sound manager
fix test failure in secondaryindexmanagertest
pmd - plugin : add a version preference to show the version of the bundle
[ hotfix ] [ test ] use findthrowable instead of instanceof in customserializationitcase
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added a method ` isCellEditable ` to ` GeneralTab ` that returns false to provide a placeholder implementation for cell editing functionality
added a method to check if commands should be printed only based on the ` isUnusedDependenciesOnlyPrintCommands ` configuration to improve flexibility in
added a static variable ` tmpCount ` and updated ` vscales ` in ` VocalTractModifier . java ` and ` Vocal
updated import statements in BaseScalarUdfTest and TestUDFRound , TestUDFConcat , and TestGenericUdfConcat classes to
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
update testskeletoncontrolrefresh to use the new animcompositecompositor instead of the old one
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods in ` NodeUtil . java ` to improve clarity and consistency
updated condition in NodeImpl . java to check for a minimum size of SYNC _ FETCH _ BATCH _ NUM to ensure proper handling of
updated the state value from 365 to 366 and modified the local context type assignment in DebugExpressionParser . java to correct the parsing logic and
updated the condition to check for transitive dependencies in ExcludeDependency . java to improve dependency management by ensuring only relevant dependencies are considered in classpath
replaced ` tmp ( ) ` with ` dst2 ( v ) ` and updated the ` lerp ( T target , float alpha
initialize the args variable to an empty array to ensure that the args variable has a default value before use
refactor linker argument handling in RustBinaryDescription and add a test for linker flags overrides in RustLinkerIntegrationTest to improve flex
[ # 8727 ] fix test property file for travis and appveyor
added configuration for the Hive query name in HiveConf and improved logging in TaskExecutorService and GenericUDTFGetSplits to enhance clarity
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
bugfix # 205273 , do n ' t throw an ioexception on a closed stream
updated the ` validateQuery ` method to include an additional ` Object . . arguments ` parameter to enhance error handling by providing more context about the
updated INDEX _ VERSION from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve index versioning and streamline
[ hotfix ] [ test ] add kryoserializerregistrationstest to verify that default kryo registered classes do not change
added null check for configuration property removal before adding it to configTypesUpdated to avoid potential NullPointerExceptions during property removal
refactor boolean value handling in MetaStoreDirectSql . java to use BooleanUtils for better readability to improve code clarity and maintainability
added a call to hide the customization drawer in the Launcher class to improve user experience by hiding the customization drawer when needed
refactor warning handling in TermVectorComponent to use a constant for key warnings to improve code readability and maintainability by reducing redundancy
added logging for optimistic types and modified log levels based on log settings to improve visibility of compilation processes based on environment settings
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable access to Docker with unix local socker
( chore ) camel - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
improve error message when the stream have no active subscription
refactor vectorization logic to use ` convertMapWork ` instead of ` validateMRTask ` for ` MapRedTask ` to improve code
added a boolean parameter to the superclass constructor in StringAppender and LogDivertAppender to enable additional functionality for logging in the appender
fix possible npe in jmetertreemodel due to nullpointerexception
sulong : add support for ` ` weak ' ' linkage .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
test : add test case for defaulttransactionthreadlocal . get ( )
added a check for invalid OperationHandle in HiveStatement . java to improve error handling and logging for client - side operations
renamed ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _
camel - 17644 - camel - aws - secrets - manager : add unit test for secret manager component configuration
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from email sending response in UserREST . java to simplify error handling for better clarity
added a boolean parameter to the ` fromContent ` method and modified the ` fromContent ` method to include a ` subTree ` parameter to
updated column width calculation in Sheet . java and added a new test method in TestHSSFSheet . java to ensure consistent column width calculation
added a configPath parameter to the Commands . less method call to enable dynamic configuration of the command execution
changed ` Set ` to ` Collection ` in ` DotWriter ` and ` GraphExecutable ` classes to allow for a broader range of collections
use 1.0 . 0 for sshd in testcontainersconfiguration . getsshdcontainerimage ( )
server : fix npe in agentmanagerimpl when hostid be null .
refactor key generation logic in DefaultGroupKeyGenerator to utilize BlockSingleValIterator for multi - valued grouping to improve code clarity and
updated the test method to verify seeking exceptions and improved error messaging to enhance test reliability and provide clearer error messages for seeking
updated variable names and builder usage in BCSiliconRecipes . java to improve code readability and maintainability by using a more
fix typo : ` ` put ' ' should be ` ` putobject ' '
updated visibility logic in CellLayout and refactored drag - and - drop handling in Workspace to improve code readability and maintainability while ensuring
updated ModifyRequestBodyGatewayFilterFactory to use getRewriteFunction ( ) and added a test for empty upstream request bodies to ensure proper handling of empty
added checks for package - accessible modifiers in ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring only public types are processed
changed log level from warn to trace for various events in LoggingHandler . java to improve logging detail for better debugging and monitoring
refactor prefix handling in WhiteBlackList and add a new test class for issue # 348 to improve code clarity and ensure proper functionality
added menu options for displaying images in the GalleryActivity to enhance user experience by allowing users to view images directly from the gallery
refactor MongoDBServiceFactory to use a singleton instance of SimpleTestServiceBuilder to improve resource management by reusing MongoDBService instances
added methods to prevent code formatting for boolean values in InlineConstantMutatorTest . java to improve code readability and ensure correct behavior of boolean values
added a Blackhole parameter to the decode method and updated its usage in RecordTest . java to enhance functionality by allowing additional processing of numeric values
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the method to return a stream of entries instead of just values and added a check for inbound specs in DeviceThingHandler . java to improve
removed the call to dbManager . getWitnesses ( ) . clear ( ) in ManagerTest . java to ensure no residual witnesses remain
improve error handling by use log instead of throw a prestoexception
replaced ` getScriptStackString ` with ` delete ` and added methods for managing the stack property in ` sobj ` to improve stack management
removed the conditional check for path name starting with " . " in DrillPathFilter . java to simplify the path filtering logic
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before tests run
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to correct the constant value for
changed fThreadGroup from non - volatile to volatile in FailOnTimeout . java and modified constructor in Timeout . java to improve thread safety and
removed the final modifier from the getValue and setValue methods in ValueResultData . java to enforce immutability and prevent unintended modifications
updated hash code and equality check in FuzzyQuery . java to ensure proper equality and hash code generation based on superclass implementation
removed unnecessary system . err . println statements in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed method signatures from ` removeFile ` and ` removeDirectory ` to ` removeFile ` and ` removeDirectory ` in ` SharedOpenFiles
updated database driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated ` retrievePersonAttributes ` to use ` new HashMap ( 0 ) ` and refactored principal creation in ` buildResolvedPrincipal ` to
changed log level from info to warn in OpenWebNetBridgeHandler . java to provide a less severe indication of connection issues
updated method names from ` intHash ` to ` hash ` across multiple classes to improve clarity and consistency in hash function naming
added a new constructor ` ThumbnailGenerationTask ` to ` ThumbnailsCacheManager ` and modified bitmap validation in ` FileUploader ` to ensure
updated the loop condition in GroupSelectionQuery to include a retry limit of 5 to ensure proper termination of the loop based on the number of attempts
added a new file ` Bug1933922 . java ` that implements a simple program loading mechanism to demonstrate the use of
removed unnecessary parentheses around comparison logic in multiple classes to improve code readability and maintainability
updated control character validation from 33 to 32 in FileResolver . java to ensure that control characters 0 - 31 are valid and prevent potential errors
added a call to requestFocus ( ) in the Display class to ensure the component receives focus when needed
update instructorhomepageuitest to work with new instructor home page
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to clarify the purpose of the parser related to stream processing
modified the handling of Crouton cancellation and notification in DetailFragment and MainActivity to improve user experience by ensuring appropriate feedback is displayed based on
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
refactor process execution to use ProcessBuilder for improved clarity to enhance readability and maintainability of the code
updated the method call from ` InetAddress . getLocalHost ( ) ` to ` InetAddress . getByName ( " 127.0 . 0.1 "
refactor controller handling to use a loop for splitting controller names to improve code readability and maintainability by reducing redundancy
added assumptions for macOS support in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
add miss check for required property in jvmciversioncheck
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated ` readAllBytes ` method to include ` ctx ` in ` BinaryParser ` , ` PlainTextParser ` , and ` ParsingExecutionContext
added support for MultiPartFormDataCompliance in HttpConfiguration and created a new enum MultiPartFormDataCompliance in Request to enhance compatibility with Jetty 10
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to support support for JDK 17
added a method ` addType ` to ` SnapshotControl ` and modified type addition logic in ` DatabaseSnapshot ` and ` SnapshotControl ` to improve
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith in ChangeSet . java to ensure proper handling of null or empty runWith values
http : / / issues . apache . org / activemq / browse / amq - 2894 - add test for amq
refactor AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , and ShadowTextUtils classes to improve code organization and maintainability across
pdfbox - 417 : do n ' t fail the test if the image be too large
refactor tinting color and dimension alpha settings in TaskView . java to improve clarity and maintainability of tinting logic
added a new file ` SumZeroFunctions . java ` that implements the ` SumZero ` aggregation function in the Drill framework to provide functionality
[ hotfix ] [ table - planner - blink ] fix npe in firstvaluefunctionit and nthvaluefunctionit
hbase - 25829 add more information to the warn message when a region allocation fail ( chunhui )
added a null check for propName before setting the value in roleObject . getProperties ( ) to avoid potential NullPointerException when propName is null
updated visibility annotations and modified task removal logic in multiple classes to enhance testability and improve code clarity
added a method to log a container stream in the DockerClient class to enable logging of container streams for better debugging and monitoring
mvstore : add performance test for cache ( )
updated LONG type from " L " to " J " in PrimitiveType . java to reflect the correct representation of long values
changed the access modifier of the delegatingApplicationListener method from public to static to allow the method to be called without creating an instance of the
camel - 14284 : camel - rest - rest should set the message body to null , not the original message
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement a tasklet
g3d - 1343 : do n ' t update size keep drawables when create view
updated bitwise operations in BitUtil , Int2IntCounterMap , Int2IntHashMap , Int2IntCounterMap , Int2IntHashMap
updated ` sendEventToTest ` and ` goToOverviewUnchecked ` methods to use ` stateOrdinal ` instead of ` eventTag `
added conditions to check if the request is a video thumbnail request in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video requests based on
updated error handling logic in ErrorCheckerService . java to handle cases where PDE line offsets are not set correctly to improve user experience by ensuring
updated title area addition logic in SideMenuBar to differentiate between top and bottom buttons based on theme constants to improve layout consistency based on the
added preload = " libskia " in Skia . java and modified link and link properties in Skia . java to enable loading of
added a constant for the unittest network ID and modified the logic for returning unitTests to improve code clarity and maintainability by centralizing
added error handling for format arguments in QueryCommand and created corresponding tests in QueryCommandIntegrationTest to ensure correct usage of format arguments and improve test
replaced ` capacity ` with ` length - 1 ` and updated related logic in ` IntIterator . java ` to improve clarity and correct
updated the ` walkRuleAndAdd ` method to include a ` srcTarget ` parameter and modified its logic to conditionally visit dependencies based on
[ netbeans - 4892 ] fix class _ output module location when sourceoverride be enable
[ java ] do n ' t check major version of candidate term in election .
modify OwnCloudClientManagerFactory to set default policy based on SAML authentication status to ensure consistent client behavior based on authentication type
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required mappedTableResource is provided to avoid runtime errors
refactored onmessagesubscriber , receivesubscriber , and jmssampler to use a common close method to reduce code duplication
refactor AnonymousAuthenticationFilter to use a Supplier for deferred security contexts to improve flexibility in handling anonymous authentication scenarios
modified the removeActor method to accept an additional parameter for unfocusing actors to enhance actor removal functionality by allowing control over unfocusing behavior
refactor prompt handling in SolrCLI to use a variable for valid configurations to improve code readability and maintainability by reducing duplication
added logging capabilities to the NettyHttpServer and RoutingInBoundHandler classes to enhance debugging and monitoring capabilities during network operations
refactor multiple classes related to formatting and parsing to improve code organization and maintainability
replaced the call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependencies
camel - 16400 : camel - groovy - allow to load groovy script from cache . thanks to benjamin graf
use set instead of list to avoid concurrentmodificationexception
[ hotfix ] [ cli ] make cliFrontendParser and programoptions public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added storage alias retrieval and certificate chain retrieval in HttpsMessenger . java to enhance certificate management by associating storage keys with their corresponding certificates
simonstewart : throw a webdriverexception if we can not convert the response to a json
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
added support for drop xp resource in block . getresources ( ) ( # 6240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable spatial location calculations in the application
refactor multiple Java classes related to communication and page ranking to improve code organization and maintainability
replace keySet ( ) . isEmpty ( ) with isEmpty ( _ root ) in TreeTrie . java and add corresponding test cases in TrieTest .
updated foreground and background methods in AttributedStringBuilder to include parameters for r , g , and b to streamline the code for better readability
added a condition to disable fingerprint synchronization based on the system property " solr . disableFingerprint " to improve flexibility in fingerprint management based on system
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated ` maybeEmitEvent ` calls and added ` PersonWithIdPropertyOfTypeUUID ` support in ` MongoTemplate ` and ` MongoTemplateTests
improve performance of collectionitem . writedata ( ) and collectionitem . readdata ( )
added a null check before closing the InputStream in TikaCLI . java to ensure proper resource management and avoid potential memory leaks
replaced ` ApiBag . ExceptionWithErrObject ` with ` ApiException ` in ` TestCollectionAPIs . java ` to improve error handling
removed unnecessary line breaks in the configuration loading process to improve code readability and maintainability
fix typo in instructorfeedbackcopyactiontest and instructorfeedbackaddactiontest
[ beam - 8470 ] fix checkstyle violation in externalworkerservice and jobservicepipelineresult
( chore ) camel - omematic : remove unused step property
added logging for shared and exclusive lock acquisition and release processes in PostgreSQLReadWriteAdvisoryLocksTest . java to improve traceability of
added scheduleJobs ( ) method call in BaseSchedulerServiceImpl . java to ensure job scheduling is consistently executed
danielwagnerhall : do n ' t use selenium . istextpresent ( ) in testgettextcontent .
refactor Logger class to use ThreadLocal for thread - local logger management to improve thread safety and performance when accessing logger instances
added @ VisibleForTesting annotation to FunctionInitializer and updated the convertToCompilationUnit method to use MockitoJUnitRunner instead of JMockit to
added boxed type handling and improved type inference logic in various classes to enhance type safety and prevent errors when dealing with primitive types
updated task view handling and orientation state management in RecentsView . java and TaskView . java to improve task view management and ensure proper
hbase - 25829 fix testflushfromclient to use getregion ( ) instead of getliveregionserverthreads (
added cloning and deletion logic for repository tracking in TransactionExecutor . java to ensure proper handling of contract details during transaction execution
updated balance calculations in TokenIssueProcessor and Program to use dynamic properties for asset issue fees to improve flexibility and accuracy in withdrawal
refactor cache management in RealisticRenderStrategy to use URI instead of Appearance and Texture to improve cache management by ensuring texture resources are properly
refactor the composition logic in Blit . java to use temporary raster variables to improve code clarity and prevent potential side effects from using shared raster references
added functionality to retrieve string width for unselected styles in multiple classes to improve text rendering accuracy based on user - selected styles
replaced direct ArrayList initialization with a dynamic initial capacity of 0 to optimize memory allocation for improved performance
removed the ` flags ` parameter from several method signatures in ` ShadowApplicationPackageManager . java ` to simplify method signatures and improve code readability
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
transformer : remove mp4 sample with increasing timestamps from test
refactor old firmware check logic in TradfriGatewayHandler . java to improve clarity and maintainability of firmware version checks
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated layout checks in BoxLayout and DefaultLayout to include " table - cell " display to ensure proper layout behavior for table - cell display
refactor JsonDecoder to improve the handling of JSON array elements and add a test for reordering fields to enhance code readability and ensure proper
updated the listener to accept removalCause as a parameter to improve clarity and functionality of the releaseLocation method
[ hotfix ] [ test ] disable savepoint test for now
added @ Test annotations to DroolsMvelParserTest . java to ensure proper functionality of the parser tests
changed fields in ContextRegisterListener from package - private to final in ShenyuClientRegisterEventPublisher . java to ensure immutability
refactor ObjectHashSet initialization and iterator initialization in ObjectHashSet classes to improve flexibility in managing the iterator and its initialization based on cache behavior
added batchBytes handling in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batch size does not exceed predefined
updated context modes from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated JdbcProxyGenerator to handle the " abort " case and added logging for connection destruction to improve error handling and provide clearer logging
updated animation state handling in Workspace . java to set important for accessibility based on the current state to improve accessibility handling based on the
changed log level from warn to debug in ProtobufLogReader . java to provide more granular logging for malformed edits
updated scope assignment in UaaTokenServices and added unit tests for scope persistence in UaaTokenServicesTests to ensure correct scope handling and validate
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailableJDBCDrivers . java to improve code clarity and
[ bz - 1068585 ] introduce executablecommand interface to provide a way to execute a command with a context
( chore ) camel - jms : remove unused jdbctableservice
added methods to retrieve padding values in CellLayout and modified bitmap scaling in Launcher to improve layout handling and ensure correct bitmap scaling based on orientation
added a conditional check for the presence of a sb before processing the candidate list to ensure cands are assigned correctly based on the presence of a
updated SamlIdPConfiguration , SamlMetadataController , SamlMetadataUIParserAction , SamlMetadataUIParserDynamicActionTests ,
added a method to check for open LDAP ports in LdapMockMvcTests . java to enhance test coverage by verifying the existence of LDAP ports
log4j2 - 1349 fix checkstyle issue in log4j2 - core
refactor URL handling in Fetcher and HTMLMetaProcessor to improve redirect handling and enhance logging clarity to enhance debugging capabilities and ensure correct URL
updated query parameters in TestSpellCheckResponse . java to use " name : samsang " instead of " homer " to ensure
added support for old and new Karaf Console API in the TerminalServlet and ThreadIOHolder classes to ensure compatibility with newer and newer Console
fix a bug in the getverticescolors method that could lead to an arrayindexoutofboundsexception .
added a file filter to exclude time - sensitive reports directories during the report generation process to improve performance by excluding irrelevant reports from the copied directory
updated test method names and added parameterized tests for email validation to improve clarity and maintainability of test code
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java and thrown a TemplateProcessingException in FieldUtils . java to ensure proper error handling for
removed debug print statement from JoglInput . java to streamline output and improve code readability
added a configuration option to allow extraction of private fields in FieldSupport to enhance flexibility in field handling by allowing extraction of private fields
added a string replacement for device name in WebDataHandler . java to ensure the device name is properly displayed in the output
added support for a nullable constructor for Lookup in Platform . java to improve flexibility in obtaining Lookup instances based on Java 8 types
deprecated the ` weights ` method in ` ZParams ` and added a new method ` weightsByDouble ` in ` SortedSetCommandsTest ` to
added Database parameter to writeCustomHTML method across multiple writer classes to enhance functionality by integrating database - specific operations
updated BTreeMap . java to remove unnecessary type casting and simplified key deserialization to improve code clarity and maintainability by eliminating unnecessary
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to include BalanceInsufficientException and InvalidProtocolBufferException
do n ' t write a zero byte if heap . zerofile = true
replaced ` print ` statements with ` sendMessage ` calls in ` Main . java ` and updated license key handling in ` Main . java `
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to improve
added import statements for ChunkListener , ItemProcessListener , and ExitStatus in multiple batch processing classes to enhance event handling capabilities by notifying listeners
reformatted code for improved readability and consistency in AbstractProviderModule . java to enhance maintainability and clarity of the code
updated print statements in SearchFiles . java and modified method calls in SortedSetDocValuesFacetCounts . java and MessageFilesParser . java to improve
updated Test7005594 . java for improved test coverage to enhance reliability of the test suite
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
modified TopKRollupPhaseOneJob . java file to implement updates for improved functionality
server : fix npe when map ip address to vm id in case ip4 address be null
updated modifier digital triggers to support analog functionality in the Gamepad class to enhance the gamepad ' s responsiveness to user input while
refactor ` iteratesOverSequence ` and ` iteratesOverAsList ` methods to accept ` Iterable < T > ` instead of ` Object `
camel - 14284 : camel - default - http should only decode the first pair of a header , not only the first one
added assertions to verify the presence and absence of multiple SQL query results in the ` ActivityHistorySQLServerStoredProcedureTest ` class to ensure
updated BarChartActivityMultiDataset and BarLineChartBase to utilize LargeValueFormatter for value formatting to improve chart readability and ensure
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate the warning about incompatible argument types
fix typo in tracelinearscanlifecyclestyleanalysisphase log message
added a TODO for auto - generated method stub in NullAssertionValidator . java to prepare for future implementation of the Auto - generated method stub
added import for RuleKeyAppendable and updated rule key appending logic in DefaultRuleKeyBuilderFactory to enhance rule key management for better compatibility with B
added a check for the existence of the system profile directory before creating it in PmsConfiguration . java and refactored test setup and teardown
refactor thread factory creation in TestcontainersDockerCmdExecFactory to use a new factory method to improve code readability and maintainability by redu
replaced direct message counting with a dedicated method ` getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP
added attribute " accept " to the el element in ImageFileInputDialog . java to enable image processing by default
refactor ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and simplify client initialization to improve code readability and maintainability
added detailed witnesses and class names in ForkController . java to improve debugging and traceability of witnesses and their class types
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests the behavior of ` CustomURLClassLoader ` with null and empty
added methods to find configured generated source paths using dependencies in BaseIjModuleRule and removed unused code from IjProjectBuckConfig to
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` to ` UaaStringUtils ` and modified the wildcard construction logic to
added validation checks for aliasToWork and tableScanCount in Vectorizer . java to ensure correct handling of table scan operators to avoid runtime errors
updated import statement for MockitoJUnitRunner and removed exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting setting fails
replaced specific imports with a wildcard import and modified the getLangs method to return a Set instead of an array to improve code readability and
removed redundant assertions in LazyTraceScheduledThreadPoolExecutorTests . java to streamline test code and improve readability
hbase - 25829 add prepare ( ) method to disabledtablesnapshothandler and takesnapshothandler
[ wasm ] introduce a new method ` createplatformisnullcall ( ) ` in ` javaemulinternalplatform ` .
added a test for modifying the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the HTTP RPC endpoint is modified when the explorer
added a volatile boolean flag ` isSuspended ` and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java `
replaced Javadoc . Author , Javadoc . Since , and Javadoc . See with Javadoc . Hidden , Javadoc . Hidden , and Javadoc . SerialData
( chore ) camel - test - infra - spring : add test case for two camel context
removed redundant @ Override annotations from multiple security classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests and MyComplexEnum2 to ensure proper module usage during
updated the language string from " W3C XML Schema NS URI " to " http : / / www . w3 . org / 200
added content description handling for badges in BubbleTextView to improve user experience by displaying appropriate notifications based on badge status
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enable proper handling of mouse wheel movement in the
added closing of PDF documents in VisualTester and added a new test for positioning absolute in VisualRegressionTest to ensure proper resource management
updated currency pairs in KucoinAdapters and KucoinIntegrationTests to use " XRB " instead of " ETH " to ensure
replaced instances of ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . LOCATION _ A ` and
removed currency checks for " DASH " and " QTUM " in BitfinexAdapters . java to simplify the code by directly returning the
replaced ` Sets ` with ` ImmutableSet ` and modified default field handling in ` JsonFormat . java ` to improve code clarity and ensure
removed array and enum type checks from JacksonXmlFormatMapper to simplify the code and improve readability by eliminating unnecessary checks
added new constants and modified thread handling logic in VirtualThread . java to improve thread management and enhance clarity in thread state management
updated the ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to include ` catTerm ` and ` docs ` parameters to
refactor VetoableChangeSupport . java for improved clarity to enhance maintainability and readability of the code
adjusted the calculation of the Y - coordinate in the BrowserContentPane to account for the last height value to ensure correct positioning of the
pdfbox - 4892 : remove unnecessary exception throw , a suggest by valerybokov
added tests for handling security exceptions for short and long support messages in ShadowDevicePolicyManager to ensure that security exceptions are correctly thrown for non -
ggb - 1357 add a menu close button to inputbar help panel
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced Thread . sleep with ThreadHelper . waitUntil for controller state checks in multiple classes to improve responsiveness and reliability of the
updated the condition to check for release status in SwingStartup . java to ensure updates are only processed when the release status is OLDER
added support for including a generated file comment in the DbMigration and DbMigration classes to allow users to specify whether to include a comment for generated
updated command descriptions in multiple classes to use " | * > " instead of " < player > " to improve clarity and consistency in command
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused thread filtering functionality to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a check for ` parallel ` in ` TestNGContentHandler . java ` to ensure compatibility with parallel processing in tests
updated the logic for setting the enableActingMaster setting and updated the registerFirst condition to use StringUtils . isEmpty to improve code readability and
refactor : remove static import of enums in ctmethodimpl . java ( # 2566 )
added serialVersionUID fields to multiple classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a ` separator ` parameter and modified its usage in ` ShibbolethCompatiblePersistentId
updated parameter handling in Parameters . java to check for null values before parsing to improve robustness by avoiding potential NullPointerException when systemActionsEnabled is
added a new file ` Person . java ` that contains a class ` Person ` with a private field ` name ` to encapsulate and manage
refactor start method to remove dependency on local address .
updated the case - insensitive comparison for column labels in AbstractClient . java to ensure consistent handling of time strings regardless of letter casing
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated segment metadata in SegmentMetadataImpl . java
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated the background color
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
no effective change - use annotationtypesbytereotype instead of getnamesbytereotype ( )
danielwagnerhall : add a test to verify that click on an element hidden by double overflow do n ' t work
added a try - catch block around dismissDialog call in Launcher . java to handle potential exceptions during dialog dismissal
added support for custom JNDI lookup in JTA TransactionSynchronizationRegistry to enhance flexibility in configuration by allowing users to specify a custom JNDI
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unused functionality
rename variable ` enabledCiphers ` to ` result ` and update related references in ` JSSESocketFactory . java ` to improve clarity
[ beam - 8470 ] [ table - planner - bq ] use java . time . instant . toepochmills ( )
replaced ` IllegalArgumentException ` with ` requireNonNull ` for buffer and user credentials in ` Identifiers . java ` and ` DatabaseConnector . java `
bug fix for complex input type with non null input field that have default value ( # 2180 )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices are within valid table boundaries
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance user interface responsiveness by
[ java ] unnecessarylocalbeforereturn : fix false positive
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code and improve clarity by
refactor correlation calculations in EuclideanDistanceSimilarity . java and update assertions in EuclideanDistanceSimilarityTest . java to improve accuracy of
fix npe in datatracker # incrementallybackup ( sstablereader sstable )
refactor ` relativize ` method to accept two ` Path ` parameters and add checks for non - empty paths to improve path handling and
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and modified the value construction in DataType to ensure proper handling of null values and
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
renamed ` ErrorHandlerController ` to ` Error404Controller ` and added new classes ` Error404Controller ` and ` Error404ControllerTest `
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
tiny : add support for ` ` $ collection . tostring ( new $ clazz [ 0 ] ) ' '
refactor connection acquisition logic in ConnectionPool . java to improve efficiency by removing elements from entriesCopy before acquiring connections
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message format in JavassistUtils to include classLoader to improve clarity of error messages for better debugging
added exception handling for reader and writer threads in LargeStreamletTest . java to ensure proper exception management during streamlet operations
updated the home fragment to count extra pages based on current account settings instead of a hardcoded value to improve user experience by dynamically adjusting the
added error handling for image loading in AndroidImplementation . java to improve robustness by preventing crashes on unsupported Android versions
replaced ` suppressNode ( ) ` with ` @ SuppressSubnodes ` in ` BaseParser . java ` and removed the ` suppressNode
updated FDFParser instantiation to use try - with - resources for better resource management to ensure RandomAccessRead is properly closed after use
deleted the TestDocInverterPerFieldErrorInfo . java file to the file was deemed unnecessary or redundant
added a shell command to input a key event 82 in AbstractLauncherUiTest . java and removed the assertion in LauncherInstrumentation . java
added JSON serialization for filenameToUrl in FileDumper . java to facilitate the storage and retrieval of the output file ' s URL
bugfix # 258270 , make resetresultsnotifiedflag ( ) method private
refactor texturehelper to use loadimage instead of getTexturefromimage to improve code readability and maintainability
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of
updated test values in RandomizersTest . java from " 9781797745008 " to " 9781797845005
updated notification sound configuration to use a configurable ringtone URI to enhance user experience by allowing customizable notification sound settings
added a method to report loop count in the RootNode class to enable reporting of loop count during execution
added conditional logic to set the current stack version based on repository type in FinalizeUpgradeAction . java to ensure proper version management during cluster finalization
fix findbyregionidandstatesearch to use regionid instead of rangeid
removed duplicate call to streamManager . open in ItemOrientedStep . java to improve code clarity and maintainability
added a new file CountedLoopProblem . java that implements a counting loop problem with a random number generation to implement a test for counting loop
[ gr - 36400 ] remove unused parameter from compilertovm and compilertovmimpl . executecompiledmethod
use jlong instead of int for pending _ failed _ speculation in graalvmconfig .
refactor KafkaStreamsTracing to use ValueTransformerWithKeySupplier instead of TransformerSupplier for peek and mark methods to enhance tracing capabilities by integrating
added ` ` received ' ' to the list of points in ` ` , total points ' ' in ` ` , received ' '
removed the call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` in ` BaseApplication . java ` to streamline the application
added thread management and stack dump functionality to CloseRace . java to improve error handling and debugging capabilities for child threads
updated return statement in IntPointField . java to use intValue ( ) for value conversion and added assertions in TestPointFields . java to ensure
updated the arcSize variable to use a fraction instead of a fixed integer to improve flexibility in button sizing based on width
updated image size from 768 to 640 in AddAndScaleMultiImage and modified ratioWidth in ImageBorderCuttingWizard to improve image
replaced ` setMinifySqlEnabled ` with ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and related classes to enhance cl
replaced the ` waitForStateTransitionToEnd ` method with ` waitForState ` in ` AbstractLauncherUiTest ` and ` WorkProfileTest
updated import statements in multiple test classes to include new configuration classes to enhance integration with the CAS framework for better configuration management
updated byte reading logic in Volume . java to use DataIO for reading long values to improve performance and reliability by using DataIO for reading
camel - 17850 : camel - http should not use fluent template if debug log be not enable .
refactor ClassPath creation in DeclarativeHintsParser to use a builder pattern for module boot path to improve clarity and maintainability of
add scriptscopeprovider for audio and voice ( # 4358 )
added methods to retrieve and set the layer manager in AnimComposer and AnimEvent classes to enhance flexibility in managing animations by allowing custom
added a check to return early if the queue is empty in DeferredHandler . java to avoid unnecessary processing when there are no items to process
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by preventing
refactor ` setCenter ` and ` setCenter2D ` methods to use ` center ` directly instead of ` center2D ` to
replaced static import of Assert with JUnit ' s ExpectedException for better exception handling to improve code readability and maintainability by utilizing
added a null check for subparams before sending queries in QueryExecutorImpl . java and implemented a test for multi - execution in StatementTest .
visualvm : do n ' t log custom security environment if it ' s already set
added rctag = android% 20app% 20edit to the list of recentchanges endpoint in ReviewInterface . java to allow access to
refactor Test class for improved readability to enhance maintainability and facilitate easier debugging
updated the PBEKeySpec constructor to use keyLength instead of blkSize to ensure the correct key length is used for password - based encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in rtfdocumentheader . java to enable the writing of section definitions in the document header
added a check for location distance and speed in GpsLoggingService to prevent excessively large jump detection to improve system stability by discarding
removed debug print statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to clean up the code and improve readability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0
replace boolean with object reference for rootNameFn , sourceFilterFn , and sourceFilterFnHash fields in InsightFilter . java to improve
simplified the addition of items to the data list by directly adding items to the added list to improve code efficiency and reduce unnecessary binary search
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
removed unnecessary whitespace in assertRootArcs ( ) to improve code readability and maintain consistency
added an assertion to verify that the security policy exists and is a file before proceeding to ensure that the security policy is valid before proceeding
camel - 14284 : camel - olingo2 - fix npe in camel - olingo2
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution stability
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging output for better clarity
[ smack - 1882 ] add support for publish xmppicmage by http ( smack - 1883 )
camel - 16400 : camel - netty - make the producer thread safe . thanks to daniel for the patch .
[ clickhouse ] fix url format in balancedclickhousedatasource . spliturl ( )
remove jasper . compiler . disablejsr199 in favor of jasper . compiler . disablejsr199
added support for handling null values in CSVRecordReader and configured it in CSVRecordReaderConfig to enable flexible handling of null values in CSV
added LiquibaseService annotations to multiple connection classes to indicate that certain services are skipped during Liquibase integration
updated the ` addImportedStaticFieldNames ` method to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to ensure proper handling of
fix event topic for itemcommand and itemstate trigger ( # 3550 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve cl
updated case handling for " zkCredientialsProvider " in SolrXmlConfig . java and added assertions in TestSolrXml . java to
fix mana tablet damage and durability for creative and full power
added a method to set the identifier collection in mCurrentCallEvent to ensure consistent identifier handling during call events
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to clean up the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
added a parameter to the assertNotNull method in TypeDefinitionRegistry . java to improve error handling by providing context for the assertion failure
hide the share with me icon in LocalFileListAdapter to improve user interface by providing a visual indication for shared files
updated link URIs in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingWebFilter to use HTTPS instead of HTTP to enhance security by ensuring stylesheets are
updated header handling in RouterFilter and RouterServerListFilter to enforce non - null headers to improve robustness by ensuring headers are not null and
added debug information to the assertTrue method in TestIndexWriterMergePolicy . java to improve debugging information during assertion failures
[ java ] deprecate multilayer perceptron , run multilayer perceptron and runmultilayerperce
added a null check for the context in CrawlerSessionManagerValve and implemented a new test for multiple contexts in TestCrawlerSessionManagerValve
modified the ` getJspApplicationContext ` method to use a privileged action for retrieving the ` JspApplicationContext ` to enhance security by using privileged actions
updated the calculation of length and Axial methods in RocketComponentConfig . java to improve accuracy in determining component length and position based on
replaced ` @ Singleton ` annotation with ` @ Scopes . SINGLETON ` in ` NonceService ` and ` OpenIDAuthenticationProviderModule `
update child link in file wrapper to include random and hasher
refactor SpringCloudPlugin to improve code readability and maintainability to enhance maintainability and clarity of the code structure
increased the delay from 100ms to 500ms in publishWithDelay in RetrievalBlockingMessageStoreTests . java to improve test st
do n ' t override shift code if it ' s always set
[ hotfix ] [ coordination ] fix heartbeat monitor to check if the node be the leader
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and accuracy of
updated the ` newInstance ` method to accept a ` noop ` parameter instead of ` AbstractCommandOptions ` to improve flexibility in cache instantiation by
added a sleep duration to the catch block in TestListenTCPRecord . java to ensure that the test has sufficient time to complete before proceeding
updated method call argument handling in PatchExtensionMethod . java to ensure original arguments are preserved when modifying method call arguments
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` and updated related methods to
int - 1343 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute to the router parser
removed x509PublishUrl and x509ViewName from ClientKeyPublisherMapping and JwkViewResolver classes to streamline the client key publishing process
replaced the assignment of ` subReader ` with a conditional assignment based on the length of ` readers ` to ensure that the correct reader is
replaced ` ValueSourceParser ` with ` Double2Parser ` for max and min values in ` ValueSourceParser . java ` to improve
simplified return statement in Container . java to improve code readability and maintainability
removed unused variables in Highlighter , SpanGradientFormatter , and TokenSources classes to clean up the code and improve readability
cloudstack - 4892 : fix user creation with uuid in the database ( # 4893 )
added ConditionalOnWebApplication annotation and modified flowBuilderServices initialization in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to
updated PostgreSQL command parameters and refactored table creation and connection handling in WriteJdbcPTest . java to improve database connection management and enhance code
simplified the initialization of FlatLightLaf in DefaultPlatform . java to improve code readability and maintainability by eliminating unnecessary
ambari - 20613 . servicecomponenthostimpl . getstateentity ( ) should return desiredstateentity instead of stateentity .
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added conditional checks and updated status line setting in RootFolder . java and NavigationShareTab . java to ensure proper handling of running state and provide
do n ' t increment threadid when build the cpu call graph
ggb - 1343 fix for ggb - 1344 , no need to get all tools
added NetworkAddressChangeListener interface and updated logging messages in HomekitImpl . java and HomekitImpl . java to enhance network address management and improve
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of lease to improve
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` for prefixHeader and linkStyle in CxxLibrary
added null check for exception message in ExceptionHandlerRegistryFactory and created a test for handling null messages in ExceptionHandlerRegistryTest to ensure robust error
changed the ` nextID ` variable from ` private ` to ` volatile ` and updated its usage in ` DirectoryTaxonomyWriter . java ` to
http : / / issues . apache . org / activemq / browse / amq - 2696 - increase thread count to 8
added ` HasSourcePath ` interface and modified ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and
replaced StringBuffer with string concatenation in IllegalArgumentException handling to improve performance and readability of the exception message
added custom index field names for facet fields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance facet
modified the calculation of milliseconds in ` Instant . ofEpochMilli ` to handle negative and positive time values correctly to ensure accurate representation of milliseconds in
[ scene2d ] use string . name ( ) instead of string . getattribute ( ) . getattribute ( ) .
added logic to manage block update scripts in CopyPaste . java to ensure that scripts are only executed when the application is blocked
added a new file TestCMoveLimitType . java that tests C move limit behavior to ensure proper handling of character manipulation and prevent underflow
removed redundant calls to resetTemporalAttributes in ChannelState and refactored audio packet processing in AudioPacketWaveRecorder to improve code clarity and
camel - 16400 : camel - sql - templates now support scale token . thanks to daniel for the patch .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console creation and version printing logic in Main . java and VersionCommand . java to improve code readability and maintainability by encapsulating
refactor token validation logic into a separate method in InputStreamBinder and NextcloudRequest classes to improve code readability and maintainability by consolidating
make sure iib . eof . error be throw instead of return false .
add unit tests for defaultgroupprovider . deletemember ( ) and defaultgroupprovider . getgroup ( ) .
( chore ) camel - test - infra - quartz : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current protocol version
renamed ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` and updated related methods to use ` SourcePath ` instead of
added new classes ` ConstructorArgsDemo ` and ` FinalDemo ` , and renamed ` StupidFinal ` and ` StrictDemo ` to
[ geot - 6640 ] fix memory leak in directtemplatefeaturecollectionfactory
updated assertion condition in WriteResponseHandler . java to allow for a larger response count to ensure that the response count is within the acceptable range of
added a null check for the index number in the ItemRowAdapter to prevent potential NullPointerException when accessing the index number
corrected the spelling of " Anchestors " to " Anchestors " in multiple files to improve code readability and
added a check to return early if the width is less than 12 in KBBase . java to prevent rendering issues when the application ' s width
updated equality check in ChangeLogParameters to use ` . equals ( ) . equals ( ) ` for better readability to improve code clarity
changed the logger map from static to final in LogFactory . java to ensure the loggers map cannot be reassigned after initialization
updated return statement to use ` p . getBasePlot ( false ) ` instead of ` p ` to ensure the method returns the correct base plot
[ hotfix ] [ rest ] log warn if upload directory do not exist during initial creation
added a new boolean parameter ` sendStatus200 ` to multiple classes and updated related methods accordingly to enable handling of HTTP status 200 responses in the
added a condition to check if the comment length is greater than zero before proceeding with multi - line comments to ensure that multi - line comments
added file type association handling in BuckModule . java to ensure only relevant file types are removed from the file type manager
replaced multiple specific imports with a wildcard import and updated method signatures in ComposedUtil . java to simplify import statements and improve type consistency
added RTM _ OS _ ERROR constant and improved error handling in JVM startup tests to provide clearer error messaging for unsupported CPU versions
reformatted code for better readability in AccountsActivityTest . java to improve code clarity and maintainability
refactor Player class to improve code organization to enhance maintainability and readability of the code
added import for ChannelTypeUID and a mockito package import method in AbstractModbusOSGiTest . java to facilitate
fix a typo in polyglotexceptionimpl . isguesttohostreflectivecall ( ) .
set the system context to null in AndroidTestEnvironment and implement a reset method in ShadowFontsContract to ensure proper context management and avoid potential
added ` toMillis ` method to ` TimeGranularity ` and modified ` PinotDataSourceMaxTime ` and ` PinotDataSourceDimensionFilters
refactor control flow handling in ` ControlFlow . java ` to improve error handling and analysis for try - finally blocks to enhance robustness and
updated assertions in ` Assert . java ` to check array sizes and improved error messaging for arrays to enhance error handling and provide clearer feedback
added default case for default cases in WindowClickLogic . java to improve code robustness and prevent potential runtime errors
updated the bitwise operation for indexing in MeshBuilder . java to ensure correct handling of the offset value in the index calculation
nifi - 1358 : remove unnecessary controllerserviceprovider reference in standardprocessscheduler
added support for processing Java annotation processors in KotlincToJarStepFactory and created a corresponding test in KotlinLibraryIntegrationTest
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION and refact
added functionality to refresh shortcuts based on the shortcut host permission in the Launcher and DeepShortcutManager classes to ensure shortcuts are refreshed only when the
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support history search functionality in the application
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names
added marker selection functionality to NearbyMapFragment to ensure proper state management when the marker is selected
added error handling for Throwable in FileSyncAdapter . java to improve error reporting and debugging capabilities
replaced string concatenation with OutputAnalyzer for memory size assertions in TestMemoryAwareness . java to improve clarity and error handling during memory size
updated feed processing logic in FeedQueues . java to filter feeds based on application settings to improve performance by avoiding unnecessary feed merging when heavy
added verification for playback thread in DefaultDrmSession and DefaultDrmSessionManager to ensure proper usage of playback thread and prevent runtime exceptions
updated packageType and resourceCompressionMode to use Locale . US in AndroidBinaryDescription and added a setter method in AndroidBinaryBuilder to ensure consistent
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure compatibility with the application - based
updated file initialization to use INSTANCE . confFile instead of INSTANCE . confFile to ensure consistency in configuration file handling
updated the waitUntilReadyAndTimeout method call from " sleep 5 " to " exit 1 " in HostPortWaitStrategyTest . java to
changed the data type of ` numCountDistinct ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java `
added checks for ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to handle headless environments to ensure proper
added a condition to check if the current recipe matches the furnace ' s world before smelting the furnace to ensure that
add a move thread count description to the default solversolver to provide more detailed information during the solving process
fix : search with revinclude do n ' t select wrong resource with same spname
added a new file ` Issue582Test . java ` to test the functionality of the ` Pump ` class to ensure correct sorting and
[ native ] fix decimal overflow in abstracttestnativegeneralqueries
refactor LoadingCache class to improve cache management to enhance performance and reduce memory usage during loading operations
added a rule to avoid non - constructor methods with class names in the NamingRulesTest to improve code clarity and prevent potential issues with class
simonstewart : do n ' t swallow staleelementreferenceexception in expectconditions
added a method to check if a view exists in the database snapshot generator to improve error handling and provide clearer feedback when a view does not
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations in TaskViewUtils and a method to log matrix values in Utilities to improve animation responsiveness and facilitate debugging
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the fixed rotation transformation feature
added a ` walk ` method to ` TempFSTTermsReader ` and modified ` writeVInt ` and ` writeVLong ` to
added SolrQueryRequest parameter to the create method signatures across multiple augmenters to enhance query processing capabilities by incorporating SolrQueryRequest
added SQL trigger creation and validation for Post and Announcement types in SingleTableMySQLTriggerTest . java to ensure proper handling of null values
refactor FieldValueHitQueue to use a setComparator method for setting comparators to improve code clarity and maintainability by encapsulating comparator
updated string concatenation for expected query strings in PhoenixQueryBuilderTest . java to improve readability and prevent potential SQL injection vulnerabilities
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization before running tests
added methods to retrieve and save the total storage pool , fees , and used in DynamicPropertiesStore . java to ensure proper initialization of storage
added support for development mode in the AssetsController to stream asset files from the specified source directory to enhance asset streaming functionality based on user - defined
updated mapMark key retrieval in MapMarksManager to use getMapMarkKey method to improve clarity and maintainability of the code
updated the ` getDefaultValue ` method to include a ` TokenRewriteStream ` parameter and updated its usage in ` BaseSemanticAnalyzer ` and `
removed IOException from method signatures in JavaCompiler and related classes to simplify method signatures and improve error handling
updated JxBrowserManager to use fullPath instead of fileName for loading JxBrowser files to improve clarity and accuracy in loading JxBrowser
added a check for the " AppVersion " property in the iOSImplementation class and updated method calls accordingly to ensure proper handling of the AppVersion
updated the logging statement to use the thing UID instead of the Bridge UID to ensure accurate identification of the HTTP client for better debugging
( chore ) camel - aggregator : disable flaky test on github
refactor SSL handling in OpenWireConnectionTimeoutTest . java to use system properties for SSL settings to improve flexibility and maintainability of SSL
updated warnThenDebugLogger to stackTraceWarnThenDebugLogger and added handling for NaN metrics in DynatraceExporterV2 . java to
added a call to remove the session ID from sessionIdToSessionInfo to improve session management by eliminating unused sessions
added null check for hostname in HeartBeatHandler and modified log message formatting in AlertReceivedListener to ensure alert hostname is set when it
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
[ drools - 3540 ] use kie / api / kmodule . xsd instead of kie / kmodule . xsd
added a new test method ` testSeekToMode ` to ` ShadowMediaPlayerTest ` and modified the seekTo method in ` ShadowMedia
rename createTask method from createTask to createThrowingTask in multiple executor classes to clarify the purpose of the method related to throwing
added a border to the CloseButtonTabbedPane based on AQUA _ LAF status to improve the visual appearance of the close
updated TSPTimeStampService to set HTTP request parameters and modified test assertions in TestSignatureInfo . java to enhance HTTP request handling and improve test
added support for wildcard type support in xstreamutils ( # 2635 )
added error handling for non - generic diamond types in ` ppp Attr . java ` and created a new class ` Diamond
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated argument checks in Http2Settings to use ' && ' instead of ' | ' for id and value to improve clarity and correctness
deleted the file ` Issue664Test . java ` to the test file was deemed unnecessary or redundant
added error handling for disposed sessions in SessionsPoolTest . java to ensure that disposed sessions do not operate on a disposed session
updated GeoJsonWMSBuilder to use start and end objects for JSON serialization to ensure proper structure and structure of the JSON output
replaced the method ` setIndex ( int mode ) ` with ` selectedIndex . intValue ( ) ` in ` PopupMenuButton . java `
added a method to check if the stash can currently be unstashed in the app to ensure proper handling of unstashing behavior based on
camel - 14284 : camel - route - coverage - dump - routes - do n ' t dump route with custom id
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter to control the wait time for events to ensure that the
added a new file HeaderFixer . java that processes Licence headers to generate a header file to ensure that the header files are correctly
added broadcast functionality for first load completion in Launcher and updated app widget binding in LauncherProvider to improve user experience by ensuring the first load
deleted the SuperJumperAndroid . java file to the class is no longer needed for the current implementation
updated return value in SystemTableScan . java to check if the table is distributed and modified query string construction in TestStarQueries . java to
removed KeyValuesProviderAware and ObservationConventionAware interfaces to streamline the codebase by eliminating unused interfaces
added missitems parameter to the processidrematches method , and updated the processidrematches method to include it to enhance functionality
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use ` base ( long ) ` instead of ` base +
added caching functionality for data format strings in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the query string in RemoteAuthenticationEndpointTests to include username filtering to ensure accurate filtering of users based on their username
changed the condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor .
updated logging in Launcher . java to use ContainerInfo and WorkspaceContainer to improve logging clarity and ensure correct workspace context is utilized
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test class to streamline the codebase
added a null check for newInput and improved marker existence checks in BugContentProvider . java and BugGroup . java to enhance robustness
added a new menu item ` openInBrowserItem ` and modified ` startServerItem ` , ` stopServerItem ` , and ` handle
added OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES error handling in ErrorMsg . java and enhanced semantic analysis in SemanticAnalyzer . java to
added a new ` addEntryListener ` method with an ` EqualPredicate ` parameter to the ` addEntryListener ` method to ensure that the
fix ( coordinatearray ) : do n ' t throw arrayindexoutofboundsexception in reverse ( )
updated the setOpen method call in ToolbarPanel . java to ensure the setOpen method accurately reflects the state of the toolbar
added a boolean variable ` first ` to the ` TestPayloads ` class to track the initialization state of the ` first ` variable
replaced ` mWorkspace . enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java `
camel - 14284 : camel - core - fix networkroutetest to set the destination of the message dispatch
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of integer
add @ suppresswarnings to nestedarithmetictest and remove unused variable .
simplified the addition of pendingChunks and buff in HttpClientRequestImpl . java and improved buffer handling in HttpTest . java to enhance
updated artifact replacement for " analysis - " and " analyzers - " in GetMavenDependenciesTask . java to ensure correct formatting of
pdfbox - 4892 : remove unnecessary casting , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up the code and improve performance by eliminating unnecessary output
add query type name to the visibility visitor ( # 1193 )
added configuration for solidity JSON - RPC HTTP port and enable / disable functionality to enable or disable JSON - RPC based on configuration settings
added a check for the type before removing the drop target to prevent potential ClassCastException when the folder is not an instance of DropTarget
refactor stub jar creation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added new features and descriptions for Setup wizard , Setup wizard , and Workflow helper in StartPageTopComponent . java to enhance user guidance and
patch by jbellis ; review by brandonwilliams for cassandra - 1340
removed unnecessary casting to Boolean in OnlineTestCase . java to simplify the code and improve readability
updated return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of just
refactor timeout handling logic in HttpChannelState and update failure listener in HttpChannelTest to improve clarity and ensure proper failure handling during timeout
replaced ` CreateEndPoint implements Runnable , Invocable , Closeable ` with ` CreateEndPoint extends Invocable . NonBlocking implements Closeable `
updated TABLE _ HEADER _ SEPARATOR regex to use a constant for the column name and modified its matching logic to improve code readability and maintainability
updated return value from 32.0 f to 31.5 f in Camera . java to adjust camera functionality for improved performance
added a startOnBootSetup preference and updated return values in GpsSettingsActivity , Utilities , and GeneralLocationListener to improve user experience by
updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger client secrets for impro
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to specify that null parameters should be enforced with the enablePassingNulls
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race condition stability
updated the ` getInputPinotFS ` and ` getOutputPinotFS ` methods to use ` PluginManager ` instead of ` PinotFS
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent based on the user ' s
added MetalLookAndFeel to UIManager to enhance the visual appearance of the application
added synchronization to send messages and refactored ping task handling in Bot . java to improve thread safety and ensure proper shutdown of scheduled tasks
removed the ` getMessage ( ) ` method from the ` error ` object in ` GlobalErrorHandler . java ` to simplify error handling by directly passing
replaced instances of " module " with " from " in multiple classes to improve clarity and consistency in module reference handling
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` in ` Subject . java ` and added ` hashCode
updated boolean types in CustomPlaybackOverlayFragment and ImageButton to improve code clarity and consistency to enhance code readability and maintainability while ensuring
update zoom level settings for mapView and mvp in BasicMapViewer . java to adjust zoom behavior for improved user experience
refactor user management logic to utilize ImpersonationUtil for process user and group retrieval to improve code clarity and maintainability by central
replaced AccessController . checkPermission with sm . checkPermission in UnixFileSystemProvider and WindowsFileSystemProvider , and updated permission checks in CheckPermissions . java to
added a List of ArgumentExtractor to the DelegatedClientAuthenticationAction class and updated service resolution in DelegatedAuthenticationWebflowConfiguration to enhance flex
changed defaultGroup from private to final in NacosServerRegisterRepository . java to ensure defaultGroup cannot be reassigned after initialization
replace destroy ( ) with destroytilecaches ( ) and createtilecaches ( ) in TileSizeChanger . java to improve code
removed duplicate calls to ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and ` InfoLayoutHelper . java ` to
refactor cleanEntriesForFeedsWithoutSubscriptions method to use a dedicated method for better code organization to improve code readability and maintainability by
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` variable in ` ImmutableAssertionTests . java ` to
nifi - 1358 : use temp folder for firewall test to avoid test failure on window
fix for conic five point not work on linux .
refactor conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor ` createFromImage ` and ` createFromImages ` methods in ` CImage . java ` to improve code organization and enhance image processing capabilities
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to simplify the code by removing unnecessary imports
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in
replaced ` ! = null ` checks with ` Objects . equals ` in multiple classes to simplify code and improve readability
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullability annotations to improve clarity
added tests for various Ninja properties in NinjaDefaultTest . java to ensure correct handling of various error and 404 responses in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related logic in ` DeviceProfile ` and
updated timestampsViewPaddingBottom and listViewPositionOffset in DetailFragment and ListFragment to adjust padding based on navigation bar height to improve layout consistency
updated exception handling to include thread interruption in ZkStateReader . java to improve thread interruption handling and provide clearer error
added null check for ` f . getValue ( ) ` in ` HttpFields ` and created a test for empty headers in ` RequestTest `
server : do n ' t allow staticnat service when it be not support in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure consistent
added a call to remove extra empty screen in mWorkspace to improve user experience by removing unnecessary screen elements
added fixed width support for glyphs in BitmapFont and updated xAdvances addition logic to improve glyph rendering accuracy based on fixed width settings
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored the layout handling in ` ChangeLogFragment ` to
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state machine interception capabilities
refactor ConfigDescriptionProvider for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and improved configuration handling in StorageBasedMetastoreTestBase to enhance role creation flexibility and
refactor sorting logic in FacetComponent . java to use a boolean variable for clarity to improve code readability and maintainability by reducing
refactor property handling in CheckstyleReport to use a variable for overriding properties to improve code readability and maintainability by reducing redundancy
added functionality to stop Jetty instances based on active slices in DeleteInactiveReplicaTest . java to improve test reliability by ensuring only active J
added a fileName parameter to the newInstance method in FileActionsDialogFragment and updated its usage in OCFileListFragment to allow the dialog to display
updated reorder direction handling in CellLayout . java to use a constant for invalid direction values to improve code readability and maintainability by using a
updated the API path from " / api / v1 / accounts " to " v1 / accounts " in InnerTransferRequest . java and
add a method to retrieve the execution id for a job id in JobExecutionService . java and update test assertions in JetTestSupport . java
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with a wildcard import and added visitIdentifier methods for identifiers in FindTypes . java to streamline import statements and enhance identifier
added action text color to AuthenticatorActivity to enhance the visibility of action actions in dark mode
added ` find ` methods to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes to enhance functionality for finding entities
renamed method ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps ` and updated related references accordingly to
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added cancelClient method to SparkClientImpl and updated RpcServer to handle client cancellation to ensure proper cleanup of pending clients and provide feedback when a
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` ParamInfo ` ,
initialized ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure that ` last
added a new method ` findAll ( OrderSpecifier < ? > . orders ) ` to the ` QueryDslMongoRepository ` class and updated
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions when stopping instances
[ hotfix ] [ table - planner - blink ] exit the warm - up loop in case of a failure
added ` xread ` and ` xreadGroup ` methods to ` MultiKeyPipelineBase ` and ` MultiKeyBinaryRedisPipeline ` to
removed FIXME # MN and updated method calls in LinkedBufferInput and StreamInput classes to streamline code and improve readability by elimin
added support for WebSecurity customization in CasWebAppSecurityConfiguration and updated related imports in CasWebSecurityConfigurerAdapter to enhance security configuration
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to
added a method to register a ContentProvider in ShadowContentResolver and modified the create method in ContentProviderController to improve provider registration functionality and ensure
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the updated class structure
added a method to set keep - alive configuration based on configuration to enhance connection management by allowing configurable keep - alive settings
[ java ] rename unicast sender flow control to unicast sender flow control supplier .
do n ' t crash if 3d locus do n ' t have a point in 2d
added imports for ConcurrentHashMap and ConcurrentMap , and improved error handling in ChannelEndPoint , WebSocketConnectionD13 , WebSocketGeneratorD13 ,
simonstewart : add option to take screenshot from selenium . screenshot . location . thanks to daniel for the patch .
replace assertEquals with assertThat for better readability and consistency to improve test clarity and maintainability
truffle : remove deprecate trufflelanguage . getcontextreference ( ) , no longer use
refactor exception handling in StubberImpl and add tests for handling bad exceptions in StubbingWithBadThrowablesTest and Uninstantiable
updated condition checks in Actor . java and improved error handling in Group . java to ensure correct actor type validation and provide clearer error messages
added location permission handling to the getCenter method in LocationPickerActivity to enable location upload functionality based on user permissions
http : / / issues . apache . org / activemq / browse / amq - 2852 - add example for mdb
added cookie specification to requestConfigBuilder in GetHTTP . java to ensure compliance with HTTP standards for request handling
replaced the conditional check for collision detection with a direct method call to ` overlaps ( r1 ) ` to simplify the code and improve read
replaced DeemphasisFilter with NonClippingGain in P25AudioModule and updated audio processing logic to improve audio quality by
added a URL parameter to the ScrollingPanel constructor and updated related classes to support monitoring functionality to enhance the scrolling panel ' s functionality by allowing
added a new configuration option for service creation timeout in KubernetesConfigOptions to allow users to specify a time - unit for service creation timeouts
added a switch statement for setting the icon based on the place description to improve user experience by providing appropriate icons based on the selected place
added a null check for the package before processing to avoid potential NullPointerExceptions when the package is not available
added a new file PrintInlining . java that includes a main method to facilitate testing of the PrintInlining class
fix ( javadoc ) : fix nested bracket in javadoc tag ( # 4649 )
[ java ] clean up unused variable in archivetest .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) to ensure that both edges and meta edges are
removed unused import of ClassPathResource and ResourceLoader in SpringResourceProperties . java and PasswordManagementConfiguration . java to clean up the code and
replaced ` % d ` with ` % f ` for playback speed logging in ` VideoManager . java ` to improve logging clarity and
added cluster task for room removal event in MUCRoomController to ensure proper handling of room removal events when clustering is active
updated the variable name from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure the test accurately reflects the intended
- change blender texture locator to always set the texture key on loaded texture explicitly
refactor PythonDslProjectBuildFileParser and AbstractCell to utilize EventReportingProjectBuildFileParser and CloseRecordingProjectBuildFileParser
add support for library normalization in j2cl transpilation .
replace ` retrofit . nextResponseBodyConverter ( this , innerType , annotations ) ` with ` retrofit . responseBodyConverter ( inner
[ hotfix ] [ runtime ] remove segment . isFreed ( ) check from memorymanager
added import statements for Temporal and TemporalType in ConsoleSessionVO . java to enforce timestamp precision in database operations
added a new class ` Hbs ` and ` HbsTest ` for template processing in ` io . jooby . handlebars
updated the visibility logic for HintMessages and IncomingMessages in ChatMessageAdapter . java to improve message handling and visibility management for better user experience
fix importcsv to use values ( ) instead of keySet ( )
simonstewart : remove unused junit runner from confirmationtest
added a condition to return null if distinct column indices are greater than 2 to optimize performance by avoiding unnecessary processing when there are too many distinct
added a check to prevent duplicate names in MiscUtils . java and modified path handling in getClassPathFromManifest method to improve error handling and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the artifactId from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
modified the return statement to return an unmodifiable map instead of an unmodifiable map to enhance immutability and prevent modification of the attributes map
fix a bug where the header would n ' t be repaint when a sketch code be change .
replaced instances of new Double and Float with return values in multiple classes to simplify code and improve performance by avoiding unnecessary object creation
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure timestamp data is stored
updated context handling in HtmlJndiTreeReport to include " javax . naming . Context " to ensure compatibility with additional Java naming conventions
updated database option handling in StorageUtils and modified log message format in Manager to improve clarity and consistency in logging output for block generation success
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
replaced the private static final int FLAG _ SLIPPERY with an import statement for FLAG _ SLIPPERY to improve
truffleconstantfieldprovider : fix array dimension calculation for non - array
added preference for Google Drive folder path in PreferenceHelper and updated related classes to use it to enhance user experience by allowing customizable folder paths
simonstewart : shuffling suggestion popup for enter , down , and up
added @ Nullable annotation to assertThat methods in Truth . java to indicate that certain parameters may accept null values to improve code clarity and
updated bitwise operations in ArrayUtil . java to use bitwise operations for clarity to improve readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified the ` instrumentConstructor ` method in ` ClassInstrumentor ` to ensure that ` ApiException
added a multimap for managing waiting for anti -ompaction in StreamIn and StreamOut classes to improve the management of waiting for anti -
added support for the ` isKeyguardSecure ` method and its getter / setter in ` ShadowKeyguardManager ` to enable testing of key
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the class
updated the parsing logic in GrblUtils to replace ' > ' with ' ' and added a conditional check for the length of overrideParts
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables `
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that
updated LIGHTS _ NUM and LIGHT _ INTESITY constants and modified shader creation in HybridLightTest . java to improve light
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to simplify filesystem initialization and improve
refactor ` loadRerunFile ` method to use ` PathWithLines ` instead of ` String ` for improved type safety to enhance
refactor Gson , JsonArray , and JsonObject classes to improve code structure to enhance maintainability and readability of the codebase
removed @ NotNull annotation from TEST _ DIRS array in PubRoot . java to address issue # 2022 . 1
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index in BasisLibrary and updated its usage in Stylesheet and BasisLibrary classes to improve thread safety
added LogLevel annotation to TestDistributedStatsComponentCardinality to configure logging for debugging purposes
added a call to throwIfImmutable ( ) in IntList . java to ensure that modifications to the IntList do not affect the immutable state
added @ NotNull annotation to onApplicationEvent method and updated URI creation in GrpcServerRunner and GrpcClientBuilder to improve null safety and
update demo to use supplier instead of static method
truffle : invalidate function array only if the assumption be valid .
added handling for Windows - specific line endings in GenerateManifestStep . java to ensure proper formatting of manifest files across different operating systems
fix for rfe3531161 : do n ' t invoke code on non - null value
added nullability annotations to getConfigDescription method and added null checks for URI in ConfigDescriptionRegistry to improve code clarity and prevent potential NullPointerExceptions
make masterjobcontext . createcancellationexception return runtimeexception instead of throwable
pdfbox - 4892 : do n ' t initialize stream if there be no crop box
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to facilitate debugging
replaced direct instantiation of FragmentActivity with Robolectric ' s buildActivity method to improve test reliability by leveraging Robole
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` in ` FileProcessor ` to
rename class ` ABCase1 _ 1 ` , ` ABCase2 ` , and ` ABCase7 _ 3 ` to ` TestAB
updated method parameter name from ' num ' to ' value ' in DynamicPropertiesStore . java and added a null check in Manager . java to
refactor the handling of RocketChangedEventHandler in OpenRocketViewer to improve clarity and maintainability of the code
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to manage Maven dependency groupId and artifactId to facilitate the updating of Maven
refactor path handling in IndexingJob and add validation for segment paths in SegmentChecker to improve code clarity and ensure only valid segment paths
updated comparison from ` gte ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
replaced the use of ImmutableMap and ImmutableMultimap with Supplier for managing replacement paths and source path mappings to simplify code and improve performance by reducing
rename JsonExamples class to Examples and update package - info . java to improve clarity and maintain consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve traceability and debugging of extraction processes
refactor FindsByLinkText class implementation to improve code readability and maintainability
added a new file Main . java that implements a main method for Java OOP entry point to facilitate the execution of the Java
fix synchronization issue in sip account registration wizard . thanks to daniel for the patch .
removed redundant continue statements in NativeScanner . java to improve code clarity and maintainability
updated package structure from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest . java
replaced ImmutableSet . Builder with Supplier for collecting dependencies and exported dependencies to improve performance by reducing unnecessary stream operations
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling for content stream in ExtractingDocumentLoader . java to ensure correct metadata is added based on content type
cloudstack - 3353 : fix sql injection for account configuration ( # 3354 )
added a check to return early if the slot is - 1 in the WindowListener class to prevent further processing when no valid slot is available
add option to ignore transitive repository
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with modern Android features
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when closing the selection
added a condition to break the loop if the string length matches the matcher ' s start and end to improve performance by avoiding unnecessary iterations when
added server . port = 0 to the @ IntegrationTest annotation in MvcITest . java to ensure the test runs on a specific server port
added a new UDF for reversing text in Hive queries to provide functionality for reversing text in Hive queries
refactor context path retrieval to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` across multiple classes to simplify code and
refactor Tracer class to improve code readability to enhance maintainability and reduce complexity
[ hotfix ] [ test ] disable rocksdbstatebackendreaderkeyedstateitcase for now
simplified import statements in XMLChangeLogParserTest . java to improve readability and maintainability of the test code
added synchronization to the buffer clearing logic in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during buffer operations
updated forecastMinutes , forecastHours , and forecastDays from 0 to 60 and 8 in OpenWeatherMapOneCallHandler . java to adjust
added timeout annotations and updated fetch time handling in AbstractPageOperationTemplateTest . java to improve test reliability and clarity regarding fetch request timing
added logging and animation functionality for all apps content in the FloatingHeaderView and RemoteTargetGluer classes to improve debugging capabilities and enhance user
refactor ` parseRerunFile ` method to return a ` Stream < FeatureWithLines > ` instead of a ` Collection < FeatureWith
add a bunch of item to the creative tab to make it a little easy to read .
updated assertions in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added functionality to display uncompressed and compressed file sizes in RCFileCat . java to improve user experience by providing detailed file size information
refactor multiple Java classes related to clustering to improve code organization and maintainability
[ jna ] add checkndarray ( ndarray , msg ) to jnautils to ensure that the ndarray be not already close
[ hotfix ] [ doc ] fix typo in blobserver javadoc
fixed bug 1293157 - unusedprivatemethod no long report false positive for private method which be only invoke from static initializers .
updated initialization of ` lexicalScope ` and ` lexicalMap ` in ` Global . java ` and ` TryNode . java ` to
added a test for the auto - startup configuration in the InboundChannelAdapterParserTests to ensure that the SFTPInboundAutostartup
added getter and setter methods for level , root , and childBoundables in AbstractNode , AbstractSTRtree , and STRtree classes , and
updated version parsing logic in Version . java to handle minor versioning correctly to ensure accurate extraction of the version number from the version string
added a check for non - empty tags before adding them to the active item in ItemRegistryImpl . java to ensure that tags are only added
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to
hhh - 17100 - fix cache disassembly for custom type
refactor Log4j2ConfiguratorServlet to improve code readability to enhance maintainability and facilitate easier debugging
hive - 5051 : storagebasedauthorizationprovider mask low level exception with illegalstateexception ( eugene koifman via ashutosh chauhan )
updated the handling of the " CC " key in CGoCompileStep . java and added a new test in GoBinaryIntegrationTest . java
fix : add @ buildable annotation to customresource
removed the @ Override annotation from the Only class to streamline code by eliminating unnecessary overrides
added a timeout constant for HTTP connection parameters in HttpClientFactory to improve connection stability by preventing indefinite blocking during network operations
added new perf event scopes for different pipeline names in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to
simonstewart : add support for disable trace and enable everything but trace
removed the @ Singleton annotation from ApplicationController . java to enable singleton behavior for testing purposes
replaced ` AccountUtils . getUsernameForAccount ( getAccount ( ) ) ` with ` OwnCloudAccount . newOwncloudAccount ( )
added a new import statement for BatchStatus and implemented a test for resuming a paused instance in SimpleJobLauncherTests to ensure proper job execution
added null check for cacheConfig in HttpSyncDataService and refactored data refresh logic in DataRefreshFactory to improve code robustness and
simonstewart : make dockersession public so that it can be use in test
fix compilationunitcontext . getqualifiedname ( ) to use default package name
pdfbox - 4892 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
fix checkstyle issue in testdistributedlanczossolvercli
refactor HttpServerTestBase to improve test structure to enhance maintainability and readability of the test code
refactor test to use keySet instead of entrySet to improve readability and maintainability of the test code
added tests for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchema ` and implemented corresponding methods in ` NestedBeanIgnoreNulls ` to
add support for customization of redissonautoconfiguration . thanks to jonathan for the patch .
fix an off - by - one error in the todouble method and add a unit test for it .
added ` execInContainerWithUser ` and ` execInContainer ` methods to ` ContainerState ` and ` ExecInContainerPattern ` classes
simplified the condition for interestedInByteMessages and interestedInTextMessages in NettyWebSocket . java to improve readability and maintainability
added unit tests for various semantic patterns in SemgrexTest . java to ensure correct functionality and behavior of attribute handling in the graph
added a broadcast intent to send CLEAR _ PULL _ UNREAD in HomeFragment to facilitate the clearing of pull unread
removed conditional logic for pre - gingerbread and refactored scroller initialization in TouchImageView . java to streamline code for
fix memory leak in dstu21 test
( chore ) camel - core : avoid use atomicboolean to track veto start state
added FloatingActionButton functionality to manage the visibility and click events for the main FAB and maps fragment to enhance user experience by allowing users
added support for inline date parsing in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
corrected the spelling of " tecken " to " token " in multiple error messages and resources to improve clarity and consistency in
added server check logic in AuthenticatorActivity to ensure services are only bound when the server is checked to improve service binding reliability and prevent errors during
updated the return statements in Position . java to use node . getBeginLine ( ) and node . getEndLine ( ) instead of node . getBegin
added waitFor calls to processor , outputProcessor , and errorProcessor in CxxPreprocessAndCompileStep . java and implemented waitFor method in Managed
added support for " all " repository sources in PrincipalAttributesProperties and created corresponding tests in CasPersonDirectoryConfiguration to enhance functionality by allowing repository sources
fix maxsizechecker . getappropriatemaxsize ( ) return wrong value when eviction . max . size = = 0
added support for configurable SSL protocols in NettyWebServer and ServerBasicConfig classes to enhance security by allowing customizable SSL protocol settings
replaced ` AtomicBoolean ` with ` AtomicReference < T > ` and replaced ` AtomicBoolean ` with ` AtomicReference < T > `
updated key retrieval logic in QueryDslMongoRepository and added a test for empty string return in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to reflect changes in border behavior to ensure correct behavior of RoundRectBorder when comparing borders with self
added checks to ensure genesis config is not empty before creating and added validation for empty cluster configurations to improve error handling and ensure proper cluster initialization
remove test that do n ' t really test anything
updated CountDownLatch initialization and list initialization in PrecompiledContracts . java and added a validation check in ValidateSignResult . java to ensure proper
modified conditional check from ` windows ` to ` ! windows ` in ` ProcessInformationsPanel . java ` to ensure proper handling of non -
refactor collector methods to use ` greatest ` and ` leastN ` instead of ` maxN ` and ` minN ` to improve
added null checks for orderbook and WebSocket client extension handlers in BitmexStreamingExchange and BitmexStreamingMarketDataService to improve
added validation checks for latitude and longitude in GeoPointField to ensure that invalid latitude and longitude values throw appropriate exceptions
refactor methods in OozieProxyImpersonator and WorkflowFilesService for clarity and consistency to improve code readability and maintainability
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ table - planner - blink ] make gettabledocument ( table , boolean withdependents ) more flexible
added a check for the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to ensure users are aware of the number of consecutive uploads
added caching mechanism for profile data retrieval in ProfileResources . java to improve performance by reducing redundant serialization operations
added identifier derivation checks and improved ID property extraction logic in JpaMetamodelEntityInformation . java to enhance identifier handling and ensure correct
added tests for index creation and indexing in UpgradeIT and updated method names in ConnectionQueryServicesImpl and UpgradeUtil to improve test coverage for index
add option to register default exception mapper in jersey
added a new parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the behavior of the
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and updated its usage to improve window management by associating
fixed typo break upgrade of database version to add remote _ id column
add a new skin to the skin system , so they can be use for a skin that do n ' t have to be animate .
fixed - rbucket . get ( ) method throw npe if codec be not set
add @ detectorundertest ( findunrelevanttypesingenericcontainer ) to typeframemodelingvisitor
added ` BackProgressAnimator ` functionality and updated back animation handling in ` LauncherBackAnimationController . java ` to improve the responsiveness
changed the ` _ initialPageNo ` variable from ` final ` to non - final and added a logic to initialize ` _ contentLimits `
fix checksum calculation in jedisclustercrc16 . getcrc16 ( )
added support for parsing comments in formatted SQL changelogs to ensure that comments are correctly processed when parsing formatted SQL changesets
replaced the instantiation of JarArchiver with a direct variable assignment in MavenArchiver and AbstractJarMojo to improve flexibility by allowing
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using a more specific
removed unnecessary condition checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to simplify the aggregation logic and
added checks for format and type for UNSIGNED _ BYTE and RGBA in GwtGL20 . java to ensure compatibility with GWT ' s rendering
added a new test method ` testDebugInfo ` in ` OutputMemoryTest . java ` and updated dynamic method invocation in ` PrintR .
added error handling for UnmodifiableClassException in InlineBytecodeGenerator . java to provide clearer feedback on compilation issues related to javac -
[ gr - 26345 ] add tracking of class initialization trace ( es )
updated query level timeout parameter from timeSpentMs to queryTimeoutMs in BaseBrokerRequestHandler . java to ensure correct timeout handling for query operations
updated TopicRouteService to use Caffeine instead of Google Guava for caching to improve performance and reduce dependency on Google Guava
added read - only mode to the createdatasource method in mbtilesdatastorefactory to allow the database connection pool to be read - only
updated the regex pattern for INVALID _ SOURCE _ TARGET _ RELEASE in FindBuildToolFailures . java and added a fatal error message in Failure
updated URI construction in DetailFragment . java and added location intent check in IntentChecker . java to enhance user experience by providing direct access to location
fix npe in standardparametercontextdao . getreferencedids ( ) when there be no inheritance context
refactor ClassLoader class to improve code organization to enhance maintainability and readability of the code
added a method to set the origin response headers in ` ProxyRequestHelper ` and a corresponding test in ` ProxyRequestHelperTests ` to ensure
removed the new ProfileSettingDrawerItem instantiation in GpsMainActivity . java to streamline the code by eliminating unnecessary components
added support for jasper ' s xml validation parameter in multiple classes to enable dynamic configuration of XML validation behavior based on initialization parameters
simonstewart : do n ' t use htmlunit in the firefox driver , use ie instead
added a maxRows variable and updated fetch size handling in IoTDBStatement . java to ensure that fetch size does not exceed the defined maximum rows
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` for improved clarity to enhance code readability
added functionality to handle node and mouse click events in StandardVizEventManager to enhance user interaction by enabling selection for nodes and mouse interactions
refactor memory setting logic in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and maintainability by reducing
replaced instances of ` this . xorGroup ` with ` memory . getXorGroup ( ) ` in ` TerminalNode . java ` to
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elimin
refactor path resolution logic into a private method for improved clarity and maintainability to streamline path resolution logic and enhance code readability
fix ( dstu2 ) : fix xmlparser # encoderesourcetostring ( ) .
changed the method visibility of ` changeSchemeIfIsWebSocketUpgrade ` from private to static and added encoded URL handling in ` WebsocketRoutingFilter
rename test - suite - configs to test - execution - configs for clarity
added a private method ` getCxxPlatform ` to retrieve ` CxxPlatform ` based on ` HaskellBinaryDescriptionArg ` to improve
added imports for IndexReader , IndexWriter , and Similarity in multiple Java files to facilitate the use of Lucene ' s
added null check for ` current ` in ` ConcurrentLinkedStack ` and modified method names in ` ConcurrentLinkedStackTest ` to improve robustness
added isMatched ( ) and setMatched ( ) methods to BinaryHeapQueueTest and BaseQueueable classes to provide functionality for checking and setting
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is not initialized
updated condition in RecentsView . java to check for mOverviewStateEnabled and mFirstLayout before proceeding to improve gesture handling logic
added multiple package - info . java files for various Lucene packages to provide package - level documentation and organization for better code organization
added localization support for the visibleAutoLeveler component in AutoLevelerTopComponent to enhance user experience by providing localized visibility settings
added post - optimization callbacks to DirectUpdateHandler , DirectUpdateHandler2 , and DirectUpdateHandler classes to enable post - optimization functionality for updates
updated decompressor and compressor initialization to use paddedLength instead of compressedLength and set dummy byte to 0 to ensure proper handling of compressed data and
removed the check for user _ data in Shaderc . java to simplify the code by eliminating unnecessary checks
added a condition to check if the meta store is local before retrying retries to ensure retries are only attempted when the local store is available
added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve error handling by ignoring specific exceptions
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
use weak and strong reference type for serialization in abstractserializationservice
updated color distance calculation in HSSFPalette to use absolute values and added a new test method for finding similar colors to ensure color distance is
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
danielwagnerhall : added unit test for elementfinding by numeric id and id .
added a flag parameter to the registerReceiver method and updated related implementations to include it to enhance receiver registration functionality by allowing the specification of receiver flags
fix ffmpegtest . testversion ( ) to use mockito 2 . x
added a previousInput reference and modified OggInputStream initialization in multiple classes to ensure proper resource management and avoid potential memory leaks during input stream
added a constant RESPONSE _ WAS _ NULL and updated failure message assignment to use it to improve code readability and maintainability by using a
[ te ] fix anomaly migration when there be no warning
refactor Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the request creation method in TracingFeignClient to include the request template to enhance request handling by incorporating the request template
added name validation and referral handling in LDAPCertStore . java to ensure valid names and improve error handling for LDAP referrals
refactor retaining logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
renamed AdapterViewTest to ListViewTest and added a new test for item click events to clarify the purpose of the test and
[ hotfix ] [ test ] refactor checkpointfailuremanageritcase to use classrule
remove genericitemuiprovider ( no longer use )
make sipcommselectorbox . setselected ( ) and sipcommselectorbox . getselectedobject ( ) consistent
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the FileSystemPool method is accessible in a isolation
added a method to set the server host from HTTP _ INFO . bindAddress to ensure the server connects to the correct HTTP server address
updated token validity settings based on heart mode in DynamicClientRegistrationEndpoint . java to improve token handling for different grant types in heart mode
added a new class ` CloverInstrumentationFilter ` and modified the ` Not ` condition in ` TestInterfaceAudienceAnnotations . java ` to
added support for the Smartmi Evaporative Humidifier device in MiIoDevices . java to enhance compatibility with Smartmi
fix mineprocess . plausibletobreak to use calculationcontext instead of blockstate
changed the visibility of the setScrollRangeDelta method from package - private to public to allow external access to the setScrollRangeDelta method for
ambari - 20905 . ambari may not be able to manage the repository in clusterstackversionresourceprovider and hoststackversionresource
updated the return condition in IntHashSet to include missing values to simplify the logic for better clarity and correctness
added Serializable annotation to RuleAdministrator class to enable serialization of RuleAdministrator objects
refactor ` allowedOrigins ` and ` allowedTimingOrigins ` to use ` Set < String > ` and ` List < Pattern >
added " g3d / knight . g3dj " and " g3d / test . g3dj " to the list
added error handling for solidifiedPosition in Manager . java and added logging for wits size in WitnessService . java to improve robustness
hbase - 25810 fix npe in execresult when value be null ( chunhui )
added a method to check if the user has admin access and improved error handling for unauthorized users to enhance security by ensuring only authorized users
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror ` and refactored the ` Stub
added internalLinkText to FileDetailSharingFragment to display the share internal link text based on whether the file is a folder or a file
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix test failure in modelzootest . java ( # 1748 )
added ime hiding functionality in AllAppsContainerView and updated logging in LauncherAllAppsContainerView to improve user experience by logging keyboard
use inmemoryeventstorageengine in eventhandlingconfigurationtest and sagaconfigurationtest
refactor path handling in BsdFileStore and add native getmntonname method in BsdNativeDispatcher to improve code clarity and
add unit test case for issue # 1599
added a new ` x ` and ` z ` parameter to the ` spawn ` command in the ` SpawnCommand . java ` file to
added MIN _ CONTENT _ DIMEN constant and refactored content area width calculation to improve code readability and maintainability by centralizing
[ gr - 36400 ] fix compiler test to pass after codeinstall .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to failedChecks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 to
refactor Environment class for improved readability to enhance maintainability and facilitate easier debugging
added LuceneTestCase import and annotation to RecoveryAfterSoftCommitTest . java to address a specific bug related to SOLR - 7421
updated file path construction logic in CodenameOneImplementation . java and removed unnecessary warning handling in HashtableContent . java to improve code clarity
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
updated import statements and modified resourceAccessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to stream
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by disabling unnecessary algorithms
updated ` CxxDeps . EMPTY ` to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY `
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` to improve clarity and
updated the @ DoNotSub annotation for resizeThreshold in Int2ObjectHashMap . java to ensure proper handling of resizeThreshold in the code
updated folder name hint handling to check if the title is empty before setting it to improve user experience by providing a clearer hint when the title
updated client loading logic to include " uaa " as a parameter to ensure compatibility with the new client architecture
changed method visibility from public to private in ShadowSQLiteDatabase . java to restrict access to methods within the class
updated logging statements to include closed status in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to ensure accurate representation of counter values based on
refactor MimetypeIconUtil to improve code structure to enhance maintainability and readability of the code
corrected the spelling of " supportsViewFor " in multiple view provider classes to ensure consistency and accuracy in method naming conventions
added a new test method ` UnnecessaryParenthesesTest . java ` and updated the condition in ` UnwrapParentheses . java `
added a ` built ` flag and a ` o ` variable and modified the return statement in ` Location . java ` to enable tracking of the
replaced Base64 encoding methods with Spring ' s Base64Utils methods in TokenKeyEndpoint and its tests to enhance security by ensuring proper URL
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to improve project component integration and enhance statistics reporting functionality
rename ContainerAnnotation to ContainedBy in ContainerAnnotation . java to clarify the purpose of the annotation
added a null check for the result parameter in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
modified the ` setUpRevampedTweet ` method to include a ` muffled ` parameter and modified its implementation to include visibility checks
added theme support for verified text in UserProfileActivity to enhance user interface by allowing dynamic theming based on user settings
replace instance variable with private final variable in AbucoinsDigest . java to enhance encapsulation and improve thread safety
camel - 14284 : camel - mongo - make component autowired so it can be autowired by spring
[ geos - 7560 ] attributemapping should use the sourceindex instead of the first source
handle corruptioned column statistic during partition alteration
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks during authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
do n ' t escape email in geoserver home page
move reflections . cache to modulemanagerimpl so that it can be load by reflections . cache
updated the way features are written in the JoinModeller class to ensure accurate representation of the number of features in the output format
added a check for non - empty command in AlgebraProcessor . java to ensure that the command is valid before processing
[ hotfix ] [ kafka ] avoid unnecessary debug log in singlenodekafkaresumestrategy
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAY
updated ` IgnitionConfigurationHandler ` , ` MotorMountHandler ` , ` AxialStage ` , and ` FlightConfiguration
added validation for ascii name length and unicode character length in MSOwnerFileParser . java to ensure that the name length is within acceptable limits and
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to compatibility issues
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability
updated preference keys from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " in UpdateUtils . java to ensure
added a check for the FEDERATION _ USER in AuthenticationManager to return null if the username matches the FEDERATION _ USER
truffle : fix executemethodnode to handle non - truffle object .
removed the @ Disabled annotation and simplified the filtering logic in JakartaClientShutdownWithServerWebAppTest and JakartaClient
logbackvalve : do n ' t try to log a file that do n ' t exist
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary keys in OracleDatabase and AbstractDb2Database to ensure correct schema and catalog configurations during primary key comparisons
added ` MetastoreException ` to the ` execute ` method and modified exception handling in ` MsckOperation ` and ` MsckRe
[ hotfix ] [ kafka ] add retryable committable to kafkacommitter
updated ForwardMessageToDLQActivity to include ReceiptHandleProcessor for handling receipt handles to improve handling of message receipt handles in the application
added a services list to DockerComposeContainer and modified the runWithCompose method to handle multiple services to improve flexibility in running DockerCompose containers
[ java ] use copyset in export and structcontextdecorator to avoid concurrentmodificationexception
removed unnecessary HTML cleaner imports and simplified the return statement in FeedParser . java to streamline the code and improve readability by eliminating
removed conditional check for mAppsCustomizeContent in Launcher . java and updated child index retrieval in Workspace . java to simplify code logic and
replaced int values with double for energy values in MeterRealtimeBodyDataDTO . java to improve precision in calculations involving energy values
added a new file ` bug4150029 . java ` that implements a JApplet with directory creation and file chooser functionality to address
added methods to manage and close Spark configurations in HiveConf , SparkClient , SparkTask , and SparkSessionImpl classes to improve resource management and
added a long press indicator to multiple classes and modified the Launchable class to accept a custom long press indicator to enhance flexibility in long press
added a check for empty polygon in WKBWriter and updated related tests in WKBWriterTest to improve robustness by handling empty polygon cases
refactor ` UnflavoredBuildTarget ` to use ` UnflavoredBuildTarget . builder ( ) ` instead of ` with
added a new file ` MultiplyByMaxInt . java ` that implements a method for multiplying integers using a maximum integer to implement a
added drawer indicator functionality to OCFileListFragment to enhance user experience by enabling the drawer indicator when the current file is displayed
updated package structure of TestRAMDirectory from org . apache . lucene . index . store to org . apache . lucene . store
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify the
refactor error message creation to use a new message class for clarity to improve maintainability and readability of error messages
replaced ` @ ContainerFor ( RTA . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple test files
updated message formatting in AbstractController . java to include the send duration to improve clarity of log output by including the file send duration
added package access check and modified class loading logic in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access validation
allow readresponseresolver to pass responsecount to quorumresponsehandler .
adjusted the calculation of freeSize in StoreDirect . java to ensure accurate free size adjustment for better memory management
fix touch event not be fire when last touch be disable
replaced instances of ` SslContextFactory ( ) ` with ` SslContextFactory . Server ( ) ` in multiple classes to improve type specificity and
removed the PrivilegedSocket class and simplified the connection initialization in PG _ Stream . java to simplify the code and improve readability by eliminating
refactor InputTest class for improved readability to enhance maintainability and facilitate easier debugging
added pauseBlurs functionality to DepthController and updated related methods in AbsSwipeUpHandler and TaskViewUtils to enhance user experience by allowing
added null check for curLatLng before removing the current location marker in NearbyMapFragment . java to enhance code robustness by prevent
updated removeSecret method to retrieve client details using the client ID instead of the client object to improve the accuracy of secret removal by using the client
updated SQL query formatting in SqlSourceBuilderTest . java and modified setup method in SqlSourceBuilderTest . java to improve readability and ensure
fix for http : / / issues . apache . org / activemq / browse / amq - 2696 - wait for executor
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper error handling for unknown key keys in the dataset
refactor filterConditions initialization to use Optional for null checks and streamline return statements in ShenyuTrieRuleListener and ZookeeperSync
lightcontrol : use cloner instead of spatial . getworldtranslation ( ) for clarity
updated the logic for hiding stack traces in StdErrLog . java to improve code clarity and suppress warnings related to unused assignments
updated ` HttpSessionEventPublisher ` to use ` getContext ( ) ` instead of ` context . publishEvent ( e ) ` and added null context
added a SemanticException check for the CREATE CQ statement in ASTVisitor . java to ensure compatibility with the latest version of the CREATE CQ
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
added counter for custom simplification considerations in CanonicalizerPhase . java to track the frequency of custom simplification considers nodes
updated the ` setImageDrawable ` method to use ` context ` instead of ` null ` to ensure the icon is set with the correct context
updated ` readIdentifierWithSchema ( schema . getName ( ) ) ` to use ` schema . getName ( ) ` instead of ` readIdentifier
[ beam - 8470 ] support timestamp data type in bigquery table iterator ( # 12495 )
added a method ` findViewWithTag ( Object obj ) ` to ` ShadowView ` and ` ShadowViewGroup ` classes to retrieve views with
updated type parameters from ` String ` to ` Enumeration < String > ` across multiple classes to improve type safety and eliminate unchecked cast warnings
updated import statements in IndexToolForDeleteBeforeRebuildIT . java and MetaDataClient . java to improve code clarity and maintainability
added constants for JSON value and creator in DocAnnotationConstants and updated enum value retrieval in SpringBootDocBuildTemplate to improve code clarity and
svm : fix resourcefeature to handle jar file .
updated CUDA _ R _ 16F , CUDA _ R _ 64F , CUDA _ R _ 32I , CUDA _
updated ResourceLoader to filter layout directories before adding them to the resource directory to ensure only relevant layouts are loaded from the resource directory
fix issue with redstonetorch . getattachedface ( ) not be call for simpleattachablematerialdata
[ calcite - 2852 ] add support for VARBINARY type in reltostackconverter
added import statement for DateHelper in NoteAdapter . java to utilize date utility functionality in the application
updated backup message messages and error handling in Backup . java and Captions . java to improve clarity and user feedback regarding backup operations
mow - 1343 make eview . getposition ( ) return relative instead of absolute
replaced the creation of a temporary pipe file with a direct file creation in ShadowParcelFileDescriptor . java to simplify the file creation process
int - 1343 fix stackbasedsecuritycontextholderstrategy to use addfirst instead of offer
updated rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the purpose
fix integerequalscanonicalizer to correctly handle both addnode and ornode
added a new constant STRING _ ARRAY to the TypeFactory class to support handling of String arrays in the type system
refactor hideIme method to use a dedicated method for handling the AllApps keyboard visibility to improve code readability and maintainability by central
fix network issues , resize below if needed .
updated assertion messages in TimelineMetricCacheSizingTest and modified cache removal logic in TimelineMetricCacheTest to improve clarity of test
add a method to get the maximum texture size , only calculate it once .
[ java ] call trystoplogrecording instead of trystoplogrecording in consensusmoduleagent .
added a condition to reset startPosn based on the isInTransform state to ensure startPosn is set correctly when the transform is being executed
refactor star tree checks to use ` isSkipStarTree ( ) ` instead of ` isStarTreeDisabled ( ) ` across multiple classes
added a lockNearbyView flag to determine if the nearby places need to be refreshed and updated progress bar visibility accordingly to improve control over
add maptransformer . of ( map < k , v > ) and maptransformer . of ( map < k , v > )
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for loading widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management functionality for better user experience
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to align with the new event
added methods to retrieve and set the calling process ID and UID in ShadowBinder and ShadowBinderTest to enable testing of the calling process and UID
replaced ` @ AutoValue ` with ` @ Nullable ` for ` message ` and ` cause ` in ` ExpectationFailure ` to improve
remove warn log for not support for deserializing message with name
simplified the calculation of newW and newH based on target dimensions to avoid unnecessary calculations when target dimensions are not set
added support for HTML entities in CoreMarkdownNodeRenderer and updated MarkdownRenderer tests accordingly to enhance Markdown rendering capabilities and ensure correct handling of line breaks
added a warning button and refactored password sharing logic in SharePasswordDialogFragment to improve user experience by providing a clearer and more consistent
refactor IOUtil to use a dedicated MappingMethods class for retrieving file channel methods to improve code maintainability by centralizing method loading logic
updated method visibility from public to package - private for methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to
added support for the Slider AM keytab directory and keytab directory in LlapOptionsProcessor . java to facilitate the configuration
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and modified the ` tearOutGraphView
added a ` mHasLoaderCompletedOnce ` flag and a ` runAfterBindCompletes ` method in ` LauncherModel . java `
refactor NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsCountOperator , and NodePathsCountOperator to use final fields and
updated the ` add ` method in ` IssueInterface ` to include ` messageType ` and added a ` setCheckValid ` method in ` Validation
added a method to retrieve the cipher provider name and updated exception handling in RSAClientKeyExchange . java to improve error handling and provide clearer
replaced instances of ` getDynamicConfiguration ( ) ` with ` getFlinkConfiguration ( ) ` across multiple classes to ensure consistency in referencing the
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
removed unnecessary line breaks in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow access to these constants
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that the test is not known to implement the covariant override
refactor curly method to use a new method for better type handling to improve code readability and maintainability by reducing redundancy
camel - 16400 : camel - model - reload - strategy - load route definition from a node instead of a dom
added space minimum and maximum settings for the getXAxis ( ) method in ScatterChart . java to improve the visual appearance of the
updated the formatting of the INTERVAL string in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to multiple classes and implemented it in ` BaseState ` and ` StateManager `
added a check to ensure the " UTF8 " key is present in the properties map to prevent runtime errors due to missing UTF8 key
updated system output handling in TestReproduceMessage and modified test execution annotations in LuceneTestCase to improve test output clarity and ensure
added logging for long - press events on an AllApps item in the StatsLogManager and ItemLongClickListener classes to enable tracking of user interactions
added null check for ` log ` in ` StoreWAL . java ` and created a new test class ` Issue112Test . java `
added a condition to show sector land info based on the presence of a preset in the ruleset to ensure that sector land information is displayed only when
updated generic type parameters in multiple Java files to improve type safety and clarity in type handling
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
improve error message when there be no nearby random selection
remove temporarycache . remove _ service from nettyplayerconnection and remove it from temporarycache
set visibility of create sql view and wms layer import container to false in NewLayerPage . java to improve user interface responsiveness by
initialize Availability _ availability to Availability . UNAVAILABLE in ContextHandler . java to ensure proper initialization of availability status
updated method signatures and parameters in FetchInvDataMsgHandler , PbftDataSyncHandler , PeerConnection , and SyncService classes to improve
chore ( regen ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.
updated the ` _ freeSpaceReclaimDisabled ` and ` _ powerSavingModeEnable ` methods to use a dynamic ` _ freeSpaceRe
changed the visibility of KDC options from public to private static in KDCOptions . java and added a new KdcDefaultOptions . java
refactor JsonWriter initialization and initialization in Json . java to improve clarity and maintainability of the code
updated spacing and formatting in ProfilePager . java for consistency to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to clarify the purpose of
added a method ` valueFromClassConstant ` to retrieve properties from class constants in ` Configuration ` to enhance configuration flexibility by allowing dynamic property
[ hotfix ] [ kafka ] add log for service initialization failure
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to include " usr / share / zoneinfo / tzdata " to ensure resources are
message - bus : do n ' t auto - create a default channel when auto - create be enable .
added functionality to index keywords in HTML documents and created a corresponding test case to enhance document indexing capabilities and ensure proper functionality through testing
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional check to initialize ` _ addresses ` in the ` MemcachedSessionDataMapFactory ` class to ensure that ` _ addresses ` is only
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall .
refactor Builder class for improved readability to enhance maintainability and facilitate future updates
fix for http : / / www . ebook . de / de / tools / isbn2bibtex / isbn - to - bib
make polyglot language engine keep - alive time configurable
added null check for text before retrieving cursor position in TextField . java to prevent potential NullPointerException when text is null
make sentimentmodel . sentimenttransform and sentimentmodel . sentimenttransform static so they can be reuse
removed leading and trailing whitespace from the line in SuffixURLFilter . java to ensure consistent URL processing by removing leading and trailing spaces
added a check to return early if the player is in godmode before proceeding with invocation notifications to prevent further processing when the player is
ggb - 1343 fix for text input dialog when keyboard be hide
removed the ' accessOrder ' parameter from LinkedHashMapCache constructors and updated concurrency level settings in LinkedHashMapCache and TCache classes to simplify constructor signatures and
replaced ` _ channel . close ( ) ` with ` close ( ) ` in ` ChannelEndPoint . java ` to improve code readability
added null check for keyIndex in FixAcidKeyIndex and refactored KeyIndexBuilder initialization in OrcRecordUpdater and TestKey
refactor exception handling in DirectUpdateHandler2 to include locale - specific formatting to improve clarity and consistency in error reporting
add a storecheckguard option to the writenode so that it can be use in the canonicalization phase .
do n ' t check reachable block in exception dispatch if the bci be less than the start bci .
add a method to get the classification disagreement of a bug and update the variance check in the viewfilter to improve the accuracy of the classification
replaced the usage of ` BuildTarget . copyOf ( ) ` with a direct assignment of ` unstrippedTarget ` to simplify code and
refactor SqlRunner class to improve code structure to enhance maintainability and readability of the code
changed the type of ` date _ taken ` from ` String ` to ` long ` and updated related methods in ` FileStorageUtils ` to
renamed ` knownApis ` to ` knownSdks ` and updated related methods to improve clarity and functionality of SDK management in the
use confidenceprogressindicator instead of progressindicator in createofferview
updated user agent check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to ensure accurate identification of
refactor iteratebpt method to accept a forceIterate parameter to allow for more flexible control over the iteration process
added constants for message view types and modified the onCreateViewHolder method to handle different view types to improve code clarity and maintainability by
fix linux and osx library loading . close # 155
use -- instead of ++ to make sure we do n ' t have a false positive
removed the ` canvas ` parameter from the ` insert ` method and modified image handling in ` TexturePacker . java ` to simplify the method
replaced the existing ` getVisitors ` method with a new ` apply ` method in ` RefactorModule ` to streamline the code by
added methods to retrieve child elements by name and recursive name in the Xml class to enhance functionality by allowing easy retrieval of child elements by name
added Content - Charset header to HttpSolrServer to ensure proper handling of character encoding in HTTP requests
updated SystemUiController to use SystemUiControllerFlags instead of hardcoded UI state constants to enhance flexibility and maintainability of UI state management
removed the private ClientConfigurationService field from IntrospectingTokenService . java to clean up unused code and improve maintainability
updated the RuntimeException message in HiveRecordSet to include more context to improve error reporting for better debugging
removed ownerId field from NodeEntry . java to streamline code by eliminating unnecessary field
updated configuration key from ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` in ` SnapshotManagerImpl `
added score calculation to the merge method in TextFragment . java to ensure that the score is calculated correctly when merging text fragments
removed the Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unused dependencies
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure maximumUnimprovedStep
added a check to return early if there are no currently opened edits to optimize performance by avoiding unnecessary processing when no editors are open
updated the ` verify ` method in ` BDDMockito ` to use ` Mockito . verify ` instead of the deprecated ` verify `
replaced Thread . currentThread ( ) . getContextClassLoader ( ) with PathScanner . class . getClassLoader ( ) to ensure the correct class loader is used
( chore ) camel - java - generator - java : add async api to codefirst and codefirstclientintf
add log for abstractsplitbraintest . testsplitbraintest . newscheduleexecconfig ( splitbrainprotectionon )
added null checks for LogoutConfigurer before setting the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout
[ fix ] [ giac ] do n ' t need degree check
added log consumer functionality to DockerComposeContainer and created a test for it in DockerComposeLogConsumerTest to enhance logging functionality and ensure proper testing
updated the generic type parameter of the testMapping method in StandardJavaTypeMappingTest . java to ensure compatibility with the expected and actual ResultSetMapping functional
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` ThrowingSupplier
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a boolean value before breaking the loop
camel - 14263 : fix camel - platform - http to properly handle text content
added methods to handle platform - independent path separators in MorePaths . java and updated argument handling in CopyStep . java and AarWithLib
added null check before processing parameters in AuditEvent . java to avoid potential NullPointerException when authorizationContext ' s getParams ( ) is null
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to handle file existence
updated Android version from " 4611349 " to " 4514284 " and added unit tests for text - to - speech functionality to
add a transactionlogkey class to make it easy to identify the transaction of a queue
added support for enabling SQL profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to allow configuration of SQL profile behavior without profiling
added a try - finally block around the write method in ConnectHandler . java to ensure that the data is properly cleared after the write operation
use eventgenerator . fromfunction instead of supplier for registryevent . newregistry
updated the date parameter from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
replaced calls to ` getAllThreadIds ( ) ` with ` super . getThreadInfo ( ) ` in ` CachedThreadStatesGaugeSet `
added a protected variable ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated the version of FastAsyncWorldEdit from P2 - V6 to 1.17 to ensure compatibility with the latest features and improv
updated file existence checks and added null check for input path in SegmentGeneratorConfig . java to ensure the output directory is created if it does not
added a new method ` calculateNormalVector ` to calculate a normal vector from a ` DefaultObj ` and ` DefaultObjFace ` to improve
updated JdbcAuditService to use identityZoneId instead of principalId for retrieving audit events to ensure audit events are associated with the correct identity zone
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the session information is valid before proceeding
refactor TransactionIsolationLevel class for improved readability to enhance maintainability and facilitate easier debugging
renamed ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to
added thread name logging for the current thread in TestSession . java to improve debugging by providing context on the current thread ' s name
refactor CookieManager to improve cookie management functionality to enhance code maintainability and readability
simplified the return statement in LauncherExtension . java by returning an empty list instead of a loop to improve code efficiency and readability
added OverviewToAllAppsTouchController to the list of items in RecentsUiFactory to enhance user experience by allowing users to view
replaced the ` scaleHotseatWithWorkspace ( ) ` method with ` getHotseatScaleAndTranslation ( Launcher launcher )
added a check for JUnitRule in DefaultStackTraceCleaner and created a test for filtering elements below the MockitoJUnitRule to ensure
refactor buffer handling methods in MappedResizeableBuffer . java to improve clarity and efficiency to enhance code readability and maintainability by using
refactor balanceListener handling in DepositListItem . java to improve clarity and maintainability of balance listener management
updated color conversion logic in RealisticRenderer . java to handle edge modes to ensure correct color values are applied based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor and removed redundant calls to getLog method in multiple test classes to improve code robustness and
remove debug code ( fix # 2402 )
refactor conditional checks in FullDetailsActivity to use a dedicated variable for last playback time to improve code readability and maintainability by reducing
refactor SpanishXMLTreeReader to improve handling of elliptic nodes and introduce MWE _ PHRASAL constant to enhance
added a check to clear the language if the first value is an empty string in InstallItem . java to ensure proper handling of empty language values
updated the method of overriding the scheme based on the secure status of the service instance to ensure correct scheme is applied based on the secure status of
defaultmessagestore : do n ' t duplicate bytebuffer when create batchdispatchrequest
changed the visibility of the method ` fullFilePathFromClassName ` from final to non - final in ` NativeImageDebugInfoProvider . java `
refactor the return statement in ShadowBackupManagerTest to use a lambda expression to improve readability and reduce boilerplate code
replace ` isNonUSLangSupported ` with ` isNonENLangSupported ` and update references from ` isNonUSSupported `
removed redundant null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability
add minecraftforgeclient . java to facilitate the use of tessellator in forge rendering .
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws . org ` to ` jdk . internal . org ` across multiple
refactor FastDictionary class implementation to improve performance and maintainability of the code
simonstewart : do n ' t close the nio connection if the session be already close .
updated GROUND _ HIT and SIMULATION _ END FlightEvent instances and their epsilon values in FlightEventsTest . java to adjust
chore : update beam - java to 2.7 . 0 and beam - java to 2.16 . 0
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure namespace declarations are correctly added
refactor instructorfeedbackresultspagedata to use getstudentprofilepicturelink instead of getprofilepicturelink
defaultpasswordvalidator : allow alphabetic and numeric sequence in long password
danielwagnerhall : change the return value of retrievelastremotecontrollogs and capturescreenshottostring from 50 to 20
removed the import of JUnit ' s Test annotation from ProxyClassSerializationTest . java to simplify the test class by eliminating unnecessary dependencies
updated string concatenation syntax in DLNAMediaInfo . java to use format = bgr24 to ensure compatibility with BGR24 format
remove speculativeguardmovementphase from truffleruntimecompilationsupport and hotspottruffleruntimecompilationimpl
added a condition to exclude the AUTHENTICATION _ MANAGER bean definition from processing in the AuthenticationManagerBeanDefinitionParser to ensure proper handling of
added handling for server and host fields in ForwardedRequestCustomizer and updated test cases in ForwardedRequestCustomizerTest to improve robustness
added a call to set the length of the StringBuilder to zero in ConsoleReader . java to ensure the StringBuilder is reset before further operations
changed the access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and override these roles
updated version numbers for OpenIDE - Module - Specification and manifest . mf files to ensure compatibility with the latest features and improvements in the
hbase - 25829 add default value for tls wrap size in netty rpc server ( # 2695 )
updated multiple Java files related to CookieStore , HttpURLPermission , Inet4Address , Inet6Address , ProtocolFamily , SocketOption , and
updated FixedLengthTokenizerTests to use JUnit ' s TestCase instead of JUnit ' s TestCase and added corresponding test cases to improve
updated the protocol binding logic in OpenSamlAuthenticationRequestFactory and added unit tests in OpenSamlAuthenticationRequestFactoryTests to ensure the protocol binding is
refactor SurfaceControl transaction handling in DepthController . java to utilize AttachedSurfaceControl for transaction application to improve code clarity and ensure
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to
hbase - 25815 prepreparebulkload and precleanupbulkload action should be create ( chunhui )
updated the ` subList ` method in ` TsFileManagement ` to use ` 0 ` instead of ` unSeqMergeList . size ( )
camel - 16400 : added support for file input stream in genericfileconverter . thanks to benjamin graf for
added a login method to DefaultShardManagerBuilder and modified the login logic in ShardManager to allow conditional login based on the login parameter to enhance
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of
added a check to terminate the response if it is marked before returning it to ensure that the response is only terminated if it is marked , prevent
added a check for ` isUserStudent ` before comparing team names in ` FeedbackResponseCommentsLogic . java ` to ensure that team names
added security checks and linked profile handling in BMPImageReader . java to ensure proper handling of linked color profiles on Windows platforms
updated location calculations in ` MainUtil . setSimpleCuboid ` to use ` sx 1 ` instead of ` sx + 1 ` to
added a wait message to the browser and modified the actionPerformed method to run the action on a separate thread to improve user experience by providing immediate feedback
refactor grid size setting logic in StdGridFragment to use a dedicated method for setting grid sizes to improve code readability and maintainability by
changed return values from false to true in ContributionsListFragment . java to ensure the method correctly indicates success or failure
added a skip range test for DISTINCT prefix filtering in DistinctPrefixFilterIT . java and modified scanning logic in BaseResultIterators . java
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation to provide functionality for determining the last modified time of a
added a condition to check for valid metadata tables in HiveIcebergStorageHandler to ensure the correct file format is used when the metaTable
add a warning when select a currency other than the default currency
changed catch blocks from IOException to Throwable in WriteFlusher . java to improve error handling by catching all possible exceptions
added a boolean flag ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling and
added a new variable ` activeKeyId ` to the ` UaaConfiguration ` class to store the active identifier for better configuration management
updated @ RuleAction annotations and method names in SendMailActions . java to improve clarity and consistency of action descriptions
changed the ` isActive ` variable from private to volatile in ` SocketServer . java ` to ensure visibility of ` isActive ` across multiple threads
fix order by expression not be order by in order by expression context ( # 10363 )
[ fix ] cast stringbuilder to charbuilder to avoid classcastexception
added a condition to check if the application name matches the OWNCLOUD _ APP _ NAME in the Calendar condition to ensure that the application
hbase - 2698 add support for hbase . rootdir . perms in hbase - site . xml
updated method calls from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
changed the return type of getStateFormat from int to String in multiple classes to allow for more flexible state format handling in collections
removed the type parameter from the log message in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java to simplify
added IllegalArgumentException to the condition in PDICCBased . java to handle additional exception types during processing
reformatted the conditional check for file existence in AbstractFileResourceSet . java to improve code readability and maintainability
add path translation to pluginparameterevaluator so that it align to the base directory
[ beam - 8470 ] fix protobuf coders registration in sdks
updated JpaQueryParsingToken to include a boolean parameter and added a test for signed numeric literals in HqlQueryRendererTests to enhance query
updated LaunchLugHandler and RailGuideHandler to include parent length and modified instance count and separation settings to enhance the LaunchLug
removed the ` getNonceFactory ` method from ` BitmexStreamingExchange ` to simplify the code by eliminating unnecessary method
replace string concatenation with parameterized logging in MailBinding . java to improve performance and readability of log messages
[ java ] use default timer interval in driverconductortest .
changed the initialization of loaded classes from true to false to disable loading of classes by default
added a call to grabFocus ( ) on the searchField in FullTextSearchPanel . java to ensure the searchField receives focus when needed
replaced direct instantiation of ` NioParams ` with a local variable ` nioParams ` to improve code readability and maintainability
simplified the assertion in StatementTest . java by removing unnecessary assertion to improve test clarity and maintainability
updated the assertion message in TestSolrConfigHandler to include the server URL in the failure message to improve debugging by providing more context about the failure
replaced HttpMethod with ServerHttpRequest and updated mocking in CsrfWebFilterTests to improve test clarity and ensure proper mocking behavior
updated density handling in FilterResourcesStep . java to improve clarity and correctness in regex formatting to enhance readability and maintainability of the
added a buttonUIID variable and refactored UIID updates in ComponentGroup . java to improve clarity and maintainability of UIID
removed the densityDpi check for displayInfo ' s rotation and density in RecentsAnimationDeviceState . java to simplify the condition for
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java for testing array copying functionality
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest with @ AwaitsFix to mark ReplicationFactorTest
fixed - redissonexecutorservice . schedule ( ) method return null if no nextstartdate be set
simplified the condition for credential updates in FileDownloader and FileUploader to improve code readability and maintainability
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
[ java ] : use default value for received byte , transmitted byte , packet , and connection num in netmetrics
added a nonce parameter to the claims retrieval method in TokenMvcMockTests to ensure the nonce is correctly associated with the token ' s claims
refactor multiple chart editor classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for the formLayeredPane in the Form . java file to ensure the form layered pane is properly sized and
added a method to calculate the maximum height of the BrowserContentPane based on the owner ' s height to ensure proper layout adjustments based on
added a connection status check before opening the shared database in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogViewModel to ensure that the database
replaced direct references to DOCKER _ COMMAND with Platform . DOCKER _ COMMAND in DockerTestUtils . java and Platform . java
added a null check for the input stream in the initializeParameters method to avoid potential NullPointerException when the input stream is not available
updated the ` drawLeaveBehind ` method to accept a customizable color parameter to enhance user experience by allowing customization of folder leave behind
show an error dialog if the canary plugin do n ' t work properly with android studio
bug 10363 : do n ' t throw npe if identityproxy table name be null
removed unused modulePersistEnable and modulePersistDisable lists from StartArgs . java to streamline the code by eliminating unused dependencies
updated argument validation logic in GeminiMarketDataService to allow more than one argument and improved error messaging to enhance flexibility in
replaced HashSet with LinkedHashSet for " questions " in VerifyPasswordResetRequestAction . java to maintain the order of keys in the questions map
add unit test base class for test realm base
removed multiple excluded JSP files from the AuthCheckFilter to streamline the filtering process by excluding specific setup files
refactor scheduled runnable execution logic in the Scheduler class to improve code readability and maintainability by encapsulating task execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use String . args instead of String [ ] to improve method
updated character reading logic in XMLParser to handle potential negative values to improve robustness by returning END _ TAG when no character is read
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address text overflow issues
added pivot properties for the arrow in DeepShortcutsContainer to ensure the arrow is positioned correctly based on its icon state
fix bug # 1297 : no console message on closing .
modified the thumbnail update logic to include a refreshView parameter to enhance functionality by allowing the update of the thumbnail based on the refresh state
pdfbox - 2576 : use class . getname ( ) instead of class . getname ( ) in usage message
updated InternetAddress constructor to include a boolean parameter and added validation for hostname in HostnameFormatSpecifier to ensure proper handling of domain names and improve error
replaced instances of ` AuthenticatorActivity . this ` with ` this ` across multiple activities to improve code readability and maintain consistency in method references
updated the calculation of ` maxDocId ` and modified related methods in ` SizeBasedDocIdSet ` and ` SizeBasedDocIdIterator
modified the ` promptToOpenFile ` method to accept an existing file name parameter and updated its usage in ` FilePanelEntry ` to enhance
updated page count calculations and method calls in AppsCustomizePagedView . java and AppsCustomizeTabHost . java to improve
refactor FlightConfiguration to utilize InstanceMap for managing active components to improve code clarity and efficiency in managing component coordinates
updated body templates from " seda : foo " to " direct : foo " in MicrometerMessageHistoryTest . java and Spring
[ # 9850 ] set default locale for date time parse ( # 9851 )
[ ds - 3952 ] add permission check for hide metadata
added a new test method ` testMissingRequired ` in ` TestStarTreeConfig . java ` to validate the behavior of dimension and metric configurations
updated the recipient list constructor to include element type and added new test methods for dynamic and static recipient lists to enhance clarity and functionality of recipient
refactor InlineLayoutBox and HoverListener to improve layout repainting logic to enhance performance and maintainability of layout rendering logic
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` in ` AuthenticatorActivity ` and integrated it into the ` AuthenticatorActivity ` to
