simplified the SocketAppender initialization by setting remote host and port separately to improve code readability and maintainability by reducing parameters
refactor BasicAuthPlugin to use a separate method for setting HTTP headers to improve code readability and maintainability by reducing duplication
updated message length retrieval in ManyToOneRingBuffer . java to use messageLengthOffset directly to improve code clarity and reduce dependency on RecordDescriptor
server : fix npe in vm overcommit ratio when vm detail be null
added support for setting and retrieving the anti alias flag in ShadowPaint to enable customization of the paint ' s anti - aliasing behavior
updated the title in MassSetFieldsDialog from " Set / clear / append / rename / rename fields " to " Manage field names &
do n ' t fail the detector test if eclipse be not use
added a check to prevent empty nonce from being processed in Realm . java and modified HTTP header parsing in NettyAsyncHttpProvider . java
added a new interface ` RemoteInputListener ` and modified the ` accept ` method in ` RemoteInput ` to handle connection events to provide a
reformatted conditional statements in OrcEncodedDataReader . java to improve code readability and maintainability
added a check to ensure the thing ' s enabled status is not processed to improve the robustness of the handler by preventing unintended
added null check before removing and adding policies in AuthorizeAdminServlet . java to prevent potential NullPointerExceptions during policy management
update date format assertions in tests for Java 9 and above to ensure compatibility with JSON standards for date formatting
added JSON serialization for context and description in TezTask . java to enhance debugging capabilities by providing detailed context information
updated time retrieval logic in ` ComputedSummary . java ` and added ` getHeapTime ( ) ` method in ` HprofHeap .
replaced RxJava2Tasks with ApacheHttpClientMediaWikiApi and refactored upload count retrieval in ContributionsActivity and ApacheHttpClientMediaWikiApi
removed conditional check for lock mode in MVTable . java to simplify logic for better readability and maintainability
[ issue # 4896 ] fix commitlog offset check ( # 4897 )
updated folder retrieval logic in Launcher . java to check if the folder is open before proceeding to improve error handling and provide clearer debugging
add a test for sorting PGProperty names in PGPropertyTest . java to ensure that PGProperty names are sorted in the correct order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common . java to provide information
updated ` UninstallDropTarget ` to use ` ItemInfo ` instead of ` Object ` for better type handling to improve code clarity and
updated the assertion message for HTTP method validation in RequestBuilderTest . java to improve clarity and accuracy of error messages
refactor NearbyActivity to use class names for fragment types instead of hardcoded strings to improve code readability and maintainability by using
changed the parameter name from ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve clarity by using a more
added a new field ` sendZeroAnomalyEmail ` to manage email sending for zero anomalies to allow users to control whether to
[ hotfix ] fix flinkkafkaproducerbase . open ( ) in flinkkafkaprodu
added methods to retrieve user , geofence , and users from the database to enhance data retrieval capabilities for user and geofence data
added a constructor to the BlockingResponseListener class that accepts a maximum length of 2MB to enhance flexibility for handling larger request sizes
use byte [ ] instead of byte [ ] in mcastserviceimpl . memberbroadcastsreceived
replaced System . out . println with logger and added a try - finally block for resource management to improve logging clarity and ensure proper resource
updated assertions in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in error message formatting
[ hotfix ] [ test ] fix typo in configmetadataprovidertest
updated import statements in ListFragment . java and refactored the updateNoteReminder method in SnoozeActivity . java to improve
added a new ` AcceptAllFilter ` class and refactored directory entry handling in ` WindowsDirectoryStream ` to improve code readability and
refactor JdbcTestDataSet class to improve code readability and maintainability
added exception handling for ClassNotFoundException in HotSpotJVMCIRuntime . java and refactored lookupType method in HotSpotJVM
refactor Docker image name validation in GenericContainer . java and introduce DockerImageName . java for validation to improve error handling and ensure valid Docker
updated error messages in LoginActivity to reflect incorrect credentials instead of username to improve user feedback by providing clearer feedback on authentication failures
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to ensure consistent focus behavior across the user interface
added unit tests for SAML configuration properties in SamlIDPRefreshMockMvcTests to ensure correct handling of SAML configurations for different identity zones
added a check for non - numeric values in the ComparableVersion class and introduced a new test for MNG7644 to ensure proper handling of
updated button modes and adjusted return values in Sheet . java , and added theme properties in UIManager . java to improve layout handling and ensure consistent
updated package structure and imports from ` org . robolectric . android ` to ` org . robolectric . android . internal
refactor method return type handling in LocalCacheFactory to use a constant for clarity to improve code readability and maintainability by reducing
updated fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to ensure consistency in
added self loop drawing functionality in ProcessingPreview . java to enhance graph visualization by allowing self - loops to be drawn
updated the constant name from " ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 " to " ALLOW _ TVM _
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to clarify the purpose of
added translation adjustment for the drag handle indicator in AllAppsTransitionController to ensure the drag handle is displayed at the top during transitions
updated logging statements in CollectionViewer , CommunityViewer , ItemViewer , and ItemViewer to include null checks for collection ID and community ID to
updated documentation for query optimization in HiveConf . java to clarify the configuration and improve user understanding of query optimization behavior
added an assumption to check if the build server has issues with finding itself in ScanningAppProviderRuntimeUpdatesTest . java to address test failures
added Jetty APK dependencies and a debug flag for diagnosing bundles in TestOSGi to enhance OSGi testing capabilities and
act - 1181 : executeasynccandexecutor . retryasynccandexecutor ( ) should return null
refactor Transaction class to improve code readability to enhance maintainability and facilitate future development
replaced custom field behavior annotation with excludeFromRuleKey in GenruleBuildable . java to clarify that Genrule execution is not
added ` whichExec ` method to ` AsyncExecute ` and modified ` FirefoxCustomProfileLauncher ` to utilize it to improve command execution handling
added a check to prevent duplicate entries in the colFamToDynamicColumnsMapping map to improve efficiency by avoiding unnecessary operations
[ hotfix ] [ runtime ] remove unnecessary @ suppresswarnings in hadoopoutputcollector
phoenix - 5584 older client do n ' t get correct view metadata when a 4.15 client create a view
[ # 7842 ] add ability to delete student that have be delete from the instructor
updated import statements in AllXSSFTests . java to use the correct TestCellReference class to ensure compatibility with the latest version of the
added a hardness check to the block ' s hardness in LensPiston . java to ensure proper handling of block hardness
added a new file ` LongPointerPressTest3049 . java ` to test long pointer press functionality in the Codename One framework
truffle : remove dependency on trufflefunctioninlining .
simplified null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy
simplified indentation check in ListBlockParser and added a new test for deeply indentation in SpecialInputTest to improve code clarity and
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to extend it to provide a base class
added JUnit @ Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests due to a known issue in GitHub issue # 1070
removed native method from TestCaseLogger to simplify method signature for better readability and maintainability
camel - 16400 : fix typo in routestartuporderlasttest . java
added a condition to check if the media format is video before executing web sub configuration checks
set ` jdk . tls . disabledAlgorithms ` to ` false ` in ` ComHostnameVerifier ` and ` JavaxHostnameVerifier `
server : do n ' t check if the storage pool be zone or not in the list of managed storage pool
updated cache entry retrieval and improved log message formatting in Driver . java and QueryResultsCache . java to enhance logging clarity and provide more
added a ` maybeUpdateModel ( ) ` method in ` AddManagedDependency . java ` and modified logic in ` ManageDependencies . java `
added a new test method ` getLastIntentSenderRequest _ send ` to ` ShadowActivityTest ` and implemented ` send ` in ` ShadowActivity
updated GLJPanel and GLCanvas initialization and refactored rendering hints in RocketFigure3d . java to improve rendering performance and
added synchronization to the controllerListeners list and improved the dispose method in HydrawiseControllerHandler to ensure thread safety when modifying the controller listeners
added a ` @ BeforeClass ` method to ` TestCoreAdminApis . java ` to skip tests that are not compatible with Java 9
updated year retrieval in TimestampUtils and improved date formatting in SetObject310Test to ensure accurate year representation and enhance code readability
fix a race condition when disconnecting a jabber connection .
added a new variable ` cur _ ws _ commit _ id ` for the transaction ID in ` TxnHandler . java ` to improve clarity
replace ByteChunk with ByteBuffer for buffered data handling in BufferedInputFilter . java to improve memory management and handle buffer overflow exceptions more efficiently
added a ` toSync ` method to ` AsyncUtils ` for converting a ` CompletableFuture ` to a ` Throwable ` to improve error handling by
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures to utilize it to enhance the build process by integrating ActionGraphBuilder
added a new test method ` testUploadingWithHiddenFileInput ` to the ` UploadTest ` class to ensure that the upload functionality beh
removed unnecessary try - catch block around table creation in SQLManager . java to streamline error handling and improve code clarity
added a check to return the local Maven directory if the file does not exist to ensure the method returns the local Maven directory if it does not
ggb - 2261 hide the algebra label if it ' s hidden
fix : fix npe in ctelementimpl # getmetadata ( )
[ java ] use buffer . addflag instead of set in defaulttrackoutput .
added a condition to check if the cached is sorted by ID in the reordering logic to ensure that reordering behavior is only applied when the
updated error message for missing method call in Reporter . java to clarify the purpose of the error message for better understanding
added null check for backupFolder before logging expiration to avoid potential NullPointerException when backupFolder is not initialized
added a new class ` ArrayNewInstanceOfVoid ` that tests the creation of a void array using reflection to explore and demonstrate the behavior of Java ' s reflection API when attempting to create an array of void
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler to ensure toolType field is included in the rule
replaced hardcoded timestamp checks with a constant PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability by
fix checkstyle issue in prometheusmeterregistrytest and prometheusexemplars sample
removed @ Ignore annotations from multiple test classes to enable tests that require a MongoDB server for execution
http : / / issues . apache . org / jira / browse / amq - 3833 - fix unit test
updated the condition to check if the table is artifical instead of checking if the table name starts with an empty string to ensure accurate validation
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct
refactor session attribute handling in MongoSessionManager to improve clarity and efficiency to enhance code readability and maintainability by using more descriptive
changed surface holder size from fixed size to fixed size from layout to improve layout flexibility by allowing dynamic sizing
refactor stopping handling in AbstractConnector to use CountDownLatch for better clarity to improve code readability and ensure proper synchronization with the stopping
reformatted parameters in HuobiStreamingService . java for consistency to improve code readability and maintainability
( chore ) camel - default - message - history : use current time instead of current time
replaced ` doOnError ` calls with ` subscribe ` for adding items in ` DelayedMonoPublisherTest . java ` to streamline
updated WebSocketTest to check for WebSocketHandshakeException instead of assertTrue to improve error handling by providing a more informative failure message when the WebSocket
refactor layout change listener implementation in AllAppsTransitionController to improve code readability and maintainability by reducing complexity
refactor variable names from ` theHandler ` to ` handler ` for consistency and clarity to improve code readability and maintainability by using
int - 171 , int - 172 , int - 173 , int - 174 , int - 178 , int - 17
replaced ` int ` with ` String ` for cacheSeconds in ` MessageBundleProperties ` and updated its usage in ` CasCoreWebConfiguration
updated references from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple Java files to ensure compatibility
removed the append method call from ByteBufferPool . java to streamline the buffer handling process
added a check for " alt - rt . jar " detection in the main method to avoid warnings when " alt - rt . jar " is
updated username and email criteria in JdbcScimUserProvisioningTests to use upper casing instead of lowercase to ensure consistency in user identification across different
replaced ` Arrays . asList ` with a new ` ArrayList ` and modified the return statement in ` FlightRecorderProfiler . java ` to
added a method ` isStreamEmpty ( ) ` to the ` WebCamInputPanel ` class and modified the ` imageDropHap
added a condition to check if the content view has content in the HttpParser and implemented a new test for chunked PUT requests to ensure proper handling
rename AtmosEndpoint class to improve clarity to enhance code readability and maintainability
added support for " printf " , " print " , and " async " methods in Java2TypeScriptAdapter to ensure proper handling of method
added a new file TestCapacityUntilGCWrapAround . java to test the behavior of metaspace capacity under 32 - bit platforms to ensure that
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
removed conditional check for stamped at start in SamplingStatCalculator to simplify the calculation logic for better performance
add unit test base on user forum issue
tmi - 12 : fix handling of malformed icc chunk in jpegimagereader
fix the reequip animation for tornado rod .
updated JoobyModule and SpringModule to ignore specific beans to ensure only relevant beans are registered in the application context
refactor webapploader to use container . getparentclassloader ( ) instead of thread . getcurrentcontextclassloader ( )
bug 51766 - nameupdater : add support for additional namemap entry
simonstewart : do n ' t start the ellipsoid region selector if it ' s already start
updated URLs from HTTP to HTTPS in JavaSEPort . java to enhance security by using secure connections
[ geos - 10560 ] add validation for sort by attribute in getfeature
updated the assignment of the grantor variable to handle null values correctly to improve code clarity and prevent potential NullPointerExceptions
added graphics capabilities and compatible image handling in DiagramGenerationTest . java to improve image rendering and ensure compatibility during diagram generation
throw a runtimeexception if sideddelegate be null , and try to install minecraft . class on top of modloader .
rename DataUtilities and ReTypeFeatureReader classes for consistency to improve code clarity and maintainability
fix # 4509 , convert sleep to
added methods ` wholeWordTokenize ` and ` joinTokens ` to handle word splitting and tokenization to improve string manipulation functionality for better token
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 404 .
refactor command handling in SystemHighlighter to use a new commandIndex variable to improve code readability and maintainability by reducing repetitive
updated version and version date constants from " 2012 - 07 - 14 " to " PENDING " to reflect the latest development stage and indicate that the
updated buffer position in StarTreeRecordStoreCircularBufferImpl . java to use dimensionSize instead of idx to ensure correct positioning based on
added support for the " shell - drag - ready " state in the QuickstepTestInformationHandler and SystemUiProxy classes to enhance drag -
log4j2 - 1349 add test for socket traffic class
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to enhance encryption
update description display from place . getDescription ( ) to place . getLongDescription ( ) to ensure long description is displayed for better user experience
added JsonProperty annotation to ScimGroupMember class to facilitate JSON serialization and deserialization of the " value "
refactor HqlQueryRenderer to utilize JpaQueryParsingToken for reserved words and add schema scoping functionality to enhance query parsing capabilities
update parameter name from " d is null " to " s is null " in ObjectHelper . requireNonNull to clarify the purpose of the
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
modified the ` offsetStreamIndex ` method to include an additional ` indexStartsAtOne ` parameter and adjusted related logic accordingly to enhance functionality by
tika - 697 -- add support for cpio file in mime type detection
[ hotfix ] [ table ] fix typo in flinksqloperatortable
added inheritance annotations to OneTimeTokenAccount and OneTimeToken classes to enable proper equality and hashing functionality for instances of OneTimeToken and One
added a condition to check if the assistant is not launched to improve the responsiveness of the assistant touch consumer
added a new file SolarisShortDSA . java to implement a test for DSA key generation to address the Solaris
remove search string label when change sort order ( fix # 283
bug cs - 15832 : do n ' t try to create a snapshot if it do n ' t exist
refactor ServiceConnection to implement a more descriptive DetailsServiceConnection class to improve code clarity and ensure mConnection is properly managed before un
refactor error handling in HttpClientTLSTest to use AtomicReference for request failure tracking to improve clarity and ensure correct exception type validation during
removed the equals method from ConjunctionScorer . java to simplify the equality comparison logic
added null check for ` v ` in ` bindItems ` method to handle cases where ` v ` is null to improve error logging for invalid
added random commit timeout and retry mechanism for leader election in ` MetadataRaftGroupManager ` and ` CPMemberAddRemoveTest ` to improve
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 539
updated API version from " / api / v2 " to " / api / v3 " and modified order handling in multiple classes to align
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the size of the freenect is
added Optional handling for page data mapping in AsyncPageReader and updated test annotations in TestDrillParquetReader and TestEmptyDictPages to
updated argument length checks and added error handling for unsupported subscription types in SerumStreamingService . java to improve input validation and provide clearer error
add confighandler . charginganimationenabled to disable the animation when an item be charging on top of a mana pool . close #
[ java ] cluster node restart test should wait for connection to complete .
camel - 20297 camel - aws2 - waitforall should log the error when an interruption occur .
replaced conditional checks for directory creation in DefaultServletTest . java to improve test reliability and clarity regarding filesystem support
removed redundant injection of dialogStylesScss and openScreenStyle in ResourcesInjectorFull . java to streamline the code for better readability and
replaced String strings with FileResource objects in BaseLiquibaseTask and DBDocTask classes to improve type safety by using FileResource
simplify the equality check for world vectors by directly accessing their properties to improve code readability and maintainability
updated return statements in LongConcurrentLRUMap . java to improve code clarity and enforce immutability of CacheEntry to enhance code safety and
replace ` singleElement ( args ) ` with ` singleElement ( args ) ` in ` ReflectionProcessor . java ` to ensure proper handling of
modified cache retrieval logic in FileCredentialsCache . java and modified argument handling in EmptyCC . java to improve cache initialization logic and enhance error handling
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
move hassufficientpeers ( ) implementation to syncmanager ( # 4842 )
danielwagnerhall : fix typo in sessionloghandler . attachtocurrentthread ( )
added a check to prevent expansion of " AreEqual [ X , Y , W ] " format expressions in the ExpressionNode class to ensure correct
added a condition to clear pending rendering operations when the implementation is minimized to ensure proper resource management and prevent potential memory leaks
fix race condition in hazelcasttestsupport # testdeadlock ( )
fix writebehindwritebehindqueue and writebehindwritelaydelayseconds ( # 16425 )
set the icon of a JLabel in GroupTreeCellRenderer to null to ensure proper icon display without unnecessary space
updated test cases in TestBlacklistAwareRedirectResolver to differentiate between strict and non - strict redirects to ensure correct behavior of the resolver with different
refactor ShutdownMonitor and ShutdownMonitorTest classes to improve socket handling and port management to enhance resource management and ensure proper functionality of the shutdown monitoring
updated the calculation of ` moveSize ` and modified the ` fillRate ` logic in ` RandomAccessStore . java ` to improve memory management
refactor field caching and serialization logic in Json . java to improve code readability and maintainability by reducing repetitive method calls
[ hotfix ] [ runtime ] refactor componentclosingutils to use futureutils . ortimeout
cloudstack - 3569 : delete volume from this vm if it be in error state
server : fix ip6 range check for empty vlan ( # 4529 )
rename ` InitializeUserDetailsManagerConfigurer ` and ` InitializeAuthenticationProviderManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` to
increased the retry duration from 15000 milliseconds to 30000 milliseconds to allow more time for leader retrieval to complete successfully
removed the ' input ' parameter from error message methods across multiple classes to simplify error message formatting and improve code readability
updated drawing coordinates in URLImage . java from ' x ' and ' y ' to ' - x ' to correct the positioning of the
updated field names comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
added a new method ` isItemZeroHighCardDim ` to check if a member is a high - card dimension to improve code readability
updated StreamTaskException to include the exception as a parameter to improve error handling by providing context about the exception
refactor tag processing logic in Preprocess . java to improve efficiency and readability to enhance performance and maintainability of the tag processing logic
reformatted the ` read ` method in ` MessagePack . java ` to improve code readability and maintain consistency
added a new annotation interface Mapper in the MyBatis framework to provide a standard way to define custom mapping behavior in the database
fix : json parser should not encode empty extension list ( # 3998 )
updated parsing logic in Artifact . java and modified artifact extraction in LibraryManager . java to ensure compatibility with external libraries and improve artifact processing
added an alias for the node popup scripting menu in ScriptingMenuEntryVisitor to enhance usability by providing a more descriptive alias for
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView . java
camel - 17850 : camel - jms should use class instead of raw type
removed unnecessary ` throws IOException ` declarations from multiple Java files to simplify code and improve readability
deleted the AbstractDelegatedVerb . java and FailureContext . java files to remove obsolete components that are no longer needed in the codebase
updated the ` __ content ` and ` __ icontent ` fields to be final and modified the ` __ contentETag ` and ` __ gzip
replaced direct usage of ` getAndAdd ` with ` BackpressureUtils . getAndAddRequest ` in ` OnSubscribeRedo . java `
added logging capabilities and modified error messages in SpeedmentImpl . java to enhance debugging capabilities and improve code readability
[ ds - 3952 ] add load dspace - config to facilitate loading of configuration from the dspace - config
hbase - 1746 hbase - 1748 hbase - 1749 storescanner should not reset matcher . row ( )
( chore ) camel - test - infra : enable jmx by default
added a constant for the canonical package separator and updated source file path handling in SourceLineAnnotation and SourceCodeDisplay to improve code clarity and
added methods to retrieve and print YARN binary and application ID in HiveConf and SparkJobStatus classes to enhance monitoring capabilities for YARN applications and
added support for " maria " database name in DbConnectionManager to enhance compatibility with additional database types
hbase - 24958 splitlogmanager . splitlogmanager . log ( ) should print the current time instead of the current time (
added a new file ` ExecuteAndReturnStringTest . java ` to implement network error handling in the application to facilitate testing and
added a new file ` InvokespecialInterface . java ` implementing an interface with method invocation to demonstrate the use of invoked interfaces
refactor EvictingBoundedList class for improved efficiency to enhance performance and maintainability of the code
do n ' t use edge _ base _ 2dir if turncosts = true
added a check for backgroundDisabled and modified selection validation in SelectBox . java to ensure selection is valid and prevent illegal argument exceptions
added a null check for the ' md ' variable in RpcServer . java to throw an exception when the ' md ' variable is not provided
updated hotseatCellSize and hotseatIconCenter calculations to include border spacing to improve layout consistency and alignment of hotseat icons
replaced partitionName string concatenation with value retrieval in ExpressionTree . java to simplify code and improve readability by directly accessing the partition index
implement versioned interface for namedtaskdecorator ( # 18653 )
update directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) in ReplicationHandler . java to ensure the use of the new index directory for replication processes
changed the default value of ` equal ` from ` false ` to ` true ` in ` DisplayModeTest . java ` to ensure that the
added a check for BMP code points in UnicodeToLatexFormatter and updated formatting logic in HTMLUnicodeConversionMaps to ensure proper handling of
added handling for ISO control characters in value assignment in OAIDCCrosswalk . java and improved null check in Item . java to
danielwagnerhall : fix npe in webdriverbackedselenium # selectwindow ( )
updated border configuration and added clear button functionality in the DataBrowser and StringSearchPanel classes to improve UI appearance and enhance user experience by allowing
updated OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the full request URL to simplify the URL construction process and improve code readability
updated assertions in SoftAssertionsTest to use parseDatetime for date parsing to improve accuracy of date comparisons and enhance error message clarity
updated adaptOrders method to accept a reverse parameter for order adaptation to enhance flexibility in order adaptation behavior
added a null check for vartype before printing it in Delombok . java and created Java11Var . java in PrettyPrinter . java to
simonstewart : remove unimplemented test from the selenium - backed selenium driver
updated Configuration initialization to use a default value of false to improve flexibility in configuration management
updated the method call from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to ensure consistent rendering of child elements
added unit test base on user forum issue
replaced usage of ` Globals . CATALINA _ BASE _ PROP ` with ` context . getCatalinaBase ( ) `
added tests for the best date - time pattern in ShadowICUTest . java and modified the return statement in ShadowICU . java to
updated color codes in PlotSquared to use Minecraft color codes to improve visual clarity and consistency in the user interface
added ZuulProperties to the TraceRestClientRibbonCommandFactory and TraceRestClientAutoConfiguration classes to enhance functionality by integrating Zu
tika - 2268 -- fix unit test for tika - 2269 ( add test for tika - 2267 )
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a ` buildTime ` parameter
updated the calculation of ` xDist ` to use ` Math . abs ` instead of ` mScroller . getFinalX ( ) `
remove guirwtester . java since it ' s no longer need .
removed null checks from the ` countPlaceholders ` method across multiple classes to simplify method signature and improve code readability
[ hotfix ] [ test ] fix typo in error message
changed package names from ` org . thymeleaf . templateparser ` to ` org . thymeleaf . templateparser . markup
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate XPath expressions to ensure that the XPath implementation correctly
added @ Nullable annotation to FutureUtils . java to indicate that the method can accept null values
add warning if invokedynamic can not be resolve during call graph construction
updated email addresses from " @ gmail . com " to " @ example . com " to ensure consistency in email format across the application
updated HTTP response handling in HttpConnectionTest . java and changed URIUtil . equals from URIUtil . decodePath to URIUtil . decodePath
added a method to retrieve column data type in ` AbstractResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` classes to
add default implementation for ` ` throw new $ t ( ) ' ' in ` ` asyncclientinterface ' ' , ` ` syncclientinterface
refactor HSSFPictureData class for improved data handling to enhance performance and maintainability of picture data processing
replaced ` System . currentTimeMillis ( ) ` with ` java . time . Instant ( ) ` for better readability to enhance code clarity
added support for MediaInfoLib version parsing in LibMediaInfoParser . java to enable compatibility with different media info versions for improved functionality
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enable dynamic proxy generation for IdeaDependency instances
added a new file ` SerialHeap . java ` and updated references in ` Universe . java ` to use the new ` SerialHeap `
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress serialization warnings for improved code
update mouse wheel event to use mouse . getposition ( ) instead of mouse . getposition ( ) .
datamongo - 1608 - fix nullpointerexception when search for firstname with null
[ hotfix ] [ core ] add multiset type support to mapinfoinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to enhance
pdfbox - 4892 : fix parsing of nasty cmap file with poor whitespace
refactor ` ContactsBackupJob ` to use ` OperationsService ` for managing file expiration to improve code modularity and facilitate
refactor constraints handling in Attr . java and add new classes T6938454a . java and T6938454b . java to
added is _ account _ config _ hidden check to accountlist . ishidden ( ) and accountid . isconfighidden ( )
added logging for inconsistent display states in DisplayController . java to improve debugging and traceability of display mismatches
replaced SchemaUtil . getSchemaName with schema . getSchemaKey in PMetaDataImpl . java and added a new test case in PMetaDataImpl
ticket # 4810 : fire passive login only once
added a new file Box2DTest . java and modified GDXTester . java to include Box2DTest to implement Box2D
add more debug log to help diagnose npe
[ hotfix ] [ test ] increase default buffer request timeout to 5 minute
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a help button to the OpenOfficePanel to provide users with a help link to the OpenOffice integration page
[ java ] rename tcp _ nodelay option to tcp _ nodelay in netty acceptor .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceTradeService to use wildcard types to improve type safety and
refactor class reference handling in ScanResultObject . java to improve clarity and maintainability to enhance code readability and reduce redundancy in
do n ' t send badurl . jspx for large image
added null handling support to Querydsl and created a new integration test class QuerydslIntegrationTests to enhance flexibility in handling null values and ensure
added a null check for the actor parameter in the ParallelAction and SequenceAction classes to ensure actions are only processed when the actor is not null
fix ( test ) : fix typo in cttypetest
added synchronization to the for loop in HDFSEventSink . java to ensure thread safety when accessing shared resources
added new interfaces ` Issue888 _ JavaI ` and ` Issue888 _ KotlinI ` , and created corresponding test cases
added support for revocation of existing agent certificates in CertificateManager and created a corresponding test in CertGenerationTest to enhance certificate management functionality and ensure proper
added handling for HTTP / 1.1 responses without body in AbstractHttpTest . java and implemented a test for write body after no body response
added null checks for script text and script language in ScriptTransformer . java and improved exception handling in ScriptTransformer . java to ensure compatibility with
added support for HikariCP connection pooling type in HiveConf and updated related test cases to enhance connection pooling capabilities and improve error
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added a method to filter and hide lock and unlock files in FileMenuFilter and implemented file lock and unlock functionality in OCFileListFragment to
refactor version handling logic in Version . java to improve code clarity and maintainability
clear endpoint cache when update keyspace
replaced direct calls to ` waitForSignal ( ) ` with a new ` waitForState ( ) ` method in ` Locks . java `
updated the ` getCoercedAttrValues ` method to include dependencies from ` SkylarkRuleContextAttr ` to enhance attribute coerc
simonstewart : make localstorage and sessionstorage extend storage
fix nullpointerexception when create or replace view
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error messaging for better debugging cl
updated the method for retrieving the query string in SpellCheckComponent . java to ensure the correct query is used when it is not already set
added validation for header values in Headers . java to ensure only valid characters and whitespace are processed to prevent errors during header processing
[ gr - 18686 ] fix universebuilder . getafterfieldsoffset in hybridlayout . java
[ java ] fix class cast exception in apextreenode and commentcontainernode
hhh - 16400 - log a warning when fetch type be lazy and fetchtype . lazy = true
refactor NoGetOperationsFilter , NoUserOperationsFilter , RemoveInternalParamsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter
added assertions to verify database and table names in TestCompactionTxnHandler and set database and tablename in TxnHandler to ensure correct database and
( chore ) camel - core - timer : add suspension support to timer consumer
added a conditional check before adding and removing traces in TraceBuilder . java to ensure traces are only added if the block is not processed
replaced ` contains ` with ` contains ` in ` ProviderManager ` and added null checks in tests to improve handling of null values and ensure
removed conditional check for PostgresDatabase version in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining the Postgres version
added tests for local index queries and modified limit handling in multiple classes to ensure correct query results and improve handling of local index limits
added validation to prevent adding collections with incompatible types in the AlterTableStatement class to ensure data integrity by preventing invalid collection additions
updated cursor positioning logic in VDUBuffer . java and vt320 . java to improve accuracy of cursor positioning based on the current screen
removed the static constant USE _ RETRIES from HttpShardHandlerFactory . java to streamline code by eliminating unused constants
updated the version number format in JavaVersion . java from " 11.0 . 7.0 . 0.4 " to " 11.
[ hotfix ] [ stream ] skip streamtask when there be no input gates
added a test method to the TestReceivingMessageSourceParserTests class to ensure that the test functionality is validated by the JUnit test
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties are null
updated IOException handling in FileSystemBlobStrategy to include the original cause to improve error reporting by preserving the original exception context
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
added a TxConfidenceListener to manage transaction confidence updates in TxIdTextField to improve the handling of transaction confidence changes for better UI respons
[ netbeans - 4687 ] add support for ` ` g1 perm gen ' ' in jmx
removed unnecessary import statements and simplified return statement in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to include a check for home activity type to ensure that home activities are
renamed classes DefaultEdgeClientFilter and EdgeAddHeaderClientFilter to EdgeAddHeaderClientFilter and updated relevant constants to improve clarity and
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming conventions
removed the setUnfreezeAmount method from UnfreezeBalanceV2Actuator to streamline the code by eliminating unnecessary functionality
updated descriptions in ConferenceSchedulingXlsxFileIO to include " per match " instead of " per minute " to clarify the purpose
simonstewart : use apache common io fileutils instead of guava in firefoxprofile . copy
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability
refactor Observable class to improve code readability to enhance maintainability and ease of future updates
refactor the ` pushAll ` method in ` Update ` to use a multi - field operation instead of a single - field operation to improve
added a null check for ` randomUUID ` before setting it in ` MockHubService . java ` to ensure that ` randomUUID ` is
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction responsiveness during hover events
added a sleep mechanism for the boostrap configuration check in CoreContainer . java to ensure proper initialization before proceeding with operations
camel - 7999 : camel - netty - http should use camel - netty - http instead of camel - netty
updated the HBase client retries number from 5 to 15 in HBaseTestingClusterAutoStarter . java to increase the number of retries for better testing
replaced ` toFile ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) ) . getAbsolutePath ( ) ` for creating a template
[ gr - 38686 ] fix test that fail on slow machine .
updated query command from " customer _ count " to " all _ tables " and added a new test for query over output to improve clarity
added support for adapting currencies from KrakenAssets to ensure accurate currency mapping for Kraken assets
added a ` toString ` method to the ` AnyOf ` class and created a test class ` AnyOf _ toString _ Test ` to provide
updated email group logic to use a variable for dimensions instead of a single entry key to improve code readability and maintainability by reducing red
[ influxdb ] add check for non - blank measurement and non - blank database
rename ` doTransform ` and ` doTransform ` to ` downcast ` in multiple converter classes to improve method naming consistency and clarify
updated filtering conditions for local address addresses in NetUtils . java to ensure only valid local addresses are considered for processing
replaced the method of writing row headers with a separate method for quoting column names to improve code readability and maintainability by encapsulating column
added property management methods to WrapSystem , StrUtils , and ClassWrapper classes to enhance system property handling and improve code readability
added a constructor to the UpdateRequest class to initialize the UpdateRequest with a valid URL to ensure proper initialization of the UpdateRequest class with a
changed the visibility of the EnumSerialization enum from static to instance to allow the enum to be accessed without requiring an instance of the class
added a new method ` addExperimentalFormatWarning ` to the ` RequestHandlerUtils ` class to inform users that the response format is experimental and
updated debug logging to include the full value format and added a new method to format the list of strings to improve clarity of debug logs and
bug fix : table row height be too small for label . font size
removed unnecessary null checks and improved code formatting in DefaultBrokerHeartbeatManager . java to enhance code readability and maintainability
added meanPartitionSize , partitionCount , and splitCount variables in CqlInputFormat . java to improve clarity and maintainability of partition
simplified the condition for checking JUnit4 class names in JUnitTestsShouldIncludeAssertRule . java to improve code readability and
[ drools - 7 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuple
added import for StageIDsRearranger and a conditional check for HIVESTAGEIDREARRANGE in TezCompiler . java to
fix mbean registration for messaging service . patch by jbellis ; review by brandonwilliams for cassandra - 1291
refactor memory consumption logic in LotsOfOutput . java to improve clarity and accuracy of memory consumption reporting
added import statements and updated javadocs in multiple classes to enhance documentation clarity and maintain consistency across the codebase
updated LdapAutoConfiguration and LdapProperties classes to improve management of anonymous read - only settings to enhance LDAP configuration flexibility and ensure correct context source
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future development
[ beam - 8470 ] fix checkstyle issue in example echo pipeline test
added finishMocking method to MockitoSession , DefaultMockitoSession , and StubbingWarningsTest classes to enhance mocking capabilities and
refactor dependency declaration in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve clarity and functionality
refactor buffer and handler variables in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve code readability and maintainability
fix ( liquid - wrapper ) : use getlowingblock ( ) instead of getstaticblock ( )
replaced the use of ` intent . putExtra ` with ` intent . getData ` in ` AndroidLocationPlayServiceManager . java ` and
rename aprendpoint . java to aprendpoint . java for consistency
[ hotfix ] [ table - planner - blink ] fix clifrontend to handle different plan type
fix craftingmanager . getitemhash ( ) and getitemhash ( ) in craftmanager # getitemhash ( )
[ flume - 2952 ] fix flume - tests . testfilechannelrestart . testforcedcheckpoint
simplified whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern to compile " . * pg _ temp _ . " in NeuteredLinesFilter . java to enhance filtering capabilities for database
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
modified the handling of UnknownType to differentiate between INTERVAL and NCLOB data types to ensure appropriate handling of data types for interoper
add a check to ensure that the distribution metric be only register if the timer be publish
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to include ` warmup `
added a protected method ` registerListener ` to the ` ShadowSensorManager ` class to enable listener registration functionality in the sensor manager
added socket exception handling for SSL connection tests in HttpServerTestBase and SelectChannelServerSslTest to ensure proper logging of socket exceptions during SSL connection
camel - 16400 : camel - ignite should not close ignite instance if it ' s not in use .
updated print statements to handle empty sets and added a check for reaching end in AbstractClient . java to improve clarity of output and ensure
pdfbox - 4071 : catch unsupportedflavorexception instead of ioexception , a suggest by valerybokov
added unit tests for HDR capabilities in ShadowDisplayTest . java to ensure proper handling of unsupported HDR capabilities starting from Android N
added a finally block to clear the ClassLoader to ensure proper resource management and avoid potential memory leaks
enhanced error messages in SemanticAnalyzer and improved string representation in SemiJoinHint to enhance debugging capabilities and provide clearer insights into
added a default constructor to the Message class to enable instantiation of Message objects without requiring parameters
updated priority handling in SerializableIdiom to differentiate between GUI and non - GUI components to improve compatibility and performance when dealing with GUI components
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo as a parameter and modified BigDecimal conversion logic to enhance type safety and ensure precision is
refactor compression handling in CompressionResponseStream and remove unused imports in CompressionServletResponseWrapper to improve code clarity and reduce unnecessary dependencies
updated variable names from ` WWWAuthenticate ` to ` authenticateHeader ` in ` Authenticator . java ` to improve clarity by using a more
removed redundant checks for specific directory names in DCD . java to streamline code by eliminating unnecessary checks
added a method to retrieve the thread group name in ThreadLeakTest to improve thread management by providing a default thread group when it ' s
added logging functionality and modified method signatures in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and improve error handling
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` to
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code readability and
kvm : add iso disk to the listvirtualmachines api for user vms
refactor signal handling logic in SigInt . java and update test assertions in SigIntTest . java to improve clarity and correctness of
replaced the use of ` ArrayUtils . isEmpty ` with a custom ` ArrayUtils . isEmpty ` method in ` NodeTool . java ` to improve
update axonautoconfigurationwithspringcloudtest to use spring boot test
updated color interpolation methods in ColorRGBA . java to improve clarity and maintain consistency in color handling
planningentityselector . setresetinitializedplanningentities ( false ) should not be remove in favor of setresetinitializedplanningentities (
added ` setBuildTimeMs ( ) ` and ` setBuildTimeMs ( ) ` methods to ` ArtifactInfo ` to enable tracking of
updated Field array retrieval and added a new variable ` aggrPositions ` and modified conditional logic in ` GroupByOperator . java ` to improve
added null check for the ' block ' variable before adding it to the ' wtx ' block to prevent potential NullPointerException when ' block ' is
added support for the CNC currency pair in the trading data service to enable trading functionality for the CNC currency in the trading
updated skewAllowance from 5 to 15 in SamlIdPResponseProperties , SamlRegisteredService , and SamlProfileSamlAuthN
updated sorting behavior in SongListActivity and Utils to use ItemSortBy instead of null to improve sorting functionality for better user experience
added a method ` readBodyToBytesIfNecessary ` to handle the ` Request ` class to ensure that the request body is properly written if it is
added legacybaseblockwrapper and refactored the baseblock class to use it to improve code organization by separating concerns
refactor branch creation logic to handle tag existence checks to improve error handling and provide clearer feedback when the specified tag does not exist
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify code and improve readability
removed unnecessary bounce count and frame number handling in PhotonMappingDemo to simplify the code and improve readability by eliminating unnecessary
updated password change validation logic in IdentityProviderEndpoints . java and added logging in IdentityProviderEndpointsMockMvcTests . java to ensure correct handling of
removed ` assumeReflective ` from ` notInitializedInConstructors ` in ` UnreadFields . java ` to streamline the code by elim
added handling for closed connections in JdbcExecutor to improve error reporting for SQL execution failures
added a new test method ` testRequiredBody ` to validate the presence of user data and user name in the ` RestTemplate ` to ensure
updated regex patterns for user and password in CredentialInjector . java and updated JDBC URL format in CredentialInjectorTest . java to improve consistency and accuracy
added a new menu item " Item4 " and modified the menuItems array to include an additional item " Item4 " to enhance functionality by
updated print statements in TestCoreParser . java to include the query type and modified assertions in TestCoreParser . java to improve clarity of
updated equality checks in SimpleNode to use ' id ' instead of ' children ' to ensure proper comparison of nodes based on their identifiers
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class within its package for better
updated the calculation of the number of documents in MoreLikeThis . java and added a new test case in TestMoreLikeThis . java to
reformatted code for improved readability and maintainability to enhance code clarity and maintainability
[ hotfix ] [ test ] add testlogger to networkbufferpooltest
replaced the ` append ` method with a new ` append ` method in ` MongoSessionDataStore . java ` to streamline the query construction
added a new native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate the use of native
update time zone information from " Asia / Amman " to " Asia / Amman " across multiple files to reflect the latest time
updated the deprecation ID from 90000010 to 90000011 to reflect the latest deprecation features and improvements
hhh - 14516 handle jdbcexception in sessionimpl . getaccessonly ( )
do n ' t print file extension when there be no extension
disable screen menu bar for macosx
[ ca ] add piecewise integration test for ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added support for modifying the ` modWhiteListPattern ` in ` HiveConf ` and created a test for it in ` TestJdbcWithSQL
fix : remove uneccessary mark - as - illegal - class ... this be mostly to trigger a rebuild
updated the target coordinate from ` team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure
updated the cookie domain from " comp1 " to " domainHelper . getHostName ( ) " to ensure the correct domain is used for cookie
added nullable validation checks for columns in multiple change generator classes to ensure correct handling of nullable constraints in database interactions
refactor multiple security token - related classes for improved consistency and clarity to enhance maintainability and readability of the security module
added functionality to delete documents and add documents in CustomCollectionTest and refactored fields in CompositeIdRouter to improve test coverage and ensure consistent
replaced ` InputStreamList ` with ` SnapshotGeneratorFactory ` for handling snapshot data in ` ExecutablePreparedStatementBase . java ` and added a new
updated conditional checks for ` max _ cached _ files ` , ` max _ cached _ size ` , and ` max _ cache _ size `
add drag - and - drop support for ` ` open file ' ' and ` ` open file ' ' ( # 7508 )
updated descriptions in ExecutionUnitRunner and CucumberTest to include scenario names as test descriptions to improve clarity in test descriptions for better debugging
replaced ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( myVersion , myVersion , buildTimeString ) ` for better readability
changed access modifiers of several methods from public to package - private in TimeUtils . java and refactored TimeUtilsTest . java to enhance
added a new method ` isSecurityFrameOrInjectedInvoker ` to check for ` javax . lang . reflect . useDirectMethodHandle `
updated the file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with image file format
[ gr - 21212 ] native - image - debug : use getjavatype ( ) for hosted method .
added an ` getIcon ( ) ` method to ` Data ` and updated icon retrieval in ` Data ` , ` DataTableTopComponent ` , and
refactor substring logic in CounterRequestAggregation for improved readability to enhance code clarity and prevent potential null pointer exceptions
updated string replacement logic in FindAndReplace . java and added a test for dollar sign toleration in FindAndReplaceTest . java to
smack - 103 : fix npe in smackpacketdebugger when connect to jabber . jm - 103
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to ` IO ` and updated imports in ` SpecWebAppTest ` to improve directory copying functionality and
avro - 941 . java : throw a runtimeexception for unknown datum class .
refactor ABI retrieval logic in DefaultJavaLibraryBuilder to use ` HasJavaAbi . getLibraryTarget ` and ` BuildRuleResolver
simplified height calculation for itemHeight in SelectBox . java to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent identifier formatting across the application
added support for Oracle database type in the DbSqlSession class to ensure proper schema handling for Oracle databases
removed unnecessary logout handling in HomeFragment . java to simplify the code and improve readability
[ hotfix ] [ test ] fix typo in mockruntimecontext
added a null check for the ' candidates ' list in FastImportAction . java to avoid potential NullPointerExceptions when processing elements
updated condition in ContainerLifeCycle to check for managed bean status to improve clarity and accuracy of lifecycle state checks
rename ` ` iexecutionattributesdialect ' ' to ` ` iexecutionattributedialect ' ' for consistency
added a call to clearUnsafe ( ) in AlterTest . java to ensure a clean state for future operations
cmd : fix npe in gettime ( ) when location be null
added null check for measurement and refactored exception handling in DisruptorQueue and CachedSchemaPatternMatcher to improve robustness by preventing
deleted the Session2Token . java file to remove unused code to streamline the project
bug cs - 15789 : remove volume when create / destroy a volume ( # 4586 )
added a new ` Install ` class to the ` SystemShortcut ` class and implemented the ` getInstantApp ` method in ` SystemShortcut `
added a NullAuthoritiesPopulator to LdapAuthenticationProvider and implemented a test for null authority populators to enhance flexibility in handling null authority
updated the retrieval of the retrolambda jar path in Executor . java and added a fallback mechanism in CN1BuildMojo . java to
replaced the method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to simplify the
replaced ` FixedBitSet ` with ` Bits ` for sorting live documents in ` DocumentsWriterPerThread . java ` to improve performance
added handling for null results in JMESPathExtractor . java to improve robustness by preventing null pointer exceptions
updated import statements and added null check for current user authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
refactor assertions in tests to use ` new Date ( ) ` instead of ` DateTimeUtils ` for date conversion to improve code clarity and
server : fix typo in exception message for unsupported vgpu snapshot
renamed ` classConfig ` to ` methodClassConfig ` and ` testClassConfig ` in ` RobolectricTestRunner ` and
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty
refactor partition key comparison logic in HiveAlterHandler . java and add new test cases in TestHiveMetaStore . java to improve code
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the display of an icon
updated conditional statement in SimulationStatus . java to improve code readability and maintain consistency
replaced ` SharedBlockingCallback . Blocker ` with ` Callback . Completable ` in multiple files to simplify code by using a more standard
added WorkspaceListener to handle workspace events in PreviewControllerImpl to enable dynamic graph updates based on workspace changes
added checks for anonymous classes in ReflectionFactory and modified class name checks in ReflectUtil to ensure proper handling of anonymous classes and improve code clarity
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the code
added import statement for ResourceLoader and modified file path formatting in CatalinaAcegiUserRealm . java to improve resource loading functionality and
updated server and manager startup log messages in AmbariServer . java to enhance clarity of log messages for better debugging and monitoring
added null checks and improved null handling for forNode instances in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions
updated the ` run ` method to accept a ` FileSystem ` parameter and modified user handling in ` SliderAppsViewControllerImpl ` to improve
added a check to ensure the window is attached only if it is not already attached to prevent potential NullPointerExceptions when the backgroundManager is not attached
updated tab selection logic in AllAppsTabbed , Launcher , and PagedView classes to improve user experience by ensuring consistent tab selection behavior
added null check for the URL parameter in BaseDataSource . java and implemented a test for typo postgres URL in SimpleDataSourceTest . java
enable pebble test on jdk 12
quick & dirty fix to avoid that ' create folder ' dialog keep the name of the last created dialog in the input field
added functionality to toggle bar borders in multiple activities to enhance chart customization options for better user experience
updated SSL URI and host from " okcoin . com " to " okex . com " in OkCoinExchange . java to align the
[ drools - 7 ] remove unused test method from acceptanceforagertest ( # 1340 )
replace FileChannel with SeekableByteChannel for reading input streams and add a test for byte data reading in BytesAndLines to improve performance and
refactor the ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter and improve code clarity to enhance the
replaced instances of ` MockHandler ` with ` MockHandlerImpl ` across multiple files to improve clarity and align with the new implementation structure
simplified the conditional check for SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser . java to improve code readability and maintain
added heap limit configuration for debug devices in QuickstepProcessInitializer to enable monitoring of memory usage during development
refactor sumWithCompensation method calls to use a variable for clarity to improve code readability and maintainability by reducing redundancy
[ log4j2 - 1343 ] fix test failure in abstractloadbundletest
[ hotfix ] fix checkstyle violation in precompactedrow
updated the return value in ICC _ Profile and modified color conversion logic in ColorConvertOp to ensure correct handling of rendering intents and add
add MeterRegistryLifecycle to manage MeterRegistry lifecycle in MetricsAutoConfiguration to ensure MeterRegistry is properly closed on application shutdown
change log level from warn to info for config center error message ( # 9045 )
added exception handling for generating certificates in CertificateFactoryTest . java to ensure proper validation of certificate input for testing purposes
camel - 16400 : fix issue with ambiguous binary operator in simple predicate parser ( # 7395 )
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added focus change handling in ` IDEEditor ` to
fix bz 65047 include user info if access log valve ca n ' t open log file
updated matrix scaling in SkeletonModelGpuSkinningTest and modified mesh name handling in OgreXmlLoader and SkeletonModelViewer to
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these elements are outdated and should not be used in future development
added support for generating d . ts files in the JSweet transpiler to allow users to specify the output directory for generated d . ts
[ flink - 20537 ] [ kinesis ] make fetch timeout configurable in streamconfig
[ beam - 8470 ] add ` ` . html ' ' tag to streamingdataflowworker
updated the maximum thread count from 100000 to 1000 in the metastore server ' s maximum threads configuration to improve performance by reducing the number
changed the return type of the onTaskSnapshotChanged method from void to boolean to indicate success of the snapshot change operation
updated the shadow radius setting in SwipeUpAnimationLogic to ensure the correct shadow radius is applied during animations
added a test for chain nesting and aggregation functionality in ChainParserTests . java to ensure proper handling of messages with nested correlation IDs and aggregation
updated loop condition in MarketSellAssetActuatorTest . java to include an error message to improve error handling and provide clearer feedback
do n ' t check if the source be interactive in polyglot context
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of null values to avoid potential NullPointerExceptions
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instance to enhance functionality by integrating display control capabilities
updated toolTipText assignment for ` homeDir ` in ` MetalFileChooserUI ` and ` SynthFileChooserUI ` to ensure
replace getToolkit ( ) ' s getScreenSize ( ) with Toolkit . getDefaultToolkit ( ) . getScreenSize ( ) to ensure
changed the type of the ` recognise ` method from ` ? extends RecognisedObject ` to ` < CaptionObject > ` in `
refactor JPASQLBase to use QueryDSL for entity management and add unit tests for fetch results to improve test coverage and ensure correct
removed drag index validation in FreeformFinSetConfig . java to streamline the code by eliminating unnecessary checks
update moe version from " 1.1 . 2 " to " 1.2 . 0 " to ensure compatibility with the latest features and
updated error message in Runtime . java for clarity and added program . spendAllGas ( ) to improve error message clarity and ensure all
updated error message formatting in multiple Java files to include newline characters to improve readability of error messages for better debugging
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
add platform - specific unsafe plugin registration to graph builder plugins .
added Hint annotations to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created a new test for blacklisted module visibility to
changed the default value of mCenterPagesVertically from true to false to disable centering pages for improved user experience
added a call to ` doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure proper synchronization during migration operations
updated KonnectedBindingConstants and KonnectedUPnPServer to use BASE _ URL instead of HOST to improve clarity
updated attribute handling in WSFederationClaimsReleasePolicy to use List < Object > instead of Object to improve type safety and flexibility in attribute
updated test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to ensure proper
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate parsing and deparsing of case expressions
refactor copy mode logic into a separate method ` startCopyMode ( ) ` to improve code readability and maintainability by encapsulating copy
updated import statements and refactored the writeXmlOutput method to use a try - with - resources statement to improve resource management and ensure proper
camel - 16400 : added null check for exchange in abstractlistaggregationstrategy . split ( )
( chore ) camel - exchange : use camelexchangeredexecutor instead of camelhelper for exception handling
move basicconfigurator from org . qos . logback to org . qos . logback . classic
[ graal - 471 ] do n ' t check for phi _ node in type qualifier dataflow analysis .
removed unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a convenient way to invoke methods with specified parameters
renamed multiple classes related to box and whisker calculations to improve consistency and clarity in naming conventions
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
updated equality checks in several classes to use ` . equals ( ) ` instead of ` . equals ( ) ` to improve code readability and
changed the visibility of the singleton instance from static to private to enhance encapsulation and restrict access to the singleton instance
refactor IfStatementTest to use PluginDefinition and create test expressions for improved clarity to enhance code readability and maintainability by redu
replace ` getPutOnlyTableRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure the correct
refactor null handling in TypeAdapter by removing unnecessary null checks to simplify code and improve readability by eliminating unnecessary null checks
updated the expected size from 12 to 13 in the BundledDistributionTest class to reflect the correct expected value in the distribution
added a new file EXIFReader . java and modified ImageProcessingService . java to improve handling of Exif metadata to enhance image processing capabilities
fix ( cloudwatch ) : use standardunit . none instead of unknown unit
[ rhbpms - 4372 ] apply pmml model only when there be a valid parameter ( # 1359 )
updated error message formatting in FluentProtocol . java to include a new line to improve clarity of error messages for better user understanding
added a check to return early if the bubble bar visibility is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 48705 ] handle branchtargetindexoutofboundsexception in aarch64backend .
added a try - finally block around the initialization of the JDKLogManager to ensure that the log manager is properly reset even if an exception occurs
added a ` find ` method to ` TicketCatalog ` and modified ticket retrieval logic in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry
refactor SSL connection logic in TestSSL . java for improved readability and structure to enhance maintainability and clarity of SSL configuration
[ hotfix ] [ runtime ] fix thread safety issue in sortmeresultpartition
fix for http : / / issues . apache . org / activemq / browse / amq - 2272 - add default value
updated PluginHandleController and PluginHandleDTO classes to include type and sort parameters to enhance functionality by allowing retrieval of multiple plugin handles based on their
updated method calls in DefaultSpanCreator and SleuthAdvisorConfig to use start ( ) instead of start ( ) to ensure proper span initialization
added new GLKViewDrawableColorFormat and GLKViewDrawableMultisample configurations to IOSApplicationConfiguration and IOSGraphics classes to
refactor login attempt logic into a separate method for improved readability and maintainability to enhance code maintainability and reduce duplication in the login
fix ( torch ) : throw unsupportedoperationexception if real ( ) or complex ( ) be not support .
simplified the synchronization logic in SynchronizationStatistics . java to improve code readability and maintainability
refactor implementation of Implements and ShadowPicker classes to improve code clarity and maintainability
refactor HttpClientOptions creation to use a dedicated method for creating HTTP / 2 client options to improve code readability and maintainability by encapsulating
added checks for ` DynamicArray . class ` and improved type handling in ` SolidityFunctionWrapper ` and ` SolidityFunction
updated method calls to include a default value for " text - align " , " font - size " , and " parent - size " to
added constructor to ` CopyStep ` for ` Path ` and created a test for its internal path in ` CopyStepTest ` to enhance the
fixed - rsemaphore . acquire ( ) . addpermits ( ) should n ' t be call after addpermits ( ) .
camel - 16400 : camel - test - infra - dsl - dsl should use next ( ) instead of next ( ) to avoid
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
replaced instances of ` List < String > ` with ` List < ByteString > ` in ` WitnessScheduleStore . java ` to improve
added a check for non - empty results in TestElementsAnnotatedWith . java to avoid printing empty results and improve output clarity
refactor ConcurrentLinkedQueue to improve item removal logic and introduce a new class RemoveLeak to enhance the functionality of the ConcurrentLinkedQueue
added a boolean parameter ` addSpecialTokens ` to several methods in ` HuggingFaceTokenizer ` to control the addition of special tokens during
[ hotfix ] [ runtime ] use collections . nCopies for compute slot resource profile
updated data handling in LoadSingleTsFileNode to utilize alignedChunkData for improved memory management to enhance data integrity by ensuring proper size
added session storage context management in BrowserSessionStorage and updated DuoSecurityMultifactorWebflowConfigurer to utilize it to enhance
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5382 - add test
added a default constructor to TypeAdapter and updated the @ Ignore annotation in Java17RecordTest to ensure proper instantiation of TypeAdapter and clar
[ gr - 13922 ] do n ' t kill the debugger if it ' s not need .
refactor AntPathRequestMatcher class for improved request handling to enhance performance and reliability of path requests
refactor createresourcepolicy ( ) to remove unused parameter
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerExceptions when _ deflaterEntry is not initialized
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup of resources after each test execution
added normalization for Unicode characters in the MD5 checksum to ensure consistent checksum formatting across different operating systems
refactor command handling logic in Example . java for improved clarity and functionality to enhance code readability and maintainability by reducing red
fix typo in profilerkeylistener ( # 208 )
replaced ` T ` with ` DBObject ` for JSON parsing in MongoTemplate . java and added a new test for saving JSON strings in
added functionality to check for multiple remote addresses in the RequestUtils class to ensure that only valid IP addresses are processed in the request
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` in ` JsLibrary . java ` to improve type
updated CookieManagerTest to use static host address and improved proxy handling to enhance test reliability by using a local host address and port for
refactor glyph processing logic in GlyphLayout . java and add a new bitmap font test in BitmapFontTest . java to improve handling of whitespace
[ flink - 15521 ] [ connector / pulsar ] add pause / resume split reader base method to pulsarpartition
added a new configuration variable HIVESCRIPTIDENVVAR and implemented it in ScriptOperator to enable dynamic environment variable management for script operators
refactor getListedTermCounts method to improve sorting logic and streamline document count retrieval to enhance code readability and maintainability by lever
added a new file ` UseSeparateStepSizeAction . java ` to implement a mechanism for setting a separate step size in the Jog
added user account management and unlocking functionality in FileMenuFilter . java to enhance security by ensuring only authorized users can unlock files
updated import statements and modified region server handling in RoundRobinTableInputFormat . java and TestTableSplit . java to improve code clarity
updated header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest
pdfbox - 4892 : use ioutils . closecloseable ( ) , a suggest by valerybokov
added fullscreen functionality in GwtApplication and modified display mode handling in GwtGraphics to improve user experience by enabling fullscreen mode management
updated WebfingerIssuerService to use URI instead of String for issuers and modified parameter names to improve handling of URIs and enhance code cl
add a new file SoulApacheDubboClientConfigurationTest . java to implement unit tests for DubboClientConfiguration to ensure
replaced Gdx . files . internal ( fileName ) with resolve ( fileName ) in SkinLoader . java to ensure compatibility with updated file
updated logging statements from warn to info in ChainingAttributeReleasePolicy . java and changed log level from warn to info in OidcDefaultJson
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` lockInterruptibly ( ) ` in multiple
updated package declaration for clarity in Compiler . java to improve code organization and maintainability
do n ' t report in jsr subrouters if there be no exception
updated DashRendererBuilder to use DefaultHttpDataSource instead of String for manifest fetching to improve handling of HTTP data sources in manifest fetching
added a new configuration property for maximum number of prepared statements per database connection to allow users to configure the maximum number of prepared statements per connection for
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes to improve the interface ' s
added error handling for command payload errors in AutoScalingHandler to improve error management for command operations
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
replaced the use of a byte array with a variable in the read loop to improve code readability and maintainability
add a method to remove cryptography restrictions based on Java runtime environment to enhance security by ensuring only restricted cryptography restrictions are retained
do n ' t spawn portal if the nether be not cancel . close # 1352
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure proper handling of long text
added a null check for ` vContext ` before setting it in ` Vectorizer . java ` to ensure that ` vContext ` is only
fix wialon position speed calculation ( fix # 2276 )
hbase - 16400 disable metric user enable by default ( addendum )
added a method ` isEmpty ( ) ` to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
added and modified boolean flags related to user presence and visibility , and updated the receiver unregistration logic to improve receiver management by ensuring it only unregisters when attached
updated multiple Java files related to file handling in AsyncFile , HttpClientRequest , HttpServerRequest , and NetSocket to improve code organization and maintainability
add miss params in pipelinebase . zadd ( # 1671 )
[ ds - 3740 ] fix typo in dspace - import and fix typo in test
rename testasyncmessages to testasyncmessagesperformance
refactor ` VersionedTargetGraphBuilder ` to improve handling of target nodes and introduce ` HasTests ` interface in ` VersionPropagatorBuilder
updated epoch time range checks in TimeZoneProvider . java to improve accuracy of time zone representation
updated the return value in EscherBlipRecord from ` field _ pictureData . length + 4 ` to ` HEADER _ SIZE . length
updated the initialization of row and column variables in JSONParser . java to ensure correct initialization of row and column values
replaced ` JavaType . ShallowClass . build ` with ` StringUtils . aspectjNameToPattern ` in ` FindTypes . java `
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added support for playback of multiple trailers in BaseItemDetailsFragment
added a method to remove glyph information from memory freeing and garbage collection in CStrike . java to improve memory management by ensuring glyph information
act - 386 : add history for terminate end event ( # 386 )
camel - 16400 : camel - core - use xmlrootelement instead of xmltype . name ( )
updated valid endpoint URL from " http : / / scottb . org " to " https : / / www . apereo .
add a new option to reset all preferences to default value
changed visibility of fields from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access these fields and methods for better extens
[ danfossairunit ] remove deprecated channel from manual fan speed channel ( # 9048 )
use hamcrest assertion instead of junit in testendpoint
removed redundant null checks for expansionHelper in TweetActivity . java to streamline code by eliminating unnecessary checks
added null checks for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to enhance robustness by preventing null pointer exceptions during
add root disk size to customparameters if it do n ' t already exist
updated visibility logic in PredictionRowView based on preference settings to improve user experience by ensuring suggested apps are shown based on user preferences
[ geos - 9805 ] handle invalid bbox crs in apiBBoxparser . tofilter
added validation methods for value , position , and Merkle tree depth in LibrustzcashParam . java to ensure values are non -
moved ithrowableentity . java to cpw . common . registry . ithrowable to fml . common . registry . i
added random values for x and y in NodeDataImpl . java to enhance randomness of node attributes for better data distribution
renamed ` validateRefreshToken ` method to ` validateRefreshToken _ happycase ` and added a test for missing scopes in ` TokenValidationTest
refactor variable declarations for ` declaredDepsBuildResult ` and ` returnedStderr ` in ` JavacStep . java ` to improve cl
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to release a new version with minor impro
added check for deep shortcut items in LoaderCursor to ensure proper handling of deep shortcuts in the application
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
lucene - 1784 : make weight impls for booleanquery & disjunctionmaxquery protect to permit expert subclassing
added a boolean flag ` useProxyResponseCode ` to control NTLM proxy usage based on response code to ensure proper handling of NTL
[ gr - 16533 ] aarch64 : use scratch register instead of aarch64 . sp in aarch64move .
server : do n ' t calculate the total memory for vm that be in use by the host
added a null check for the max score in JSONResponseWriter . java and implemented a query in TestDistributedSearch . java to ensure that
updated audio codec from 22050 to 44100 in AudioRecorderTest . java to improve audio quality during testing
updated the calculation of newOriginX in RocketFigure . java to adjust its value based on subject bounds to ensure correct positioning of
updated error handling for null or empty Druid data source in DruidQueryBasedInputFormat . java to improve robustness by providing clearer
added ORIGINAL _ TYPE and ORIGINAL _ NAME constants to CustomProperty . java and updated regex pattern in CustomPropertyTest . java
added a static method ` create ` to the ` Index ` class for creating instances with a parent and data map to facilitate the
simplified the return statement in Dates . java to improve code readability and maintainability
avro - 2261 . fix schemacompatibility # unionwritersimplereaderincompatibility ( ) .
added handling for entity paths in QueryUtils . java and refactored related logic in QueryUtils . java to improve entity path validation and enhance
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety when accessing the spans list
change parameter types from List < Object > to List < ? > in getText methods across multiple classes to allow more flexible argument types for text
added handling for InvocationTargetException and improved logging messages in ViewContextImpl . java to enhance error handling and provide more informative logging for authentication failures
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future feature additions
[ scb - 2262 ] fix checkstyle issue ( # 2263 )
added new file paths for iOS and iOS - moe resources in GdxSetup . java to ensure the project uses the correct icons for iOS
updated imports in TestSearcherManager . java to use ConcurrentMergeScheduler to improve merge performance during test execution
updated conditional checks in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance code robustness and
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
ticket # 3810 : prevent click in spreadsheetkeylistener when click on the first time
added persistenceProviderService and sessionFactoryService to HibernateBundleActivator and refactored related tests in OsgiTestCase to improve service
update timeout calculation in HikariPool . java to use connectionTimeout instead of elapsedTimeMs to improve accuracy of connection timeout handling
move component . xml into non - packaged resource directory
updated file name handling in Compat . java and FileOpener . java to improve cross - platform compatibility and ensure correct file path resolution
changed the return type of row ( ) from Cell < T > to void to simplify the method signature by removing unnecessary return type
added port validation to the BesuCommand class to ensure that only one port is specified to prevent configuration errors
added nullMask property and modified WebSocketConnection creation to use FixedMaskGen to improve mask generation flexibility for WebSocket connections
modified the return type of genUDTFPlan from RelNode to Pair < RelNode , RowResolver > to enhance the method ' s
add nodeselectionstats to track the number of selected node in the cluster
added a new file ` Person . java ` that encapsulates the ` name ` property with a getter / setter method to provide a mechanism for
added a boolean variable ` hasOwnerPtr ` and modified the owner pointer execution logic in ` CPlatformWindow . java ` to improve clarity
added clock functionality and animation handling in PlaybackOverlayFragment to enhance user experience by providing a visual feedback mechanism during playback
remove duplicate call to updatecomparatoroutputlevel ( ) .
modified the IMPL field and exception handling in SegmentReader . java to improve clarity and error reporting when loading the SegmentReader class
updated SudokuGridEvent to invoke SwingUtilities . invokeLater for cell updates to ensure UI updates occur on the Event Dispatch Thread for thread
simplified the instantiation of DefaultInetAddressAdapter and CollectionTypeAdapter in multiple classes to enhance code readability and maintainability by redu
added methods and error handling for null values in Series and DataFrame classes to improve data integrity and ensure robustness against null values
use -- audio - time - stretch instead of -- no - audio - time - stretch in videomanager
updated boundary checks in GeoRelationUtils and modified GeoUtils to use Math . max for bounds checking to improve accuracy in geometric calculations and enhance
server : fix npe when getdiskofferingid ( ) return null
added JUnit @ Before and @ After annotations to HazelcastTest . java to ensure proper cleanup of Hazelcast resources after tests
blockciphertest : add test case for unsupported aes algorithm
added filters for printing operation logs in QFileClient . java to enhance visibility of operation logs for debugging purposes
fix : add support for inject parent interface in beandefinitioninjectprocessor ( # 6359 )
fix nullpointerexception when try to set currentconnectionaddress to proxySocketAddress .
replaced the use of Math . addExact with MathUtils . cappedAdd for demand assignment to simplify the code and improve readability by
replaced the use of try - with - resources with try - with - resources for better resource management to ensure proper cleanup of temporary files and
replaced direct calls to ` showSearch ` with direct calls to ` SearchActivity ` across multiple files to simplify code and improve readability by
removed unnecessary ` this . ` keyword from ` SchemaCrawlerCommandLine ` , ` GrepOptions ` , and ` MutableIndexColumn ` classes to
http : / / issues . apache . org / activemq / browse / amq - 2638 - add support for osgi
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests to facilitate dependency injection for testing purposes
changed the exception type from Exception to InterruptedException in UIServer . java and updated log message formatting in TestVertxUIManual . java
refactor case statements in BlockCactus . java for improved clarity and organization to enhance readability and maintainability of the code
refactor mouse event handling logic in ThemeSelector . java to improve responsiveness to mouse events to enhance user interaction responsiveness and ensure
rename abstractminmulticastflowcontrolfields to abstractminmulticastflowcontrolrhspadding so that it would well reflect our new flow control
added alignment and vertical alignment properties to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance user interface
refactor error handling for null modelFile and multiWordRulesFile in StatTokSentAnnotator to improve robustness by providing clearer exceptions
added a check for distinct queries in ClusterIntegrationTestUtils and modified group column handling in QueryGenerator to ensure correct handling of distinct queries and improve
[ gr - 11343 ] add method to get the closest linkage in jni function .
bug 58080 - jmeter gui : do n ' t try to load textarea . properties twice
added null check for children before iterating through it to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition fields and modified JsonLocation creation in MessagePackParser . java to enhance JSON location handling and improve code clarity
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
simplified size calculation in LauncherFragment . java for better readability to improve code clarity and maintainability by eliminating unnecessary
[ test # 1569 ] add metric reporter test for ut # 1569 ( # 1585
( chore ) camel - osgi : remove unused variable
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ flink - 20536 ] [ kafka ] use random name for test _ nonexistenttopic ( # 20539 )
refactor DSAParameterGenerator to use BigInteger . ONE instead of hardcoded values to improve clarity and maintainability of strength validation logic
added a new configuration variable ` LLAP _ DAEMON _ AM _ USE _ FQDN ` and modified ` LlapUtil `
fix clientoutofmemoryhandlertest fail on slow machine
replaced direct assignment of shapeId with a method call to getCmoObjectId in multiple shape classes to improve code clarity and maintainability by
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of selecting distinct entities
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to improve code organization and maintainability
fix : add bindextensionadapter and unbindextensionadapter to managedKubernetesClient
updated subtitle display logic in DetailsDescriptionPresenter and added a new utility method in Utils to improve code organization and enhance readability by encapsulating subtitle
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` in ` TestAuthHandlerBoot
added error handling for generating summary HTML in BugCollectionBugReporter and XMLBugReporter to improve robustness by logging exceptions during summary generation
replaced ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash . java
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added support for TIRAMISU and implemented a new WindowSessionDelegateU class to enhance compatibility with TIRAMISU and improve
refactor URL handling logic in UrlHelper . java and add unit tests in UrlHelperTest . java to improve code clarity and ensure correct
added MSSQLDatabase support for foreign key constraints in ForeignKeyConstraintGenerator to ensure proper handling of foreign key constraints for MSSQL databases
hbase - 20586 fix the warning in hbase - store . replacestorefiles ( )
remove debug output from emzuli pipe and add side check event handler
simonstewart : make htmlidentifier logging configurable
updated field data types and field names from getProducedTableSchema ( ) to getTableSchema ( ) and modified SQL queries in HiveLookupTable
improve thread safety in demo app
updated schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema for improved database schema management
updated color handling in SpriteBatch , SpriteCache , LwjglDebugStarter , AlphaTest , and AlphaTest classes to
fixed - redissonconnection . tocompletable ( ) . join ( ) should n ' t be call in batchasyncfuture . join (
added base URL handling in SolrLoggerServiceImpl to ensure statistic year cores do not duplicate to maintain data integrity
renamed the ` launchTask ` method to ` launchTaskFromView ` and updated its usage across multiple classes to improve method clarity and
refactor MorfologikFilter to use DictionaryHolder instead of String for dictionary handling to improve flexibility in loading dictionary resources and enhance
updated sort options in GridFragment to include " community _ rating " and " critic _ rating " to improve clarity and specificity of
added visibility logic for the header view holder in CustomListRowPresenter to ensure proper handling of ListRow items when the header item is not present
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and ease of future updates
updated case sensitivity checks from ` isCaseSensitive ( ) ` to ` isCaseSensitive ( DB2Database ) ` across multiple files to
add jsr310 serialization support for java time
updated import statement from ` org . apache . log4j . MDC ` to ` org . slf4j . MDC `
replaced ` TypeBearer ` with ` Type ` for merging types in ` PhiTypeResolver . java ` to simplify type handling and improve
reformatted the CoinbaseTransactionStatusDeserializer class structure for consistency to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified related logic in ` ProjectCommand ` and ` BuckConfig
added garbage collection to the idle strategy in Ping . java to improve memory management and prevent potential memory leaks
updated the ` OCFile ` class to use ` ContentResolver ` instead of ` ContentProvider ` to improve compatibility with Android ' s content
removed unnecessary conditional checks for state change events in ReportPanel . java to simplify code and improve readability
[ hotfix ] [ test ] make sure slot owner be not null
added a new file ` RemoveCallsToSystemGc . java ` that removes calls to ` System . gc ( ) ` and ` Runtime
removed super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the UIID of the ScaleImageLabel class to ensure the UIID is set correctly for better UI customization
updated variable names from ` foundEntry ` to ` update ` in ` FeedUpdateService . java ` to improve clarity and consistency in variable
added support for both " - classpath " and " - cp " command - line arguments in the command - line interface to enhance flexibility in
use compiler instead of options in avutil . java ( pull # 143 )
updated initialization logic in StorageService . java to ensure proper state management during operations
updated test cases in Test7196045 . java to improve test coverage and accuracy
change default density and decay values from 1.5 f to 1.0 f and 0.95 f in ShaderParametersLightShaft
added new properties ` withState ` and ` stateData ` in ` OidcConfiguration ` and modified session handling in ` OidcRedirectAction
fix : add unique constraint for non - nullable column
added file data storage checks for federation sharing in UsersAndGroupsSearchProvider and modified folder sharing logic in EditShareFragment to enhance user sharing
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure that document values are always set for proper
refactor BufferAlignmentAgent , BufferAlignmentInterceptor , and CharSequenceJavaObject to improve error message formatting and clarity to enhance code readability and
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and modified the interface declarations in ` Int2ObjectConsumer `
do n ' t associate scoreboards with the temporary scoreboard in worldserver
changed the return type of the count method from Long to long in multiple repository classes to improve performance by avoiding unnecessary boxing and unboxing
refactor MTree snapshot creation logic to improve clarity and consistency to enhance readability and maintainability of the snapshot creation logic
refactor dotProduct method to improve clarity and accuracy to enhance code readability and maintainability by reducing redundancy
added an IRREVERSIBLE _ THRESHOLD constant and methods to manage the last confirmed block number in the DynamicPropertiesStore and Manager classes to
refactor locale setting in GpsMainActivity and MainPreferenceActivity to use a dedicated method to improve code organization and maintainability by centralizing
added a check to determine if a new database is created in the LauncherClings and implemented a new method in LauncherProvider to ensure
sec - 1392 : change basicaclentryafterinvocationcollectionfilteringprovider to use collection . iterator ( ) instead of collection .
reformatted conditional statements in Constants . java for improved readability to enhance code clarity and maintainability
added a check for the current thread in TestIndexWriterDelete . java to ensure that operations are only performed on the correct thread
changed the visibility of the closeDatabase method from private to protected to allow subclass access to the method for better extensibility
updated imports from ` apiclient . model . dto ` to ` jellyfin . sdk . model . api ` in ` Full
added attribute handling for imported SVG elements in BatikSVGDrawer . java to ensure that all imported SVG elements are included in the document
removed the inputrcUrl parameter from the user configuration parsing error message to simplify error handling by eliminating unnecessary information
added " WaitForResult " handling in AndroidImplementation and modified waiting logic in CodenameOneActivity to improve responsiveness by differentiating between
updated constructors in HitQueue , SpanPositionQueue , PriorityQueue , and TermAutomatonScorer to use a Supplier for sentinel object retrieval
added widget description handling and visibility management in WidgetCell . java to improve user experience by displaying widget descriptions when available
added a maximum attribute count check in the Attribute class to ensure that the number of registered attributes does not exceed the maximum registered attribute count to prevent
move predicatestest to com . hazelcast . query . impl . predicates package , since it be not part of the public api
camel - 16400 : added case - insensitivity option to the default header filter strategy to allow case - insensitive header name matching
updated variable names and added logic for better handling of inline layout and string wrapping to improve the readability and functionality of the layout handling process
added null checks and improved layout inflation in ShareUserListAdapter . java to enhance robustness and prevent potential NullPointerExceptions during view infl
refactor instrumentation logic in Setup . java to use isFromAndroidSdk ( ) instead of parentIsInstrumented ( ctClass ) to improve
added a condition to return the last column index if the association is an insert destination before source to ensure that the correct number of columns is returned
refactor memory limit file path retrieval in CmdModifierTest . java to use a dedicated method to improve code readability and maintainability by encaps
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` EMPTY _ INSTANCE ` instead of ` singleton = true `
updated error handling in JavaTestRule to throw a HumanReadableException when the specified source under test is not among its dependencies to improve cl
fix cross proxy detection to support 1.10 .
removed a conditional check for atIndex in StringUtils . java to simplify the code by eliminating unnecessary checks
increased the timeout duration from 100 milliseconds to 500 milliseconds to allow more time for tests to complete successfully
refactor TaskOverlayFactoryGo to include AssistContentRequester for improved content request handling to enhance the flexibility and maintainability of the
updated the handling of the witness address in VoteWitnessProcessor . java to ensure proper encoding of the witness address to enhance security by preventing potential
updated DefaultMethodRegressionTests . java to improve test coverage for default methods
updated WorkloadManagerMxBean . java for improved functionality to enhance performance and maintainability of the code
updated import statements and exception type from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to ensure compatibility with the latest Kafka
added a call to close the loader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to the ExceptionThrowingTaskletStub class and corresponding test cases in FaultTolerantExceptionClassesTests to enhance exception
[ hotfix ] [ runtime ] improve error message in configbuilder
added a new parameter ` extraProperties ` to the ` applyTunerConfigs ` method across multiple classes to enhance configuration flexibility by allowing additional
added tracking for progress instances in PinotRealtimeSegmentsManager to ensure that segments are only added if they are not in progress , preventing
added a check to return null when touchable is disabled to prevent further processing when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryablehazelcastexception if cache config be n ' t create yet
updated log messages and refactored npm package installation logic in JSweetTranspiler . java to improve clarity of log messages and enhance
added JMX and Destroyable annotations to MBeanContainer and Destroyable classes to enhance management capabilities for MBeans and manage component lifecycle events
updated the conditional check from ` settings . inAppBrowser ` to ` settings . inAppBrowser ` to clarify the intended behavior of
updated string comparison methods in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( string
updated the condition in ` isReifiable ` check and added new classes ` T6558559a ` and ` T6558
updated player position messages in WorldEditListener . java to improve clarity to enhance user understanding of position settings in the game
( chore ) camel - kafka : do not wait for consumer to terminate
removed the default example ( ) method from Schema . java to streamline code by eliminating unnecessary complexity
refactor thread handling in AgentRunner . java to improve clarity and control flow to enhance code readability and ensure proper termination of execution
remove time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time - related data in aggregation
reformatted the condition in FacetComponent . java for improved readability to enhance code clarity and maintainability
updated RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for retrieving parse time dependencies to ensure compatibility with the latest C
added getter and setter methods for the ' name ' field in JaasAuthenticationProperties , JdbcAuthenticationProperties , NtlmProperties , and N
added print statements and improved error handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to enhance debugging capabilities and ensure proper printer state
refactor scan threshold handling in BaseQueryPlan and add a new constant in QueryServices to improve code readability and maintainability by reducing
added routeId to the retry gateway filter string representation to improve traceability of retry gateway instances
replaced calls to ` redisplay ( ) ` with ` callWidget ( name ) ` in ` LineReaderImpl . java ` to stream
replaced the ` onOverviewShown ` method with a new ` showForOverviewIfNeeded ` method in ` ActivityControlHelper ` and added delay
refactor null checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a new test for deleting
updated the method call from ` true ` to ` updateLastState ` in ` ZkController . java ` to ensure the latest state is
updated string list ID formatting in MetastoreDirectSqlUtils . java to ensure consistency in SQL string formatting
added a null value to the exp variable in SpliteratorCollisions . java to ensure proper handling of null values during collection operations
danielwagnerhall : add more functionality to condition . text case - insensitive .
replaced ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code clarity and
# 139 - enh : add ` ` forwardonlyfetchsize ( ) ' ' for mysql - based query engine ( # 139
camel - 16400 : camel - server - should ignore closedchannelexception when close the channel .
pdfbox - 4892 : optimize memory allocation , a suggest by valerybokov
updated window radius calculation in QuickstepAppTransitionManagerImpl to support rounded corners on windows to enhance visual consistency when rounded corners are available
refactor DesktopTaskView to use View instead of ShapeDrawable and improve background handling to enhance flexibility and maintainability of the task view
updated properties initialization and instantiation of upstreamCheckService in UpstreamCheckServiceTest . java to improve code clarity and ensure proper initialization of upstream
removed warning log statements for immortal sessions in AbstractSession and AbstractSessionManager to streamline logging for improved readability and performance
removed error logging and returned locks in ZooKeeperHiveLockManager . java to streamline the code by eliminating unnecessary error handling
[ hotfix ] [ test ] fix typo in javadoc
prevent repeat mipmap generation in filetexturearraydata ( # 6611 )
updated assertions in DefaultMaskingFormatterTest to use a single character instead of hardcoded strings to improve consistency and readability of test assertions
added selectable property and methods to manage touch events in List . java to ensure touch events are not eated when the selected item is not selectable
removed a conditional check for empty vector vector values in LlapArrowBatchRecordReader . java to streamline the code by eliminating unnecessary
added methods to handle file separator expansion in PolicyContext to improve file path handling and provide clearer output during policy evaluation
changed the type of ` flatQueries ` and ` expandQueries ` from ` Set ` to ` List ` in ` FieldQuery . java `
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ kafka ] make sure to close the producer on shutdown
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance functionality by allowing more granular control over node
added lock file deletion in RocksdbMavenPomCache . java to ensure proper resource management by deleting the lock file
hbase - 26400 fix testhquorumpeer . testhquorumpeer . testhquorumpeer . testhqu
added a new method ` getResponse ` to handle ` HttpURLConnection ` in ` RestClient . java ` to improve error handling and logging for connection creation
[ hotfix ] [ gelly ] fix incorrect usage of segment tar uri string in ingestionutils
updated loginStudent method to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to improve test
removed unnecessary parentheses in EnhancedBrowseFragment and StdBrowseFragment to improve code readability and maintain consistency
increased the number of strings from 500 to 100 in TestSpecialOperations . java to allow more time for string operations to complete
replaced the deprecated ` hexToBytes ` method with a new ` ByteArrayInStream ` implementation to improve memory efficiency by initializing the input stream with
corrected the spelling of ' key ' in the method name from ' messageWithHeaderEntry ' to ' messageWithHeaderKey ' to
added a check for direct substates in AbstractStateMachine to optimize state management by avoiding unnecessary operations
added support for ` ListMultimap ` and ` SetMultimap ` in ` MultimapSubject ` and created corresponding tests in ` MultimapTest `
added JoinOperation to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to verify the functionality of the PostgreSQL
resolve http : / / issues . apache . org / activemq / browse / amq - 5035 - do n ' t throw
updated AvaticaDatabaseMetaData . java for improved data handling to enhance performance and accuracy of database metadata retrieval
updated MongoDbConnectionPoolProperties to use DurationCapable instead of int for lifeTime , idleTime , and maxWaitTime in MongoDbConnectionFactory
do n ' t cast to null when create audio medium format .
refactor filter handling methods in FacetProcessor to return a boolean indicating whether filters apply to improve clarity and functionality of filter processing logic
added a enabledTimeout property and modified the timeout handler logic in ShuffleHandler . java to enable or disable timeout functionality based on configuration
replaced magic numbers for ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
camel - 16400 : added debug log for expression evaluation in xpathbuilder and xquerybuilder . thanks to benjamin
use dataresource . class . getresourcestream ( ) instead of resource . getresourcefile ( ) . getresourcefile ( ) .
add a new test class EdgeCasesTokenizerTest to verify the behavior of the tokenizer with escaped backslashes
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the required ' atlas ' property is
camel - 16400 : camel - core - optimize property placeholder to avoid reflection
added database closure and improved Kafka message handling in BlockchainTest . java and KafkaTest . java to ensure proper resource management and enhance message
replaced String [ ] split with List < String > for handling multiple lines in CoreMarkdownNodeRenderer . java to improve code readability and
removed unnecessary import statements in WebServiceInboundGatewayParserTests . java to streamline code by eliminating unnecessary dependencies
replaced ImmutableList . Builder with List for SQLBindings and added deprecation warnings to improve flexibility in managing SQLBindings and provide better logging for deprecated
added support for checking for OpenJDK in VirtualMachine . java to enhance compatibility with OpenJDK environments
added a keepAlive parameter to the baseUrl configuration in ReactorClient . java to ensure the client remains alive for improved reliability
updated vertex attribute references in MD5Renderer and ObjLoader to use constant values instead of hardcoded strings to improve maintainability and reduce hard -
camel - 16400 : camel - core - add support for property component in camel context .
refactor accountCapsule retrieval logic in UnfreezeBalanceActuator . java to improve clarity and maintainability of the code
updated the version number from 3.8 . 0 to 3.8 . 1 to reflect the stable release status of the server
replaced instances of ` t ` with ` unannotatedType ( ) ` for better handling of annotated types to improve clarity and correct
updated assertions in StorageGroupProcessorTest . java for consistency and clarity to improve readability and maintainability of the test code
updated ClassLoaderDump to include environment information in multiple classes to enhance debugging capabilities by including environment information
added a parameter to set waitbeforestart to 2500 in FFMpegVideo . java to ensure proper timing before starting video processing
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and removed it from the ` GenericColumnVectorProducer `
updated import statements and refactored test cases in AccessorsTest . java to improve code organization and enhance test coverage for listIndex method
make lirgenerator . compilemethod ( ) return a reference to the framemap .
updated JUnit imports and annotations in DynamoDbTicketRegistryTests , BaseAuthenticationRequestRiskCalculatorTests , and BaseAuthenticationRequestRisk
added a condition to calculate the Y - coordinate for the water block in the boat to ensure proper handling of water blocks in the boat
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the ` allowExperimentalOptions ( ) ` method from the conditional check to simplify the logic by focusing only on experimental options
added methods for asserting file paths and assertions in BDDAssertions . java to enhance testing capabilities for file paths in the BDDAssert
renamed variable ` hp ` to ` hostField ` and updated port assignment logic in ` ForwardedRequestCustomizer . java ` to improve
changed log level from debug to warn for multiple Kubernetes config files and added a warning log message for non - desired files to improve logging clarity
added file upload functionality and error handling in the UploadListActivity to improve file management and error handling during uploads
added ProviderLoader and ProviderLoaderListener classes to manage provider installation and error handling to improve modularity and facilitate the installation process of
updated imports from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to
refactor SelectFromDatabaseChangeLogStatement to use ColumnConfig for ordering to improve code readability and maintainability by using a consistent column configuration
hhh - 13617 - fix miss ` ` select current _ schema ( ) ' ' in dialect
fix ( internalpartitionservice ) : ignore partition count when datamemberssize be non - positive
added error handling and improved scheduler state management in ExecutionScheduleManager and ExecutionSchedulerImpl to enhance reliability and provide feedback when the scheduler is
simplified the instantiation of InlineBox by removing unnecessary string conversion to improve code readability and maintainability
refactor error message formatting for consistency in StatisticMap . java to improve readability and maintainability of error messages
updated the staged rectangle slide end value from 383 to 500 to increase the staged rectangle slide duration for better user experience
updated button references from " [ accent ] " to " waves . random " in WaveInfoDialog . java and PlacementFragment . java to
modified the condition for KILL _ ROAD _ ITEMS to include an additional check for owned plots to improve flexibility in handling plot
added a test for touch exploration enabled and modified listener handling in ShadowAccessibilityManager to ensure correct behavior of touch exploration state change listeners
pdfbox - 5328 : use max glyph id for getcharcodes ( ) , a suggest by valerybokov
bug 61625 - rename testelement . getpropertyasstring to testelement . getname ( )
replaced direct instantiation of ` NPOIFSFileSystem ` with ` POIFSFileSystem . create ` in ` TestNPOIFS
added imports for PS and PlotArea and modified return logic to handle plot area retrieval to improve robustness by ensuring valid plot area is used for
updated version match regex from " 0 . [ 0 - 9 ] +. [ 0 - 9 ] +. * " to " [ 0 - 9 ] +. [ 0 - 9 ] +. [ 0 - 9 ] +. * " to ensure compatibility with versioning that does not require a leading
updated the condition to check if the count is less than or equal to 1 in Filters . java to ensure that the count is within the valid
updated KafkaConsumerProcessor to use a dynamic bean type instead of a hardcoded bean type to enhance flexibility and maintainability of the code by
added error handling for Java compilation failures in JavacCompiler . java to improve robustness by throwing an exception when the compilation fails
ggb - 1354 repainting of the view if need
( chore ) camel - spring - batch : fix checkstyle issue
added a method ` isAnimationFinished ` to check if an animation has been finished to provide functionality for determining if an animation has finished
updated import statements in LoginInfoEndpoint . java and added a test for custom fav icon with line breaks in LoginMockMvcTests . java to
added null check for otherUrl in TimeLineCursorAdapter and updated refresh text in HomeFragment to enhance code robustness and provide a clearer
ticket # 4810 : fix problem with space in av
refactor methods in ObjectHashSet for improved performance to enhance efficiency and reduce memory usage
refactor null - checking logic in DataUtilities . java to use Arrays . equals for improved readability and efficiency to enhance code clarity
fix game crash when delete enchanted book ( mc - 12770 )
add asyncresourcetest . java ( # 7372 )
rename ` target - flat - headers . hmap ` to ` target - user - headers . hmap ` in ` ProjectGenerator . java
updated logging statements in MailService . java to include recipient addresses and added error handling for invalid addresses to improve debugging capabilities and provide clearer ins
updated method names from ` resetTaskItemView ( ) ` to ` resetToEmptyUi ( ) ` in ` TaskHolder . java `
added unit tests for partition retrieval in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct behavior of partition retrieval with varying
added a new line to the FileListListAdapter class to improve code readability and maintainability
updated ` OCFile ` and ` OCFileListAdapter ` to use ` List ` instead of ` ArrayList ` and ` ArrayList ` to
updated the child index from 1 to 2 in removeViewInLayout to correct the layout removal logic
removed unnecessary " org . eclipse . jetty . servlet " imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline
changed the default value of the S3Request policy from true to false to ensure that the S3Request policy behaves as expected without en
fix issue with jfx radio button animation when timeline be null
updated the logic for parsing DeweyNumber strings and added error handling for zero splits to ensure proper validation of DeweyNumber input and
updated categorySetString to replace " Category : " with " Category : " to ensure proper formatting of category names in the returned string
updated the error message from " Invalid close control status code 1111 " to " Invalid close code 1111 " in WebSocketClientTest . java
added null check for ClassLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader to ensure proper handling of null class loaders and
hhh - 14964 - fix bug in persistentattributetransformer that cause class to not be inherit .
pdfbox - 4892 : check if page label be a number , a suggest by valerybokov
added a new file TestPorterStemFilter . java to test the functionality of the PorterStemFilter class to ensure the correctness of
renamed the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and updated its implementation to include a
changed package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix race condition in chatwindowmanager . close ( ) .
removed duplicate calls to ` Sys . touch ( ) ` across multiple classes to streamline code by eliminating redundancy
updated command strings in HgCmdLineInterface and NoOpCmdLineInterface to include " - mardu " and modified untracked files
camel - 16400 : camel - jboss - netty should use timer instead of hashewheeltimer to avoid thread - safety issue
updated properties in DirectionalLight , PointLight , and SpotLight classes to use ' range ' instead of ' intensity ' to improve clarity
replaced calls to ` target . getWidth ( ) ` with ` target . getWidth ( ) ` in ` X11GraphicsConfig . java `
added toString ( ) methods to DelegatingSecurityContextCallable and DelegatingSecurityContextRunnable classes to enhance string representation of DelegatingSecurityContextCallable and Delegating
added an ` AnnoFilterTreeSet ` class and modified method signatures in ` ClassFinder ` to enhance annotation handling and improve code clarity
updated overflow handling for ` newLength ` in ` BytesColumnVector . java ` to improve clarity and prevent potential issues with integer overflow
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually instead of assertEquals to improve test reliability
updated the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XText
trac - 5261 : add equal ( ) for polyfunction . expandtopolyfunction ( ) , so that it can be use
added a null check before configuring column class in SynthTableUI . java to avoid potential NullPointerException when table is not initialized
added a try - catch block around the instantiation of CustomChange in CustomChangeWrapper . java to handle potential ClassCastException during runtime
added methods to retrieve the BuckConfig and its optional path whitelist in DistBuildConfig and RecordingFileHashLoader to improve configuration management and
do n ' t display a warning when double entry be enable
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that need to track down and fix
changed the return type of ` doJoin ` from ` void ` to ` boolean ` in ` JoinTemplate ` and ` JoinWorker ` classes
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unused functionality
updated intent flags in LauncherTimelineCursorAdapter to include FLAG _ ACTIVITY _ NEW _ TASK to ensure sharing activity starts in a new
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable paging functionality for improved query performance
updated repository URL assertions in RepositoryConventionPluginTests to reflect changes in repository configurations to ensure tests accurately reflect the correct repository configurations
of - 2271 : added a new file ` affiliationtask . java ` to manage the affiliation of a pubsub node
improve error message for invalid uri in taglibraryinfo .
changed the visibility modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling and refactored the update logic in CacheKey . java to improve performance and readability of the code
updated getFileTypeDetector method to utilize FileSystemProvider and modified its implementation to enhance file type detection capabilities across different file systems
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent memory leaks
replaced ` ShadowVirtualDeviceParams ` with ` VirtualSensorCallback ` and ` VirtualSensorDirectChannelCallback ` in ` ShadowVirtualDeviceManager
added a check to prevent the session from being removed if the context does not match the execution before the HTTP session is being managed to ensure that
rename the variable ` lch ` to ` loopback ` for clarity to improve code readability and maintainability by using a more descriptive
updated the constant name from BUF _ SIZE to DEFAULT _ BUF _ SIZE and refactored the deflate and inflation logic to
updated secure validation handling and improved exception messages in KeyInfoReferenceResolver , XMLSignatureInput , and ResolverLocalFilesystem classes to enhance security checks
added a boolean flag ` iconChangeListenerInstalled ` and modified action listener handling in the ` Label ` class to ensure proper handling of action listeners and
added Russian language support in the application to support Russian - speaking users
hhh - 11303 - fix duration unit to nanosecond
disable framestate verification in substrategraphkit for now .
added ` priorEnabledSdks ` and ` priorAlwaysSdks ` to ` RobolectricTestRunnerTest ` and ` TestUtil
added a system class for SLF4J in the ViewClassLoader and updated tests to ensure proper class loading for SLF4J logging functionality
updated conditional checks in ChangePackaging . java and added a new test for removing default packaging in ChangePackagingTest . java to ensure
updated file download method to include an extension for " txt " to ensure compatibility with file extensions when downloading files
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to ensure the buffer is
replaced instances of ` defaultUnits ` with ` preferredUnits ` in ` JogService ` and updated related methods to use ` preferredUnits
updated the expected date format in DatePatternConverterTest to include timezone adjustments to ensure accurate date representation across different time zones
updated return statement formatting in Terminator . java to improve code readability and maintain consistency
updated error messages for invalid file URIs and improved exception handling in FileSystem and DistributedFileSystem classes to provide clearer guidance and guidance on
replaced the single - thread scheduled executor with a timer task that run in a minute to improve task execution control and reduce the frequency of task
updated FtpReconnectAttemptServerStoppedIT and FtpEmbeddedService to improve connection management and count of active sessions to enhance reliability of FTP
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to improve performance by using a more
added the ` ignore ` method to multiple logging classes to enable logging of ignored exceptions to enhance control over logging behavior and improve error handling
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for ` getDamage ( ) ` in ` BukkitWorld . java ` to simplify code and improve readability
removed a call to GraphicsUtil . cleanImage ( img ) in PanelManager . java to streamline image handling and improve performance
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMap and SimpleFS directories to enable support for MMap and SimpleFS
added null check for ` ic ` before initializing ` cleanUpColor ` to avoid potential ` NullPointerException ` when ` ic ` is null
updated the expected query string in QueryEqualityTest from " field1 _ s maxDocFreq " to " field1 _ s maxDocFreq
refactor ExtendedOperatingSystemMXBeanImpl class to improve code readability and maintainability
added a method to install left and right commands in the SideMenuBar class to enhance the functionality of the SideMenuBar by allowing management of
added a new boolean field ` advanceWindowed ` and modified ` setUpWindow ( ) ` in ` AppSettings ` and ` UserProfileActivity
added support for SybaseDatabase in the DropPrimaryKeyGenerator condition to enhance compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and ease of future updates
[ java ] do n ' t reset the last recording position when the leader be ready .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to ensure the method exits early under certain conditions
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
added a method to shutdown the HTTP server in the ListenHTTP class to handle potential exceptions during server startup
camel - 15836 - camel - aws2 - s3 : fix typo in camel - s3 - upload
[ hotfix ] [ webmonitor ] fix typo in taskmanagermetricshandler
bug 10651 : drop unique _ name key if it do n ' t exist in 2.2 . 7
added a new file ` TestThriftCLIServiceSecurity . java ` to test password validation in ` TOpenSessionReq . java ` to ensure
added a maxEnergyLimit variable and updated energy limit assignment in VMActuator . java to ensure energy limits are dynamically set based on fee
added a ` maxInMemorySize ` property and its getter and setter in ` HttpClientProperties ` , and modified the WebClient ` constructor to
refactor Cache class to improve code readability to enhance maintainability and reduce complexity
added new Java files ` RunCucumberTest ` , ` StepDefinitions ` , and ` StepDefinitions ` to implement Cucumber testing
added error handling for double parsing in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness of double
removed conversion of hexadecimal strings to hexadecimal strings in Utf8StringBuilderTest . java to streamline the code for better readability and performance
added a check to ensure parameters are not set before appending them to prevent potential errors in parameter processing
camel - 16400 : camel - core - allow to limit the number of output in load balancing .
updated the assertion to check for the maximum buffered documents in TestIndexWriterExceptions . java to ensure that the test correctly verifies the maximum buffered documents
refactor hash handling in ComputeExopackageDepsAbi and HasAndroidResourceDeps to use Sha1HashCode instead of String to improve
removed unused enumValue and intValue methods from AsmRuntime . java to streamline code by eliminating unused methods
add additional biome tag tag ( # 8551 )
refactor async image loader to use a fixed thread pool to improve performance and resource management by utilizing a fixed thread pool
updated access modifiers of fields in BaseTableUpsertMetadataManager to protected and refactored segment preloading logic to improve accessibility and streamline
replaced occurrences of " \ u0646 \ u0623 \ u064a \ u0627 " with " \ u
updated image equality checks in AbstractSunSecureRule . java to use hasImageEqualTo instead of getImage ( ) to improve code readability and
camel - 16400 : camel - jbang - add repository option to camel - jbang run
added handling for NaN scores in CrawlDbReader . java to improve robustness by preventing processing of invalid score values
added a timestamp and a cleanup method to the OnStartupTriggeringPolicyTest class to ensure proper cleanup of temporary files after tests are executed
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and modified focus
[ hotfix ] [ runtime ] make checkpointcleaner thread - safe
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema validation to facilitate testing of XML documents against specified schemas
fix ( bonsai ) : do not override trie log layer when rollback be not override
refactor FilledNewArrayInstruction . java for improved clarity to enhance code readability and maintainability
added timeout annotations to the @ Test annotation in SimpleNetworkTest . java to allow tests to run indefinitely and improve test reliability
updated the return statement in OCFile . java to use endsWith instead of substring to improve clarity and correctness of path handling
added error handling for loading the skin file in JavaSEPort . java to provide feedback when skin file loading fails
added methods to mark and validate the state of the accumulator in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to improve
added a static final Result constant UNDEFINED and modified the return statement to use it to improve code clarity and ensure consistent handling of UNDEFINED values
# 2424 change error for transaction register ( callback ) when no active transaction from persistenceexception to
uploadjobmultipartoperation : fix issue with jet service not be enable
[ amq - 7012 ] fix the issue of corrupting the journal location when recovering data
bug fix : add option to ignore child of a node
replaced ` pos ` with ` sizeMask ` and added a new ` ensureAvail ` method in ` DataOutput2 . java `
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to cruel
avoid indexoutofboundsexception in storageproxy # sendmessage ( )
updated parameters in FileManager . java for consistency to improve code readability and maintainability
[ hotfix ] [ table - common ] fix typo in transformfunctiontype
added new methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` in ` VariableElement . java ` and package - info .
updated references from " RFC3280 " to " RFC5280 " across multiple Java files to ensure compliance with the latest RFC standards
updated version number from 2.17 . 3 to 2.17 . 4 and modified type casting in SearchAnnotationVisitor to ensure compatibility with the
refactor ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap and HashMap to improve performance and memory management during drawable restoration
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for better URL validation to enhance compatibility and maintainability of file path management
updated PreviewPositionHelper to accept a Context parameter and modified related methods to accommodate split - screen bounds to improve handling of preview positioning
[ java ] use termentry . termbaselogposition instead of termtimestamp for leadershipterm publication .
[ drools - 6862 ] add error stream to processtest ( # 3453 )
refactor skipping logic in ByteArrayInputStream and add a new Skip class for testing to improve clarity and correctness in handling skipped bytes during input stream
simplified conditional checks for promptUpdate in UpdaterTask . java to improve code readability and maintainability
changed the visibility of MAX _ HEADERS from private to public and added a conditional check before downloading to allow external access to the MAX _ HEADER
added ` rt . jar ` to the standard list of standard libraries in the application class loader
do n ' t send a hello message if the local node be not ready
replaced hardcoded string values with constant values in GranuleDescriptor , RasterManager , and GTDataStoreGranuleCatalog to improve code
added a check to prevent sending an error message if the response is already committed to improve error handling by avoiding unnecessary error responses
updated condition checks for ` hold ` and ` lastPoll ` in ` HttpSession . java ` to improve clarity and correctness of condition checks
updated fadeOutFakeTaskView behavior in HomeGestureTutorialController and added conditional logic in SwipeUpGestureTutorialController to
change log level to warn for unknown component in prefabserializer
refactor ScimGroupExternalMembershipManager to streamline external group management to enhance clarity and maintainability of the code by reducing red
updated the ` thirtyDays ` variable in ` FreezeBalanceActuator ` and added a validation check in ` TransferActuator ` to
updated the path separator from ' / ' to ' File . separator ' in FileResolverTestBase . java to ensure compatibility across different operating systems
ggb - 1357 do n ' t show keyboard button when no error message be provide
updated description handling in GpsMainActivity and replaced service intent with EventBus in AnnotationViewFragment to enhance event - driven architecture for better
updated page count validation logic in JsoupNonVisualRegressionTest . java to handle cases where the number of pages is less than 3
* rename androidbufferallocator to androidnativebufferallocator and deprecate it
added checks for flag names starting with " ! " in Main . java and modified flag handling in PrimaryItem . java to ensure accurate detection of
added NOPMD comment to the executeQuery ( ) method in JDBCHistoryCache . java to clarify that the method does not
updated conditional check from ` equals ` to ` equals ` for item use in ` BattlePassManager . java ` to improve code read
updated test cases in QueuePriorityTest and added a new PriorityElement class in PriorityElement to improve test accuracy and provide a clearer representation of
server : fix test case in AffinityApiUnitTest . java due to change in affinitygroupdao implementation
added null check for the main command and updated help handling logic to improve command execution and provide user guidance when no command is provided
updated LightOutputStream instantiation to specify a default value of 4 in multiple classes to optimize memory usage and improve performance
changed the visibility of the Scanned class from package - private to public to allow access to Scanned from other packages
modified the condition for displaying blank lines in ClassWriter . java and added a new class T8032819 . java with multiple test cases to
removed assert . hasLength ( p . sn ) from Person . java to streamline code by eliminating unnecessary assertions
added a null check for the file extension before checking if it exists in EXTENSIONS _ DENYLIST to prevent potential NullPointerException when checking for
replace return statement with continue in ContactRightButtonMenu . java to ensure proper flow control in the code execution flow
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor socket binding and reset logic in PlainSocketImpl . java to improve code clarity and ensure proper resource management
added functionality to manage removed media items in BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed media items in the
updated log message for W3C Action commands from " center of element " to " in - view center point " to clarify the
added a new file ` bug4865918 . java ` that implements a test for the scrollbar block increment to address bug 48659
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to ensure compatibility with the latest Apache Velocity
updated import statements in QuestCommand . java and added a new case for group triggers in QuestCommand . java to improve code organization and
fix an issue where the xml file chooser would n ' t work correctly .
added ` @ ToString ` annotation to ` PartitionChangeEvent ` , ` TbApplicationEvent ` , and ` TbApplicationEvent ` classes to enable proper
updated the configuration URI in CloudService to use a configurable constant to improve flexibility and maintainability of the service configuration
removed viewport component and JScrollPane settings from BrowserPanel to streamline the scrolling functionality for improved user experience
updated key codes and event handling in LwjglInput , ParticleEditor , and Layout classes to improve keyboard input responsiveness and
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " in MoreIndexingFilter . java to ensure proper handling of MIME type parts
added author pattern matching for comment lines in JSDoc . java to ensure comments contain only relevant author information
updated metrics constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES to CREATE _ TOTAL
refactor HiveDatabaseSchema to utilize DrillMetaStoreClient and SchemaConfig for improved schema management to enhance error handling and maintainability
updated oauth2LoginLinks method to accept query parameters for improved error handling to enhance functionality by allowing dynamic error handling based on query parameters
updated the Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm
added a condition to check if Firefox is not supported in WebAudioWrapper to ensure compatibility of audio functionality across different browsers
added a method to append ServerInterceptor in GrpcServerBuilder and removed the private interceptorConstants constructor from InterceptorConstants to enhance server configuration flexibility
added a default charset option to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with database configurations that require a default charset
refactor WriterRecordBatch and StreamingAggTemplate for improved clarity and functionality to enhance code readability and maintainability
[ hotfix ] fix typo in executiongraph
added a boolean property ` hasFrom ` to the ` Delete ` class and modified related logic in ` DeleteDeParser ` and ` DeleteTest
refactor status handling in SynchronizeFolderOperation to improve clarity and functionality to enhance code readability and maintainability while ensuring proper response management
refactor test applicability logic into a separate method ` applicableListTests ` to improve code readability and reusability by reducing
updated logLine pattern in LogAnalyser . java to include a space after the period to improve log formatting for better readability
( chore ) camel - integration : enable camel - test - infra - google - cloud integration test
fixed - rindexoutofboundsexception in redissonsearch # value ( ) method
refactor CCLicenseStep to use generics for better type safety and simplify license selection logic to enhance code readability and maintainability while ensuring
added a null check for the global ID before adding it to the guidIndex to avoid potential NullPointerExceptions when the global ID is not set
updated comparison logic in OptionalAssert to use comparison strategy to improve accuracy of value comparison based on comparison strategy
refactor memory handling in NoNewLineParagraphCssApplier and ParagraphCssApplier to use a variable for memory management to improve code readability
added a new file ` TestArrayCopyToFromObject . java ` implementing a test for ` ArrayStoreException ` to ensure that ` ArrayStoreException `
replaced hardcoded backslash characters with a more concise ` escapeAsPythonString ` method for better readability to improve code clarity and
do n ' t use socketstate . closed in apr , nio , and apjp protocol .
add a new flag ` ` visitallfiles ' ' to the ` ` findfiles ' ' method in ` ` craftinghelper '
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable due to issue HIVE -
added a null check for the client ' s doRequest ( ) in TestInternalInputBuffer . java to ensure that the test correctly verifies response status
modified the ` autoloadCall ` method to accept a ` lowerName ` parameter and modified its implementation to enhance class loading flexibility by allowing multiple
added server version comparison logic in CustomPlaybackOverlayFragment and removed HLS support in PlaybackController to ensure accurate server version comparison and enable H
replaced instances of ` OneKDC ` with a static local ` localhost ` in ` BasicKrb5Test ` and ` OneK
added a condition to return ACCESS _ DENIED based on the presence of ` jsr250AttributeFound ` in ` Jsr250V
updated import statements in MP4Parser . java for better clarity and organization to improve code readability and maintainability by using consistent import statements
added a new constant HS2 _ PROXY _ USER and modified sessionParams handling in ConnectionFactory . java to ensure sessionParams is properly formatted
camel - 16400 : camel - hdfs - add support for snappy compression . thanks to joao for the patch .
added a sleep delay in HttpClientTest . java to ensure proper timing for asynchronous operations
[ bug # 49966 ] fix bug # 4999966 in xssfsheet . java
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve glyph rendering accuracy and clarify
updated ISTIO image loading and configuration in Fabric8IstioIT . java to ensure compatibility with the latest ISTIO features and
replaced ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . reportPlaybackProgress ` in ` PlaybackController . java `
improve performance of simpleauthority . load ( ) by use bufferedinputstream
putfromloadallbackupoperation . putfromloadallbackupoperation . existsinmemory ( key ) should check if the key exist in the
update return statement to include ERROR _ BIT along with LENGTH _ BIT and ERROR _ BIT to ensure correct handling of both LENGTH _ BIT and ERROR
do n ' t throw exception if there be no read policy for a community
added SoftReference for CompositeFont instances in FontUtilities to improve memory management and prevent potential memory leaks when accessing CompositeFont instances
updated prefHeight assignment in Tree . java to reset its value to zero to ensure consistent height calculation for tree nodes
drools - 2807 dmn feel : fix error message for unknown variable ( # 2808 )
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public across multiple classes to allow access to the method from other
added null checks for id in ElementFactoryImpl and improved edge handling in ImportContainerImpl to ensure robustness by preventing null pointer exceptions
[ beam - 10615 ] fix nullpointerexception in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 7231 : fix npe in binfiles . getbin ( ) when bin size exceeds bin limit
refactor findClosest method in Teams . java to use a for - each loop to improve code efficiency and readability by elimin
added content - length header handling in RestTemplateCopyHeaderFilter and created a test for it in TestRestTemplateCopyHeaderFilter to ensure that
updated Java2TypeScriptTranslator to simplify handling of string literals and added a new test method for export functionality to improve code clarity and ensure
updated filter parameters in FilterFactory , ChannelizerViewer , and TwoChannelOutputProcessor classes , and modified sample sizes in several files to improve the
hbase - 16400 canary should not run - allregion on regionserver mode ( chunhui )
removed the NodeModule import and modified the constructor of TestCassandraConnector to streamline dependencies and enhance code clarity
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure proper cursor position handling during operations
added minimum size constraints in CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure dialog size does not exceed available space for better us
fix loss of state information during world gen
do n ' t need to wait for the mirror server to start properly
added a dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to improve entity management and ensure proper removal of principal entities
removed the ` true ` parameter from the ` AcidUtils . getTableSnapshot ` method call to simplify the method signature by removing unnecessary parameters
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 518
updated the error message in AndroidGradleBuilder to clarify the purpose of the android . licenseKey to improve user understanding of the
replaced ` getName ( ) ` with ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder ` and removed the ` isInsideTrans
[ drools - 7 ] add support for ` ` boot - inf . classes ' ' and ` ` boot - inf . classes
added an assumption to skip tests on devices running version 19 or higher to ensure compatibility of tests with newer runtime versions
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method in ` AbsSwipeUpHandler ` and ` RemoteTarget
fix type ` ` jmv ' ' to ` ` jvm ' ' in leaderlatch ( # 456 )
added methods to initialize and retrieve Zksnark parameters in SolidityNodeHttpApiService to enable dynamic configuration of Zksnark
transactionconfidence : fix npe in getdepthinblocks ( )
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` , ` Location ` , and ` MapComponent ` classes
set the default value of platformName to " ios " to ensure the platformName defaults to " ios " for better compatibility
doc : generate sample code in the java microgenerator ( # 337 )
updated variable declarations for ` mozDash ` and ` webkitLineDash ` in ` Graphics2D . java ` to ensure consistency in context
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the nextOutgoingFrame method in AbstractExtension . java to handle potential exceptions and log warnings if the callback is
replaced the try - catch block with a privileged action for retrieving the caller class to enhance security by using privileged actions for class loading
added functionality to retrieve and update all child categories in the FeedCategoryREST class to ensure that all child categories are properly marked as null in the
update the dialog title to use a localized title instead of a hardcoded string to improve user experience by providing descriptive titles for different contributions
added a new field ` vwap ` to the ` Ticker ` class and updated the constructor to include it to provide additional volume information
added a new TextView ` noWidgetsView ` and updated bottom inset handling in ` SearchAndRecommendationsScrollController ` and ` Widget
add tintnode and tintnode to the rendergraph api , so that it can be use by other renderer
set the primary color of NCFirebaseMessagingService to ensure the service uses the primary theme color for consistency
updated ShadowUsbManagerTest . java to improve test coverage to enhance reliability of the USB manager functionality
updated calculations in AbstractDifferenceRecommenderEvaluator and added logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve accuracy of
add a call to update the selected configuration to ensure the application reflects the latest configuration changes
replaced direct integer conversion with Math . max for width and height calculations to ensure minimum values do not exceed zero to prevent potential issues with zero
replaced HashMap with LinkedHashMap in multiple classes to maintain insertion order in the options map
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a
( chore ) camel - core : migrate camel - test - infra to junit5
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement WebSocket integration tests for
[ ds - 3952 ] fix typo in dspace - import - metadata - source . java .
refactor authentication equality check to use a new method ` areAuthenticationsEssentiallyEqual ` to improve readability and maintainability of the
added a conditional check to return false if the system property ` jnr . ffi . compile . x86asm ` is set to true to
replaced calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` in ` CodeGenerator . java ` to
added a new ` Insecure ` annotation and modified the ` MessageBuffer ` constructor to use it to enhance encapsulation and provide a default implementation for
added new configuration variables for various Hive settings in HiveConf . java to enhance configuration flexibility and support for additional Hive settings
initialize scopes and policies in ResourceSet . java and add null check in DefaultResourceSetService . java to ensure that scopes and policies are not
updated the ` decrefOnClose ` field to be final and refactored the constructor of ` MultiReader ` to accept a collection of
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 files to improve code organization
danielwagnerhall : fix flaky selenium test in 2.49 . 0
refactor ` getFirstTypeArgument ` method in ` LinkedHashTreeMap ` , ` LinkedTreeMap ` , and ` GsonTypesTest `
changed return types of keySet ( ) and values ( ) from Set < Integer > to KeySet and Collection < Integer > in Int2Int
added duration and bgColor properties to FlipTransition and updated related methods to allow customization of transition duration and background color
removed the conditional check for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
increased majorVersion and minorVersion from 8 to 9 in ForgeVersion . java to reflect the latest version of the software
replaced ` System . err . println ` with ` LowLevelLogUtil ` for logging warnings in ` StackLocator . java ` to improve
update javac version to java 15 and java 16
updated padding logic for the status view in ExpansionViewHelper . java to improve UI responsiveness based on the number of replies
do n ' t invoke callback when there ' s only one namespace
added metadata field and getter / setter methods to SeedUrl and SeedResource classes to enable storage and retrieval of additional information associated with seed URLs
[ drools - 7 ] fix npe in patternbuilder when declaration be null
refactor TestCoprocessorWhitelistMasterObserver class for improved clarity to enhance code maintainability and readability
ww - 4370 add package name to the action name of the validator
updated assertions in IterableTest . java to use Arrays . < Object > for null values and added a new test for null arrays to ensure correct
added stream and spliterator methods in MapIterable and PrimitiveObjectMap classes to enhance functionality for stream operations in MapIterable and PrimitiveObjectMap classes
changed the return statement to clone the notifInfo object to ensure that the original notifInfo object remains unchanged
mow - 1352 : fix npe in case - insensitive command ( # 3649 )
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future updates
added methods to check if a variable is local and updated variable search logic in ` VariablesMap ` and ` WebVariablesMap ` to improve variable
updated resource ID assignment logic in PackageResourceTable . java and changed default resource mode from best to legacy in RobolectricTestRunner .
added a conditional check for ` ulSize ` and ` ulPos ` in ` TrueTypeFont . java ` to ensure ` os2 `
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static list to enhance flexibility by allowing multiple message readers to be
refactor Int2ObjectCache class for improved performance to optimize memory usage and reduce memory usage
removed unnecessary import and validation logic for MavenDeployer in StandardMavenAuthenticationProvider . java to streamline code by eliminating unnecessary checks
rename AudioNode class to improve clarity to enhance code readability and maintainability
added SSL context handling in LinkyHandlerFactory and updated exception handling in EnedisHttpApi to enhance security by ensuring proper SSL context initialization and
refactor HiveFunctionRegistry to use Stream and Map for improved readability and performance to enhance code maintainability and facilitate easier
http : / / issues . apache . org / activemq / browse / amq - 2638 - add service = log4
updated the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` string and adjusted its return logic to improve cl
camel - 16400 : fix olingo2 consumer to return 0 for empty odata feed
added methods to retrieve the equivalent Hive version in MetaStoreSchemaInfo . java to improve version handling by distinguishing between different Hive versions
cloudstack - 4896 : fix npe in vm expunge process
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used
updated method names and added alternative title retrieval in ONDashClockExtension and AlarmReceiver classes to improve clarity and consistency in title handling
updated ` GoogleAuthUserConfigTable ` and ` TotpEndpointIntegrationTests ` to use ` nvarchar / varchar ` instead of `
replaced ` commit ( ) ` with ` apply ( ) ` across multiple classes to improve performance by avoiding unnecessary commit calls
updated session creation to use a new TestIdleListener implementation to enhance session management by handling idle states
[ beam - 8470 ] add test _ id to the test bigquery table name
added background resource handling and reset functionality in HotseatPredictionController , BubbleTextView , and BubbleTextView to improve visual
rename ` getFlushAfterQuery ` to ` FlushAfterQuery ` in ` MondrianProperties . java ` to improve clarity and
[ native ] add unit test for native system query
updated feature retrieval logic in LIMEExplanation . java and added a test for active features in LIMEColumnarTest . java to improve
added command - line argument handling to AppleSimulatorController and InstallCommand classes to enhance command execution flexibility by allowing arguments to be passed
refactor area retrieval in LineSelection . java to use generic styledArea for improved type safety to enhance code clarity and prevent potential
added checks for the availability of the lifecycle in ContainerBase and StandardContext to ensure that the lifecycle state is validated before proceeding
added clipping to the background in QsbWidgetHostView to improve visual appearance by adjusting the view ' s outline
added time tracking for flag conversion and improved flag processing in SQLManager and PlotArea classes to enhance performance monitoring and provide clearer feedback on
updated import statements in FloatingTextRenderer . java and modified depth test handling in FloatingTextRenderer . java to improve code clarity and
truffle - nfi : rename ` libfi _ backend _ libffi _ libfi _ libfi _ libf
refactor propagation behavior in JdbcAggregationRepository to use a variable instead of a hardcoded value to improve flexibility and allow for easier configuration of
feat ( layervalidation ) : add regularization support for l1 and l2
added error handling for read / write operations in AbstractChecker . java to improve robustness by logging exceptions during read / write operations
changed the access modifier of the colorStack variable from static to instance to allow instance - level access to the colorStack variable
changed the default value of ` getMappedStatement ` and ` hasStatement ` from false to true to ensure that mapped statements are retrieved and has
updated the method call to convert tradableIdentifier to lowercase to ensure consistent depth retrieval regardless of input casing
updated channel state values from 0.312716 to 0.322700 and 0.304200 in ChannelStateTests . java
fix ( test ) : remove unused field in enginepayloadparameter ( # 5638 )
set trigger price to empty in MutableOfferView . java and invoke onTriggerPriceTextFieldChanged in MutableOfferView . java to ensure the trigger
do n ' t show error message if student do n ' t have any feedback submission
removed unnecessary print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2270 addendum fix for hbase - 2276 ( addendum )
fix for issue # 173 - entitybeaninterceptor do not set property on new bean ( # 174 )
added a ` _ alwaysSaveUri ` property and its getter / setter methods to the ` FormAuthenticator ` class to allow configuration of whether to
added ` nSetLayerType ` and ` nSetLayerPaint ` methods to the ` ShadowRenderNode ` class to provide functionality for setting
replaced specific imports with wildcard imports and added visibility control for the popup menu in the LWChoicePeer class to improve code readability and
removed redundant assignment of ' insert ' in StressProfile . java to streamline code by eliminating unnecessary duplication
replaced calls to ` asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to improve code
added null check for ` requests ` in ` MockServerEventLog ` and improved logging in ` HttpForwardObjectCallbackActionHandler ` to
[ hotfix ] [ runtime ] add warn log when property file can not be load
replaced the variable ` dataSet ` with a try - with - resources statement in ` ClientMain . java ` to ensure proper resource management and
added a condition to check if the network interface is up in SetOutgoingIf . java to ensure that the network interface is not up when it
updated the constructor of sqlCommand to include a length parameter to ensure the command string does not exceed the specified length limits
removed redundant calls to setLatestConsumeTime and setLatestConsumeTimeForEnergy in multiple processor classes to streamline code by eliminating
added a method to set and retrieve the invalid session strategy in SessionManagementConfigurer to enhance session management by allowing customizable invalid session strategies
provide more informative error message when a token can not be find for an index .
add a new test class ` MapAssert _ containsKeys _ Test ` to validate the behavior of the ` containsKeys ` method to ensure the
replaced ` stgen ` with ` psgen ` for generating temporary prepared statement statements to enhance compatibility with JDBC 4 temporary prepared statement methods
added a static method ` ensure ( Server ) ` to ` ServerWebSocketContainer ` and refactored the upgrade and upgrade logic in ` Direct
changed the type of ` ImmutableMultimap ` from ` ImmutableMultimap ` to ` ImmutableListMultimap ` in ` CxxFlags . java ` to improve
pdfbox - 4892 : use point2d instead of float , a suggest by valerybokov
replaced the initialization of the ` hooks ` array with a static final ` EMPTY ` array in the ` MethodHook ` class to improve code
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the return logic in the ` MockAuthenticationManager `
updated the ` afterJob ` method to accept a ` JobExecution ` parameter to enhance functionality by allowing job execution context to be passed during job execution
added a check for file execution status in SharedLibraryLoader . java to ensure that only writable files can be executed
feat : add ` hasTimeSeriesQueryLanguage ( ) ` method to ` TimeSeriesQuery ` and define its implementation in ` TimeSeriesQueryOrBuilder ` to
bug 61657 - save and load result from sampleevent instead of sampleevent
added constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants .
change the type of ` applyRule ` from ` Hashtable ` to ` Map ` in ` SearchExpression . java ` to ensure compatibility with the
moved object to absolutescreenlocateable instead of widget
updated resize method calls in JoglGraphics and modified texture filtering in ProjectiveTextureTest to ensure proper resizing behavior and improve texture filtering
modified the ` setResourceToDelegate ` method to return a ` File ` instance instead of a ` void ` to allow the method to return the
camel - 16400 : fixed property component interception with intercept uri .
updated conditional check from ` currentTime > = stage . getLastAttemptTime ` to ` currentTime > = stage . getLastAttemptTime ` in ` Action
updated debug log file path in DbgPacker . java to ensure proper directory structure and avoid potential null pointer exceptions
fix ( net ) : remove worldrendererimpl from renderdebugconfig
make pipe . resetgate ( ) consistent with other pipe . resetgate ( ) .
added locale management to TestSupplementary to ensure consistent locale settings during test execution
updated random color values from 0.6 f to 0.4 f in the Team class to improve the randomness of the team ' s
replaced ` HashSet ` with ` Collection ` for activeMatchedStates and added logging statements in ` SequenceMatcher . java ` to improve performance and
updated the condition to check for null and empty expected exceptions in SoftAsserts . java to ensure that the method correctly handles cases where the expectedExceptions
updated error message in StorageResources . java and added error logging in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance
refactor ` CallTreePrinter ` to use ` toCsvFile ` for CSV file generation to improve code readability and maintainability by consolid
added null checks for ` note ` and ` noteTmp ` in ` DetailFragment . java ` , and updated method calls in ` WidgetProvider
added peakTasks tracking and adjusted floating - point calculation in AssetManager . java to improve task management by accurately tracking the number of peak tasks
simonstewart : make firefoxdriver . enable _ native _ events default to true on window
added metadata for ` nutch . score ` and ` nutch . fetchInterval ` in ` Injector . java ` and modified `
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . List
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and created a test for it in ` TestCoreContainer
updated sizeInBytes methods to include a boolean parameter for better handling of size in various classes to improve clarity and control over memory usage during segment
replaced assertEquals with assertNull for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is not null
updated SQL queries in ` Field . java ` , ` AbstractJdbc2DatabaseMetaData . java ` , and ` AbstractJdbc2DatabaseMetaDataTest
[ java ] do n ' t append a new leadership term event when there be no leader heartbeat .
removed unused method ` buildMediaType ` from ` WebClientPlugin ` to streamline code by eliminating unused functionality
replaced method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to improve clarity and consistency in method naming
updated transaction compaction logic in AcidUtils . java and added a new test for cleanup after IOW and major table compaction in TestCleaner
updated storageScheme and qualifierEncodingScheme initialization in PTableImpl . java to ensure default values are set when storageScheme or qualifierEncodingScheme is
added new classes PojoProducersCustomized and RestProducersCutomized to the PojoProducers and RestProducers classes to
updated cache configuration retrieval to use constant CACHE _ SECTION _ NAME instead of hardcoded strings to improve code readability and maintainability by avoiding
remove redundant registration of aesgcm serialization in aesgcmsivkeymanager
fix ore dictionary not work correctly for wood
updated multiple Java classes related to session caching and session management to improve session management functionality and maintain consistency across the application
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 to release 3.2 - snapshot
hhh - 16400 - fix test failure due to constraint name uniqueness issue
updated spriteBatch drawing logic in HelloWorld . java to correct the positioning of the sprite based on the texture ' s dimensions
updated return statements in PlayerFunctions . java and modified string concatenation in PlotId . java to improve code clarity and ensure proper string representation of
added a deprecated version constant for Lucene 8.5 . 0 to signal that this version is outdated and should not be used in new development
updated string concatenation syntax in the closeSocket method call to improve readability and maintain consistency in output formatting
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure that the SQL parser can correctly handle
refactor conlluoutputter to use semanticgraphcoreannotations . dependenciestype instead of string
refactor method signatures in ` NoSuchBuildTargetException ` and ` ParseContext ` for improved clarity and consistency to enhance code readability and
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` TestOutOfMemory . java ` to simplify the test execution
update configblocks array to use a fixed - size array instead of a fixed - size array to optimize memory usage and improve performance
refactor logging statements and version checks in BukkitMain . java to improve readability and ensure compatibility with the latest Bukkit features
added support for escaping postgres question mark operators in AbstractSQLChange to ensure proper SQL syntax and compatibility with Postgres database
added methods ` ofAll ` and ` withAll ` in ` MutableBagFactory ` and implemented them in ` MutableBagFactoryImpl ` to
added HTML escape code validation in BuildNavAndPDFBody . java to ensure proper handling of adoc files and improve error messaging for mismatches
updated MqttBrokerConnection constructor to include an additional parameter to enhance connection configuration options for better control over MQTT connections
refactor change set retrieval logic to use a root change log if available to improve reliability by ensuring a default change log is used when none
[ hotfix ] remove unnecessary instantiation of writer . output ( )
added database dropping functionality in TestHiveMetaStorePartitionSpecs . java and improved logging in TestObjectStore . java to enhance database
added a " order _ currency " parameter to the BithumbAuthenticated and updated its usage in the BithumbAccountServiceRaw class to
remove SSEFluxWebConfig . java since it ' s no longer use
updated method return type checks to use isVoid ( ) instead of getFullyQualifiedName ( ) in JsonBuildHelper . java and IDocBuild
replaced ` YAML _ READER ` with ` YAML ` and added a new endpoint for listing YAMLS in ` YamlResource . java
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation and
refactor thread creation in Basic . java to use lambda expressions for better readability to improve code clarity and reduce redundancy in awaitTermination
added unit tests for the ` PersonWithAList ` class and created a new class ` PersonWithAList ` to validate the functionality of
ggb - 1842 fix bug with applet panel size change
updated toolbar visibility handling in DrawerActivity to use a delayed handler to improve responsiveness by preventing UI thread from blocking the main thread
refactor firstPageReader logic into separate methods for handling overlapped pages to improve code readability and maintainability by reducing duplication
cloudstack - 4898 : do n ' t try to save password for vm when vm be not in start / stop
added new variables ` usingOutputStream ` and ` usingWriter ` , ` isCharacterEncodingSet ` , and ` isCharacterEncodingSet ` to
added a check to return early if assignment side effects are not warned to improve error handling and prevent unnecessary processing
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the condition for checking icon dimensions in FileUploadApiController . java to ensure proper margin validation for icons
refactor ` fetchPublicKey ` method in ` RegisteredServiceProperty ` , ` JwtTokenCipherSigningPublicKeyEndpoint ` , and ` JwtTokenCipher
updated import statements and added content type checking in Basic . java to ensure proper handling of file content types for UNIX systems
replaced system . out statements with JZlibDecoder and JZlibEncoder in NettyConnection . java to enable compression support for the
added a new method ` doesClassLoaderDescendFrom ` to ` Util ` and refactored the ` Class ` and ` MethodHandles ` classes
removed dependency check for NoClassDefFoundError in the connect method to streamline the connection process by eliminating unnecessary error handling
added a test case for handling an empty final column in TextReader and implemented a test for empty final columns in TestCsvHeader to ensure proper
added compass gravity and margins to NearbyMapFragment . java to enhance visual layout for better user experience
added unit tests for the GeoPath interpolation logic in GeoPathTest . java to ensure the correctness of distance calculations for both interpolation and interpolation
added HiveException to the getLeafFilterBuilderByType method and modified exception handling in ParquetFilterPredicateConverter to improve error handling and provide clear
added language handling for video streams in LibMediaInfoParser to ensure correct language settings for audio tracks
added a warning log for incompatible schema versions in the microservice register task to provide clarity on schema compatibility issues during the deployment process
refactor array resizing logic into a separate method for improved readability to enhance code maintainability and reduce duplication
reformatted try - catch blocks in DataSourceProxy . java to improve readability and maintainability of the code
refactor InMemoryClientRegistrationRepository to accept a Map of client registrations instead of a list to improve flexibility in handling client registrations and ensure
added a method to reset the UI state in SchemaUpgradeHelper to ensure the application properly resets the UI state during upgrades
added a new boolean field ` failedStep ` and modified the handling of ` failedStep ` in ` JUnitReporter ` to improve error reporting
add a new file ` ` playerselector . java ' ' that replace ` ` playerselector . java ' ' with ` ` playerselector .
added Closeable interface to the Selector class to ensure proper resource management and support for closing resources
updated MaxConcurrentStreamsTest to utilize MultiplexConnectionPool for connection pooling to improve performance and resource management during concurrent stream operations
added stringType ( ) and stringType ( ) methods to CoreOptions . java to enhance type information handling and improve code readability
added null checks for character and parameter in HqlQueryRenderer and updated context configuration in EclipseLinkUserRepositoryFinderTests to enhance robustness
updated status codes in HttpGenerator , HttpChannel , and HttpConnection to use constants instead of hardcoded values to improve code readability and maintain
pdfbox - 4892 : fix typo , a suggest by valerybokov
fix flaky test in hikariconpcollectortest due to memory leak
added methods to expand file selection and improve metadata file existence checks in ParquetFormatPlugin . java and ParquetGroupScan . java to enhance
updated success state from false to true and modified error handling in Jsr199Javac . java to improve code clarity and ensure proper
added a baseModelListener class to handle table changes in DefaultSortedTableModel to enhance the model ' s responsiveness to changes in the
updated the condition from ` 49152 ` to ` 65535 ` in ` ServerConfig . java ` to allow for a broader range of valid
added support for document provider authority in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to enable compatibility with KitKat and
removed logging functionality from MainApp . java to streamline logging process for improved performance
added ThrowableAnalyzer to manage request rejected exceptions in FilterChainProxy to ensure proper handling of wrapped exceptions during request processing
updated the arraycopy method to use ' this . length ' instead of ' length ' for clarity to improve code readability and maintainability by
pdfbox - 4892 : throw illegalargumentexception when filterlist be empty
added a new class ` TbStopWatch ` to manage stopwatch functionality to enable tracking and monitoring of long - running tasks in the application
updated the initialization logic in PListStore . java to ensure consistent initialization behavior
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should not be used in new development
[ zeppelin - 5341 ] fix context class loader issue in remote interpreter
fix checkstyle issue in forgehooks . java ( # 7561 )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
updated variable names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 1369 - fix for # 1369 - add simple name to bean descriptor element ( # 1368 )
updated file paths from " wro / all . js " and " wro / all . css " to " static / all . css
added a new test method ` showLatestTimeseriesTest ( ) ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in configuration management
refactor exception handling in OCSPChecker to use a conditional check for CertPathValidatorException to improve clarity and maintainability of the error
add ability to disable write output solution for benchmarks
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815 . java ` to implement a test for slice size functionality in ` SortedTableMap ` to address issue
add a shapeless recipe to the recipe registry , close # 1421
make sequentialaccessSparsevector . iteratenonzero ( ) return orderedintdoublemapping . default _ value instead of orderedintdoublemapping . default
added handling for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to manage plot - specific metadata
added the ` getDebugLogger ` method to ` DIHWriter ` and implemented it in ` SolrWriter ` to improve logging capabilities for debugging
http : / / issues . apache . org / activemq / browse / amq - 2592 - add a check for maximum
added a check for tag matching in UpToTagChangeSetFilter and implemented a method to check if the tag matches the specified tag to improve error
[ beam - 8470 ] use arraylist instead of list to reduce memory footprint
refactor BrokerRoutingManager to improve routing management to enhance performance and reliability of routing processes
updated volumePaint and upPaint values in CandlestickRenderer . java to improve clarity and consistency in color assignment
refactor layout parameter handling in InsettableFrameLayout to improve layout parameter management to enhance flexibility by allowing customization of layout parameters based
added a duration parameter to the BuildTargetDurationListener class and updated related tests to include it to enhance rule duration tracking and improve test coverage
replaced ` @ Profile ` annotations with ` @ Assume ` in multiple integration test classes to ensure the database profile is considered in the test environment
added a null check for the user object before converting it to JSON to avoid potential NullPointerExceptions when the user is null
camel - 16400 : camel - core - optimize to replace route from endpoint . thanks to benjamin graf for
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by utilizing a more efficient data structure
api : listpublicipaddresses api : list all public ip address by source network id
added unit tests for ` isIgnoringBatteryOptimizations ` in ` ShadowPowerManagerTest ` and implemented it in ` ShadowPowerManager `
updated the Jetty version retrieval to use a build properties to ensure compatibility with different build configurations for the Jetty version
added unit tests for verification behavior in NumberOfInvocationsInOrderVerifierTest to ensure correct handling of invocations in order during verification
refactor regex evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added " - foreground " to the startProfile method in NewProfileExtensionConnection . java to ensure that the profile starts in a foreground for better
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve
changed the type of parseFieldnames from a Map < String , String > to a single String [ ] in MetadataIndexer . java to simplify
updated log message to include file name instead of file name and added null check for actionsList in EditorTextActionWindow to improve log clarity
updated skippedEntries to include exception messages and modified warning messages in JdepsTask to improve error reporting and provide clearer context for skipped entries
added link storage functionality and updated document storage handling in Fetcher and FetcherTask classes to improve document storage efficiency and support German analysis
updated the ` populateBubble ` method to include an additional ` existingBubble ` parameter and modified the ` populateBubble ` method to
camel - 16400 : camel - core - optimize route policy to avoid unnecessary warning .
updated method signatures in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to use JSON instead of method arrays to simplify the
[ java ] : use a delay generator for multi - multicast .
replaced GsonBuilder with Gson for JSON serialization and added client properties to improve JSON handling and provide additional client information in the response
added a condition to check if the field amount is zero before setting the average price in HuobiAdapters . java to prevent division by zero
removed the rawExecutionReports method from the subscription process to streamline the code and improve readability by eliminating unnecessary method
added a ` fail ` method to ` LdapTimeoutTest ` and modified timeout checks in ` LdapTimeoutTest . java ` to improve error handling
fix for ticket : 263 : check if the user dictionary exist before try to read it .
added password file and credential store alias handling in AmbariServerConfigurationHandler . java to ensure correct password management and prevent unnecessary password updates
added a check to skip parsing of segments that already have been parsed to improve performance by avoiding unnecessary parsing of segments that already have been parsed
[ flink - 13077 ] [ yarn ] add configuration option for applicationattemptfailurevalidityinterval
do n ' t unload h2 driver if it be n ' t include
hbase - 17850 make snapshot - based inputformat configurable readtype ( # 3662 )
ecs - workbench upgrade , add fixedheight and fixedwidth parameter .
added a cornerRadius parameter to the update method across multiple classes to enable rounded rectangle drawing functionality in the UI
added " DESC ( RIBE ) " and " DESC ( RIBE ) " to the COMMANDS _ TO _ REMOVE list
added a retry mechanism to retry connection attempts on the connection pool to improve reliability by avoiding transient connection issues
change txnensurereserve method name from ` txnEnsureReserve ` to ` txnCheckReserve ` and add a ` transactionId ` parameter
added a private final char array to the FirstOfStringsMatcher class to allow storage and retrieval of multiple strings in the matcher
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to include " DELETE ROWS CLIENT SELECT " and " DELETE ROWS SERVER SELECT "
updated BaseServiceException to include a check for " insufficient data written " in the exception message to enhance error handling for insufficient data scenarios
added support for rapid install types in AdbHelper and RealAndroidDevice classes to enhance functionality by allowing configuration of Rapid install types
updated the seed pattern in SortTest . java from " = = ? \ d + " to " = ( - ? \ d + "
refactor MultimapSubject to use a factory method for retrieving values and iterable entries to improve code readability and maintainability by reducing red
updated the return statement in Workspace . java to simplify the logic for determining the position of the hotseat to improve code readability and maintain
add a ` ` transmux ' ' flag to the transformer so that it ' s not confuse with the ` ` transmux
added localization support for multiple strings in the Picker class to ensure consistent user experience by displaying localized values
camel - 234 : camel - cxf should not fail when the exception be null in camel - cxf
hhh - 16400 - fix issue with postgres 8.1 due to deadlock
updated database query ID handling in TestJdbcDriver2 . java and improved visibility annotations in HiveStatement . java to enhance test reliability and
[ beam - 8470 ] add unbounded p collection support to pardo test
updated filename text formatting in GpsSimpleViewFragment . java to improve clarity and consistency of displayed file names
[ java ] remove unused leadertermid parameter from joinlogasfollower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing repeated calls to
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to clarify the purpose of
added null check for the tree in Recipe . java and modified marker handling in Markers . java to improve robustness and prevent potential NullPointerException
patch from peter fassev in issue # 263
do n ' t wrap email in addressbookdocoomonresultparser when parse email
refactor exclusion handling in RawMavenResolver to utilize a HashSet for better management of group artifacts to improve code clarity and maintainability
added support for handling DSX exchange info in DSXAdapters and DSXPairInfo classes to improve error handling and provide clearer feedback when
updated multiple test classes for consistency in naming conventions to improve code readability and maintainability
[ drools - 90 ] fix kbase / kbase / kbase / kbase / kbase / kbase / kbase /
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` before
rename JacksonDataFormat and JacksonXMLDataFormat classes to improve clarity and consistency in naming conventions
[ gr - 38686 ] fix hostfielddesc . java to not use reflection . findstaticaccess ( ) .
added a new parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enable proper handling of CompletableFuture completion stages in the database
updated the freeze check point calculation in PlaybackController . java to adjust playback duration for improved user experience
removed unused imports and updated internal state setting in ` AbstractCommonPowerMockRunner ` and ` PowerMockRunner ` to streamline test execution and
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshallIn ` to ensure the correct
refactor indentation handling in TabsAndIndentsVisitor to improve clarity and maintainability to enhance code readability and ensure consistent indentation behavior
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenFilter . java to align with the current testing framework standards
updated the write method in HtmlProcessInformationsReport to use a wrapped text to improve text formatting for better readability in the report
added LobHandler and MapExecutionContext handling in JdbcStepExecutionDao , MapStepExecutionDao , and MockStepRepository to improve execution context
added a conditional check to prevent adding a new media folder if the configuration is not hiding to improve user experience by preventing unnecessary media folder
added null checks for the ' actor ' parameter in SplitPane . java to ensure that the ' actor ' parameter is not null and improve the
added handling for parameterized types in RemoveUnusedImports . java to improve type management for parameterized types in the code
fix npe in uniquemodlistbuilder when use modinfo . getmodinfo ( )
changed the logger initialization from instance to static in TicketGrantingTicketImpl . java to improve memory efficiency by reusing the logger instance
updated SQL string in PhysicalPlanTest . java from SNAPPY . RLE . 81 + 12 to SNAPPY . 81 + 12
added a method ` isValue ` to check if a value is a value in ` AttrData ` and updated error handling in ` Converter ` to
added support for handling character modifier keys in the US international PC locale to enhance input validation for specific character modifiers in the keyboard
[ java ] add aeron _ publication _ connection _ timeout to ctestmediadriver and set it in the environment .
added a condition to check if certain request URIs start with " / images " , " / favicon " , and " / favicon "
added assertion to verify the installation of the APK to ensure the device is rooted before proceeding to improve test reliability by verifying
# 1656 - disable oracle test for now
updated the expected length of the enabled secure transport protocols from 1 to 3 in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java
updated Java library references in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest changes in the library
added a boolean flag ` mIsDismissHapticRunning ` and modified the condition in ` TaskViewTouchController . java ` to
fix explosion disappear when use custom projectile .
removed unnecessary import statements and overridden getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability by eliminating unnecessary
replaced ` @ QueryParam ` with ` @ QueryParam ` in the ` getBook ` method in ` BitfinexPollingMarketDataService `
camel - 16400 : camel - stax - converter should replace single quote with single quote in the result
[ hotfix ] [ runtime ] add tostring ( ) to kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean for improved session management to enhance session handling efficiency and maintainability
[ 3.0 ] remove reflectionutils . isgenericcall ( ) from trueseinvoker ( # 10727 )
replaced Gdx . app . error ( ) with a direct exception throwing in PolygonRegionLoader . java to improve error handling by providing a
added a method ` isStarted ( ) ` to check if the current deadline is valid and registered it in ` RawStoreProxy . java ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages for closed channels
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when no genres is available
[ hotfix ] [ runtime ] do not reset master hook in regionrecovery
test : add unit test for prefab with collection of mapped container
[ iotdb - 5018 ] fix npe in walnode when checkpointing unpined memtable
updated handler invocation in Endpoint . java and added a new test case in HttpTest . java to improve error handling and ensure reliability of HTTP
fix typo in package - info . java .
added a new file SQLServerEscapeQuestionCharacterTest . java to implement unit tests for SQL Server escape characters to ensure proper handling of special characters
added null checks and improved constructor parameters in CamelModule and JoobyBeanRepository classes to enhance robustness by preventing null pointer
replaced synchronization with a more concise loop in JavaFXSEPort . java to improve code readability and maintainability by utilizing a
changed package references from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
refactor cropperutils to use a separate method to create cropperBehaviour to improve code readability and maintainability by reducing duplication
removed the appName parameter from the configure method across multiple classes to simplify method signatures and improve code readability
add test case for install / uninstall with ignored dependency .
[ java ] use -- headless = chrome instead of setheadless ( true )
replace value assignment to use intern ( ) method to improve memory efficiency by reusing the value
added support for the " MOVE " status in the connection status checks to ensure proper handling of additional database operations
updated ISO8601 _ PERIOD _ MICROS and ISO8601 _ PERIOD _ MICROS date strings to ensure consistency in
replaced the use of ` org . apache . curator . shaded . com ` with ` com . google . common . lists `
[ hotfix ] fix npe in hsbuffercontext # startspilling
updated permission checks in Visit . java to include an untrusted visit flag to enhance security by ensuring only authorized players can visit untrusted plots
fix npe in jabber when jabber be not connect .
updated URL normalization conditions in BasicURLNormalizer . java and added a new test case in TestBasicURLNormalizer . java to ensure proper handling of
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to enhance encapsulation and restrict access to methods
added a conditional check to compare clock rates when res is zero to ensure correct comparison of clock rates when res is zero
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` ProjectCommand `
updated zero digit handling in HostLocaleProviderAdapterImpl . java and modified calendar ID retrieval in HostLocaleProviderAdapterImpl . java to improve code
added a new file MSwingUtilities . java that provides utility methods for image scaling in Swing applications to facilitate image manipulation and
( chore ) camel - mail : add async support to mailproducer
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to enable dynamic refresh of configuration properties
add unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement integration scripting functionality in the SchemaCrawler project
added a check for ` _ inputState = __ NONE ` in the form encoding condition in ` Request . java ` and created a new test
added a condition to check if glyph dimensions are non - negative and implemented a new ` isDescendant ` method in ` Group ` and ` Fl
replaced direct failure reporting with a call to ` context . runCloseHooks ( ) ` in ` DeploymentManager . java ` and added a
fix typo in lexiconrecipemappings # tostring ( )
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test reliability by allowing more time for
replaced specific StringUtils imports with a wildcard import and updated conditional check for shortName to simplify import statements and improve code readability
use classloader . getresource ( ) instead of url . getclassloader ( ) for holidayxmlurl
added a new file ` FieldUtils . java ` with methods to retrieve accessor , setter , and protected field names to provide utility functions for accessing
removed the speculative type check in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated workspace layout from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to improve the visual appear
add a method to update settings for the last account in XabberAccountManager to improve error handling for invalid tokens
added a new method ` setvar ` to handle variable values in a command - line interface to provide users with a way to set variable values
fix catentity . onanimaltame not be call on animaltame . close # 6592
improve error message for invalid value in windowframe
pdfbox - 4892 : add test to verify that pdfs contain the help text
added a method to set the application mode in PageListController to ensure the application displays the current mode for better user experience
added build arguments and Docker file path handling in ImageFromDockerfile . java and created a new test class ImageFromDockerfileTest . java
added a check to ensure threadInfos [ threadId ] is only instantiated if it does not already exist to prevent unnecessary instantiation of ThreadInfo objects and
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded negative value to improve code readability
[ hotfix ] [ runtime ] fix typo in log message
added new schema entries to the Schema class to support additional data structures in the schema
added minimumSimilarity parameter and updated FuzzyQuery constructor to accept it to enhance flexibility in fuzzy queries by allowing a minimum similarity value
updated method names from ` addActionsView ( ) ` to ` setActionsView ( ) ` in RecentsView . java to improve
[ log4j2 - 1348 ] allow immediateflush to be set in the enclosing appender .
updated the AutoConfigureAfter annotation to include additional auto - configuration classes for RabbitAutoConfiguration , KafkaAutoConfiguration , and KafkaAutoConfiguration to ensure
updated JLayer . java to handle null components in removal and added a new test class bug6875716 . java to ensure proper handling
replaced ` org . google . common . base . Function ` with ` com . google . common . base . Function ` in multiple files
simplify the return and unwind block handling in BciBlockMapping and GraphBuilderPhase classes to improve code clarity and maintainability
refactor conditional checks in Label . java for better readability and maintainability to improve code clarity and facilitate easier testing of
replaced ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added a null check for mObserver before accessing its properties in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
modified the return type of the ` thenComparing ` method in ` Comparator ` and added a new test class ` Department ` to improve
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction to use the current bucketMillis instead of a null value to ensure the anomaly result
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is never thrown and does not lead to
added a class loader to the enhancer in MockFactory to ensure proper class loading for mocking classes
added a new OriginalFormat class and modified the formats list to include a new OriginalFormat class to enhance type conversion functionality for enum types
replaced direct string concatenation with a constant for date formatting in FileStorageUtils . java to improve code readability and maintainability by avoiding
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and reduce memory usage
camel - 15836 - camel - aws2 - lambda : add autowire option to camel - aws2 - lambda component
fix ( vm ) : mac address be not generate if it be n ' t a valid mac address ( # 5898 )
updated the check for " Authorization " header name in ProxyServlet . java to ensure proper authorization handling for proxy requests
updated method name from ` submit ` to ` execute ` in ` TraceableExecutorService . java ` to clarify the method ' s purpose
added a ` getDetails ( ) ` method to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes
updated the condition for generating the random boolean from ` nextBoolean ( ) ` to ` randomBoolean ( ) ` to improve the randomness of
rename method ` appendDot ( ) ` to ` endSentence ( ) ` across multiple classes to improve clarity by indicating the purpose of the
updated the ` formatForConsole ` method to include locale - specific formatting to ensure consistent formatting across different locales
replaced specific imports with a wildcard import and added sorting logic for parsed arguments in GroovyParserVisitor and GroovyPrinter to improve code readability and
added bounds checking for inset dimensions in Border . java to ensure correct positioning of elements within defined bounds
refactor gesture state management by introducing a new method ` createGestureState ( ) ` to improve code readability and reusability
updated import statements and modified version string formatting in LlapServiceDriver . java to improve date handling by using Instant instead of Joda - Time
updated openblas . java and openblas _ nolapack . java files to improve functionality and maintain consistency across the project
replaced ` IOUtils . closeQuietly ` with ` IOException ` for closing piece storage in ` TorrentsStorage . java ` to improve resource management
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased the timeout duration from 120 seconds to 480 seconds in the waitForRecoveriesToFinish method to allow more time for recovery before
add a new file ` SearchResults . java ` to manage search results to provide a structured way to handle search results in a structured manner
bugfix # 205373 , use threadcputimer instead of threadcputimer for refresh
[ wasm ] fix npe in bytecode node when call getobjectsafe .
added new versions " 8.10 . 0 - cfs " and " 8.11 . 0 - nocfs " to TestBackwards
updated feature flag from " ENABLE _ TWOLINE _ ALLAPPS " to " TEAMFOOD " and modified the return statement
added a new endpoint to retrieve tenant pools for the current instance in the InstanceResource class to enhance functionality by allowing users to manage tenant - specific
updated ` canEarlyTerminate ` method to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix `
added a new method ` isToString ( ) ` to ` InlineBytecodeGenerator ` and updated imports in ` InlineByteBuddyMockMaker
added debug logging statements to CxxCompileStep and CxxPreprocessStep classes to improve visibility into compilation and preprocessing processes for better debugging
add a method to remove a character from a string and update its implementation to improve string manipulation functionality and enhance code clarity
updated the parameter name from METADATA _ SERVICE _ SERVICE _ PORT _ KEY to METADATA _ SERVICE _ PROTOCOL _ KEY and improved parameter handling in
jbpm - 4640 - add datatransformer interface to allow transformation of object
updated type declarations for collections and arrays in DistributionGraph . java to improve type safety and clarity in data handling
simplified the visit method in FormatStringChecker . java for clarity and consistency to improve code readability and maintainability
no actual change in the code as the line remains identical to maintain consistent formatting for readability
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a new test method ` testMapModel ` in ` CodeFirstPojoClient ` and ` CodeFirstPojoIntf ` to
pdfbox - 4892 : avoid npe , a suggest by valerybokov
refactor selection handling in ScaleDialog to improve clarity and maintainability to enhance code readability and prevent potential null pointer exceptions
fix travelBelt not update the player ' s step height if it ' s null
added logging for appearance stream creation and improved error handling in AppearanceGeneratorHelper . java to enhance debugging capabilities and provide clearer error
replaced TreeSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain insertion order of keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and removed
updated the camera preload configuration from " libdc1394 - 22 " to " libusb - 1.0 " to ensure compatibility with the
added a check for ` agentSupport ` before setting all constructors to public in ` MainMockTransformer . java ` and created ` MockStaticWith
pdfbox - 4892 : do n ' t try to decrypt non - string object , a suggest by valerybokov
add a new method ` setWindowTitle ( ) ` to set the default AWT window title in ` MainFrame . java ` to improve
updated depth assignment logic based on pixel size in XRSurfaceData . java to ensure correct depth representation based on pixel size for better rendering
added errorResponseBody to InvalidResponseCodeException for handling unsuccessful response data to improve error handling and provide clearer error messages for debugging
added a static method ` exit ` to the ` TopLogging ` class and refactored the exit logic in ` TopThreadGroup ` to
updated the logic for determining the start index in NativeRegExp . java to ensure the correct starting index is set based on the regex ' s global
planner - 468 ignore test when upgrade to optaplanner 6.3 . 1 +
updated the variable name from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to improve clarity by accurately
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO classes to improve resource management by removing unnecessary feed entries
added return statement to the appendToLabel method in AtomicCounter . java to enable method chaining for better usability
[ java ] use no - op idle strategy instead of busy spin idle strategy .
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and related classes to ensure proper response management when headers are not modified
replaced instances of ` SplicedNode ` with ` ToolEvalNodeFactory ` in ` InstrumentationPartialEvaluationTest . java ` to
added a method to paint the tab area in SynthTabbedPaneUI to ensure proper rendering of the tab area by accounting for insets
refactor KrakenDepth and KrakenTrades retrieval methods to allow for more flexible argument handling to improve code clarity and
( chore ) camel - file : make it easy to configure component and whatnot .
added JSON identity annotations and refactored the build method in JavaProvenance and MavenProjectParser to enhance JSON serialization capabilities and improve project generation
added trace logging for various Hive UDFs and modified the equality check in the EqualityVisitor class to improve traceability of registered Hive functions and
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage by allowing more iterations
rename unserializablecolumnfamilyexception to unknowncolumnfamilyexception . patch by jbellis
added a check for writable output files in NativeErrors . java to provide clearer feedback when a test is run as root due to file access
added package info retrieval and logging in LauncherModel . java to ensure application information is available before proceeding
cloudstack - 7895 : fix npe during upgrade from 4.1 to 4.2
updated exception handling in ` AbstractFaultTolerantChunkOrientedTasklet ` and ` FaultTolerantChunkOrientedTask
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` for region matching in ` LineReaderImpl . java ` to improve
added import statements and modified data table handling in Recipe . java to enhance data table management and improve error handling
added task dismissal logic in TaplTestsTaskbar to ensure all tasks are properly dismissed when the overview is active
dbupgradechecker : add dbupgradesystemvmtemplate interface to databaseupgradechecker to make it easy to upgrade system vm template
updated connection handling in LdapClient . java to remove unnecessary null checks to simplify connection management and improve code clarity
refactor index handling in SequenceAction . java for clarity to improve code readability and maintainability
patch by stu hood ; review by jbellis for cassandra - 539
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing of synthetic fields
added LoggerProvider to manage SLF4J logging in the application to enhance logging capabilities for better debugging and monitoring
changed the type of the variable ` value ` and ` port ` from ` String ` to ` Object ` in the ` ServerStatusCommand `
added deprecation warning handling in SpringFactory and improved error handling in SpringFactoryTest to inform users when multiple glue classes configure the spring context with
added a new method ` deepStart ` to the ` Startables ` class to provide a way to process multiple startables in a stream
removed the ` reservePrimitiveExtensionArray ( ) ` method from the ` Shape ` class and its implementation in the ` ShapeImpl ` class to
implement ilasertargetblock in blocklasertable and fix laser test .
refactor object name validation logic in AbstractJdbcDatabase . java to improve clarity and correctness of object name checks
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
removed the setExpireMessagesPeriod ( 0 ) call from MemoryLimitTest . java to simplify the test by eliminating unnecessary expiration settings
removed null checks for ` p ` and ` norm ` in ` RequestHandlers . java ` to simplify code logic and improve readability
replaced the method of obtaining the logger name in ProxyServlet . java to ensure the logger name is consistently formatted for better readability
updated import statements and refactored Python path handling in ProjectBuildFileParser . java to improve code clarity and ensure consistent handling of Python
added validation for audio frame sizes in DirectAudioDevice and Toolkit classes to ensure that audio data does not exceed defined limits to prevent runtime errors
add null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values and avoid potential NullPointerExceptions
updated error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added a policy assignment to WebSocketSession to ensure proper handling of WebSocket session policies based on container scope
updated the logic for initializing static fields in the Java2TypeScriptTranslator class to improve clarity and correctness in handling static field declarations
added a webroot parameter to the createContext method in UserService . java to allow dynamic configuration of the web root location
( chore ) camel - junit5 : migrate to junit5 ( # 4490 )
use netbeans api instead of netbeans registry . getcomponentiterator ( ) .
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual trade DTO imports with a wildcard import and added a method for placing stop orders to simplify import statements and prepare for future
reset buffer in ReduceRecordProcessor to ensure data integrity during processing
added null checks for mOriginalForeground and mOriginalBackground before setting them to avoid NullPointerExceptions when mOriginalForeground or mOriginalBackground is null
updated condition checks in FloatingDecimal . java and added a new FloatingDecimal . java class with a toString method to ensure proper validation of
updated the type check in PropertyDescriptor . java and added a new class Test7189112 . java with property setter validation to ensure proper type
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary
modify the origin setting logic in NettyRequestFactory to conditionally set the origin based on whether the URI is secured to ensure correct origin
updated animation behavior in RecentsView , TaskView , and LayoutUtils classes to improve user experience with modal state transitions
updated error messages in ORCRecordReader . java for clarity and consistency to provide more context about the field type and improve code readability
added multiple HLS video formats in DemoUtil . java to enhance video playback capabilities with additional media formats
updated HIBERNATE _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE _ JPA _ METAMODEL
hbase - 11312 addendum fix for hbase - 11313 ( addendum )
added diagnostic logging and a test for union types with fixed fields in TestSpecificCompiler . java to improve diagnostics and ensure correct compilation of generated code
refactor websocket session creation logic in WebSocketEndpoint . java and add a new test for session closure in WebSocketIT . java to improve code cl
replaced ` onDaoStateBlockChainChanged ` and ` onDaoStateBlockChainChanged ` with ` onChangeAfterBatchProcessing ` and changed
updated DTD mappings from OpenSymphony Group / / XWork to Apache Struts in XmlConfigurationProvider . java and LocationAttributes . java
do n ' t stop video stream if it ' s already stop
changed the data type of the ` getChartData ` method from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse
updated import statements in GMLExamples . java for consistency and clarity to improve code readability and maintainability by using more appropriate imports
replaced substream ( 200 ) with skip ( 200 ) in TargetType58 . java to improve performance by avoiding unnecessary substream operations
hhh - 10956 - fix npe in abstractentitytuplizer due to miss identifiergenerator
rename ` ` findfulltext ' ' action to ` ` downloadfulltext ' '
refactor URI registration logic to utilize a list of URIs instead of a single URI to improve clarity and maintainability of URI handling
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDb hash before retrieving the info from the file to avoid potential errors when the hash is blank
added token transfer functionality in RuntimeImpl . java and integrated it into TransferAssetActuator . java to improve contract handling and ensure proper token balance
camel - 16400 : camel - ftp - do not delete file on stepwise mode . thanks to benjamin for
updated method name from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to improve clarity
added validation for joinResult in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure correct handling of join results and improve
refactor HTTPSPDYAsyncEndPoint constructor to accept an AsyncEndPoint instance to enhance encapsulation and provide access to the endpoint properties
added the " id " extra to the intent in multiple adapter classes to ensure that the correct tweet ID is passed to the intent for better tracking
added proxy authentication handling and refactored disconnect logic in HttpURLConnection . java to improve connection management and ensure proper handling of proxy authorization
updated the ` _ numChildren ` variable to use an ` AtomicInteger ` for thread - safe incrementing to ensure thread - safe access to the
updated variable declarations in multiple Java files for consistency and clarity to improve code readability and maintainability
disable the test in ValueTypeTests to address flakiness in the test environment
* move resourcefactoryserviceimpl from kie - api to kie - api ( # 1359 )
updated predicate types from IN to NOT _ IN across multiple predicate classes to improve clarity and consistency in predicate type naming
updated exception handling in ` FileActivity . java ` , ` Preferences . java ` , and ` ReceiveExternalFilesActivity . java ` to improve
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the method to retrieve the expression string for tagged columns in JoinDesc . java to improve clarity and ensure the correct expression string is generated
added a check for non - present javadocs before setting the JavaDoc in AbstractJavaClassTranslator to ensure that the JavaDoc is only set
updated variable names from ` holderMethod ` to ` holderMetadata ` and introduced a new class ` RedefineInterfaceCall ` to improve clarity
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) and revalidateWithAnimationSafety ( ) to improve animation
[ hotfix ] [ connector / kafka ] remove unsupported metricgroup exception in bulkformat
updated the calculation of the Y - coordinate in the Polygon class to use the oldX variable instead of the current y - coordinate to ensure correct
updated cache creation method to accept a Configuration type to ensure proper type handling for cache configuration
added a check for non - empty string in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie handling
added authorization checks for managing external tables in Hive to ensure proper access control when attempting to drop non - managed tables
updated conditional checks for ApplicationType and improved drawing logic in Stage . java and ProgressBar . java to enhance code clarity and correct positioning
sulong : add support for getplatformbyteorder ( ) in llvmlanguage and basicplatformcapability .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windows
refactor initWebViewLogin method to accept a baseURL parameter and update related logic to improve flexibility in loading the login web view based on
updated the error message from " Paramter " to " Parameter " in CallableStatementHandler . java to clarify the purpose of the parameter
added a valid date format for the ' after ' parameter in AuditEventsMvcEndpoint and updated related tests to include a valid ' after ' parameter
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple classes to clarify the purpose of the timer related to performance
added soft body removal and deletion logic in SoftBodyTest . java to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ table ] make interface public for sinkfunctionprovider , sourcefunctionprovider , and outputformatprovider public
updated log messages in ZeppelinHubClient , ZeppelinWebsocket , and ZeppelinWebsocket to provide
add test case for no redundant namespace
add a null check for redplasma in bcstatcollector .
added HTTP / 2 header handling in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated conditional checks in the Remove . java file to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
updated the delimiter from ' count ' to ' count 2 ' and modified the append statement in SimpleReport . java to correct the delimiter and ensure
updated JavapTask to ignore symbol files and added a new class T6863746 to enhance functionality by allowing users to ignore symbol
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed unused ` TickerDemo ` and ` TickerDemo ` classes
removed exception handling for unknown contract types and added null checks for contract address to improve error handling and provide clearer feedback for invalid contract types
g3d - 316 : do n ' t create input3d when in applet mode
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable the test due to known issues
fix : scripttagpayloadreader should return false instead of parserexception
renamed method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java ` to clar
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to allow for
replaced direct assignment of x , y , width , and height with an instance variable in IOSGLES20 . java to improve code read
removed the UploadPathActivity class and its associated imports in ComponentsModule . java to streamline the codebase by eliminating unnecessary components
updated return statements in SimpleTextFieldsReader to conditionally return - 1 based on indexOptions to ensure correct handling of term frequency and total term
test : add implicit constructor support for ctconstructor ( # 3995 )
added a database parameter to multiple method calls in ColumnSnapshotGenerator to ensure compatibility with OracleDatabase during validation checks
refactor Database class to improve code readability to enhance maintainability and facilitate future development
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated iterator assignment in DefaultIndexingChain and PointInSetQuery to ensure proper reference to the iterator variable to improve code clarity and maintain consistency
removed the substring operation for rawName in SchematicHandler . java to simplify the code by eliminating unnecessary substring operations
added case handling for various collection types in AbstractCollectionAssert . java and updated return statements in CollectionAssert _ getUnmodifiable _ Test . java to
changed the visibility of the Option enum from static to instance to allow the Option class to be accessed without creating an instance of the class
added support for twitlonger input in Compose . java and ComposeActivity . java to enhance user experience by preventing unint
replaced the ` toggleKeepInSync ` method with a direct call to ` toggleKeepInSync ` in ` FileDetailFragment . java
replaced the use of ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) ` for decoding a
added new classes ` ControllerCounter ` and ` DBCallback ` for managing database interactions to provide a structured way to manage database interactions within the application
added ' final ' keyword to the parameter in the deleteTicket method to improve code clarity and enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement Flyway migration testing to enable integration with Spring ' s Flyway
updated the condition for checking if an element is empty in the HashMap class and added a new class ` OverrideIsEmpty ` for testing to ensure
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
updated the ` modify ` method to accept a nullable ` EnumSet < Modifier > modifiers to improve null safety and logging for missing ORC compression modifiers
added null check for the MAIN _ CLASS value and improved error handling in LauncherHelper . java and TestHelper . java to ensure robust
updated class names in multiple test files for consistency to improve readability and maintainability of test class names
[ gr - 38686 ] fix hotspot profiling info for graal node .
updated CellCopyPolicy to implement Cloneable and modified the createBuilder method in XSSFSheet to enable the creation of CellCopyPolicy instances
added a new method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and refactored it in ` Floating
updated method call from ` getValue ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated resource handling in IconRecentsView to account for landscape orientation to improve UI responsiveness for landscape and portrait modes
deleted the AddAdapter . java file to remove unused code to streamline the project
fix npe in nonstatic lifter when there be no constructor code
added an ` processSortCols ` parameter to the ` OpTraitsRulesProcFactory ` class to enable sorting functionality based on the ` processSort
refactor event checking logic in TestLogWatcher . java to improve clarity and error handling to enhance test reliability by ensuring messages are correctly
added a print statement in Java2TypeScriptTranslator . java to ensure proper output formatting in TypeScript translation
updated the SDK version from " 4799589 " to " 4913185 " to ensure compatibility with the latest platform features
add property for SPRING _ AOP _ PROXY _ TARGET _ CLASS if not present in the environment to ensure AOP proxying behaves correctly in the application context
removed the singletonLock variable and its assignment in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary conditional checks
renamed method names from ` responseClassCallback ` and ` forwardClassCallback ` to ` responseClassCallback ` and ` forwardClassCallback `
added a ` appendToFile ` method to the ` writeFile ` method and modified file handling in ` Utils ` and ` SuiteHTMLReporter `
updated MavenExecutionContextView and MavenRepositoryMirror classes to improve mirror retrieval logic and added a new test class for MavenRepositoryMirror functionality to enhance
added name attributes and constructors to BuildRuleSourcePath , PathSourcePath , and TestSourcePath classes to provide a means to retrieve a distinct name for each source path
updated the redirect URI check in OAuth20CallbackAuthorizeEndpointController to use ` matches ` instead of ` equals ` to improve the accuracy of the
replaced instances of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ` and added a new method ` toArray ` to
updated method calls in UserManagerCompatVL to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` to ensure
updated the default value for the line separator in GlobalConfiguration . java to provide clarity on the line separator used for output formatting
fix configurationmanagerutils . isderiveclass ( ) - > configurationmanagerutils . isimplementinginterface ( )
sanitise input in basecontroller to prevent security vulnerabilities
chore : update java and python dependency ( # 139 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` parameter and modified the ` buildFileNamesCan
rename CountersReader . java file to improve clarity and consistency in naming conventions
updated containerType assignment logic in AllAppsRecyclerView . java and modified logDeepShortcutsOpen method in UserEventDispatcher . java to improve
hbase - 25819 deprecate deprecated configuration key from hbase . ipc . server . allocator . reservoir . initial .
[ native ] fix npe in native window query
refactor ` getGenericParameterTypes ( ) ` to ` getAllGenericParameterTypes ( ) ` for improved clarity and functionality to enhance the
refactor TestFSTs class for improved readability to enhance maintainability and ease of understanding for future developers
[ web ] fix label height calculation for input box .
hbase - 16400 increase to upper bound region split policy ( chunhui )
added functionality to reset loading state and start the loader in LauncherClings . java to improve the loading behavior of the launcher when the workspace
removed duplicate keys and updates lists from ManagedSelector . java to streamline the code by eliminating redundancy
added excludedDatasources functionality to SpringDataSourceBeanPostProcessor to allow filtering of datasource beans based on a specified excluded set
added undo functionality to TableValuesView and simplified the delete action in TableValuesPanel to improve user experience by ensuring undo state is stored and simplify
( chore ) camel - aws : use clientconfiguration instead of clientconfigurationfactory in kinesisproxy
refactor VelbusSensorHandler to use a loop for channel masking to enhance flexibility and maintainability of the VelbusSensor
disable unfavorable benchmarks in LocalCacheSelectorCode and simplify delay logic in BoundedLocalCacheTest to improve performance by avoiding unnecessary
added a test for illegal database names and modified error handling in IoTDBSessionSimpleIT . java to ensure that illegal database names are properly handled
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset before processing
replaced ` desiredWorkspaceLeftRightRight ` and ` desiredWorkspaceLeftRight ` with ` desiredWorkspaceHorizontalMarginPx ` and introduced a new
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 5104 )
fix typo in constant name from " xenservernetworklabel " to " xennetworklabel "
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
removed the metricNames field and its getter method from SolrCore . java to streamline the code by eliminating unused metrics
use filesystem . fromurl ( ) instead of uri . create ( ) in mavenmanifestfactory
replaced direct calls to System . getProperty ( " os . name " ) . contains ( " mac " ) with a static final boolean variable
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added a clear and addAll functionality to the slotList in the Frame class to ensure that the slotList remains consistent and up - to - date
set m _ predCount to - 1 in PredicatedNodeTest . java to set m _ predCount to - 1 to reset pred count
added property merging functionality in ConfigurationSpringInitializer to enhance configuration management by allowing dynamic property updates
updated the logger parameter type from ` org . slf4j . Logger ` to ` org . slf4j . Logger ` in
replaced HashMap with LinkedHashMap in multiple classes to maintain the order of elements in the alias to work
added logic to retrieve JDBC handler mappings in TypeHandlerRegistry to ensure proper handling of superclasses and avoid potential runtime errors
added debug logging statements to HibernateItemWriter , JpaItemWriter , and FlatFileItemWriter to enhance traceability of item writing processes
updated the parsing logic in LocaleUtils to handle a wellformed string format to improve accuracy of language range parsing by removing unnecessary whitespace
updated the ` handle ` method in ` Http2ServerResponseImpl ` and ` VertxHttp2Handler ` to execute from IO to ensure
make xssfevaluationworkbook _ ubook final and cache it in basexssfevaluationworkbook # gettable
updated schema text detail type checks and simplified column symbol assignment in BaseSchemaTextFormatter . java to improve clarity and maintainability of schema text
updated MongoNamespaceReplicaSetTests to use MongoClient instead of MongoFactoryBean and Mongo to ensure compatibility with the latest MongoDB API changes
replaced HashSet with LinkedHashSet in SparkWork . java to maintain insertion order for BaseWork instances
replaced the initialization of ` tableScanCloneOpsForJoin ` with a conditional check to ensure the operator tree is properly cloned before proceeding
added null check for the client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to utilize ClientDetailsEntityJsonProcessor
added a new field _ 187981 _ e . clear ( ) to the AchievementList . field _ 187981 _ e
added default values for username , productName , productName , productVersion , and connectionUrl in MutableDatabaseInfo and MutableJdbcDriverInfo classes
updated permission string from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in QuickSharingPermissionsBottom
added LongBuffer functionality to ByteBuffersDataInput and ByteBuffersIndexInput classes to improve data reading efficiency and handle buffer underflow exceptions
6939260 : ( f ) basicfileattributes . lastmodifiedtime ( ) should return last modified time with high
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior for humongous regions
added a conditional check to hide the search bar in AllAppsContainerView based on user preferences to improve user experience by allowing the search bar to
updated route retrieval from ` env . routes ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to manage page reloads in the application to enhance user experience by allowing quick navigation to the page
changed log level from info to warn for multiple entries in the SQLManager class to provide a less severe log level for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added null check for currentClusterConfigForService and thrown an AmbariException if the configuration type does not have a selected version to ensure
fix compile failure in gs - platform cause by geotools java 9 compatibility change [ geot - 5289 ]
added a call to closeTable ( ) in HiveHBaseTableInputFormat to ensure proper resource cleanup and prevent potential memory leaks
added a method to stop the statement executor in JdbcConnector and implemented logging in HiveViewImpl to ensure that the statement executor is properly stopped and
added feature settings for disallowing DTD in DocumentFactory , XMLSAXHandler , and complexElementHandler to enable external DTD loading and
updated JdbStopThreadidTest to use contToExit instead of JdbCommand for application exit verification to improve the reliability of the
added ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable retrieval of content providers based on
updated future handling in ExpressionThreadPoolManager to use a local variable for improved type safety to enhance code readability and maintainability by avoiding
updated the default HTTP port from " port " to " vertx . httpPort " to ensure the application uses the correct HTTP port configuration
changed the listener type from ` addCaptureListener ` to ` addListener ` in ` Dialog . java ` to ensure that the listener is registered for
updated the default batch size to use available processors instead of a fixed value to improve performance by dynamically adjusting the batch size based on available processors
added error handling for establishing resource manager connection in TaskExecutor to improve robustness by logging failures during resource manager connection establishment
[ flink - 13434 ] [ runtime ] fix nullpointerexception in lambda rewriting
updated IllegalArgumentException message to include min and max values to improve clarity of error messages for better debugging
updated message handling in multiple classes to include an entity parameter to enhance message processing capabilities and improve error logging for better debugging
added new interfaces ` Cursor ` and ` Row ` in ` com . codename1 . db ` and refactored ` Database ` and
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability
# 1399 - enh : add setbeanid ( ) and getbeanid ( ) to ebeanserver . setbeanid (
updated the transformation method to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to improve flexibility and maintainability
added a list of request matchers to the HttpSecurity class to enhance the flexibility of request matching by allowing multiple request matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource instances
remove unused request and response field in abstractprocessor and abstracthttp11processor , which be no longer need .
updated log messages in FileManager . java for better clarity and consistency to improve log readability and provide more informative messages for better debugging
added tearDown method to TestJdbcDataSource and TestIndexSearcher to ensure proper cleanup of resources during test execution
updated class references in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
simplify parserdecorator by use fallbackparser instead of temporaryresources
fix the security manager not be able to load the fml class in a dedicated server .
removed unnecessary parameters from method signatures in AccountUtils and IndexedForest classes to simplify code and improve readability by eliminating unnecessary parameters
updated method calls from " swap " to " rename " in TestCoreAdminApis . java and modified the rename method in CoreApiMapping
added a new test method ` testJsxComment ` and refactored comment checking logic in ` JsLexerJsxTest . java `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for widget tests for better debugging
added error handling for missing Buck configuration in BuildEndToEndTest and CxxEndWorkspace to improve user feedback when Buck configuration is
added physical memory management checks in TestStringBufferAndBuilderGrowth . java to check if the machine has sufficient physical memory for the test to
deprecate ` conversionservice . shared ` and update custom converter docs / examples to use conversionservice bean . ( # 8695
added a success flag to the HiveMetaStoreClient class to indicate successful operation
updated conditional check from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and modified
added support for handling both " amp . twimg . com / v " and " amp . twimg . com / v " in T
added @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should not be used in new code
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
added assertions and modified reference kind handling in MemberName . java to improve error reporting and ensure correct reference behavior
change default value of __ submitKeyUpdates from " false " to " true " and ensure thread safety during change execution
corrected a typo in the conditional statement in the EditNodeTextField . java file to ensure proper event handling for mouse events
camel - 16400 : camel - core - allow to register bean with thanks to aaron
updated multiple Java files related to BenchmarkPublisher , BenchmarkSubscriber , and PublishReceiverHandler to improve code organization and maintainability
reformatted exception handling in AgentRunnerTest . java for clarity to improve code readability and maintainability
added descriptions to multiple classes for adding , adding , and modifying Maven project properties to enhance clarity and usability of dependency management in the project
refactor face addition logic in ObjLoader . java to use a local variable for faces to improve code readability and maintainability by reducing
refactor ProcessEngine class to improve process management to enhance efficiency and maintainability of the process execution
rename ` reentrantLock ` to ` lock ` across multiple classes to improve code readability and maintain consistency in naming conventions
updated ` PrintMavenAsCycloneDxBom ` to include ` mavenPackaging ` as a parameter in ` getBomReference `
replace back ( ) method with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure correct component context is passed to the
http : / / issues . apache . org / jira / browse / amq - 3833 - fix checkstyle issue in sasl
updated generic type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and improve code clarity
updated method calls to use ` getConf ( ) ` instead of ` NutchConf ` across multiple classes to improve code consistency and adhere
updated method calls in SheetAssembly and StubsController to utilize deselected ( ) instead of removedBoardsPane ( ) to improve
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks for ` node ` and ` edge ` before setting their time interval in ` ImportContainerImpl . java ` and updated test cases
removed logging level from the server port command in MockServerContainer . java to simplify the command for easier debugging and monitoring
updated error logging message formatting in FunctionRegistry . java to improve clarity of error messages for better debugging
use crawledmetadata instead of robotshonoringpolicy to avoid use of robots honoringpolicy
added @ Ignore annotation to ITSystemTest . java to disable tests that are not ready for execution
( chore ) camel - test - infra : improve cross - platform compatibility
added a method ` alternativePath ( ) ` to the ` ExpectNewDemo ` class to provide an alternative path for audio files to enhance functionality
replaced input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure the
[ hotfix ] [ runtime ] add protectiondomain to bufferalignmentagent
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe optimization for external tables in Hive to improve performance by avoiding unnecessary semi - joins on external tables
updated documentation for authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset from - 30 to 0 in the setWallpaperOffsets method to ensure the wallpaper is displayed at the correct position during
updated return value from false to true in SybaseASADatabase . java and modified sequence creation logic in CreateSequenceGenerator . java to ensure
nifi - 1343 : putsql . putsql . commit and putsql . rollback need to be conditional on commit / rollback ,
added error handling and directory creation logic in SnapPuller . java and TestReplicationHandler . java to ensure proper file handling and facil
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure the correct launcher
updated frame method signatures to include an output parameter for better encapsulation to enhance functionality by allowing the caller to specify the output buffer for frame processing
updated constructor parameters in OAuth2LoginConfigurer , OAuth2LoginAuthenticationFilter , and OAuth2AuthorizationRequestRedirectFilter to remove unnecessary references to
updated documentation for map creation in GenericUDFStringToMap . java to clarify usage of delimiter1 and delimiter2 to improve user under
replaced the constant ` INSTANT _ STAMPLE ` with ` TemporalUnit ` in ` PlainFormatter . java ` to improve clarity and
updated timeout duration from 1000ms to 3000ms and refactored the close method in AgentRunner . java to improve resource management by allowing for
hhh - 13412 use lookup in classloadingstrategyhelper to avoid reflection overhead
refactor Mockito class for improved readability to enhance maintainability of the codebase
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the event
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that have at least one sample result
updated the error message in GridLayout . java to clarify that rows and columns must be greater than zero to improve user understanding of
updated variable names and method calls in DecisionNode . java and WagonCART . java for consistency and clarity to improve code read
added handling for BoundSheetRecord in Excel2CSVmra and implemented sorting in BoundSheetRecord to improve data organization and ensure proper ordering of
refactor thrust impulse calculation to use startThrust and endThrust values instead of averageImpulse to improve clarity
niftyjmedisplay : use inputmanager instead of inputmanager in niftyjmedisplay
refactor hashcode field handling in UniverseBuilder . java for improved clarity and structure to enhance code readability and maintainability while ensuring
block : deprecate getmesh ( ) , deprecate getmesh ( ) in favor of getmesh ( )
[ hotfix ] fix typo in yarntaskmanagerrunner
added an option to empty word options and modified matcher initialization in LineReader and LineReaderImpl classes to improve handling of empty word options and enhance
add write commit log when push view replica update
added auto - opening functionality in CaptureActivity and defined a default button ID in PreferencesActivity to enhance user experience by allowing automatic opening of web content
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to validate batching behavior in ` Joined
added logging for duplicate timestamps and improved error handling in JpaPersistenceService . java to enhance debugging capabilities and provide more informative logging for
deprecated the format ( ) method in CucumberOptions and updated its usage in RuntimeOptions to encourage the use of the deprecated format
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified back key event handling in ExtendedEditText . java to improve code readability and maintainability
updated the capacity calculation in AbstractStringBuilder and added a new class Capacity to improve string capacity management and facilitate testing of StringBuilder capacity
replace goHome ( ) with onNoteSaved ( noteTmp ) in DetailFragment . java to ensure the correct handling of saved notes in the
patch from tilman hausherr from bug # 46533 - add support for endnote document in xwpf
updated event publishing to include clientInfo in CasAuthenticationTransactionSuccessfulEvent to provide additional context for authentication success events
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the version of the OGR library
added a new file ` Lifecycle . java ` to handle network errors and log network errors to improve network error handling and user feedback in the application
updated the ` addURLToDownload ` method to handle 404 responses and improved logging to enhance error handling and provide clearer debugging information during
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
added support for retina rendering in PJOGL to enhance flexibility in rendering by allowing different screen resolutions
allow user to set initial value for project ( # 3550 )
refactor DiskDocValuesConsumer to utilize BlockPackedWriter for writing values to improve performance and memory efficiency during data writing
updated DefaultRouteBuilder to use originatingType instead of ArrayList and changed routesByStatus from Collection to TreeSet to improve type - safety and ensure
removed unnecessary data tracking and simplified response creation in GoAwayTest . java to streamline code and improve performance by eliminating unnecessary data
added support for setting properties for map objects in ReflectionUtils and created a new FluentSetterBean class to enhance bean manipulation capabilities and improve test coverage for
changed the return type of the ` post ` method from ` ListenableFuture < ? > ` to ` ListenableFuture < HttpResponse > `
updated file URL parameters in FileSortByExpressionTest and added prepareFolder method in FileSortByIgnoreCaseExpressionTest to improve code clarity and
replace ` mLastAppearedTaskTarget ` with ` getLastAppearedTaskTargetId ` in ` GestureState . java `
added options for writing image scaling information in RtfDocumentSettings . java to enable flexibility in image scaling settings for different text formats
added support for aggregate function name in path addition in TSServiceImpl . java to enhance functionality by allowing aggregation of paths
updated test classes to extend WithNestedTests instead of LuceneTestCase and added cleanup method to improve test structure and ensure proper cleanup of system
added logic to set the XCapEnable box and update the xCapServerUri value based on registration status to ensure the XCap server URI
ww - 3550 add option to handle exception during dispatch
added stopTextEditing method to CodenameOneImplementation , Display , and TextArea classes to enable text editing functionality within the application
nifi - 9331 fixed npe in controlrate when group attribute name be null
updated the ` showDialog ` method to accept a ` isNewComponent ` parameter and introduced a checkbox for always opening the preset in ` ComponentConfig
fix a race condition when send chat message to the client .
added a conditional check for the operating system type in HTMLDataFlavorTest . java to ensure the test is only run on Windows to avoid
added SQL _ SERVER _ SNAPSHOT constant to the SERIALIZABLE enum in TransactionIsolationLevel . java to support SQL server snapshots for improved
added a loop to wait for a new record ID to be offered before proceeding to ensure that the process does not hang indefinit
use java . util . zip . zipfile instead of java . util . compat . jreCompat
added null check for command class in RegisteredServiceSimpleFormController to ensure proper handling of null command classes to avoid potential NullPointerExceptions during service creation
updated disk failure policy from best _ effort to ignore in Config . java and added a new case in CassandraDaemon . java to improve disk failure
removed the public modifier from the RipperInterface and RipStatusHandler methods in RipperInterface and RipStatusHandler classes to
peerdiscoveryagent : do n ' t try to connect to 127.0 . 0.1 if ip address be 127.0 . 0
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the class by eliminating unused functionality
updated import statements and modified partition assignment method to include ClusterDataCache to enhance partition assignment efficiency by incorporating ClusterDataCache for better
simonstewart : remove the deletecontainer ( ) method , remove it from the container api
simonstewart : fix a bug in the defaultselenesecommand . parse ( ) .
chore ( gelly ) : fix flakiness in createglossarytests ( # 1389 )
updated schema reference references in ModelResolver . java to use Components . COMPONENTS _ SCHEMAS _ REF instead of hardcoded strings to
updated EntityDeletedEvent and IdentityZoneEndpointsMockMvcTests to use JsonUtils for JSON serialization to enhance code readability and ensure consistency in data
added support for gop format in FormatConfiguration and modified media handling in DLNAMediaInfoParser to enhance functionality to support additional media format
added a new file ` TestProfileReturnTypePrinting . java ` containing tests for method return type printing to facilitate performance testing of
added concurrent access to configLock in ParseConfigUtils . java to ensure thread - safe access to configuration data
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to utilize AcquireReleaseColumnsSegmentOperator to improve memory management by ensuring proper
simonstewart : fix flaky test in firefoxprofiletest . java
added @ return statements and modified the return type of getSystemBars method in HasAndroidDeviceDetails . java to improve code clarity and provide
remove checkfornull from projectstats . addbug ( buginstance . isdead ( ) )
bugfix # 216323 , do not use ` ` disabled shadow ' ' color when run with gtk
remove redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check to return a date in the future when no day is set to ensure that weekly actions do not return dates in the future
replaced the upload button with a menu item for multi - item uploads in ShareActivity . java to streamline the upload process by utilizing
refactor multiple Java classes for improved clarity and consistency to enhance maintainability and readability of the codebase
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata from
added serialization support for Writable types in CrawlDbReader to enable proper serialization of Writable objects in JSON format
[ ci ] remove unused test class
updated the component annotation to include a service configuration for MDNS discovery to enable better management and configuration of the MDNS discovery service
added null check before scrolling to the position in ChatViewerFragment to avoid potential NullPointerException when messageItem is not present
updated ForkJoinPool instantiation in TestBPIndexReorderer . java to utilize ForkJoinWorkerThread for thread management to improve concurrency handling
removed redundant assertions in RoleCommandOrderTest . java to streamline test code by eliminating unnecessary checks
added methods to restore and restore local information from table info in PartInfo . java to ensure that local information is properly managed during serialization
[ hotfix ] fix checkstyle violation in jvmutils
added transformation and scaling transformations for sprite rendering in BitmapFontTest . java to enhance visual rendering by applying transformations and flipping the logo sprite
[ hotfix ] [ table - planner - blink ] do not check built - in aggregate in streamphysicalpythongroupwindowaggregate
add miss follow on fix for 7816 only apply to cassandra - 2.1 branch in 763130bdbde2f4cec2e8973bcd5203caf51cc89f
added a method to retrieve unreachable token ownership in Gossiper to improve token management by identifying all unreachable endpoints
[ geosymbolic ] fix multiplication problem with x ^ ( x ^ ( x ) )
updated content type handling in FormAuthenticator and SavedRequest classes to ensure a default value is set when content type is not explicitly set to improve
refactor XToolkit to improve memory management and error handling to enhance code clarity and ensure local graphics environment is not null to prevent potential
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
refactor lock management in EnvironmentImpl to use ReentrantReadWriteLock instead of Object to improve thread safety and reduce synchronization overhead
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` in ` IdentityProviderEndpointsMockMvcTests
updated job scheduling to use an ExpireJob and added null check for timestamp to improve job management and prevent potential null pointer exceptions
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 5370 ] add heartbeat for rebalance change ( # 5371 )
chore ( core ) : add ` ` detach . mkdir . mode ' ' property ( # 2799 )
[ java ] add a test to ensure that the follower can remain stable when there be a slow follower .
change default label to ` ` auth ' ' instead of ` ` authors3 ' '
updated CxxPlatform usage in DBinaryDescription , DLibraryDescription , DTestDescription , and DTestDescription to utilize CxxPlatform
refactor OAuth service initialization and add dispose method in GoogleTTSService to improve resource management and ensure proper cleanup of services
camel - 16400 : fixed the issue of camel - file - on - completion not work with dynamic file name . thanks to b
added a new boolean field ` reopenReaders ` to the ` SolrConfig ` class and modified the condition in ` SolrCore ` to conditionally
bug fix : add dialect attribute to mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a duplicate method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor condition classes to implement an interface instead of an abstract class to simplify the code structure and enhance type safety
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve search performance by using a
removed unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a new method ` providesDirectNearbyUploadPreferences ` to ` CommonsApplicationModule ` to provide access to shared preferences for direct near
added support for handling the " SYSDUMMY1 " database mode in the parser to enable compatibility with both MySQL and Derby databases
updated logging statements and added conditional logic for sampler refresh in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , and SamplerAutoConfigurationTests
added a lastPid field and modified properties retrieval in POIXMLProperties . java , and added a test case in TestHPSFPropertiesExtractor
fix for geotiffreader to correctly handle float . negative _ infinity
updated the execution logic in CliDriver to handle exceptions and improved UUID generation in SessionState to enhance error handling and ensure unique identifiers for better
replaced ` Executor ` with ` Scheduler ` and refactored ` httpExecutor ` with ` Scheduler ` in ` MockRestAdapter ` to
updated the ` selectByRuleIdSet ` method to return a partitioned list of rules to enhance code readability and provide a default implementation
added a method ` addExitDescription ` to ` ExitStatus ` and refactored error handling in ` AbstractJob ` and ` AbstractStep
fix npe in multiblockrenderhandler . right _ click _ block event when the player be the minecraft client .
rename ` columnFamily ` to ` columnFamilyColumn ` for clarity to improve code readability by using a more descriptive variable name
removed unnecessary import statement for Math . min in PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` for better encapsulation to improve code
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
updated the parameter name from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more
removed assertion from AdvServiceTest . java to streamline test code by eliminating unnecessary assertions
updated key handling logic in MappingMongoConverter . java to improve clarity and correctness of key conversion logic
updated Timber logging format in NearbyMapFragment . java to improve readability of logged messages for better debugging
camel - 16400 : camel - core - dsl - add support for camel - core and camel - core - dsl . thanks to
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields in FuzzyLikeThisQueryTest to
refactor the ` writeApplicationsLinks ` method to accept a boolean for tabularList to enhance flexibility in displaying application links based on whether the
[ ds - 3952 ] remove dependency on dspace . dspace . dspace . identifierservicefactory . identifierservicefactory
updated assignment of bytes in VectorColumnAssignFactory to use bw . getLength ( ) instead of bytes . length to ensure correct length is used for
changed the return type of getDisplayScript from abstract to default to allow for future implementation of the method without requiring an implementation
simonstewart : fix flaky test on firefox
pdfbox - 4892 : reduce memory allocation , a suggest by valerybokov
added synchronization and error handling for empty active interfaces in NetworkConfigurationWatcher . java and added null checks in NetworkManagerListenerImpl . java to improve
refactor HSSFWorkbook to introduce a new method ` getAllEmbeddedObjects ` to improve code readability and maintainability by encapsulating
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a condition to check if the base font starts with " Symbol " to ensure proper handling of symbol fonts in the processing logic
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor LiveTvGuideActivity to use a new Calendar instance for managing current guide start and end dates to improve code maintainability and ensure
updated method invocation from ` getDeclaredMethod ` to ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes `
added library loading paths for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
refactor variable handling in FunctionParser to use a new method ` inverseOrPower ` and ` inverseOrPower ` to improve clarity and
[ gr - 20536 ] fix loop safepoint elimination with floating - guard .
refactor instance checking logic in TypeFrameModelingVisitor . java to improve clarity and maintainability to enhance code readability and maintainability
added a new LocalizedString class and refactored method argument handling in multiple classes to improve code clarity and maintainability by encapsulating
added a boolean field ` disableClasspathSearch ` and its getter / setter in ` ServerConfig ` , and modified the conditional check in ` Default
changed audio format fields to final in DataLine . java to ensure immutability of audio format properties and simplify array copying logic
change default value of retries ( ) from 0 to 2 in Reference . java and update related tests in AnnotationPropertyValuesAdapterTest . java to
added support for loading and processing settings in TexturePacker . java to enhance functionality by allowing users to specify a custom settings file
refactor AchievementsFragment to use AppCompatTextView for uploaded images and imagesUsedByWiki to improve UI consistency and clarity
added mock and end annotation processing and logger tests in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and
added a new property ` categoryinfo ` to the ` CategoryInterface ` class and modified ` MwQueryPage ` to include it to enhance
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error messages
updated TaskbarStashController to use taskbarAutoHideTimeout instead of NO _ TOUCH _ TIMEOUT _ TO _ STASH _
added a check for the ' ^ ' character in the signature validation in GenericSignatureParser . java to ensure that exceptions are thrown for already thrown
updated access flag handling in ClassVisitorDriverFromElement and added new test cases for stubbing interfaces and enums in StubJarTest to ensure correct
added null checks and improved null handling in IntervalFilter and LowpassIntervalsSource to enhance code robustness and prevent potential NullPointerExceptions
added tests for the ` makePopulatedMap ( ) ` method in ` MapInterfaceTest . java ` to ensure that the iterator behaves
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization and deserialization
updated the timestamp from epochMilli to epochSecond in ImageData . java to ensure the timestamp is in seconds instead of milliseconds for consistency
grobcov : fix locus2d ( ) for f2m
added key deletion for accounts in AccountRemovalJob . java to ensure security by removing private and public keys
refactor keep - alive handling in ` JDKAsyncHttpProvider ` and ` NettyAsyncHttpProvider ` to use a dedicated method to improve
fix postjoinmapoperation when map have no interceptor and lite member join
removed multiple processor instances of StandardInliningCDATASectionProcessor and StandardInliningCommentProcessor in StandardDialect . java to stream
removed the ` spillEnabled ` parameter from the ` LongHybridHashTable ` constructor and its usage in the ` BinaryHashTable `
refactor environment variable retrieval to use a separate method for better readability to improve code maintainability and reduce duplication in environment variable management
add check for null extension in defaultactionmapper to avoid npe
added SerializableMode import and modified import statements in Mockito . java and PluginSwitch . java to enhance compatibility with SerializableMode in Mockito
added nullability check for fieldInjectionPoint in AbstractBeanDefinition . java to ensure proper handling of nullable fields during dependency injection
added isolation level handling for SQL statements in the parser to enhance database compatibility and improve query execution reliability
added constants for HIVE _ SERVER2 transport settings and HTTP path in HiveConnection . java to improve code readability and maintainability by using
added a method ` isCacheable ` to the ` GlobalOrdinalsWithScoreQuery ` class to indicate that the query is not cacheable
added a new file TestStrangeControl . java that implements a test for StrangeControl functionality to facilitate testing of the Str
updated file names from " % s . json " to " % s . jsfile " and " % s . jslib " in Build
added selectionStart and selectionEnd variables to ShadowEditText . java to enable dynamic adjustment of text selection for improved user experience
refactor grpc server initialization to use try - with - resources for better resource management to ensure proper cleanup of resources and prevent potential memory leaks
added a new method ` use ` in ` Jooby . java ` and modified path validation in ` JoobyTest .
added a null check for fst in FreeTextSuggester . java to throw an exception if lookup is not supported at this time to ensure
updated output formatting in T4975569 . java and improved URL verification in T6729471 . java to ensure consistent newline handling
added support for loading the AbiWriter class in the JavacInMemoryStep class to ensure that the correct processor is registered for AB
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings about the use of BooleanMethod
log a warning if the service do n ' t have be stop
refactor EnergyEndpointer class for improved efficiency to enhance performance and maintainability of the code
updated the handling of displayed column keys in ComponentPresetChooserDialog . java to improve clarity and maintainability of the code by utilizing a
remove unused import of IOUtils from BazaarRepository , CVSRepository , and IndexDatabase to improve code cleanliness and reduce unnecessary
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the Constants . java file and DistanceUtils . java files to remove unused components to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve clarity and efficiency to enhance readability and maintainability of the code
[ gr - 13434 ] fix build - time initialization in jdk . internal . foreign . abi . fallback . initializeatruntime
fix : add unit test for create inlining role binding
added debug logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging during session cookie configuration
updated the calculation of ` fName ` to use ` Calendar . DAY _ OF _ YEAR ` instead of ` LOG _ DAYS ` to ensure
updated variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve clarity by using a more descriptive variable
added error handling for invalid option usage in JavapTask . java and created a new class T8033711 . java to improve
replaced ` Collectors . collect ( toList ( ) ) ` with ` toList ( ) ` across multiple files to simplify method calls and improve code
[ hotfix ] [ runtime ] change log level from error to warn in taskdriver
[ flink - 30613 ] [ network ] add support for tiered storage in inputgatespecutils . getmaxrequiredbuffersper
refactor status code checks into a separate method for better readability to improve code maintainability and reduce redundancy
added GL20 configuration to Cuboc and modified LwjglApplication instantiation to enable OpenGL support for improved rendering performance
remove unnecessary return type check in jimplebody . getunits ( )
replaced ` DefaultSourcePathResolver ` with ` Arg ` and updated imports in ` OutputMacroExpander . java ` to enhance clarity
fix test for logexceptionsqltest . assertnojobslefteventually ( ) .
added a condition to check if the input file path contains the " \ build \ " character in the MergeWordsListTask . java file to
[ # 7330 ] instructor : instructor : instructor : instructorfeedbackresponsecomment : show comment to recipient ( # 7
removed unnecessary whitespace in the isMixingNeeded ( ) method to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` containing a class ` A ` with methods ` saveInto ` and ` A `
replaced ` stream . skip ( start ) ` with ` IOUtils . read ( bytes ) ` in ` FilePreviewService . java ` to
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : connection
changed catch block from Exception to Throwable in CoreContainer . java to handle broader error types and improve robustness
hbase - 16462 lrublockcache . getcurrentsize ( ) should return 0 if no block cache be available ( # 5
removed unnecessary null check for taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to allow for a longer wait time
added CoinmateMetadataServiceRaw and CoinmateMetadataServiceRaw classes to implement remote initialization and metadata retrieval for Coinmate exchanges
[ mng - 6842 ] allow systempath to point at file within the project directory . basedir in defaultmodelvalidator
pdfbox - 4892 : avoid duplicate key assignment , a suggest by valerybokov
[ ptransform ] add displaydata to ptransform . setdisplaydata ( list < itemspec < ? > > )
replaced instances of ` DefaultSubject ` with ` assertThat ( Object ) ` for null checks in ` SubjectTest . java ` to improve
disable jdk . certpath . disabledAlgorithms in ClientJSSEServerJSSE . java to improve security by preventing the use of outdated
added error messages for subcommands and command groups in OptionData . java to clarify usage and improve user understanding of command group requirements
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling for unknown server errors and improved exception management in the ensureConnection method to enhance error reporting and prevent application crashes due to
updated sCheckingEvents assignment in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure consistent event handling
refactor exception handling in FileSinkOperator and SortedPartitionOptimizer to improve error logging and resource management to enhance error handling and ensure proper closure of
added diagnostic handling to the task execution in SchemaGenerator . java to improve visibility into diagnostic results for debugging purposes
replaced ` RuntimeException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a more
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a set to track loaded resource paths before scanning methods to improve efficiency by avoiding redundant scanning of resources
updated initialization logic in TestServiceUtil to handle null test instances to improve robustness by avoiding null pointer exceptions during service initialization
added null check for ` o ` in ` RoutingInBoundHandler . java ` and modified response handling in ` RoutingInBoundHandler . java
added an ` natIp ` field and improved logging messages in the ` EkeyUdpPacketReceiver ` and ` EkeyHandler `
updated imports in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , and Serializer classes to use ArrowByteBufAllocator to improve memory management
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP parser headers and bodies in HttpConnection . java and introduced a new test case in RFC2616BaseTest . java to
refactor subscription handling in MultiTimeout to use AtomicReference for upstream and requestedInitial to improve thread - safety and streamline subscription management
fix deadlock in leveledmanifest when use compaction _ limit
added an @ Test annotation to TestOrcTimezone1 . java to enable unit testing for the TestOrcTimezone functionality
refactor metrics matching logic to use a new method ` findMatch ` and ` findMatch ` for improved clarity and functionality to enhance
added error handling for JSON processing in PinotSegmentRestletResource . java and refactored ObjectNode usage in TraceContext . java to
added null check for columnClass before calling getDefaultRenderer in JTable . java and created a new Test6888156 . java file to
[ ideservice ] fall back to busybox if bash shell do n ' t
updated deleteWithoutSubscriptions from 10 to 1 in DatabaseCleaningService . java to optimize deletion process by reducing the number of subscriptions
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JUnitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
added transaction disable and fileMmapEnableIfSupported method calls in BTreeMapTest . java to ensure proper resource management during tests
updated iterator handling in SortedIntList and added a default constructor in SortedIntListTest to improve iterator management and ensure iterator is properly reset
added unregistering functionality in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ rocksdb ] change default writebuffer size from 4mb to 64mb in rocksdb configurable option
removed the ` true ` parameter from the constructor of ` Style ` to streamline the constructor by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to improve message handling by preventing encoding issues
[ beam - 8470 ] add json graph config to samzarunner ( # 12427 )
feat ( demo ) : use mouseinput . button _ left instead of vector3f . ZERO
refactor LoopRotateBadNodeBudget class to improve code organization to enhance maintainability and readability of the code
added type information parameter to the convertToMongoType method across multiple classes to enhance type conversion functionality and improve handling of nested polymorphism in
ggb - 1798 fix for ` ` i ' ' in linked geo
simonstewart : make sendkeytoactiveelement . tostring ( ) return ` ` [ send key to active ] ' '
added method getScaledInstance to handle negative image sizes and image transparency in AddAndScaleMultiImage . java to improve image scaling flexibility and
removed the ` extendArgumentCheck ` and ` extendWrapStore ` methods from the DBMaker class to streamline the code by eliminating
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated correctly
added backward compatibility for detected activity handling in multiple classes to ensure compatibility with backward compatibility while maintaining backward compatibility
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed unused import of Buildable from AaptPackageResources . java to clean up the code and reduce unnecessary dependencies
added comments to indicate unused variable indices in multiple Java files to improve code clarity by explicitly indicating unused variables
updated the exception message in WebSocketUpgradeHandler to include status and response status to provide clearer context for the error encountered during the upgrade process
reformatted the initialization of the blockMode variable in P11Cipher . java to improve code readability and maintainability
refactor Mockito class for improved readability to enhance maintainability of the codebase
updated permission checks for plot permissions in Merge . java to ensure appropriate feedback is provided when no plot permissions are granted
deprecate getConversationID ( ) method in HttpContentResponse , HttpRequest , and HttpResponse classes to deprecate the getConversationID ( ) method
replaced ` com . sun . speech . freetts ` with ` de . dfki . lt . unitselection . PhoneSet
replaced ` HashMap ` with ` LinkedHashMap ` in ` BaseSemanticAnalyzer ` and replaced ` HashMap ` with ` LinkedHashMap ` in ` Partition
refactor rendering handling in DLNAResource and Request classes to improve clarity and structure to enhance code readability and maintainability while ensuring
added repository management functionality to the DefaultPluginManager class to enhance the flexibility of repository management for plugins
( chore ) camel - cxf : cleanup application context after test
rename PhysicsClient . java file to improve clarity and maintain consistency in naming conventions
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable tests due to frequent failures
added file creation logic in ZipFile . java to enhance file handling functionality
added a deprecated method ` handleAll ( ) ` to ` TryType . java ` to indicate that the method should no longer be used in
added unit test for ChannelTest . java and changed the uid field to non - null by default in Channel . java to ensure that the Channel
added logging functionality and modified imports in GenericDAOImpl , ForumServiceImpl , and ReflectionUtils to enhance stack trace tracking and improve code readability
removed the @ Test annotation from FormLoginIntegrationTests . java to enable the test execution for the integration tests
refactor unparseList calls to conditionally handle parentheses in FunDefBase and ParenthesesFunDef to improve code clarity and
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to include cluster names and improved handling of
rename ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` to clarify the purpose of
updated JsonTreeReader to handle unexpected peeked values and improved exception messaging to enhance error handling and provide clearer feedback when encountering unexpected
added a new option for handling dash arguments in TestCommand and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest to ensure proper command
added new methods ` dedup ` and ` indexSolr ` in ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to facilitate
[ flink - 17014 ] [ examples ] add support for flink planner in streaming mode
added a call to clear the database in MssqlIntegrationTest . java to ensure a clean state before each test execution
updated display progress percentage and improved resource disposal logic in Progress . java and RSSReader . java to enhance user experience by allowing customizable
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added methods to write and close POIDocument objects in IOUtils to enhance file handling capabilities for writing and closing POIDocuments
updated print statements to include line breaks for runOptions , sketch , and exportClassPath in JavaBuild . java to ensure consistent formatting of output for
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods in ` ITextRenderer ` to
added LDAP authentication handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve user search functionality
added default ports handling in NettyHttpServer , DefaultRouteBuilder , and FilteredRouter classes to enhance server configuration flexibility by allowing dynamic
updated SnmpTargetHandler and AbstractSnmpTargetHandlerTest to use ThingStatus directly and improved mock management to enhance code clarity and
add check for instructors with submit privileges in the list to ensure only instructors with submit privileges are included in the list
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new code
refactor path extraction logic in FileResolverImpl . java and add a new file in WarFileResolverTest . java to improve path handling
updated log message format in DocumentsWriterPerThread . java to include docstores to improve clarity on the purpose of the newFlushed
fix i18n not be able to load i18n block in example .
updated conditional checks from stripWhitespaceX to stripWhitespaceY in ImageProcessor . java to ensure correct processing of whitespace based on user settings
updated the lazyWeakLock initialization to include a timeout of 1000 milliseconds to improve resource management by allowing more time for thread synchronization
added exactSearch parameter to MetadataIndexNode deserialization in TsFileSequenceReader . java and updated test assertions in MeasurementChunkMetadataListMapIteratorTest
removed the ` DateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService . java ` to simplify the
added preferred size adjustment for the pane in NavigationShareTab to improve UI layout consistency and visual appearance of the pane
replaced offset attributes with state management in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter to
rename UpnpAudioSinkReg , UpnpHandler , UpnpRendererReg , and UpnpEntryQueue classes to improve clarity and consistency
fix lenswarp crash when burst be collided
refactor JsonTest . java to use JUnit ' s Stream and TestFactory for JSON serialization to enhance testing capabilities and improve code readability
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed exception handling from throwing an exception to catching a broader range of errors to improve error handling by logging a warning instead of throwing an
updated KubernetesMockServer to use HTTPS instead of true to enable secure connections for the mock server
[ gr - 13434 ] fix bug in javalistingprovider . computestamp ( ) .
updated HTTP methods and headers in DefaultServlet and DefaultServletTest to support both GET , HEAD , and POST requests to enhance the servlet ' s
tika - 3748 -- fix for tika - 3749 , tika - 3749 , tika - 374
updated error handling in ShowFileRequestHandler to return a response instead of throwing exceptions to improve response management and provide more informative error messages
added exception handling for Throwable and InvocationTargetException in ReflectorClassWriter to improve error management and ensure proper exception handling in the reflector
added a new ` clamp ` method to the ` Vector ` class and implemented it in ` Vector2 ` to provide functionality for clamping vector
added OAuth2 authentication handling in the ChainedTokenGranter class to improve access token management by ensuring requested scopes are properly managed
refactor BC _ class to improve code structure to enhance maintainability and readability of the code
removed the setSaveFlags method from EditorBottomSheetBehavior . java to simplify the code and improve logging functionality
updated UaaUrlUtilsTest to use JUnit 5 annotations and changed method visibility from public to package - private to improve test structure and enforce
hhh - 14801 fix nativesqlqueryScalarreturn and nativesqlqueryimplementor javadocs
added a thread - safe access to font information in SunLayoutEngine . java to improve performance by avoiding repeated checks of the same font
replaced IntBigArray with IntArrayList in TypedSet . java to optimize memory usage and improve performance
danielwagnerhall : use session id instead of session id for test
refactor BrokerRequestUtils to improve code readability to enhance maintainability and reduce complexity in the codebase
added methods to process instances in a reversed order and improved error handling to ensure that instances are processed in the correct order for better reliability
updated method calls to use ` buildTarget . getBasePath ( ) ` instead of ` Cell . getBuckConfigView ( ) ` for path
http : / / issues . apache . org / activemq / browse / amq - 2272 - fix npe in echo
add keepalivemanager to keep keepalivemanager for service connection .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to improve performance by eliminating unnecessary floating -
added methods to retrieve and set physical type physical variations in VectorizationContext , Vectorizer , and TypeInfo classes to enhance vectorization capabilities by
move htmlassettranslator and stringsresourcetranslator to ' com . google . zxing '
updated conditional logic in OverviewState . java for handling overview actions to improve layout responsiveness based on device profile settings
added @ Entity annotation to BaseActivityEventEntity . java to enable persistence of activity events in a database
added tracing sections for launcher interactions and touch interactions in NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper to improve debugging
added a new file ` InvalidOptions . java ` to handle Java options to provide users with clear error messages for deprecated and unknown options
added logging for inconsistent display states in DisplayController . java to improve debugging and traceability of display mismatches
refactor OAuth20UsernamePasswordAuthenticator to use OAuth20Utils for retrieving client ID and client secret to improve code organization and reusability by
changed the default value of the ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` to enable the handling of servlet
added logic to set the status of ShortcutInfo to DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut status when updates
camel - 16400 : fixed issue with camel - seda with thanks to aaron
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods in Kernel . java and added batchUpdateStart ( ) and batchUpdateEnd
added HttpClient configuration and validation to ThirdEyeApplication . java to enable HTTP client management in the application
added sorting functionality to job instances in JpaJobPersistenceImpl and JobInstanceFetchRequest to enhance data retrieval by allowing sorting of job instances
updated the cancelCryptoFacilitiesOrder method to handle currency pairs for open orders to ensure proper cancellation of cryptocurrency facilitates
make sure keyboard be hide when click in algebra view
sulong : use native function for memmove ( ) in llvmheap . memmove ( )
reformatted code for improved readability and consistency to enhance maintainability and adherence to coding standards
ggb - 1346 set tooltip block to false in mode toggle menu
added support for customizable date and time styles in DefaultDateTypeAdapter and GsonBuilder classes to enhance flexibility in date formatting options for better
replaced " < UID : " with " < UID : " for playerSet in ListCommand . java to standardize the format of player
added a check to return the current instance if the list is empty to ensure safe handling of empty lists and prevent potential NullPointerExceptions
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper exception propagation for command - related exceptions
updated the ` getLikeExpression ` method to accommodate ` UDFRegExp ` as a parameter to enhance functionality to support regex matching in vector
added ` start ( ) ` and ` stop ( ) ` methods to ` StreamSupplierComponent ` and ` NativeStreamSupplierComponentImpl ` to
replaced the ` runChild ` method with a custom ` runChild ` method in ` LuceneTestCase ` to ensure all available locales
refactor multiple Java classes for improved consistency and organization to enhance code maintainability and readability
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by reducing duplication
camel - 16400 : camel - test - infra - blueprint : add a reference to the route builder to ensure that the route builder
nifi - 6792 : fix testexecutestreamcommand to check for exception
refactor ` returnTypeSubstitutable ` and ` returnTypeSubstitutable ` methods for improved clarity and consistency to enhance code readability
added a new enum ` ThrottleType ` and modified the ` processThrottled ` method to handle different throttling types to improve flexibility in
updated color assignment logic in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code clarity
renamed mmm Annotation and mmm AnnotatedElement files to ppp Annotation and ppp AnnotatedElement respectively to standardize file naming conventions for better
added a new model interface in the org . apache . poi . hssf . model package and modified Sheet and Workbook classes to implement
( chore ) camel - http : use camel _ filter _ pattern instead of hardcoded string
added a clearEntityManager property and corresponding getter / setter methods in JpaItemWriter and JpaItemWriterBuilder classes to enable configuration of entity
added null checks for shortcuts and improved error handling in multiple classes to enhance stability by preventing potential null pointer exceptions
updated instantiation of TwoDimensionalCollectionValuedMap to include an additional parameter to enhance functionality by allowing additional features when initializing the map
updated exchange specifications from " btc - e . nz " to " wex . nz " and changed exchange name from " btc - e .
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness and prevent potential NullPointerExceptions
added null check for ` files ` in ` SegmentInfos . java ` and implemented a new test case in ` TestIndexReader . java `
add test data builder to fix test failure ( # 3649 )
updated the calculation of the percentage value in DeviceHandler . java to handle negative values appropriately to ensure that the returned value does not exceed the maximum
update limit checks from 1 to 0 in RangeInputStream and RangeReader classes to ensure proper handling of zero limits and prevent potential errors
camel - 17000 : camel - jbang - print duration when load route from registry or directory .
fix a bug in hlchunksource . getnextchunk ( ) that do n ' t account for initial start time
updated test class names from ` NumericRangeFilterBuilderTestCase ` to ` TestNumericRangeFilterBuilder ` and ` NumericRangeQueryBuilderTestCase
[ flink - 1866 ] [ runtime ] fix the bug of statefuloperatortest
simplified bitmap shader shift assignment in Area and Line classes to improve code readability and eliminate unnecessary null checks
added database existence check for blockchain loading in Blockchain . java and removed unused imports in BlockchainTest . java to improve blockchain management and ensure
trim whitespace from the matcher ' s group value to ensure consistent formatting by removing leading / trailing spaces
set socket . setasync ( false ) to true and set socket . setasync ( false ) to enable async processing for improved performance
ggb - 1349 fix divider position issue in desktop ( web )
add metric for controller health check ( # 5368 )
added a method to hide shared avatars in the LocalFileListAdapter to improve user interface by reducing visual clutter
remove duplicate @ clientbundle . source ( ) from mebisresources
updated conditional checks for argument lengths in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing
fix for http : / / issues . apache . org / activemq / browse / amq - 2272 - loginterceptor
replaced CountDownLatch with an assertion check for finished spans in EventBusTracingTestBase to streamline the test logic to directly verify span completion without unnecessary
refactor locale handling in QueryParser to use Locale . getDefault ( ) to improve flexibility and encapsulation of locale management
replaced ` Arrays . asList ` with ` Collections . singletonList ` and replaced ` HashSet ` with ` LinkedHashSet ` in ` FieldSetComponent `
[ jbrules - 1342 ] make mannerstest more robust ( # 1340 )
updated unauthorized handling in PKIXRevocationChecker and added OCSPUnauthorized class to improve security by enforcing stricter validation of OCSP responses
added serverState management and modified sleep duration in SSL . java to improve server responsiveness and error handling
nifi - 2262 : add sourcecounter to track the number of open connection
add a new method ` fields ( ) ` to ` executionstrategy ` , ` executorserviceexecutionstrategy ` , and ` executorserviceexecutionstrategy
refactor the ` createDefaultJavaPackageFinder ` method to return a ` ImmutableSet < String > ` instead of a ` ImmutableSet < String > `
replaced direct instantiation of Writer with PrintWriter in ScriptExecutable . java to improve output handling by utilizing PrintWriter for better performance
[ hotfix ] [ test ] fix flaky test in filesourcetextlinesitcase
added handling for DataTable in JRubyStepDefinition . java to improve compatibility with Cucumber data table handling
updated visibility settings in SearchImagesRenderer and refactored image node retrieval logic in ApacheHttpClientMediaWikiApi to improve UI responsiveness and
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and clarity of the codebase
updated error message in FormulaParser to provide clearer context for parsing errors to improve error reporting for better debugging and user understanding
added bindAddress methods and updated socket connection handling in WebSocketClient . java to enable better management of socket addresses and improve connection management
[ java ] delete aeron directory when close the clustered medium driver .
refactor size handling in WidgetGroup to use setSize method instead of hit method to improve code readability and maintainability by reducing redundancy
updated session fixation attribute check in HttpSecurityBeanDefinitionParser to use Boolean . valueOf for better null safety to ensure proper handling of session fix
refactor LALogicLinesFragment to use a switch statement for edgeOption handling to improve code readability and maintainability by separating
danielwagnerhall : use a linearbackofftolftolftolftolftolftolftol
added URI template attribute handling in ` TraceExchangeFilterFunction ` and modified ` ClientResponseWrapper ` to include ` HttpMethod ` and ` httpRoute `
use integer . min _ value instead of int . min _ value in precompactedrow
updated the return value in ICC _ Profile and modified color conversion logic in ColorConvertOp to ensure correct handling of rendering intents and add
[ 3.0 ] feedbackcontributionquestiondetails : add ` ` isnotsure allowed ' ' parameter to feedbackcontributionquestiondetails
added calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java `
added @ SuppressFBWarnings annotation and removed unnecessary Serializable interface in KafkaExactlyOnceSink . java and KafkaRecord . java to improve code quality
added PGConnection to the connection proxy in PooledConnectionImpl . java and implemented a test for PGConnection in BaseDataSourceTest . java to
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log messages in TokenAuthenticationHandler . java to provide more informative information about the absence of a token encryption secret to improve clarity
deprecate hazelcast . get ( ) in favor of hazelcast . get ( ) in favor of hazelcast . get ( )
added functionality to handle unlimited key JCE requirements in Ambari management controllers and refactored command report creation in AbstractServerAction to
added support for reading and writing an Iterable in NamedListCodec to enhance functionality and ensure proper serialization of NamedList objects
fix npe in migrationmanager # assigncompletelylostpartitions ( )
added a schema inclusion rule to the options in ApiExample . java to enhance schema validation by restricting access to public elements
updated the expected value of the mean and var in StreamExpressionTest . java from 3.0 to 7.0 to reflect the change in
updated coordinate sequence handling in SDO and added new test cases in SDOCreateTest to improve robustness of coordinate sequence creation and ensure valid
added methods to retrieve base name and dimension count in ConstantPool . java to enhance functionality for handling array type information in the ConstantPool
added a method ` setDebugEvaluationOutputForNextEval ` to ` FormulaEvaluator ` , ` SheetUtil ` , and ` XSSF
test : migrate java version check to junit 5 ( # 4649 )
removed the ` isLiveTvDirectPlayEnabled ( ) ` parameter from ` LegacyMediaManager ` and ` PlaybackController ` to simplify
added a return statement to the DynamicStyleBar class to ensure the method exits early under certain conditions
added logging statements for setting and resetting the repl dump state in Utils . java to improve traceability of database property changes for debugging purposes
refactor ReactiveAuthorizationManager for improved authorization handling to enhance security and maintainability of the authorization process
added a check for both isObject ( ) and isBoolean ( ) in MethodEmitter . java to ensure proper handling of boolean types alongside objects
rename llvmpointernuller to llvmpointernuller and make it public .
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
add unit test to verify transaction aware cache proxy
added a method to calculate the bounding box in the Mesh class to enable dynamic bounding box calculations based on vertex attributes
added a new ` TargetHashFunction ` enum and modified the hashing logic in ` TargetsCommand ` to allow users to specify different hashing algorithms for
refactor DefaultConfigurationProperties for improved configuration management to enhance maintainability and readability of the configuration settings
updated highlight color and alpha settings in ListViewMultiChartActivity and added a conditional check in BarChart to improve visual clarity and ensure highlight
updated the assignment of pgSgPathPlanMap in ClusterPlanRouter . java to ensure the correct mapping of the temporary pg path plan is
( chore ) camel - infinispan : fix camel - infinispan test failure
added file locking mechanism in MavenArtifactFetcher and MavenDependencyResolver to prevent concurrent access issues during artifact fetching and dependency resolution
updated fragment shader configuration in SpriteBatch . java to ensure compatibility with OpenGL ES environments
hbase - 26462 refactor rsgroupinfo to use set instead of SortedSet
added a try - catch block and modified logging behavior in TagLibConfiguration . java to improve error handling and reduce log verbosity during debugging
updated version handling in CustomAnalyzer and added a new test for version - aware token filtering in TestCustomAnalyzer to ensure compatibility with Lucene version
added a test method to read and validate the package archive info retrieval in ShadowPackageManager to ensure that the application info accurately reflects the
replaced direct calls to ` MethodUtil . invoke ` with ` MethodUtil . invoke ` and added package access checks in multiple Java classes to
added new import statements and modified progress listener functionality to include ProjectConfigurationStartEvent and TaskStartEvent to enhance progress reporting by including specific operation types
removed synchronized block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
simplify the initialization failure check in hikariconfig . java and add config . getinitializationfailtimeout ( )
removed the method ` getResult ( int timeOut ) ` from the ` getResult ` method and added an error handling method to streamline the API
changed the ` isNative ` field from ` boolean ` to ` transient ` in ` JMethodIdTable . java ` to ensure that the `
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in multiple files to clarify the purpose of the handler related to
updated variable declarations in JspContext , JspIdConsumer , and TagAttributeInfo classes to improve code clarity and maintainability
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for better troubleshooting
updated variable names and method calls for table sink and source options in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve
added null check for the registrant repository in UsersPanel . java to improve error handling and provide clearer feedback when the repository is not found
added support for " . OTF " and " . TTC " files in SunFontManager to enhance font name recognition by including O
refactor type comparison logic in AnnotationMatcher . java to improve clarity and maintainability to enhance readability and maintainability of the code
replace " OFF " with " SEVERE " in Grep . java to indicate a severe state instead of a normal state
added a check for debug level before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when
replaced ` includes ` and ` excludes ` with a new ` excludes ` list in ` SurefirePlugin . java ` to ensure that
added methods to check if the folder is open and move to the default screen on home intent to enhance user experience by allowing navigation to the home
updated maximum bitrate from 110 to 30 in PMS . java to optimize memory usage for better performance
removed duplicate ` getOptions ( ) ` method from ` CommandLineParser ` to streamline code by eliminating unnecessary duplication
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure cleaner output by removing unnecessary whitespace
updated the output filename format in XOMParserTest . java to improve clarity and consistency of output file path
removed the process . pid ( ) from the error message in ProcessBesuNodeRunner . java to simplify the error message by focusing
added ` getLoadedMusic ` and ` getLoadedSound ` methods to ` MusicLoader ` and ` SoundLoader ` classes to
updated type casting in OnBeanCondition . java to use generics to improve type safety and avoid potential runtime errors
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enable screen recording during tests for better debugging and analysis
added a null check for the lrPauseButton before setting it to false in CPUFeature and MemoryFeature classes to ensure the button is not selected
replaced the ` accountsPrefCategory ` with a ` mAccountsPrefCategory ` and refactored the ` createAccountsCheckboxPreferences ` method
do n ' t send the available presence when the user leave the room .
modified StringBuilder initialization to accommodate varying utflen values to improve memory efficiency by allocating appropriate initial capacity based on provided utflen
disable statsd export by default in integration test
refactor InterruptedException handling in the code to improve code readability and maintainability
refactor ServiceTicket class to improve code readability to enhance maintainability and ease of future updates
refactor connection check logic in ConnectionCheckOperation . java for improved clarity and efficiency to enhance readability and maintainability of the code
updated the conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to improve type safety and prevent potential conversion errors
[ ds - 3952 ] fix the test case of itemowningcollectionitemfilter plugin
modified the handling of the AuthenticatorActivity in PasscodeManager to ensure correct activity reordering behavior
refactor : remove @ deprecated annotation from patternparameterconfigurator ( # 3995 )
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added a null check for the drawable to
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests due to known issue LUCENE - 4488
added null check for the root variable and collected components in DynamicStyle . java to ensure stability by preventing null pointer exceptions when the root
add the ability to save confusion matrix in testclassifier , testSentence , and maxenttagger
bug 61657 - do n ' t overwrite last _ sample _ ok in thread context
added unit tests for the ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadset ` to ensure correct functionality
camel - 16400 : fix typo in propertybindingsupport . autowire and propertybindingsupport . autowired
added " clone " and " finalize " methods to the objectMethods set and modified conditional logic in ResultObjectProxy . java to enhance object method
added null check for counters in IntegrationTestBigLinkedList . java to provide clearer logging for insufficient YARN configuration
[ gr - 13056 ] add support for refering object in debugger .
updated the filter in the SamlIdPServicesManagerRegisteredServiceLocator class to ensure the registered service matches the specified service ID
added null check for getActivity ( ) before calling runOnUiThread to prevent potential NullPointerException when getActivity ( ) is null
rename logger to logger for consistency across classes to improve readability and maintainability of the code
added stringType property and getter and setter methods in DatabaseAdaptor and JDBCSessionDataStore classes to allow customization of string type for database operations
updated assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to ensure
refactor thread name handling in ` CliDriver ` and ` SessionState ` to use ` updateThreadName ` and ` resetThreadName `
updated TaskletAdapter . java file to improve task processing efficiency
drools - 4855 dmn 2.0 dmn 1.0 dmn 2.0 dmn 1.0 dmn 1.
fix ( opengl ) : disable splash progress on macos
added tooltip text for the CGCP checkbox in RocketPanel to improve user experience by providing context - sensitive help
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add miss mnemonic support for reload / reload action ( # 5370 )
ticket # 2506 : use ` ` hasspreadsheetlabel ' ' instead of ` ` isspreadsheetlabel ' '
corrected a typo in the BRIGHTNESS _ FACTOR assignment in BindingConstants . java to ensure accurate calculation of the percentage factor
sscm history parser : add context to revision , not just branch
added an ` isAdmin ` parameter to the ` createUser ` method and implemented user listing methods in ` HomekitAuthInfoImpl ` to enhance user
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and
replaced ` String ` with ` String ` for logging messages in ` DynatraceExporterV2 ` to improve performance by avoiding
updated method names from ` runnable ` to ` task ` in ` Context . java ` , ` Request . java ` , and ` Response .
add a setcapabilitiesspongebuilder method that deserialize the capability from a nbt tag .
[ mng - 3947 ] [ regression ] configuration of plugin execution with id ` ` default ' ' pollute configuration of standalone plugin execution from
refactor contract creation logic in Wallet . java and TriggerSmartContractServlet . java to improve contract handling and validation to enhance contract creation logic and
added package - info . java files for various packages in the application to improve organization and clarity of package - level documentation
modified the ` add ` method in ` DocumentsWriterDeleteQueue ` to handle concurrent modifications to the ` tail ` node to improve performance by
added a check for duplicate JavaFileObject files in JavadocTool . java and refactored argument handling in T7091528 . java to
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPv6
added support for adding new user parameters in the LoginServerTokenEndpointFilter class to enhance flexibility in handling multiple user parameters during login
added a new constant C _ KEY and modified language creation logic in LanguageFactoryTest . java and CPPParserTokenManager . java to support
replaced instances of ` LinkedBlockingQueue ` with ` MoreExecutorService ` and introduced a new ` MoreExecutors ` class to improve thread management
added HTTP headers for " No - Cache " and " Expires " in the LoginService and FormAuthenticator classes to ensure proper handling of HTTP responses
add the exception message to the error log when an error occur .
updated import statements and modified test class names in HSSFTests . java and TestEmptyDocument . java to enhance test coverage and improve cl
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before obtaining the class directory to avoid potential NullPointerExceptions when the output is null
added access control priority for resource resolution in Java2DRenderer . java to improve resource control execution order for better resource management
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the application does not fail on certain fonts on Windows machines
updated HotspotThreadMBean to be final and added CPU time validation logic to improve thread CPU time validation and enhance error handling during CPU time
added checks for empty comments in TabsAndIndentsVisitor to ensure that whitespace checks are performed only when comments are present
updated assertions in SimDistribStateManager and TestTriggerIntegration to increase expected values for collectionRate and totalNodeRate , and totalReplicaRate
changed comparison logic from ` equals ` to ` equalsIgnoreCase ` across multiple files to allow case - insensitive comparison of file names regardless of their case
added a method ` getString ` to retrieve a string value from a map to provide a default value when the key is not found in the map
added date and time formatting for military time in TweetActivity . java to improve date display consistency based on user settings
nifi - 1059 : return an empty list if there be no connection
refactor focus request logic in DetailFragment . java to use a dedicated method to improve code readability and maintainability by reducing duplication
fix file : / / to make it work on window
do n ' t create a new matrix every time the solve ( ) method be call
added import statement for Message in GenericMessage . java to utilize Message class functionality in the integration process
updated SQL queries in PostgresConnector , TaskAttempt , and MapReduceJobHistoryUpdater to use a new join method to improve code readability
updated file filter selection logic in AquaFileChooserUI . java to ensure only valid file filters are processed to improve user experience by prevent
reformatted code for consistency and readability to improve code maintainability and clarity
modified the ` toFormulaString ` method in ` ArrayPtg ` and added a new test case in ` TestArrayPtgTest to
updated import statements in PGtokenizerTest . java for consistency to enhance readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes to improve code clarity and ensure correct functionality
added sequence creation functionality in AddAutoIncrementChange . java to support PostgreSQL ' s auto - increment column support to ensure compatibility with PostgreSQL ' s
updated byte handling in DataInput . java to use bitwise operations instead of bitwise operations to improve clarity and correctness of byte manipulation
updated assertions in ImageParserTest . java for retrieving dimensions to ensure accurate representation of pixel spacing in test cases
updated the parent assignment in Component . java to ensure the correct parent instance is retrieved from the parent object
reformatted import statements across multiple Java files for consistency to improve code readability and maintainability
replaced ` NativeCrypto . ENGINE _ finish ` and ` NativeCrypto . ENGINE _ free ` with ` NativeCrypto . ENGINE _ init `
added a new iteration method and updated related classes to handle iteration events to enhance control over iteration functionality and improve code clarity
added release of HttpContent and fileUpload resources in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are properly cleared during test execution
modified URL handling in BrowserActivity to check if the URL contains " Twitter : / / " to ensure proper launching of activities based on the
added a method to await the host status in DeploymentGroupTest to ensure proper synchronization during tests
changed logResult from false to true in VisibilityController . java to enable logging of allowed labels for better visibility control
updated the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing more retries
removed System . out . println ( result ) from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java
added support for the " fraction " resource type in the PackageResourceLoader and a new Converter class for parsing fraction values to enhance the resource management
removed file write confirmation check from BasicFrame . java to streamline the code by eliminating unnecessary checks
added checks for null values in the ` findNewerDependencyVersion ` method to ensure that the ` tagGroupId ` and ` tagArtifactId
hbase - 25958 use quotabedexception instead of donotretryioexception
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
refactor TestFuzzPreLoop . java for improved readability to enhance maintainability and facilitate future development
added a condition to set f0 to 0.0 if it is negative to ensure f0 is always non - negative to prevent potential errors
added null checks for ` pkColumn ` and ` fkColumn ` in ` SchemaRetriever . java ` and ` TableRetriever . java ` to
remove the clearEncoders ( ) method from inputbuffer and add a method to get the charset from the inputbuffer .
added preferences handling for empty screens in Workspace . java to enable or disable empty screen functionality based on user preferences
added a warning log for using cucumber - cdi2 or cucumber - jakarta - cdi in Needle
refactor theme handling in ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime to improve code clarity and functionality to enhance
updated error messages in VerifyFast . java to use Arrays . toString ( ) for better readability to improve debugging clarity by providing more inform
no effective change - code cleanup - no effective change
updated property handling in CodeGenerator and added prototype functions in Global to improve prototype management and ensure proper encapsulation of prototype properties
updated the shuffle method in TestFilterDirectoryReader to include a random seed to enhance randomness of the readers during testing
updated display name retrieval logic in UsersAndGroupsSearchProvider to differentiate between remote clarification and known remote clarification to improve user
updated the path formatting in CookieRetrievingCookieGenerator to include a default value if the path is blank to enhance robustness by preventing null
updated code formatting in Jvm and JvmJvmstatModel classes to improve code readability and maintain consistency
updated cache name assignment to use ` config . getTotalBackupCount ( ) ` instead of ` config . getBackupCount ( ) ` to ensure
updated comparison logic in ValidationResult . java to include page number validation to ensure that the page number is not equal to the corresponding page number in validation
added a condition to check if the current instance is the same as the current instance in the UIDropdown class to ensure that the highlighting
fix checkstyle issue in soundutil . playsoundatlocation Except . java ( # 711 )
refactor ApplePackageDescription to use getAppleCxxPlatformFlavorDomain ( ) instead of getPlatformFlavorDomain ( ) to
simonstewart : add test to verify that clickhouse do n ' t support tab separation
rename ` onConnect ` method to ` onAccept ` in ` ServerSessionListener . java ` to clarify the method ' s purpose
rename EnglishPTBTreebankCorrector class to improve clarity to enhance code readability and maintainability
added a new file ` TestGetLoggerNPE . java ` to test logging functionality to handle potential NullPointerExceptions when accessing the logger
added a ` getData ( ) ` method to ` PathSharingContext ` and updated references to ` null ` in multiple classes to improve thread safety
[ gr - 13434 ] fix checkstyle violation in espressorootnode . java
added support for the " NEXT VALUE FOR " syntax in NextValExpression and modified related classes to enhance SQL parsing capabilities to support multi - row
improve error message when resource bundle be not pre - cached
refactor buffer removal logic in BoundedLocalCache . java and add a new test in BoundedLocalCacheTest . java to improve cache
added leverage level parameter for Leverage _ Level in QuoineExchange and implemented order direction in QuoineNewMarginOrderRequest to
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class with properties and read - only properties to enhance property binding functionality
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface and updated display mode handling to
added null check for buttonsAwatingRelease in Tabs . java to ensure proper cleanup of UI components
refactor wrap width calculation to use a dedicated method to improve code readability and maintainability by encapsulating width calculation logic
corrected a typo in the error message from " argomento " to " argomento " in XSLTErrorResources _ it .
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to ensure predictable iteration order for parameter values
refactor return statements to use String . format for string formatting to improve code readability and maintainability by standardizing string formatting
simplified the namespace retrieval logic in StaxXmlPullParser . java to improve code readability and reduce unnecessary context retrieval
no effective change - remove unused config . nestedjoins
server : allow admin only to be specify by root admin only
added JavacFileManager and modified CompletionTaskProcesor to include a cursor parameter to enable caching of Java files based on the current
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT and XmlIOTest classes to use Hamcrest matchers instead of JUnit assertions to
improve nullability check of util . createhandler ( ) and util . textrenderer
[ log4j2 - 1343 ] fix incorrect offset in symbolmapreaderimpl ( # 1348 )
removed print statements from TermFilterTest . java to clean up the test output for better readability
removed the Reflection . java file and updated imports in Jooby . internal . guice . java to streamline the codebase by elim
refactor threadless executor to use getter / setter methods instead of direct instantiation to improve code readability and reduce dependency on the shared executor service
fix ( datetime ) : fix npe in dateformat . toformat ( )
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ kb and update related variable names to improve clarity and consistency in naming conventions
added a case for WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces to prevent cr
refactor loop structure in LotsOfEvents . java to improve code readability and maintainability
refactor conditional checks in TransclusionDecideRule . java for clarity to improve readability and maintainability of the code
remove versionutils . getmicronaut ( ) in favor of versionutils . getmicronaut ( )
added unit tests for the ` Area3DPtg ` formula type in ` TestBugs . java ` to ensure correct functionality of the `
fix mindiconfactory . getdescription ( ) to handle empty name .
added an ` internalStateHandled ` parameter to the ` onHomeIntent ` method in ` LauncherCallbacks ` to provide control over the handling
refactor the dependency tree retrieval logic in CxxBuckConfig . java to improve clarity and maintainability of the code
added functionality to show file details in multiple activities to enhance user experience by providing context - sensitive file details
updated method names from " $ apply " to " apply " across multiple files to improve consistency and clarity in function naming conventions
added randomization logic for byte size in MinimalEncoder and updated test assertions in HighLevelEncodeTestCase to improve randomness and ensure tests
updated header descriptions and parameters in SourceBuilder . java to include " | " and " | - " to improve clarity and consistency in the
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure UI updates correctly when data changes
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added new test cases in Collections . java to improve type safety and ensure correct
removed multiple getter methods from DefaultS3CrtAsyncClient class to streamline the code by eliminating unused properties
updated the error message in the doDudPasswordTest method from " DEF length truncated by 28 , " to " stream - out of bounds
add more information to the error message in hazelcasttestsupport # testcollectionsize
do n ' t throw bailout if there be an internal error .
ggb - 1357 make penimage2 and penimage2 non - deprecated .
refactor SQLXML class to improve code readability and maintainability
added a query parameter to the ` getOrderBook ` method in ` YoBit ` and updated its implementation in ` YoBitMarket
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to clarify the purpose of the exception
nifi - 11383 : fix npe in standarddataflow when use jackson with max string length
updated the retrieval of the enabled engines from a string to an empty string to improve robustness by avoiding potential null pointer exceptions
renamed the class ` FullIterator ` to ` WheelIterator ` for clarity and consistency to improve code readability and maintainability by
added error handling for formatting bug annotations in BugInstance . java to improve error reporting and provide clearer feedback on missing bug patterns
increased the timeout duration for chunk retrieval in LocalChunkProviderTest from 3 seconds to 10 seconds to improve test reliability by allowing more
changed the visibility of the uncomplete checklists menu item from true to false to ensure the menu item is not displayed in the user interface
refactor result map handling in DefaultResultSetHandler and add a new Contract class for testing purposes to improve clarity and functionality of result mapping in
added null checks for defaultHome and unregistering mOtherHomeAppUpdateReceiver in OverviewComponentObserver . java to ensure proper handling of package
added VertxGen annotation to PumpImpl . java to enable the use of Vert . x code generation features
removed unnecessary type casting for mContainerActivity in FileDetailFragment and OCFileListFragment to improve code readability and reduce unnecessary type casting
trim leading and trailing spaces from tokens in ConfigAttributeEditor and add a new test for trailing and leading spaces in ConfigAttributeEditorTests to ensure
refactor multiple classes related to auxiliary functionality to improve code organization and maintainability
[ gr - 13434 ] fix classloading issue in dynamichub . java .
updated database metadata handling to differentiate between " SYSTEM TABLE " and " TABLE " based on the presence of " pg _ " to ensure accurate
deprecate the constant TIER _ ENTERPRISE _ PLUS _ VALUE and update its usage in Agent . java and AgentProto . java to
updated RQST field description from - 1 to 1 in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore
added a new module - info . java file containing module exports and dependencies to establish module boundaries and dependencies for better encapsulation and modularization
updated the handling of fill states in SslConnection to accommodate both IDLE and WRITING states to improve the robustness of the
updated Log4j2LogDelegateFactory and LoggerFactory to improve logging functionality and added a new NoExceptionInInitializerErrorTest class to enhance
refactor VM and Java library handling in ExecutionEnvironment and Test7029048 to improve code clarity and ensure compatibility with Sol
rename ` ExecutableFindOperation ` , ` MongoOperations ` , and ` ReactiveFindOperation ` to ` MongoOperations ` and ` ReactiveMongoOperations
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to enable support for LibPQFactory in PostgreSQL connections
added a enabled annotation to the TestInterProcessSemaphoreEdges class to temporarily disable the test due to a known issue
refactor key handling in EditableResources to use a sorted list for improved readability to enhance code clarity and ensure consistent ordering of
added a new file ` OSvTerminal . java ` and implemented OSV terminal support in ` TerminalFactory . java ` to enable support for
added checks for " . gs " , " . gr " , and " . grs " files in ClassType . java to ensure compatibility
replace HashMap with TreeMap in DrillTestWrapper . java to ensure sorted order of elements during testing
added a condition to the for loop in XPathEntityProcessor . java to ensure that the loop does not exceed the bounds of names and values
refactor WebSocketPolicy class for improved clarity to enhance code maintainability and readability
changed the visibility of readPhoneStatePermission and accessWifiStatePermission from static to instance in ShadowTelephonyManager and ShadowWifi
log4j2 - 1343 - log4j2 - 1343 - log4j2 - 1343 allow resolution
updated type declarations for ClassVisitor and ClassVisitor in AsmUtil . java to improve type safety and eliminate unchecked cast warnings
added LoggingAuditService and UaaAuditService to log user authentication success and failure events to provide structured logging for user authentication processes in the U
updated temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to include null checks for temperature values to improve robustness
fix : do n ' t generate proxy for non - abstract class
camel - 16400 : httpendpoint should set proxy host / port on the system property http . proxyhost and http . proxyport
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding requirements
added jdkSerialFilter ( ) method to System . java to enable serial filtering for JDK instances
camel - 16400 : camel - jbang - log the capacity of the pool size when pooling be enable .
updated method calls from ` forceFinished ` to ` forceFinishScroller ` across multiple classes to simplify method calls and improve code readability
updated the ` ensureRealtimeClusterIsSetUp ` method to include ` rawRealtimeTableConfig ` and applied environment variables to enhance flexibility
added error handling methods to ValidationReport and refactored error messages in DisallowValidator and RefValidator to improve error reporting and provide clearer
updated inline QSB settings in InvariantDeviceProfile . java to use closestProfile instead of displayOption to improve flexibility in handling different display
replaced URL encoding with URL decoding in ` SortedArrayStringMapTest . java ` to ensure proper handling of character encoding and avoid potential issues
updated regex patterns in TransformSteps . java to include a wildcard pattern to improve flexibility in matching input scenarios
add null check for java2d fillRect ( ) to avoid npe
refactor timeout handling in FaultToleranceTest to use a configurable timeout value to improve flexibility and control over the timeout duration during tests
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
added a method to set the Docker image URL in the Environments class to enable dynamic image URL configuration for improved image management
[ drools - 7 ] add garbage collection to knowledgetest
updated multiple Java files related to AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock to improve code clarity and maintainability
replaced the ` createHardLink ` method with a new ` copyFile ` method for copying files to improve file handling by ensuring target and source
rename ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in method naming
fix ( mxnd ) : check all device before copy ( ) ( # 1558 )
added a condition to check if the XML document is being processed before visiting indentation and formatting statistics to ensure that indentation and formatting statistics are only
replaced InstrumentationTestCase with AndroidJUnit4 in NotesHelperTest and ReminderHelperTest classes to align with the latest testing framework
added new GasLimitRule , GasLimitRule , and ParentGasLimitRule , and modified rule addition logic in CommonConfig . java to enhance
changed the visibility of ` setupData ( ) ` from public to private in multiple test classes to restrict access to the ` setupData ( )
rename ` autocommit ` and ` runInTransaction ` variables from ` autocommit ` to ` runInTransaction ` to clarify the
added null check for the listener before closing the deframer to prevent potential NullPointerExceptions when the listener is null
[ flink - 23172 ] [ doc ] fix break link to task failure recovery page on configuration
added a new test method ` testIssue154 ` in ` SelectTest . java ` to validate SQL parsing and deparsing to address issue #
refactor Common class to improve code organization to enhance maintainability and readability of the codebase
refactor Launchable . java to use try - with - resources for better resource management to improve code readability and ensure proper closure of resources
[ hotfix ] [ table - common ] fix typo in javadoc
log an error when send kafka message to a topic
added PersistentPropertyAccessor and PersistentPropertyAccessorFactory to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to enhance flexibility
modified the ` setCoord ` method to return a boolean instead of void and added a new ` setUndefined ` method in ` GeoCoordSys
added scroll handling for swipe events in AskGestureEventsListener to improve responsiveness and user experience during gestures
modified comparison logic in NGramEstimator to include key comparison to ensure consistent ordering of elements based on their keys
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align
updated the method to retrieve folder icons from label state and cardinality to improve clarity and functionality by directly accessing folder icon properties
replaced calls to ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java to implement testing for loop predicates with different stress parameters to facilitate testing of loop
removed the selectionEndNode variable and added a setter method for the TransferHandler in SelectionHighlighter . java to streamline object comparison and enhance
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` classes to enhance string conversion functionality
camel - 19751 - camel - test - infra - account : disable test that do n ' t run reliably on apache
updated the condition for waiting for the single object in JansiWinSysTerminal . java to ensure proper functionality of the waitForSingleObject method
added null checks for the buffer before setting it in the setInBuffer method to prevent potential NullPointerExceptions when the buffer is not initialized
updated the expected value of the Solr core ' s dataDir property from " data / " to " data / " to ensure consistency in file path
updated conditions for operating system compatibility in AutoUpdaterServerProperties . java to support Windows and MacOS pre - 10.15 versions to ensure compatibility
replaced ` File ` with ` String ` for the lock name in ` Lock ` constructor to improve clarity by using a more descriptive
replaced ` appIcon ` with ` allApps ` in ` Overview . java ` to improve clarity by using a more descriptive
replaced instances of ` Invocable . InvocationType ` with ` ClientDatagramEndPoint . this ` and ` ClientDatagramEndPoint .
updated the GET _ STEP _ EXECUTIONS string to include a " order by Step _ EXECUTION _ ID " clause to enhance the retrieval
updated button handling logic in LwjglInput . java to include a check for unknown buttons to improve the robustness of button processing by
[ taskrestrepositoryit ] add test for submit _ approve and submit _ reject
replaced direct logger usage with a static final Logger instance in multiple classes to improve code readability and maintainability by reducing redundancy
updated access token expiration time parsing in ` SsoAccessTokenProvider ` and added a new test case in ` SsoAccessTokenProviderTest ` to
[ geos - 9770 ] do n ' t run geos - github test on window
added mock implementations for alarm suppression methods in GreetResourceMockedTest and OciMetricsCdiExtensionTest to enable testing of alarm
reformatted conditional statements in JFrame . java to improve code readability and maintainability
refactor MediaDatabase connection handling to use a try - with - resources statement to improve resource management and prevent potential NullPointerExceptions
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to streamline metrics initialization and improve code
updated file and folder handling logic in OCFileListFragment . java to improve output formatting and clarity to enhance user experience by providing clearer
changed the default value of " HashKnownHosts " from " yes " to " no " and changed the return type of ` loadKeys `
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new file ` ThreadFactoryTest . java ` to implement a test for thread creation in ` ThreadGroup ` to ensure that the thread
updated lock period handling in DelegateResourceActuator and improved expiration time calculation in ProposalUtil to enhance flexibility in lock period management based on
added a ticket object to the EditTicketPage class to enhance ticket management functionality
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimiss apps from predicted lists
updated constructors in various assertion classes to include type safety for selfType parameter to enhance type safety and eliminate unchecked cast warnings
added a new menu item for quote functionality in TweetActivity to enhance user experience by providing quick access to the quote feature
do n ' t throw an exception if interrupt be already start
rename ` codecPassthrough ` and ` codecPassthrough ` to ` decryptOnlyCodec ` in ` MediaCodecAudioRenderer . java
added a conditional check before offering failure in ServerHTTP2StreamEndPoint . java to ensure that offerFailure is only called if the result is
updated terminology from " Stiller Modus " to " Silent - Modus " in multiple languages to improve clarity and accuracy of
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for concurrent access to the class
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` RestAdapterTest ` to
reformatted error handling in ComponentPresetManager . java to improve code readability and maintainability
added a new configuration option HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES to HiveConf and updated test assertions to use
fix for ticket : 267 : update example text and audio effect on select .
[ java ] throw illegalstateexception for invalid session . getlastAccessedtime ( )
remove unused exceptionhelper class since it be n ' t use anymore
update key pair generator from 256 to 255 in JceX25519Domain . java to enhance security by using a stronger encryption algorithm
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest postings
[ hotfix ] [ runtime ] add debug log for empty checkpoint range header
added support for the OAEP algorithm in the OperatorHelper class to ensure proper handling of algorithm parameters for RSA / ECB / OAE
replaced instances of ` Platform . DARWIN _ AARCH64 ` with ` Platform . MACOS _ AARCH64 ` across multiple
added security exception handling for URI resolution in DebugSourcesResolver . java to improve robustness by catching security exceptions and logging warnings
simplified conditional checks for UNIX operating systems in AbstractTest . java to improve code readability and maintainability
updated error handling in FileUploadUtils and improved segment handling in UploadRefreshDeleteIntegrationTest to enhance error reporting and ensure correct management of segment
[ fix ] bufferutils . newdisposablebytebuffer ( ) should use bufferutils . newunsafebuffer ( ) instead of bufferutils
change the default value of the USE _ PIPELINE _ DOWNLOADER from false to true to enable the download functionality for the pipeline loader
updated Calendar . DST _ OFFSET setting in SimpleDateFormat . java and added a new Bug7130335 . java file with tests to ensure
refactor arrow navigation and page selection logic in AllAppsView . java to improve code readability and maintainability by reducing repeated calls to
cloudstack - 4898 : fix npe when return router when data center do n ' t have default hypervisor
refactor StringBuffer class for improved performance to enhance efficiency of string manipulation operations
added a new field ` ruleUID ` to the ` RuleResource ` class to associate the rule with its unique identifier
added a null check for the listener before unsubscribing to prevent potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the JSON string conversion logic to
make access _ table field public to allow access from other class .
update error message from " Resource ' does not exist . " to " NoResources found at location " in DataSourceInitializer . java to improve cl
resolve http : / / issues . apache . org / activemq / browse / amq - 2282 - throw ioexception instead
updated multiple Java files related to event directory and control classes to improve code organization and maintainability
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to improve handling of upgrade suspension
updated copyright year in FindsByCssSelector . java to reflect the current year
removed the variable ' wfields ' from Resolver . java to streamline code by eliminating unnecessary variable declaration
added a constructor to OAuthProperties to set default key sizes for encryption and signing in EncryptionJwtCryptoProperties . java to ensure consistent configuration for OAuth
hbase - 15912 addendum make htabledescriptor # getcolumnfamilycount ( ) return the size of the column family (
replaced the allowed resource alias checker with a lambda expression to simplify the alias check logic for better readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , and Serializable classes to improve code organization and maintainability
added an idle strategy to the Cluster interface and implemented a reset method in ClusteredServiceAgent to provide a mechanism for resetting the idle state in
updated currentChunkID increment and writer initialization in ChunkedWriter . java to ensure correct tracking of the current chunk ID during write operations
added a new file ` AbstractJobExecutor . java ` that extends ` JobExecutor ` to provide a base class for job execution in batch processing
replaced replay ( core ) with replayFuture and modified return statement in RecoveryStrategy . java to improve code clarity and ensure proper termination of
rename ` hugeStaticBase ` and ` staticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve
added a method to return service IDs based on the discovery status in AbstractConsulClient to ensure proper service ID retrieval based on the presence of
replaced the use of ` Math . floatToIntBits ( ) ` with ` SecureRandom ( ) ` for generating ` hashSalt ` to
add option to verify runtime compilation framestates during bytecode parsing .
updated the calculation of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure accurate time calculations for aggregation
added abstract method handling and tests in CallsRealMethods . java and creatingMocksWithConstructorTest . java to improve mock behavior for abstract methods
updated package access checks in NashornScriptEngine and Context classes to use Class instead of String for better type safety to enhance security by ensuring
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup and teardown methods to improve plugin initialization and ensure proper error handling
renamed ` dtm ` to ` model ` and updated font handling in ` ContributionListPanel . java ` to improve code readability and
added support for the " has - touch - interaction - service " request in QuickstepTestInformationHandler , TestInformationHandler , and Launcher
refactor connection handling in ConnectAction . java to use a mutex event for thread safety to improve error handling and ensure thread safety during the connection
updated types from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` and modified related methods to use ` BuildTarget `
added new file ` ArrayHelper ` , ` Comparables ` , ` Objects ` , and ` NativeRegExp ` to the ` javaemul
added support for the HOME and END key in the Less . java file to enhance user input functionality by allowing users to navigate to the home screen
removed synchronization around the retrieval of connected plots in PlotHandler . java to improve performance by eliminating unnecessary synchronization
refactor intent creation and sharing logic in Utilities . java to use Intent . createChooser to improve code readability and maintainability by simplifying
removed the public modifier from the Roster constructor to enforce encapsulation within the Roster class
added basic constraints extension to certGen to enhance certificate security by incorporating basic constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address failures caused by incorrect transformation offsets
simplified the assignment of precisionStep in TrieDateField and TrieField classes to improve code readability and maintainability by eliminating
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher to streamline the codebase by eliminating unnecessary components
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( " length " ) ` and ` getDeclaredField ( )
added logging for the destroying of the Hazelcast process in HzStartIT . java to provide visibility into process destruction during test
replaced instances of ` @ Singleton ` with ` @ ApplicationScoped ` and added a post - construction method to initialize the application settings to improve
updated value validation logic in Safepoint . java to ensure proper handling of negative and positive newValue values
updated thread name field type from charArray to stringOopToString in OopUtilities . java to ensure compatibility with Java ' s String type
updated DEFAULT _ RAND _ SEED from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90Hnsw
add support for java2d . stroke ( ) and java2d . font ( ) for java2d . stroke ( )
[ calcite - 5790 ] sqlvalidatorimpl . expanddynamicstar ( ) should return the result of expanddynamicstar ( )
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class and created a new method ` findInterestingChildren
added import for Messages and set the status code to zero in HTTPServer . java to improve error handling by providing a warning icon for HTTP status
fix ( opengl ) : remove deprecate method
[ gr - 3865 ] increase cycle count for amd64countleadingZerosnode .
( chore ) camel - as2 : fix nullpointerexception when content transfer encoding be not set
updated locale handling logic in Locale . java to improve localization support and enhance user experience
added a new button ` clearLog ` and a method to clear log messages in ` ErrorConsoleController ` , ` LogMessages ` , and
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated caption management methods to use LocaleHolder for better locale handling to improve flexibility in caption management based on user input
updated connection pooling logic and improved resource management in multiple test classes to enhance resource management and prevent potential resource leaks during database operations
simonstewart : add opera capability to the default driver session
added error handling for download failures in ManageJournalsPanel . java to improve user feedback when download fails
added multiple LIFX Switch and other features in the LifxProduct . java file to enhance the application ' s capabilities for better user experience
added async support for replica creation in OverseerCollectionProcessor and updated CollectionsHandler to utilize this new parameter to enhance asynchronous processing capabilities and
removed unused constants and refactored primary key generation logic in PostgresDatabase and PostgresDatabaseTest to improve code readability and maintainability
updated LogPanel and SummaryPage to use objectId instead of null to ensure correct repository reference is used for logging functionality
fix ( bone ) : fix npe in skeletoninter bone wire .
added a ` browserDestroy ` method to the ` AndroidImplementation ` class and modified the ` deinitialize ` method in ` AndroidImplementation ` to
added a wait for the " readApiTestViolations " collection in AutoScalingHandlerTest . java to ensure the test environment is active before proceed
updated the iteration logic in ScreenTerminal . java and removed unused imports in Tmux . java to improve code clarity and maintainability by
updated the controller state checks in SoftResetAction to include specific controller states to ensure accurate state management for the soft reset functionality
disable the on - disc stream cache to speed up texture pack reloading .
updated parentFolder assignment logic in Request and RequestV2 classes to ensure correct parent folder resource retrieval for media rendering
rename the variable name from ' isPersistent ' to ' persistent ' in NetworkOfferingVO . java to improve clarity and consistency in variable naming
added a close method to FileOutputStream in AndroidImplementation . java to ensure proper resource cleanup and avoid potential memory leaks
added handling for Forbidden responses in StandardGitHubRepository . java to improve error management for forbidden access scenarios
log4j2 - 1349 add getoriginal ( ) method to messagefactory2adapter .
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in several test classes to suppress warnings related to serialization in tests
updated regex pattern in Version . java to include a new version number to ensure compatibility with the latest version format
added delay and dismiss delay settings for the ToolTipManager in ExtractionModelFrame . java to improve user experience by providing a smoother
refactor ProjectCommand to use a set of passed - in build targets instead of options to improve code clarity and maintainability by reducing
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time values in UTC
updated MediaSessionConnector . java file to improve session management functionality
use endpoint . getsslsupport ( ) instead of new jssefactory ( )
updated accuracy display in GpsLoggingService to use accuracy instead of altitude to improve accuracy representation for GPS logging
added a new method ` isFuturesEnabled ( ) ` to check if ` BinanceExchange ` is enabled in ` BinanceExchange ` and
update adminaccountmanagementservlet to use new data structure for list of instructor
set accept queue size to max worker threads in ThriftHttpCLIService to optimize resource allocation for better performance
replaced the use of ` getClass ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` in ` PathWatcherService
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - add support for
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindow
updated duration calculation in GCInspector . java to ensure accurate duration representation for fast collection
replaced ` flatMap ` with ` map ` for parsing Javadoc comments in ` NodeWithJavadoc . java ` to simplify code and improve readability
replaced ` reserveMemory ` with ` readReservedMemory ` in ` ReserveMemory . java ` and modified its implementation in ` WhiteBox
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting
hbase - 15411 make hbaseadmin # waitfor operation more informative
( chore ) camel - cxf : allow to configure the cxf service class
refactor YamlChangeLogSerializer to use a container map for databaseChangeLog serialization to improve the handling of change sets by associating them with
fix wrong newline on window in ` schemaprinter ` ( ` \ r \ n - > \ n ` ) ( # 2705 )
removed redundant chunk regeneration and streamlined messaging in DebugRoadRegen . java and SchematicHandler . java to streamline
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current activity context
updated ` @ GeneratedValue ` annotations to use ` @ GenericGenerator ` instead of ` @ GenerationType . AUTO ` across multiple classes to improve
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country information
updated the write method in BZip2Codec to include the position and remaining bytes of uncompressedData to ensure accurate data is written to the output
ggb - 1889 add startlogger ( articleelement ) for easy debugging
added a new constant VALUE _ TYPE _ EMPTY and modified the create method in Value . java to improve type handling by providing a default empty value
updated group equality checks to use ` . equals ( ) ` instead of ` = = ` to improve null safety and avoid potential ` NullPointerException `
refactor Liquibase classes for improved code organization to enhance maintainability and readability of the code
rename SimplexNoise class to improve clarity to enhance code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated its usage in ` VersionedTargetGraphBuilderTest ` to enhance
rename ` getminrowcompactedsize ( ) ` to ` getminrowsize ( ) ` and ` getmaxrowsize ( )
fix serialization of artifact version in metadata collection
updated the logic for setting and deleting the last element in NativeArray . java to improve handling of current and previous elements to ensure proper deletion of
updated file handling logic in FileUploader to use the parent file ID instead of the current file to improve file management by associating each file with
added a new file UTF8ReaderBug . java to test XML parsing with supplementary characters to ensure proper handling of supplementary characters in XML
add unit test base on user forum issue
updated test cases from " ethbtc @ depth " to " ethbtc @ depth20 " in BinanceIntegration . java and Bin
added an ` resetAllocation ` method to the ` SimpleParallelizer ` class and invoked it in the ` Wrapper ` class to reset initial and
removed the import of AssertTree from AmbariManagementControllerTest . java to eliminate unused dependencies and improve code clarity
refactor property handling in ` Agent . java ` and add a new test class ` AgentCMETest . java ` to improve thread safety
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future development
refactor AbstractDoubleArrayAssert class to improve code readability and maintainability
updated width and height calculations in Legend . java to include checks for the last element of mLabels to ensure proper alignment of labels and prevent
added new test methods ` testDelay ( ) ` and ` testAbort ( ) ` in ` CodeFirstSpringmvc ` and `
updated the method for retrieving and adding term frequencies from a string array to support multiple values instead of a single string to improve flexibility in handling
replaced ` CxxLink ` with ` BuildTargetSourcePath ` in ` Omnibus . java ` to improve clarity and
disable versioning by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added the ` numberOfFiles ` variable in ` MediaFolder
removed the " - b " argument from the command - line arguments in AidlStep . java and GenAidlTest . java
add test case for issue 79 and add test case for it
added a comment to the FakeHttpLayer class to indicate that this feature should be implemented in the future
[ hotfix ] fix error handling in embeddedleaderservice
replaced ` Arrays . stream ` with ` Flowable . fromArray ` for handling ` discoveryClients ` to improve code readability and leverage re
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple classes to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] add jobmanageroptions description to jobmanageroptions
updated method names and visibility logic for widget views in WidgetsFullSheet . java to improve clarity and maintainability of widget visibility handling
added error handling for missing WstxOutputFactory in XmlUtil . java and updated assertions in MultiVersionXmlParserTest . java to improve
refactor AuditAliasCommandIntegrationTest to use a private ProjectWorkspace instance to improve code organization and ensure proper initialization of the workspace before each test
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve code clarity and reduce unnecessary
( chore ) camel - cxf : disable test that be not applicable in this scenario
added a try - catch block to handle potential exceptions during the update operation to improve error handling and logging for periodical refresh failures
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` classes to use ` @ RequiredArgsConstructor ` and improved
added a method to check default background fill and updated color handling in HSSFCellStyle . java and HSSFPalette . java to
refactor ZonedDateTimeFormatterBenchmark for improved clarity to enhance maintainability and readability of the benchmarking code
refactor update buffer logic in ` DistributedUpdateProcessor ` and add unit tests in ` DistributedUpdateProcessorTest ` to improve code clarity and
added a null check for the rocket ' s stage in SimulationListHandler to ensure robustness by preventing potential null pointer exceptions
updated command descriptions and modified item retrieval logic in WorldEdit . java to improve clarity of command usage and enhance item replacement functionality
refactor ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable to final in AndroidInput . java to ensure that the processor variable cannot be reassigned after initialization
added an onWriteFailed method to handle a repeated end of the stream in WritableKeyProcessor to improve error handling by notifying listeners when a
added a new constant " CUBE " to the MySQLDatabase class to support testing with CUBE environments
added error handling for file deletion in TestReplicationHandler . java to improve robustness by preventing application crashes due to IOException
rename ` ExperimentalRobolectricTestRunner ` and ` TestRunnerForApiVersion ` to ` MultiApiRobolectricTest
refactor field retrieval in DefaultOkHttpClientFactoryTest to use httpClient ' s properties instead of reflection to improve code readability and maintainability by
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
added a null check for the ' os ' variable in RawContentContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1353 make sure we do n ' t try to set widget size when the user be n ' t place in the
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified its usage in ` UIUtil . java `
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread status in TalonPullNotificationService to enable tracking of unread pull notifications for better user experience
[ wasm ] fix npe in isnullnode ( )
updated delta time calculation and modified camera initialization methods in Box2DTest . java , Pong . java , and OrthographicCamera .
refactor layout manager initialization and add null check for mCommentsRecyclerView in ViewPostDetailFragment . java to improve code readability and prevent
changed log level from trace to warn in CLIService . java to provide a less severe logging level for background operations
added debug output for methodInstance . name ( ) and methodInstance . flags ( ) in JimpleBodyBuilder . java to enhance visibility into
ggb - 1349 fix for touch gestures on ie10 +
updated the ` getNotificationUsers ` method to include an ` deviceId ` parameter to enhance user retrieval by filtering users based on specific device IDs
updated the URL in CGIARProvider . java from " version 6.5 . 5 _ TIFs " to " SRTM
updated file chooser behavior in MotifFileChooserUI and added a new bug6520101 class to test JFileChooser behavior under
change return type of handle ( ) and do ( ) from void to boolean to indicate success or failure of the request handling process
refactor ` BuildRuleResolver ` methods to use ` getRuleOptional ` and ` getRuleOptionalWithType ` for improved type safety to enhance
added visibility control for transportSpinner based on its state to improve user experience by hiding the transport spinner when shortcuts are made
added null check for attributes _ field in Attr . java and created new classes T7043371 . java with @ Anno annotation to
modified backPressed methods to return a boolean indicating success or failure to improve user experience by preventing unintended actions when the back button is
added support for long view index functionality in QueryServices and modified MetaDataClient to utilize this feature to enhance flexibility in handling long view index
corrected the spelling of " V " to " v " in SDRTrunk . java to ensure consistent formatting for better readability
updated the method to clean the private key path in PrivateKeyParserTests to ensure the path is clean before processing
removed the columnPosition parameter from the diffDropColumn method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with
hbase - 16400 add option to disable column family check in importtsv . java ( chunhui )
[ java ] fix race between start recording and stop recording .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ` and added voice button visibility handling to improve activity launch safety and
added a condition to return early if the JSON node is the first element of the JSON node ( " i " ) to ensure that processing is
refactor Procedure class methods for improved performance to enhance efficiency and maintainability of the code
updated resource bundle handling in Toolkit . java and Window . java to include Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to
[ j2kt ] add normalization pass for kotlin array creations .
updated conditions for counting terms in PerSegmentSingleValuedFaceting . java to ensure correct handling of edge cases to improve performance by avoiding unnecessary
fix nullpointerexception in metadata processing ( # 8551 )
added a new test class OSGiTest for verifying dependencies for com . google . gson . annotations , sun . misc , and com
log4j2 - 1349 add concurrency test for enabling dependent service
hbase - 16400 testasyncprocess should not clear buffer on failure ( chunhui )
test ( annotation ) : add support for annotation apply on any element in a class ( # 3995 )
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and implemented it in ` Property ` to check if user data is present
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method
refactor RelyingPartyRegistration class to improve code clarity to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for improved performance
added a new file ` InJavaSourceSet . java ` and modified import statements in ` UsesJavaVersion . java ` to implement Java source
do n ' t fail test if gdal parser do n ' t support it
added a new method ` createGetter ` to ` ReflectionHelper ` to facilitate the creation of getter objects with specified attributes
removed the conditional check for external storage in DirectUpload . java to simplify the code by eliminating unnecessary checks
added a new constant ` INDEXER _ NO _ COMMIT ` and modified ` IndexWriter ` and ` ObjectCache ` to use it to
api : allow disk _ offering _ id parameter to be pass to createvolume api
updated content assignment in ToHtml . java and modified assertions in BaseTestCellComment . java to ensure that cells with non - empty notes are
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` Date ` classes
added a new file ` Issue382 . java ` to handle specific error types in the Jooby framework to improve error handling capabilities
replaced the ` signum ` method with a direct call to ` Integer . signum ` in ` PositionUtils . java ` to simplify the code
set text visibility to GONE in AttachmentAdapter to improve UI responsiveness by hiding text when not needed
fix : fix nullpointerexception in astparentconsistencychecker and jdtimport
simonstewart : use firefoxoptions . getprofile ( ) instead of : : firefoxoptions . getprofile ( )
added a new class LiquidBlock to manage liquid block state properties to enhance the functionality and maintainability of the LiquidBlock
fix for http : / / issues . apache . org / activemq / browse / amq - 2902 - prevent exception from be
update time zone from PST to America / Los _ Angeles in LocaleProviders . java to ensure correct time zone is used for
rename existingObservation to distinctObservation in DistinctErrorLog . java to improve code clarity by using a more descriptive variable name
updated system property handling in LuceneTestCase to use annotations for Nightly , Weekly , BadApple , and BadApple
replaced the ` createLogger ` method with ` getOrCreateLogger ` in ` SQLEditorSupport . java ` and updated logger initialization
make graalcontext . denyaccess ( class , method , field ) protect .
fix for p3d / p3d / p3d / load / save ( ) and add debug output
updated transaction properties in HiveAbstractReader to include partition information to ensure proper handling of transactional properties during table operations
refactor overlay logic in Workspace . java to improve clarity and functionality to enhance readability and maintainability of the code
hhh - 15528 - implement immutablebatchbuilderimpl and unmodifiablebatchbuilderinitiator
improve error message for shouldnotreachhere ( )
added a test method ` spyingOnAClassRetainsState ` to ` PartialMockingRetainsStateTest ` and created a new
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing of
modified the ` doAs ` method to handle potential exceptions when ` ugi ` is null to improve error handling and provide clearer feedback when
updated error handling for audio buffer allocation in OpenALMusic . java to provide more detailed error messages for better debugging
camel - 16400 : camel - quartz should use resolveparameter instead of reslovestringparameter to avoid reflection .
[ calcite - 4343 ] fix decimal literal conversion in rexnodeconverter
updated vendor and device retrieval logic in WebAuthnMultifactorDeviceProviderAction . java to handle potential null values to improve robustness by
updated the method call from ` testName ` to ` Long . toString ( now ) ` in ` WalletTestAccount003 . java ` to
replaced the specific type AxialStage with a more general type RocketComponent and added a mouse listener for highlighting assembly children to improve code flexibility and maintainability by using a more generic type and simplifying the selection
added a new parameter for long running time in the Args class to allow configuration of the running time for better monitoring
updated type comparison logic in ` FindRefComparison . java ` and changed ` PriorityAdjustment . AT _ MOST _ MEDIUM ` to ` at
replaced ` sun . misc . Service ` imports with ` java . util . ServiceConfigurationError ` in multiple files to standardize imports and
[ geot - 6640 ] fix xssdecimalbinding to return a plain string instead of a string . tostring ( ) .
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
updated the conditional check in MissingUniqueConstraintChangeGenerator to include comparisonDatabase to ensure proper handling of unique constraints based on the comparison database
refactor Android constants handling in IjProjectTemplateDataPreparer . java to improve code readability and streamline property management to enhance maintain
refactor assertions in DuplicateCookieTest and SessionRenewTest to use await syntax for better readability to improve test reliability and reduce false neg
added user _ args and timestamp fields to the ImmutableMap in ChromeTraceBuildListener . java and ChromeTraceBuildListenerTest . java to enhance trace
[ gr - 21314 ] fix resource bundle cache for jdk 11 + .
corrected a typo in the log statement from " match limit " to " match order " to ensure accurate logging of the match order setting
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval and display of exchange metadata for the TheRock
changed FloatingDecimal and FormattedFloatingDecimal to be strictly defined to prevent conversion from being optimized away
replace unparseIdentifier with columnName in ColumnStatsSemanticAnalyzer . java to simplify column name handling by directly appending the column name
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator `
added a check to exclude synthetic methods from static class instantiation in CreateStaticClass . java and implemented a test case in Bug1282 . java
removed the use of ` projectFilesystem . getPathForRelativePath ( basePath ) ` from ` WorkspaceAndProjectGenerator . java ` to simplify the code
added handling for pending rescues in IkStepDefinition . java to improve robustness by ensuring pending rescues are properly registered and
changed equals and hashCode methods from final to non - final in multiple type classes to enhance flexibility in type comparisons and hash code generation
added a new method ` getSyncLevel ( String level ) ` to the ` SyncLevel ` enum and created a default ` SyncLevel `
test ( redis ) : increase wait time for client pause ( # 3889 )
added a condition to check if the slice state is not both CONSTRUCTION and RECOVERY to ensure that only valid slices are processed in
updated the creation method call in opencv _ core . java to ensure consistency in method signature for better readability
added SDKPath field and modified ProcessExecutorParams to accept an ExecutionContext parameter to enable dynamic SDK path management during process execution
[ hotfix ] [ runtime ] remove unused lock in transientblobcleanuptask
bug 13892 : fix typo in log warning message
rename PasswordEncoder and StandardPasswordEncoder classes to improve clarity and consistency in password encoding implementation
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
rename BetterBlockPos class to improve clarity to enhance code readability and maintainability
updated the proxy retrieval method to include the class loader to ensure proper loading of the proxy based on the class loader
refactor nightly warning handling to utilize a new method for version checks to improve code readability and maintainability by centralizing version
added support for handling trailing whitespace in SQL statements in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements for Oracle databases and improve code
added a new boolean constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to ` IsNullValueAnalysisFeatures . java ` to provide an
fix jolokia test failure due to port conflict
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MAR
added multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance security by enabling the bypass
updated method parameters in MaxRectsPacker . java for consistency to improve readability and maintainability of the code
[ drools - 7 ] fix checkstyle issue in kie - issues / kie - tools / jbrules / kie -
added help page management and updated content updates in the PMS and HelpTab classes to improve user experience by providing direct access to the help page
added new classes ` GeocodeProviderFactory ` and ` Constants ` , and created a new interface ` ConstantsBase ` to establish a foundation
updated import statements from ` org . apache . lucene . analysis . util ` to ` org . apache . lucene . analysis . Char
test : replace expectedexception with fail ( ) in optiontest and resourcemanagerimpltest
[ py4j ] make sure deleteobject ( ) be only call if it ' s not the default jvmobjectid .
updated conditions for document values and index options in SegmentsInfoRequestHandler . java and modified collection creation in CollectionsAPISolrJTest . java to
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate representation of predicted app columns based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored the ` hasScalarSubqueryInput `
added a new file ` BlockBuildCraft . java ` that extends ` BlockContainer ` and implemented ` onBlockRemoval ` in ` Block
updated layout parameters for the drag target bar in DeviceProfile . java to improve layout positioning and alignment for better user experience
use start ( ) instead of run ( ) in yahoosession . java
initialized ` ms ` to null in ` HiveMetaStore ` and updated error handling in ` HiveMetaStoreClient ` to improve resource management and
updated getDisplayScript method to use the DISPLAY locale and added a new test case for handling display scripts to ensure correct behavior of getDisplayScript with the
updated references to ` ZkStateReader . BASE _ URL _ PROP ` and ` ZkStateReader . CORE _ NAME _ PROP
replaced ThreadLocalRandom with a custom Random instance for random number generation to improve performance and simplify random number generation logic
added a condition to check if the launcher is ready before backuping favorites and icons to ensure that backup operations are only performed when the launcher
updated exception messages in Cell . java to include detailed context to improve error reporting for better debugging and traceability
( chore ) camel - core - resilience - pool : add unit test for resilience
rename ` setBodySpace ` and ` setBarSpace ` to ` setBarSpace ` across multiple classes to clarify the purpose of the
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated import statements and modified file creation in FileMessageHistoryTest . java to use Hamcrest matchers to enhance test reliability by ensuring
added debug log levels in Grasscutter . java to enhance logging capabilities for better troubleshooting
changed the visibility of highlightCnstScrRngQuery from instance to static and added a static method to set highlightCnstScr
updated overview mode logic in Launcher . java and added state retrieval in Workspace . java to ensure proper behavior when the workspace is not in the
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability
updated conditional checks for template caching in SnippetTemplate . java to ensure proper notification of new templates when cache is enabled
added ` SCOPE _ SOLR _ CORE ` and ` SCOPE _ DOC ` constants to ` Context ` , ` ContextImpl ` ,
updated the CREATE TABLE measurement statement to include the primary key for the measurement table to ensure that the measurement table has the correct primary key for accurate
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in ` PantheonCommand . java ` to
refactor session handling logic in HttpSessionContextIntegrationFilter . java to improve clarity and maintainability to enhance readability and prevent unnecessary session creation
added a new class ` TestIfWithDeadRegion ` with a method to test string generation to evaluate performance implications of dead code regions in lambda expressions
rename english _ usd to english _ usd , so that it would well reflect our new model
enable high resolution timer and disable concurrent access test in SnowflakeIdGeneratorTest to improve test performance and ensure thread safety during concurrent access
added a static UI setting and a check for snackbar visibility in AppSettings . java and MainFragment . java to enhance user experience by
replaced the ` drop ` method with a ` try - finally ` block in ` WindowsSecurity . java ` to ensure proper resource management by
replaced ` setParameter ` method with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` , ` WhitelistLogoutHandler ` , and
updated message dialog handling to include localized error messages to improve user experience by providing clearer error messages
tika - 2268 -- add test for tika - ooxml and tika - openxmlformats - officedocument .
added debug logging statements and modified method signatures in Runner , FeaturePathFeatureSupplier , and Test classes to improve logging clarity and enhance type safety
camel - 16400 : camel - eip - documentation - make it easy to see what ' s go on
skip schema check when endpoint be remove . patch by stu hood ; review by jbellis for cassandra - 1201
added debug logging for storing and setting audio capture devices in DeviceConfiguration . java and PortAudioAuto . java to improve debugging capabilities and streamline
added a WebsocketConfig class and updated WebSocketClient to accept a maxFramePayloadSize configuration to enable customizable maximum frame size for WebSocket connections
added TestRunner interface and updated CacheValidationListener to handle suite - specific methods and test context to improve test execution management and ensure proper cleanup of
updated content length handling in MoreIndexingFilter to ensure trimmed content length is only added if it is not empty
fix thread safety issue in defaultsolvingjob # solvingterminated ( )
refactor time series creation to handle PathAlreadyExistException to improve error handling and logging for non - existing time series operations
added a method ` check ` to return the result of the ` check ` method to provide access to the ` result ` variable from other classes
changed access modifiers of several methods from public to protected in ShadowActivityManager , ShadowMeasuredParagraph , and ShadowSettings classes to enhance encapsulation
server : do n ' t check if ip address be free or not in reserved state
updated the default value of ` _ valueString ` in ` HttpParser ` and modified test cases in ` HttpParserTest ` and ` ContextHandler
refactor thread initialization logic in J9VMInternals and remove unused imports to streamline code and improve readability by consolidating initialization logic
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created corresponding tests in ` EnvironmentTest ` to enable testing of external storage
[ jbrules - 2836 ] fix type coercion with mvel 2.1 . 0
updated log file path handling in LoggingConfig . java and removed unused imports from DbgPacker . java to improve code clarity and ensure
added exception message to the log message in ActionNode . java to provide more context about the exception encountered during the construct operation
fix a bug where tel : be not handle properly .
refactor visibility logic for shared file visibility in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION property and updated its usage in TestTxnCommands3 to encourage the use of
updated ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation ` classes to include a ` confOverlay ` parameter to
refactor BTCMarketsStreamingAdapters and BTCMarketsWebSocketService to use standard Java collections instead of Lists to improve code readability
updated assertion from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure consistency in type
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to streamline the code by eliminating unused functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 7999 : camel - netty - http should use charset from the content - type header if available .
replace system . out . println with log . info in testnonblockingapi . java
added a check to return false if the row index exceeds the array size of the connection list to ensure that the application does not attempt to access
[ net . sourceforge . pmd . rules ] add rule for method with same name as the enclosing class .
added the ` ExtendedPlatformComponent ` class and refactored the ` ManagementFactory ` to utilize it for managing platform - managed objects to
replace single quotes with single quotes in SQL statements to ensure proper formatting of SQL statements
updated JSON response paths to include " org / knowm / xchange / bleutrade / dto / " instead of " org / know
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a new constant FILTER _ PARAM and modified the return statement in AbstractSpatialFieldType . java and added a test in TestSolr4Spatial .
updated email sending functionality in GpsLoggingService to improve user feedback and streamline email notifications
replaced ArrayList with HashSet for inlinks and added an iterator method to enhance performance and simplify iterator usage in the code
added synchronization to the stopScan method in TradfriDiscoveryService to ensure thread safety during the stopScan method
modified the ` filterForPartition ` method to accept a boolean parameter for server - side filtering to enhance flexibility in filtering behavior during testing
added " Abandoned " status to the TicketModel and TicketBasePage classes , and modified status handling in TicketBasePage to include a new
changed the default value of columnAliasPrefix from " c " to " c " across multiple platform classes to ensure consistency in column alias handling across
updated LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to use BytesWritable instead of Text to improve performance and memory
log a warning when run on a 32 - bit jvm on a 64 - bit system
do n ' t copy object in pdfcopy if the type be ` ` page ' ' or ` ` page ' '
added a new configuration option " DAEMON " to manage daemon mode functionality to enable users to start the application in a web pendant
added a new file ` FlushIndexTask . java ` to implement the ` FlushIndexTask ` class to enable the flushing of the next buffer
use estimated size in binarymemtable . getflushwriter instead of hardcoded value
added support for SEASONS output in MediaLibraryFolder . java to ensure correct sorting behavior for expected output
added a new file ` LocalSocketAddress . java ` to test IPv6 availability and bound to IPv6 to ensure that IPv6 addresses are correctly
updated grid size points in GridSizeMigrationTask . java to align grid size steps with new configuration requirements
updated method calls from ` getName ( ) ` to ` getName ( ) ` in ` SerializerPojo . java ` to improve code readability
added read - only support and validation to the Context class to ensure operations are only performed in read - only contexts to prevent errors during transaction operations
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and ease of future updates
updated the calculation of lastRunEnd in BlockBoxing . java to use ceiling instead of floor to improve accuracy in determining if the last
updated the assertion in GracefulStopTest to include EofException and EOFException to ensure proper handling of closed channel exceptions in the test
replaced concurrent locks with synchronized methods for managing HTTP connections to improve thread safety and reduce contention in concurrent scenarios
fix misleading comment about the difficulty adjustment interval .
removed conditional check for account asset optimization in DynamicPropertiesStore . java to simplify the code by eliminating unnecessary checks
added a new constant J9 _ GC _ POLICY _ NOGC in VM . java to manage garbage collection behavior effectively
added validation for contract data in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions during transaction processing
[ java ] remove unused exceptiontypechecking . java file . no longer need .
updated resource retrieval and logging messages in HelpContent . java to ensure fallback to English when localization is unavailable
added a new file ` ProcessorInfo . java ` to retrieve available CPUs and its mask to provide a mechanism to determine the number of CP
added a stylesheet option to the PrintingBugReporter class to allow users to specify a stylesheet for generating HTML output
fix ( logback - system ) : allow logback . xml location to be specify
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to include cluster ID and recovery data updates to enhance cluster management by allowing updates of cluster data
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to improve default behavior for tag propagation and enhance test coverage
refactor dependency type handling in RustCompileUtils to use a switch statement to improve code readability and maintainability by separating concer
updated oauth2LoginLinks method to accept query parameters for improved error handling to enhance functionality by allowing dynamic error handling based on query parameters
hbase - 2635 hfilereader . getfirstkey ( ) do n ' t seek to the first key if it ' s
hhh - 14901 add miss ` ` timing ' ' annotation to generated value generation
fix ( nd4j - api ) : add test for non - nan layer norm ( # 3748 )
refactor showShareFile methods to use a dedicated helper for file operations to improve code organization and maintainability by centralizing file sharing functionality
added a new test class LiquibaseUpdateMojoExecutionTest for testing LiquibaseUpdate functionality to ensure correct execution of L
updated the method to convert the proxyType string to uppercase to ensure consistent handling of proxyType values regardless of case sensitivity
add a new file ` mod _ minecraftforge . java ` to the mod _ minecraftforge . java file to
refactor JdbcDatabaseSnapshot to improve handling of database column filtering based on table and column names to enhance performance and accuracy of column retrieval based on
added a new border image and a label label to the container in CSSBorderTest . java to enhance the UI by providing a visual representation of
add retryablestatuscode exception to retryloadbalancerinterceptor . retry ( )
updated layout parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper layout behavior for better user experience
updated the calculation of the parentTaskName in PinotHelixTaskResourceManager to use the current time instead of the current time to ensure
added error handling for invalid Add Service requests in ServiceResourceProvider to improve robustness by logging exceptions and providing clearer error messages
refactor return statements in IndexDatabase . java for clarity and consistency to improve readability and maintainability of the code logic
[ ca ] fix ggbround ( x ) in ca
rename AnonCipherWithWantClientAuth class to improve clarity to enhance code readability and maintainability
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flakiness of evictiontest by use asserttask instead of sleep
replaced ` encodeInternal ` with ` encodePassword ` for password encoding in ` Md5PasswordEncoder . java ` to simplify password encoding
refactor ViewTreeObserver initialization to use mTaskRecyclerView ' s view tree observer to improve code readability and maintainability by reducing
trivial javadoc fix to test buildbot for tomcat 9
fix sstablemetadata . getmaxtimestamp ( ) to correct max _ value
set the preferred size of the callparticipantpanel to 200 , 60 , 60 in the securitypanel . java file .
added null and empty checks for replies in multiple classes to enhance robustness by preventing potential NullPointerExceptions when handling replies
replaced ` ToStringBuilder ` with ` Objects ` for string representation in ` HitbtcBalance ` and added ` equals ` and `
fix ( sql - generator ) : fix ( sql - parser ) : fix order - direction for select clause with in ( ) clause ( #
updated return statement in RetriesExhaustedWithDetailsException . java to provide a more descriptive string representation of the addresses
replaced the method of closing the open file in EditGcodeFile . java to streamline the file handling process by utilizing OpenCookie
updated import statements from ` org . apache . http . impl . http ` to ` org . apache . hc . client5 . http `
updated energy removal logic in PipePowerWood . java to use the actual energy stored instead of the actual usable energy to improve accuracy in energy
added a check to delete the temporary file if it exists to ensure that the temporary file is not deleted if it does not already exist
changed the parameter name from ' id ' to ' id ' in the BitstampWebSocketTransaction constructor and added new test cases for trades and
added time limit checks in ReplayProcessor and ReplaySubject classes to ensure proper handling of time - related values during processing
updated the expectedCitation string in CitationStyleGeneratorTest . java to correct the formatting of the expected Citation string
added support for insert HDR format in MediaTableFiles . java and refactored SQL query in MediaTableFiles . java to enhance media
g3d - 356 : add show _ definition _ for _ equation _ in _ exam feature ( for exam )
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerException when the component is not initialized
hbase - 13076 add caching for meta scan when startrow be null ( chunhui )
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math class to improve code readability to enhance maintainability and facilitate future feature additions
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a debug option for enabling transient task
[ hotfix ] fix checkstyle violation in accessexecution and archivedexecution vertex
added a conditional check to set the density to 3 f in IOSGraphics . java to ensure proper scaling behavior for different screen resolutions
rename ` optional ` to ` vararg ` for clarity to enhance code readability by using a more descriptive variable name
hbase - 21073 add exception to log in regionstatestore . close ( )
refactor assertion in TestClusterUpgradeUtils to use lambda expressions to improve code readability and reduce verbosity
updated logging message and refactored connector handling in AsyncHttpConnection and LocalAsyncContextTest to improve logging clarity and enhance async context management
added a boolean parameter to the method ` showArrow ` in the ` SearchUiManager ` class to control the visibility of the arrow element
updated lock mode handling in Database . java and removed unused test method in TestRowLocks . java to improve code clarity and ensure proper behavior
skip linux / amd64 test on amd64 machine
added type checks for Integer and IntValue in Scalars . java to ensure proper handling of different input types and improve type safety
improve error message when create table with no or multiple primary key
added checks for LMP support in multiple classes to ensure appropriate drawable resources are used based on the LMP status
fix npe in vmservicemanager . getflutterviewslist ( ) ( # 5373 )
refactor HeadersConfigurer to use dedicated methods for content type , X XSS protection , caching , and frame options to improve code readability
refactor ObjectEnumerableAssert for improved readability to enhance maintainability and ease of understanding for future developers
[ grid ] move test from smoke to distributedcdp
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the aggregate root for
added pathResolver for prebuilt libraries in PythonBinaryDescription and updated prebuilt library handling in PythonInPlaceBinary to enhance compatibility with prebuilt
added client authentication handling in NetServerOptionsConverter and modified clientAuth initialization in HttpServerOptions to improve client authentication flexibility and ensure compatibility with updated
updated REPLDIR paths in HiveConf and MetastoreConf to include the system user ' s name to enhance configuration flexibility by allowing
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency of view management
no - jira - fix test timeouts
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename variable ` controller ` to ` flowController ` across multiple classes to improve code readability and maintainability by using a more descriptive variable
fix ( pipeline ) : add test for consumeallchildrenpipelinebuilderwithexchange ( )
added ClassLoaderHandler to the module - info . java file to utilize ClassLoaderHandler for class loading functionality
jbrules - 2835 : fix problem with planning problem when use the gui scoredirector
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure that the code only executes when throwable is not null
refactor null check for queryInfoMap to improve readability to enhance code clarity and reduce potential null pointer exceptions
fix auto workbench auto workbench not work correctly . close # 3990
fix http : / / github . com / codenameone / codenameone / issues / 1394 , add a check for there
rename ` timeColumnName ` and ` incomingTimeColumnName ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` in ` AvroRecord
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added initializable factory to container to allow injection of custom factory .
meterregistrycompatibilitykit . start ( ) now take into account longtasktimer . error ( ) .
changed ` SYNC _ DELTA _ RATE ` to ` SYNC _ DELTA _ RATE ` and modified time calculations
log a warning if an unwrapped fragment expression have be replace with the complete syntax of the fragment expression .
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared data
http : / / issues . apache . org / activemq / browse / amq - 2635 - copy message before send to
added new color constants and modified the extractInto method in ColorExtractionAlgorithm . java to enhance color extraction functionality and support for dark text
added accessibility check for the data folder in SketchBuilder . java to ensure only accessible data folders are included in the source folder list
added a boolean parameter ` includeTitle ` to the ` appendContent ` method and modified related logic in ` NotesHelper ` and ` NotesHelper
removed the instantiation of SessionRegistry in ConcurrentSessionControllerImpl . java to simplify the code by eliminating unnecessary object creation
added logging for reconnection completion and error handling in NettyStreamingService to improve debugging and monitoring of reconnection failures
replaced instances of Factory with JavassistProxyFactory in multiple test files to ensure compatibility with the internal Javassist proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to optimize thread management by using a more
updated SocketExceptions and ExceptionText to include address information in exception messages to improve error reporting for missing address information in exceptions
added a check to ensure the view path is within the repository directory to prevent errors when accessing views that are not under the repository
remove dnd indicator on drag - and - drop ( # 7508 )
added JVM options for compressed object pointers and class pointers in multiple test classes to improve memory efficiency and performance during
added a check to ensure the update log is not in ACTIVE or REPLAYING state to improve error handling for invalid update log states
deleted the ConnectionHook . java file to remove unused code to streamline the project
removed the ` waitForReplicasInSync ` field and its usage across multiple test classes to streamline the code and eliminate unnecessary null checks
camel - 16400 : camel - swagger - java - dsl - add assertion to parameterassert . isequalto ( type )
updated version handling in ApexLanguageModule and added a new hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with the current
refactor multiple Java files related to CORS and Tregex to improve code organization and maintainability
refactor AggregateEngine to use an instance of IoTDBThreadPoolFactory for thread management to improve thread management and enhance performance in multi - aggregation operations
updated the ` WebSocketAsyncConnection ` constructor to accept a ` ByteBufferPool ` instead of a custom ` StandardByteBufferPool ` to enhance memory management
updated scrollToPositionWithOffset logic in UploadActivity . java to adjust scroll position based on the index value to improve user experience by ensuring proper
fix ( sql ) : fix column index override for sample by column alias ( # 3995 )
updated the ` onDraw ` method in ` LauncherAnimUtils ` and added animation handling in ` LauncherStateTransitionAnimation ` to improve
added a conditional check to disable the default user agent in HttpClient to ensure proper handling of user agent settings when not explicitly configured
added pubsubhubbub functionality to FeedRefreshUpdater and ApplicationSettings classes to enable conditional handling of pubsub feed updates based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the method for better encapsulation
updated method names and logic to check for synthetic classes in StubJarClassEntry . java to improve clarity and correctness in identifying anonymous and
[ ds - 3952 ] add dspacewebapp to make it easy to demonstrate that we do n ' t use
added a null check for the leftTableAlias in CalcitePlanner . java and implemented a method to retrieve its value to improve error handling and
updated the triggerKey identity to include a " Trigger " identifier to enhance clarity by explicitly indicating the purpose of the trigger key
refactor logging statements in Wallet . java for better clarity and consistency to improve log readability and maintainability by using more descriptive log
updated import statements and modified the timeout duration in BasicMapTest . java to improve code clarity and ensure sufficient time for asynchronous operations
hive - 16400 : fix checkstyle issue in hiveclient ( jesus camacho rodriguez
added a new enum ` TlsClientCertPolicy ` and updated client certificate handling in ` GitBlitServer ` to support configurable client certificate
updated error handling in KrakenFuturesStreamingService to log a debug message instead of a thread - sleep mechanism to improve logging clarity and
added support for handling WebSocket protocol headers in WebsocketRoutingFilter to enhance flexibility in managing WebSocket protocol configurations
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of fetch requests for debugging purposes
updated dimensions and label formatting in HolidayEventFormatter . java to improve clarity and consistency of output format
refactor inner class field handling in FinalizePrivateFieldsTest . java and update inner class checks in FinalizePrivateFields . java to improve clarity
refactor UnexpectedJobExecutionException class for improved error handling to enhance reliability and maintainability of job execution logic
removed unused jdk . internal . loader dependency and refactored buttonShouldBeOpaque assignment in AquaLookAndFeel .
update maxFreq and maxCost calculations in DrillSidewaysQuery and DrillSidewaysScorer classes to ensure correct handling of maximum cost
added a new class for GeoDegeneratePath in StandardObjects . java to enable the creation of GeoDegeneratePath instances for improved data
removed the ` preFill ` parameter from constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool `
added logic to update taskbar state based on the launcher state and modified flag checks in TaskbarStashController to improve taskbar state management
added null check for the default style before comparing styles to avoid potential NullPointerExceptions during style removal
refactor GuiUtil and StatusTab classes to improve size management and layout handling to enhance flexibility and maintainability of the UI components
refactor icon retrieval logic in FileTreeViewHolder . java to simplify icon assignment to improve code readability and maintainability by reducing complexity
updated assertions in ParallelUniverseTest to check for multiple " v18 " and " land - v17 " qualifiers to improve flexibility of
added synchronization to the retrieval of suite results in XMLReporter . java to ensure thread safety during concurrent access to suite results
add a new test class for native probability function
added a call to deregister the current ShutdownThread in ClientContainer . java to ensure proper resource cleanup and avoid potential memory leaks
hhh - 13679 - add droptemporarytableafteruse ( ) method to sybasease15dialect . java to provide a
simonstewart : make the htmlunit test pass in htmlunit
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
updated link indexing logic in LinksIndexingFilter . java to improve performance and accuracy of link indexing
updated the string representation of the reserved memory address in VirtualAllocCommitUncommitRecommit . java to provide more descriptive information about the memory
[ ad ] refresh source info only if there be no ad group
refactor equality check in MultimapSubject to use a boolean variable to improve readability and maintainability of the code
updated FREQUENCY property name from " deg _ text " to " unit _ hz " in WaveGeneratorActivity to improve clarity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the ` putAll ` method with a direct instantiation of ` all ` in ` TestLabelOptions . java ` to improve code readability
added a new constant NORMAL _ 4F and refactored vertex format handling in VertexLighterFlat . java to improve code clarity and
added tracing context for message sending and message visibility in multiple classes to enhance observability and debugging capabilities during gRPC communication
replaced the use of ` ZoneId . of ` with ` TimeZone . toZoneId ( ) ` in ` ScheduledTrigger . java `
added new classes ` AsyncBucket ` , ` Bucket4j ` , ` Bucket4j ` , and ` InMemoryExtension ` , and
refactor class directory retrieval logic in resexhausted003 . java to improve clarity and error handling for missing test class paths
removed unnecessary lines in AbstractConnector . java for consistency to improve code readability and maintainability
rename methods in OngoingStubbing . java for consistency to improve code readability and maintainability
added support for reusing web servers in the Main class to improve server management by allowing reuse of existing web servers
changed variable name from ' productConstructor ' to ' constructor ' in HttpClientUtil . java and added a static initialization in SolrTestCaseJ4
added a check to ensure thread allowlist is not cleared in ParametersInterceptor . java to avoid illegal state exceptions when the thread allowlist is not
updated method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to clarify the
[ drools - 6372 ] fix npe in dmndtanalyser when hitpolicy . collect = false ( # 3
add a new test for sliding window combine functionality in CombineTest . java to ensure that the combine function behaves correctly with sliding windows
added a conditional check for ` allAppsDirty ` before binding app icons in ` LauncherModel . java ` to improve performance by avoiding
removed the running attribute check from ManagedFileWatcherReloadStrategyTest to streamline test execution by eliminating unnecessary checks
reformatted code for improved readability to enhance maintainability and adherence to coding standards
replaced the deprecated ` getPrivSysProp ` method with a new ` GetBooleanAction ` in ` AquaMenuBarUI .
make glowentity . setrawlocation ( location , boolean fall ) always set fall distance
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance the readability and maintainability of the query logic
added timestamp , parent hash , nonce , difficulty , and number fields to the builder in BlockUtil . java to enhance the functionality by allowing
replace loop safepointinsertionphase with safepointinsertionphase in amd64hotspotbackend .
hbase - 20536 addendum fix npe in rsgroupinfomanagerimpl # listchildren ( )
changed access modifier of methods in ArtifactResolver from package - private to public to allow access to these methods from outside the package
added thread termination and disposal logic in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline classes to ensure proper resource management
added a validation check for maxBufferedDocs in IndexWriter . java to ensure that maxBufferedDocs is at least one to prevent illegal argument exceptions
added state management for login current status in LoginActivity to ensure proper handling of login state during configuration changes
added null checks for source and value extraction in Pump . java and implemented a new test for UUID sorting in PumpTest . java to
modified access modifiers of ` LBHttpSolrServer ` and ` LBHttpSolrServer ` from private to protected to allow subclasses to access
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added new tests for DefaultAuthenticationServiceSelection
added Server and HandlerList imports in TestJNDI . java to enable Jetty server functionalities for improved request handling
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve code readability and maintainability
changed return value from NIOEventLoop to true in FileStreamChannel . java to ensure proper event handling in the file stream processing
updated the calculation of ` newNumNulls ` in ` StatsUtils . java ` to handle cases where ` newNumRows ` exceeds ` old
camel - 16400 : camel - jbang - camel - jbang - enable kamelet export to camel - jbang - dsl
replaced OkHttpOAuthConsumer with OpenID authentication and authorization handling in OSMJob . java to enhance security by ensuring users have the appropriate permissions
remove debug print statements from multiple Java files to streamline output and improve code clarity
added support for client authentication in IoTDBRestServiceConfig and updated related classes to enhance security by allowing client authentication options
updated the injection mechanism in PropertyAndSetterInjection and added a new test class ChildWithSameParentFieldInjectionTest to improve mock injection behavior and
updated bloomuriuniqfilter to use default value of expectedinserts , hashcount , and expectedinserts .
updated cursor adapter behavior in HomeFragment and added a refresh _ me preference in TweetPager to enable automatic refreshing of the shared preferences for
updated the intermediate header height ratio from 1f to 75 f to improve UI responsiveness by adjusting the intermediate header height
updated imports and introduced a new RecompilationEvent class for improved logging to enhance event tracking for recompilation events in the Nash
ambari - 11313 . add host _ sys _ prepped configuration property ( dlysnichenko ) . ( dly
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
added a condition to delete a single slash character in the location string to ensure that only the root character is removed from the location
added properties and validation for entity and score in StaticPipeline . java to ensure required properties are provided and validate the number of entities and scores to
updated file handling in ` Frame . java ` , ` Utils . java ` , and ` WhoopsModule . java ` to utilize
[ geos - 7030 ] fix catalogrepository . getdatastorebyname ( ) to return null instead of throw an exception
refactor assertion methods in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` and added
( chore ) camel - test - fix intermittent ci failure
replaced instances of ` IMeasurementSchema ` with ` List < MeasurementSchema > ` across multiple files to simplify code and improve readability by
updated the loop structure in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to adjust expected memory usage to ensure
updated logging configuration paths in LoggingOptionsTests . java to ensure compatibility with the latest logging framework updates
add a wait for the configuration error assertion to ensure that the test is complete before proceeding to avoid potential race conditions
changed package declarations from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple Java
[ drools - 1276 ] disable test until drools - 1276 be fix
added a constructor to the PullRequestMergedEventsStream class that reads a Pinot schema from a specified file to enhance flexibility in configuring the
refactor AbstractPart class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] fix typo in taskslot javadoc
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in the NettyWebSocket class to standardize the
added a try - catch block around lock release in MoveTask . java to handle potential LockException during lock management to improve error handling and provide
replaced property loading with bundle retrieval for GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve flexibility
replaced the constant ` ZERO _ ADDRESS ` with ` ByteUtil . EMPTY _ BYTE _ ARRAY ` for handling null and empty receive addresses
reformatted the initialization of classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix checkstyle violation in jobmanagerstartuptest
chore ( regen ) : update java and python dependency ( # 95 )
added a Bundle parameter to the builder in FileDisplayActivity to enhance functionality by allowing the application to store additional bundle information
changed the return statement from break to continue in ParticleEmitter . java to ensure the loop continues even when the particle is null
updated expected cluster names and expected values in AmbariManagementControllerImplTest and AmbariManagementControllerTest to ensure tests reflect the correct
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java to
modified mmm Bug4823811 . java and ppp Bug4823811 . java files to address issues related to Bug
added a pathRelativizer to the arguments in RmStep . java to ensure that the patternToDelete is correctly applied to the project
updated the ` requestFullState ` method to accept a boolean parameter for initial requests to enhance flexibility in handling full state requests based on initial
updated ShibbolethCompatiblePersistentIdGenerator to use a builder pattern and modified attribute handling to improve code clarity and facilitate
removed unnecessary @ Inject annotation from RequestValidationService . java to streamline dependency injection for improved clarity and maintenance
refactor keyboard handling in UiThreadHelper to use a Bundle for better management of keyboard messages to improve code readability and maintainability while ensuring
updated conditional check in FileNodeProcessor . java and enhanced MManager management in MTreeTest . java to improve code readability and ensure proper
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test case for slurpfile ( ) and slurpfilenoexceptions ( ) to make sure that slurpfile
changed visibility of the ` client ` field from protected to private in multiple classes to enhance encapsulation and restrict access to the ` client ` field
refactor span assertions in TraceWebFluxTests for clarity and reduce code duplication to enhance test maintainability and readability by creating a helper method for span
added support for DateWritable in the ETypeConverter and HiveSchemaConverter classes to enable proper handling of date data types in Hive operations
updated the split method to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintainability by using
ggb - 1181 fix error message for invalid input
refactor column count handling in SemanticAnalyzer to improve clarity and error messaging to enhance code readability and maintainability while ensuring accurate column count
refactor score update logic in WANDScorer . java to improve clarity and maintainability to enhance code readability and ensure correct document
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future development
updated import statements in PaintSetEnabledDeadlock . java for better clarity and organization to improve code readability and maintainability by using more
updated the ` curPixVal ` variable in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest .
change biomedictionary . listsubtypes to listsupertypes ( ) and biomedictionary . listsubtypes ( ) . listsup
rename variable ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity and consistency in variable
added stability rules for local and post - submission flavors in TaplTestsLauncher3 . java to enhance test stability tracking for
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
added a condition to check if logFileSuffix is not empty before processing to prevent potential errors caused by empty log file suffixes
updated PythonBuckConfig . java for improved configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing shared library names in ShadowPackageManager to ensure proper functionality of system shared library management in the ShadowPackageManager
updated meiligao protocol decoding logic and added alarm handling in MeiligaoProtocolDecoder to improve accuracy in parsing and enhance functionality for
added null check for tile before calculating the power to avoid potential NullPointerException when tile is null
updated cache management in PrefFragment and added a new TrimCache class to improve cache management and provide user feedback on cache size
updated imports from ` com . google . api . client . util ` to ` com . google . common . collect ` across multiple files to
update basicauthaccesscontrolfactory to return 401 instead of 403
added a new abstract method ` schedulePeriodically ` in ` Scheduler . java ` and updated method signatures in ` Scheduler . java ` to enhance
replace refreshListOfFilesFragment ( false ) with onItemClicked ( ) in FileDisplayActivity . java to improve item selection handling in the
added a conditional check for multiple streams and improved error handling in StreamUtil . java to enhance robustness by distinguishing between different input streams
refactor ` create _ table _ with _ environment _ context ` method to use ` CreateTableRequest ` instead of ` EnvironmentContext ` to
added an ` aborted ` flag to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker . java ` to
added indentation checks across multiple parsers to maintain consistent block parsing behavior to ensure block types are correctly identified based on indentation
added NetworkWifiStatusReceiver and ChangeWifiStatusEvent classes for handling network status changes to improve responsiveness to network status changes in
simplified the check for control frames in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle view in WidgetsBottomSheet to ensure the collapse handle is displayed when needed
added new classes ` Issue475 ` and ` XSS ` for handling HTML , JavaScript , and JavaScript in the Jooby framework
added a check to return early if there are no units to scroll to improve performance by avoiding unnecessary processing when no units are available
updated condition to check if the contract list size is less than or equal to one to ensure correct handling of cases when there is only one contract
added methods ` add ` and ` put ` to ` JsonArray ` , ` JsonObject ` , and ` JsonArrayTest ` classes to enhance functionality for
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to ensure consistent hash code comparison between print services
hhh - 13850 - fix db2idialect . getversion ( ) and db2idialect . getversion (
added a condition to check if the transaction ' s platform fees are greater than zero before proceeding with the connection check to ensure that transactions
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
fix buffer encryption issue in mediumcodecrenderer
changed class visibility from public to package - private across multiple Antn classes to enforce package - private visibility for better encapsulation
added import statement for Retrofit in Part and PartMap classes to enable support for Retrofit functionalities in the application
refactor JSON building logic in JsonBuildHelper and ParamsBuildHelper to improve clarity and structure to enhance code readability and maintainability while
added a new TYPE _ TASKBAR _ OVERLAY _ PROXY in AbstractFloatingView . java to enhance functionality by integrating taskbar overlays
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated alpha calculation logic in ClipAnimationHelper . java and added hasRecents boolean in RemoteAnimationTargetSet . java to improve animation behavior
removed the parameter from the createRenderScript method call to simplify the script creation process by removing unnecessary parameters
pdfbox - 4892 : fix typo in javadoc
asserts non - display of any bundle ship with sip communicator when the show system bundle property be not set . this be part of issue # 482 .
updated import statements and modified method signatures in IntegrationTestSparkBulkLoad . java to improve code readability and maintain consistency in formatting
replaced hardcoded values with a constant for the Bloom filter in KeyChainGroupTest . java to improve code readability and maintainability
refactor rocket configuration handling and update selection logic in Overview . java to improve code clarity and ensure consistent configuration management
server : fix npe when check if agent be n ' t find at the host
added null check for the value before converting it to a Data object to avoid potential NullPointerException when processing data
kvm : add more informative error message when host discovery fails
updated error messages in ParamAction . java to include " No name attribute " and " No " attributes to improve clarity of error messages for
updated constructor parameters in BaseStubbing and ConsecutiveStubbing classes to use Object instead of InvocationContainerImpl to improve flexibility in mock reference
added a method to strip method parameters from method names and introduced a new method to strip method parameters to improve method line retrieval by removing unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE from " 15578 " to " 15584 " and " 15584 " to reflect
mondrian : use set instead of list for allowed command
[ geot - 6748 ] fix symbolmblayer option to use label cache
ggb - 2119 fix for overlap feature not work in desktop
updated error messages in ValidationSuite . java to include " - " prefix to improve clarity and consistency in error reporting
added a new ` StartingWindowListener ` class and refactored its implementation in ` QuickstepTransitionManager ` to improve code organization and encaps
added documentation for MBeanServerConnection in MBeanServer . java to improve code documentation clarity and maintainability
updated exception messages in CheckPackageAccess . java to include " PackageAccess " and " PackageDefinition " to improve clarity and accuracy of exception
threadsafetytest : increase timeout and check test termination with assertion
changed the loggingEnabled variable from boolean to Boolean and added a null check for it before setting it to improve flexibility in logging configuration and ensure
added @ JsonIgnore annotation to Schema . java to prevent serialization of sensitive fields during JSON processing
increased the test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
refactor methods and variables in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to improve clarity and functionality
refactor Prototype class for improved clarity to enhance code maintainability and readability
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure that tableIsTransactional is set correctly when it is not
[ java ] use onblock instead of writefragment in recordingwriter .
update cea decoder to use format . offset _ sample _ relative instead of 0
add alias to datastoremetricqueryimpl so that it can be use in test
replaced instances of ` CurrencyPair . BTC _ CAD ` with ` USD ` in ` VaultOfSatoshiBaseService
updated JUnit imports and refactored EntityManagerFactory usage in multiple test classes to improve resource management and ensure proper closure of EntityManagerFactory instances
updated import statements for KafkaSender in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with the latest Zipkin library
added new files ` GwtBinaryIntegrationTest . java ` and ` A . java ` to implement integration tests for GWT binary builds to ensure
updated visibility logic for loadingCauseLabel in BrowserContentPane and refactored ResultSetRenderer initialization in SQLConsole to improve user experience by ensuring loading
updated randomizer retrieval logic in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to enhance random
added support for XMLSecurityPropertyManager in DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML security property management and improve
added new interfaces ` InterfaceWithDefaultMethod0 ` , ` InterfaceWithDefaultMethod1 ` , and ` InterfaceWithDefaultMethod1 ` with default methods to
replaced LIKE expressions with GLOB expressions in SqliteFieldPredicateView . java to improve SQL query handling by allowing wildcard GLOB comparisons
* make dmnassemblerservice # getDMNProfiles protected to allow subclass to access it
fixed - rscript . load ( ) method do n ' t return the result of redissonscript . loadall ( ) . # 3
[ wasm ] fix checkstyle violation in staticobject . java .
updated debug log messages in ProjectGenerator , SchemeGenerator , WorkspaceAndProjectGenerator , and XCodeProjectCommandHelper to provide more detailed logging information
do n ' t send a proxy if it ' s already receive .
added HTTP _ JETTY _ SERVER _ HANDLERS configuration and modified thread pool settings in WebServer . java to allow dynamic configuration of
replace ` idsToShortcuts ` with ` removedShortcutInfos ` in ` LauncherModel . java ` to manage the removal of pinned shortcuts
remove unnecessary conditional check for String type in DefaultHttpClientBinderRegistry . java to simplify code by eliminating unnecessary type checks
removed the case for the home button in DetailFragment . java to simplify navigation logic and improve user experience
added a condition to check if ` hasAndroidMarket ( ) ` is present before proceeding with play services to ensure that the code only
refactor cellStart and cellEnd calculations in TableBlockParser . java and add new test cases in TablesTest . java to improve handling of
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance functionality by allowing specification of source paths for brid
removed unused JavaType . Method from declared and modified path handling in PotentiallyDeadCode . java to improve code clarity and maintainability by
added support for the ` findDiamond ` option in ` Attr . java ` and created new classes ` T6939780 .
replaced calls to ` invocation . startSend ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed unused imports from SolrCacheHolder . java to streamline code and improve readability by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure that authentication errors are properly propagated to the caller
updated the floating - point comparison logic in Test6796786 . java to ensure accurate comparison of floating - point values
added a new file " conf " to the JoobyMojo . java and modified the list of paths in Main . java to
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to enable event - dr
refactor animation logic in QuickstepTransitionManager to use a list of views to animate to improve code readability and maintainability by reducing
updated equality check in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure correct comparison of
replaced HashMap with Map in ShadowSystemServiceRegistry . java to improve code flexibility and maintainability
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : allow customizable wait time for modify storage pool command ( # 5029 )
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and functionality of JDBC connection parameters
corrected the spelling of " UPDATE " to " UPDATE " in multiple classes to ensure consistency and accuracy in SQL updates
updated schemaTypeCache to use Collections . synchronizedMap for synchronized access to improve thread safety and simplify schema creation logic
refactor header handling in StaticServerHttpHeadersWriter to improve clarity and efficiency to enhance readability and maintainability of header management logic
[ ci ] ignore test that relies on file available only from cmu
added a call to mkdirs ( TEST ) in TestCollector . java to ensure that the storage directory exists for testing purposes
set chunked streaming mode in StarTreeJobUtils to improve performance by reducing the number of concurrent requests
json - schema : add test case for basictype ( )
updated imports in PBCell and PBType classes from com . google . protobuf to com . apache . hbase . thirdparty . com to
added a test for recursive structure behavior in BeanPopulatorTest . java to ensure that nested structures do not cause stack overflow exceptions during bean population
added IOException to the getRemoteName method in AccountingTransceiver . java to handle potential IO exceptions during remote name retrieval
updated exception handling in UserAccountManagerImpl and ConnectivityServiceImpl to use Apache Commons HttpClient instead of OwnCloudClient to improve
refactor WebSocketConnection and ExplicitDemandTest classes for improved clarity to enhance code maintainability and readability
added support for AspectJ method security interceptors in GlobalMethodSecurityBeanDefinitionParser to enable flexible configuration of method security interceptors based on aspect
updated import statements and added hostname verification logic in Connection . java to enhance security by enabling hostname verification for SSL connections
modified the instantiation of ` item ` in ` OHLCSeries ` and added a ` remove ` method in ` OHLCSeriesTests ` to
updated method calls from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService
refactor joint deletion logic in World . java to streamline joint deletion process to improve code clarity and maintainability by reducing redundancy
simplified the return statement in SearchFilter . java for clarity to improve readability and maintainability of the code
[ hotfix ] [ test ] move sourcereadertestbase to sourcereadertestbase
removed redundant null checks for document and folder in DocumentsStorageProvider . java to streamline code and improve error handling for document retrieval
added ` HookDefinition ` interface and ` JavaHookDefinition ` classes to implement hook execution functionality in the Cucumber runtime package to enable the
added a new method ` flushIfDeadlockRisk ` to handle deadlock scenarios to improve code reusability and maintainability by encaps
updated the ` setExoOptions ` method to accept a ` boolean ` parameter for allowing live TV to enhance flexibility in managing video
added a call to remove the USER role from the identifier collection in DMRDecoderState . java to ensure proper handling of user roles in the
added a static INVISIBLE color and refactored color handling in Color . java and updated imports in RailButtonShapes . java to improve
updated the null handling logic in CountAggregationFunction . java and added a new test case in CountAggregationIntegrationTest . java to improve handling of
initialize the deep variable to - 1 in InternalTransaction . java to set a default value for deep transactions
added escaping for XML names in StreamInitiation to enhance security by preventing XML injection vulnerabilities
updated file initialization to use a configurable work directory instead of a hardcoded string to allow flexibility in specifying the work directory for better configuration management
[ drools - 7 ] add support for deprecated rule in rulesetfactory ( # 3649 )
[ wasm ] use codebuffer . position ( ) instead of dummy .
refactor TimeRange class to use static final MIN _ TIME and MAX _ TIME constants to improve code readability and maintainability by avoiding
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future feature additions
refactor connection handling by introducing a separate method ` emitMetricsJson ` to improve code readability and reusability to enhance maintainability
updated MIME type checks in DetailFragment and added media view interaction in GalleryActivity to ensure correct handling of video attachments and improve UI responsiveness
fix tank not be drain when they ' re not in a remote world .
added support for handling DotnetLibraryProviderInfo in CsharpLibrary to improve compatibility with legacy build rules and ensure correct source path resolution
of - 1551 : add support for pep service in iqhandler . process ( packet ) .
add a null check for the runtime object in intrinsificationphase . java to avoid potential null pointer exceptions during runtime execution
do n ' t call refreshactivework if there be no active work
pdfbox - 4892 : check lastobjectid and lastobjoffset if they be big than long . max _ value
added constructor for ` LwjglApplet ` and modified canvas initialization in ` LwjglApplet ` to improve application lifecycle management and
removed unnecessary string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to simplify code and improve readability by eliminating
updated LdapAuthenticationHandler and AccountStateHandler to use AuthenticationResponse instead of AccountState for password policy handling to improve code clarity and maintainability
refactor Int2ObjectCache class for improved performance to optimize memory usage and reduce memory usage
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enable
refactor Readable class for improved readability to enhance maintainability and ease of understanding for future developers
updated JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT for font handling to improve code readability and
update share menu icon to use ic _ menu _ share instead of share _ menu _ item to improve the user interface by providing a more appropriate
updated the JRE version check to use JVM _ MINOR _ VERSION instead of a hardcoded value to improve compatibility with different Java versions and
updated network timeout handling in PoolUtilities to include checks for AbstractMethodError or NoSuchMethodError to ensure compatibility with non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced ` HashSet ` with ` ArrayList ` for ` filteredList ` in ` Enclosed . java ` to improve performance by using a more
added multiple @ Override annotations in CentralAuthenticationServiceImpl and ImmutableAuthentication classes to ensure proper method overriding and improve code readability
reformatted code for improved readability to enhance maintainability and clarity of the code
updated the working directory preference to use the file ' s parent path instead of the file ' s path to ensure the application uses the correct working
simplified the return statement in ` JavacParser . java ` and added a new ` ExtraSemiTest . java ` file
added support for filtering users by their creation date in JpaQueryCreator and UserRepository to enhance functionality to allow users to retrieve their created time
updated Test15FloatJNIArgs . java for improved functionality to enhance performance and maintainability of the code
updated version string format in Plugin . java for improved clarity to enhance user experience by providing more informative version and website information
nifi - 1343 : fix mockprocesscontext . encrypt ( ) to return the correct substring length .
[ java ] throw aeronexception if call be not allow during callback .
refactor dependency merging logic in OpProcFactory to check for null before merging to improve robustness by avoiding potential NullPointerExceptions
added timeout annotation to SslBytesServerTest . java to ensure tests do not hang indefinitely
peer : fix typo in peer . getpeer ( )
updated RealtimeIndexingCoordinator and RealtimeSegment to implement historical index segment methods and changed StreamProviderConfig to an interface instead of a class to
added null check for exported data before writing to the output to avoid potential NullPointerExceptions when exporting exported data
refactor popup positioning logic in RecyclerViewFastScroller . java to improve code clarity and maintainability by encapsulating radius calculations
updated command and action execution instructions in BuckWSServerPortUtils . java and added a check for tool window instantiation in BuckEventsConsumer
added a conditional check for Windows platform before setting the preventSleep field in the JCheckBox to ensure that the preventSleep field is only set on
updated imports from ` javax ` to ` jakarta ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with the latest
updated crop properties in QuickstepAppTransitionManagerImpl and FloatingIconView to accommodate vertical bar layout to improve UI responsiveness
added full - screen exclusive mode functionality to XWindow and its implementations to enhance user experience by allowing full - screen mode behavior in the application
updated string length handling in StringUtil . java and added UMSUtilsTest . java with unit tests to ensure correct parsing of played duration strings
added functionality to manage URI credentials in DagUtils and TezTask to enhance security and logging capabilities for URI management in the DagUtils
( chore ) camel - core : use map . entryset ( ) instead of map . keySet ( )
trim leading and trailing whitespace from the thread name in SessionState . java to ensure consistent thread name formatting by removing leading / trailing spaces
corrected a typo in the error message for adding a description until the next point has been logged to a file to clarify the
[ hotfix ] fix checkstyle violation in job . java
added a new ` Unused ` class with methods for handling unused fields in the ` Main ` class to enhance type safety and facilit
updated the key map from " hbase _ master _ host " to " hbase _ master _ hosts " in StageUtils . java and
deleted the EventReaderDeserializer and EventWriterSerializer interface to remove unused interfaces to streamline the codebase
changed the return type of ` performJoin ` from ` GenericRecord ` to ` List < GenericRecord > ` across multiple files to support multiple
updated the maximum delegate lock period logic in ProposalUtil and DynamicPropertiesStore to allow for a maximum of 10512000 milliseconds to enhance flexibility
changed the type of ` networkRate ` from ` int ` to ` Integer ` in ` NicTO ` and ` NicProfile `
removed the ` applySpecification ` method from the ` CmcExchange ` class to streamline the exchange configuration by eliminating unnecessary service initialization
updated the configuration handling in GossipLocalNode to check for the presence of the " seed . node . ip . list " configuration and improved
add system property ` hazelcast . client . tpc . enabled ` to ` clienttpcconfig ` ( # 23203 )
updated the swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to ensure compatibility with
refactor division logic in MutableBigInteger and add a new ModInvTime class to improve clarity and functionality of modular inverse calculations
modified the handling of the ` key ` variable in ` NamedObjectList . java ` to ensure that an empty string is used when the ` name
updated method names from ` Util . cleanupEmptyDir ` to ` Util . cleanupEmptyTableDir ` across multiple files to improve clarity and
refactor AsyncCache and Cache classes for improved performance to enhance caching efficiency and reduce memory usage
added import for RCFileInputFormat in SerializationUtilities . java to enable serialization support for RCFileInputFormat in the application
added methods to retrieve type and category of a column in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in Request . java and improved test cases in RequestTest . java to ensure proper error reporting for invalid
updated TimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for testing timezone retrieval to improve compatibility with newer Android versions and enhance test reliability
removed the addOutgoingValues and forEachOutgoingValue methods from StandardOp . java to streamline the code by eliminating unnecessary complexity
replaced instances of ` segment ` and ` cfsDir ` with ` cfsDir ` in ` SegmentCoreReaders . java ` to
added a method ` hasMainThreadProfile ` to ` AggregateDao ` , ` AggregateDao ` , and ` TransactionCommonService ` to check
added validation for annotation definitions in a Buck rule with required _ for _ source _ abi = absent to ensure that annotation definitions are not incorrectly
rename names from " greekLowerCase " to " irishLowercase " across multiple filter factories to improve clarity and consistency in naming
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
dspace - 4.0 : use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor since dspace 4.0
replaced individual " America / Dawson " and " America / WhiteHorse " with " America / WhiteHorse
updated the initialization of the SurfaceSyncGroup to include a specific identifier for better identification of the TaskbarController
updated GridFsTemplate and GridFsTemplateIntegrationTests to use UUID instead of BsonObjectId and improved readability to enhance code clarity and
added methods to retrieve total size and bytes in ShadowDownloadManager to enhance testing capabilities for download operations in the ShadowDownloadManager
refactor character handling logic in TextField . java to improve readability and maintainability to enhance code clarity and ensure correct text insertion behavior
added a check to return early if the instance is the same as the target to optimize performance by avoiding unnecessary processing
refactor statement handling in ` Lower ` and ` BlockLexicalContext ` classes to improve clarity and functionality to enhance code readability and
added hashCode ( ) method to IntervalXYDelegate and XYSeriesCollection classes to ensure consistent hash code generation for instances of IntervalXYDelegate and XY
clientqueuedisruptiontest : cleanup resource after test
refactor CloudWatchAppender , RegisteredServiceScriptedAttributeFilterTests , and CasPersonDirectoryConfiguration for improved naming consistency and clarity to enhance
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` to improve serialization accuracy for floating
added calls to ` HttpMethed . waitToProduceNextBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty subtags in Locale . java and modified language tag handling in LanguageTag . java to ensure proper canonicalization of
kvm : add kvm . ssh . to . agent config to disable ssh into kvm agent
removed the ` public ` access modifier from the ` ScheduledAction ` class and methods in the ` SchedulerWhen ` class to enhance encapsulation by
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to align with the latest project structure
added a condition to check if the filter contains a hyphen in the filter string to ensure that invalid filter names are not processed
updated sort column labels to use " Natural column order " instead of " natural order " to improve clarity in sorting column labels and
updated array copying logic in Utils . java to ensure the original input array is modified correctly
replaced ` write ` method with ` htmlEncodeButNotSpace ` in ` HtmlSessionInformationsReport . java ` to enhance security by
updated the topic check from " smarthome / items / " to " smarthome / items / " in ItemStateTriggerHandler .
refactor synchronization in FastHttpDateFormat to improve readability to enhance performance by reducing unnecessary synchronization
refactor file moving logic to use a thread pool for concurrent execution to improve efficiency and resource management during file operations
added a new method ` trigger ` to ` WrapTimer ` for scheduling and canceling a timer task to enhance the functionality of ` WrapTimer
[ flink - 18421 ] [ table - common ] add support for local _ date and local _ date _ time type in tostring
added a verbose option to the error logging mechanism in AbstractStatusReporter to provide more detailed error information when verbose mode is enabled
added menu toggle functionality to ClickStartHandler to ensure actions are only triggered when the menu is currently displayed
s2s vpn : check if vpn connection be esitablished between the same account ' s vpn gateway and the customer gateway ( #
removed error handling logic in CursorReadingTask and added unit tests for error handling in CursorReadingTaskUnitTests to streamline error management and ensure
added encryption checks for PDF documents in PDFBoxThumbnail and PDFFilter classes to ensure data integrity by preventing operations on encrypted documents
[ 3.0 ] fix curatorzookeeperclient . getchildren ( ) failure ( # 10727 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated Uri construction and deleted item functionality in HostsList . java to improve clarity and correctness of URI handling during item deletion
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the ` replaceOrderBulk ` method from ` Collection ` to ` List < BitmexPrivateOrder > ` to
renamed the method ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` in ` Lower `
added a new ` J9ConstantHelper ` class and refactored the ` ObjectHash ` class to use it to improve code organization and
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate concurrent invocation behavior in ` ITarget ` to ensure
add method to notify roster offline when a roster be remove from the roster list .
updated properties retrieval from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDesers is null
added a warning log level setting to the mockserver ' s log level to improve visibility of server - related logging for better debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to enable test execution for the test case
removed unused imports from AbstractSolrMorphlineZkTestBase . java to streamline code by eliminating unnecessary dependencies
updated scoreMap and termScoreMap to use a new HashMap for termScoreMap and added termScoreMap to improve score management by associating
updated condition checks in U64 . java to use negative values instead of bitwise operations to improve clarity and correctness of parameter equality checks
added headline style for text fill and font size in MainViewModel to improve text appearance and readability in the user interface
updated notifyChange method to include support for dark text in WallpaperColorInfo to ensure notifications reflect changes in dark theme support accurately
[ flink - 23203 ] [ runtime ] fix potential race condition in checkpointrequestdecider
updated thread pool size and keep alive time constants in Parallel . java to optimize resource management and improve performance
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
added test requirements for non - Windows ServerCore container in OpenCVImageFactoryTest . java to ensure tests fail on the Windows Server Core container
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - add option to
fix protocol . getreturnvalue ( ) to throw any throwable instead of just return the message .
added @ Repeatable annotation to Issue . Issues and implemented a new interface Issues to enhance the functionality of the Issue class by allowing multiple
updated userProps from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated imports in
refactor socket connection to handle SOCKS proxy configuration to improve socket connection flexibility by allowing dynamic proxy configuration
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
removed the import of ClassUtils from ReflectionUtils . java to streamline dependencies by eliminating unused imports
replaced HashSet with LinkedHashSet in SslContextFactory to ensure predictable iteration order for protocols , cipher suites , and cipher suites
added a check to return the system resource if it matches the system resource location to optimize resource management by caching the system resource when applicable
[ java ] add a constant for plaintext segment size in streamingaead and streamingaead seekable decryption .
added a test for circuit breaker fallback handling in ServerMvcIntegrationTests . java to ensure that invalid fallback routes throw an appropriate exception
added SSLConnectionSocketFactory for SSL connections in AppPage . java to enable secure connections for HTTP requests
updated the size limit for the input stream in PerformanceTest . java to improve performance by reducing the number of bytes read
added preferAES property and corresponding getter / setter methods in ProtectionPolicy . java and StandardProtectionPolicy . java to enable flexibility in encryption
( chore ) camel - opentelemetry : use log instead of system . out
[ hotfix ] [ test ] fix elbintegrationtest # testloadbalancerinstanceoperations
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the
added error handling for file creation in DiacriticTest . java to improve robustness by preventing crashes due to invalid file paths
hhh - 17777 add support for oracle 11 in followonlockingtest
added error handling for missing atlas images and improved file retrieval in TextureUnpacker . java to enhance robustness and provide clearer error messages
added locking mechanism for cluster write operations in AmbariManagementControllerImpl . java to ensure thread safety during service state updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify query closure behavior in ` TestJdbcDriver2 . java ` and modified ` HiveQueryResultSet . java ` to
refactor InputStreamBodyGenerator to handle markSupported ( ) and streamline test cases in ChunkingTest to improve readability and maintainability of
updated return statement to include handling for pre - deleted databases in ClusterSchemaManager to ensure that only non - deleted databases are stored in the schema
added conditional checks for " chunkedWriter " in Http1xUpgradeToH2CHandler . java to ensure proper handling of chunked responses
updated conditions in ` EnhancedBrowseFragment ` and ` FullDetailsFragment ` , and added a deleteItem method in ` FullDetailsFragment `
introduced RuleBank interface and refactored RuleFinder to use a new RuleBank interface to improve code organization and facilitate
added exception handling to the doFinal method in JcaTlsCrypto . java to improve robustness by throwing a TlsFatalAlert for internal
added new files ` TestMonomorphicObjectCall . java ` and ` Object . java ` for testing monomorphic object calls and object
replaced ` removeMetaDataSource ` method calls with ` toFront ( ) ` in ` DataBrowser ` and ` Desktop ` classes to
hbase - 11976 fix npe in defaultmemstore . shouldSeek ( )
[ hotfix ] [ taskmanager ] move localstate / localrecoverystatedirectory to taskManagerServicesconfiguration
updated the ` AlterTimeSeriesStatement ` class to accept a ` boolean ` parameter for altering views to improve clarity and flexibility in
fix : regex . matchtext ( string , string ) should return ` ` . * ' ' instead of ` ` . * ' '
added a try - catch block to handle potential exceptions when retrieving the routing table builder to improve robustness by preventing application crashes due to
replaced ` putAll ` with ` putIfAbsent ` in ` HttpClientIntroductionAdvice . java ` to ensure that existing values are not
( chore ) camel - jms : use char [ ] instead of string
server : search for root domain in search for recursive search
removed methods from the Counters class and updated equality checks in CountersTest to simplify comparison logic and improve accuracy of count comparisons
renamed the parameter ` status ` to ` original ` in the ` initialize ` method and added warning handling to improve clarity and ensure warnings
[ gr - 13434 ] fix a bug in sulong . currenttimemillis ( ) .
updated method calls to handle variable references in PrettyPrinter . java to improve code clarity and maintainability by using a variable reference
added a null check for ` indexToNode [ currSize ] ` before creating a new node in ` LRUDictionary . java ` to prevent
refactor DatagramSocket to improve filtering logic and enhance error handling to enhance robustness and prevent potential null pointer exceptions
( chore ) camel - test - infra - dns : migrate testquerydns to junit5 ( # 4528 )
added a new file ` NutchServerInfo . java ` to encapsulate server information related to date , job , and running jobs to
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
added a timestamp option to CqlInserter and ThriftInserter , and updated timestamp handling in SettingsColumn to allow users to specify
refactor DSAParameterGenerator to use BigInteger . ONE instead of hardcoded values to improve clarity and maintainability of strength validation logic
refactor Numbers class to improve handling of integer and double conversions to enhance performance and correctness of number calculations
updated masking logic in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior for IP addresses and validate functionality
added constraint violation check for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to database
[ issue # 5390 ] fix the issue of the remote broker offset store not be set to zero if not find ( # 539
added methods to create and insert tabs with specified font , icon size , and index to enhance flexibility in tab management by allowing dynamic sizing
replaced array size checks with zero - length arrays in multiple Java files to improve code readability and performance by avoiding unnecessary array allocation
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
added a conditional check for ` reqGroup ` , ` scope ` , and ` requestedBom ` in ` MavenVisitor . java ` to
renamed mockAppSecretUpdate and mockAppNameUpdate to MOCK _ APP _ NAME _ UPDATE and MOCK _ NAME _ UPDATE ,
added a new file ` FormatCheckingTest . java ` to test the handling of illegal class names to ensure that the application correctly identifies and reports
updated line number assignment logic in CodeGenerator . java to ensure correct line number is used during method execution
added a try - catch block to handle potential exceptions when retrieving service properties to improve robustness by preventing application crashes due to potential runtime
added a new method ` createToggle ` to create ` RadioButton ` instances with ` Image ` and ` Command ` parameters to enhance flexibility
updated cache initialization to use a fixed cache size to optimize memory usage and improve performance
updated visibility of DEFAULT _ CAPACITY from private to public and refactored capacity handling in ChannelParser and MessageBusParser to improve accessibility
camel - 7014 : avoid nullpointerexception when try to quote the symbolic name of a bundle .
add a new system property ` ` usemode ' ' in modecontribution . load ( )
[ hotfix ] [ runtime ] fix shutdown hook issue in iomanager
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity and consistency in referencing the
do n ' t propagate empty message if there be no header propagation
updated CompareMode class to improve comparison logic to enhance performance and accuracy of comparison operations
added ` HasTests ` interface to ` Arg ` and implemented it in ` RustBinaryDescription ` and ` RustLibraryDescription ` to
updated placeholder and error drawable resources in FileMessageVH . java to improve visual consistency and clarity in the user interface
updated the OnExitTest class to improve exit handling logic to enhance application stability during exit scenarios
added a ` onUserPreferenceChanged ` method to ` TaskbarManager ` to recreate the taskbar when user preferences change
refactor heap dumping logic to differentiate between IBM V9 and J9 V9 environments to enhance compatibility with different JVM versions and
camel - 16400 : camel - mybatis should close the session in case of exception
danielwagnerhall : implement iedriversupport , iedriversupport , and iedr
replaced JDK 5 for - loop with Java 5 for - loop and modified trigger patterns in IteratorToFor . java to improve compatibility with Java
set the application state to UNAVAILABLE in JmxApplicationProvider to ensure the application is in an unavailable state for better resource management
updated position and limit calculations in Buffer and StringCharBuffer classes to improve clarity and correctness of position and limit handling
replaced ` toUri ( ) ` with ` toString ( i ) ` for splitting strings in ` ConditionalResolverMergeFiles . java ` to
updated the ` setEmpty ` method across multiple classes to handle empty arrays to ensure proper array manipulation and prevent index out - of - bounds errors
changed enum visibility from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enum from other packages
updated the document structure in TestMultiPhraseQuery . java to include an additional document to enhance the test coverage for multi - phrase queries
do n ' t assign offline ticket when the payment method be offline
added thread synchronization and error handling for onTimeout methods in HttpChannelState . java to ensure thread consistency and prevent illegal state exceptions during timeouts
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve log clarity and
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
do n ' t use local _ quorum if local _ serial = true
added a condition to check for " Home " in the model manufacturer and modified conditions in HeosDiscoveryParticipant . java to include " Home "
added a new ` Wait ` class and modified ` PlainSelect ` and ` SelectDeParser ` classes to support SQL timeout functionality to enhance SQL
updated Neo4j . java to use AttributeController and attributes for node and edge data to improve attribute handling and simplify node and edge data
added null checks for ' from ' and ' serverName ' in the SessionManager class to ensure proper validation of ' from ' and ' serverName '
nifi - 5231 : move rocksdbmetronome from org . apache . nifi . rocksdb to org . apache .
updated the method to retrieve the grantable status from the results object to improve flexibility by allowing retrieval of the grantable status from the database
added logging for asynchronous execution and modified URL checks in JavascriptContext . java to improve debugging visibility and ensure proper handling of JavaScript URLs
( chore ) camel - cxf : check for macos before run test
updated column modification logic in LoadTestTool . java to differentiate between modifying and adding columns to ensure correct handling of column modifications based on whether
added Disposable interface to Texture class to enhance resource management by ensuring texture resources are properly disposed
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper instead of WebappRegistrationCustomizer to enhance functionality by
check goquorum privacy when use goquorum ( # 1359 )
replace IOException with Throwable in HttpInput . java to improve error handling by capturing a broader range of exceptions
added a condition to exclude JP from the country check in LocaleTest . java to address potential issues caused by the JP era in the
updated the interface name from ` Wrapper ` to ` HostResponse . HostResponseWrapper ` across multiple files to improve clarity and consistency in the
updated query equality checks and hash code generation in FilteredQuery . java to ensure accurate comparison and hashing based on the boost value
reformatted the constructor parameter in FileMenuFilter . java to improve code readability and maintain consistency
ggb - 1343 text editor now work with geogebra debug
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` to testCMSClassUnloadingDisabledHWM . java to
added a check for non - empty entities before creating an ItemTossEvent to avoid potential NullPointerExceptions when accessing entities
renamed ColumnMapKeyMappingPreparedStatementSetter to ColumnMapItemPreparedStatementSetter and updated related references to align with Spring Batch ' s ItemPreparedStatementSetter
use identityqueryfilter instead of range in compactiontest
added null check for ' type ' attribute in MiniAapt . java and implemented a test for invalid item resources in MiniAaptTest .
added support for the " SpEL " operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the
[ hotfix ] [ table - planner - blink ] fix typo in ordinalitytype check
bugfix # 174669 , use eventqueue instead of sun . misc . service . providers
refactor CertBlacklist , ConscryptCertStore , ConscryptHostnameVerifier , and Java8FileDescriptorSocket classes to improve code organization
added error handling for attribute lookup failures in AttributeResolution9 . java and updated variable declarations in ShadowArscAssetManager9 . java to improve
updated source and target options in SetupHid . java from version 1.5 to version 6 to ensure compatibility with the latest features and impro
[ flink - 20536 ] [ table - planner - blink ] support metadata only in pushproject into table source scan
refactor code to use sortedLocalizedNamesRef for improved readability and maintainability to enhance code clarity and ensure consistent localization
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
modified the refresh logic to conditionally handle live streaming settings to improve performance by avoiding unnecessary refreshes when live streaming is disabled
added an exception parameter to the MappingException in AuditConfiguration . java to improve error handling by providing the cause of the exception
( chore ) camel - file : fix flaky test on slow ci server
updated generic type declarations in SchemaLoader , CompositeType , DynamicCompositeTypeTest , and CompositeTypeTest to use wildcard generics to improve type safety
added a transport support method to GitClientApplication and modified permission checks in RepositoryUrlPanel to enhance the application ' s capability to check for transport
added a new method ` getDelegatorName ( ) ` to multiple input consumer classes to provide detailed logging for long press navigation handling in the
added null check for mavenMetadata and modified version handling logic in ChangeParentPom . java to improve robustness by avoiding null pointer exceptions
8294246 : [ testbug ] testlargepageuseforheap fail on window due to miss page support
cloud _ usage db do n ' t exist in upgrade218to22 . java
http : / / issues . apache . org / jira / browse / amq - 4892 - allow test to run on window
added a new file ` TestObjectStreamClass . java ` to implement serialization tests for ` ObjectStreamClass ` to facilitate testing
refactor null check logic in ZoneAwareDiscoveryFilter to improve readability to enhance code clarity and maintainability by simplifying conditional checks
changed log level from error to warn in OpenTracingTracer . java to reduce log verbosity and focus on more critical issues
added a toString ( ) method to the Generator class to provide a clearer string representation of the registered generators
modified the handling of the ' dontquote ' variable in URI . java and added new test cases in Test . java to ensure proper handling of
added a null and empty check for resources in ClusterControllerImpl . java and implemented a test for NoSuchResourceException in ClusterControllerImplTest . java
refactor response validation logic in AccepttoApiUtils . java to improve error handling and logging clarity to enhance robustness and provide clearer
removed unnecessary buffer allocation for Android versions below 5 to streamline performance by eliminating unnecessary buffer allocation
rename SybaseASADatabase class to SybaseASAatabase to improve clarity and consistency in naming conventions
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods accordingly to enable backward compatibility while maintaining backward
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to access the ` StringDistance `
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , FLAG _ MUTABLE , and FLAG _ IMMUTABLE ,
added methods to append read column IDs and refactored configuration handling in HiveInputFormat to improve clarity and maintainability of read column ID
replaced ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added functionality to display a temporary toast message in SavedExperiments . java to enhance user experience by providing feedback during temporary operations
added version resolution logic in ServiceModule and created a test for version resolution in ServiceModuleTest to ensure correct version handling in service resolution and validate
added a new file ` RawSerializationTest . java ` to implement unit tests for Gson serialization to ensure correct JSON output for various collection types and
simonstewart : add sslcertificategenerator interface for selenium server
updated the iteration over replies in ExpansionViewHelper . java to use an index - based loop for displaying tweets to improve performance and cl
increased the timeout duration for assertions in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for the test to
added a new test method ` testNGramFilterPayload ` to validate the NGram filter ' s payload decoding to ensure correctness of
refactor AclImpl class to improve code organization to enhance maintainability and readability of the codebase
added a new test method for randomized arrays with different sizes in EasyRandomTest . java to ensure that different arrays of different sizes are generated
bug 10363 : fix npe in citrixresourcebase when try to stop a vm
added a thread - local variable ` __ tryWriteAgain ` and modified the execution logic in ` SslConnection . java ` to ensure proper handling
added a method ` ancestorsVisible ( ) ` to check if an actor is visible to enhance the functionality of the ` Actor ` class by allowing
added logging for failed rolling - update steps in RollingUpdateOpFactory to improve visibility into failure scenarios during deployment
[ hotfix ] [ table ] fix typo in tableprovider javadoc
added error handling for username retrieval in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve authentication reliability and provide
updated AtMostXVerificationTest . java file to improve test coverage for verification functionality
updated the default QTYPE constant from " lucene " to " luceneQParserPlugin . DEFAULT _ QTYPE " in multiple files to
added Locale . US to the SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden the ` isInitialized ( ) ` method in ` JavaLanguageServer
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` ClientAPITokenIntegrationTest ` class to cl
added transaction management methods in DatabaseAdapter and improved error handling in GncXmlHandler to enhance database transaction management and ensure robust error handling during
refactor byte array handling to use ByteArrayOutputStream for better memory management to improve performance and reduce memory overhead when reading and writing
refactor exception message handling in MessagingTemplate . java to use a boolean variable for clarity to improve readability and maintainability of the code
added an implementation of the ` isAcceptable ` method in ` AutoFormatVisitor ` to check if a source file is acceptable to ensure
set max buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve memory management and performance during index writing
clear wits in Manager and add a test for updating witnesses in ManagerTest to ensure proper management of witnesses in the database
added a check for ` numToEvict ` in ` CopyOnWriteMap . java ` to ensure that ` iterator . next ( ) `
flumenode : remove log4j level parameter from flumenode and flumemaster
updated authentication metrics in BasicAuthIntegrationTest and modified DaemonStream to use ExecutorService for thread management to improve reliability of authentication checks and enhance thread
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order of graph nodes
[ issue # 7370 ] log internal error in jersey ( # 7371 )
updated header validation logic in Http2TestBase . java to improve code readability and maintainability by centralizing header validation logic
refactor property handling in System . java to use a switch statement to improve readability and maintainability of the code
changed method parameters from String to CharSequence in StringSubject . java and added unit tests for stringContainsCharSeq and doesNotContainCharSequence to
add checkgraalintrinsics for jdk / jfr / internal / jvm . counterTime ( ) and jvm . getEventWriter (
rename ` IntUtilsTest ` to ` PrimUtilsTest ` to clarify the purpose of the test class
updated the connection factory handling in PersistenceManagerProvider to ensure compatibility with the new connection factory when compactor is enabled
refactor DeploymentOptions class to improve code readability to enhance maintainability and simplify future updates
updated the ` updateTextButtonWithDrawable ` method to remove the ` ConstantState ` parameter and modified drawable handling to simplify the method signature and
refactor XmlParser and YamlParser to use try - with - resources for better resource management to improve code readability and ensure proper resource closure
added support for the coalesce operator in RexNodeConverter and registered it in SqlFunctionConverter to enhance the functionality of RexNodeConverter
camel - 16400 : camel - hl7dataformat should not use hl7 ' s unmarshaller when unmarshalling
updated JavassistProxyFactoryFactory to use the current class loader for proxy generation to ensure proper context class loader management during proxy creation
replaced the constructor of DefaultDateTypeAdapter with a singleton instance of DefaultDateTypeAdapter to simplify instantiation and ensure thread safety during object creation
reformatted method parameters in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI handling and improve query parsing to enhance code readability and maintainability by simplifying the URI initialization logic
removed the filterOldEntries method from FeedRefreshUpdater . java to streamline the code by eliminating unnecessary functionality
hbase - 17421 addendum change log level from fatal to warn ( addendum )
replaced instances of ` getValues ( ) ` with ` NodeMapIterable ` in ` NodeMap . java ` to enhance code readability and
rename ` predicate ` to ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity and consistency in naming con
added a null check for fields before adding aggregation operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator . java
add a default admin list if there be no admin list
updated the retrieval of terms in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLogisticRegressionQParser
updated the return statement in ConstantBeanHolder to include the class name and identity hash code to provide clearer context for the bean ' s identity
removed unnecessary null check for primitiveType in GroovyParserVisitor . java to simplify code logic and improve readability
[ gr - 13434 ] remove uninterruptible call from frameinfoQueryResult . java .
increased offerTimeout from 100 to 200 in SedaBlockWhenFullTest . java to allow more time for blocking operations to complete
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
updated the calculation of readLen in MessageUnpacker . java to ensure correct buffer size handling to improve readability and prevent potential buffer overflow errors
updated import statement from ` io . micrometer . common . lang ` to ` io . micrometer . core . lang
updated the SQL query to include a user identifier for the component to ensure that only relevant components are retrieved from the database
updated variable names from ` getBackPressureForAsyncSendNum ` to ` getBackPressureForAsyncSendSize ` in ` DefaultMQProducer
do n ' t add module - info . class resource if root pkg not whitelisted ( # 352 )
cloudstack - 5237 : fix baremetal foreign key constraint in db upgrade
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the class structure by eliminating unnecessary interfaces
added onTearDown method to DefaultAudioSink for handling offload buffer emptying to ensure that offload buffer is cleared when the audio
added scheduling functionality for upstream tasks in UpstreamCacheManager to improve task management and performance by utilizing scheduled tasks
[ hotfix ] [ doc ] fix typo in streamtype javadoc
updated the assertion message in Recording . java to include a clearer error message to improve clarity of assertion failure messages for better debugging
updated import statements and modified user authentication logic in FilestorePage . java and RootPage . java to enhance role - based access control and
( chore ) camel - elasticsearch - rest : disable camel - elasticsearch - rest test
updated the ` accept ` method in ` ExpressionControlBusFactoryBean ` to include checks for ` Lifecycle ` and ` CustomizableThreadCreator `
updated button text resources for both left and right buttons in OfferBookChartView . java to improve clarity and accuracy of button functionality
camel - 7014 : camel - rest - do n ' t allow method route with invalid url . thanks to daniel
block : remove unused parameter from createnextblock ( )
removed Serializable interface from BTreeMapJava and updated test annotations in ConcurrentSkipListMapTest and JSR166Test to enhance serialization functionality and
added null check for the cause of the exception in RuleEngineImpl . java to improve error logging to avoid potential NullPointerExceptions during execution
reformatted conditional statements in Main . java for improved readability to enhance code clarity and maintainability
replaced ` mFilesAll ` with ` mFiles . indexOf ` in ` LocalFileListAdapter . java ` to simplify the code by directly
deleted the PlainVerifier . java file to remove unused code to streamline the project
added a condition to close the system window when the alt tab is triggered to ensure the app closes the recent windows when the alt tab is triggered
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog functionality and ensure proper state management during tests
updated MimeUtil to use UTF - 8 encoding for charset parsing to ensure proper handling of character encoding in MIME requests
added a call to super . deinitialize ( ) in the TextField class to ensure proper initialization of the TextField class
replaced ` IOException ` with ` TestUtilities . serialised ` in ` LogFormatTest . java ` to simplify serialization process and improve code
updated preRange and fill initialization in LogicalGenerator , GroupByFillDataSet , and PhysicalPlanTest classes to improve clarity of duration parsing and
added negative array size exception handling and modified input validation logic in JAXWSExceptionBase . java to improve robustness by throwing negative array size exceptions
test : migrate ctunresolvedimporttest to junit 5 ( # 4649 )
increased the join duration from 10 seconds to 60 seconds to allow more time for the thread to complete before timing out
[ hotfix ] [ runtime ] fix default value of slotsharinggroup in miniclusteritcase
added i18nSafe annotations to multiple ShadowActivity and ShadowTextView classes to disable i18n checks for better user experience
replaced ` LogFactory ` with ` POILogger ` in ` POIFSFileSystem . java ` to utilize a more appropriate logging
[ instar ] fix npe in instar handler ( # 11387 )
added latency tracking for delete operation in the local map stats to improve performance monitoring and tracking of delete operations
updated enum type declaration and modified status handling in Response . java to improve code clarity and enhance response status validation
refactor javac location retrieval logic in CheckResourceKeys . java to improve clarity and error handling when finding the javac location
add project name to flutter create additional config ( # 5024 )
added a new file ` DeprecatedStubbingTest . java ` to implement tests for deprecated stubbing behavior in Mockito to ensure compatibility and correct
updated import statement for DispatcherType from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet ` to
hunspell : fix a bug that occasionally occur while parse treebank error
add a system property to allow rsa key exchange by default .
replaced ` output _ reader ` with ` reader ` in multiple files to improve resource management by ensuring the BufferedReader is closed after use
added methods to delete OAuth service and access token in PubSubAPI and SDMAPI classes to improve resource management by ensuring all service instances are properly
updated interpolators from AGGRESSIVE _ EASE to EMPHAZED in TaskbarEduView . java to improve animation
added UpdateRegionLocationPlan to ConfigPhysicalPlan and updated log messages for region migration to improve visibility and clarity of region migration processes
added a new file ` FileDialogLeakTest . java ` to test the ` FileDialog ` behavior to ensure that the ` FileDialog
hbase - 2635 addendum fix javadoc warning in testopentableincoprocessor
[ gr - 13434 ] fix trufflefeature . isuninterruptible ( ) to return false for uninterruptible implementation method .
[ flink - 18813 ] [ protobuf ] fix split method for pbbytestorow and pbcodegenrowserializer .
update condition in DrillSidewaysScorer to check for non - null disi to ensure proper handling of non - null disi values
fix flakey mediasource . setreadstreamtoend ( ) .
added JVM _ SPEC _ VERSION and JVM _ IS _ MINIMUM _ JAVA9 constants to determine if the application is running Java 9 or higher
updated the instantiation of FileReporter to accept both String and File types to ensure proper type handling for null values in FileReporter
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to ensure the end to
added menu item handling for home navigation in DirectMessageConversation to improve user experience by enabling navigation via the home button
added a new GET _ USER method to the Constants and updated the protocol version from 5 to 6 , and introduced a new method to retrieve user
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable the test based on the system ' s architecture
changed the variable ` startClass ` from ` startClass ` to ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure
updated exception message and improved local handling in DexBody . java to enhance clarity of error messages and ensure correct usage of unknown types
fix test break by
bugfix : fix nurse rostering problem when use lookandfeel
updated regex pattern for versioning in AppPage . java to ensure consistency in version formatting across the application
reset ui at the end of every app transtion ( instead of use a global reset )
updated error message to include the version instead of base58 to improve clarity of error reporting for debugging purposes
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` to ensure the
updated the handling of milestone parameters in TicketPage to differentiate between open and closed tickets to ensure correct milestone parameters are used based on the current
updated the RFBattery instance from 640 , 640 , 0 to 80 in PipeItemsWood . java to increase the capacity for
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRevision ` parameters to enhance clarity and functionality by
updated downgradeAllowed to default to true in UpgradePack . java and added a new test for it in UpgradePackTest . java to ensure
updated XML parsing methods to use ` NameType . ATTRIBUTENAME ` instead of ` NameType . ATTRIBUTE ` across multiple files to ensure
add an emulate system load library configuration to allow emulation of the system load library .
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` and ` getWidgetNameComparator ( ) `
updated entry handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and avoid potential memory leaks
reformatted method signatures in TestSecretKeyCredentialHandler . java for improved readability to enhance code clarity and provide additional context in assertion messages
( chore ) camel - spring - activemq : refactored routebuilderfinder to use camelcontext instead of applicationcontext
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 11312 addendum fix testfulllogreconstruction failure
added support for reuse address in DatagramSocketOptions to enable customization of socket options for improved network performance
improve server shutdown message ( fixes # 103 )
[ java ] remove deprecate locatable interface . it be deprecate in 3.0 . 0
updated error messages for field validation in VersionInfo . java to clarify the requirement for indexed , indexed , and retrievable fields to improve
renamed ` equalityPredicateColumns ` to ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
reformatted the initialization of the channel in HelloMessage . java for consistency to improve code readability and maintainability
updated newline formatting in Navigator . java to improve code readability and maintain consistency
changed access modifiers of constants from private to package - private in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest .
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and created corresponding unit tests to enhance
refactor GROUP BY expression handling in CalciteSqlParser to use a separate method to improve code readability and maintainability by reducing duplication
replaced unsupported operation exception with Unsafe . invokeCleaner and added buffer reference counting functionality to improve memory management and prevent unsupported operations
refactor LdapUtils to use a local variable for the validator object to improve code readability and reduce repetitive method calls
added a method ` schedule ( ) ` to ` CircuitBreakerImpl ` and modified the ` testCircuitBreaker ` method to use it to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent configuration by
updated the property name from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in multiple
added JUnit @ Disabled annotation to TableExtRetrieverTest . java to disable tests that allow retrieval strategy for column privileges
changed the ` addExportedCount ` method to be synchronized to ensure thread safety when accessing shared resources
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java
updated HttpParser to handle illegal characters and added a new test for encoded headers to improve error handling and ensure proper encoding of HTTP headers
updated the activity layout from " trends _ activity " to " configuration _ activity " to improve the user interface by using a more appropriate
updated print statement in SLWTTextListing . java to include the position of the SLWT element to improve clarity of the
refactor the ` ForceLeaderTest ` to use a new ` ForceLeaderWithTlogReplicas ` class and add a timeout mechanism to improve
refactor Thread class to improve thread management to enhance performance and reliability of thread operations
refactor template file suffixes in AbstractConfigurableTemplateResolver for improved readability and maintainability to enhance code clarity and facilitate
camel - 16400 fixed the issue of cxf payload namespace handling in camel - cxf
reformatted YamlRepresenter constructor and modified the RepresentConfigurationSection class to improve code readability and maintain consistency
updated date formatting in ToChar . java and added a test for SQL queries in TestFunctions . java to improve formatting consistency and enhance test coverage
added validation for transaction and write IDs in GenericUDTFGetSplits to ensure compatibility with valid transaction configurations in Hive
updated debug logging statements to use ` Collections . emptyList ( ) ` instead of ` ArrayList < String > ` and ` ArrayList < TypeInfo >
add book . getbookpath ( ) and add book . hasnoinitialimage ( ) .
modified the SSTDeserializer class to include a SID check before manufacturing strings and added a test case for it to ensure proper handling of
updated grid column handling in AppPreferencesImpl to use a constant for default values to improve code readability and maintainability by centralizing default values
updated error messages in ` Platform . java ` and ` ComparisonFailureWithFieldsTest . java ` to clarify differences between line breaks and
added a new boolean field ` waitingForKeys ` in ` DecoderInputBuffer ` and modified its logic in ` ClippingMediaPeriod `
updated API path annotations in OkexV3 . java from " / api / margin / v3 / accounts " to " / margin /
updated distance comparison logic in LineUtilitiesTests . java to ensure consistent behavior when comparing line coordinates
updated the handling of varargs and old array syntax in JavacParser . java and added new class T6569633 . java with
add check for playback thread in defaultdrmsessionmanager . setplayer ( )
added support for parsing methods in VariableContext and updated related tests to enhance functionality to support method references in variable contexts
added tests for invalid compilation unit and profile JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid JSON output
updated buffer limit handling in Piece . java and SharingPeer . java to improve clarity and maintainability of buffer management
added response timeout functionality to GatewayAutoConfiguration , HttpClientProperties , and RetryGatewayFilterFactory classes to enhance HTTP client response management by allowing configurable timeout
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` in ` CxxLibraryFactory ` and ` NativeLinkTargetGroup `
( chore ) camel - main : add unit test for rest configuration
added handling for RexFieldAccess in ASTConverter and refactored conversion logic in RexNodeConverter to improve handling of field access in
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final ` QUERY _ LOG _ ENTRY _ VALUES ` array to
add a new method ` relativizeNoProxy ( ) ` to the ` Proxy ` class and refactored the ` WebClientRequestBuilder
updated certificate handling logic in PKCS12KeyStore . java and StoreSecretKeyTest . java to improve clarity and correctness of certificate chain initialization
added reflection access checks and refactored methods in NativeObject and ReflectionCheckLinker to improve security checks for reflection access to enhance security and
changed the visibility of the CollisionMap constructor from public to package - private to restrict access to the constructor for better encapsulation
removed the @ NotNull annotation from the getRawInputFromTransactionInput method and added a null check for input to improve code clarity and ensure input
refactor log level handling in ConfigurationValueConverter and Main to use a switch statement to improve code readability and maintainability by consolidating log
cloudstack - 3569 : remove unnecessary region _ id parameter , since it be not need anymore
patch from josh from bug # 60284 from bug # 60284 to bug # 60284
[ gr - 33298 ] enable native - image - built - in benchmarks in mx _ java _ benchmarks
removed unnecessary else statement in TimeLineCursorAdapter . java to improve code readability and maintainability
increased sleep duration from 10 seconds to 50 seconds in BatchingStateChangeUploadSchedulerTest to improve test reliability by allowing more time for
refactor file creation logic in ShadowContext and add deleteDir method in ContextTest to improve directory management and ensure proper deletion of directories
updated exception handling in ExceptionFactory to use Class . forName for better compatibility to improve code readability and reduce the need for custom exception creation logic
increased the wait time from 10000ms to 60000ms in LauncherInstrumentation . java to allow more time for the launcher to
updated import statements and added audience handling in ConnectOAuth2RequestFactory , ConnectTokenEnhancer , and ConnectOAuth2RequestParameters to enhance
camel - 20297 camel - kafka : remove default value for breakonfirsterror
added a static final int selectableItemBackground in R . java to provide a default background color for selectable items
replaced individual trade DTO imports with a wildcard import and added a method for placing stop orders to simplify import statements and prepare for future
updated eventType assignment logic in TxnSetOperation . java to ensure correct handling of event types when record is null
add resumablerandomaccessfilelistener to prevent leak
updated class loader reference from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to ensure compatibility with the
updated format handling in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct formatting and validation of format
[ hotfix ] [ kafka ] deprecate deprecated method in flinkkafkaproducer
updated the calculation of the compressed chunk length to account for the maximum compressed length to ensure that the chunk length does not exceed the maximum compressed length
camel - 16400 - camel - data - redis : add idempotent repository to support idempotent operation on redis server .
fix a race condition where vanilla use metadata instead of damage .
fix legacylocalrepositorymanager to work correctly when use maven ' s defaultrepositorylayout
added checks for task manager initialization and improved error handling in LocalTaskManager and JobManager classes to enhance robustness and provide clearer error
added support for deploying files in the AbstractArtifactResolutionException class to enhance user experience by providing guidance on deployment options
replaced ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a method to retrieve internal
refactor FeedEntryStatusDAO to use Google Commons Collections and improve code readability to enhance maintainability and reduce dependencies on external libraries
added thread execution logic in ContextImpl . java and refactored deployment options in BlockedThreadCheckerTest . java to improve thread management and
updated the ` instantiate ` method to accept a ` formatterString ` parameter and added a null check for ` ctorArg ` in ` FormatterConverter
updated file input stream handling based on Android SDK version to ensure compatibility with newer Android versions
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with direct assignment of ` remoteAddress ` and ` remoteHost ` variables to
added a null check for ` realClass ` in ` Robolectric . java ` to ensure that a valid shadow class is annotated with
http : / / issues . apache . org / jira / browse / amq - 3833 - ensure tlsmutualauthenticationrequired be
updated import statements and added SSL exception handling in BasicHttpTest . java to ensure correct handling of SSL exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility of consumer and producer functionalities
updated conditional logic in PageChangeListener . java and added frame class list in FrameRenderer . java to improve widget event handling and enhance frame class management
change log message from ` email ` to ` SMS ` in ` CommunicationsManager . java ` to clarify the error message related to
no effective change - code cleanup - add draft query optimization
added error handling for IOException during file transfer in MultipartBody . java to improve robustness by gracefully handling non - IO exceptions during file transfer
fix checkstyle issue in java . io . executablefactory and zipfolder
updated multiple Java files related to EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix : use current working directory when attach file ( # 5338 )
added load options to SchemaCrawler options in AccessTest . java to enhance schema crawling capabilities for improved performance
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
modified the return statement in TestReader . java to return null instead of throwing an exception to simplify error handling by returning null instead of throwing an
added methods to set property names , enabled , and expanded states in ProjectProperty . java to enhance the functionality of the property management system
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
refactor DataStreamJob class to improve code readability and maintainability
refactor file handling in TestContentProvider to use try - with - resources for better resource management to improve resource management and prevent potential resource leak
( chore ) camel - cxf : use getrealclass ( string ) instead of getclass ( string )
added a conditional check for the " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of the " h2
refactor lambda handling and parameter symbol management in LambdaToMethod . java and ClassFileVisitor . java to improve clarity and functionality of lambda parameter
update the regex pattern for sbarq in CoordinationTransformer . java to improve the accuracy of the pattern matching
increase the timeout for file copying in DL4JInceptionV3Net . java to allow for a longer wait time before copying
added a method to set the phrase slop in the QueryParser to improve query performance by optimizing phrase slop calculation
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve responsiveness by allowing more time for event
updated the default value of ` Servers . parse ` from ` 8188 ` to ` 6188 ` in ` FlumeTimelineMetrics
fix ( demo ) : use threadmonitor for save screenshot task
updated visibility logic for the compound view based on edit options availability to ensure that the compound only displays when edit options are available
updated the progress calculation in DepthController to ensure the progress does not exceed 1.1 f to improve visual feedback by preventing excessively long
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Session ` classes to streamline the interface
added debug logging in ` DefaultCasDelegatingWebflowEventResolver ` and refactored ` DelegatedAuthenticationGenerateClientsAction ` to
added null checks for the service object before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadata
added ` hidden ` attribute to ` PantheonCommand ` class to enhance user control over account level permissions functionality
added instrumentation for the " androidx . room . CoroutinesRoom $ Companion " class in AndroidConfigurer to prevent unnecessary instrumentation
added logging for context class loader retrieval in NegotiateAuthentication . java to enhance error handling and provide clearer diagnostics during authentication checks
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the code by eliminating unnecessary functionality
camel - 16400 : camel - core - optimize queuereplymanager to reduce the number of concurrent consumer
refactor AuthenticationProvider and TargetObject classes to improve code readability and maintainability
added conditional flushing and closing of MC blocks in PdfDocument . java to ensure proper handling of MC blocks when the writer is tagged
log4j2 - 1343 add test case for patternselector
simonstewart : do n ' t throw unsupportedoperationexception when run html suite in hta mode
updated the thank response type from MwPostResponse to MwThankPostResponse and added a new class MwThankPost
added SocketBased interface and updated ChannelEndPoint to implement it to enhance socket management capabilities
refactor revokingStore initialization and size management in Manager . java to improve code clarity and ensure proper management of revoking store
added unit tests for HQL collection implicit joins in HQLTest . java to ensure correct handling of multiple calls and timestamps in JPA queries
updated assertions in NonVisualRegressionTest to trim line breaks from expected and actual text to ensure consistent comparison across different operating systems
refactor IndexWriter to utilize a new filesToCommit collection and add assertions in MockDirectoryWrapper to improve file tracking and ensure files are
added @ Final annotation to multiple methods in BaseError . java to ensure that these methods are not final and can be overridden in subclasses
added validation to ensure the percent value is within the acceptable range of 0 to 100 to prevent contract errors caused by invalid percent values
added a condition to check if show _ old _ login is true in AuthenticatorActivity to ensure legacy login is only shown when the old login is
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming
updated response page logic in EditTeamPage . java to ensure the correct page is displayed to the users page
updated log message in PMS . java to include error details to improve debugging clarity by providing more context on the initialization failure
refactor connection management to ensure the server socket channel is closed in a finally block to improve resource management and ensure proper shutdown of the server socket
refactor Rocket class to improve code readability to enhance maintainability and simplify future updates
refactor dynamic partition specification logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing duplication
ggb - 1349 add round _ half _ up _ factor for scientific format
added ` visitDirectory ` method to ` JarDirectoryStep ` and modified ` DirectoryTraversal ` to handle directory entries to improve directory traversal functionality and
added a new file JWKSetEditor . java to handle JWKSet parsing to enable support for JSON key pairs in the application
refactor finish methods in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to simplify term handling to
add truffle boundary for method . getparameterklasses ( ) . resolveparameterklasses ( ) .
change default value of ` byIP ` from ` true ` to ` false ` to disable IP fetching for improved performance
added a check for both ` queryTimeout ` and ` transactionTimeout ` in the ` StatementUtil ` class to ensure that ` queryTimeout `
added handling for target configuration hashing in HaskellGhciRuleIntegrationTest . java to ensure correct generation of target configuration paths based on
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
bug 10650 : network stats update task should run immediately if initial delay be negative
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use the FINAL _ FRAME constant to improve animation performance and
updated swipe length calculation in Background . java to adjust navigation bar visibility based on display density
added a new module - info . java file for the org . eclipse . jetty . http3 . server module and refactored
act - 1190 : fix nullpointerexception in jsontype and jsontest
simplified variable assignment for context in ResourceResolverBean . java to improve code readability and reduce redundancy
[ hotfix ] [ config ] remove default checkpointing option from executioncheckpointingoptions
updated inner class reference reporting to use Element instead of TypeElement for improved type safety to enhance accuracy in identifying inner class references and facilit
updated the command construction in TimestampCheck . java to include an additional space to improve command formatting for better readability
replaced FluentIterable with MoreCollectors for file listing to improve code readability and leverage modern Java features
[ 3.0 ] fix registration of dubbo service ( # 9305 )
do n ' t close all session if security otr mode be disabled
added outline properties to NodeLabelRenderer and modified renderProcessing method to include outline size and transparency to enhance visual customization of node labels in the
refactor ProxySelector , URL , and URLStreamHandler classes to improve code readability and maintainability
added a new boolean parameter ` - false ` and modified the behavior of the ` Win32FontManager ` class to enhance font management functionality
added a null check and cursor setting for the visit method in TreeVisitor . java to ensure the visit method does not throw a NullPointerException when the
added error handling policy to JDTBatchCompiler based on classpath presence to improve error management during compilation when no classpath is specified
added alignment and text anchor properties to LabelBlock class to enhance label rendering flexibility by allowing alignment and alignment options
refactor methods in Class and Parameter classes to improve code readability and maintainability
refactor IndexReader to improve code readability to enhance maintainability and ease of understanding for future developers
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface `
updated the ` fromRfc1123DateString ` method to include a locale parameter for date formatting to ensure consistent date formatting across different locales
updated the download method in FileDownloadViaProxyTest to include a PDF file extension to ensure that missing files are correctly handled as PDF files
nifi - 5231 : add output _ no _ hits property to json query elasticsearch
fix ( quota ) : use round _ down instead of round _ round to avoid overflow
[ java ] add try - catch block to try - catch block in election . java .
remove unnecessary close ( ) call in readfilesp , streamfilesp , and readfilesp # close ( )
refactor widget handling logic in PageChangeListener . java to improve readability and maintainability to enhance code clarity and reduce redundancy in widget
added a method ` isWriteProtected ( ) ` to the ` Workbook ` class and updated error handling in ` FileSharingRecord ` to
added error handling for unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to improve robustness by logging exceptions during session unregisteration
refactor CategorizationFragment to improve code readability to enhance maintainability and facilitate future updates
updated the status message from " bridge reports light as reachable = false " to " bridge reports light as not reachable " to clarify the
added a loading flag to fmlclienthandler , and a new fmlserverhandler . getloading ( ) method in fmlclienthandler
fix : return ` ` unit . millions ' ' and ` ` unit . thousands ' ' instead of ` ` mil '
added type handling for BYTES and STRING in MessagePackParser . java and implemented BinKeyPojo class in MessagePackDataformatTestBase to
added parameterized tests for query with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for
added serialization and deserialization tests for nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON format
added offset calculations for x2 and y2 in GeometryUtils . java to ensure proper positioning of geometry elements
refactor sorting order dialog handling in FileDisplayActivity and ReceiveExternalFilesActivity to utilize SortingOrderDialogFragment for improved sorting order
do n ' t exit if no testplan can be find
updated method names and variables in GeneratedEntityTranslator , JdbcManagerSupportImpl , and JdbcManagerSupportImpl to use Lazy for lazy initialization to improve
updated the handling of the ` argIdent ` variable in the ` Parser ` class to improve robustness by ensuring ` argIdent ` is set
updated default protocol configuration in JettyHttpComponent9 . java to ensure compatibility with different protocol configurations
set displayVolume to true in VolumeVO . java to ensure volume display is enabled by default
refactor JavahTask to improve version handling and message retrieval to enhance clarity and maintainability of versioning logic
updated condition checks and improved handling of change log parameters in ChangeLogParameters . java to enhance code clarity and ensure correct retrieval of change
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity during normal operation
hhh - 16462 skip test that fail due to a bug in basicformatterimpl cause exception during formatting of the sql string
removed duplicate startHandshake ( ) and setSoTimeout ( ) calls in Connection . java to streamline the handshake process and ensure socket timeout is
updated action bar size calculations in multiple fragments to include ` MainActivity . isPopup ` to ensure proper handling of action bar size for popups
changed the default value of CHA from false to true in EspressoOptions . java and changed class modifiers in DefaultClassHierarchyOracle .
http : / / issues . apache . org / activemq / browse / amq - 2119 - log the current thread context classloader
replaced ` generateSeededTimeRandomizersAndTheirExpectedValues ` with ` assertThat ` in ` JodaTimeRangeRandomizers
updated Jakarta EE 9 web application resources to support dynamic redirects based on the servlet version to enhance compatibility with Jetty EE
fix ( kubernetes - client - api ) : add readiness check to baseoperation
replace liveEndpoints with handler . endpoints for consistency to improve clarity and maintainability of the code
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to incorporate new features and improvements available
added a security manager check before checking package access in ObjectStreamClass and ObjectStreamField classes to enhance security by ensuring package access checks are performed
removed unused imports and modified method signatures in Utils . java , XLCDCommunicator . java , and modified UGSCommandCount in
refactor DefaultMetricsTagProvider to use a mutable map for tags instead of an immutable map to improve flexibility and maintainability of the code
danielwagnerhall : fix a typo in the test suite .
change default level from OFF to ERROR in Launcher . java to improve error handling by providing a more appropriate default level
changed variable declarations from private to final in IconNormalizer . java to enhance immutability and prevent unintended modifications
added a flag ` firstCallPrepareDo ` to the ` PrepareInterceptor ` class and updated prefix method invocation logic to support conditional execution based on
added focus management and updated workspace visibility logic in the Launcher class to improve user experience by ensuring the workspace is only shown when the focus state
added a singleton annotation to AuthWithStoreFeature and removed the use of eager singletons to simplify the binding process and improve dependency management
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to control
cloudstack - 3640 : remove private ip from the storage offering list when delete a pod
add documentation for async profile usage on linux 4.6 +
added a new class ` RequiredRefFieldModel ` and refactored its usage in ` ModelResolver ` to improve the handling of required properties
rename ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` to ` CasCoreConfigurationAutoConfiguration ` across multiple files to
updated FeatureFlags . java for improved functionality to enhance performance and maintainability of feature management
updated ` StringBuilder ` initialization and modified ` unique ` logic in ` ConfigStore ` , ` CommonSetup ` , and ` ItemUIDtoH
added image handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper image loading when the picture is cached
updated documentation for compaction means on full CRUD tables to clarify that compaction on insert - only tables will always run via queries
added a null check for the storage path in the waiting message to ensure stability by preventing operations on a non - existent storage path
refactor resize threshold checks in multiple classes to use a new ` checkResize ( ) ` method to improve code readability and maintainability by
refactor LDAPConnectionService class to improve connection handling to enhance security and reliability of LDAP connections
remove @ xmlattribute ( required = true ) and mark it a deprecate
removed debug logging statements from TouchInteractionService and RecentsAnimationDeviceState to streamline code and reduce unnecessary logging
added a condition to check if the class name starts with " com . IntelliJ IDEA build 193.2956 .
updated assertions from ` hits . length ( ) ` to ` hits2 . length ( ) ` in ` TestMultiSearcher . java `
added a new file ` LucenePackage . java ` that provides a static method ` get ( ) ` to retrieve the ` LucenePackage
updated sizeInBytes calculation in RAMDirectory . java to adjust sizeInBytes to ensure accurate tracking of the current size in memory
refactor estimation logic in various classes to improve accuracy of value calculations and enforce immutability to enhance code reliability and prevent unintended
added a null check for the drawer toggle before executing animations to prevent potential NullPointerExceptions during animations
added @ SuppressWarnings ( " unused " ) annotations to the convertToAuthentication method to improve code clarity and suppress warnings related to unused subject
added logic to manage module scanning based on ` overrideClassLoaders ( ) ` and ` enableSystemJarsAndModules ( ) ` to ensure
fix camel - msbibconverter to handle corporate corporate field ( # 4245 )
added a check for ZooKeeper awareness and refactored core recovery handling in CoreContainer . java to improve error handling and ensure proper management of
replaced calls to ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` and introduced a new method ` currentTimeMillis ( ) ` to
modified the logic for clicking the first element of the found list in RepoEditView . java to ensure that the button is only triggered when
updated error messages in PGProperty . java for clarity to improve user understanding of connection parameters
added trust resolver , role hierarchy , and permission evaluator configurations in SecurityEvaluationContextExtension to enhance security evaluation capabilities by incorporating trust resolver
added a check for zero exponentSize in DHParameterGenerator . java to ensure exponentSize defaults correctly when it is zero
replaced the usage of ` ocLocalFolder ` with ` FileStorageUtils ` for obtaining the usable space in multiple classes to streamline
refactor the combine method in DistinctSqlAggregation and add unit tests in DistinctSqlAggregationTest to improve code clarity and ensure correct
added a test for post - login activities in UserServiceTest . java to ensure that post - login activities are executed correctly during successful authentication
extractorspanishstrippedverb so that it can be use a dictionary path .
refactor character array handling logic in CharArraySet . java and update test cases in TestCharArraySet . java to improve code clarity and
add check for unsupported track format in muxerwrapper .
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` and updated asset directory handling in ` JsBundleGenrule . java ` to
set character encoding to UTF - 8 in PinotClientRequestServlet and refactored string lookup logic in StringDictionary to improve character encoding handling
renamed the application list from " Logical Analyzer " to " Logic Analyzer " and updated drawable resources accordingly to improve clarity and functionality
added static fields for ` instanceClassName ` and ` instanceClass ` in ` AbstractVector . java ` and refactored the instantiation logic to
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
refactor feedbackcontributionquestiondetails to make it clear that there be no response
added TestLoggingExtension annotation to DiagramRendererTest . java to enable logging functionality for debugging purposes
added a parameter to the ` findProperty ` method in ` FastResultSetHandler ` , ` MapWrapper ` , and ` ObjectWrapper ` classes
added support for the VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance
replaced direct calls to ` getSslSessionData ( ) . getCerts ( ) ` and ` getSslSessionData ( ) `
added a new file ` CreateNewSpreadsheet . java ` that contains functionality for creating a new Excel spreadsheet to facilitate the creation
replaced ` Duration ` with ` long ` for TTL and time - to - live properties in ` CacheProperties ` and updated corresponding tests to
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in multiple files to prevent notifications from being triggered during
updated the version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to incorporate the latest
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety by synchron
updated conditional check in DocClassUtil . java to include a check for the ' < ' character to ensure proper handling of HTML tags in string
removed the use of String . format in the return statement to simplify the code and improve readability
added a message for missing validation errors in ValidateCommandStep . java to provide user feedback when validation errors are not found
replaced specific imports and added a new method to configure web resources in IntegrationTestContextLoader to improve compatibility with Spring ' s web application context
updated condition checks in Component . java and replaced getResponderAt ( ) with getComponentAt ( ) in Container . java to ensure proper handling of
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures in ` DefaultStatsService ` to use ` String ` instead of ` Long `
updated regex patterns in CellContentConverter to replace newline characters with newline characters to ensure consistent formatting and improve readability of the generated expression
handle the multi - line regexp match case correctly ( previously would never match a multi - line target )
mondrian : fix typo in mondrianproperties javadoc
added stack trace printing in ProcessTools . java and modified launcher permission checks in CustomLauncherTest . java to enhance debugging capabilities and ensure proper permission
added an embedded image test method in TumblrRipperTest . java to enable testing of embedded images in Tumblr
added a conditional check for the presence of a slot for the store type in CodeGenerator . java to ensure conversion is only attempted if the slot
refactor data source handling in multiple classes to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
added a method to convert a ByteArrayOutputStream to a PrintStreamInfoStream in BaseLockFactoryTestCase . java to improve the handling of output streams for
tika - 2261 -- add option to disable dynamic loading of service loader .
replaced ` Pattern ` with ` Diagnostic ` in ` DocLint . java ` and updated imports in ` DocLintTester . java `
added a new import command to the DataImportHandler and modified the condition in DataImporter to include an additional import command to enhance functionality by allowing
added a test for modifying inner classes in ChangeType to ensure that inner classes are not modified if the ignoreDefinition flag is set to true to
removed unused import of android . util . Log in JettyService . java to clean up the code and reduce unnecessary dependencies
updated the ` checkItemPlacement ` method to accept a ` ArrayList < Long > ` parameter and modified related logic to include workspace screens
[ java ] add a ` ` quit quit quit ' ' servlet to jetty7appserver and create a new ` ` killswitch '
refactor handling of transformed rows in LLRealtimeSegmentDataManager to use a list of transformed rows to improve code readability and maintainability
added a check to skip processing for " Teredo " display names in Windows to ensure compatibility and prevent errors when running on non - Windows
added error dialog when add contact not connect to the protocol provider .
refactor bean registration to use a new BeanComponentDefinition to improve clarity and maintainability of the code
updated drawBitmap method call to include a null parameter to improve compatibility with the canvas ' s rendering process
updated date format in MeitrackProtocolDecoder and TotemProtocolDecoder from " ( dd ( dd ) ) ( ddmmyy
changed the access modifier of the ` getFontPath ` method from public to protected and updated its usage in ` SunFontManager ` and ` X
added @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used
added assertion to catch ` ExecutionException ` in ` ClientMapStoreTest . java ` to ensure that ` ReachedMaxSizeException ` is thrown as
added a new option ` keepEmptySentences ` to the ` DocumentPreprocessor ` and ` MaxentTagger ` classes to control the
modified the ` createArtifactSubdirectory ` method to return a boolean indicating success or failure to improve error handling and provide clearer error messages for
replaced instances of ` LazyTreeLoader ` with ` JavacTool ` and refactored the ` NO _ MODULE _ COMPI
cloudstack - 4892 : fix npe in directagentattache when resource return null
modified the ` sendEmail ` method to accept ` MessagingException ` as a parameter to improve error handling by logging exceptions during email sending
added a new API documentation for BuildCraftAPI and implemented a null check in PipeItemsObsidian to enhance API usability and prevent
updated DateFormatEvaluator to accept a Locale parameter for parsing date strings to enhance flexibility in date parsing based on the specified locale
added a boolean field ` includeDecals ` and its getter / setter in ` StorageOptions ` , and modified the ` StorageOptionChooser `
updated documentation generation to include a null parameter in Liquibase . java and added a suppression annotation in LiquibaseTest .
updated the logging mechanism in HiveProtoLoggingHook and improved test assertions in TestHiveProtoLoggingHook to enhance performance tracking and ensure accurate
updated warning messages in ` StopFilterFactory ` , ` SuggestStopFilterFactory ` , and ` DocExpirationUpdateProcessorFactory ` to improve
updated the output message to include the major version of the software to provide clearer information about the software version being used
added a new file ` LdapPasswordAuthenticationTest . java ` to implement unit tests for LDAP password authentication to ensure proper functionality and reliability of
updated import statements and condition checks in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to ensure compatibility with
do n ' t reload on save all event ( # 5373 )
refactor VisibleAdvance class to improve code readability and maintainability
feat ( kubernetes - client - api ) : add reconnect functionality to reflector
fix bug when show sparklines for dynamic number
added null checks for groupId , artifactId , version , and plugins in RawPom . java to ensure required parameters are not null to prevent potential
updated API assignment logic in V2HttpCall . java to ensure a default value is used when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added OpenGL texture and shader management functionality to FlameRenderer and PhotoPanel to improve resource handling and debugging capabilities during graphics rendering
updated scene initialization in FxWindow , InsnListEditor , and InsnProxyListEditor to improve scene functionality and ensure proper handling of
refactor conditional checks in CSSParser . java for improved readability to enhance code clarity and prevent potential ArrayIndexOutOfBoundsException
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl . java to enable or disable the default look
removed unnecessary ' this ' keyword from SQL queries in HostRoleCommandDAO . java to simplify code and improve readability by eliminating unnecessary
updated string values for F2 _ TEST and F6 _ TRANSPONDER _ TEST _ REPLY in LJ1200Message . java
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and correctness of swipe actions
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize a more specific color storage implementation
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
removed unused import statements from multiple Java files to improve code cleanliness and maintainability
added a method to retrieve global entries from the map to enhance functionality by allowing retrieval of global entries
added assertions for the sendcoin method in MultiSign34 . java to ensure proper functionality of the sendcoin method under various conditions
updated import statements in CUFilterTest . java to use JUnit 5 API to ensure compatibility with the latest testing framework and utilize the latest
updated classpath string construction to use a constant PATH _ SEPARATOR to ensure consistent path handling across different operating systems
changed the access modifier of augmentSuccessViewModelObjects from static to instance in AbstractServiceValidateController . java to allow subclasses to access the augment
added assertions for ' id ' and ' name ' properties in InheritanceTest . java and updated field access method in TestUtil . java to
removed the ` conf ` parameter from Outlink constructor calls across multiple files to simplify the code by eliminating unnecessary configuration parameter
removed the ` LexicalContext ` parameter from method signatures across multiple classes to simplify method signatures and improve code readability
added functionality to remove unused imports and updated type expression handling in UseLambdaForFunctionalInterface . java to improve code clarity and maintainability
removed the appendClassSelector method from m _ classFilesets to simplify the file selection process by directly using the file set
removed the conditional check for rootInput in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
fix registryevent . getregistry ( ) in favor of registrymanager . getregistry ( name )
reformatted variable assignments in Intersector . java for consistency to improve code readability and maintainability
added default methods for sbe decoding length , sbe limit , and limit in MessageDecoderFlyweight to provide a standardized way to
refactor Elasticsearch version from 5.6 . 12 to ELASTICSEARCH _ VERSION in ElasticsearchContainerTest . java and add a new test
updated PeerMessage parsing in WorkingReceiver . java to use ByteBuffer for better memory management to improve performance by avoiding unnecessary object creation during message parsing
updated cluster definition properties and version handling in ClusterDefinition and GSInstallerClusterProvider classes to improve clarity and functionality when managing cluster versions
camel - 14850 : camel - ftp should use ftpconfiguration to avoid reflection configuration .
[ zeppelin - 1776 ] add error message when dependency can not be load
modified the local assignment logic in Gen . java and added a new NoLocalsMustBeReservedForDCEedVarsTest . java file
added basic constraints handling in ForwardBuilder and created a new class BuildEEBasicConstraints to improve certificate validation and facilitate the building of
added a method to initialize the JDBC connection after the first database connection is established to ensure compatibility with PostgreSQL versions prior to 9.5 and improve
updated WebSocket implementation to include maximum message size and added input buffer size validation to improve WebSocket performance and ensure input buffer size does not exceed expected limits
replaced ` undeleteAll ` and ` rollbackUndeleteAll ` variables with ` pendingDeleteCount ` in ` SegmentReader . java `
updated scope validation logic in ClientRegistration . java and improved test cases in ClientRegistrationTests . java to enhance null safety and clarify
added null checks for orderBy in CartesianProductStream . java to avoid potential NullPointerExceptions during execution
use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 4898 : do n ' t allow snapshot to be delete on kvm
added a debug log message to the initialization of the HiveLog4j method to improve visibility of the initialization process for better debugging
added a check for empty tasks before canceling an asset loading task to prevent potential NullPointerException when tasks are empty
change the return type of the deleteNode method from void to boolean for error handling to provide feedback on whether the delete operation was successful or not
add support for tskventry and tskvrecententity in order to be able to use it .
added checks for empty or null barcode results in Code128Reader and Code39Reader classes to ensure that empty barcode input is treated as false as
replace TreeSet with LinkedHashSet for cipher suites in SSLContextImpl and SystemPropCipherSuitesOrder to ensure predictable iteration order for cipher suites
added a check for control characters in the Escaper class to ensure proper handling of control characters in the input string
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : fix
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
renamed the variable ` synthetic ` to ` pruned ` and updated its usage in ` JavaTemplate . java ` to clarify the purpose
added a method . setAccessible ( true ) to WidgetInterceptor . java to enable accessibility of the method within the class
added a conditional check for the presence of " database . server . id " in the field configuration to ensure that literal initialization is only applied for
updated the Mozilla version in AbstractRipper . java from Macintosh to Windows NT 10.7 to ensure compatibility with the latest
added a web interface item to the menu in BasicSystemUtils to enhance user navigation by allowing quick access to the application ' s web interface
refactor value handling in HandleGetter . java to improve clarity and structure to enhance code readability and maintainability by using a consistent variable
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
nifi - 3745 : fix filecheckpointio . copy ( ) and move ( ) to improve log readability
replaced the call before avatar postLoad to avoid null pointer to avoid potential null pointer exceptions during avatar postLoad
updated Docker image version from " sshd : 1.0 . 0.0 " to " sshd : 1.1 . 0 "
added a large memory allocation and garbage collection in ThresholdTest . java to improve memory management and prevent potential memory leaks
added conditional checks for log names starting with ` _ level ` in ` StdErrLog . java ` and modified logging behavior in ` StdErr
fixed - rremoteservice . getremoteserivce ( string ) method return wrong value if remote service name be specify . # 563
added methods ` isSelected ( ) ` and ` setSelected ( ) ` for ` RadioButton ` , ` CheckBox ` , and ` selected `
rename ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to clarify the purpose of
[ issue # 3550 ] fix the bug that brokercontroller . setfenced ( true ) do n ' t set the f
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to improve resource handling and ensure proper closure of Redis connections
refactor color retrieval methods in ProgramGridCell and Utils to utilize theme color instead of brand color to improve code maintainability and ensure consistent
renames occurrence of ` ` participanttransportaddresschanged ' ' to ` ` peertransportaddresschanged ' ' and ` ` peertransportaddresschanged
removed multiple type adapter registrations for various artifact types in ToolingApiLauncher . java to streamline type adapter registration for improved code maintainability
updated test cases in TestPayloadCheckQuery . java to improve test coverage for payload checks
modified the ` putChar ` method in ` ConsoleReader ` and added a new test for mask handling in ` ConsoleReaderTest ` to enhance
added user context to command execution in BaseCommand . java to provide user - specific context for command execution
[ gr - 3995 ] move test from graalvm . test to graalvm . api
[ hotfix ] remove unused constructor in slotsharinggroup
updated Java version comparison logic in StreamExInternals . java to include a conditional check for emulating Java 8 to ensure compatibility with Java 9
updated texture references from " wheel . png " to " sys . png " and modified music and wheel duration values in DecalTest . java
refactor IntentFilter and unregisterReceiver calls in Launcher . java to ensure proper registration and unregistration of the mCloseSystemDialogsReceiver
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in code formatting
added a new boolean field ` allowIntrospection ` and modified the introspection logic in ` ClientDetailsEntity ` and ` IntrospectionEndpoint `
enhance security by preventing XSS vulnerabilities through HTML encoding
added multiple link links for PhraseQuery and PhrasePrefixQuery in the Query class to enhance the documentation and clarify the purpose of
replaced size ( ) checks with isEmpty ( ) in CommentsInserter . java and CommentsParser . java to improve code readability and
refactor ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to improve code clarity and
changed parameter types from ` A ` to ` Object ` in assertion methods across multiple classes to improve type flexibility and compatibility with various object types
updated the ` ThrowingFunction ` interface and its usage in ` JwtPlugin ` , ` JwtPlugin ` , and ` ThrowingFunction `
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods to use instance methods instead of static to improve encapsulation and
fix ( javaprettyprinter ) : try to initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s instance of Bitmap to improve compatibility with Robolectric testing framework
updated method names from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve cl
updated the page indicator drawable resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current
added a volatile counter for reinvocations in BasicInvocation . java to track the number of invocations processed
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to ensure accurate padding calculations based on
added a break statement in the Recognize class to ensure proper flow control in the code execution
added haptic feedback handling in Workspace , FolderNameEditText , and SystemShortcut classes to enhance user experience by providing haptic feedback
added handling for formula cell types in ExcelBatchReader . java and implemented unit tests in TestExcelFormat . java to ensure correct processing of formula
fixed bug 1274585 - immutablefield should not report assignment in anonymous inner class .
added a user agent field and updated the userAgent initialization in CommaFeedConfiguration to allow dynamic configuration of the user agent based on application settings
added a required attribute to the @ XmlAttribute annotation in AvroDataFormat , BarcodeDataFormat , and Base64DataFormat classes to enforce
changed log level from info to debug for file not found messages to reduce log verbosity and improve performance during debugging
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use ` false ` instead of ` 1.7 . 6 ` to ensure
camel - 16400 : camel - default - routes - collector should not skip route that can not be find . thanks to ben
added vertexColor property and a vertexColor method to PShape3D to enable customizable vertex color rendering for improved customization
updated the ` printForeignKeys ` method to include a ` isPkColumnFiltered ` parameter and modified related references to enhance the functionality to include filtering
removed shadow matrix extraction from ShadowMotionEvent . java to simplify code and improve performance by eliminating unnecessary shadowing
updated package structure in MetaRules . java and modified import statements in PythonDslProjectBuildFileParser and PythonDslProjectBuildFileParser
simplified the class retrieval logic in GroovyEngine . java to improve code readability and maintainability by reducing complexity
add hawtio - plugin . init ( ) and hawtio - plugin . destroy ( ) to hawtio -
removed redundant print statement from NativeCodeGenerator . java to streamline code for better readability and performance
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` Flight
added unit test to verify behavior when actual and expected cause have different types to ensure proper assertion error messaging for mismatched exception
removed duplicate flatten and pack variables from AutomaticDependencies . java to streamline the code by eliminating redundancy
change variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity by accurately reflecting the purpose of
simonstewart : add ability to set profile in firefox and firefox capability in marionette test
camel - 7999 : camel - management - allow to configure route description . thanks to benjamin graf for spot this
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a method to set the weight of an edge in ImporterCSV to enhance functionality by allowing dynamic adjustment of edge weight
fix incorrect calculation of tariffs cost per hour ( # 5338 )
updated SQL queries in DatabaseMetaData . java to include additional attribute definitions and updated tuple array initialization to enhance column default handling and ensure compatibility with PostgreSQL
added a null check for binarized sentence in SentimentAnnotator . java to ensure that binarized sentence is not built by the
refactor the return statement in the User class to use a StringBuilder for better string representation to enhance readability and provide detailed information about the user
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in methodinfo
[ hotfix ] [ runtime ] use partitionproducer instead of currentexecutionvertex in taskdeploymentdescriptorfactory
update rostermanager to check if a group be a member of a group . jm - 148
added classpath reference to Maven test classpath in AbstractJRubyMojo and removed unchecked suppression in CucumberMojo to improve project
updated type assertion in MethodHandleImpl and added a new test for user method in MethodHandlesTest to ensure correct type validation and improve test coverage
added import statements for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripChar
updated condition checks for width and height in URLImage . java to ensure images with both width and height are equal to improve image validation logic
added a condition to check if the name starts with " META - INF / " and modified the handling of unique package names to ensure only valid
added background task scheduling for image loading in ImageDownloadService to improve performance by avoiding unnecessary background processing
updated the expected value in assertions based on the major version check to ensure correct validation of the number of values according to the specified
changed the visibility of the addViewportJob method from protected to public to allow external access to the method for improved functionality
removed the ` num - output - partitions ` parameter from the ` buildFlow ` method in ` SimpleWordCount ` and ` RBK
removed restart - on - shutdown settings and added server status checks in TestDatabase . java to optimize server behavior during shutdown
added null and empty checks in NodePathsConvertOperator . java and improved iteration logic in SchemaQueryMergeOperator . java to enhance robustness
added functionality to track the total harvesting time of a call to improve the functionality and reporting of harvesting time in the application
updated font drawing parameters in ParticleEditor . java for improved visual representation to enhance performance and readability of the rendering output
added Hadoop environment configuration handling in UpgradeCatalog240 . java and updated test cases in UpgradeCatalog240Test . java to improve configuration management and ensure
added a transparent color to the SvgViewerFactory class to enhance visual appearance by providing a transparent background
removed the minimum SDK requirement from the @ Config annotation in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to streamline
refactor the ` containsExactly ` method to use ` asList ( varargs ) ` instead of ` accumulate ` to simplify method signature and improve
updated Bandwidth and refillGreedy handling in Bucket4jFilterFunctions . java to improve bandwidth management and ensure valid keys are processed
added documentation to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance clarity and usability of German text
added hooks to the transformations in QueryProperties , Optimizer , and SemanticAnalyzer classes to enable conditional evaluation of lineage based on query properties
added error handling for NoClassDefFoundError in REngine . java to ensure proper initialization when no class definitions are found
updated TraceFilter and TraceWebFilter to use SpanAndScope instead of Span and Span to improve span management and ensure proper scope handling
updated exception handling in AbstractUpdateCommandStep to ensure a fallback message is used when the cause is null to improve robustness by providing a default
updated SolrServerException instantiation to include a base URL parameter to improve error handling by providing more context for the SolrServerException
changed the landscape orientation of printSetupRecord from landscape to non - landscape to ensure correct display of print setup for non - land
updated return statement in JavaVoidObjectInspector to handle null input to improve robustness by preventing potential NullPointerExceptions
added validation to prevent invalid argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added background location listener handling and updated location requests in AndroidLocationPlayServiceManager to improve location management by using background location listeners when available
update condition to check for GL _ POINTS instead of not just GL _ POINTS to ensure proper handling of POINTS primitive
trufflestring : fix indexoutofboundsexception when compare two byte array .
added a method to set the command list in ComboBox to enhance command management functionality in the ComboBox
nifi - 5361 : fix certificate authority file name with backslashes
updated ZkCLI command to use " zkcli . sh - zkhost " instead of " zkcli . sh - zkhost " to
fix incorrect comparison of object . ( # 2969 )
added a conditional check for remoteGrpcStatus in LocalFallbackStrategy . java to log a warning when remoteGrpcStatus is OK to improve
updated method signatures in XYItemRenderer and DrawingSupplier classes for consistency to improve code readability and maintainability
added a nbttagCompound to the tick entity in the tickmanager to ensure that the tick entity has a unique identifier for better entity management
added a new method ` getErrorString ` to handle different error types in ` GLSurfaceViewAPI18 . java ` to improve error
added a method to retrieve supported locales and error handling in FeatureRegistry to improve locale management and provide clearer error messages for unsupported locales
updated the server URI assertion in RFC2616BaseTest . java to use a local host to ensure the test verifies the correct URI format for
added a helper list to the Construction class to enhance the functionality of the Construction class
update return value in GlyphLayout . java from - 1 to - 2 to ensure correct handling of escape sequences in rendering logic
added security permissions and modified context class loader handling in Transport . java and TCPTransport . java to enhance security by enforcing context class loader access
refactor file retrieval logic in ReceiveExternalFilesActivity to handle null file paths and improve error handling to ensure robustness by preventing null pointer
fix npe in testng . load ( ) when m _ serviceloaderclassloader be null
removed debug logging in BarrowmanCalculator and adjusted the deltap calculation in TubeCalc to streamline logging and improve clarity in the
updated column assignment logic for nodes and edges in TimelineControllerImpl . java to handle cases where the object is not a Node instance and improve
added registration of extra components for BrokerAdminApiApplication in BaseBrokerStarter . java to enhance the management of broker admin application components
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the correct handling of
peergroup : use witness version instead of bloom filter to determine the best peer version .
fix a lot of memory leak in the abstractbuilder
added configuration for simple consensus snapshot trigger threshold and modified retry policy handling in RatisClient to allow configurable retry attempts and improve flexibility in
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
added a check for ManagedService annotation before registering JMXHelper in DefaultRemoteProxy to ensure JMXHelper is only registered when managed service annotations are present
tika - 2638 -- add support for non - unicode entry name in zip file .
added a new file ` TestSplitThruPhiDivMod . java ` containing tests for modular division operations to demonstrate potential
refactor ` lookupGenericTypeImpl ` and ` lookupGenericInterfaceTypes ` to use generic interfaces and superclasses for improved type handling to enhance
updated the default size of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
added TODO comments for Chinese , Arabic , Hindi , and Farsi symbols in PlayerSettingsScreen . java to indicate
fix for http : / / issues . apache . org / activemq / browse / amq - 2692 - fix transfercompletion
rename windowfocuslistener to windowadapter in favor of windowdeactivated
added null check for the source node before throwing a semantic exception for invalid table aliases to improve error handling for invalid table aliases during semantic analysis
added scaling and centering of skeletal mesh vertices in SkeletonRenderer . java to ensure proper bounding box calculations for skeletal mesh
added getSolrHome method to DistributedClusteringComponentTest and implemented it in BaseDistributedSearchTestCase to provide a way to retrieve the
added ComponentScan annotation to SpringWebConfig . java to enable component scanning for improved application configuration management
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary functionality
added tests for installPackage and updated package info assignment logic in ShadowPackageManagerTest . java and ShadowApplicationPackageManager . java to ensure correct
refactor AvailableSettings class to improve code readability to enhance maintainability and ease of future updates
added TransactionCapsule and ReceiptCapsule classes to the TransactionTrace class to enhance transaction trace functionality for better transaction management
add ` ` shufflememberlist ' ' property to cluster listener support
replace Text ( ) with CrawlDatum ( ) in SegmentReader . java to improve data handling for CrawlDatum instances
refactor JsonDeserializer for improved readability to enhance maintainability and ease of understanding for future developers
updated configuration paths in TsfileDBConfig . java and modified fetchSize initialization in QueryProcessExecutor . java to improve consistency in configuration naming and
corrected a typo in the method name from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java
removed the import of ExecutionContext from TaskletStep . java to streamline dependencies by eliminating unused imports
initialize the title variable to an empty string instead of null to ensure a valid default value is provided for the title
added empty response body handling in AsyncHttpClientCall and created a new test case in AsyncHttpClientCallTest to ensure that the response body is not
deprecate io . micronaut . discovery . embeddedserverinstance in favor of io . micronaut . discovery . embeddedserver
make jabrefframe . registermacevents ( ) work on macosx
renamed the test class from SecurityTokenServiceAuthenticationMetaDataPopulatorTests to SecurityTokenServiceTokenFetcherTests to clarify the purpose of
changed the return statement from ` toEnum ( type ) ` to ` toEnum ( type , s ) ` to ensure that the method returns
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to final to ensure that the ` hideUnprivilegedObjects `
change the default log level from info to fine in ThreadedAcousticScorer . java and introduce configuration management in AudioData
added a conditional check to save Giphy video URLs in IOUtils to ensure compatibility with Android Q devices when saving video URLs
act - 1270 fixing inconsistent handling of serializable process
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor logger retrieval logic to use ` computeIfAbsent ` to simplify code and improve readability
hbase - 26400 remove unused class dataoutputoutputstream .
updated transaction IDs in TestAcidOnTez . java for consistency to ensure correct transaction IDs are used in the testing environment
changed log level from info to debug in MavenEnhancePlugin . java to provide more detailed logging for enhanced class processing
added a static method ` getDefaultProviderName ( ) ` to the ` Platform ` class and modified the ` OpenSSLProvider ` and ` StandardNames `
added imports and processing for Captor annotations in MockitoBeforeTestNGMethod . java to enhance functionality by integrating Captor annotations
added checks for non - empty ` onlyRun ` and ` testMethodNames ` in ` TestSuiteBuilder . java ` and thrown an exception
updated import statements and modified prefix handling in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and ensure proper prefix validation
do n ' t use graphhopper for import , because it do n ' t support osm
simonstewart : do n ' t try to create a client with retries
changed the ` mHideSysUiScrim ` variable from final to non - final and added the ` mHideTopShadow ` preference
added cancellation functionality and updated error handling in OkHttpCall to ensure proper cancellation of calls and improve error messaging for better debugging
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and correctness of swipe actions
updated the RequestMatcher interface to extend the RequestMatcher from Spring Security ' s web framework to ensure compatibility with the Spring Security framework ' s request
added conditional syntax for FOR loops in DeferredAttr . java and created a new class ImplicitLambdaConsideredForApplicabilityTest . java
[ j2kt ] fix j2kt test for boxed and devirtualized type .
added unit tests for display metrics in DeviceConfigTest . java and updated display metrics handling in DeviceConfig . java to ensure accurate representation of display
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified timestamp initialization in PluginClassLoader . java to improve error handling and simplify timestamp
updated icon resource from ` drawable . logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to improve
added a method to set the content text in the error builder to enhance error handling by providing user feedback during file upload
refactor ConcurrentHashMap for improved concurrency handling to enhance performance and reliability of concurrent operations
added methods to adapt user trades from ` AbucoinsAdapters ` and ` AbucoinsTradeServiceRaw ` to enhance functionality for adapt
simplified the plot claiming logic in PlotSquared . java and modified the clearAsPlayer method in Delete . java to improve code cl
simonstewart : make htmlunitdriver work with firefox and internet explorer
added handling for VARBINARY type definitions in BlobType . java to ensure correct database data type is returned for VARBINARY types
refactor cookie version handling in SetCookieSupport . java to improve clarity and maintainability to enhance code readability and ensure compliance with cookie
added synchronization to the language object creation in LibFFIContext . java to ensure thread safety when accessing shared resources
replaced ` Context ` with ` ContextInternal ` in ` InboundBuffer . java ` and updated thread checks in ` InboundBufferTest
updated timeout handling in LdapTimeoutTest and added a new test method for dead server timeout to improve test reliability and ensure timeout behavior adheres
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to clar
camel - 16400 : camel - cxf should use cxf ' s inout header to avoid intermittent test failure
updated multiple UI classes for consistency in naming conventions to improve code readability and maintainability across the Synth component
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of boosterset components during
enable proxy by default for jabref . proxyuser ( ) and jabref . proxypassword ( )
updated metrics references from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` across multiple classes
replaced InternalError throw statement with a return false statement to simplify error handling for the compile stub functionality
use log4j instead of log4j in testipcutil
removed chunked transfer handling in NettyRoutingFilter . java to simplify code and improve readability by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are reset before processing new patterns
updated the ` VerificationAfterDelayImpl ` class to include a polling period and modified error handling to enhance the verification process by differentiating between failure
added a new configuration for Hive authorization manager and modified conditional checks in SemanticAnalyzer to ensure proper handling of compaction state during table masking operations
[ zeppelin - 5796 ] fix zeppelin - 5796 ( zeppelin
hbase - 2238 fix typo in hbaseadmin # gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
refactor XML reader handling in SimpleSAX . java to ensure proper resource management to prevent memory leaks during XML parsing
added buffer release logic in HttpSenderOverHTTP . java to ensure proper memory management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and refactored ` Java17TypeSignatureBuilderTest ` to
added null and closed check for the ResultSet in JdbcExecutor . java to prevent potential NullPointerException and ensure safe resource management
update driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to reflect the latest version of the database driver
fixed bug 124444 - usestringbufferlength . java fail with nullpointerexception
removed error logging from RemoteSparkJobMonitor . java to streamline error handling and reduce unnecessary logging
modified the createDb ( ) method to return a Connection instance and added closing functionality to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 16400 addendum : add option to disable off - peak compaction ( chunhui )
added address handling in BitstampDepositAddress and created DepositAddressJSONTest for JSON unmarshalling to improve address parsing functionality and ensure
updated error handling in BufferingResponseListener to use response . abort instead of throwing an exception to improve clarity of error reporting when buffer capacity
updated linkInDeletedDirectories method to use absolute path to ensure correct link path resolution for deleted directories
updated the ` InvocationFinishedEvent ` class to implement ` MetricsEvent ` instead of ` Event ` and modified the ` allRegisteredMetrics ` map
refactor network interface iteration to check for multicast support to improve robustness by ensuring only valid multicast interfaces are returned
added a loop to check for validCheckSums in ChangeSet . java to ensure only valid checkpoints are considered in processing
added a clone method to BufferedChecksumIndexInput to provide a placeholder implementation for the clone method
replaced Math . sqrt with a direct equality check for radius in Circle . java to improve accuracy of geometric comparisons
added a condition to set the frequency band only if it matches the ownlink band identifier to ensure the frequency band is only updated if it matches
rename ` tapSquareSize ` and ` tapRectangle ` fields to ` tapRectangleWidth ` and ` tapRectangleHeight ` in ` Gesture
set default _ replicate _ on _ write to false by default
added an ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` and a new method ` format ` in ` Util ` to
added a ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes to provide
refactor error handling and synchronization logic in FileActivity and FileDisplayActivity to improve clarity and functionality of error messages during file sharing
added error handling for writable streams in ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to improve robustness and provide clearer error reporting during stream operations
added a new parameter ` true ` to the ` JavascriptContext ` class to enable a specific feature for improved functionality
simplified the constructor of TableCell by removing unnecessary alignment parameters to simplify code and improve readability by eliminating unnecessary alignment
added a new configuration class ` TracingAutoConfiguration ` for tracing support in the application to enable better integration with Spring ' s tracing capabilities in the
updated content handling in Submissions . java to use a new Para instance to improve clarity and maintainability of the code by separating
refactor ` getPrunedQueryableSegments ` to accept a list of ` List < IndexSegment > ` instead of a single ` List
updated VertxBufferTest . java for improved buffer handling to enhance performance and reliability of buffer operations
refactor date extraction logic in MessageSubmissionChunk . java and add a new test class TestMessageSubmissionChunk . java to improve code readability
changed the visibility of mContext from private to protected in PredictionAppTracker . java to allow subclasses to access the mContext variable
removed unused import statements for SortedSet and TreeSet in ShowTablesOperation . java and ShowViewsOperation . java to streamline code by eliminating
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to utilize it to enhance error handling for MongoDB data integrity
[ hotfix ] fix checkstyle violation in jobcoordinationservice
refactor ` bitsToHumanReadable ` to ` bytesToHumanReadable ` for better handling of various image types to improve code clarity and
replaced the instantiation of ` newMergePolicy ( ) ` with ` newTieredMergePolicy ( ) ` and added a new test method
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
[ java ] add more information to error message when binaries can not be run on a cpu
updated the ` loadSettingModels ` method to accept an ` InputStream ` parameter for context initialization to enhance flexibility by allowing different input sources for
added null checks for incoming Fields , TermsEnum , and DocsAndPositionsEnum in the FilterLeafReader class to ensure that incoming fields and
add key size provider to jcecrmfencryptorbuilder and add unit test
updated IOException and SoftEndOfStreamException classes to provide a more informative error message to improve error reporting by providing more context in exception messages
removed unnecessary @ Inject annotations from multiple Java files to streamline code by eliminating unnecessary dependencies
updated the size of the BundledDistributionTest from 9 to 10 and added assertions for database user attributes in PostgreSQLTest to reflect the correct number
[ stream ] add pipeline . name option to stream execution environment
updated scaling logic in OverviewState to differentiate between two - panel and single - panel layouts to improve layout responsiveness based on device
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome to enhance the biome ' s
removed ` DateTimeZone ` parameter from ` getMaxTime ` and ` getMinTime ` methods in ` DataUpdateManager ` and ` StorageUtils ` to
[ wasm ] make thisreference be qualified by default .
updated regex pattern in XhamsterRipper to allow spaces after the " wmde . " prefix to enhance security by ensuring only valid
performance improvement : use getall ( ) instead of getall ( ) in glowworld
[ geot - 4383 ] oracle dialect use of sdo _ tune . extent _ of - do n ' t include
fix a typo in the path part check ( # 5373 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing selection and deselection of files
[ java ] increase term offset for network publication .
fix checkstyle issue in guildupdateownerevent
update inPortalTicks to be a maximum of 80 for creative players to ensure proper tracking of inPortalTicks during creative mode
updated chart spacing and added compression functionality to ClusterMonitorTileSkin to improve visual representation of chart items and enhance user experience
renamed multiple codec templates in the codebase to improve consistency and clarity in naming conventions
change variable types from int to long for length calculations in Base64 . java to accommodate larger values and prevent potential overflow issues
removed a condition that checks if the renderer is null to simplify the logic by eliminating unnecessary checks
cloudstack - 1641 : do n ' t allow scaling cpu / / memory of virtual machine with same custom service offering ( #
updated import statements in HitbtcAdapters . java and modified Order . Builder to use LimitOrder . Builder to improve code clarity and
[ iotdb - 3551 ] fix race condition in lrtimesegmentdatamanager ( # 7021 )
rename ` jruby ` to ` jrubyscripting ` in ` JRubyScriptEngineFactory . java ` to clarify the purpose
replaced the ` name ` variable with a ` displayName ` variable in the ` write ` method to improve code readability and maintainability by
updated the condition to check for both positive and negative exchangeAmount values in ParticipateAssetIssueActuator . java to ensure accurate validation of
removed loop condition from FeedUtils . java to simplify code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to the ` HDFParserTest ` class to verify the functionality of the HDF4 parser
added a new boolean flag CALCITE _ 6092 _ FIXED and modified test cases in SqlOperatorTest to check for invalid TIME values
reformatted the return statement in IDEEditor . java to improve code readability and maintain consistency
added a new method ` quietCloseAll ` to handle ` List < ? extends AutoCloseable > ` in ` CloseHelper . java `
updated the positive button representation in the RemoveFileDialogFragment to use a common yes string instead of a hardcoded value to improve user experience by
added a null check for srcWidth and dstWidth before calling drawImage to avoid potential NullPointerExceptions when srcWidth and dstHeight are zero
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . defineClass ` and modified exception handling in ` UnsafeAccess . java `
updated domain name regex pattern in GUIUtil . java and added unit tests in GUIUtilTest . java to improve validation logic for domain names and
replace boolean conflict with long conflicts in CachedRowSetWriter . java to improve clarity and manage multiple conflicts more effectively
fix version check for pubspec . yaml and version ( # 2635 )
added a condition to return the reference if the reference is equal to the current instance to ensure proper handling of reference equality in memory operations
added functionality to inject seed files and improved error handling in the Injector class to enhance robustness of input injection and provide clearer error messages
added a condition to hide the original view in FloatingIconView . java to ensure the original view is visible when the original view is hidden
update maxNodes calculation to ensure maxTrips does not exceed maximum desired size to prevent potential errors during loop execution
added logging functionality and a check for unsupported texture coordinate types in CombinedTexture . java to improve error handling and provide informative warnings for unsupported texture
added error handling for file deletion in EncodeActivity , SupplementalInfoRetriever , and MatrixUtil classes to improve robustness by ensuring exceptions are thrown
added seek and close methods to TracingConsumer and TracingProducer classes to enable delegation of seek and close functionality for better resource management
updated string concatenation in HandleDAOImpl . java to use substring with oldPrefixLength to improve code clarity and maintainability by using a more
updated the initialization of convertedValsList to use a direct instantiation of the collection to improve code readability and performance by reducing unnecessary method calls
made the constructor of AbstractTimer a deprecated to indicate that the constructor should no longer be used
added a warning dialog for nightly builds in the Universal Gcode Sender version to inform users about potential issues related to nightly builds
update feedbacksessionresultsbundle to return user _ nobody _ text when no team name or email match
updated return message from " Remove unnecessary throws " to " Remove unnecessary ` throws declarations . " to clarify the purpose of the return message
deleted the CacheApplication . java file and refactored related classes to use CommonsApplication instead of CacheApplication to streamline the codebase by
replace usage of realObject . getApplicationContext ( ) with RuntimeEnvironment . application . startService ( ) and realObject . sendBroadcast ( intent
refactor StatisticsServlet class for improved performance to enhance efficiency in data processing operations
updated the configuration update logic in RuntimeEnvironment . java to handle compatibility with devices running KitKat and above to ensure compatibility with newer Android
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` in ` VersionDefinitionResourceProvider ` and
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
patch by stu hood ; patch by jbellis for cassandra - 1266
added " com . sun . xml . internal . resolver . helpers . " and " com . sun . xml . internal . resolver . readers
renamed methods from ` save ` to ` add ` in ` JobRepository ` and related classes to clarify the purpose of the methods
added loop exit handling in GraphUtil . java to ensure proper processing of loop exit nodes
refactor SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView and update related methods to improve layout management and
added a check to ensure terminal is supported before proceeding to prevent errors when the terminal is not available
updated time allowed handling in CloudExitableDirectoryReaderTest and LBHttpSolrClient to use random integer values instead of long values to improve
updated session validation logic in AbstractSessionCache and improved session handling in RemoveSessionTest to ensure only valid sessions are processed and maintain session integrity
refactor column handling logic in ChangedIndexChangeGenerator . java for improved readability to enhance code clarity and maintainability by reducing
replace Vector with ArrayList for managing RadioButton instances to improve performance and modernize the code by using a more appropriate data structure
updated UserManagerCompat and UserManagerCompatVL classes to extend UserManagerCompatVNMr1 and UserManagerCompatVNM
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement to enhance
updated the handling of mismatched rules and improved error messages in ActionGraphCache . java to enhance clarity and accuracy of mismatched rule
added LockDatabaseDesc and UnlockDatabaseDesc classes to manage database locking and unlocking operations to enhance database management capabilities in the Hive plan
refactor RankingTopComponent , RankingUIModel , RankingToolbar , nodeTransformerGroup , and edgeRankingToolbar
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to enhance connection management and provide clearer diagnostics
added a test method for setting and deleting a storage group in IoTDB to ensure proper handling of storage group permissions in the application
chore ( regen ) : update doc to match open source code ( # 95 )
updated variable declaration handling in ` FindMissingTypes . java ` and added a new ` visitVariable ` method in ` TypeValidation . java `
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to provide a clearer
replaced specific imports with a wildcard import and updated constructor parameters in CountersManager . java to improve code readability and maintainability by redu
refactor ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to improve string formatting to enhance readability and
added cloning of joinKeys in JoinDesc . java to ensure that the joinKeys array is not modified when it ' s not null
updated authentication handler registration to include a default principal resolver to enhance flexibility in authentication handling by allowing custom principal resolution
added searchPaths parameter to the addSettingsFromFile method in XcconfigStack and refactored related assertions in XcconfigParserTest to
replaced instances of List < Tree > and List < Tree > with final List < Tree > in Oracle . java to enforce immutability
[ hotfix ] [ doc ] disable unaligned checkpoint rescaling in executioncheckpointingoptions
fix unsupportedoperationvisitor to not throw unsupportedoperationexception
[ gr - 3865 ] add debug option to compiletheworld test .
added a check for LocalVariable in LambdaRewriter . java to throw a CannotDelambaException when a local variable is not present
added support for MySQL databases in the CreateTableGenerator class to ensure proper handling of timestamp columns in the table creation process
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during thread execution
added a conditional check for zero stageNr in SimulationListHandler . java to ensure proper handling of ejection delay when stageNr is zero
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` in ` SpringApplicationTests ` to clarify the purpose
refactor TransactionUtil2 class for improved transaction handling to enhance performance and maintainability of transaction operations
refactor issuer validation methods to accept an Optional < OAuthRegisteredService > as a parameter to enhance flexibility in issuer resolution based on the service
updated string formatting and added null check for coll in ClusterState . java to improve code readability and handle potential null cases gracefully
changed the alignment setting from getStyle ( ) to getAllStyles ( ) to ensure all styles are set for consistent alignment behavior
added foreign database and schema names to ForeignKeyColumn and related classes to enhance foreign database and schema management capabilities
[ java ] throw timeoutexception instead of aeronexception in election . canvassmembersinunsuccessfulleadershipbid .
replaced the static import of ` ShadowPackageManager ` with a private method ` Shadow . extract ` in ` ShadowActivity ` and ` Shadow
drill - 4192 : fix selection root when there be only a single top level partition
deprecate iforgeitem and iforgeitemstack . oninvoker tick ( ) method , since they be deprecate .
fix ( export - plugin ) : add support for war file
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when accessing the lock activity
updated widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo classes to
added new constant CAPABILITY _ AIR _ QUALITY and CAPABILITY _ CO2 _ PPM in EcobeeSensorThingHandler
reformatted code for consistency and readability to improve code maintainability and adhere to coding standards
added support for AAPT and AAPT2 executables in Genrule . java and modified related tests in GenruleTest . java to enhance
truffle : only dump access table if trufflecompileroptions . truffleinstrumentBranches . value be true .
added null check before disposing the message in Validator . java to avoid potential NullPointerException when message is null
changed the access modifier of the db variable from private to @ Getter in TronStoreWithRevoking . java and added a new
updated log warning messages in CoreContainer . java to clarify that logging functionality is not yet implemented for log4j
replaced printStackTrace ( ) calls with fail ( ) for cloning failures in CategoryPlotTests . java to improve error handling by ensuring exceptions are
added a new ` SmallByteArrayOutputStream ` class and modified ` nativeInstance . dial ` and ` nativeInstance . dial ` to include a
feat ( shader ) : use intmap instead of hashmap to improve performance
changed the connection type from " territory = en _ US " to " shutdown = true " in the JDBC driver to ensure proper resource management
camel - 16400 : fix npe in routeinfo due to miss date attribute
updated javadoc and added locale parameter in TestHtmlTag . java , and modified test cases in TestUseOption . java , and C1 .
added a condition to check if the result is incomplete and limit the number of items returned to 10 to improve handling of incomplete results and prevent excess
updated command - line argument syntax and modified time column name handling in HybridClusterIntegrationTestCommandLineRunner to improve command - line usability and
updated output format handling to differentiate between " svg . html " and " svg . html " formats to ensure correct file extension is used for
updated condition to check if QSB is enabled before calculating the bottom margin to ensure proper layout behavior when QSB is not enabled
added equals and hashCode methods to AnimationList and updated null - checking logic in GltfModelKey to improve object comparison and ensure proper hash
added a date field to AbstractGenerator , Generator , and HttpGenerator classes , and refactored date handling in HttpConnection and HttpConnection to
replaced Adler32 with CRC32 in the Store class to optimize memory usage by using a more efficient checksum algorithm
cloudstack - 7895 : fix npe in xenheartbeatinterval when use self - fencing
added new warning for zero area fins and refactored warning handling logic to improve error reporting and ensure more accurate geometry validation
replaced the custom ` @ JsonProperty ` annotation with a custom ` @ JsonGenerator ` class for serialization documents to enhance JSON serialization capabilities for
hhh - 14816 add support for trunc ( ) and date _ trunc ( ) function in h2 and oracle dialect
updated error handling in MetricUtils to differentiate memory pool errors and exceptions to improve clarity and specificity of error reporting related to memory pool
updated the ` ensureSignedUp ` method to include an ` useJavaScript ` parameter and modified error handling in ` UserContext ` to enhance functionality
updated error messages in ValidationTask . java for clarity and consistency to enhance readability and maintainability of type annotations in the code
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
replaced instances of ` new DataWord ( 1 ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( )
updated the handling of badge updates in AllAppsContainerView to use child views instead of adapter items to improve reliability and maintainability of badge
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated method calls in ResourceHandlerTest and ServletContextHandler to ensure proper handling of context handlers to improve reliability and correctness of the code
removed conditional check for workspace custom drawing in Cling . java to simplify the logic for handling workspace custom drawing
remove assertion from trufflejdkservices . getlookupmodule ( )
added @ Ignore annotation to ShadowInvocationWhenChildIsInstrumentedButUnshadowed method in ClassicSuperHandlingTest . java to clarify
updated import statements in ItBitDemoUtils , ItBitOrderBookDemoUtils , ItBitTickerDemo , ItBitTradeDemo , ItBit
remove unnecessary null check in profileractivationinterceptor . getparameters ( )
made classes Utils , ApplicationUtils , AsyncSocketFactory , Whois , and Whois final to enforce singleton pattern to prevent instantiation and enforce
added error handling for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and avoid potential memory leaks
refactor type handling for Vector and Hashtable in Util . java and Resources . java to improve code readability and ensure compatibility with Java ' s
added ` tableNameWithType ` to the warning log message for invalid retention time to provide more context about the retention time being logged
added trimming to fragmentList size checks in QueryExecutorImpl . java to ensure that empty strings are not processed , preventing potential errors
fix resourcepackfilenotfoundexception in modfileservicepack ( # 5028 )
updated the handling of TransformerBuilder . Node and TransformerBuilder . Edge in PartitionToolbar . java to improve code clarity and ensure proper button visibility
updated condition checks in RecentsView . java to improve task view visibility handling to enhance user experience by preventing unintended behavior when
updated calculate methods to return BMIViewObject instead of Map for improved data handling to enhance the calculation functionality by integrating system information for
removed the comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability
modify damage calculation in Entity . java to account for hay bale to improve damage efficiency in gameplay mechanics
refactor environment symbol handling in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to support additional Java
added support for custom plugin properties in OptionsParser and corresponding tests to enhance flexibility in configuring plugin properties in the application
updated the condition to check if hashTable is non - null and joinType is empty before proceeding to enhance robustness by preventing potential NullPointerException
updated timestamp validation logic in Timestamp . java and added new test cases in TimestampTest . java to improve accuracy of timestamp representation and enhance test coverage
[ java ] use context . clone instead of archivecontext in clusteredserviceagent . java .
added a check for ` isCompiled ` in the condition when ` COMPILE _ THRESHOLD ` is zero to avoid unnecessary compilation if the method is already compiled
added new test methods for image2 and image2 _ joined in multiple test classes to enhance testing coverage by including additional image configurations
refactor methods in TogglableFlag to use a namespace constant and update default value handling to improve code readability and maintainability by
updated log messages to use placeholder syntax for better readability to improve log clarity and maintain consistency in logging practices
added a conditional check to return early if the current platform is not Android to optimize performance by avoiding unnecessary processing
updated assertions in RoutesTest . java to use Hamcrest ' s assertThat syntax to enhance readability and maintainability of the test
added new functional interfaces ` BytePredicate ` , ` FloatToLongFunction ` , ` ShortToLongFunction ` , and ` ShortToLongFunction ` to
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and added logging for bitrate limits in various video
added a conditional check before deregistering the invocation registry to ensure that the operation does not proceed if the future is already complete
replaced the initialization of ` ControlFrameBytes ` with a new output method in ` AbstractWebSocketConnection . java ` to streamline the code
updated intent handling in LoginActivity and SignupActivity to check for redirection status to improve user experience by avoiding unnecessary activity launches when redirection
added ShadowCheckedTextView class to implement ShadowCheckedTextView to enable testing of CheckedTextView functionality in Robolectric
added Serializable interface to the ParserState class and modified MethodHandle array to be transient to ensure proper serialization of the ParserState class while preventing
added " identrustdstx3 [ jdk ] " to the certificate list in VerifyCACerts . java to include support for
removed duplicate assignments for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating red
added parsing of the ' nick ' resource in occupant . java and a test case for it .
added a context parameter to QuicSession and updated related classes to include context and flusher to enhance session management by allowing context to be passed
replaced direct calls to ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) ` in ` CreateIndexTask .
refactor conditional checks in ICU4JImpl and TextPosition classes to improve code readability and maintainability by reducing redundancy
added handling for ` ComputedDateValue ` and ` ComputedDateValue ` in ` AddDefaultValueChange ` and ` AbstractDatabase ` classes
rename NbtScoreboardIoService . java file to improve clarity and consistency in naming conventions
simplified resource handling in SAML2Configuration and changed logging level from error to warn in SAML2FileSystemMetadataGenerator to improve clarity of
changed the visibility of the ` printer ` variable from private to protected and refactored the ` createPrinter ` method in ` GraphPrinterDump
added calculations for field cash and average price in HuobiAdapters . java to ensure accurate financial calculations for trading orders
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Field instead of String for projections to improve type safety and clarity
modified the return statement in FakePlayer . java to check if the player is in the list of viewers before adding it to ensure that players
added constant state management and modified drawable state handling in FolderAdaptiveIcon and ShiftedBitmapDrawable to improve performance and maintainability of drawable state
updated SPDYClient to utilize new compression and parser mechanisms with improved connection handling to enhance performance and maintainability of connection management in the SPDY protocol
fix : fix npe in protostuffobjectoutput . writeobject ( ) when object be null
pdfbox - 4071 : fix typo , a suggest by valerybokov
rename BarrowmanCalculator class to improve clarity to enhance code readability and maintainability
added a condition to return early if both ax and axes are not show to improve performance by avoiding unnecessary processing when axes are not visible
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` setWrap ` in ` Texture . java
reformatted variable declaration in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added SSL context handling for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java to enhance security by enabling
updated clock rate handling in multiple classes to use getRealUsedClockRateString ( ) instead of getClockRateString ( ) to ensure accurate representation
renamed TextureAtlas class to improve clarity to enhance code readability and maintainability
updated the return statement to return the module name instead of the product name and added a method to set the module name in AppleLibraryBuilder
[ hotfix ] [ test ] fix lock issue in testslot
# 137 - enh : add support for findids with inheritance
updated WebSocketServletRFCTest to use a read buffer instead of a close frame to improve code clarity and ensure correct handling of response headers
[ wasm ] fix memory leak in function instance . pushreference .
added ttl configuration to ClickHouseLogCollectClient and related classes to enhance logging capabilities by allowing configurable TTL values
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified field handling in CustomChangeWrapper and CustomPreconditionWrapper to
updated DeploymentExceptionTest to use Jetty server and handler collections instead of QueuedThreadPool to improve testing capabilities and manage server lifecycle effectively
added error handling for Fresco initialization in CommonsApplication . java and refactored vector drawable creation in NearbyController . java
modified the return statement to handle null or empty objectName before trimming it to avoid potential NullPointerExceptions when objectName is null or empty
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to provide
[ hotfix ] [ table - planner ] set plannerclass and executorclass to old static final
updated variable names and improved subject handling in KeyTool . java and Resources . java to enhance code clarity and ensure valid subject names are
added a deprecation annotation to RuntimeOptions . java to indicate that the RuntimeOptions class will be removed in a future release
replaced byte buffer encoding with direct byte conversion for string to simplify code and improve readability
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for enforcing
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl ` to
hbase - 13084 addendum fix checkstyle issue in masterfilesystem . addserver ( )
replaced constants related to ` SIGN _ ERROR ` with ` BLOCK _ SIGN _ ERROR ` in multiple files to improve clarity and consistency in
refactor JAR file handling in ExpandWar . java to use URLConnection for better connection management to improve reliability and maintainability of the
catch all httpclientresponseexception and httpclientresponseexception in fullnettyclienthttpclientresponse ( # 9373 )
updated the container ' s center method to use BorderLayout . centerAbsolute instead of BorderLayout . center to ensure the spinner container is displayed in an absolute
[ hotfix ] [ network ] fix interruption in networkbufferpool # requestmemorysegments
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of MBeanServer instances
replaced ` @ RunWith ` with ` @ RetryTestRule ` in ` AbstractIT . java ` to enable retry functionality for test failures
use transactionmanager . gettransactionid ( ) instead of session . isautocommit ( )
add a new package - info . java file and update import statements in CsvFieldType . java , CsvTable . java , CsvTest . java
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove unused constructor in streamtasktestharness
refactor URI handling in Request . java and add a new test case in RequestTest . java to improve code clarity and ensure correct URI
updated access modifier of KEY _ LAST _ SEEN _ VERSION _ CODE from private to public and introduced a new method to retrieve available storage points
added methods to handle session availability and unavailability in the SessionManager class to improve session management by allowing priority changes for available and unavailable sessions
added a package to scan " liquibase . pro " in ServiceLocator . java to enable scanning of Liquibase pro files during
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` MainApp . java ` and ` SyncedFolder
updated the ` loadWithNewGlobal ` method to accept an additional ` Object . args ` parameter to enhance functionality by allowing dynamic argument passing to
updated boundary conditions in FastPathResolver . java for improved readability and consistency to enhance code clarity and maintainability by using a consistent
updated ` weigher ` methods to use ` toIntExact ` instead of ` length ( ) ` for ` footer ` and ` stream ` to
updated method and variable names for clarity regarding randomization checks to improve code readability and understanding of randomization status
added support for the LEAD function in UnsupportedOperatorsVisitor and a corresponding test case in TestWindowFrame to ensure proper exception handling for unsupported functions
added a call to clear the headers in AbstractProxyServlet to ensure that the request headers are cleared before processing new requests
added a check to skip tests when SA attach is not expected to be implemented to ensure that unnecessary operations are not executed when the platform does not
added null check for bgColor and implemented translucent window translucency checks in the GraphicsDevice class to enhance robustness of background color
added null checks for phone number , email , and website in UserInfoActivity . java to improve user experience by providing clear feedback when there are no
added serialization support for precompiled headers in the PrecompiledHeaderData class to ensure that precompiled headers cannot be used on different machines
[ flink - 20536 ] [ table ] add update mode property to kafka table source sink factory
added a new file ` MultipleOutputsIntegrationTest . java ` to implement integration tests for multiple output groups to ensure that named outputs can be used
added content comparison logic in FileSettings . java to ensure that changes to the content do not affect the original settings
nifi - 10336 : fix issue with statelessflow configuration via json
replaced instances of ` Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java `
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for better user experience
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve exception handling in modelloader . loaditem ( ) .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix ( opengl ) : do n ' t return 1 for 2x device
refactor RussianLowerCaseFilter class to improve code readability to enhance maintainability and facilitate future development
updated ` CsvBulkLoadToolIT ` and ` QueryUtil ` to use ` PropertiesUtil ` for property management to improve code clarity and maintain
replaced the separator character with the path separator character in displayName to ensure proper formatting of display names across different operating systems
[ fix ] reset audio file when load wav file ( # 1357 )
added a new boolean property ` repeatFirstLineIndent ` and modified indentation handling in ` ColumnText . java ` to improve flexibility in indentation
changed the type casting of the ` oid ` variable from ` Oid ` to ` Object ` to ensure compatibility with the expected type of the `
remove duplicate code in hikaripool . getconnection ( )
[ fix ] control flow anchor : loop optimization must use controlflowanchored interface
added focus painting behavior for buttons in WindowsPlacesBar to improve visual clarity by disabling focus indicators
updated the condition to check for unique constraints in DatabaseSnapshot . java to ensure proper handling of primary keys and foreign keys in the database snapshot
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated the ` AccountAPI `
[ ds - 3952 ] add a check to ensure that the dspace . title . mdv be not contain a dc . title
added validation for utterance length in GapInsertionDetector . java and improved error handling in GapInsertionDetector . java to enhance robustness
add unit test base on user forum issue
updated thread count from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java `
increased the FASTSCROLL _ THRESHOLD from 40 milliseconds to 10 milliseconds to improve performance by allowing more time for fast scrolling operations
updated the system class name from ` MetaUtil . toInternalName ( System . class . name ) ` to ` Ljava / lang /
hhh - 13644 fix npe in procedurecallimpl # getresultstream ( )
added null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added new classes BinaryFrameGenerator and TextFrameGenerator to handle WebSocket frame processing to enable the generation of binary and text frames in WebSocket communications
danielwagnerhall : fix flaky test on firefox
updated the calculation of the ' lat ' and ' lon ' values in ` RandomGeo3dShapeGenerator . java ` to use a random
added a keep - alive method to manage ClassLoader instances to improve resource management by preventing stale ClassLoader instances
changed the return value from false to true in SQLiteDatabase . java to indicate successful operation
refactor concurrent signature handling in FindJSR166LockMonitorenter . java to improve clarity and maintainability of the code
added MkdirStep for directory creation in AndroidAar , AppleBundle , and FatBinary classes to ensure generated output files are organized
updated coordinate validation logic and improved error message formatting in MeshLeveler . java to enhance clarity of error messages and ensure accurate validation of
drools - 5351 dmn : skip kie - pmml parsing when there be no jpmml dependency ( # 364 )
updated variable name from locationMode to thermalStatus in ShadowPowerManager . java to clarify the purpose of the variable related to th
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility and avoid issues with temporary directories on macOS
[ geot - 6790 ] fix memory leak in filechannel ( # 3321 )
added a null check for the organization in the pom . xml file before proceeding to ensure that plugis is required for proper organization configuration
updated licensing terms in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused components to streamline the codebase
updated the method to include the Java class path in the execution process to ensure the child process uses the correct Java class path for execution
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java `
added a new test method ` dontChangeJavadoc ` to the ` AddLicenseHeaderTest ` class to address issue # 3198 to ensure that
changed the default value of LAUNCHER3 _ PHYSICS from false to true to enable the feature for improved user experience
added a div element in HtmlThreadInformationsReport . java to display a div without printing to improve user interface clarity by preventing printing
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " across multiple files to reflect the latest
added symbolicator and task fields for macOS systems in BsdDebuggerLocal . java and modified OS detection logic in PlatformInfo . java to
fix memory leak in fml - client and fml - indexedmessagetoremessagetoremessagetopacker
do n ' t log network dispatcher exception for peer connection reset .
[ java ] set adminbuffers to null if the context . conductorbytebuffers be null .
added a break statement in TouchImageView . java to ensure proper flow control in the code execution
chore ( regen ) : update java and python dependency ( # 95 )
simplified the flush method in FeedableBodyGenerator . java to improve code readability and maintainability by eliminating unnecessary complexity
added handling for java . lang . Object and java . lang . generic . variance . CONTRAVARIANT in TypeUtils . java to improve
replaced ` NonBlockingHashSet ` with ` ConcurrentSkipListSet ` in ` memtablesPendingFlush ` to improve performance by using a more
added null check for err tree before calling memberEnter and modified error handling logic in JavaCompiler and Erroneous classes to improve error handling robust
updated browser initialization from NO _ BACKGROUND to NONE in BugInfoView . java to enable the browser to display without a background
updated the negative button reference from ' finish ( ) ' to ' dialog . cancel ( ) ' in AboutActivity . java to ensure the
fix integerstamp . div ( ) and add unit test
added a method to read an input stream from an InputStream in ITextUserAgent . java to improve image loading efficiency by reading from an input stream
added variable declarations for ` CaseStmtToken ` and modified ` SwitchCompiler ` and ` ExprGenerator ` classes to enhance the handling of variable declarations
refactor the initialization of the cipher in RSAClientKeyExchange . java to handle exceptions during the handshake process to improve error handling and provide clear
added " psapi . lib " to the additionalDependencies attribute in WinGammaPlatformVC10 . java to ensure compatibility with additional library dependencies for
updated string formatting in StringUtilsTest . java to use the system ' s line separator to ensure consistent line separator handling across different operating systems
updated template encoding settings in Freemarker and modified maliciousJavascript in ApplicationController to ensure proper handling of special characters and improve HTML
replace ByteArrayInputStream with byte [ ] for unmarshalling in CRDGeneratorTest . java to improve performance and readability of the code
make variable hold _ samples and type final in sample sender factory .
added a conditional check for ` testngEmailableReporter ` in ` TestNG . java ` to ensure that ` EmailableReporter ` is
added quoting logic to handle escaped characters in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to ensure proper handling of quotation marks in command
changed access modifiers of several interfaces from public to package - private in Clock and DelegatingGauge classes to enhance encapsulation by restricting visibility to
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to enable dynamic adjustment of reduce tasks based on the number
updated SchemaGeneratorHelper to utilize ObjectField for retrieving default values and improved field mapping logic to enhance code clarity and maintainability by
bug 532077 - change default file version to 505365
added support for both OES _ texture _ float and GL _ ARB _ texture _ float extensions in FloatTextureData . java to ensure
move fileserver . write ( ) to fileserver . close ( ) and move it to fileserver . write ( )
added a null check for outputDirectory and jarStream in ClassDump . java to ensure output directory is set correctly when both properties are null
updated the return statement to use PerfStatsCollector for performance tracking to improve performance tracking and monitoring of SQL database operations
updated jmap tool path from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest
add a new enum resourceerrorhandling . java to provide error handling option for resource configuration
added a check for end - of - file conditions in RAMInputStream . java and implemented a test for EOFException in TestRAMDirectory . java
updated error handling to provide a localized message for missing resources in DefaultServlet and JspServlet to improve error reporting by providing context for missing resources and
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added a new AccessControlContext class to enhance control over
changed the constant value of CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging for the HardRefCache to improve memory
hbase - 16400 addendum fix testsplittransaction test failure ( chunhui )
added null check for currentSelectionArea before executing selection checks to prevent potential NullPointerException when currentSelectionArea is not initialized
added a new test method ` testJaasDemo ` to the ` DemoModulesTests ` class to validate Jetty demo configurations to ensure
added checks for ` spanX ` and ` spanY ` in ` CellLayout . java ` and modified return logic in ` CellLayout .
refactor CacheOffHeap class for improved performance to optimize memory usage and reduce memory consumption
fix issue with reference later table in createtable ( )
added validation for tile values and improved logging for extra XML gid values in TiledLoader . java to ensure data integrity and provide informative
added synchronization to the setWorkingSet method to ensure thread safety when modifying the job set
added a new file ` Manasa . java ` that calculates and displays the number of stone steps to implement a solution for a specific
add addresschecker interface to track request processor to make it easy to check if a request be a bad address
do n ' t use rendertype . get translucentmovingblock ( ) if the render type be translucentmovingblock
added a method to remove specific tags from the tooltip in GuiConfigEntries . java to enhance user experience by providing clearer guidance on
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated its representation
added a null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents is null
refactor the single check logic into a separate method ` isSingle ` to improve code readability and reduce duplication
updated DockerClientFactory and RemoteDockerImage to accept a boolean parameter for failing fast execution to improve error handling and provide more informative logging during
updated AndroidMetadata to include resourcesMode parameter to enhance metadata tracking by incorporating resources mode information
act - 767 : remove dependency on dateutils . truncate ( date ) in historyprocessinstancequeryimpl
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the new project core
added handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting and provide clearer usage information
modified the implementation of the TreeMap class to enhance performance and maintainability of the code
added methods to manage asynchronous stack trace visibility and improved exception handling in the application to enhance debugging capabilities and provide better context management
added a method to set the glow color in BubbleTextView to allow customization of text appearance in the UI
updated style classes for link and desc in LinkedFilesEditor . java to ensure consistent styling for file rows in the editor
added a test for class name matching in ResultSetMetaData to ensure compatibility with various data types in the result set
removed unnecessary file deletion logic in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code and improve readability by elimin
added null check for _ info before checking status of SWITCHING _ PROTOCOLS _ 101 to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to allow setting a provider when creating a ShadowLocation instance
updated maxRAM calculation to accommodate larger device RAM values to ensure sufficient memory allocation for 32 - bit devices
add miss stats for non - data included map ( # 15613 )
added logging functionality to FileProfileActivator and modified imports in FileProfileActivator to enhance logging capabilities for file existence checks and missing files
updated the error message from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity by using a more
move roles to toset ( ) instead of tolist ( ) .
updated return values in ExpandableUploadListAdapter to use a constant for the maximum number of uploads to improve code readability and maintainability by
added assertions to validate the deletion of a record in the DashboardUserMapper to ensure that the delete functionality of the delete operation works as expected
update instructorfeedbackresultspagedata to use primaryparticipantid instead of recipientid to improve clarity
sulong : fix npe in deref handle getreceivernode and derefaddress .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
updated the command - line interface to include usage guidance and improved usage guidance to enhance user guidance and provide guidance for starting
updated action bar title handling in DrawerActivity . java and added notification adapter in DrawerActivity . java to improve user experience by providing clear
updated CommandLineParserTest . java for improved test coverage to enhance reliability of command line parsing functionality
updated animation configurations for all apps in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to improve animation responsiveness and performance during
updated the method to retrieve the Java name from an external name to ensure compatibility with the updated Java naming conventions
removed unused native methods from CWrapper . java to streamline code by eliminating unused functionality
added constant check in the Checker class and created a new ValueTest class for testing to ensure that only constant values are allowed in the context of
updated test cases in MontgomeryMultiplyTest , TestMulAdd , TestSquareToLen , and TestSquareToLen files to
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null checks
refactor JiraConfiguration class for improved clarity to enhance code maintainability and readability
updated string concatenation syntax in UploadBuild . java to improve readability and consistency of error messages
updated bounds calculations in DeviceProfile . java to include the search bar top offset to improve layout alignment by accounting for the search bar ' s
fix ( pulaudioconnector ) : disconnect only if idletimeout be 0
refactor code to run certain operations on the UI thread to ensure UI - related tasks are executed correctly without blocking the main
removed the getSourceGroupOptional ( ) method from AppleSource . java to streamline code by eliminating unnecessary checks
increased the timeout duration for the triggerFiredLatch from 220000 milliseconds to 32 milliseconds to allow more time for the trigger to complete
updated parameters in ` RunLengthEncodedBlock ` and ` RunLengthEncodedBlock ` to use ` positionCount ` instead of ` outputPositionCount
fix npe in abstractnodecostsearch when there be no distfromstartsq
added a condition to skip processing for Form and Dialog components to improve efficiency by avoiding unnecessary processing for Form and Dialog components
replaced ` UiThreadHelper ` with ` LauncherModel ` for thread handling in ` DragView ` and ` FloatingIconView `
added a null check for commitPoint in ReplicationHandler . java to ensure it is set to the latest commit when none is provided
added unit tests for ` getImei ` and ` setImei ` methods in ` ShadowTelephonyManagerTest ` to
removed unused debug method from SimpleHostRoutingFilter . java to streamline code and improve maintainability
added the ` destory ( ) ` method to multiple classes to handle resource cleanup to ensure proper resource management and prevent memory leaks
[ rocketmq - 2852 ] fix unit test for static topic ( # 4892 )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` OutputStreamWriter ` to improve
hbase - 17412 bulkload should throw error if multi - h file do not exist ( chunhui )
added a nullable ` commission ` field and updated constructors in ` DefaultWithdrawFundsParams ` and ` RippleWithdrawFunds
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline dependencies by eliminating unused imports
added multiple catch blocks for ` SolrServerException ` and ` IOException ` in ` LoadSolrBuilder ` , ` SolrServerException ` , and ` Solr
added null checks for method body and method flags in Java2TypeScriptTranslator . java and improved error handling in OverloadTests . java
replaced direct usage of ` FileSessionDataStore . sweepDisk ( ) ` with a try - with - resources statement in ` TestFileSessions
added serialization support and refactored entity handling in multiple classes to improve data type handling and maintain consistency in entity management
refactor SubExactLConstantTest and SubExactLNonConstantTest files to improve code clarity and maintainability
added a null check for the claimRequestString before parsing it to improve robustness by avoiding null pointer exceptions
updated the constructor of ` HiveFilterSetOpTransposeRule ` to use ` RelBuilderFactory ` instead of ` FilterFactory ` to improve flex
updated null handling in UpdateMapper and added unit tests for null values in UpdateMapperUnitTests to improve robustness and ensure correct mapping of null
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and added a
initialize transformers and locators list in moddirtransformerdiscoverer ( # 9372 )
updated error message formatting in AbstractQuerydslProcessor . java to improve clarity of error messages for better debugging
pegraphdecoder : fix a problem with call stack trace on decompilation
replaced ` setOf ` and ` setOf ` methods with ` copiedSetOf ` methods in ` RestTemplateBuilder . java ` to
camel - 7739 : do not dump mail content in tostring of mail message .
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - avoid npe
updated the method to return the identifier name as a property name to ensure that the identifier name is not marked as a property name
add a new file ` wavegeneratoractivity . java ` and replace ` Toast . show ( ) ` with ` Intent ` in ` Instrument
added logging functionality to KeyedProperties and improved null checks in SheetOverlaysManager to enhance error handling and provide better diagnostics when sheets are
test : add log and exec test to podit
added a test method to verify behavior when no index is detected and created a new one in TestReplicationHandler . java to ensure that SolrCore
do n ' t call super . dispatchmethodKernelOkra in graalKernelTester # dispatchmethodKernelOkra
updated data handling in DnsClient , MxRecord , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable for sorting records to
refactor thread creation in XToolkit . java to use a privileged action for improved security to enhance code readability and maintainability
added validation in SelectBox . java and set dropdown to " Linux6 " in UITest . java to ensure proper validation and functionality of
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing more detailed stack trace information
updated the ` createState ` method to include a ` parentSplit ` parameter and modified state creation logic to enhance flow management by associating split
changed the ` connectionState ` field to be ` volatile ` in ` SSLSocketImpl . java ` to ensure thread - safe access to the
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added periodic trigger integration tests in EnableIntegrationTests . java to
refactor memory allocation methods in MemoryStack and MemoryUtil classes to improve clarity and consistency to enhance code readability and maintainability by using
added handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error management and
[ java ] unusedmodifier : fix nullpointerexception when use enums
refactor method calls to use method reference syntax across multiple classes to improve code readability and reduce verbosity in logging statements
updated parameterized annotations in AbstractHttpClientServerTest to include a name parameter to improve clarity of test output by specifying the SSL context
added error handling for illegal format exceptions during transformation processing to improve robustness and provide clearer logging for transformation failures
replace ` getUserPermissions ( ) ` with ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to improve clarity
replaced direct equality checks with a builder pattern for equality in the Point class to improve code readability and leverage Apache Commons Lang for
updated the process method to handle null outputRoot to improve robustness by avoiding potential NullPointerException when outputRoot is null
pdfbox - 2530 : add ability to filter out a pdf annotation , a suggest by andreas lehmk ü h
refactor StackTraceCleaner to improve stack trace handling to enhance performance and maintainability of stack trace processing
added content type handling for CSS , JavaScript , and JavaScript files in the PluginServlet to ensure proper content type is set based on the file type
added import statements for various Hibernate dialect , DB2Dialect , and SybaseDialect , and skipped tests in CriteriaLiteralInSelectExpressionTest
updated the ` upgrade ` method to use ` slotSize ` instead of ` slotValue ` and added a new ` upgrade ` method to improve
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` and ` Context ` , ` ContextImpl ` , and ` Doc
[ scb - 1889 ] enable long polling in kie client ( # 2809 )
updated gesture handling in PagedView and BaseOverview to utilize scroll functionality instead of gesture margins and fling to improve user experience by en
replaced the instantiation of UnlocksDialog with a new instance of UnlocksDialog and added a button to show the unlock functionality to enhance user
added a call to clear the drop list in PlayerEventListener to ensure that all dropped events are cleared before new data is processed
added a static final String DEFAULT _ PARAM in StreamResult . java to provide a default value for input parameters
changed the exception type from MalformedURLException to IOException in the testNormalizeOrder method to improve error handling by using a more specific IOException type
updated output message to include chunk type and skip the PlanIndex in TsFileSketchTool . java to improve clarity of output and ensure proper
added filtering logic to exclude specific Swift headers in UmbrellaHeader . java and updated tests in ProjectGeneratorTest . java to ensure only
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encoding functionality to RequestPlugin . java to enhance request processing efficiency
added support for DB2 dialect in RolapNativeSql . java to ensure proper handling of FLOAT expressions in different database environments
added validation for LDAP user password in LdapAuthenticationProviderImpl . java and created a new test class TestLdapAuthenticationProviderImpl . java to ensure
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a conditional check to clear complexWriters in ProjectRecordBatch . java to ensure proper handling of complex writers when conditions are met
added @ SuppressWarnings ( " serial " ) annotations across multiple cache classes to suppress warnings related to serialization in the codebase
removed unnecessary exception handling for ClassNotFoundException in ClassGraphClassLoader . java to simplify the code and avoid unnecessary exceptions when classInfo is null
added schema error parsing and modified return statement in ErrorResponseException . java to improve error handling and provide clearer output format
added constructor to EventSourcingRepository to allow initialization of EventStore and SnapshotTriggerDefinition to enhance flexibility and ensure eventStore is not
refactor symbol definition logic in Attr . java for improved clarity and efficiency to enhance code readability and maintainability by eliminating
updated the text setting logic in SearchedPeopleCursorAdapter to handle potential exceptions and improved search text handling to enhance robustness by properly
[ nuvo ] add standby mode ( # 9018 )
tmi - tiff : use baseline instead of extension for planar . patch by stu hood ; review by jbellis
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent memory leaks
add averageutil to make it easy to use it in the laser table .
added new classes ` SigInt ` and ` SigIntBarrier ` to handle interruptions in a concurrent environment to facilitate
refactor graph handling in ExporterGEXF to use hierarchical graph model to improve compatibility with hierarchical graph structures
refactor TCTLSeparatedProtocol to use Text instead of byte arrays and improve string handling to enhance compatibility with Hadoop ' s Text
[ 3.0 ] fix indexoutofboundsexception in feedbackrubricquestiondetails and feedbackrubricresponsedetails due to invalid index
updated the condition to check if the schema and catalog case is ORIGINAL _ CASE before comparing to DB2Database to ensure compatibility with different
simonstewart : reset the proxy in the browsermobproxytest
updated the format of the criticalErrors string in ModelRepositoryImpl . java to correctly convert the diagnostic line and column to their string representation to improve
replaced ` mTextWatcher . reset ( ) ` with ` mTextWatcher . reset ( ) ` in ` InPlaceEditView .
refactor InternalByteArray and TruffleString classes to improve code readability and maintainability
[ hotfix ] [ gelly ] fix typo in graph . foreachedge ( )
updated Java assertion assertions in multiple Java files to improve consistency and maintainability across the assertion framework
deleted the Class Á . java file and added a new DiacriticTest . java file to implement a test for Unicode Unicode
replaced CountDownLatch with CyclicBarrier in ClusterMembershipTest . java to improve synchronization handling by using a cyclic barrier instead of a
added error handling and improved workspace reader management in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness and prevent potential
updated SSL scheme check and improved IP port handling in ServiceRegistryConfig . java and TestServiceRegistryConfig . java to enhance security and ensure
refactor Mockito class for improved readability to enhance maintainability of the codebase
corrected a typo in the constructor declaration of Jdbc3Connection to improve code consistency and adhere to coding standards
added a method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure the servlet instance is properly instantiated to improve thread safety
refactor deltaServerTime handling in BinanceExchange and BinanceBaseService to improve clarity and functionality to enhance readability and maintainability
added a condition to check for " NonStop ( tm ) Servlets For JavaServer Pages ( v8.5 ) " in Tom
added a null check for the component form before deregistering an animation to avoid potential null pointer exceptions when the component form is not available
modified the ` decodeResource ` and ` drawBitmap ` methods to accept ` BitmapFactory . Options ` as parameters to enhance functionality by allowing custom
[ java ] use a constant for number of message in example publisher .
added click handling and linkify text functionality in TimelineArrayAdapter to improve user interaction and streamline text display
added " text " to the unmodifiable data types in PostgresDatabase and modified condition checks in NumberType to ensure proper handling of numeric and text
fix race condition in entryprocessorbouncingnodestest ( # 3683 )
updated the method name from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` Ambari
updated bridge reconfiguration handling in CreateBridgeServlet and modified test cases in CreateBridgeServletTest to throw a BridgeReconfigurationFailedException to improve robust
added a validity duration parameter to the ` isRobotsExpired ` method in ` PreconditionEnforcer . java ` and modified related methods to
replaced direct calls to ` getDisplayName ( ) . contains ( " Teredo " ) ` with a local variable ` dName ` to
updated SpriteBatch and SpriteBatch classes to accept a default shader parameter to enhance flexibility in shader initialization and improve code clarity
added synchronous commit option to properties in TestUtil . java to enable synchronous commit functionality for improved performance
added ` elementTypeCoercer ` to ` SortedSetTypeCoercer ` and modified ` fillSortedSet ` method to handle duplicate elements to
updated confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to handle favorite files to improve user experience by providing clearer and more inform
updated the condition in URLPathEncoder to check for a minimum length of 256 characters to ensure that only valid characters are processed in URL path encoding
fix bug where the server do n ' t have a port number when register a friend .
removed the expect return value from clusters . getClusters ( ) in HostResourceProviderTest . java to ensure the test correctly verifies that the clusters
[ hotfix ] remove unused log parameter from yarnentrypointutils . loadconfiguration
add init ( ) and repaint ( ) to the sip communicator frame , so that it can be use by the sip communicator
removed the ShadowHtml class and updated its implementation in RobolectricBase . java to simplify the codebase by eliminating unnecessary shadowing
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` to implement the ` StarTreeRecordStoreFactory `
updated logger setup for HTTP3 and QUIC loggers in HttpClientLoadTest . java to enhance logging capabilities for better debugging and monitoring
changed the visibility of the addListeners method from private to public in MockSettingsImpl . java and added a test for listener validation in MockSettings
[ hotfix ] fix checkstyle violation in statehandlestore
( chore ) camel - test - infra - http : migrate to jetty - http - security
[ # 7805 ] instructor : add ` ` none ' ' section to teammates
use try - with - resources to ensure proper resource management and avoid potential memory leaks
( chore ) camel - 16400 : camel - test - infra - camel - test - infra - server : avoid port
added ` BuildTarget ` and ` AndroidLibraryBuildTarget ` to ` AndroidBuildConfigJavaLibrary ` , ` AndroidPrebuiltAar `
update documentation for peer certificate verification in TrustEverythingTrustManager . java to improve clarity and accuracy of peer certificate documentation
cloudstack - 7898 : listcapacity : remove the method of getpagesizeval ( ) from listcapacity
added handling for the CLOSED case in IteratingCallback . java to ensure proper termination when the callback is closed
added a boolean field ` isAuthorized ` to manage authorization state in ` AccessControlContext ` and implemented a method to check access control permissions to enhance
refactor event sending logic in OSGiDeployer to check if the app is an instance of AbstractOSGiApp before registering it
added handling for tiff formats in DLNAMediaInfo . java to ensure proper MIME type assignment for tiff media files
[ wasm ] fix thread safety issue in optimizedcalltarget
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` to use ` ImmediateModeRenderer
updated file paths in PolicyMonitorTest to use target directories instead of test resources to improve organization and accessibility of test resources during testing
added a call to removeAllFiles ( ) in TrashbinActivity to clear all files in the trashbin list to improve user experience by ensuring
replaced ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` with ` com . sun . jdi .
sulong : make llvmcheckglobalvariablestoragenode . execute ( ) return boolean instead of void
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter for better event handling to enhance event processing by associating activities with
[ hotfix ] [ test ] add max burn target to burningmanpresentationservice
updated import statements in UniqueConstraintSnapshotGeneratorSnowflake . java and modified the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake .
simplified the selection logic in DMLTransformer . java to handle empty insert statements to improve clarity and correctness of the select statement
updated import statements in ServiceValidateControllerTests . java and changed the pgtUrl parameter from " http : / / www . github . com
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a new ` hideDefaultName ` method to enhance
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic types in multiple classes to use generics for better type safety to improve code clarity and reduce potential runtime type errors
do n ' t send hole punch packet if a peer do n ' t have a quality control .
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest . java ` to ensure correct functionality of the ` update `
updated error handling in PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY instead of BAD _ REQUEST to improve user feedback by distinguishing between invalid
updated XMLUtils to retrieve the propertiesElement directly from the document to improve code clarity and maintainability by using a more direct method for obt
refactor Cache class to improve code readability to enhance maintainability and reduce complexity
rename timeInSec and prevTimeInSec to timeMillis in Isochrone . java and SPTResource . java to improve cl
add a method to check if the relay binding be valid and update the tick count accordingly .
added a new ` Chainer ` class and modified the ` contains ` method to return an instance of ` Chainer < T > ` to
refactor Model class to improve code readability to enhance maintainability and facilitate future development
update recordedTime to a fixed value of 619315200000L to ensure accurate representation of the recorded time in the application
added a condition to resize the status if the terminal type starts with AbstractWindowsTerminal to ensure the status is properly resized when the terminal is
updated log message and added a conditional check for host version state in UpdateDesiredStackAction . java to improve clarity of log messages and ensure
remove dependency on third _ party / src / jre / org . third _ party / src / jre _ bundle _ deploy . jar
replaced HashSet with LinkedHashSet in multiple classes and added default global location and user location settings to ensure predictable iteration order for artifact resolution and enhance
removed unnecessary try - catch block around operation conversion to simplify code and improve readability by eliminating unnecessary exception handling
reordered the method call to resolve the property configurer in KnativeEnvironment . java to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity by using a more
added a connection method to CloudSolrClient and implemented a test for CloudSolrClientUploads to ensure proper connection handling and validate the upload functionality of
added synchronized block to allBindings to ensure thread safety when adding and removing bindings
added methods to clear cache and files and cache directories in RobolectricTestRunner and updated file handling in ShadowContext to improve resource management
added LinkedHashSet and TreeMap to the list of styles in SecureXStream . java and updated related tests in XStreamPersisterTest . java to ensure
[ drools - 7 ] add kiemodel support to internalkiebuilder and kiehelper ( # 359 )
replaced the direct block type check with a conditional check for Farmland in BlockEventListener . java to improve efficiency by avoiding unnecessary
added a default implementation of the getLocalIp ( ) method in FinishedSpan . java to provide a default implementation for the method
updated execution context handling in JdbcStepExecutionDao and added a new test for Integer serialization in AbstractStepExecutionDaoTests to improve data integrity and
updated bitwise operations in ` AbstractDictionary ` , ` BigramDictionary ` , ` HHMMSegmenter ` , and ` WordDictionary ` to
added " python37 " to the resource list and modified the extension to include " libs " and " python37 " to enhance compatibility with Python
refactor PluginTab to use a separate refresh method for better code organization to improve code readability and maintainability by encapsulating the refresh logic
change log level from info to warn for history file reloading and saving errors
server : fix npe in vmwarestorageprocessor when vm be n ' t in host datacenter
camel - 14850 : camel - sftp should stop sftp on shutdown .
rename ExperimentalMockitoJUnitRunner class to improve clarity and consistency in naming conventions
replaced direct usage of Build . SERIAL with a new method ` GetBuildSerial ( ) ` across multiple classes to improve code maintainability
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null check for skeletonControl before removing it in AnimControl . java to prevent potential NullPointerExceptions when spatial is null
added methods to set smart replies in ShadowRanking to enhance testing capabilities for ranking functionality
[ java ] only add segment file if they do n ' t already exist .
updated the initialization of ` carrot2ResourcesDir ` to use ` initParams ` instead of ` resourceLoader . getConfigDir ( ) `
added null check for ` testRect ` in ` WindowsTreeUI ` and created a new class ` bug8004298 . java `
updated Java version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the latest AS
updated error handling in RecommenderMapper to throw TasteException instead of null to improve error reporting for better debugging and user feedback
added ClientInfo to the SurrogateAuthenticationEventListenerTests class to provide client - specific information for surrogate authentication tests
added a boolean variable ` isUserView ` to ` CardPresenter . java ` to reset the user view state to false
updated references from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` across multiple files to standardize naming conventions and improve code
refactor metric creation by introducing ` constructBatchHistogram ` and ` syncLogTimePerRequest ` to improve code readability and maintainability
added a new module - info . java file for SQLite - related components to define module exports and dependencies for SQLite integration
added a sleep delay in StreamResetTest . java to ensure proper synchronization during tests
removed conditional checks for " new " and " api " in the permissionsManager initialization to simplify the code by eliminating unnecessary checks
updated DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added a method ` getDepth ` to the ` SpringLoadedState ` class to provide a default depth value of 0.5 f for the current
use array copy range instead of system . arraycopy in binarydecoder
[ hotfix ] fix typo in executiongraph javadoc
removed notifications from NotificationActivity and removed them from NotificationRenderer to simplify notification management and improve UI responsiveness
updated exception handling in DefaultExceptionConverter to handle null invocation cases to improve robustness and clarity in error reporting during exception processing
fix glowcontainer lock not be set properly ( # 702 )
replaced MethodHandle with reflection method for retrieving setter in ProxyMaker . java to improve method accessibility and simplify exception handling
updated type casting for ` value1 ` and ` value2 ` from ` int ` to ` Integer ` in ` MathTest . java `
simplified string concatenation for metrics , datasets , and datasets in BaseEmailContentFormatter to improve code readability and simplify string concatenation logic
added logic to display and manage the layout provided panel in LayoutPanel . java to improve UI responsiveness and ensure proper visibility management of the
added a null check for the location variable in the dead server check to prevent potential NullPointerException when location is null
updated BuilderFactory , Pipeline , and PipeliningTest files to improve code organization and maintainability
added null check for key parameters in BasicChecker . java to ensure proper error handling for missing key parameters
refactor MediaTypeRequestMatcher to use a separate method for ignoring media types to improve code readability and maintainability by encapsulating logic in a
updated debug log messages to include task number directly from taskAttemptId to improve clarity and consistency in debugging output
added a property to the @ SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding in the application context
added null check before closing the indexReader in DeleteDuplicates . java to prevent potential NullPointerException when closing the indexReader
updated package names for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , and BTCMarketsManualExample classes to improve
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the rendering logic correctly
added a new file ` CompatibilityTest . java ` to test the compatibility of XML files to ensure that the application correctly handles and verifies
added new utility classes for push registration and key handling in the application to facilitate the management and security of push notifications in the application
updated the calculation of numReplicas to handle multiple instances in TableRebalancer to ensure that numReplicas does not exceed the maximum of Integer . MAX
update version number to 2.7 . 0
log4j2 - 1349 fix regexreplacementconvertertest on window
throw a sockettimeoutexception if ajpprocessor . readtimeout be set to false .
added default values for friction , restitution , density , and sensor properties in FixtureDef . java to ensure default values are
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in an
removed a shell command for waiting for broadcast idle in LauncherInstrumentation . java to streamline the broadcast idle process by eliminating unnecessary
added unit tests for font and link tags in ResourcesTest . java and modified the return statement in ResStringPool . java to ensure correct retrieval
fix minecraft bug in statscomponent . java ( # 7038 )
added phone call request handling in Launcher . java and a new permission check in Utilities . java to ensure proper handling of phone requests and provide
updated return values in SimulationPanel , PlotDialog , and Startup classes to include flight data and improved warning handling to enhance user experience
updated the BUF _ SIZE _ LONG constant and refactored the fromBytes method in GeoEncodingUtils to improve code clarity and ensure
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to ensure thread safety when checking if the Docker
added a constant for VPX in CodecTypes . java to provide a standardized representation of the VPX codec type
added a coordinator address option to DistBuildFactory and DistBuildRunCommand to enable configuration of the remote coordinator thrift server to connect to
added path matching functionality in FsUtils and refactored timer initialization in WrapTimer to improve path validation and ensure thread - safe timer management
added a condition to check if the entry ' ent . getValue ( ) is greater than zero before adding it to labelValues to avoid adding empty
make sure that the result be always a boolean
removed the @ Test annotation from TestPerfBenchMarkDriver . java to enable the test execution and ensure it runs
added materialization time setting in ObjectStore and created a test for it in TestObjectStore to ensure accurate tracking of creation and validation of material
added handling for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for missing native dependencies
do n ' t display message on send queue if it ' s one - way
updated break weight determination logic in GlyphView . java to improve clarity and correctness of break weight handling
refactor input stream reading logic in RCFile . java to improve efficiency and readability to enhance performance and maintainability of the code
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address the issue identified in SOLR - 1302
replaced instances of ` getSortedByCounts ( ) ` with ` unwound ( ) ` in ` ToePool . java ` to
removed the ` keysToSortedDataFlavorArray ` parameter from ` ClipboardTransferable ` and ` DataTransferer ` classes to
added an " - infoport " option to the args in TestThriftServerCmdLine . java to enable dynamic port allocation for testing purposes
added a check to return false if the end of the file is at the end of the file to ensure that the scanner does not proceed when
refactor metric and timer handling in Debug . java to use a dedicated set for enabled metrics and timers to improve efficiency and clarity in monitoring
fix npe in chatroomjabberimpl when there ' s only one nickname
add check for null filename and empty filename ( fixes # 3993 )
refactor refresh token creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove deadlock in yarnflinkapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ( ) ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a placeholder
updated SSL URI for BTCChinaMarketDataService initialization to ensure secure connection to the correct BTCChina API
update cpdtask to use pathchecker instead of file . path for output .
added new OauthController and Oauth2PluginTest classes to implement OAuth2 authentication functionality in the plugin framework
refactor SemgrexPattern class for improved readability to enhance maintainability and ease of understanding for future developers
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and updated their implementations in ` EntryStream ` and ` Entry
( chore ) camel - rest : fix exceptiontoproducerresponseconverters
updated the ` shouldComeFromThisClassLoader ` to include ` org . specs2 ` and ` org . specs2 ` and ` org
added a condition to check if transmittableAudioEncodings is not present to ensure that the code only executes when transmittableAudioEncodings are
updated the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test for current timestamp in Create
[ geos - 9015 ] add test for wfs 2.0 and wfs 2.0 gml 3.0 (
added a volatile boolean field ` wasInvoked ` and modified related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
updated regex mapping handling in ColumnarDataSource and RowProcessor , modified return types in RowProcessor , and added deprecation annotations in BinaryResponseProcessor to
refactor ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and introduce ` getSeekPositionsArraySize `
added new XLCDCommunicator and XLCDController classes to handle XLCD commands in the application to enable support for X
[ drools - 720 ] use the system classloader to load the schema from the kmodule . xsd resource
added retry logic and non - empty check for block and transaction messages in EventQuery classes to enhance robustness by ensuring valid messages are processed and prevent infinite loops
replaced thread state assertions with a constant WAIT _ FOR _ TEST _ THREADS _ TIMEOUT in WorkerProcessPoolTest . java to simplify
updated the equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to ensure proper equality
updated variable values in EnergyCost . java from 20000 to 10000 to improve accuracy of resource management in the energy cost calculations
updated method signatures and added exception handling in DownloadPlugins . java to improve code clarity and ensure proper configuration management
deleted the ` SpringTransactionHooks ` class and updated related test cases to use ` AbstractSpringTransactionHooks ` instead to simplify the codebase by
refactor AbstractClassAssert for improved code clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` to test the handling of uninitialized string values in JDI to ensure
added support for providing dependencies in AndroidLibraryDescription and improved dependency resolution in GraphEnhancementQueryEnvironment to enhance dependency management and ensure accurate
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to enable synchronization of keyboard open and close animations during transitions
added a boolean flag ` sSavedBugreport ` to track the state of the system anomaly message to improve performance by avoiding unnecessary logging
added a new constant CINEPACK to FormatConfiguration and updated LibMediaInfoParser to handle cinepack format to enable support for Cine
added camera bobbing configuration and updated hand movement animation logic to enhance player experience by allowing customizable control over camera bobbing behavior
updated blob description to use digest instead of data to improve clarity and accuracy of blob representation
deleted the HSQLDBServerFilesFilter . java file and refactored file listing logic in TestUtility . java to simplify the codebase by
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that operations are only performed when restoreFrom
updated latestVersion assignment from APIUtils . apiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added a trace
added a method invocation check for type existence in the HasTypes class to ensure that method invocations are only processed if the type does not already exist
replaced magic numbers with a constant for the number of values in AmbientCubemap . java to improve code readability and maintain
profilertypesfeature : show default mode if not configure properly
added conditional checks to return maskedNumber based on the value of ' value ' to ensure correct masking behavior when ' charCount ' is zero
boundedoverheadblockstoretest , derbyblockstoretest : use temporary folder instead of temporary file
add itemstackdamageable ( ) and gethassubtypes ( ) to itemstack . isitemstackdamageable (
fix mc - 167447 and mc - 167447 ( # 5209 )
simonstewart : set default browser . startup . page to 1 in firefoxdrivertest
added handling for HTTP status codes 200 and 101 in Http1xClientConnection . java to ensure proper handling of HTTP / 1.1 requests
updated the task name from " compile " to " process - classes " to clarify the purpose of the task for processing classes
replaced the shutdown method with a closeIdleConnections method in HTTPHC4Impl . java to improve connection management by limiting the number of
added a conditional check before processing aggregate function identifiers in AmbariMetaInfo . java to ensure metrics are only added when the aggregate function suffix
added a method to set fullscreen parameters in TaskOverlayFactory and modified corner radius retrieval in TaskThumbnailView to improve fullscreen handling and ensure
added a new file ` Counting . java ` that displays a number of occurrences of a given number to provide a solution for a specific problem
[ java ] set socketchannel to null in clusteredagentmanagerimpl . java to avoid npe .
rename MutisignOperationerGodicTest . java file to improve clarity and maintain consistency in naming conventions
added error handling for reading start and end fragments in StaxEventItemReader to improve robustness by preventing application crashes due to empty
simplified import statements and added null check for resource name in getAttributeValue method to enhance code readability and prevent potential NullPointerExceptions
replaced ` com . nimbus . jose . shaded . json ` with ` net . minidev . json ` in
updated OS detection from " Linux " to " AIX " and added support for aix family in PKCS11Test to ensure compatibility with A
add router . getoutercontrolip ( ) to avoid use private ip
added a method ` invokeWithoutBlockingWithResultSync ` to the ` cn ` class to enable asynchronous execution of runnable tasks without blocking
deleted the file ` PresenceMessageComboTests . java ` to remove unused test class to streamline the codebase
replaced integer casting with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve precision of rectangle
updated variable declarations in TestClusterDumper . java for consistency and clarity to improve code readability and maintainability
hbase - 17412 fix for hbase - 17413 hbase - 17416 ( addendum )
camel - 16400 : camel - core - allow to register service with type converter . thanks to benjamin graf
added conditional task handling in SparkCrossProductCheck . java to enable processing of conditional tasks in Spark execution
refactor action handling in Launcher and LauncherAppState classes to improve clarity and consistency to enhance code readability and maintainability by
updated conditional logic in LoginInfoEndpoint and added new test cases in LoginInfoEndpointTests to ensure passcode prompt functionality works correctly when there are
hbase - 13076 addendum to demonstrate the issue that we ca n ' t reproduce in hbase
updated message and result fields in HuobiAccountInfo and HuobiAccountServiceRaw classes to include " result " instead of " message
added support for the " PERIOD " column in MariaDB to ensure proper SQL generation for the " PERIOD " column in Maria
[ beam - 8470 ] improve documentation of portablepipelineoptions . process _ variables ( )
added documentation for Launcher shortcuts in VersionChangeLogs . java to clarify usage of Launcher shortcuts for Android 7.1
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java to allow external access to
removed System . out . println statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use conductoragentinvoker instead of conductorclientinvoker to ensure that aeron client can
updated type validation logic in ` Attr . java ` and added ` NoWarnOnImplicitParams . java ` in ` Attr . java ` to
refactor menu item visibility and management in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating menu item
added BTC _ deposit and BTC _ withdrawal as reserved entries in BTCETransHistoryResult . java and updated type
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by eliminating duplicate entries
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
modified conditional logic in LastQueryExecutor . java and added a new test case in IoTDBLastIT . java to ensure correct handling of timestamps
added a newline character to the request string in HttpResponse . java to ensure proper formatting of the request string
added a static block to set the " org . slf4j . simplelogger . log . apache . http . wire " property to
added a safe area setting for the title bar in the Sheet class to enhance user experience by ensuring the title bar is displayed in safe areas
updated loop to iterate over TimeSeriesChunkMetaDataList instead of using an index to improve performance by eliminating unnecessary iteration over the list
added a SQL syntax to the ALTER TABLE command in AlterTest . java to ensure that the ALTER TABLE command can be parsed and
changed the visibility of the ` copyState ` method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executecallcall ( ) should return a completable future . # 5370
hbase - 11867 use constants . suffix _ split _ file instead of constant . part
[ hotfix ] [ table - planner - blink ] fix typo in javadoc
reformatted code for better readability in CompareFunctionsProcessor . java to improve code clarity and maintainability
do n ' t abort compaction if there be insufficient disk space
removed the ` toString ( ) ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added null check for mLastGestureState in AbsSwipeUpHandler and TaskAnimationManager to prevent further processing when the handler is invalidated
refactor ` getLockTimestamp ` and ` setLockTimestamp ` methods to use instance methods instead of static context to improve flexibility and encapsulation
added a method to retrieve the artist from the MediaInfoParser to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 1188 : fixed npe in splittext when header line count be zero
updated the key store type handling in HttpsConnectorFactory to support Windows - specific key store types to enhance compatibility and ensure proper loading of the
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time for
added a conditional check for non - existent files in FileSyncAdapter . java to improve handling of cases where a remote folder does not exist
added animation properties to the Slider class to enhance slider customization options for better user experience
reformatted assertions in LineSeparatorProcessorTest . java for consistency to improve code readability and maintainability
changed maximum width and maximum height from 512 to 1024 in TexturePacker . java to accommodate larger texture packing data
added a test for negated parentheses in UnnecessaryParenthesesTest . java and modified the return statement in UnwrapParentheses . java to
camel - 16400 : fix potential npe in hazelcastqueueconsumer . poll
added TextFeedbackTest class and updated test runner methods in AllTests . java to enhance testing capabilities for text feedback functionality
replaced ` Math . round ` with ` Float . compare ` for score comparison in ` DefaultSolrHighlighter . java ` to improve precision
updated display density values and refactored resource file saving to use try - with - resources for better resource management to improve resource handling and ensure
add a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modify ` ArrayCopySnippets `
log4j2 - 1349 avoid log4j - 1343 when log4j be not log4j - 134
added remoteScmSupported property and corresponding getter and setter methods in Configuration , RuntimeEnvironment , and Indexer classes to enable remote SCM system
added support for additional states in the MieleApplianceHandler to enhance state management by including additional states
replaced instances of StatsLogCompat with SysUiStatsLog in StatsLogCompatManager . java to utilize the new logging framework for better
changed the variable name from ` log ` to ` LOG ` for consistency to improve code readability and maintainability by using a uniform naming convention
added tests for ` ProjectGenerationEvent . Finished ` and ` ProjectGenerationEvent . Started ` in ` EventSerializationTest . java ` to ensure
[ web ] add support for ` ` prerelease ' ' feature
refactor JavaCompiler to improve code readability to enhance maintainability and facilitate future development
hbase - 16411 integrationtestswithregionreplicastesttimeboundedrequestswithregionreplicastesttimebounde
updated multiple Java files related to DumpHeap , TimSortStackSize2 , TestPollingInterval , and deadlockDetectionTest to improve code organization
added " -- gc - sections " and " nocopyreloc " options to the ldflags list in NdkCxxPlatform
updated fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added new test cases in SpringCloudCircuitBreakerFilterFactoryTests to improve URI construction
simonstewart : add miss license header to the test file
[ bug - 66533 ] fix readability of shared string table in xssf
added a method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to retrieve account
added a check to return a clip string if available text width is less than zero in SwingUtilities2 . java and modified Look and Feel
simplified the initialization of the ` flatteningIterator ` and modified the ` next ` and ` nextBlank ` logic in ` FileResource
replaced ` removeColorHtml ` method with ` removeColorHtml ` for title and body in ` NotificationUtils . java ` to ensure that
doc : generate sample code in the java microgenerator ( # 449 )
add a test method to reload and delete existing questions in the feedback edit question UI test to ensure that any existing questions are deleted before each test
updated return values from - 1 to 0 in HSSFSheet . java and modified row validation logic in BaseTestSheet . java to ensure
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ignoring potentially malicious intents
[ java ] do n ' t wait for session to be connect .
added hashCode ( ) method to AbstractParquetMapInspector and refactored equality checks in AbstractParquetMapInspector to improve object comparison and
added a condition to flush and release the buffer in HTTP3StreamConnection when remotely closed to ensure proper resource management and prevent potential memory leak
added AutoCloseable to the SplitReader interface to ensure proper resource management and prevent potential memory leaks
added a deepCopy ( ) method to GsonBuilder that copies existing GsonBuilder instances to ensure that the original GsonBuilder remains unchanged during modifications
sulong : improve performance by avoiding unnecessary null check
refactor file handling in RestClientRequestImpl to streamline asynchronous file operations to improve code readability and maintainability by eliminating unnecessary
updated dispatchStatusString method call in GrblController . java to improve code clarity and maintain consistency
updated ClassLoader usage in MockFactory and added a new SearchingClassLoader class to improve classloader management and enhance class loading efficiency
add unit test for refresh flag bug ( issue # 1749 )
added LEFT _ SEMI _ JOIN condition to the join type check in ConstantPropagateProcFactory . java to ensure proper handling of left -
replace the condition checks for response and request completion with inline method calls to improve code readability and
[ gr - 20533 ] use oop _ desc _ length _ offset instead of array _ length _ offset .
fix for http : / / issues . apache . org / activemq / browse / amq - 2868 - add default policy
updated multiple BadKdc , BadKdc1 , BadKdc2 , HttpNegotiateServer , and Test5653 files to standard
added a check to ensure the application context is not running before stopping it to prevent potential NullPointerExceptions when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout to enable the caller to utilize the returned GlyphLayout for better rendering
updated metrics handling in SpringmvcClient to utilize MetricsPublisher and improved error handling in CodeFirstSpringmvc to enhance performance
removed the ` SAFE _ ACCOUNT _ AGE _ DATE ` from the ` AccountAgeWitnessService ` class to simplify the code by
refactor variable declarations and formatting in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration to support resource URL handling in the web flow execution
added dexreturninliner to dexbody . transform ( jbody ) and dexreturninliner . transform ( j
updated the EnrichedRuleDTO class to extend from RuleResource and EnrichedRuleDTO to improve clarity and maintainability of the
updated directory retrieval logic in PathResource . java and modified test arguments in AliasCheckerSymlinkTest . java to ensure correct directory traversal and improve test
[ flink - 20536 ] [ table - api - java ] add support for hive dialect in executioncontext
refactor ` AndroidBinaryGraphEnhancer ` to use ` Supplier < ImmutableSet < String > ` instead of ` ImmutableSet < String > `
add a new test class ` astpackagedeclarationtest ` that verify the ` package ` annotation .
added a method to set the minimum cross compaction unseq file level in IoTDBDescriptor . java to allow dynamic configuration of the maximum number of
[ hotfix ] [ runtime ] move activeresourcemanager to active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` disabledTestCheckColumn _ WrongOrder ` to clarify
updated URI creation in ZipResource . java and added a new test class ZipResourceTest . java to ensure proper parsing of feature files with spaces
refactor code formatting and improve readability in ExpandableUploadListAdapter . java to enhance code maintainability and improve readability
updated RobolectricTestRunner to iterate through inherited test classes and enhance test coverage for merging parent and parent class configurations
replaced instances of ` Lists . newArrayList ` with ` Iterables . filter ` for filtering blocks and items to ensure only valid blocks and items are
changed method visibility from abstract to package - private in ` AbstractDataChangedListener ` and updated session handling in ` WebsocketCollector ` to enhance
updated JSONPojoConvertor to handle Enum types and updated color handling in tests to improve type safety and ensure correct color representation in JSON processing
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper ` to inform users that the ` -- view `
changed the data type of originalPayload from String to byte [ ] and refactored ByteBuffer handling in GWTRequestWrapper . java to improve memory
updated GyroControl . java to implement orientation correction functionality to enhance responsiveness to device orientation changes
change the size of the biome dictionary from 256 to 1.2 . 5 to optimize memory usage based on the number of biome gen
replaced ` println ( ) ` with ` print ( ) ` for function execution in ` GetInterfaceTest . java ` to standardize output
updated the initialization of the environment variable in FileCompilerConfig . java to ensure the correct environment is used during compilation
added a new file ByteToLongCollector . java to provide a structured way to handle byte - to - long data collection in the application
added a preload parameter to MMapDirectoryFactory to control the loading behavior of the map directory
added custom metrics for different component types in BukkitPlatform to enhance monitoring capabilities for various components in the application
updated QuickConnectREST . java file to improve functionality and enhance user experience
added aspect ratio and default card image initialization in CardPresenter . java to enhance visual consistency and user experience in the application
[ ds - 3952 ] add loginpageurl check to authentication count selector
updated cloning logic to handle empty arrays for long , double , and decimal values in VectorHashKeyWrapper . java to improve robustness by prevent
added tests for ` System . nanoTime ( ) ` and ` System . nanoTime ( ) ` methods in ` TimeChangeTest . java ` to
added trimming of leading and trailing whitespace in MultiPartFilter . java and improved multipart request handling in MultipartFilterTest . java to enhance
fix disappear livingexperiencedropevent in entitylivingbase . getexperiencedrops ( ) . close #
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use text resources instead of hardcoded strings to improve user experience by providing
[ beam - 11303 ] remove unsupportedoperatorstevisitor ( # 11347 )
added RdepsFunction and modified dependencies collection in GraphEnhancementQueryEnvironment to enhance dependency management for improved graph enhancements
refactor character handling logic in Character . java to improve code readability and maintainability
updated selection logic in ScaleDialog to handle both AxialStage and ParallelStage components to ensure correct selection behavior for the entire rocket component
refactor assertions in UpdateableResultTest to directly compare bytes instead of arrays to improve code readability and reduce unnecessary method calls
added time boundary extraction logic for hybrid tables in BaseBrokerRequestHandler to ensure accurate time boundary information is maintained for offline and real time queries
do n ' t add the socket to the poller if it ' s not need .
updated the URL pattern from " comix / comix / comix / picture / " to " comix / picture / " and modified
replaced ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standardize the wait
added phone profile checks in QuickstepLauncher . java to ensure proper layout handling for phone devices in non - landscape orientations
replace calls to ` getValue ( ) ` with ` QueryImpl . class ` in ` PartTreeJpaQueryIntegrationTests . java ` to
refactor ` readMatchingLines ` to use a new method ` readMatchingLines ` to improve code readability and handle potential privileged actions
removed dynamic check for the stream method in JpaQueryExecution . java to simplify the query execution process by eliminating unnecessary checks
fix npe in physicprocess if entity be null
added a test for the entry processor to clear the map when value attributes are indexed to ensure that the entry processor behaves correctly when value attributes
add and remove jitsi - meet - room support to sip . add support for join room .
updated color calculation in Utils . java and modified HTML message formatting in UtilsTest . java to ensure correct color assignment and improve HTML formatting for better
disable menu item by default ( # 4338 )
updated the path for the scratch path in Aapt2Link . java and added a recursive removal step in BuildTargets . java to improve path
None
g3d - 364 : clear selected geos only when need
added error handling for MarkedYAMLException in YsldValidator . java to improve error reporting for malformed CQL expressions
added the ` isCanceled ( ) ` method to multiple classes and updated the cancellation logic in ` Call ` and ` ExecutorCallAdapterFactory `
added a default implementation of the isAnnotationPresent method across multiple classes to provide a default implementation for annotation checks
added a default implementation of the removeAllWidgets method in UILayout . java to provide a placeholder for future implementation of the removeAllWidgets method
[ hotfix ] [ test ] add log4j eventappender for yarn test
update opensslcipher . getoutputsizeforfinal ( ) to calculate the maximum size for final input length .
added support for transcoding high - resolution content in PlaybackController to ensure proper handling of high - resolution content when using Fire TV St
[ beam - 8470 ] fix readsourcetranslatorbatch and readsourcetranslatormockbatch ( # 8470 )
replaced specific Java imports with a wildcard import and updated listener removal logic to improve code readability and maintainability by using a centralized listener
updated ` putString ` method to accept ` byte [ ] ` instead of ` boolean [ ] ` and modified width measurement logic in ` Relay
added support for BaseItemDragListener in FolderIcon . java to enhance drag functionality for improved user experience
added a new method ` createEmptyArtifact ` to ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` SignavioConnector
removed unnecessary comments from RabbitMQPublisherImpl . java to improve code readability and maintainability
simplified the condition for video link validation in VideoViewerActivity . java to improve code readability and maintainability by eliminating unnecessary
camel - 14850 : camel - sftp : use compactpath for file path to avoid data loss on window .
updated mock assertion in BaseWeatherConsumerTest to include a timeout of 20 seconds to improve test reliability by allowing more time for mock endpoints
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to clarify the purpose of
do n ' t block double plant that do n ' t have at least one block ( fixes # 183 )
changed focus behavior of the tree in TranscodingTab from focusable to requestFocusEnabled to improve user experience by preventing unintended focus
cloudstack - 7892 : throw exception when vm fail to start .
updated license acceptance logic in DB2TestSystem and modified conditional checks in DockerDatabaseWrapper to ensure compliance with licensing requirements and improve
changed the ` units ` field from final to non - final and added a setter method for ` unitGroup ` in ` DoubleModel ` ,
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and ZMW
added a method to set the number of samples in the fpp if it is greater than zero to ensure that the fpp has a valid
updated test cases in StepWithSimpleTaskJobParserTests to remove " job . step " prefix to simplify test cases by focusing only on
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to improve code clarity and enforce immutability of variables
updated the ggbabs ( ) method to include parentheses to ensure proper formatting of the ggbabs function for accurate representation
added multiple calls to ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java
[ drools - 1352 ] fix type coercion when use bigdecimal ( # 1353 )
added a comment to hide jdt used by jetty in WebAppContext . java to improve code clarity and reduce unnecessary dependencies
changed the return value of ` super . useAuthCache ( ) ` from ` super . useAuthCache ( ) ` to ` false `
replaced ` namespace ` assignment with ` capitalize ` for ` segments [ 0 ] ` to ensure consistent namespace formatting
( chore ) camel - direct : use directconsumernotavailableexception instead of directexchangeexception
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is null
corrected a typo in the progress bar step message in Loader . java to improve code readability and maintain consistency
replaced ` mVibrator . vibrate ` with ` runOnUiHelperThread ` in ` AllSetActivity . java
added a method to update the last remote stream ID in HTTP2Session . java to ensure the correct remote stream ID is tracked for improved
set text antialiasing to off in EditorHeader , EditorToolbar , and Preferences classes to improve text rendering quality by enabling antial
[ java ] : use correct term window size for publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 2649 )
updated ExoPlayer class to improve playback functionality to enhance performance and accuracy of player interactions
replaced the native method ` getRGBPixelImpl ` with a new method ` getRGBPixels ` in ` WRobotPeer . java
added a new method ` newPrintStream ` to create ` PrintStream ` with specified encoding to enhance flexibility by allowing custom output stream encoding
updated vibrate from 1 to 25 in TouchableMovementMethod . java to improve user experience by providing more vibration feedback
updated import statements in AppEngineSqlCloudSession . java and added necessary imports in FlybushDataClearer . java to improve code
reformatted constructor calls in WebSocketClient for consistency to improve code readability and maintainability
simonstewart : do n ' t open the i18n test if i18n . html be not available
[ gr - 16927 ] fix linkatbuildtime error in bytecode parser .
added context . restoreAuthSystemState ( ) to XmlWorkflowServiceIT . java to ensure proper restoration of authentication system state during tests
added a new ` LowercaseComparator ` class for sorting features in ` CoNLLUFeatures . java ` to ensure consistent ordering of features
refactor JavadocTool to streamline file handling and improve error messaging for missing source files to enhance code clarity and maintainability by reducing
danielwagnerhall : fix flaky test on firefox
removed exception handling for count errors in HighestKvno . java to streamline error handling by eliminating unnecessary exceptions
added a try - catch block around attribute retrieval in HDF5BatchReader . java to handle potential HdfException gracefully and log a warning if
[ beam - 8470 ] use writeresult instead of pdone for bigquery expand ( )
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` @ ApiImplicitParams ` annotation in ` ProcessGroupResource
added a new file TestMultiANewArray . java that implements a class for testing multi - dimensional array initialization to facilitate testing
cloudstack - 10298 : disable secondary storage vm for zone that do n ' t use it
refactor code to improve clarity and efficiency in handling block IDs to enhance code readability and maintainability by reducing redundancy
set the theme of the preview tab content in PreviewTabView to ensure the preview tab uses the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` and modified the idle timeout configuration in ` ConnectorTimeoutTest . java ` to ensure proper
add dcoref . dictionary and dcoref . dictionary property to make it easy to override
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new ` readTagName ( ) ` method to improve
updated parameter handling in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve clarity and correctness of parameter
change log level from warn to debug for child node identification to reduce log verbosity and improve performance during distributed operations
refactor color extraction logic to utilize a new method ` getHotseatPallete ( ) ` to improve code readability and
added default table entry and cell transformer methods to TypeRegistry to enable flexible configuration of data table entry and cell transformations
updated assertion in AtomicRemainder . java to ensure newAvailableShared is between initShared and initShared to enforce the integrity of shared state management
doc ( regen ) : update license year for generated file ( # 95 )
removed the projectGenerated field and its getter method from ProjectGenerator . java to simplify the code by eliminating unnecessary state management
updated conditional check for USER _ PROPERTY in DriverUtils . java to improve code readability and maintain consistency
added contact form and post contact form functionality to the application to enhance user interaction by providing direct access to contact information
guac - 961 : rename simpleuser . permissions to objectpermissionset . permissions .
updated the RELEASE _ VERSION from 20 to 21 to reflect the latest release version
[ drools - 7 ] fix compilation error in traitfactory . setmode ( )
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to enhance
replaced manual resource closing with IOUtils . closeSafely for perDocConsumers to improve resource management and prevent potential resource leaks
rename AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve clarity and consistency in naming conventions
added a click listener to the overflow button in ExpansionViewHelper . java to improve user interaction by allowing menu to be displayed on the overflow
updated failure messages to clarify " is null " and " is a non - null reference " to improve error messaging for better debugging and
ggb - 1186 fix line height of help button in input tree
move protobufferutilizetest to core / util package , so it can be use by other project .
update divider position and width in jabrefframe . java ( # 7508 )
update aux sub generator to handle crossref entry
[ geos - 6765 ] use metadatamap instead of map for geoserverfeaturesource
rename ` extractTypes ` to ` dataTables ` for clarity to improve code readability by using a more descriptive variable name
fix update of contact if there be an avatar change .
updated import statements in ShellCommand and ShellFactoryImpl to use the correct Command class to ensure compatibility with the latest SSHD library structure
added a test method to verify the cleanup of the audit log table after a specified position to ensure that the audit log table reflects the correct
changed the return type of the inject method from Class < T > to Object < T > to ensure type safety and avoid unchecked cast warnings
updated comment parsing logic in ACLFileParser to handle both empty and padded comments to improve comment parsing accuracy and ensure proper handling of padded
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to use ` DynamicDrillTable ` instead of ` Format
added functionality to manage ancestor dimension values in StarTreeImpl and TestStarTreeNodeImpl to improve the handling of ancestor dimension values during node splitting
added a condition to check if the device is unlocked before dumping views in TouchInteractionService . java and refactored closeOpenViews method
change variable name from ' widthStr ' to ' positionStr ' to improve code readability by using a more descriptive variable name
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop - bulk ] [ test ] add archunit test for the test code
updated package names from ` alibaba . integratedtest ` to ` shenyu . integrated . test ` for improved organization
cloudstack - 2803 : fix npe in vpcnetworkserviceimpl ( # 2808 )
updated method calls in RuntimeTypeAdapterFactoryFunctionalTest to retrieve shape type instead of removing it from JSON elements to ensure correct handling of shape
make sure undo info be not store when property be set
replaced direct access to ` System . getProperty ` with a privileged action in ` XRCompositeManager . java ` to enhance security by
replace assertEquals with await for stream size verification in StreamCloseTest . java to improve test reliability by allowing more time for streams to be
removed the ` doAfterFlush ( ) ` method in ` DocFieldProcessor ` and refactored ` TermVectorsConsumerPerField ` to
added deprecation support and improved handling of non - deprecated properties in ConfigurationMetadataGenerator and AbstractJpaProperties to enhance compatibility with deprecated features and
refactor capacity and mask variables in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and maintainability by using
updated the number of threads from 25 to 15 in HiveConf . java and refactored file path handling in Hive . java to improve performance
added trace logging for error handling in ParallelNioSender . java to improve debugging by providing more context on exceptions during message processing
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when the context is null
[ gr - 16921 ] fix native - image class loader leak in native - image - generator .
changed the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` to
refactor ` JaxrsIntegrationTest ` , ` JaxrsIntegrationTestBase ` , and ` JaxrsSpringIntegrationTest ` classes to
added support for sqlfeaturenotsupport exception and refactored querytimeout handling in HikariPool . java and PoolUtilities . java to
added DataProviders for various test cases in XslSubstringTest . java to enhance test coverage for various XSLT transformations
replaced eventWriter ' s close method with delegateEventWriter in StaxEventItemWriter and added a new close method in NoStartEnd
added support for sequence next value function in MariaDBDatabase and modified sequence handling in CreateSequenceGenerator to enhance compatibility with MariaDB and
updated error messages in multiple buffer classes for clarity and consistency to improve code readability and maintainability
replaced BrokerResponse with TableDataManagerProvider in multiple test files to utilize offline data for improved performance monitoring
updated the method to check for both " jsse . enableMFLExtension " and " jsse . enableMFLNExtension " to
replaced ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` and added a default constructor in ` ObjectHashSetIterator ` to simplify
updated charRemaining to return 23 instead of 22 for shortened URLs in Compose . java and TweetFragment . java to correct the character
added a new DATAPOINT _ TTL property and updated data point write buffer methods to include it to enable tracking of datapoints for better data
updated the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter to enhance flexibility by allowing users to
added a method to retrieve terrain at a cell coordinate in the TerrainGrid class to enable retrieval of terrain data based on cell coordinates
added default value printing in ` Pretty . java ` and created a new class ` T6665791 . java ` with Java compiler functionality
added error handling for missing quest encryption keys in ResourceLoader . java to improve robustness by logging an error message when the quest encryption
added a condition to check if the HTTP channel is not push support before returning it to ensure that push support is only enabled when the HTTP transport
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
remove signing of local witnesses in BlockUtil . java to streamline the process of signing private keys
modified return statement in FileSystemView . java to handle empty roots and added security checks in Win32ShellFolder2 . java to improve robustness
update columntext . java to use getmaxheights ( ) instead of getrowheight ( ) and rename copycontent ( ) to copy
replaced the ` undoTrash ` and ` undoArchive ` variables with a ` SparseArray ` for managing selected notes to improve the management of
updated UploadBackupData to manage feedback question and response IDs to improve code organization and maintainability by centralizing feedback question management logic
removed null check for data in getTransferData method to simplify error handling by eliminating unnecessary exceptions
no effective change - remove unused pstmtdelegate interface
replaced the use of ` Launcher . Padding ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidget
refactored MethodHandle initialization in NashornBeansLinker . java for improved code organization to enhance readability and maintainability by
refactor ClassGraph and ScanResult classes for improved performance to enhance efficiency and maintainability of the codebase
rename ` latch ` to ` goAwayLatch ` in ` IdleTimeoutTest . java ` to clarify the purpose of the latch
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve read
replaced ` ThreadLocal ` with ` null ` for the currentBook variable in multiple classes to improve memory management by eliminating unnecessary thread
modified the ` vote ` method to accept a type of ` Object ` instead of ` MethodInvocation ` and added a check to ensure that the
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added rowAffected parameter to postUpdateLog methods across multiple classes to enable tracking of the number of rows affected during updates
ggb - 1357 fix margin issue in suggestion
added default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration to standardize frame rate settings for improved performance
added ObjectReleaseTracker to track and release objects in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced DefaultWebSocketFrame with ChannelFutureListener for closing WebSocket frames to ensure proper handling of WebSocket closure events
refactor TestApplicationEventListener classes to include 1 and 2 test event listeners and implement OnStateMachineError as an interceptor to enhance event handling capabilities
refactor SettingsActivity to utilize a dedicated method for setting the list background color to improve code readability and maintainability by encapsulating background
updated import statements from Apache Commons StringUtils to OpenHAB StringUtils and added null check for line to ensure compatibility with the latest version of the
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count of a WeightedAvg
nutch - 2635 fix javadoc warning in replicationsink
replaced ` Set ` with ` Map ` for regular expressions in ` RegExpFactory . java ` to improve performance by caching RegExp instances instead of
added a reset method to the GameThread class to enable resetting of the game thread state
added a login method to DigestAuthenticator to ensure credentials match the realm before proceeding to enhance security by preventing unauthorized login attempts
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for better clarity and efficiency to improve code readability and maintainability
updated log messages in BasicConfigurator , LoggerContext , and ConfigurationAction classes to improve clarity of log messages and enhance debugging information
replaced ` countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog ` and ` HAService ` classes to simplify
added a check for Android O and modified the auto - complete functionality in PhotoViewerActivity to ensure compatibility with devices running Android O and enhance user
updated schema info level from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to improve schema information handling for improved performance
replaced BufferedOutputStream with BufferedOutputStream for XML writing in SaveTask . java to improve performance by reducing the number of write operations
refactor byte string handling in TestPayloads . java to utilize a fixed byte length UTF - 8 encoding to improve code reliability and
fix mc - 103516 ( # 4329 )
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 1849 ] fix serialization of accumulate ( ) in protobufinputmarshaller ( # 1849 )
reformatted case statements in NowSearchTerm . java and SearchTermBuilder . java to improve code readability and maintainability
pdfbox - 4071 : remove public access modifier , a suggest by valerybokov
added SpringExpressionLanguageValueResolver to handle HTTP method and HTTP headers in RemoteEndpointServiceAccessStrategy to enhance flexibility by allowing dynamic URL resolution
added a new method ` newResponseBuilder ` to ` SearchHandler ` for creating ` ResponseBuilder ` instances to improve code reusability and
added a notification for command start in AsyncBackgroundTaskManagerTest to ensure that the manager receives a startup notification for testing purposes
updated the ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` to enhance robustness by preventing potential
replaced instances of ` TokenFilterFactory ` with ` CharFilterFactory ` in ` LukeRequestHandler . java ` to improve handling of
replaced ` IllegalArgumentException ` with ` nullNotPermitted ` for null arguments in ` AbstractCategoryItemRenderer . java ` to improve code readability
added verbosity handling in ` JavacStep ` and modified ` ExecutionContext ` to accept ` Optional < Verbosity ` to improve flexibility
added schema handling for Oracle database type in DbSqlSession . java to ensure consistent schema formatting for oracle databases
log4j2 - 1349 add context class name to asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java that includes a main method to demonstrate the behavior of shrinking to one region
replace string splitting with Splitter for custom packages to improve readability and maintainability of the code
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester ` and added a new
updated the attachment handling logic in PushsaferMessageBuilder to include a localAttachment variable to improve clarity and ensure correct encoding for local attachments
add a command to show label stats in ModelExplorer and SequenceModelExplorer , and update output from provenanceHash to jsonResult in StripProvenance
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
updated the FORMATTER variable declaration across multiple test classes to ensure consistency in formatting across field types
updated the ` evaluate ` method to accept a ` Integer ` parameter and improved rounding behavior to enhance the functionality of the ` evaluate ` method
replaced manual configuration retrieval with ConfigParser . valueAsOrElse for injectionEnabled , useIncludedLibrary , and useIncludedLibrary to improve flexibility
changed class Test1 and Test2 from package - private to public to allow access to Test1 and Test2 classes from other packages
updated permission messages from " permission . no _ permission _ event " to " deny . no _ enter " in PlayerEventListener . java to improve
added session parameter to additional method calls in ConditionAndOr and ConditionInConstantSet , and modified the additional method signature in ConditionAndOr to
replaced usage of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added multiple random box and circle transformations and reset friction in Box2DCharacterControllerTest . java to enhance testing variability and ensure
added tests for ` threadbuffersize ` and ` memorysize ` in ` TestBadOptionValues . java ` to ensure correct handling of memory
updated error messages in ObjectAlignment and Options classes to improve clarity and accuracy of validation messages
added a method to extract the target package from APKs and updated related classes to support extraction of the target package from APKs to
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated acceptableThrowawayItems initialization to use a ArrayList instead of arrays to ensure proper initialization of the acceptableThrowawayItems list
replaced generic type casting with direct casting in multiple Java classes to improve type safety and reduce potential runtime errors
modified the ` isWorkingOnMessage ` method to prevent starving when a lot of fetcher threads are used to prevent starving when a lot
refactor Inflection class for improved clarity to enhance code readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to enhance locale management capabilities within the application
added import statement for Plugin in SummaryPrinter . java to enable plugin functionality in the SummaryPrinter class
added a break statement in DrawerActivity . java to prevent fall - through behavior in a switch case
updated import statements in MongoQueryCreator . java and modified debug log message in MongoQueryCreator . java to improve code clarity and enhance logging
added a new constant XWORK _ LOGGER _ FACTORY and a user - defined loggerFactory in LoggerFactory to allow configuration of the logger factory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to clarify the purpose of the tests related to P
updated @ ConditionalOnMissingBean annotations to include the name of the " livenessStateHealthIndicator " and " readinessStateHealthIndicator "
added a concurrent map to manage PStore instances in LocalPStoreProvider to improve thread safety when accessing local PStore instances
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced ` Provider ` with ` ServiceProvider ` in ` ServiceLoaderSpliterator ` and updated related methods to use ` ServiceProvider ` instead
truffle : remove unnecessary try - catch block in javaobjectmessageresolution . java
added toolchain creation checks to AbstractCell and ToolchainProvider classes , and updated DaemonLifecycleManagerTest to validate Android SDK changes to ensure correct
synchronize removecontext ( ) only if context be already add to the engine .
replaced ` indexOf ( ) ` with ` contains ( ) ` for better readability in ` AbstractCheckDescriptor . java ` to improve code
updated linker flag names from ` setLinkerFlags ` to ` setExportedLinkerFlags ` in ` PrebuiltCxxLibraryDescription .
updated the method name from ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler . java `
updated listener type checks in multiple classes to include generics to enhance type safety and improve code clarity
update hash calculation in AbstractBlockChain to include the block header ' s hash as a string to ensure that the correct block hash is used for
http : / / issues . apache . org / jira / browse / amq - 4895 - use getstorepathcommitlog
remove try - with - resources in MicrometerMetricManager . java to ensure proper resource management and avoid potential memory leaks
refactor message transfer and miss message count tracking in CompactionLog . java to improve clarity and accuracy of message status reporting
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a method to check if a system UI object exists and execute a keyboard event on the system UI to enhance the UI testing capabilities by ensuring
changed logger and sessionIds variables from static to instance variables in SessionRegistryImpl . java to enhance flexibility of logger and ensure immutability
added a check to return false when the cookieJar is empty in InMemoryCookieStore . java and implemented a test for removeAll on an empty
added toString ( ) method to BonsaiValue and improved null checks in BonsaiWorldStateUpdater to enhance object representation and enhance
changed the return type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , NoCacheTextRepository ,
added a @ NotYette annotation to the AlertsTest class to address the issue reported in bugzilla . mozilla . org / show
added exception handling for connection returning in SocketConnector . java to improve robustness by logging exceptions during connection termination
rename ` CMD _ ESCAPER ` and ` WindowsCreateProcessEscape ` to ` CREATE _ PROCESS _ ESCAPER ` and
added synchronization to the heartbeat executor service in DbTxnManager . java to ensure thread safety during heartbeat operations
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCan
added a method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to fix drag - selecting text out of the
added file path management for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper directory structure for mapreduce configurations during testing
refactor graphics configuration retrieval logic in Component . java to improve clarity and efficiency to enhance readability and maintainability of the code
tika - 3741 -- fix for tika - 3742 and tika - 3743
camel - 17850 : camel - core - optimize the pipeline to avoid oom with thanks to david
refactor PrintTagList to improve argument parsing logic and enhance output clarity to enhance user experience by providing clearer feedback and guidance on
updated SQL parser to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` for constructing the table name to ensure compatibility with
http : / / issues . apache . org / jira / browse / amq - 3833 - fix test failure
[ java ] wait for cluster ready in startfromtruncatedrecordinglogtest . java to complete .
updated the calculation of the arc variable in LineBorder . java to use a float instead of an int to improve precision in shape representation during rendering
updated null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure proper handling of empty gallery images and prevent
removed null constraint from the DEPLOYMENT _ ID field in the DatabaseChangeLogTableGenerator to ensure that the deployment ID is stored as a
pdfbox - 4071 : rename fdf to interactive , a suggest by valerybokov
removed the ` moreColumnOk ` parameter from several methods in ` AlterTableAddConstraint . java ` to simplify method signatures and improve code
added a ` provisionalEngines ` map and modified engine management in ` QuickfixjComponent ` to manage and start Quickfixj engines
added and modified methods for managing mixed content mode and display zoom controls in RoboWebSettings to enhance functionality and improve control over web content display
added corporea block , brick , slab , corporea spark , corporea _ block , corporea _
refactor ConnectionFactory methods for improved connection handling to enhance performance and reliability of database connections
added functionality to disable menu items in GpsMainActivity to enhance user experience by providing clear feedback when menu items are disabled or logged
updated the message for empty list messages in ExtendedListFragment . java to clarify the purpose of the empty list message for better user under
replaced ServiceRegistry settings with JUnit ' s @ Setting annotation in EntityTests . java to streamline configuration management and improve test clarity
updated MotorMountConfigurationPanel and MotorMountTableModel to adjust table auto - resizing behavior to improve UI responsiveness
updated LINE _ SEPARATOR from System . lineSeparator ( ) to System . getProperty ( " line . separator " ) to improve compatibility with different operating systems
added getter and setter methods for creator , subject , and creator properties in POIXMLProperties . java , and updated test cases in TestPO
removed redundant call to super . doStop ( ) in HandlerWrapper . java to streamline the code by eliminating unnecessary complexity
[ java ] check if cncfile be empty before try to check if it exists .
rename ` NonMarkedFoo ` and ` Marker ` interfaces and methods from ` Foo ` to ` FooCommand ` to improve clarity and
added support for checking and declassing JMod classes in ClassFileSourceImpl . java to enhance compatibility with Java ' s jmods library
changed the visibility of the ` canonicalizer ` field from ` PostEnterCanonicalizer ` to ` Nullable ` in ` TreeBackedElement `
replaced instances of tokenRequest with a new instance of PublicTokenRequest and added request parameters in the tokenRequest to enhance token request functionality by
updated array element reference from array length to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure the correct value range is used for
hbase - 13097 add sync ( ) method to zookeeperassign and zookeeperwatcher
added checks for the current EGL context in GlUtil . java to ensure proper error handling when the current context is not set
[ drools - 7 ] remove activation when ruleflowgroup be deactivate
added a return statement to the HystrixDashboardConfiguration class to ensure the method exits early under certain conditions
removed exception handling for PipeNotExistException in DropPipeProcedure . java and improved error message assertion in IoTDBPipeIT . java to simplify
clientqueuedisruptiontest : cleanup resource after test
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl # tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointTokenStream , and GeoPointPrefixTermsEnum classes
added a new file ` FakeBuildable . java ` to implement a mock implementation of ` Buildable ` to facilitate testing without
use itemstack . isempty ( ) instead of itemstack . isempty ( ) to avoid npe .
updated variable names from " rule path " to " rule timeseries " in TSParser . java and modified related bit assignments in SQLParserTest .
added a check for negative velocity values in the TubeCalc class to ensure that the calculation does not exceed defined limits
replace calls to getBucket ( ) with _ storage . create ( BlobId . of ) for better consistency to improve code readability and maintainability
removed multiple calls to blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure proper resource management and avoid
cherry - picking history view and column name in postgres - based ddl
updated the expected value of the clustering engine from 2 to 3 in CarrotClusteringEngineTest . java to increase the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark tests as ignored due to rewriting requirements
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new ` ParserStateObject
updated objectQuotingStrategy assignment logic in ChangeSet and DatabaseChangeLog classes to allow dynamic configuration of quoting strategy based on the change log properties
updated MetainfoParser to use fromXmlStream for file parsing to improve compatibility with XML streams for better data handling
deleted the CsrfControllerAdvice . java file to remove unused component to streamline the codebase
added quote path handling for endorsed directories in AntCompiler . java to ensure proper formatting of paths in endorsed arguments
added scrim animations and updated drawable alpha handling in Launcher and AllAppsBackgroundDrawable to enhance visual feedback during transitions and improve code maintainability
updated the return value of Long . parseLong from 2 to 1 in TypeInferenceUtils . java and modified test cases in TypeInferenceUtilsTest .
doc ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added handling for UNC paths in WindowsPathParser and improved error handling in PathOps to ensure correct parsing and validation of UNC paths
replaced ` InetSocketAddress ` with ` InetSocketAddress ` for creating ` MulticastSocket ` instances to simplify the socket creation process by eliminating unnecessary
updated closing of writer and query objects in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
changed the return statement to return a clone of nBits to ensure that the original nBits array is not modified externally
changed the visibility of the ` deriveCollectorName ` method from private to protected and added tests for custom collector names in ` TestProfilerCollector `
datamongo - 2043 - fix type hint when write simple type
added performance tracking for proxy factory creation in ProxyMaker to improve monitoring and performance analysis during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception details to connection failure messages in TCPConnection . java to improve error reporting by including the cause of connection issues
refactor widget reinflation logic in Launcher and Workspace classes to improve widget management and layout consistency in the launcher
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to facilitate testing of file
[ fix ] lwjglabstractdisplay do n ' t set cursor visibility to false .
update instructorStudentListPageUiTest to handle file not found exception
added functionality to check if tests are ignored due to environment variables in TestIgnorance . java to allow more flexible control over test
removed the pointer parameter from the fling method signature in ScrollPane . java to simplify the method signature for improved usability
datajpa - 585 - fixed potential nullpointerexception in querydsljparepository .
[ hotfix ] [ runtime ] add ` computememorysize ` method to ` memorymanager ` class
increase test timeout from 2000000ms to 20000 ms in PublishJMSTest . java to allow more time for tests to complete
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future development
updated previousIndex management in StreamingAggTemplate . java to use - 1 instead of currentIndex to improve clarity and correctness in handling incoming batches
throw graalerror if the plugin need to null check .
added a new method ` stream ` to the ` StreamSupplierComponent ` class with a default value of ` computeIntensityDefault ( ) ` to
updated logging messages in MediaMonitor . java to reflect changes in watchedFile status and added a retry mechanism to improve clarity of logged messages and
updated method names in InjectorProxy and StandardInjectorProxy to improve clarity and consistency to enhance code readability and maintainability by standardizing method
[ hotfix ] [ stream ] remove unused close ( ) call from flinkstreamingcreatefunction
added unit tests for SQL statements in ShowStatementTest . java and CreateTableTest . java to ensure proper parsing and deparsing of SQL statements
update return value from null to ImmutableList . of ( ) in AppleTest . java to ensure the method returns an empty list instead of null
updated test cases in NamedSetTest . java to include " Quality Distribution , Inc . " to improve clarity on the purpose of the
updated websocket connection handling and connection state management in DeconzBridgeHandler . java and WebSocketConnection . java to improve connection state management and enhance
replaced ` null ` attributes with ` removeAttribute ` calls in ` AbstractProcessingFilter ` to ensure proper handling of security attributes in session management
hbase - 26458 testregionreplicaceresponse should retry table creation if table creation fails ( chunhui )
set PmsConfiguration to false in FormatRecognitionTest . java to ensure consistent PMS configuration during tests
cloudstack - 10298 : create osa data disk template for ovm vm ( # 2309 )
updated import statements and added JUnit4 test annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with the latest testing framework
added multiple @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , NoOpLockingStrategy , and NoOpLockingStrategy
updated the column name from metricVal to metricVal1 in AppendOnlySchemaIT . java to ensure consistency in data type usage across the database
added a check to ensure document count matches between deletedDocs and segment doc count to prevent corruption due to mismatched document counts during indexing
add a method to get the name of the sip communicator jain sip logger and add a method to log trace .
updated FilamentFactory to include a minimum length requirement for staves w / no starting barline to ensure compatibility with staves w /
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` to
added a test method to verify behavior of the CsrfFilter with case - sensitive method matching to ensure proper handling of access denial scenarios
replaced static field references with instance variables in HotSpotObjectConstantImpl . java to improve code readability and maintainability by reducing
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in spell - checking functionality
replaced ` Instant . now ( ) ` with ` Instant . withWatermark ( now ) ` in ` FileIO . java ` to improve
hhh - 13850 - simplify copy of ctedefinition in smqctestatement
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable support for ResultSetMetaData functionality in the query compilation process
updated library command to include the project ' s root path to ensure correct file paths are utilized for library output
updated slider angle range from - 180 to - Math . PI in RailButtonConfig . java to improve slider functionality for better user experience
updated the encloser position and refactored the save operation in the Saves class to improve the visual appearance and error handling during
added expressionLanguageSupported ( true ) method to KerberosProperties . java to enable expression language support for Kerberos configuration
removed conditional checks for remoteMountPointComponent before setting translation and rotation in ThirdPersonRemoteClientSystem . java to simplify code by elimin
updated ` setupViews ` to include ` ScrimView ` and modified ` setupViews ` to include ` ScrimView ` to
[ flink - 21286 ] [ state - backend ] add option to disable periodic materialization
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 353 : add value attribute
added a test for chunking with head in TestHttpServlet . java to ensure proper handling and retrieval of headers from the server
add checkrouteranswer . isbumped ( ) to check router answer
added Content - Type header to SwitchToPostInterceptor and updated its usage in SearchRequestUnitTest to ensure proper handling of form - encoded requests
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet for ignoring fetch size warnings to improve debugging by providing a warning message when setting fetch size
replaced the instantiation of AndroidNet with a new instance of AndroidNet in AndroidDaydream . java to ensure compatibility with the latest Android
removed unnecessary parameters from numRowsConsumed and segmentMaxRowCount in LLRealtimeSegmentDataManager to simplify the code and improve readability
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 17400 remove unused prefixtree codec from tablemapreduceutil
added a boolean flag ` inflationFailed ` and modified the ` onBackPressed ` method in ` DesignerActivity . java ` to handle
refactor PushbackInputStream class for improved readability to enhance maintainability and facilitate future updates
make loweringphase abstract so that it do n ' t need to be implement .
updated error message from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` in ` ErrorMessageAdapter .
updated parsing methods to support newline characters in Makefiles . java and added new constants in MakefilesTest . java to enhance compatibility across different operating
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( ) ` in ` ReadTask . java
updated refresh flag handling in SimpleBatchNode to include RF _ TRANSFORM to ensure proper refresh behavior when transformation is applied
[ gr - 38686 ] fix unsafe . isguarded safepoint check for non - c method .
fix ( lwjgl ) : close framebuffer when window size change
updated the translation logic for task parallaxing in LauncherAppTransitionManagerImpl . java to improve the responsiveness of the task
renamed ` NodeLiteralNode ` and ` NullLiteralNode ` to ` NullLiteralNode ` and updated related methods to handle null values more
added methods to set file and output lengths in CompoundFileWriter and added assertions in FSDirectory and IndexOutput to improve file handling and ensure accurate
updated manifest handling in AndroidNdkScriptGenerator and modified GdxTest instantiation in AntScriptGenerator and LwjglDebugStarter to
camel - 18131 - camel - aws2 - s3 : use source bucket instead of copy source
added support for " * " role in authorization checks and improved test rules in RuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to enhance
refactor ZookeeperClientServerRegisterRepository to improve handling of registration and removal events to enhance code clarity and ensure robustness in URI registration
replaced ` makeDeepMock ` and ` recordDeepStubMock ` methods with ` deepStub ` and ` deepStubAnswer ` methods to
updated method calls to handle empty contract values to ensure a default byte array is returned when the call value is empty
change log message to use placeholder instead of string concatenation to improve readability of debug output
modified the mapPBEAlgorithmToOID method to throw an exception and updated the PBE _ ALGO constant to use " PBEWith
tmi - tiff : do n ' t throw an exception if the offset be too large .
added validation for job parameters in CommandLineJobRunner to ensure that invalid parameters do not cause runtime errors
updated the expected string content from " foo \ r \ n " to " foo " in SmtpTests and MailTests to ensure consistency in
simplified case statements in ExtendedConnectionDataSourceProxy . java to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for thread - safe incrementing of lastSequenceId to improve performance by reducing synchronization
added a new file ` Test . java ` containing a static method ` sum ( ) ` to calculate a summation of a given integer
updated multiple fields in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to be protected to allow subclasses to access these fields for
added a new file ` Solution . java ` to implement a programming algorithm to check if a given array contains a specified key in a given
use concurrenthashmap instead of map to avoid race condition
refactor taskbar recreation logic to improve clarity and maintainability to enhance readability and maintainability of the code
refactor SyncFutureCache class to improve code readability and maintainability
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and introduced a new
[ java ] improve string literal check in uselessstringofrule . java
added a test case for calculating pressure drag force on an ellipsoid nose cone in SymmetricComponentCalcTest . java to ensure accurate drag coefficient calculations for different Mach numbers in the rocket ' s flight
add target max type shard size to hollowproducer ( # 263 )
added new test cases for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the compilation process
updated assertions in TestSemanticAnalysis . java and refactored database parameter handling in DDLTask . java to improve code clarity and ensure
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to execute a clear database change log table
added version handling and improved path validation in RestClient , CallPath , and CallPathTest classes to enhance robustness and maintainability of
phoenix - 549 add check to ensure phoenixjdbcdriver have be close
replaced ` return null ` with ` throw new UnsupportedOperationException ( ) ` in multiple Java files to improve error handling by indicating unsupported operations
added a new test class ` FolderPickerActivityIT ` and modified ` ConflictsResolveActivityIT ` to extend ` AbstractIT ` and added
[ gr - 38686 ] fix deoptimization phase when devmode be not enable .
added a check to return the original string if the length is less than 2 and implemented a test for removing leading and ending quotes in StringHelperTest
refactor type handling in JpaQueryCreator and add support for NOT _ CONTAINING in ParameterMetadataProvider to improve code clarity and
do n ' t retry push branch if there be too long authentication duration .
added dispatching of P25Message instances in the P25MessageFramer class to enhance message processing capabilities for improved performance
added null checks for the handler in WebSocketImpl and implemented a new test for clearing client handlers on end to ensure proper handling of socket closure and
[ ds - 3990 ] add support for indexableclaimedtask in discoveryit
refactor widget padding initialization to use a customizable value from Launcher . Padding to improve consistency and maintainability of widget padding across different
added a method to hide all apps in the Taskbar UIController and updated the closeOverlay method in BaseActivityInterface to improve user experience by
removed synchronization from the launch method in CrawlJob . java to improve performance by eliminating unnecessary thread sleep
updated coordinate calculations for canvas coordinates in JavaSEPort . java to ensure accurate positioning based on the current canvas ' s zoom level
replaced notificationManager . notify with startForeground for upload progress notifications to improve foreground management during upload process
added a new test method ` testStaticFinal ` in ` ExcessivePublicCountTest . java ` to verify the behavior of static final
hbase - 13097 set the number of retries to 3 in testthbaseservicehandler . testthbaseservicehandler . testth
change log level from info to debug for halting offset to reduce log verbosity and improve performance
added exception handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve error handling and provide more detailed
added a new API endpoint to retrieve market summaries and tickers from Bittrex to enable retrieval and handling of market data in the Bittre
refactor enumConstants retrieval and improve type safety in EntityEntry . java to enhance type safety and avoid unchecked cast warnings
refactor websocket session registration to use endpoint instance instead of class to improve flexibility in handling different endpoint types
updated character array in FileUtils . java to include additional Unicode characters to improve character representation for better user experience
added stylesheet management methods and updated resource handling in ResourceService , ResourceHandler , ResourceHandler , DefaultServlet , ResourceHandler , and DefaultServlet to
added a call to clear the index in TestFiltering . java to ensure the index is reset before processing new data
updated the method call from ` ObjectParameterStrategy ` to ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to ensure the
updated the condition from ` PostgresDatabase ` to ` CockroachDatabase ` in ` CreateSequenceGenerator . java ` to ensure compatibility
removed the condition from the name check in ObjectStreamClass . java to simplify the condition for better readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` to improve error handling by providing a more
modified document retrieval logic in BinaryResponseWriter to handle pseudo fields correctly to improve document handling for pseudo fields and ensure correct document creation
added handling for PING and PONG states in WebSocketImplBase . java and implemented a test for WebSocket pause functionality in WebSocketTest . java
updated the NON _ IDENT _ ESCAPES constant from " \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
updated DnsResolverProvider to use a wildcard import and modified server selection tests to include a cache option to improve code readability and flexibility in
added a conditional check for MessagingTracing class in TraceMessagingAutoConfiguration to ensure tracing functionality only occurs when MessagingTracing is available
mondrian : fix mondrian _ dialect . getquoteidentifierstring ( ) when use db2
updated import statements in multiple Java files to align with the latest version of the Roboe library to ensure compatibility with the latest version of the
added a condition to verify the closing tag status in XMLLightweightParser to ensure proper handling of XML closing tags in the parser
removed the visibility setting from TouchCharInput . java to streamline the user interface by eliminating unnecessary elements
added null check for the current user before comparing IDs to avoid potential NullPointerException when the current user is null
updated JSObjectLinker to conditionally set the slot based on the index to ensure proper handling of JSObject member assignment based on the index
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to use ` DefaultRandomStringGenerator ` and
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added @ Deprecated annotations to multiple classes to indicate that these classes will be removed in future versions
deleted the JoglDebugAdaptor . java file and updated its usage in GuiceStartup . java to streamline code by eliminating
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes and implemented ` extractLambda ` in ` Trace
added PendingIntent initialization in FileDownloader and FileUploader classes to ensure the notification content intent reflects the current application state
refactor the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to introduce a ` set ( ) ` method to
refactor DateTimeFormatter class for improved date formatting to enhance code readability and maintainability
removed unnecessary try - catch block for ClassNotFoundException in DnD . Autoscroll . initialDelay and DnD . Autosc
added null and empty checks for administrator credentials in KerberosOperationHandler . java to ensure that valid credentials are provided to prevent runtime errors
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and modified width calculation in BaseWidgetSheet to
fix ( opengl ) : do n ' t call endrender ( )
refactor Hashing class for improved performance to enhance efficiency of hash calculations
updated the accept method to accept a folder name instead of a file to improve file validation logic for better accuracy in file handling
updated UserInfoActivity to use string resources for user info icons instead of drawable resources to improve maintainability and localization support for user information presentation
added a null check for the type variable in J . java to ensure proper initialization and prevent potential null pointer exceptions
updated activity start delay from 500ms to 800ms to improve user experience by allowing more time for activity launches
added a static WEBAPP _ HOME constant and updated path handling in SolrJettyWebappTest to improve maintainability by centralizing web application
removed redundant calculations for diameter and selectedMotorSet in ThrustCurveMotorSelectionPanel . java to streamline code by elimin
added import for BufferUtil and called clearToFill in ByteBufferPool . java to ensure that the buffer is cleared before filling new data
update notification rule api to use originator id instead of id
updated LDAP group property names from " authorization . ldap " to " authentication . ldap " to align with the new authentication module naming conventions
added deleteExchange and queueDelete methods in DurableOnTransient . java to ensure proper cleanup of resources when the exchange is removed
[ hotfix ] [ test ] fix flaky test bulkslotproviderimpltest
refactor connection handling in ServerInfoService to use a listener for connection success and failure to improve error handling and provide clearer error messages during
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class for improved functionality to enhance performance and maintainability of the code
make sulonglibrary . execute ( member ) robust against illegalstateexception .
updated schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and updates
replaced deprecated method names from ` HelperHelper ` to ` Args ` in ` ConfigMappedNameResolverFactory ` and ` DiscoveryClientNameResolver
added a check for non - empty annotations before converting them to positions in JavacParser . java to ensure correct position handling when annotations are
added a new package declaration for " com . sun . naming . internal . " in CheckPackageAccess . java to ensure compatibility with the internal
changed the default value of the ' strict ' variable from false to true in StaxEventItemReader . java to enable stricting by default
updated the ` readPartition ` method to include an ` isExhausted ` parameter and added a new test for over - nexting to
refactor ActionResetingPool class to improve code structure to enhance maintainability and readability of the code
modified the return statement to check if the light is in XY mode before converting it toHSBType to improve code clarity and prevent potential
refactor folder creation logic in CellLayout . java to improve handling of drag - and - drop icons to enhance folder creation flexibility and improve
added loading dialog functionality to FileOperationsHelper and OCFileListFragment to enhance user experience by providing feedback during file operations
added a null check for the uigestureFile before loading logs to avoid potential NullPointerExceptions when uigestureFile is not available
updated ` FieldNamingPolicyTest . java ` to use ` Locale . getDefault ( ) ` for string comparisons to ensure consistent behavior across different locales
added listeners to the result object in XmlSuite . java to ensure that listeners are properly registered for XML processing
added a new property ` loadWithNewGlobal ` and modified the ` loadWithNewGlobal ` method in ` Global ` and ` Context `
added methods ` fromJsonString ` and ` toJsonString ` to ` StarTreeIndexSpec ` for JSON serialization of ` StarTreeIndex
added ObjectPostProcessorConfiguration import and modified multiple configuration classes in HttpSecurity , OAuth2LoginConfigurer , and Saml2LoginConfigurer
replaced occurrences of " \ " with ' \ ' across multiple files to ensure consistency in character handling across the codebase
[ drools - 1550 ] fix npe when use in ( parent ) with null fire ( # 1551 )
added import and commit method to TestDistributedSearch . java to improve field cache management and prevent potential issues with multiple segments
add test case for multi - instance message boundary
[ jimple ] add support for resolve static method in pointer analysis .
http : / / issues . apache . org / activemq / browse / amq - 2638 - add support for hash bucket
added constants for slot ID and modified conditional logic for determining module type based on slot ID to enhance code readability and maintainability by using d
added alignment parameter to the add method in Layout . java and modified GdxRenderer . java to implement mouse button functionality to enhance flexibility in
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added specific class checks for SourceDataLine , TargetDataLine , and Synthesizer classes in JDK13Services . java to ensure only relevant
added a check to prevent duplicate entries in the keywordToReference map to improve efficiency by avoiding redundant updates
camel - 7994 : fixed multicastprocessor to correctly calculate the number of exchange pair ( # 7995 )
removed methods from SegGraph , SegToken , and WordDictionary classes to streamline code by eliminating unused methods
escape special character for telegraf ( fixes # 644 )
add udp port to member serialization so that it can be use by other client .
rename ` OperatorMulticast ` to ` OperationMulticast ` across multiple files to clarify the purpose of the class and improve code read
increased the send timeout from 1 to 100 in EventBusTracerTestBase . java to improve test reliability by allowing more time for
added a try - finally block to ensure resources are properly released to prevent potential resource leaks and improve error handling
added a synchronized method to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper cleanup of cached event listeners when the session factory is destroyed
simonstewart : refactored test to use jwt token from local storage .
fix ( deps ) : upgrade pytorch to late pytorch api
added task stack listener to clear the force invisible flag during pinning of the task stack animation to ensure the UI reflects the current state of
log4j2 - 1349 do n ' t fail the optimization of the checkdatepattern method , a suggest by valeryb
camel - 14263 : camel - cxf - do n ' t need to set property on the cxf endpoint
refactor animation end logic into a separate method ` endPendingAnimation ` to improve code readability and reduce duplication
refactor play time setting logic in LauncherAnimationRunner to improve clarity and error handling to enhance debugging capabilities by logging duration and play time
added a conditional check for BailoutOnException in C1XCompilation . java and introduced a new option BailoutOnException in
changed default signup and passwd variables from " / forgot _ password " to null in Links . java and updated assertions in IdentityZoneConfiguration
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations
rename ` onlyFormat ` to ` format ` and introduce a new method ` getOnlyFormat ( ) ` to improve clarity and maintain
added NoDataContainer support in GeoTiffReader and associated tests to ensure that the image has a valid data container for processing
sulong : fix npe in functionstartnode when source section be null .
replaced ` out . toString ( ) ` with ` out . toByteArray ( ) ` in ` JdbcExecutionContextDao . java ` and removed
replaced ` blockUntilConnected ( ) ` with a ` CountDownLatch ` for managing connection states to improve connection state management and ensure proper
refactor ArrayTypeHandler to handle null values for better null safety to improve robustness by preventing potential NullPointerExceptions when accessing array elements
replaced the RegexpTunnel class with reflection - based prefix retrieval in JakartaRegexpCapabilities . java to improve flexibility and maintainability
updated application selection in Config . java to use Application class to ensure correct application type is used when picking application configuration
[ drools - 1086 ] avoid npe when delete a rule from a mutable global .
added validation methods for asset name , URL , and description in AssetIssueActuator . java and TransactionUtil . java to ensure that asset names
do n ' t add parent algorithm for textfield in copypaste
updated action descriptions in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSUpnpDiscoveryParticipant
replaced setting of seed , active , and trust nodes with added nodes in TronNetService . java to ensure all relevant nodes are included
updated assertions in BaseTokenStreamTestCase . java to include more context and added failure handling to improve test clarity and manage thread failures effectively
log4j2 - 1349 add interval and modulate option to timebasedtriggeringpolicy
refactor ` performItemClick ` and ` findItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to
pdfbox - 2852 : avoid classcastexception , a suggest by valerybokov
[ gr - 13076 ] add debug information to pegraphdecoder . aftermethodscope ( ) .
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and add unit tests for security contexts to improve code clarity and
updated imports and added a test for changing the service name in ` HttpZipkinSpanReporterTest . java ` to ensure that the service name
added logging for excluded classes and improved spool mode handling in the JavaInMemoryFileManager and JavacToJarStepFactory to
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
test fix : increase timeout in try -
updated ConfluentSchemaRegistryDeserializerProvider to include cache capacity and schemaRegistryConfigs as parameters to enhance flexibility in schema registry deserialization by allowing
rename ` remind ` to ` checkatstartup ` in ` UpdateInfoDialog . java ` to improve clarity of the checkbox ' s
added methods for checking key strength , valueStrength , and expirationAfterAccess , and maximumSize in NodeGenerator . java to enhance type safety and
hhh - 14950 - fix checkstyle violation in cascadingactions
added static final PROTO _ PROPERTY _ NAME and SETPROTO and SETPROTO checks in ScriptObject . java to improve encapsulation and maintainability
updated the default read mode from " heap " to " mmap " and refactored the segment loading process to improve memory management and enhance logging
added import for ByteArrayTemplate in ArrayTemplateBuilder . java to enable handling of byte data types in ArrayTemplateBuilder
added Hipchat support to SamlServiceProviderProperties and created a new configuration class for SAML SP integration to enable integration with Hipchat for
replaced List with Set for commandRegistryUrls and updated resource handling to improve performance by using a set for unique command registry URLs
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of log messages and enhance debugging
modified the login method in SvnRepositoryConnector and added a login flag in SftpRepositoryConnector to enable authentication for FTP operations
camel - 16400 : camel - activemq should lazy create transaction manager when use transactional mode
vmwareresource : fix checkstyle issue in vmwareresource . java ( # 7561 )
refactor Timers class to improve performance and readability to enhance performance and maintainability of the code
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated string constants for various token types from UAX29URLEmailTokenizer to clean up the code and encourage the use of
removed Map < Object , Object > from the ScriptObject class and updated related assertions to enhance type safety and improve clarity in test assertions
refactor EventBusMetrics class for improved event handling to enhance performance and maintainability of event bus metrics
[ ds - 3952 ] remove redundant code for getpreferredlocale ( eperson )
replaced ` @ PostConstruct ` with ` @ InitializingBean ` in ` JaversTransactionalDecorator ` to enable initialization of the schema
removed null check for pgTypeName before storing it in _ pgNameToSQLType to simplify code by eliminating unnecessary null checks
added server setup for multiple handlers in ScopedHandlerTest . java to ensure proper setup of server instances for testing
improve logging of calltimeoutexception to aid in debug
updated the condition to check if username and password are empty in RestLoginProcessingFilter . java to improve clarity by using ` StringUtils . isEmpty
updated permission check from ` Objects . equals ( permissionNode ) ` to ` equals ( " * " ) ` in ` CommandMap . java
renamed the ` encoding ` variable to ` sourceCharset ` and updated its usage in ` AbstractCompiler ` and ` ICompiler ` classes to
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and modified related methods to
updated simulation handling in GeneralOptimizationDialog . java to use final variables and improved exception messaging to enhance code clarity and ensure proper simulation
camel - 16400 : camel - jbang - add option to reload camel context when it ' s enable .
updated log4j logger settings from log4j to log4j for consistency and clarity to improve logging performance and maintainability by using
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a conditional check before invoking the reset method in RequestBody . java and created a test for non - marked input stream content type in Request
added a condition to check if embedded settings are enabled in EmbeddedNeo4jServer . java and modified filtering logic in DefaultBeanContext .
update movementdebugcommands to use default health instead of hardcoded value
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter to enhance the random function to accommodate varying weights
updated GsonParser and MetricsResourceTest to improve cache string handling and timestamp validation to enhance code clarity and ensure that timestamp values are valid for
added comments to the " gcmort " and " gcmdir " parameters in ApacheHttpClientMediaWikiApi . java to clarify
rename ` checkTransactionSynchStatus ( ) ` and ` checkTransactionSynchStatus ( ) ` to ` pulseTransactionCoordinator ( ) `
replaced ReentrantLock with a new PipeTaskCoordinatorLock and introduced a new class PipeTaskCoordinatorLock for locking to improve thread safety
added a conditional check for preinstrumented jars in DefaultSdkProvider . java based on system property ` robolectric . usePreinstrument
simplified conditional check in ExecDriver . java to improve code readability and maintainability
added validation for default value and required fields in IndexSchema to ensure that dynamic fields do not have default or required values and provide clear error messages
do n ' t retry repair if random read repair fails
replaced ` ImmutableSortedSet ` with ` Iterables ` for handling include directories in ` PrebuiltCxxLibrary . java ` and added a
added checks for sensitive key identifiers and serial numbers in AdaptableX509CertSelector . java and updated related logic in ForwardBuilder . java to
use abstractappender . parsestring instead of string . isempty in nosqlappender .
added a deprecated annotation to GuiScreenEvent . java to mark the class as outdated and discourage its use in future development
added methods to manage category addition and removal in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality in the search adapter
# 1649 - enh : add servercachetype parameter to cache factory method
updated properties for child components in RocketComponent to set their mass and CGOverriddenBy and CDOverriddenBy to null to
changed ` doCompile ` method to ` post ` in ` JavaCompilerService ` and added ` destroy ` method in ` SynchronizedTask `
replaced the ` doCompute ` method with a ` Supplier ` implementation in ` MultiThreadedBuildRuleResolver ` to simplify task execution and
refactor WanReplicationServiceImpl to improve thread safety and executor management to enhance thread safety and prevent potential race conditions during shutdown
added null checks for ` tPartition ` , ` table ` , and ` dtTable ` in ` Partition ` , and ` DDLSem
refactor code to use lambda expressions for cleaner syntax and improved readability to enhance code clarity and reduce boilerplate
added unit tests for file deletion functionality in Retrofit . io . filesTest . java and implemented a delete method in Files . java to
removed exception handling for closing socket connections in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replace currentWorkingDirectoryList management with a method to add a working directory to improve clarity and maintainability of the code
added null check for ` cn ` in ` ItemInfo . java ` and set ` mInsets . set ` in ` Workspace . java
changed the visibility of the ` GeneratedEntityDecorator ` constant from public to private to enhance encapsulation and restrict access to the constant
updated Java type settings for CSV and JSON in SimplePostTool . java to ensure compatibility with the latest JSON file format
apps - 2276 add unit test for max and min command
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated the condition to check for both null and non - null types in Linux . java to ensure proper handling of cases when type is null or
added teardown methods to cleanup web application resources in multiple test classes to ensure proper resource management and prevent memory leaks
added search functionality to the RemoteBrowseHandler to enhance user experience by allowing dynamic search results based on query parameters
set the neutralButton visibility to INVISIBLE in SetupEncryptionDialogFragment . java to improve user interface by making the neutral button visible
[ ds - 3952 ] add support for include _ archive and include _ withdrawn option to item count
updated SQL syntax in DDLTask . java to use " ` ` as ' ' instead of " ` as ' ' to improve SQL syntax consistency
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and logging for OAuth2 exceptions
updated multiple Java classes related to series painting functionality to enhance functionality and maintain consistency across the codebase
updated domain and subdomain handling in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to improve clarity and correctness of domain and subdomain
updated tooltip delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltip text for variable substitution in SQLConsole . java to
added support for compatibility with Surefire 2.22 . 0 and JUnit 5 in ActionProviderImpl . java to ensure compatibility with the
replaced HumanReadableException with RuntimeException for external process communication errors to improve error handling by providing a more specific exception type
[ hotfix ] [ doc ] add @ experimental annotation to flink - core
[ hotfix ] [ javadocs ] fix typo in streamcepstrumsource
added a check to prevent index out - of - bounds errors in List . java to improve stability by preventing index out - of -
replace ` OrExpression ` with ` Parenthesis ` in ` CloneHelperTest . java ` to ensure compatibility with the new Parenthesis
added a confirmation parameter to the DebugPaste class in DebugPaste . java to allow users to specify that the debug paste command should be
replaced ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to enhance error handling by providing clearer
simonstewart : do n ' t focus mathquillggb when create a new element
replaced instances of ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and updated references in ` GoBinaryDescription . java ` to enhance
refactor environment retrieval logic in Jooby . java to improve clarity and maintainability to enhance code readability and ensure proper resource
replaced ` RetryListenerSupport ` with ` RetryListener ` across multiple files to standardize retry listener implementation across the codebase
add decimal reporting for whole count ( fixes # 498 )
refactor Contribution class to use final fields for email and author to enhance immutability and thread safety of the email and author variables
replaced manual loop with a while loop for appending strings to improve code readability and maintainability
modified the handling of the elements variable in Subject . java to ensure compatibility with non - LinkedList instances to improve type safety and prevent potential runtime errors
updated exception messages in StaxEventItemReader to include the resource URL and modified exception handling in StaxEventItemReaderTests to provide clear
improve multi render target test , add a simpleupdate method to testmultirendertarget
updated client retrieval logic to handle null currentProfile gracefully to improve robustness by avoiding potential NullPointerExceptions when currentProfile is null
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure namespace declarations are added to
added DSAParameterSpec to KeyStoreManager to manage DSA parameters to enhance security by using dSA parameters for key store operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set engine version to activiti - 5 in bpmndeployer and add test case
updated velocityEngine property names and properties in SpecificCompiler . java for consistency and clarity to improve code readability and align with updated naming con
[ gr - 28654 ] fix race condition in vmthreads . iscurrentthread
added null check for the map before adding values in GenericUDFMapValues . java and created a new TestGenericUDFMapValues .
updated the variable name from " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose
added new configuration properties ` oilWellGenerationRate ` and ` enableOilSpouts ` to ` BCEnergyConfig ` and
added a check for the existence of " . clean - me " file in ImportContext . java and updated directory checks in JobQueue . java
log4j2 - 1343 memoryrealm . readxml should use the system property ` ` memoryrealm . xml ' '
removed unnecessary import statements in CRLDistributionPointRevocationCheckerTests . java to improve code clarity and reduce unnecessary dependencies
updated EXTID constants in ZipConstants64 . java and added import for ZipConstants64 . java in ZipEntry . java to support additional ZIP extension
refactor the ` newFileSystem ` method to improve file path validation and error handling to enhance robustness by ensuring only valid files are opened as
updated the layout layout for the condition panel in IfControllerPanel . java to improve the visual presentation of the condition panel
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper connection handling during tests
added JSON serialization annotations for various fields in ServiceOsSpecific . java to enable proper JSON serialization and deserialization of object properties
delete the db entry only if the file deletion be successful
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
corrected the calculation of the buffer length in AbstractAjpProcessor . java to ensure accurate processing of response messages by correctly accounting for the
do n ' t stop the admin console server if it ' s already stop .
refactor WebSocketImplBase to improve handling of binary and text messages to enhance clarity and maintainability of the WebSocket connection management
added configuration properties for device ID transformation method , enable ID table , and log file in IoTDBDescriptor . java to enhance configuration flexibility for
updated the number of documents per type from 2000 to 100 and modified the expected values in ExitableDirectoryReaderTest . java and added a new
updated the condition to check if the access error is valid from " http : / / timestamp . comodoca . com / rfc3
refactor script code creation to use ` ScriptBuilder . createP2PKHOutputScript ` instead of ` ScriptBuilder . createP2
updated the expression in IndexSchema from " / schema / types / fieldtype " to " / schema / types / fieldType " to support additional
added null and instance checks for valueCompleter in Completers . java and created OptionCompleterTest . java to ensure proper handling of
fix checkstyle issue in s3utils . getobjects ( )
changed the type of ` sourcePeerId ` and ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to improve
added file upload logic in FtpHelper . java and refactored file handling in FtpHelper . java to improve file upload process and
updated the reply button ' s alpha value in TweetFragment . java to improve the visual appearance of the reply button for better user experience
updated expected timestamp formatting in AccessLogSupportTest . java to improve clarity and ensure correct timestamp representation in tests
marycachetest : use tmp directory instead of ` ` testfiles - deleteme ' '
removed redundant null checks for subscribers in SettingImpl . java to simplify the code and improve readability
added a null check for the marshaller in AbstractSamlObjectBuilder and updated error handling in AbstractSaml10ResponseView to improve error handling and provide
replaced ` printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` in ` DataBrowser . java ` to improve logging consistency
added a condition to check if the asset directory exists in the development mode and modified the conditional logic in AssetsController to ensure correct handling of asset
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
changed the default format constant from " value - tag - index " to " value - index " to simplify the default format for better clarity
add hint for dijkstrabi in dijkstrabi and use request . get hints ( ) .
increased wait duration from 30 seconds to 60 seconds in BesuNodeRunner and changed native flag from false to true to allow for
renamed DuclsSandboxTest to SandboxTest and updated references accordingly to improve clarity and consistency in naming conventions
camel - 16400 : camel destination should use exchange . setexception ( ) instead of cxf . log
made the ` forwardPropagateTree ` method public to allow access to the method from outside the class
updated SQL query in JDBCExample . java to include time range to improve query accuracy and performance
[ mng - 5231 ] provide warning if profile activation fail to interpolate file location .
refactor Style class methods for improved performance to enhance performance and maintainability of the code
added zoom functionality and key event handling in ShareActivity to enable user interaction with the back button in the activity
added a check to skip processing for deprecated fields in Json . java to improve performance by avoiding unnecessary processing of deprecated fields
added animations for displaying and hiding the send layout in LauncherFragment to enhance user experience by providing smoother transitions when displaying or h
[ hotfix ] fix checkstyle violation in utils . java
updated the ` createSequenceWriter ` method to include a ` Progressable ` parameter for progress tracking to enhance the functionality by allowing progress tracking during
[ hotfix ] fix typo in sourcecoordinatorprovider
remove contribution from the panel and update panel ordering and colors to ensure the panel reflects the latest changes
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` for consistency to improve clarity and align naming conventions with the
added a check to initialize dPath if it is empty to ensure dPath is set to the system ' s user ' s directory when it
updated the sample rate handling in DefaultAudioSink to ensure a default value is used when no sample rate is provided to improve flexibility in audio
log4j2 - 1343 mapfilter . filter ( message , message ) should return onmatch instead of mapmessage . getdata
updated verification tests in VerificationInOrderWithCallsTest . java to improve test reliability and accuracy
updated the return statement in Quaternion . java to use the correct axis coordinates to ensure accurate translation of quaternion elements
renamed the constant COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to clarify the
add a test case to verify that listener be connect at start .
updated conditional logic in DocRenderer . java and added new test cases in PHPCCDocumentationTest . java to improve code clarity and ensure correct
refactor one - handed mode support checks in RecentsAnimationDeviceState . java to improve readability and maintainability of the code
added onDetachedFromWindow method to AppsCustomizePagedView . java to ensure proper cleanup of pending tasks when the view is
updated MorfologikAnalyzer and MorfologikFilter to accept a dictionary resource parameter to enhance flexibility in managing dictionary resources
replaced the variable ` count ` with ` thrown ` in ` ResultSetTest . java ` to simplify the exception handling logic
changed the initialization message from " debug " to " empty " in GradleBuildService . java to provide a clearer indication of
replaced ` AtomicReference ` with ` AtomicBoolean ` for lock timeout and exception handling in ` AbstractPhenomenaTest . java `
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in the await statement to allow more time for the zipkin server to be up
update deviantart ripper to work with different username and password .
replaced the method of checking Google signed packages with a constant values for GOOGLE _ PLATFORM _ KEY and GOOGLE _
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a new method ` notifyWindowStateChanged ` to handle state changes to improve event reporting for window state changes in the application
added email description to the email content formatter in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance email
updated return statement to use data . remove ( sel ) instead of remove ( sel ) to ensure consistency in data handling by using the correct object
modified language code retrieval logic in Locale . java and added validation in LocaleTest . java to ensure correct language code retrieval based on the length of
refactor ChangeLogParser usage and introduce a new ` createUpdateVisitor ` method to improve code readability and reusability by encaps
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary processing
added text properties and descriptions for chart data availability in Chart . java to improve user experience by providing descriptive information when no data is available
refactor Http1xServerResponse and Http2ServerResponse to use a synchronized checkHeadWritten method to ensure thread safety when accessing the server
refactor chunk handling logic in NettyResponse to use a dedicated chunkHandler method to improve code readability and maintainability by reducing duplication
updated header limits and test cases in Http2TestBase and TestHttp2Section _ 8 _ 1 to accommodate new HTTP / 2
fixed - redissonlocalcachedmap . setkey ( ) and setvalue ( ) method do n ' t work with local cache store mode
camel - 16400 : camel - jpa - do n ' t need to set entitymanager and transactionmanager on the jpa endpoint
rename ` fallSpeed ` to ` jumpSpeed ` in ` PhysicsCharacter . java ` to improve clarity and consistency in variable naming
added a condition to check if reparsedFunction is null to ensure that syntax extensions are only applied when reparsedFunction is not null
updated variable names from ' log ' to ' logger ' for consistency and clarity to improve code readability and maintainability by using a uniform
added deprecated method ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` to ` FileUploadDownloadClient ` to
updated the method call to include a filter parameter in MongoDbTailTrackingManager to enhance functionality by allowing dynamic filtering of the tracking object
added assertpredicates ( string expression ) method to LanguageTestSupport . java and updated test cases in JuelLanguageTest . java to enhance
added a bound check for alpha in RecentsView . java to ensure alpha values are within the valid range of 0 to 1
updated the formatting of the import package attribute in ManifestReversion . java to ensure proper formatting of the import package name in the output
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to enable the use of Java snippet functionality in the JavaLanguageServer
added a loop to iterate over all time buckets before updating the sums in StarTreeRecordStoreCircularBufferImpl . java to ensure that the
use chromedriver . storage . googleapis . com / index . html instead of http : / / code . google . com / p
( chore ) camel - pg : use preparedstatement to avoid resource leak
updated import statements from ` sun ` to ` org . rometools . rome ` in ` FeedParser . java ` to utilize
added content - length handling in TransferCompletionHandler and improved header processing in NettyAsyncHttpProvider to ensure accurate tracking of content - length
refactor Dialog class to improve code readability to enhance maintainability and facilitate future feature additions
removed the constructor from EnhancedRuntimeException to streamline exception handling by eliminating unnecessary parameters
http : / / issues . apache . org / jira / browse / log4j2 - 439 - fix socketappendertest
( chore ) camel - event - admin : remove unused component
updated method signatures and exception handling in ByteArray . java to improve error handling clarity and maintain compatibility with JDK8
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 : camel - test - infra - restlet should not run test on travis
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify method
move module - info . java from com . hazelcast . tests to com . hazelcast . test . modulepath
updated the ` getCompiler ` method in ` JavaLanguageServer ` and added ` getSourceDirs ( ) ` method in ` JavaServerConfiguration `
removed the ` MENU _ OPEN _ WEB ` menu item from the ` mute _ hashtags ` menu to simplify the menu
renamed method names from ` nodeIsAncestorOfItself ` to ` nodeIsDescendantOfItself ` and updated related assertions to cl
update y - coordinate calculations in WorldEditPlayer . java to ensure valid Y - coordinate values and prevent potential errors
added PathNotExistException to the selfCheckDataTypes method and modified related logic to handle PathNotExistException to improve error handling by distinguishing between
updated formatting in JavaCompiler . java to improve code readability and consistency
[ hotfix ] [ stream ] remove unused mailboxexecutor from continuousfilereaderoperatorfactory
hbase - 26421 addendum addendum for hbase - 2640 addendum ( rajesh )
updated method reference from ` meter . getId ( ) ` to ` meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated the instantiation of BlockJUnit4ClassRunner to use the class ' s Java class instead of the test class to ensure compatibility with the
[ drools - 5340 ] use lasttimedata instead of remoteitems in kiewatcher
adjusted the calculation of allAppsCellWidthPx in DeviceProfile . java to accommodate additional padding for better layout flexibility
[ hotfix ] [ core ] rename log4j to logback in coreoptions
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure correct
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
hhh - 14911 make session . close ( ) return void instead of connection
rename GetLocations class to improve clarity to enhance code readability and maintainability
removed stack trace printing from exception handling in SchemaValidatorTask . java to streamline error handling by eliminating unnecessary stack trace output
replaced ` throw UncheckedIOException ` with ` ignore ` in the ` Contents . java ` file handling to simplify error handling by eliminating
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and support libraries
ruby flavor : fix syntax error in ruby flavor processor
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
[ java ] remove usecaches flag from nio2endpoint
refactor ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` for database reading to improve flexibility
update instructorfeedbackresultspageuitest to reflect change in instructor feedback result
updated the ` useEncodedQualifierListOptimization ` method to include an additional ` Scan ` parameter to enhance the optimization logic to exclude raw scan
changed method visibility from public to package - private in ApprovalStore , ApprovalControllerService , and ApprovalControllerService to
added a delayed task to cancel the download if it is already in progress to improve user experience by preventing unnecessary downloads
updated method names from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController . java ` and added a new
updated project version from 1.0 . 11 to 1.0 . 13 and modified opyright description in JFreeChartResources . java
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper synchronization
refactor GsonBuilder class for improved JSON handling to enhance performance and maintainability of JSON processing
added null check for ` centerGeo ` before adding it to ` fixedPoints ` to prevent potential ` NullPointerException ` when ` centerGeo ` is
remove espresso home option and replace it with homefinder in espressoproperties
doc ( javadoc ) : fix typo in javadoc
changed the visibility of the ` deleteSession ` field and its getter / setter methods from ` boolean ` to ` private ` to enhance encapsulation
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
updated the initialization of ` sz ` and modified ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` ,
updated the triggerMediaScan method to include the file parameter to enhance media scanning functionality by associating it with the specific file object
simplified the test result posting logic in TestRunning . java to improve code readability and maintainability by reducing complexity
added custom G - code settings to the MainWindow class to enhance the flexibility of G - code customization options
updated import statements and modified Writer initialization in AdditionalJaxbMappingProducerImpl . java to utilize BufferedWriter for writing to improve performance and ensure
refactor JsonElement class to improve code readability to enhance maintainability and simplify future updates
added exception handling for unset . sys . property in TestBadConfig . java to improve test reliability by ignoring specific exceptions during tests
added a method to remove fragments and action bar from the action bar in GpsMainActivity to improve fragment management by ensuring the action bar is
replaced instances of " = LRB = " and " = RRB = " with " ( " , " ) " in the span
updated range handling in RemoteMediaHandler and RemoteRawHandler to use Range . Byte instead of Range . Range to improve type safety and clarity
updated the G - Code test file path and improved G - code visibility in the VisualizerCanvas and GcodeViewParse classes to enhance
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
reformatted the assertion logic in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a null check for the output stage in StatementResource . java to ensure proper resource management and avoid potential null pointer exceptions
fix IntegrityCheck . java and FileUtil . java to ensure correct file path resolution
removed unused imports and initialized shardToClient in ChaosMonkey . java to streamline code by eliminating unnecessary dependencies
added null check for ` fas ` before accessing its properties in ` ConfigurationActivator . java ` to prevent potential NullPointerException when ` fas
updated the formatting of the ` populateItem ` method in ` NestedRepositoryTreePanel ` to improve code readability and maintain consistency
changed the constructor visibility of the ExtensionTypeHeader class from byte to int and added a validation check for the extension type to ensure that the constructor
pdfbox - 4071 : remove unnecessary try - catch block , a suggest by valerybokov
changed the default value of deleteOnShutdown and pushOnShutdown from false to true and added getter and setter methods for pushOnShutdown to enable
added trigger callback handling and improved error logging in ReactiveStateMachineExecutor to enhance error management and provide better feedback during state machine execution
added a test for multiple Python executables on the first path in BuckConfigTest . java to ensure that Python executables are correctly set
added a default button setting for the signin button in the InitialAccountRegistrationFrame to enhance user experience by allowing the signin button to be
added a new constant TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and updated
updated error logging messages in RegistrationRestRepository . java to improve clarity and accuracy of logged error messages
move org . axonframework . util . reflection into org . axonframework . util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed private Vector2 center field from multiple classes to streamline code by eliminating redundancy
fix checkstyle issue in registerandprocessbundleoperation
refactor SslContextFactory to improve SSL context handling to enhance security and reliability of SSL connections
updated max expectations and log entries in ConfigurationProperties and ConfigurationPropertiesTest to ensure consistency with default values and improve test reliability
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for access errors
[ 3.0 ] add consumerclassloaderfilter ( # 10355 )
added a new parameter ` copyRowHeight ` and modified the ` shiftRows ` method to include a new ` shiftRows ` method to enhance
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and ` setRol
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to improve clarity and maintainability of grid translation logic
refactor assertion methods in Assertions . java to improve code readability and maintainability
added null check for currentDateTimeFunction in multiple database classes to ensure proper handling of currentDateTimeFunction when it is not null
added a method to retrieve an anonymous file path in IOUtils and updated Log4jUtils to utilize this new method to improve path handling and
updated the ` call ` method to include a content description for a task in ` DigitalWellBeingToast ` to provide more
hbase - 13084 addendum fix a race condition in catalogtracker . getmetadata ( )
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
do n ' t return null when item type be null ( # 5373 )
added integration support for Hibernate and JPA integration in BidirectionalOneToOneNPlusOneTest . java and implemented a new PostDTO
added functionality to remove extra empty screens and adjust startSearchPageIndex based on workspace screens to improve user experience by ensuring proper
updated HashMap and HashSet initialization to use initial capacity and added null check for value in IndexedValueMap to optimize memory allocation and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart and GooglePieChart to include double quotes to ensure consistency in string formatting across chart components
refactor wait handling in SendingAccountor . java to improve batch processing logic to enhance clarity and ensure graceful handling of interruptions
added position tracking functionality to the WALPrettyPrinter class to enhance the printing functionality by allowing users to seek to a specific file position
change default port from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure the transceiver starts on
sort event before generate report ( fixes # 364 )
added a test for CSVLine with double quotes to ensure correct formatting of CSV lines with escaped quotes
add coref . doscore , coref . scorer , coref . doscore , coref . scorer , coref .
do n ' t send an iq message if the recipient be not remote .
removed JNI implementation annotations from VM . java to streamline code by eliminating unnecessary implementation
updated the calculation of the last time in Fetcher2 . java and changed the configuration settings for HTTP and robots in Fetcher2 . java
added a condition to check if the video HDR format is " dolbyvision " and modified conditions in FFMpegVideo . java
rename ` other _ package ` and ` other _ package2 ` to ` other _ package2 ` in ` AstTests . java ` to
update worldborder . setdiameter ( ) to handle percentage > 0.99
hbase - 16413 hmaster can not host user region ( chunhui )
mow - 825 remove the caller from the login operation when the login be open
replaced instances of ` ArrayList < InstanceConfig > ` with a new ` generateInstanceConfigs ` method in ` RoutingTableTest . java `
changed the visibility of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
added unit test for reading erroneous Maven project references in ProjectBuilderTest . java to ensure proper handling of missing artifact versions during project building
removed redundant checks for oldProto and newProto in PropertyMap . java to simplify the code by eliminating unnecessary checks
refactor ` getControllerId ` method to accept ` configId ` as a parameter and streamline relay addition logic to enhance flexibility by allowing
replace sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management by using the correct session
removed conditional check for generating refresh token in OidcConsentApprovalViewResolver to simplify the conditional logic for better readability and maintainability
removed System . out . println statement from Http2SolrClient to clean up the code and reduce unnecessary console output
replaced a hardcoded null value with an enum NoopGetter for the propagation extractor to improve code readability and maintainability by using a
refactor conditional logic in ConditionalOnEnabledResourceChain . java to improve code readability and maintainability
added a check for non - empty treeRoot child count in the BarrowmanCalculator class to ensure that the calculation only proceeds when there
pdfbox - 2852 : use unfiltered stream instead of filtered stream , a suggest by valerybokov
updated log messages in FacebookImpl . java to use " CN1 " instead of " System . out . println " and added intent result listener
updated return value from " h : mm a " to " skeleton " in ShadowICU . java and added a new test for date picker
removed KeyguardManager dependency and simplified device lock status check in TouchInteractionService . java to streamline code by eliminating unnecessary checks for
cloudstack - 7803 : fix npe during volume creation due to null diskoffering
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel for writing to improve performance and responsiveness by using a more efficient
refactor ` SigInt ` and ` SigIntTest ` classes to improve code readability and simplify exception handling logic to enhance code maintainability
ggb - 1353 make sure the text be update when resize ( )
changed return value from - 1 to 0 in Asset . java to correct the logic to indicate a successful operation
updated ComputeBenchmark . java to use a dynamic value loader and mapping function for improved performance to enhance flexibility and maintainability of the code
added a refresh listener to the UploadListFragment to notify the UI when data changes to improve user experience by notifying the UI when data changes
refactor ` bibdatabasecontext ` to use ` path ` instead of ` file ` ( # 5358 )
replaced instances of ` emitters . items [ i ] ` with ` emitters . get ( i ) ` and added a dispose method
update tomcat tomcat . tomcat . tomcat . tomcat . tomcat . tomcat . tomcat . tomcat . tom
updated variable names from " desired file " to " desired file . " in multiple files to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing
replaced ` findByPK ` with ` findById ` for ` ServiceComponentDesiredStateEntity ` in ` DeleteServiceTest . java ` to simplify
refactor inner class field handling in Java2TypeScriptTranslator and add a new InnerClassFieldClash test in StructuralTests to improve
added logging and follow redirection filters to DockerClientFactory to enhance the Docker client configuration flexibility by allowing users to choose whether to log or follow
replaced direct calls to displayChanged ( ) with awtUnlock ( ) in XToolkit . java to ensure thread safety when accessing shared resources
hhh - 10183 use sqlserver2008dialect instead of db2dialect for nstring
added a try - finally block around the verifyZipHeader method call to ensure the input is closed in a finally block to prevent resource leaks
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
updated assertions in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to ensure correct behavior of nextOrd ( )
updated error messages in CGIHandler . java and added JavaVMCallbackHandler . java in JavaVM . java to improve clarity of error
added checks for additional newline characters in LineReaderImpl . java to ensure proper handling of line endings in the input string
changed the parameter type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` across multiple classes to improve immutability and
added a check to return early if the mesh has no vertices to optimize performance by avoiding unnecessary processing when no vertices are available
updated method names and exception handling in ` IncorectBindingPuzzleFixedTest ` and ` DescriptiveMessagesOnVerificationInOrderErrorsTest
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the folder
remove unused import of node . node in implicitcast and typesystem . java
refactor JsonObject class to improve data handling logic to enhance performance and maintainability of JSON processing
updated idle time validation logic in SelectChannelEndPoint and HttpConnection classes to ensure proper handling of idle timestamps and resource limits
fix flarmlandblock . cansustainplant ( ) not call cansustainplant ( ) . close #
added support for multi - tenant tables in QueryDatabaseMetaDataIT and modified index handling in UpgradeUtil to enhance functionality for multi - tenant tables and
updated date formatting in HttpCookie to include Locale . US and added a new class B6791927 with validation for cookie expiration to ensure
removed multiple multiple calls to ` db . close ( ) ` in ` DbHelper . java ` to ensure proper resource management and avoid potential memory
increased the poll duration from 1 seconds to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow for a longer processing time
[ gr - 38686 ] add trace phase to economy allocation stage .
add save - database key binding to source tab ( # 9271 )
added a line separator to the ObjectMapper initialization in DrillTest . java to ensure consistent line endings in JSON output
updated path handling in NativeEnvironmentRepository to replace Windows paths with regex patterns to ensure consistent path formatting across different operating systems
refactored application management to use a static Application instance across multiple test classes to improve resource management and ensure proper cleanup of application resources
[ java ] remove unnecessary validation of existing record log .
chore : update java and python dependency ( # 103 )
testfuzzoptimizations . java : remove thread . sleep ( ) from testfuzzoptimizations . java
added a private boolean variable ` reverseImage ` and updated its usage in ` CameraManager . java ` to manage the state of the reverse image
replaced ` . equals ( ) ` with ` . equals ( ) ` for string comparisons in multiple files to improve code readability and ensure
fix mdmmatchlinkSvc test ( # 3649 )
updated JUnit imports and method visibility from public to JUnit 5 in AuthenticationSuccessListenerTests . java to ensure compatibility with the latest testing framework
replaced ` New . arrayList ( ) ` with ` ArrayList ( ) ` in ` SetTypes . java ` to improve performance and
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future feature additions
updated trigger time formatting to include timezone information to ensure accurate trigger time representation across different locales
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle the creation of ` AbstractMethodError ` in ` MethodHandleResolver `
( chore ) camel - core : fix invalid syntax error in simple function expression
removed conditional check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - 17850 : camel - jclouds should copy input stream to avoid oome
camel - 16400 : camel - jbang - ignore test that fail due to osgi bundle not release
added a default access flag check and created a new test class for verifying the presence of the ACC _ STRICT access flag to ensure
[ java ] increase timeout in channelvalidationtest to avoid intermittent failure .
added a new file ` FileExtensions . java ` with constants for CLANG _ SOURCES and CLANG _ HEADERS to facilit
refactor DateFormatUtil to use a singleton instance of ISO8601CanonicalDateFormat and simplify the thread - local implementation to improve code readability and maintain
removed deprecated options from VMDeprecatedOptions . java to improve code clarity and maintainability
added a displayName property to Pac4jBaseClientProperties and updated related classes to utilize it to enhance client customization options and improve
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more specific exception type
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
mondrian : fix httpconnection . consumeresponse ( httpconnection ) and httpconnection . consumeresponse ( httpconnection ) .
fix potential npe in forgeeventfactory when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by focusing on relevant exceptions
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should not be used in new code
updated the calculation of the original length in the HyphenationTree class to ensure that the original length remains unchanged during the hyphenation process
add a very small delay before close the connection once an account be remove .
add image icon to resource management service . related issue : issue # 241 , issue # 244 , issue # 250
corrected the spelling of " PARAMETER _ NEEDS _ TO _ BE _ NAMED " in the error message to improve clarity
initialize providersChanged to false in ConfigurationManager . java to reset the state of provider changes
added a method to quote identifier tokens in the SemanticAnalyzer class to enhance the handling of quoted identifiers in the token rewrite process
pdfbox - 4892 : avoid npe , a suggest by valerybokov
replaced instances of ` AbstractAnalysisFactory ` with ` AnalysisSPILoader ` and updated type casting in ` SolrResourceLoader ` to improve type
updated condition for hit detection in Window . java to improve accuracy of hit detection logic
added null check for appManifest before retrieving its target SDK version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator to use a separate method for adjusting configuration metadata to improve code readability and maintainability by reducing redundancy
added userName property and corresponding getter / setter methods to the Driver class , and updated its usage in HiveSemanticAnalyzerHookContext and SQ
camel - 14850 : add setter to xsltbuilder to allow customization of transformer .
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TestFirstInFirstOutComparator , and TestFirstInFirstOutComparator
updated expected file size calculation and removed unnecessary variable declarations in ShadowAssetManagerTest , ShadowDownloadManagerTest , and ShadowDownloadManagerTest to simplify
added a null check for the context before logging access to avoid potential NullPointerExceptions when the context is not initialized
camel - 16400 : fix throughputlogger test failure due to time issue
refactor VM option checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) for debug builds to improve code readability
replaced instances of ` MeterStatisticsManager . statisticsOperationMap ` with a new ` statisticsModelMap ` in the ` DefaultLogPublisher `
replaced system . err . println with a method to resolve the logback configuration to streamline the process of resolving the logback configuration
added @ NotNull annotations to methods in CipherExecutor , CookieRetrievingCookieGenerator , and CookieValueManager classes to enhance code robustness by ensuring
replace ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` ExecutableMacroExpander ` and
refactor waitUntilReadyAndSucceed and waitUntilReadyAndTimeout methods to use try - with - resources to ensure proper resource management
renamed the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the test ' s purpose
updated formatting in RelativeDateFormatTests . java to improve code readability and maintainability
added a new method ` generateShieldAddress ` to ` RpcApiService ` to enable the generation of shield addresses from the wallet
changed the return type of ` readConsoleInput ` from ` byte [ ] ` to ` String ` in multiple classes to improve usability by
updated regex patterns for ` presubmit ` and ` postsubmit ` in ` TestStabilityRule . java ` to improve clarity and
added a condition to preserve multi - valued fields in DefaultSolrHighlighter to ensure that multi - valued fields do not exceed the maximum number of
updated the ` tryToLogin ` method to accept an ` Uri ` parameter and modified return values accordingly to enhance the method ' s functionality by
updated entity handling logic in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to improve entity management and ensure proper fight
( chore ) camel - jms : fix checkstyle issue
removed the wrapCollection parameter from the update method call to simplify the method signature for improved readability
added handling for IllegalCurrencyException in BTCEAdapters . java to improve error handling and logging for unknown currencies
refactor subscription name handling in DurableConduitBridge . java to improve clarity and maintainability to enhance code readability and ensure
pdfbox - 4892 : fix typo , a suggest by valerybokov
added support for tenant isolation in ` ControllerTest ` and refactored related methods in ` ClusterTest ` and ` HybridClusterIntegrationTest
simplified the return statement in HasSettings . java to improve code readability and reduce boilerplate
added a check for non - zero attrs size in ProjectWorkspace . java to ensure that the size of attrs is greater than 4096 to prevent potential
added ` getProjectJdkName ` and ` getProjectJdkType ` and ` getProjectLanguageLevel ` methods to ` AbstractIjProject `
[ hotfix ] [ hive ] fix typo in hivesessionproperties description
added functionality to resolve effective ACLs with user details in the GrantedAuthorityEffectiveAclsResolverTests to enhance security by ensuring proper handling of
update javaparsertypedeclarationadapter to use solvedjavalanguageobject instead of reflectionclassdeclaration
added a constant for number of buttons and a maximum number of buttons in XToolkit . java to ensure the application does not exceed the defined
updated import statements from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary . AssertEquals to
added a new ` MessagePackFactory ` class for creating ` MessageUnpacker ` instances using ` WritableByteChannel ` instead of ` OutputStream `
add a new biome tag for the ' is _ desert ' , ' is _ cave ' , and ' is _ pave
rename ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout logic to conditionally set horizontal state and added UIID assignment for GroupElement and ButtonGroup elements to improve UI responsiveness and
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) ` with ` matcher ` in ` DOIServiceImpl . java `
replaced ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in both ` AndroidInput ` and ` AndroidLocklessInput `
[ java ] close the commit position counter when tryclaim .
# 1748 - add @ embeddable annotation to usersite and recordid class
refactor HttpConverterRegistrar to handle malformed URLs and invalid port values more robustly to improve error handling and provide clearer configuration feedback for invalid
cloudstack - 7892 : do n ' t ignore storage pool id in listnetworks api response
updated file handling in NRTCachingDirectory to use file length instead of file to improve file management by accurately reflecting the length of the
updated the ` JavascriptCompiler ` class to use ` generateClass ` instead of ` beginCompile ` and ` endCompile ` methods to improve code
removed unnecessary synchronized keyword from UISettings class to improve performance by reducing unnecessary synchronization
modified the visibility of the fireDataChanged method from private to public to allow external access to the fireDataChanged method for better usability
[ beam - 8470 ] improve error message when emulator do n ' t support one transaction
replaced generic type declarations with diamond operator in multiple Java files to improve code readability and reduce verbosity
updated array type handling from double to short in ObjectInputStream . java and added a new class CloneArray . java for serialization testing to ensure correct type
updated nonce retrieval method and improved logging messages in OIDCAuthenticationFilter . java to enhance clarity of nonce handling and provide more informative
added handling for relationship fields in DCInputSet . java to ensure proper processing of relationship fields in the input set
added server slogan functionality to the capabilities table and improved logging messages in the application to enhance user experience by providing clearer and more
updated conditional logic for tinting menu items in DrawerActivity . java to improve clarity and ensure consistent behavior when comparing menu items
replaced a failing test with an assumption in SolrRequestParserTest . java to ensure the test only runs when a network connection is present
added a check to return early if there are no missing symbol events to optimize performance by avoiding unnecessary processing
updated test cases in StringHelperTest . java to include new data values " 3 - 4 " and " 5 - 4 " to enhance test coverage
added a warning log for empty array or iterator return in the data provider holder to inform users when the data provider return an empty array or iterator
replaced ` Collections . EMPTY _ MAP ` with ` Collections . emptyList ( ) ` across multiple files to improve code readability and adhere
update freeplane 1.9 . 0 to 1.9 . 8 and change xml version from 1.9 . 0 to 1.9
updated the parameter name from mass to restitution in PhysicsRigidBody . java to ensure the correct restitution is applied
added a new file ` AutoFtpActivity . java ` to implement FTP testing functionality to enable automated FTP testing for improved user experience
refactor token type handling in BaseSemanticAnalyzer to improve clarity and functionality to support StringLiteral as a valid token type
added getter and setter methods for imageX , imageY , and component state in ImageViewer , OnOffSwitch , and GenericSpinner classes to
added a new file ` RemoteExecutionEnabled . java ` to implement remote execution enabled and disabled functionality to enable testing of remote execution behavior in the
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` annotations in ` ImportCsv . java ` and `
added assertion to verify that shadow variables are not stale to ensure that shadow variables are not stale during execution
updated the SEMIJOIN _ CONVERSION configuration from " enable . semijoin . conversion " to " optimize . semijoin . conversion " to
added SLF4J logger imports and debug logging in DatagramPacket , DatagramPacketByteArrayDecoder , and DatagramPacketObjectEncoder to
updated directory removal logic in SynchronizeFolderOperation . java and modified file display logic in FileDisplayActivity . java to improve directory management and enhance
added assertions to verify the presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated in the
added @ Deprecated annotation to ISchemaRegion and renamed test methods in SchemaRegionBasicTest to clarify that these methods are outdated and reflect
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure proper error handling when sampleMimeType is not provided
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
updated @ AllArgsConstructor annotations to include JSON deserialization mode in J . java to enable proper JSON deserialization for the J class
added support for creating an index on a view in MetaDataClient . java to enforce the restriction that creating an index on a view is not supported
added a new file ` Website . java ` and modified imports in ` PopulatorImplTest . java ` and ` PopulatorImplTest
added a JUnit setup method to set default locale for BSFormatterTest to ensure consistent locale settings for tests
fix badly downloaded jar file in coremodmanager . getfiles ( )
updated assertions in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and accuracy of the
added checks for single and single parameter types in SimpleExprGenerator . java to ensure proper handling of parameters in the code
added a volatile boolean field ` createdVertx ` and modified the conditional check to ensure ` vertx ` is only created if it is not
updated the ` writeAttributes ` method to accept a ` NodeModel ` parameter instead of a null reference to enhance attribute writing functionality by associating
updated log messages in SynchronizeFolderOperation . java and modified file retrieval logic in FileDisplayActivity . java to improve clarity of log messages
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related methods to ensure entries are returned regardless of their read
replaced MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) in multiple files to standardize directory path usage across the
refactor data validation logic in RegisterServerConsumerExecutor and remove unnecessary null checks in URIRegisterExecutorSubscriber to improve data integrity checks and streamline
updated isPlaying logic in GwtMusic . java to account for paused sound state to ensure correct playback behavior when the sound is paused
added permission check for the admin area ' s sudo area in MainCommand . java and defined a new permission constant in Captions . java to
replaced ` ImmutableMap ` with ` HashMap ` for query options in ` ServerRequestPlanVisitor . java ` to improve performance by avoiding unnecessary
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
updated assertions in ResourcesTest to use string literals instead of hardcoded strings to improve code readability and maintainability by reducing hard - coded
updated NMTWaitForDataMerge to NMTOverflowHashBucket and added NMTMallocWithPseudoStack methods to enhance memory allocation
[ flink - 13434 ] [ serializer ] introduce javaeithererializersnapshot for backwards compatibility
updated default values for ` DEFAULT _ NDOTS ` and ` DEFAULT _ ROTATE _ RESOLV _ OPTION ` in ` Address
added a call to the superclass ' s __ associate method in RequestRockerTemplate and implemented a test case in RequestRockerTemplateTest to
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated references from " liquibase / parser / core / xml " to " www . liquibase . org / xml /
rename commonmimetypelocator to com . oracle . truffle . api . test . source
updated repository version state from INIT to NOT _ REQUIRED across multiple classes to ensure that the repository version is not required for further operations
updated the comparison logic in GenerateChangeLogTask to include schema comparison parameters to enhance comparison accuracy by incorporating schema differences
updated import statement for TestBackwardAnoamlyFunctionUtils from JUnit to TestNG to ensure compatibility with the TestNG testing framework
added a new file ProgressiveJPEGTest . java to implement a progressive JPEG image testing framework to enable testing of progressive JPEGs in
updated MaterialLoader to set alpha discard threshold and modified mat name handling to improve the clarity and functionality of the material loading process
[ gr - 28686 ] support x86 architecture in ccompilerinvoker .
added a null check before setting the size of the label to avoid potential NullPointerException when the text is null or empty
modify readVarInt ( ) method to include a multiplier of 1 _ 000 _ 000 to ensure correct integer handling for varint operations
added private constructor to PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern to prevent instantiation of utility classes
simplified length retrieval by using curConfig . getLength ( ) instead of bounds to improve code readability and maintainability by eliminating
removed unnecessary casting of MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the file path in the componentPresetDao from " . * csv " to " ( ? i . * csv " to ensure compatibility with
added a conditional check for ` duration ` before invoking ` announceForAccessibility ( ) ` in ` TaskbarStashController . java `
replaced the use of ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNode ( ) ` in
add test for pmd task that only support 1.3 and 1.5
( chore ) camel - quota : use mockito instead of powermock in test
added error stream and output streams to TestSchemaToolCatalogOps . java to facilitate easier debugging and error reporting in the application
hbase - 25921 addendum clear data encryption key during sasl negotiation ( rajeshbabu )
updated MongoQueryMethod to accept RepositoryMetadata as a parameter to enhance functionality by allowing metadata to be passed during query resolution
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 539 .
removed unused import statements from MetaDataEndpointImpl . java to streamline code by eliminating redundancy
updated the allowed number of allowed deadlocks from 5 to 10 and added a retry interval for deadlock handling to improve the flexibility of the
refactor variable names and adjust adjustments in BarChartActivity , LineChartActivity , and YAxisRenderer classes to improve code readability and
added handling for printable characters in FsUtils . java and implemented valid method in FsUtils . java to enhance security by ensuring only printable characters are
rename method from ` in ` to ` using ` in ` across multiple classes to improve clarity and consistency in method naming
added process plugin configuration to the DefaultMaven and DefaultLifecycleExecutor classes to enable flexible handling of plugin configurations during project building
changed return values of ` getAndSet ( 0 ) ` to use ` d ` instead of ` 0 ` in ` ProxyConnectionManager ` and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return the remote host instead of a hardcoded
[ ds - 3952 ] add admin _ button to community list servlet
hbase - 11343 addendum fix thread name for compaction ( addendum )
updated the method to retrieve the package name from resources instead of the application ' s package name to improve resource management by using a dynamic package name
updated Near . java to include a method to filter players in a plot to enhance visibility control of players in the plot
refactor AndroidManifest , ResName , and ShadowMediaPlayer classes to improve code organization and maintainability
refactor MlibOpsTest . java for improved code organization to enhance maintainability and readability of the test cases
replaced hardcoded ` OperatingSystemImpl ` with a constant ` OPERATING _ SYSTEM _ IMPL ` in ` JNIRegistrationManagement
easy : fix typo referencedcontainer - > referencedcontainer in
refactor key and iv retrieval logic in UploadFileOperation . java to simplify key and iv initialization to improve code readability and reduce redundancy
added Stability annotation to WorkProfileTest for various flavors as per bug report b / 243688989
removed a conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
updated cursor position setting in GwtTestWrapper . java to ensure the correct input object is used for cursor positioning
refactor ` LockFreeBucket ` to extend ` LockFreeBucketContendedTimeMeter ` and introduce ` LockFreeBucket _ FinalFields
add ` ` tpstats ' ' command to node probe to show pending task
updated ` getMaxBitrate ( ) ` to use ` userPreferences . getValue ( ) ` instead of ` Utils . getMaxBitrate ( )
refactor tracing logic in ZipkinHttpSpanExtractor to improve readability and maintainability to enhance code clarity and maintainability by encapsulating
refactor to make it easy for subclass to override
replaced reflection with direct usage of reflection to avoid reflection overhead . ( # 5371 )
added a project reference to the filesystem in LauncherUtils . java to ensure the application uses the correct project configuration
added ProjectFilesystem parameter to JsBundle and JsBundleBuilder classes to ensure the correct root path is passed during bundle creation and testing
refactor multiple Java classes related to EnvelopeStyle , Databinding , and MessageContext to improve code organization and maintainability
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future feature additions
removed the VersionConfig interface and modified the implementation of universes in VersionBuckConfig . java to simplify the class structure and optimize memory
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve robustness by preventing runtime
changed the access modifier of the ` validateTypes ` method from static to public to allow access to the method from outside the class for improved
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gavin to 2.16
added SLF4J logging capabilities to SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated VERSION _ POSITION _ Y and VERSION _ FONT values in Splash . java to align the application with the latest versioning standards
added a runLater syntax for adding notifications in UserInterfaceComponentImpl . java to ensure that notifications are added on the Event Dispatch Thread to avoid potential
updated the mock implementation in ReturnsElementsOf . java to ensure the mock correctly returns the expected elements as expected
corrected the spelling of " Drop partitions for non - string partition columns " in ErrorMsg . java to improve clarity and accuracy of
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the handling of LineFileDocs
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to use this method to improve
camel - 16400 : camel - jbang - do not throw ambiguousmethodexception if method body be ambiguous .
rename method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added bufferOwned flag and modified object disposal logic in IndexBufferObject and VertexBufferObjectWithVAO classes to improve memory management and
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to ensure users are prompted to change the
refactor JerseyClientConfiguration class for improved configuration management to enhance flexibility and maintainability of the client configuration
int - 171 , int - 178 , int - 178 , int - 178 , int - 178 , int -
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest . java ` and modified return types in ` Remove
added methods to handle empty arrays in StringDict and Table classes to improve data integrity by ensuring only valid entries are processed
added ` AutoCloseable ` to the ` GenericContainer ` class and implemented ` AutoCloseable ` in ` GenericContainerRuleTest ` to
updated logging level from info to error in MediaInfo . java and removed unnecessary try - catch blocks in RendererConfigurationTest . java to improve logging
added support for schema pattern configuration in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable flexible configuration of database connections based on user
do n ' t throw npe if tlssession be null
updated bitmap creation logic to use maximum dimensions for width and height to improve robustness by ensuring minimum values are respected for bitmap creation
refactor Base64 class implementation to improve code readability and maintainability
sulong : add fallback assumption to llvmglobalcontainer . getstackfromthreadnode .
danielwagnerhall : ignore test that fail on iphone . see http : / / github . com / codename
renamed FlowBuilder and FlowJobBuilderTests classes to improve clarity and consistency in naming conventions
replaced ` resName ` with ` resId ` in ` AttributeResource ` and updated related classes to use ` ResourceIndex ` instead of
resolve tls file in docker context ( # 5395 )
updated the test setup method from ` tearDown ` to ` setUp ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure
refactor type variable capture logic in Attr . java and add a new class T6450290 . java with generic box handling to improve
added logging level configuration and methods to set logging levels in LoggingFlags . java and LoggingOptions . java to enhance logging flexibility by allowing users
added logging statements and modified the deleteItemsFromDatabase method to accept a Collection of items to improve traceability and debugging of package removal events
added ` allFilesOption ( ) ` method to ` FileActivity ` and implemented it in ` FileDisplayActivity ` and ` PreviewImageActivity
added deprecated methods for ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup . java ` to enhance flexibility in operation matching
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate representation of predicted app columns based on device type
updated the initialization of the string value to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added new RequestMatchers and RequestMatchersTests classes to enhance request matching capabilities in the security framework
simonstewart : do n ' t check if applet be not in applet mode
updated calculations in the ProgressBar class to account for background height and width to ensure correct positioning of the ProgressBar based on its height and width
[ native ] fix incorrect path for external function definition
changed the ` extra _ L0 ` and ` extra _ L1 ` variables to final in ` BruteArgumentMoverHandle .
added a condition to check if the state callback is invalidated in the gesture handling logic to ensure that the gesture is only processed when the handler is
updated layout constraints for landscape and portrait layouts to improve layout responsiveness and adaptability across different orientations
added a condition to check if the redir file is " / robots . txt " in HttpRobotRulesParser to ensure that robots . txt
replaced hardcoded warning icon with a static resource constant in JBrowseModule . java and updated references in CallHierarchyTopComponent . java to
updated the button names from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java
updated UDFOPDivide to handle zero values correctly and added a new TestUDFOPDivide class with unit tests to ensure
updated method signatures and formatting in ` FlowJob . java ` and ` StopAndRestartFailedJobParserTests . java ` to improve code cl
updated BeanDefinitionBuilder in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a constructor argument for request matchers to enhance flexibility in
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper resource cleanup and avoid memory leaks
replaced ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure the correct thumbnail is used
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a method to set the request timeout in RaftServerConfigKeys to ensure proper configuration of RPC request timeouts
updated logging level from error to debug and removed unnecessary exception handling in TsFileResourceManager and ResourceManagerTest to improve logging clarity and ensure
added System . getProperties ( ) method to MavenModuleLoader . java to enable dynamic configuration of system properties during module loading
added metrics for readiness checks and bad checks in HealthCheck and AdminApi classes to enhance monitoring capabilities for readiness checks in the application
added model handler registration for animatedtorch in BlockAnimatedTorch . java to enable custom item registration for the animated torrent functionality
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method to retrieve HiveConf from a specified configuration directory to improve code reusability and maintainability by centralizing configuration retrieval logic
added a new link to " Muting Users " in FeaturesActivity to provide users with direct access to the Muting Users feature
added a new property " jdk . reflect . useDirectMethodHandle " to disable direct method handle to improve performance by disabling direct method
hbase - 16400 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 31208 ] [ yarn ] fix yarn deployment when no plugins share
replaced calls to ` getPronunciations ( ) ` with ` getWord ( word ) . getPronunciations ( )
updated JSON string formatting in JsonUtilsTest . java to improve readability by removing unnecessary newline characters
added tweet ID handling in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper identification of tweets in the
log warning about ununderlying ring buffer data due to reliable topic
replaced IOException with NoClassesFoundToAnalyzeException in FindBugs2 . java to improve error handling by providing a more specific exception
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
changed the initialization of the isIncompatible variable to true in DLNAResource . java to ensure that the resource is not incompatible when it is
updated the method signature of ` createAccount ` from ` Account ` to ` AccountCreateContract ` to provide a more specific contract type for account
pdfbox - 4892 : avoid npe if there be no range
http : / / issues . apache . org / jira / browse / amq - 4885 - fix for amq - 5
changed the default value of the ` enableOffHeapFormat ` from false to true and updated the default version from " ON _ HEAP " to
updated title handling in FeedUpdateService to ensure title length does not exceed a maximum of 2048 characters to improve user experience by preventing excessively
updated JColorChooser and BasicColorChooserUI to utilize ColorChooserComponentFactory for preview panel management to improve code maintainability and ensure consistent
changed log level from info to debug for extensions checking to reduce log verbosity and improve performance during extension checking
added a null check for reusable bitmap before setting inMutable and inSampleSize to prevent potential NullPointerExceptions during bitmap decoding
added layoutParams and getLayoutParams methods to FakeView . java to enable access to layout parameters for testing purposes
added exception handling for closed cursor in DefaultCursor and created a test for it in CursorSimpleTest to ensure that illegal state exceptions are thrown when
pdfbox - 4892 : check for kids and type , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a ` ts ` field with getter and setter methods to the ` Message ` class to enable tracking of the timestamp associated with messages
add exceptionmapperutils . toresponse ( ) and exceptionmapper . toresponse ( ) for good readability
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the class from other packages
fix ( isochrone ) : remove legacy parameter from isochrone request
updated class visibility from public to package - private in multiple test classes to enhance encapsulation by restricting visibility of test classes
refactor CSRF attribute handling into a separate method ` setCSRF ` to improve code readability and reduce duplication
add bootstrap support for lombok . launch . shadowclassloader and lombok . launch . shadowclassloader in eclipseloaderpatch
[ drools - 1550 ] add support for disable numeric in rule sheet ( # 1551 )
changed log level from info to debug for default value logging to reduce log verbosity and improve performance by avoiding unnecessary log output
added null checks for axes and buttons in Lwjgl3Controller and improved controller management in Lwjgl3ControllerManager to
updated import statements from ` cucumber . api . java ` to ` io . cucumber . core . ObjectFactory ` in `
refactor port forward saving logic in PortForwardListActivity . java to improve code readability and maintainability by eliminating redundant checks
added configuration for snapshot data behavior in GlobalConfiguration and related classes to allow users to control snapshot data behavior for Liquibase changes
updated file handling logic in SyncedFolderObserver . java and improved logging in SyncedFolderObserver . java to enhance code clarity and
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future development
updated gesture handling logic in StatusBarTouchController and related classes to improve touch responsiveness based on trackpad gestures
updated the VectorReader and LlapInputFormat classes to move VectorReader and VectorReaderImpl to the correct package structure to improve code organization and
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to align with the latest Mockito API changes
updated method signatures to use ` getRelativePath ( ) . toString ( ) ` instead of ` getRelativePathName ( ) ` and ` getRelativePath ( ) `
updated method signatures in ` SegmentMapper ` and ` CompositeTransformer ` to include ` RecordReaderConfig ` instead of ` RecordReader ` to enhance
added a null check for the extractor in ControllerMethodInvoker . java and updated annotations in Param . java to ensure that the extractor is instantiated only
cloudstack - 10293 : fix resource limit for unlimited volume
add potionshiftevent to allow modded player to click on the player . close # 5028
added a deprecated constant for COLD _ READS _ TO _ OMIT _ KEY and removed it from uncheckedOptions to encourage the
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 5370 ] fix popmessageprocessor not be retry ( # 5371 )
refactor KeyboardAddonSettingsFragment to improve code readability to enhance maintainability and simplify future updates
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests for a moment moment
replaced ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` with ` NettyDriverDriverMongoClientSettingsBuilderCustomizer ` and changed
added upgrade request and response handling in UpgradeConnection and implemented unit tests in ClientConnectTest to ensure proper handling of WebSocket upgrade requests and responses
added timeout handling to AndroidImplementation to manage connection timeouts effectively
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods in ` GitblitClient ` and ` RepositoriesPanel ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure proper parsing and deparsing of SQL expressions
updated assertions in Misc . java to check if the file is a root directory and added a new method to check if the file is root
added dynamic property handling for group and thread per group in FixedThreadExecutor to improve thread management flexibility by allowing dynamic configuration of the number of
added null check for the ' field ' variable in AbstractChangeGenerator . java to prevent potential NullPointerException when ' field ' is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration files to align with the latest Spring framework conventions for event listener
refactor animation end logic into a separate method ` endAnimation ` to improve code readability and maintainability by reducing duplication
hbase - 17412 add closing of deflateroutputstream to prevent leak
added a new file ` gsp001 . java ` to test JVMTI GetSystemProperty retrieval at early phase Agent _ OnLoad
refactor BeanDefinitionInjectProcessor to use concreteClassMetadata and isDeclaredBean instead of annotationUtils to improve code readability and maintainability by redu
[ jme3 ] add support for jme3 export for camcontrol and lightnode .
updated PopupNotificationPanel to use SwingUtilities . getWindowAncestor for window disposal to improve code clarity and ensure proper disposal of popup
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` for consistency to standardize exception handling
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` to allow the method to accept a larger time value
added onBuild and executionDriver fields to ContainerConfig and Info classes to enable tracking and management of build configurations in the application
updated icon setting logic in Toolbar and FlowLayout to differentiate between right - to - left and left - to - right languages to improve
add a new flag ` enablePositionIncrements ` to ` StopFilterFactory ` and modify the instantiation of ` StopFilter ` to enable position
added InternetAddress to EmailsTest and SystemErrorEmailReportTest to facilitate email communication with the TEAMMATES Admin
set mTryShareAgain to false in FileActivity . java to disable sharing functionality for improved user experience
added support for terminal name detection in JansiNativePty . java to ensure compatibility with different terminal versions and improve user experience
refactor bandwidth calculations to use a variable ` bytesSize ` instead of ` bytes ` for better clarity to improve code readability and maintain
replaced direct calls to ` getSpan ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests .
replaced hardcoded API URL strings with a private static final API _ BASE _ URL in EaseeBindingConstants . java to improve maintain
[ hotfix ] [ kafka ] fix flaky kafkaioit test
replaced the ` allOf ` method with a ` is ( itemName ) ` method in ` SearchResultMatcher . java ` to improve clarity
added SSL trust manager and hostname verification functionality to OkHttp . java to enhance security by ensuring certificates are verified during HTTP requests
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code readability and maintainability by consolid
added a new file ` HyperlinkFormula . java ` and updated field length handling in ` StringPtg . java ` to support hyperlink
added nullable fields for stdout and stderr in ShellStep . java and modified the escapeAsBashString method to enforce non - null safety to
increased the timeout duration from 1000 milliseconds to 2000 milliseconds to allow more time for asynchronous operations to complete successfully
refactor escapeDatabaseObject method calls to use objectName instead of tableName to improve clarity and consistency in handling database object names
added a boolean field ` inputChanged ` to track input changes in ` MaterialRenameDialog . java ` to improve UI responsiveness by allowing
added a test for state change functionality in ShadowDisplayTest . java and implemented a state change method in ShadowDisplay . java to ensure correct behavior
[ geos - 8470 ] add directinvocationservice to handle direct operation
gwt : add ` ` ^ x ' ' and ` ` ^ y ' ' to gwtkeycodes
fix : add support for pg _ catalog . pg _ depend dep for pg _ class
[ hotfix ] fix nullability issue in queuechannel
removed unnecessary exception declaration and improved URI handling in FileUtils . java to enhance code clarity and maintainability by simplifying variable declarations
added support for Jenkins node monitoring in the CollectorServer class to enhance monitoring capabilities for Jenkins nodes applications
refactor attribute resolution in HeadersBeanDefinitionParser to use a new method ` resolveAttribute ` to improve code readability and maintainability by encaps
hbase - 23211 walreader . seekonfs ( ) do n ' t throw eofexception if the file be already close (
removed multiple calls to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer and added shutdown method in Nacos
camel - camel - mybatis : fix switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator and GoAwayBodyParser to use a dedicated method to improve code readability and maintain
updated the formatting of the AuditEvent class and added a test for JSON output to improve code readability and ensure the test verifies the expected JSON
added checks for floating - point rounding errors in Interpolation . java to ensure safe handling of floating - point values and prevent potential errors
fix a typo in the default path ( # 5395 )
refactor the way the executable path is retrieved in DxStep . java to improve code readability and maintainability
added assertions to compare two PointRangeQuery instances in TestPointQueries . java to ensure consistency and correctness of point range queries
hbase - 27450 fix testhfilecleaner test failure on window
updated file label display logic in ReceiveFileConversationComponent to ensure the correct file name is displayed based on the transfer request ' s file size
do n ' t throw jce in JedisClusterCommand . java to improve error handling by avoiding unnecessary exceptions
[ hotfix ] [ test ] make rowtimeminibatchassgineroperator always always
updated the decoration settings in FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to enhance
added baseline and test methods for the HashMap implementation in QMapReadRandomKeyBenchmark and QMapReadSequentialKeyBenchmark classes to improve performance testing
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B with
updated null checks and improved identifier handling in GroovyEngine . java to enhance robustness and maintainability by ensuring proper handling of empty fields and
do n ' t set drawable for a angle that do n ' t have a drawable
added configuration options for socket timeout and TCP keep - alive in HiveServer to enhance server performance by allowing configurable timeout and TCP keep - alive settings
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to clar
no effective change - code cleanup - remove unused import
refactor ` RealtimeSegmentRelocator ` to use ` TimeUtils . convertPeriodToMillis ` instead of ` Joda - Time
cloudstack - 1365 : fix vpc creation fail when vpc be not in active state
updated window alpha calculation and condition checks in WindowTransformSwipeHandler . java and FloatingIconView . java to improve accuracy of window alpha
updated the error message for schema declarations in SecurityNamespaceHandler . java to ensure users update their schema declarations for compatibility with Spring Security 4.0
renamed multiple Java files related to protobuf assertions and subject classes to improve consistency and clarity in naming conventions
changed fields in DisruptorProviderManage and QueueConsumer classes to be final to ensure immutability and prevent unintended modifications
added a new UDF class TestConfigureUDF and implemented configuration testing in Hive to facilitate testing of user - defined functions in Hive
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve matching accuracy and enhance test coverage for
replaced direct logger initialization with direct logger creation methods to simplify code and improve readability by reducing redundancy
replaced ` updatePurgedShardNodes ` and ` deletePurgedShardNodes ` with ` deletePurgedShardNodes ` and ` delete
added support for Java 17 features in the JavaLanguageModule and updated related versions to ensure compatibility with the latest features and improvements in the
log4j2 - 1349 add a timeout mechanism to wait for compression job to finish
fix potential npe in volatilereadnode when lastlocationaccess be null
added a method ` getSteps ( ) ` to return an unmodifiable list of steps to enhance the functionality of the ` SimpleJob ` class by
removed duplicate ` fromBase58 ` and ` toBase58 ` fields from ` JsonRpcApiUtil ` and ` TronJsonRpc `
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
update longtasktimer duration to use base time unit ( fixes # 386 )
[ euphoria - core ] do n ' t use partition custom partitioner in reducebykeytranslator
refactor color handling in HostEditorActivity to use CharSequence instead of String and improve type safety to enhance code readability and ensure proper type casting
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and updated related methods to use ` SystemProperties ` instead of ` In
added a constant MAX _ TWEETS _ IN _ CONVERSATION and modified the loop condition in ExpansionViewHelper . java to
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to improve performance by allowing more time for
added a test for the ` getsPersistedByteSize ` method in ` QueueTest ` to ensure that the ` tailPages ` and `
use class . getpackage ( ) instead of getclass ( ) in glowserver . getimplementationtitle ( )
refactor buffer resizing logic in DataIO . java to improve code readability and maintainability
removed unused import of DataOutputStream in GdxSetup . java to improve code clarity and reduce unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the file name associated with the
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance functionality to mark items as read when loading
added ClassNotFoundException to the main method and modified exception handling in JarInstrumentor . java to improve error handling and provide better diagnostics for negative array size
added a method to check for spill positives in HashAggTemplate . java to ensure proper handling of potential out - of - memory errors
replaced direct calls to ` getDocStoreSegment ( ) ` with a final variable ` dsName ` in ` IndexWriter . java ` to
added a default value for supported name ID formats in SamlProfileSamlNameIdBuilder to ensure a valid name ID format is used for SAML
added error handling for password change in ChangePasswordPage to improve user experience by preventing unauthorized password changes
reformatted code in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to remove unused test class to streamline the codebase
updated date filtering logic in RRD4jPersistenceService to ensure valid date ranges before and after filtering to improve data integrity by preventing invalid
added null checks for numVectors in GenericUDAFComputeStats . java to prevent potential errors when numVectors is non - positive
test : migrate executablereftest to junit 5 ( # 4528 )
added null checks for ` view ` and ` glassPane ` in ` JLayer ` and created a new class ` bug69944
camel - 16400 : added wiretap to senddynamicprocessor so you can easily configure component and whatnot .
changed the visibility of the action method from public to protected to restrict access to the method for better encapsulation
[ calcite - 1790 ] add support for ` ` planner . enable _ topn ' ' option
[ java ] remove unnecessary ` ` aerondirectoryname ' ' from log agent test .
fixed - rbatch . ping ( ) should not be call if connection be queue
replaced ` InputStream ` with ` URL ` for default Hive configuration variables in ` HiveConf . java ` and removed the ` LoopingByteArray
replaced Device . defaultDevice ( ) with criteria . getDevice ( ) in model creation to ensure the model is created based on the correct device
added menu inflation for motor details options in SimulationViewer . java to enhance user interaction by allowing save functionality
refactor CertificateValidator class to improve certificate validation logic to enhance security and reliability of certificate validation
make hawtio . dirname the absolute path , so it work on window
added a condition to return SINGLE _ SPACE when comments are empty or empty to improve handling of whitespace cases in the code
changed ` mClosed ` , ` mNativeDict ` , and ` mNativeDict ` variables to be volatile in multiple classes to ensure visibility
removed stack trace printing in ContextHandler . java to improve error handling by avoiding unnecessary stack trace output
added integration test for custom item drop test .
added conditional logic to handle partition creation in DDLTask and DDLSemanticAnalyzer to ensure that partitions are only added if they do not exist
updated reading logic in NfsSecondaryStorageResource . java to ensure correct handling of byte data and improve readability of the input stream
[ java ] remove controlrequeststreamid from echoservicenode and basicauctionclusteredservicenode .
added support for spatial operators in the capabilities transformer to enhance functionality to support spatial operations in the WFS service
added LuceneTestCase annotation to BasicDistributedZkTest . java to address issue SOLR - 2161 that requires a fix
added preface matching logic in Http11InputBuffer . java to ensure proper handling of preface requests in the input buffer
[ java ] change the default value of isIngressExclusive to false in aeroncluster . java .
hbase - 16400 add miss hfile . block . cache . size and hfile . bucket . ioengine . cache . size
refactor JSONRecordReader to use currentRecordCount and update its value to improve clarity and maintainability of record counting logic
added a check to filter out unwanted year entries from mergedItems to improve data integrity by excluding irrelevant year entries
updated drawing colors in CacheableTextView , CellLayout , HolographicOutlineHelper , and other classes to use PorterDuff
added error handling for unsupported render method in OpenGL ES 2.0 to ensure compatibility and prevent runtime exceptions
added context handling in BackgroundProcess . java to ensure proper context management during invocation
updated the ` getUnescapedName ` method to include a database name parameter and modified related methods to include database name handling to enhance the functionality of
added connection timeout setting and changed the count field to be final in StubConnection . java to improve connection reliability and ensure count is immutable
added tests for the ` approx _ percentile ` and ` clerk ` queries in ` TestHiveAggregationQueries . java ` to ensure
updated DEFAULT _ IDLE _ TIMEOUT and DEFAULT _ IDLE _ TIMEOUT from zero to 30 seconds and refactored idleTimeout and writeTimeout
updated the method to retrieve shares by using the user ' s platform account instead of the current account to ensure accurate retrieval of shares based on the
updated type declarations for InetAddress and NetworkInterface in Inet6Address . java to improve type safety and enhance code clarity
refactor button visibility management in PlaybackControlView to improve clarity and maintainability to enhance code readability and ensure consistent button behavior across
updated the ` isPresent ` method to accept a ` long sessionID ` parameter instead of a ` Session ` object to enhance session validation by ensuring the
updated method call from ` transitiveClasspaths ( ) ` to ` immediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
change default value of useexceptionprobability to ___ _ in graaloptions . java
updated color handling for accent icons in PredictedAppIcon . java to improve visual consistency for accent icons
guac - 1386 : remove mysql dependency from mysqluser . touser ( ) .
added " centre " to the aliases of " center " and " centre " in Middle . java to accommodate additional center
added dependency injection for DirectUpload in CommonsApplicationComponent to enable direct upload functionality within the application
added space top values for leftAxis and rightAxis in BarChartActivity and modified legend positioning logic in BarLineChartBase to improve chart
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality to support additional Java ABI flavors
added operation event status status type in OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of operation event status
added debug logging and visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure proper visibility of annotations
( chore ) camel - jmsio : move startbundle and finishbundle to setup method
updated the classpath variable handling in SortedArrayStringMapTest . java to improve clarity and maintainability of the code
updated the file path for loading resources in PackageResourceLoader . java to ensure compatibility with different operating systems for resource loading
[ hotfix ] [ runtime ] fix checkstyle violation in dataset class
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to issue b / 243855320
updated error message formatting in ShouldHaveMessage . java to use escapePercent for better formatting to ensure proper handling of percentage characters in error messages
fixed - jcachemanager . geturi ( ) return null if jcachemanager . geturi ( ) return null . # 5
do n ' t log a technical exception when close a command context ( it be not really a technical exception )
reformatted ALPNClientConnectionFactory instantiation in HTTP2Client . java to improve code readability and maintainability
update entitypropertiespacket to use getbasevalue ( ) instead of getvalue ( )
updated SonosAudioSink to check if the handler is initialized before playing the sound URI to ensure that sound playback only occurs when the
increased the timeout duration of the countDownLatch from 500 milliseconds to 5 seconds to allow more time for the countDownLatch to complete
changed log level from info to debug in LightThingHandler . java to provide more granular logging for improved troubleshooting
bug 10934 : make asyncjobmanagerimpl return item to the queue for next turn ( # 10934 )
updated method signatures and message formatting in Reporter . java and ReturnsSmartNullsTest . java to enhance clarity of error messages and improve code read
changed the type of the ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to improve type safety
updated multiple module - info . java files for consistency and clarity to improve code maintainability and readability across the module structure
add check for empty physical column names in ORCPageSourceFactory to improve robustness of column name matching
added a call to mixPlay ( ) in the Engine class to ensure proper handling of audio inputs during playback
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in FinderPatternFinder and modified test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to improve
removed conditional check for leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for leadingIncludePaths
rename testMatrixVectorMultiplicationShouldUseBrackets to matrixVectorMultiplication and refactored the isVectorMatrixMultiplication method to improve method
fix : add ` ` find ' ' , ` ` find ' ' and ` ` find ' ' to the search criteria
updated the sample rate handling in DefaultAudioSink to ensure a default value is used when no sample rate is provided to improve flexibility in audio
added getter and setter methods for formula and formula text in Name . java and removed unused logger in XSSFName . java to enhance functionality
updated the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to increase the scale factor for
mondrian : fix parsing of patternfacet / states . xml and add a test for it
added a new file ` ClassPathXmlJobRegistryContextTests . java ` to implement unit tests for job retrieval in ` ClassPathXmlJob
changed the data types of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet should use consumer / advanced instead of consumer / advanced .
camel - 14263 : camel - log should use showout instead of showout to avoid reflection configuration .
refactor trace event submission to introduce a new method ` writeChromeTraceMetadataEvent ` to improve code readability and reusability by
added a check to ensure only non - canceled , non - filled , and non - rejected orders are added to the limitOrders list to improve
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout integrity and ensure correct pixel data handling
replaced instances of ` Timestamp ` with ` RubyTimestamp ` and refactored timestamp handling in ` JrubyEventExtLibrary ` to improve
added a condition to return the resource if the path ends with a slash and added a test for real path existence in WebAppContextTest to ensure
updated the constructor of ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER
updated variable names and logic for setting scroll values in JEditTextArea . java to improve code readability and maintainability by using more d
add check for null caller loop scope before set guard stage in graphdecoder .
test ( sniperjavaprettyprinterjavaxtest ) : migrate sniperjavaprettyprinter to junit
refactor URLOutputStream instantiation to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added @ Entity annotation to Mail . java to facilitate entity mapping in the database
updated default values from false to true and added a new option " includeTablespace " to enable tablespace inclusion for improved functionality
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to internal buffer data for better encapsulation
added a boolean flag to manage the reading of non - empty files in ScanBatch . java and implemented a test for JSON directory with empty files
updated failure handling in StringSubject to include custom name comparison and improved assertion message formatting to enhance clarity in failure messages when comparing strings with
added a regex pattern for matching the LIB _ PATTERN in LibUtils . java to ensure that only valid library names are processed for Cuda
replaced ` NoClassDefFoundError ` with ` Exception ` in ` JrtJavaBasePackages ` and ` PackageHelper ` to handle
hbase - 16400 add checkfssafemode ( ) method to wait on the file system to ensure that the file system be in
updated error messages in TranslatingJavacPhaseTracer . java to include class name and message to improve debugging clarity by providing more context
mng - 5353 : remove duplicate cloning of plugin descriptor in defaultplugincache
fix presence status update for contact that change their presence status .
refactor requestdetails . withresourceandparams ( ) to remove unused import
added integration test for fetching account information from the BTCE exchange to ensure that account information retrieval functionality works as expected
added mouse wheel method to VDUInput and vt320 classes to enhance mouse input handling in the application
updated library path handling in Natives . java to use a variable for the extraction directory to improve code readability and maintainability by reducing
# 1394 - deprecate columnhstore annotation and refactor deploy createproperties and deploycreateproperties
add player _ skin _ flags to glowplayers ( fixes # 786 )
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher to improve logging capabilities and streamline service creation process
fix npe when call member . getmember ( eventdata ) in mapservice . getmember ( )
replace System . getProperty with AccessController . GetPropertyAction for obtaining the OS version to enhance security by using a privileged action for property access
updated the FreemarkerFreemarker class to use a configuration file suffix instead of a hardcoded value to improve flex
updated the hashCode calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callbacks and modified variable names in ToolbarPanel . java to improve UI responsiveness during layout animations
refactor caret binding logic in StyledTextAreaVisual . java to improve clarity and consistency to enhance readability and maintainability of
added CxxBuckConfig to manage declared platforms in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenrule
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple classes to align with the latest Spring Data API changes
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added support for array type in DataUtilities . java and a corresponding test case in DataUtilitiesTest . java to ensure correct handling of array types
refactor SSL engine creation logic in SslContextFactory . java to improve handling of null addresses to ensure correct host name verification for SSL connections
replace assertEquals with assertTrue for cache hits in TestFSTableDescriptors . java to improve assertion clarity and adhere to best pract
simonstewart : do n ' t delete a cookie in the ie driver
added a boolean field ` mHasEndedLauncherTransition ` and modified gesture state checks in ` AbsSwipeUpHandler . java ` , and
added ` < meta charset = ` utf - 8 ' ' to the HTML header in ` HTMLListWriter ` to ensure proper rendering of HTML
refactor IndexReader to improve code readability to enhance maintainability and ease of understanding for future developers
increased the maximum length of statistics key prefix from 200 to 150 and modified path separator handling in multiple classes to improve performance by reducing
updated the arrowButton addition in BasicComboBoxUI and added a new class bug6337518 to address a specific bug related to JComboBox
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added content URI notifications to multiple services in CatchupPull , TimelineRefreshService , and WidgetRefreshService to ensure consistency in content URI handling
added functionality to manage the state of pressed or focused background in BubbleTextView and updated related methods in Launcher to improve UI respons
added error parameter to getFallbackResponse methods across multiple classes to enhance error handling capabilities during fallback responses
removed conditional check for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the condition
added null check for tags before accessing their length in ChannelUri . java to prevent potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS constant and modified regex patterns in RegexpUtil . java , and updated test cases in TestSqlPatterns . java
updated action bar title handling in FileActivity and added null check in FileDisplayActivity to ensure the action bar title updates correctly when the file is
updated type retrieval from ` getOnlyElement ` to ` getLast ` in ` PythonDslProjectBuildFileParser . java ` and added a
changed the schedule hour from " * " to " 0 " in CleaningService . java to standardize the scheduling period for better clarity
updated imports and modified table path validation logic in TransactionalValidationListener . java to enhance validation for partitioned tables and improve error handling
added a new file ` SnapPuller . java ` to enable polling functionality in the ReplicationHandler and SnapPuller classes to enhance
changed the type of ` generatedKey ` from ` int ` to ` long ` in ` ShadowSQLiteDatabase . java ` and modified the
reformatted the proxy assignment in SimpleReferenceCache . java to improve code readability and maintain consistency
updated error messages in various test classes to include " failed to inline " and " failed to inline " to improve clarity and accuracy of error
( chore ) camel - web - client : increase default timeout to 10 second
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed catch block from Exception to Throwable in Dispatcher . java and added try - with - resources in DispatcherTest . java to improve error handling by
camel - 16400 : camel - cxf - do n ' t support cxf _ message . thanks to michael
added a case for the ' ~ ' character in the ClientUtils class to enhance functionality for handling virtual keys in the application
camel - 16400 : camel - slack should use java . time . duration instead of long .
fix harvesting drop in blockutil . getdroppeditem ( ) .
updated layout parameters in TranscodingTab . java and modified JCheckBox initialization in TrTab2 . java to improve layout flexibility and enhance user
added a new file ` bug8057791 . java ` implementing a graphical JList check to verify that the selected cell ' s colors match the expected selection colors
refactor flag assignment logic in LambdaToMethod . java and add a new interface LambdaInterfaceStaticField . java to improve code clarity and
refactored the ` RunnerBuilder ` to use ` WebSocketMethodsFactory ` instead of ` engineMethods ` and added a new test for the
added null check for the ' to ' variable in ComposeActivity . java to avoid potential NullPointerException when ' to ' is null
modified the handling of dictionary read logic in ParquetFixedWidthDictionaryReaders . java and added a new test case in TestColumnReaderFactory .
updated layout handling logic in PortraitPagedViewHandler to differentiate between landscape and portrait modes to improve layout responsiveness
added Log and LogInterceptor classes with aspect - based logging functionality to enable logging of method - level operations for better traceability and debugging
updated the dump string in QueuedThreadPool . java to include a conditional check for the trace length to improve clarity of thread state information in
updated CacheGenerator and CacheProvider to accept Implementation as an optional implementation to enhance flexibility in handling different cache implementations
use total frame size when create reference map
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the configuration logic
camel - 16400 : camel - itest - add test case for camel - graphql
refactor test methods in RFE2891944 . java for improved clarity and organization to enhance test coverage and demonstr
replaced URL encoding with direct string appending in HttpClientIntroductionAdvice . java to simplify code and improve readability by elimin
replaced the implementation of ` unsupportedPlatformTool ` with a custom implementation of ` UnsupportedPlatformTool ` to improve code readability and maintainability
change loopCount from double to int in RecoveryStrategy . java to improve readability and precision of log messages
added ` size ( ) ` method to ` FlightConfiguration ` and implemented it in ` FlightConfigurationImpl ` to provide a way to
[ drools - 6640 ] make abstractaddressmanager test deterministic ( # 1649 )
updated COL _ SPEC and ROW _ SPEC values in VLCVideo . java and updated layout separators in FormLayoutUtil . java to improve UI
updated URLs from " bisq / bisq / bisq " to " bitsquare / bitsquare / issues " in multiple Java files to
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " / . m2 " and improved file handling in MavenCli . java and MBoot . java to
added GL _ ARRAY _ BUFFER binding in VertexBufferObjectWithVAO . java to ensure proper buffer management for rendering operations
refactor ServerHttpSecurity class for improved security handling to enhance security measures and enhance application performance
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests during development
added defaultHeaders to HttpClientProperties and implemented it in CasCoreHttpConfiguration to enhance HTTP header management by allowing dynamic configuration of default headers
add error response for invalid username or password ( # 2209 )
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the project
replaced Codec . base16Decode ( keyHex ) with Bytes . fromHexString ( keyHex ) in EngineAuthService . java to improve
updated import statements and added validation for float properties in FloatUtil . java to improve handling of float properties and ensure proper rendering behavior
planning - 203 : move planningfactcollectionproperty and planningfactproperty to planner - core - api
updated the ` getDefaultHeaders ` method to use ` MultiMap ` instead of ` Map ` for improved header handling to enhance flexibility and
refactor encoding and charset handling in ProxyServer , Realm , SimpleAsyncHttpClient , and SimpleAsyncHttpClient to use Charset instead of String to
added a method ` getJobId ( ) ` in ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced instances of ` compareTo ` with ` compareTo ` in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils . java
change log level from error to debug in defaultjdkhttpclient and jdkblockinghttpclient
updated import statements for NamedAuthenticationHandler and UsernamePasswordCredentials in LegacyAuthenticationHandlerAdapter . java to improve code clarity and ensure proper usage of
changed the visibility of the WingDings class from package - private to public to allow access to the WingDings class from other
filtermanager : only remove invalid filter from the network if they be not our own .
added a static method ` wrap ` to ` BCPGInputStream ` for creating instances of ` PGPKeyRing ` and ` PGPSecretKeyRing
replaced DataOutputStream with BufferedOutputStream for flushing and closing the output stream to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` and modified column qualifier handling in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest . java for improved focus transition handling to enhance test reliability and performance during focus transitions
replaced the import statement for GWT from the project to the Google GWT library to ensure compatibility with the latest GWT library version
added null check for ` sourceTask ` before retrieving the counter in ` CounterStatsAggregator . java ` to improve robustness by avoiding potential
added a null check for the readListener variable in HttpInput . java to ensure that the readListener cannot be null to prevent potential NullPointerException
refactor color handling in AppearancePanel to use a dedicated changeListener to improve code organization and responsiveness to color changes
updated the constructor parameter from false to hidden in TaskHelper . java to enhance functionality by allowing hidden parameters for better control
http : / / issues . apache . org / activemq / browse / amq - 2868 - failovertimeouttest should wait
pdfbox - 4892 : close file handle in ccitfactory to prevent resource leak
added import statement for DefaultParameterHandler in BoundSql , SqlSource , and LanguageDriver classes to enhance functionality by integrating default parameter handling
lsra spill optimization : only set spill state if the spill loop depth be below the def loop depth .
add a new file ` micronautastbuilder . java ` to facilitate the compilation of Micronaut scripts in
refactor ` closeInternally ( ) ` to ` closeInternally ( ) ` in ` PgResultSet ` and ` PgStatement ` classes
initialize serviceAdvisorType to a default value of ServiceAdvisorType . PYTHON to ensure a default value of ServiceAdvisorType is used for better
avro - 174 . java : use threadlocal for resolve resolver in genericdatumreader .
changed the parameter type of ` Path ` from ` Collection ` to ` List ` in multiple classes and replaced ` Stack ` with ` ArrayDeque
updated assertions in SendCoinShieldTest to use a random byte array for memo instead of a fixed size to improve test reliability by ensuring
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to enable setting personalisation based on date and
removed redundant if statements in CodeGenerator . java to streamline code logic for improved readability
removed the ` percent ` parameter from the ` scroll ` method calls across multiple classes to simplify the code and improve readability by eliminating
changed the visibility of the pointer variable from private to public and added reset methods in FlatRecordReader . java to allow external access to the pointer
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to clarify the purpose of the class related to
replaced specific imports with a wildcard import and modified type handling in CastExpression . java to improve code readability and maintainability by reducing
refactor accepts handling in AbstractResource . java to use a boolean flag for better clarity to improve readability and maintainability of the code
added a new boolean variable ` false ` in ` TaskView . java ` to control the behavior of the ` TaskView ` class
added auto - increment functionality in CreateTableChange and implemented the isAutoIncrement method in LiquibaseDataType to ensure correct handling of column types
updated errorText to provide a default value of " Command failed due to Internal Server Error " to provide clearer feedback on internal server errors
updated import statements and modified command - line arguments in LocalManagementTest . java to enhance performance testing capabilities and improve code clarity
replaced ` add ` method with ` push ` for ` toSimulate ` in ` BasicEventSimulationEngine . java ` to streamline
added support for AJP 1.13 connector in GitBlitServer to enable dynamic binding of AJP connections based on user - defined port
added type coercion logic in TransTypes . java and created a new class Intersection03 . java with assertions to ensure type safety and
renamed the class EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread before starting it to optimize thread management by avoiding unnecessary thread creation
[ gr - 38686 ] add compression option for bundle content storage .
fix ( opengl ) : do n ' t hide surface on window
updated the temporary file path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added a new boolean field ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` to multiple classes to enable configuration of node HTTP
added a service property to GoogleCloudFirestoreTicketDocument and modified ticket count logic in GoogleCloudFirestoreTicketRegistry to enable tracking of service
refactor Generate class to improve code readability to enhance maintainability and facilitate future development
updated JsonFunctions to allow nullable parameters for JSON formatting to enhance flexibility in handling null values in JSON format
updated BadgeRenderer , IconPalette , ShadowGenerator , and NotificationKeyData classes to use a boolean flag for DOTS _ ONLY to improve
removed the final modifier from the getConfiguration method in FreemarkerManager . java to allow the method to be overridden in subclasses
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest ` to ensure that invalid excluded package patterns throw
updated deviceUdid assignment logic to differentiate between mac and iphone platforms to ensure accurate identification of the simulator Udid based on the
updated logging level from error to warn and modified response handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter to improve logging clarity and enhance error
refactor script initialization and state management in AllAppsView . java to improve code clarity and ensure proper execution flow during the initialization process
added a boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to control shadow layer behavior when text is
added @ AfterClass annotation to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views after tests
added a call to ` this . parsers . get ( name ) ` in ` SecurityNamespaceHandler . java ` to retrieve the parser associated with
updated the ` fastpath ` condition in ` BoundedLocalCache ` and added a new test class ` BoundedLocalCacheTest ` to enhance
refactor ` RawConnection ` and ` RawConnection ` to extend ` WebSocketConnection ` and implement ` complete ` and ` flush ` methods to
added multiple test cases for assertions in SoftAssertionsPerfTest . java to enhance testing coverage for the soft assertions functionality
added a new constant for TEST _ FAILURES _ EXIT _ CODE and modified the ` assertExitCode ` method in ` PythonRunTestsStep `
updated the handling of xAdvances in GlyphLayout . java to include a conditional check for markupEnabled to ensure proper rendering behavior when markup is
refactor score comparison logic in TestBooleanRewrites . java to use Java Streams for better readability and performance to improve code maintainability and
update enumClass assignment to use getSuperclass instead of getEnclosingClass to ensure correct inheritance for anonymous classes
remove unnecessary cast to playerconnection in updatemanager . flush ( )
added a check to prevent redundant drawing on the DrawListener to improve performance by avoiding unnecessary operations
updated multiple Java files related to index checks , BlockTreeTermsReader , and FuzzyTermsEnum to improve code organization and maintainability
updated import statements in ReplicaAssigner . java and modified matchStatus check in ReplicaAssigner . java to include NOT _ APPLICABLE to
changed the default value of getMedia ( MEDIAPARSERV2 ) from false to true to enable media parsing by default
added support for interceptor types in BeanDefinitionInjectProcessor to enhance type - checking capabilities for method and interceptor types
added assertions and verification for existence and permission checks in FolderPermissionBase . java to ensure proper functionality and security of the TRUNCATE TABLE operation
do n ' t login the protocol provider if the registration state change
updated the random color calculation in PastelColor . java to use a constant for the color base to improve clarity and maintainability of
refactor ScriptEngineFactory methods for improved performance to enhance script execution efficiency and maintainability
refactor bitmap handling in HolographicViewHelper to utilize original and outline bitmaps to improve code clarity and maintainability by
refactor request method handling in CloudClient . java to use HttpMethod . fromString for better readability to improve code maintainability and reduce redundancy
improve multiwordpreprocessor to make it easy to infer the position of a phrase .
removed the import of IOException in IOChannelUtilsTest . java to streamline the code by eliminating unused imports
updated class loading logic in HivePassThroughOutputFormat to handle specific output format classes to improve compatibility with Hive ' s output format handling
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a check for negative length in the DOMBuilder class to ensure that the input length does not exceed the defined bounds
updated graph visibility logic in ClusteringCoefficient , EigenvectorCentrality , and HitsUI classes to improve graph representation and enhance
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region
added a new file ` InterfaceWithStaticAndDefaultMethods . java ` implementing an interface with static methods to provide a default implementation for static methods
camel - 16400 : camel - core - allow to configure key store to use property placeholder .
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor multiple Java classes related to KeyManagerFactory , TrustManagerFactory , and Policy to improve code organization and enhance maintainability
updated JGit version from " JGit 1.0 . 0 - r " to " JGit 1.1 . 0 - r "
updated clientKey assignment logic in HttpClientIntroductionAdvice . java to use a local variable to improve code readability and maintainability
int - 1412 add support for methodinvokingtransformer and testbean
increased the BACK _ FACTOR and REWIND _ TIME constants and modified duration comparison logic in ResumeObj . java to improve duration
added a method ` isScrollWheeling ( ) ` to the ` CodenameOneImplementation ` and ` JavaSEPort ` classes
updated usage formatting in UtilityCommands and modified documentationPrinter to handle command usage to improve clarity in command usage output and enhance code readability
corrected a typo in the request attribute name from " collection . map " to " collections . map " to ensure consistency in naming con
added setter methods for sequence and unsequence files in CrossSpaceCompactionResource and updated references in RewriteCrossSpaceCompactionSelector to improve code
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
refactor the needRebuild logic in ProjectPropertiesModelImpl . java for clarity and efficiency to improve readability and maintainability of the code
fix synchronization issue in abstractsootfieldref
implement custom naming conventions for elastic meter registry ( fixes # 536 )
added methods for handling controller listeners , current units , and job length estimation in IController , and TinyGController classes to enhance functionality and
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify the rendering of huge horizontal rules
replaced ` System . out . print ` with ` TTY . print ` in ` TypeSystemTest . java ` and ` PartialEscape
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability
changed the condition from checking if frameLength is zero to checking if it is less than or equal to zero to ensure proper handling of frame length
added a value variable to return the default value in IntFloatMap and IntIntMap classes to ensure that the correct default value is returned for
refactor icon setting and size handling in ImageDownloadService . java to ensure UI updates occur on the main thread to improve UI responsiveness
added a null check for registered in HandlerRegistration . java to prevent potential NullPointerExceptions during execution
removed the ` hasNextSibling ( ) ` method from multiple classes and modified return logic in ` IeNavigator . java ` to streamline the
fixed - npe in redisdistributedmapcacheclientservice when use redis client
hbase - 11373 add log message when mobfilecache be disable
refactor ColConvCCMTest class to improve code readability and maintainability
refactor variable declarations and improve clarity in Check . java to enhance code readability and maintainability by reducing redundancy
pdfbox - 4892 : use generic type in constructor , a suggest by valerybokov
replaced Float . toString ( ) with asString ( ) for JSON handling and added a new class X with toString ( ) and demonstr
added a return statement to the return statement in GenericFileConsumer . java to ensure the method exits early under specific conditions
added a Runnable to invoke the EventQueue in the Event6638195 class to ensure that UI updates occur on the Event Dispatch Thread for
updated the maximum size calculation from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxTextMessageSize ( ) ` in ` CompressExtension .
updated steeringValue calculations in TestAttachDriver , TestPhysicsCar , and TestPhysicsCar classes to adjust steer
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
replaced instances of ` java . sql . Date ` and ` java . sql . Timestamp ` with ` java . time . LocalDate ` and
update VERSION constant from 2 to 3 and modify metadata reading logic based on the version to ensure compatibility with new version and streamline metadata
added JPA dependency configuration to FlywayAutoConfiguration and created CustomFlywayWithJpaConfiguration in FlywayAutoConfigurationTests
added sorted ( ) method to ClassesImpl . java to ensure the classes are processed in the correct order
added a method to retrieve the current stable state in LauncherStateManager and implemented a wait mechanism in AbstractLauncherUiTest to improve code cl
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor memory and resource scope handling in TestCloseScope0 . java to improve compatibility with different Java versions to enhance performance and maintainability by
increased the timeout duration from 500ms to 5000ms in AdaptServerSocket . java to allow for a longer connection timeout for improved
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for Captcha functionality
added a check to update the owner of a collection in MetadataImport . java to ensure the correct owner of the specified collection is maintained during
added retry mechanism for registry cache file saving in AbstractRegistry . java to improve reliability by preventing transient failures due to transient retries
replaced ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` instantiation to ensure that the correct directory is used for tracking
fixed bug 1645849 - unusedimports should not report false positive for loop or generic type
added validation for insert overwrite on bucket partitioned Iceberg tables to ensure that insert operations do not perform overwrite on bucket partitioned Ice
updated tests to verify that legacy SAML keys are available in the default identity zone configuration to ensure the tests validate the availability of legacy SAML keys for
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java `
do n ' t send email if there be an unexpected e - mail address
refactor comment handling in CommentsParser . java to improve clarity and maintainability of comment processing logic
added IOException handling to lock release methods and introduced a new LockReleaseFailedException class to improve error management and provide clearer exception handling for lock release
updated package declaration for DataSourceInitializer from test . jdbc . datasource to test . spring . batch . test to align with the new package structure for
updated conditional logic in SpelExpressionTransformer and modified return statements in OperatorNode , LiteralNode , and MongoQueryMethod to improve code clarity
updated ByteBuddy instantiation to disable TypeValidation in MockBytecodeGenerator to improve performance by disabling type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment ` and added a new ` ErroneousAnnotations
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and MySQLTableLockTest to
refactor ` setSystemProperties ` method to remove the ` logFile ` parameter and simplify its invocation to streamline logging configuration by eliminating
automatically follow http / https redirects for identity storage
added constant SERVICE _ MAPPING and VERSION _ MAPPING in ServiceCombConstants and updated MicroserviceFactory to use EnvironmentConfiguration for setting service and version mappings
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated DB _ PATH _ REGEX and DB _ PREFIX constants and modified database path validation in BaseAndroidTestCase and GeocodeHelperTest to ensure
update return statement to retrieve unread count from HomeDataSource to improve accuracy of unread count retrieval for better user experience
renamed the method ` testVirtualThreadPoolPreview ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPoolPreview
updated the ` getAllOrder ` method to accept a ` limit ` parameter and modified the logic for limiting the number of market orders to enhance
refactor user retrieval logic to handle null cases to improve robustness by avoiding null pointer exceptions
fix localfilesystem . match ( ) to always return absolute file
added maximum dimensions for rectangle bounds in ComponentBuilders . java to ensure the instance dimensions do not exceed defined limits
added SLF4J logging and deprecated connection manager timeout settings in CommonsHttpSolrServer . java to improve error handling and provide better logging
removed unused import of ExceptionHandler in PrintController . java to streamline error handling by eliminating unnecessary code
replaced ` Optional . of ` with ` map ` for filename formatting in ` CrateType . java ` to improve code readability and
added checks for empty input and numeric input in SpellChecker . java and created a new test case in SpellCheckerTest . java to
updated the MESSAGE constant declaration in HelloWorld . java to ensure consistency in message formatting
refactor file action handling in FileDisplayActivity to use a dedicated method for obtaining the left fragment to improve code readability and maintainability
hbase - 16400 disable daemon mode in replicationhandler and log replication time and conf file on failure ( chunhui )
updated the method call syntax in StoreCachedTest . java to improve code readability and maintain consistency
renamed the constructor parameter from ` materials ` to ` theMaterials ` in ` StreamerLoader ` to improve clarity and consistency in
added " libGDX " and " core " and " core / gamepad " files to the DependencyBank . java files to enhance cl
updated recycler view pool settings for AppsContainerRecyclerView to optimize memory usage based on available height and icon sizes
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure the build process beh
fix baritone control not work for certain waypoints
added imports for ParsedNode , ParsedNodeException , ResourceAccessor , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating
added null handling functionality in FilterOperatorUtils and corresponding test cases in QueryOperatorTest to enhance filtering capabilities and ensure correct behavior with edge cases in
added validation for bootstrap method signatures in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap methods
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure
clear the formatter settings in CucumberInstrumentation . java to ensure no formatting changes occur during execution
changed the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and modified principalId assignment to enhance type safety and ensure correct
updated workspace label adjustment logic in DeviceProfile . java to ensure workspace labels are adjusted only when necessary to improve layout responsiveness and prevent unnecessary
refactor assertion messages in ReplicationFactorTest . java for consistency and clarity to improve readability and maintainability of test assertions
[ gr - 14705 ] llvmcontext . patchcontext ( ) should not throw unsupportedoperationexception during pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable the
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf with Integer . parseInt for value and value2 in VisualScoreTagTest . java to improve code readability and performance
updated error messages in ` Copy . java ` and modified file traversal logic in ` Copy . java ` to improve clarity of error messages and
refactor segment name checks to use a separate method for high - level consumer segment names to improve code readability and maintainability by reducing
added methods to handle startActivity and startActivityForResult in ShadowFragment to ensure proper management of fragment lifecycle and prevent illegal state exceptions
updated date conversion in DueDateBusinessCalendar to use current time instead of current time to ensure accurate date representation based on the current time
updated the return statement in TargetCpuType . java to include " x86 _ 64 - none - linux - android " to enable support for
added ` deleteAllFiles ` method to ` FileDataStorageManager ` and implemented file deletion in ` ManageAccountsActivity ` to improve file management functionality
updated command - line help message format in SchemaCrawlerCommandLine . java to improve clarity and consistency in command - line usage instructions
added a static method ` createSuiteDescription ` to create suite descriptions and updated equality checks in ` Description ` to ensure unique identifiers are validated and
replaced the multi - format reader hints setup with a direct barcode decoding method to simplify the barcode decoding process for improved efficiency
removed the ` sources ` parameter from the ` BuckTarget ` constructor across multiple classes to simplify the constructor and eliminate unnecessary dependencies
add unit tests for the GWCZoomContextFinder class to validate range calculations to ensure that the GWCZoomContextFinder behaves
added a dependency tracking configuration key and implemented a method to enable dependency tracking in JRubyScriptEngineConfiguration to enhance control over dependency tracking behavior during
updated the request URI check from ` getRequestURI ( ) ` to ` servletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t announce new table / keyspace if they already exist
improve performance of welcome window by use cache instead of background image
updated tuner configuration handling and buffer transfer resubmit logic in multiple classes to improve clarity of tuner configurations and enhance error handling during
added HasTests interface to AbstractShBinaryDescriptionArg and implemented it in ShBinaryRuleIntegrationTest to enable testing capabilities for sh binaries on
added a condition to include " db : hsqldb " in TestFilter . java to ensure proper handling of SQL database connections
updated return statement formatting in JavabinLoader . java to improve code readability and maintain consistency
[ gr - 11925 ] avoid unnecessary materialize hostexception ( ) call when there be no stack trace .
do n ' t export jvmci for jdk8 +
add test to ensure duplicate command handler can be resolve
[ flink - 20865 ] [ runtime ] add fine - grained shuffle mode option to stream execution environment
fix fish hook not work correctly . close # 2921
camel - 16263 : camel - ftp should use source code generate configurer to avoid reflection configuration .
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and ` GangliaMessageBuilder
added a check to return early if the list of items is empty to improve performance by avoiding unnecessary processing when there are no items
added a conditional annotation for the bean name in ZipkinAutoConfiguration to ensure that the bean is only created if it does not already exist
log4j2 - 1349 add property support to xmllayout
added functionality to remove response headers from multiple classes to allow flexible management of response headers based on request parameters
replace ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperties . java ` and add a new test class ` Test
updated return statement to use Description . getBuildRuleType instead of a hardcoded value to improve code clarity and ensure consistent usage of the method
add a scene . v ( ) . modifyhierarchy ( ) call in fasthierarchy ( ) .
added null checks for disputesPerTradeId , disputesPerDelayedPayoutTxId , and disputesPerDepositTxId
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified the ` retrieveColumns ` method to include an additional parameter
wallet : set not _ seen _ in _ chain confidence to not _ seen _ in _ chain
refactor header handling in HttpClientIntroductionAdvice to improve clarity and maintainability to enhance code readability and ensure proper header
updated file extensions and condition checks in CraftingHelper . java to ensure proper handling of JSON files and conditions during processing
hbase - 13097 log warning when close region fails
refactor length comparison logic in Credential . java to improve clarity and efficiency to enhance readability and maintainability of the code
[ java ] do n ' t wait for image to be ready for subscription .
replaced the method ` destroy ( ) ` with an ` destroyForcibly ( ) ` and added an ` InterruptedException ` parameter to improve
added Oracle support to the database check in TestDefaults . java to ensure compatibility with additional database types
( chore ) camel - mail : do n ' t try to connect to a mail store if it be n ' t connect to it
added token validation logic in Parser . java to ensure that only tokens that have more tokens are consumed are processed to maintain data integrity by preventing
camel - 16400 - camel - aws : list all the available language in the enum - start with ` ` k ' ' complete
added a method to retrieve the data file name in the Model class and updated the HMMModel initialization logic to improve code clarity and ensure
added emailDomain property and getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of the email domain for LDAP identity
added new configuration constants for request read and connect timeouts in the Configuration class to provide configurable timeout values for better control over network request timeouts
added a condition to check if myDeferredConcepts and myConceptLinksToSaveLater are not empty before executing the processDeferredConcepts method
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests in Redis for better categorization and management
added parameterized test annotations and modified the method signature in FindDeprecatedMethodsTest . java to enhance test coverage for deprecated methods with a specified type pattern
added a call to superclass . paintComponent in OverlayPanel and WaterfallPanel to ensure proper rendering of the WaterfallPanel component
removed unused imports from multiple classes to improve code cleanliness and maintainability
updated event signature handling in ` ContractEventTriggerCapsule ` and ` LogEventWrapper ` classes to utilize a new ` getEventSignatureFull
updated file filtering logic to exclude session IDs from file names to ensure that only relevant session IDs are considered in file processing
replaced clearRect method with fillRect method in MapView . java to improve drawing functionality by using background color instead of clearing
[ drools - 7 ] fix rule compilation error for invokers that do not have the invoker
removed unnecessary print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN score values in TestFieldCacheSort . java to ensure that score values are validated correctly before proceeding
updated the initialization of ` oldKeys ` to use ` Set . copyOf ( ) ` to ensure that the original ` oldKeys ` set is
added zeroTime check for stringVal in ColumnSnapshotGenerator and created a new test for date defaults in MySQLIntegrationTest to ensure proper handling of
replace ` offererMultiSigPubKey ` with ` offererBtcPubKey ` and ` takerBtcPubKey ` in ` Contract .
updated ` FunctionAllGroupHeadsCollector ` and ` FunctionFirstPassGroupingCollector ` and ` FunctionSecondPassGroupingCollector ` classes to accept
[ drools - 5330 ] fix the issue when edit a kbase session ( # 5331 )
replaced ` conf ` with ` this . conf ` in ` AbstractRecordWriter . java ` to ensure the correct instance variable is referenced
added a conditional check to return early if the modalness changes to optimize performance by avoiding unnecessary processing
added a new test method ` createFromProfileLevel ` to ` ShadowMediaCodecListTest ` and implemented a native method in ` ShadowMediaCodec
fix issue # 5460 ( when enter key use , focus be wrong )
added validation for width and height in SunVolatileImage . java and improved error handling in XRSurfaceDataProxy . java to ensure
updated the separator character from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of
replaced ` _ loops ` array with ` AtomicInteger ` in ` AsyncStressTest . java ` and ` StressTest . java `
updated AchievementsFragment and LeaderboardFragment to handle beta flavors and improved menu visibility handling to enhance user experience by providing feedback
added access , name , and desc fields to the SearchMethodVisitor class to enhance the context handling by associating access , name , and description
added sleep and interrupted handling for SQLException in IoTDBInsertWithoutTimeIT . java to ensure proper timing and handle potential interruptions during database
refactor media duration handling in DLNAResource . java to improve code readability and maintainability
[ hotfix ] [ doc ] remove unused @ xmlrootelement annotation in resequence and streamresequencerconfig
refactor transaction acquisition and retrieval methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve code clarity and maintainability by
thirdeye - 312 : remove unused keymanager / trustmanager type from thriftsource and thriftrpcclient
refactor ` PrimitiveWrapperClassConstructorToValueOf ` to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to simplify
simonstewart : do n ' t exit the keyboard if it ' s a repeat
replaced ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to standardize access specifier usage across the
refactor ` unHandled ` and ` unhandled ` methods in ` Check . java ` and add new classes ` T6199153 . java
updated variable assignments for stripes and stripe statistics in OrcInputFormat . java to ensure correct retrieval of stripes and stripe statistics based on
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs in MyhentaicomicsRipper to use HTTPS instead of HTTP to enhance security by using secure connections
added functionality to display the current version of the application using command - line arguments to provide users with information about the current version of the application
fix for bug # 3745 , bug # 3746 , bug # 3749
added keyboard configuration handling and updated rotation logic in ConsoleActivity . java and TerminalView . java to improve user experience by allowing dynamic rotation based on
changed the type of the ` hq ` from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` and added
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 16400 : camel - jbang - allow to retrieve the class name of camel - headersmapfactory from the context
updated formatting in JavaCompiler and Diagnostic classes to improve code readability and consistency
int - 171 , int - 178 , int - 178 , int - 178 , int - 178 , int - 18
updated the expected value of the method from ' i + 1 ' to ' i2 ' in ArrayFunctions . java to correct the expected value
updated script engine initialization and improved error handling in AbstractScriptProcessor and InvokeScriptedProcessor to enhance robustness and provide clearer error logging
added PGStatement support to the proxy instances in PooledConnectionImpl and created a test for it in ConnectionPoolTest to enable proper handling of
updated flushMemTables and flushMemTables to flushMemTablesAndRefreshSizeEstimates and added refreshSizeEstimates method to improve memory management
change log level from error to warn in AtomicRemainder . java to provide a less severe logging level for memory limitations
add a test for aggressive fully expire with ttl . patch by stu hood ; review by jbellis for cassandra - 16
fixed - rblockingdeque . pollfirstasync ( ) should return 1 second if timeout be zero . # 1359
removed " format " from printMap calls in JobInspectCommand . java to simplify code and improve readability
refactor Engine class methods for improved performance to enhance performance and maintainability of the code
replaced ` Stream . of ` with ` entrySet ( ) ` in ` ChildHolder . java ` to improve code readability and performance by
[ rip - 12 ] remove acl _ rcpHOOK _ accout and acl _ client _ rcpchook ( #
updated variable name from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to clarify
[ zeppelin - 5641 ] fix npe in notebookserver when interpretergroup be null
updated the expression node ' s type from ' funN ' to ' lt ' to ensure the correct type is used for expression evaluation
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
server : fix the error message when create a snapshot for a non - existent storage pool .
changed method visibility from public to package - private in ItemWriter . java to enhance encapsulation and restrict access to methods within the class
updated the Thing instance from an empty string to a test string to provide a unique identifier for testing purposes
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest ` to
replaced ` FSDirectory ` with ` RAMDirectory ` for directory creation in ` TestNorms . java ` to improve performance by using a
added a constant for mLineHeight and updated the height calculation logic to ensure mLineHeight does not exceed mDrawTextRectBuffer ' s
rename WalletAppKit . java file to improve clarity and maintain consistency in naming conventions
bugfix # 224271 , use getinitstream ( ) instead of getenginefactory ( )
refactor menu item removal logic in ChatTransportSelectorBox . java to improve clarity and maintainability of the code
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
fix npe in preferencespayload . setbsqblockchainexplorer ( ) when bsqblockchainexplorer be null
added methods to manage and retrieve and remove session attributes in StandardSession to enhance session management capabilities by allowing retrieval and setting of session attributes
added assertions to verify the presence of a plain bean in TestDbJson _ List . java to ensure that the data structure behaves as expected
updated averages initialization in MonotonicAppendingLongBuffer to use initialPageCount instead of pageSize to improve memory management by aligning averages
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and ease of future modifications
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to enable support for HSQL database in the application
rename ` UnauthenticatedHttpService ` to ` HttpService ` in ` GlowrootLogHttpService . java ` to align the service implementation
pdfbox - 4892 : set composite to non - stroke java composite , a suggest by valerybokov
removed the ` notifyAll ( ) ` method from ` DocumentsWriter ` , modified the ` close ( ) ` method in ` Documents
added methods for retrieving multiple choice options and validation constraints in UiBinding . java to enhance functionality for managing multiple choice options and constraints in the user
updated method calls to use ` toString ( ) ` instead of ` getName ( ) ` for consistency across multiple classes to ensure proper string representation of
added a boolean flag ` fullSave ` and modified error logging in ` save . java ` to conditionally update the tree based on the save
replaced the ` condition ` field with a ` Pattern ` parameter in the ` Affix ` class and added a ` seenPatterns ` map
replaced ` ArrayList ` with ` diamond operator ` in ` KrakenAdaptersTest . java ` to improve code readability and
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
updated NBJavacTrees . java for improved functionality to enhance performance and maintainability of the code
removed unsupported encoding check in VectorizedPrimitiveColumnReader . java to streamline error handling for unsupported data encodings
updated logging statements in HttpSolrCall . java for consistency and clarity to improve readability and maintainability of the code
fix metadataservice connection leak ( # 8555 )
fix infinite recursion in defaultentityqueryrepository . max _ level ( )
improve error message when changelog be not register with hub
added support for the TRY _ HARDER _ HINT in the AbstractBlackBoxTestCase class to enhance the functionality of the barcode reader
changed return type of executeCompilation and executeCompilation from int to ProcessExecutor . Result in CxxPreprocessAndCompileStep . java and added
updated the logic for setting maxEvents in ObjectStore . java to ensure that maxEvents is only set when it is greater than Integer . MAX
simplified the return statement in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability
fix a bug in entityawareworldprovider . remove temporaryblockentities ( ) .
[ wasm ] remove redundant code in intrinsificationarraycopyphase
[ java ] remove unused logger from testcoyoteadapter
removed the WantedAnywhereAfterFollowingInteraction class and updated message formatting in Reporter . java to simplify exception handling and improve clarity
added null checks for ownerAddress and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator
replaced the custom CommandComparator with a TreeMap for sorting commands to improve performance and simplify command sorting logic
chore : update java and python dependency ( # 95 )
replaced ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve clarity and consistency in property
updated the constructor of AsmLoader to accept a ClassLoader parameter to ensure compatibility with the parent class loader for loading classes
pdfbox - 2158 : be lenient / avoid npe with bad decode array ; be lenient towards font with lineto without moveto
updated the output format in Java2TypeScriptTranslator to differentiate between namespace and declaration scope to improve clarity and correctness of generated Type
updated HttpClientTest to use AbstractHandler instead of EmptyServerHandler to ensure proper handling of HTTP requests by copying the request input stream
remove unnecessary array creation in HelloInput . java to simplify the code and improve readability
hhh - 14963 fix findroot ( ) in abstractsqmpath ( )
updated package structure in multiple test files to improve organization and maintainability of the test suite
refactor image handling logic in AwtCanvas . java to improve clarity and maintainability to enhance code readability and handle different image types
[ gr - 33232 ] fix native image location for graal .
[ beam - 8470 ] remove dataflowportabilityapi unsupported class from pardotest
update mockphishingprotectionservicev1beta1impl to use poll instead of remove ( )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log a warning if the max size configuration do not allow any data in the map
update terminology from " AST " to " LST " across multiple files to accurately reflect the intended use of LST instead of AST
updated scoreable job initialization and size calculations in ThreadedAcousticScorer . java to improve clarity and correctness of score
replaced the throwing of an AssertionError with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls in ApplicationControllerFluentLeniumTest to use ` window ( ) . title ( ) ` instead of ` getServerAddress (
added a new ` makeString ` method in multiple classes to provide a default implementation for string creation in ` ParallelIterable ` , ` Rich
refactor order setting in OidcServicesManagerRegisteredServiceLocator to use a constant to improve code clarity and maintainability by centralizing the
added a ` weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related logic to include it to enhance the handling of
refactor Deflater class for improved compression performance to enhance efficiency in data compression process
added error handling for IOException in Font . java to improve robustness by throwing an IOException when a throwable occurs
added a null and empty check for content in VersionTypeBinding . java to ensure that a default version is returned when content is null or empty
removed the ` result ` variable from the ` onPostExecute ` method and simplified the ` onPostExecute ` method to improve code clarity
( chore ) camel - mail : ensure case - insensitive comparison for content type
add support for opensh private key format . relate to github # 1396
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a ` boolean ` parameter for binding and updating suggested folder names to enhance flex
replaced specific annotations with a wildcard import and modified entity retrieval in InheritanceCacheTest . java to improve code readability and maintainability while
updated import statements in ConnectOAuth2RequestFactory . java and added a user approval request method in TofuUserApprovalHandler . java to
fix influx naming convention not apply to tag value ( # 645 )
do n ' t print to stdout if no resolution be find .
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the new cookie format
added a static method ` classMetadataUnsupported ( ) ` to ` Platform ` and updated references to use it to improve code consistency and maintainability by
added clear all functionality and preferences handling in OverviewActionsView to enhance user experience by allowing users to customize task visibility based on their preferences
updated ` desiredRepoVersion ` and ` HostStackVersionResourceProvider ` to include a new ` desiredRepoVersion ` field and modified timeout values
deleted the MemoryLeakTest . java file to remove obsolete test that is no longer relevant
updated the return statement in ServletTester . java to include hostname and port based on the local host to improve clarity of the returned URL
added a check for MVDWAPI in ServerListener . java and modified settings . ENABLED _ MVDWAPI in Settings . java to
fix flakiness of abstractpartitionassignmentcorrectnesstest # testclustersizenotfoundexception
added a singleton holder for FFIProvider and implemented a method to retrieve it to improve performance by avoiding unnecessary instantiation of the FFIProvider
tika - 2261 -- add test for hierarchical file list in batchprocess
added null checks and improved null handling in MongoTemplate and MongoTemplateTests to enhance robustness and prevent runtime exceptions when saving collections
updated Position initialization to use NODE _ LIST instead of 0 for direct inputs and successors to improve code readability and maintainability by using a
added a new field ` accTradeValue ` and updated related methods in ` BithumbTicker ` , ` BithumbTradeServiceRaw
updated log messages in RealtimeSegmentDataManager to include segmentName as a placeholder and improved log message formatting to enhance log clarity and
increased the maximum number of parallel threads from 10 to 100 and modified the variable name from ` maxParallelThreads ` to ` MAX _
replace ArrayList with CopyOnWriteArrayList in FixedByteMutableForwardIndex and FixedByteSVMutableForwardIndex to improve thread safety for concurrent
renamed multiple classes related to dictionary management to improve consistency and clarity in naming conventions
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException during execution
camel - 16400 : fix unit test that fail on slow ci server
changed the condition from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java `
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in tests to increase the random number of
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in database queries
updated description parsing logic in MediaDetailFragment . java to replace " = " with " | " and refactored language code handling to improve
catch arrayindexoutofboundsexception and ClassCastException in findbugs2 . java to improve error handling and provide more informative logging
add ` withReferenceFilter ` and ` withFilter ` methods in ` ListImagesCmd ` and ` ListImagesCmdImpl ` classes to enhance
camel - 14263 : camel - jms should exclude the bridge error handler from the jms endpoint
added checks for specific conditions in OpExclusionUtils . java to ensure allOps is set to true when no ops are found for exclusion
added a return statement to the DatabaseCommand class to ensure the method returns a valid boolean value
added new Politician instances to HonestPoliticianExample . java to enhance clarity and organization of politic
[ zeppelin - 5391 ] fix check for non - blank initfile
camel - 7014 : camel - restlet - make it easy to configure component and whatnot .
removed unused import statements from SchematicFormat . java to streamline code by eliminating unnecessary dependencies
added a system property to set the maximum query length to 100Mb in QTestUtil . java and modified configuration handling in SessionState .
changed variable visibility from public to private and refactored HttpConfiguration initialization in WebServer . java to enhance encapsulation and improve code readability
updated variable names from " writeHdfs " to " kafkaSink " across multiple files to improve clarity and consistency in naming conventions
updated the logic in HiveConf to check for the presence of " spark . app . name " and improved name handling in HiveSpark
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability and maintainability by using a more descriptive
simonstewart : do n ' t allow window . restore ( ) to be use in the selenium - backed webdriver
updated method names and structure in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystem
added assertion to check if an exception message contains " entity expansions " in TestXMLEntityExpansion . java to improve error handling
updated table offset and length assignment to use bitwise operations to ensure that only the lower - bits of the values are used to prevent potential issues with
removed the customize method from DirectMethodHandle . java to simplify the code by eliminating unnecessary functionality
refactor line buffer initialization to use variable numbers for clarity to improve code readability and maintainability by reducing repetition
refactor flavor handling logic in AndroidBinaryDescription . java for improved clarity and error handling to enhance code maintainability and provide clearer
changed the buffer index from offset to i in Lwjgl11 . java to correctly reference the buffer index for rendering operations
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` to handle ` NoClassDefFoundError `
added a check to ensure the shutdown hook is only removed when the groupProperties . SHUTDOWNHOOK _ ENABLED is set to true to
updated the class name from FilterChainProxy to FilterChjainProxy and removed the URL parameter from the VirtualFilterChain constructor to simplify the
replaced ` Collections . sort ` with ` Arrays . sort ` and modified return statements in ` PercentileAggregationFunction . java ` to improve
added schema loading checks and modified MDTable assignment logic in MetaDataBasedSQLCompletionProvider . java and QueryTypeAnalyser . java to ensure
updated baseType initialization to null and added literalPrefix and literalSuffix variables in MutableColumnDataType to improve code clarity and ensure proper initialization of baseType
updated link formatting in multiple Java files to use ` @ link ` instead of ` < a > ` to improve code readability and ensure proper
[ zeppelin - 1396 ] remove redundant getinstance ( ) call in evaluatorfactory
updated configuration references from " osx : : osx - x86 - 64 " to " config : : osx _ x86 _
added sound effect handling functionality in AllAppsView . java to improve user interaction by enabling sound feedback on clicks
changed the exception type from Exception to IOException in the main method declaration to ensure proper handling of IOException during execution
added granularity feature to the left axis in BarChartActivitySinus to improve chart readability by enabling granularity
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file path handling in ContextHandlerGetResourceTest to use target testing directory instead of hardcoded paths to improve test reliability and ensure compatibility
added a ` close ( ) ` method to ` PinotClientTransport ` and implemented it in ` JsonAsyncHttpPinotClientTransport `
refactor ` SocketRemoteTest ` and ` MockAppender ` to use ` BlockingQueue ` and improve event handling to enhance thread safety and improve
[ beam - 4142 ] add check for non - directory resource
removed unused import statements from IsometricStaggeredMapRenderer . java to streamline code by eliminating unnecessary dependencies
removed duplicate unbindHandle calls in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor Config and Attribute classes for improved code organization to enhance maintainability and readability of the codebase
simplified condition checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated UI mode handling in NavbarButtonsViewController to use UI _ MODE _ NIGHT _ YES instead of Themes to improve
change error handling in PolyBenchLauncher to throw an exception instead of aborting to improve error handling by providing a clearer error message
refactor variable assignments for bootstrapMethodIndex and memberIndex in ClassWriter . java to improve clarity and maintainability of the code
added BlockFormattingContext parameter to the findBox and findElementBox methods in BasicPanel . java to enhance rendering capabilities by integrating block formatting
added a nullable ` launchedProcess ` field and a method to retrieve standard error output in ` WorkerProcess ` to improve error handling and provide better
added null check for operator and enhanced exception handling in CheckedListReplaceAll . java to ensure safe handling of null operators and improve error reporting
added a test for the write operation in SslConnectionTest . java to ensure that the socket connection behaves correctly when a connection is established
added listener registration and modified default value handling in DeviceFlag . java and FeatureFlags . java to improve responsiveness to device configuration changes and
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed the import of MalformedURIException from StandardRequestHandler . java to eliminate unnecessary dependencies and improve code clarity
[ 1.0 ] instructorfeedbackeditpage : add focus to submit button
refactor synchronization logic in KrakenStreamingTradeService to improve readability and maintainability of the code
changed System . err to System . out for ignoring Class - Path entries to improve output clarity by using standard output instead of standard error
mondrian : make sparserowmatrix random access a bit more efficient .
server : fix npe during volume deletion when poolid be null
refactor file handling logic in Utilities . java to improve clarity and maintainability to enhance code readability and ensure correct path resolution based on
[ udftestprovider ] use v26 _ 0 _ jre instead of com . google . common . collect . ImmutableMap
reset internal state before register it in memorycallgraphbuilder .
check for null multiuserchat operation set in conferencechatmanager
added a check to ensure the file is writable before proceeding to prevent illegal user actions when the file cannot be written
added folder sync navigation to the DrawerActivity and created FolderSyncActivity to enhance user experience by providing a dedicated navigation option for folder synchronization
[ hotfix ] [ test ] fix flakiness in sequentialchannelstatereaderimpltest
fix spanishtreenormalizer to correctly handle multi - word token
replaced the usage of ` reader . pointValue ( ) ` with ` getPackedValueSlice ( i ) ` in ` SimpleTextB
added LocaleRandomizer and LocaleRandomizerTest classes for generating random locale values to provide functionality for generating random locale values based on a specified seed
tika - 2592 -- add unit test for mime type detection
added " 10.0 " and " 9.0 " to the list of supported versions in Installer . java and AutoUpgrade . java
reformatted code for improved readability and maintainability to enhance code clarity and maintainability
updated the read method in Http2AsyncParser to include a default value of 0 to ensure a default value is provided when the read timeout is
increased the default WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to allow for a
updated the primary key constraint error message to include the name of the previous column to improve clarity of error messages for better debugging
added date formatting functionality to handle custom field entries in ThirdEyeJiraClient to improve date handling capabilities and ensure consistent date formatting
refactor priority generation in HeadersGenerator and PriorityGenerator to use a dedicated method to improve code readability and maintainability by reducing duplication
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and modified the scalarReplace condition in ClassTransformer . java to enforce a
added DATE _ TAKEN constant to the projectionTest and modified folderSortOrder and fileSortOrder to include DATE _ TAKEN as a valid
updated drawing operations in TexturePacker2 . java to adjust image dimensions to ensure correct rendering of images with varying dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use a non - deprecated WebSocketUpgradeFilter to improve code clarity and
added shutdown calls to validateSignService , TransactionsMsgHandler , and nodePersistService to ensure proper resource cleanup and avoid potential memory leaks
added a new ` RawJsonRequestBody ` annotation processor to handle raw JSON requests in the Swagger generator to enable the processing of raw JSON data in
added a new method ` newTarget ` to create a ` Target ` instance with specified target type and extension to facilitate the creation
updated the instantiation of ListBeanContainer to use ArrayList instead of ArrayList and added a new test class for ListBeanContainer to enhance functionality and ensure
hbase - 17400 fix flaky testmetricsregionserver testmetricsregionserver ( addendum )
camel - 16462 : cacheoutputstream should clean up temp file on completion to avoid leak
added a call to set the device ID in TeltonikaProtocolDecoder to ensure the position is properly associated with the specified device
updated the method to read the first line in HybridProjectBuildFileParser to use asCharSource instead of direct file reading to improve code
added an override for the visitAssignop method in Attr . java and created a new Test . java class with an empty operator to ensure proper
added a boolean flag ` enableAccountHandling ` and modified the ` onCreate ` method in ` FirstRunActivity ` and ` BaseActivity `
fix checkstyle issue in isochroneresource . java ( # 711 )
added a path parameter to the DrillViewTable constructor and modified related constructors to include a path parameter to enhance the flexibility of view table
update PooledByteBufAllocatorL to include default values for various allocator configurations to enhance memory allocation flexibility and performance settings
updated array type handling from double to short in ObjectInputStream . java and added a new class CloneArray . java for serialization testing to ensure correct type
added configuration for low - level IO thread pool size in HiveConf and updated executor initialization in LlapIoImpl to allow dynamic adjustment of thread
added support for RerunInitialization for Debug and SSLLogger in SecurityServicesFeature . java to enhance compatibility with different Java versions for SSL logging
updated latitude and longitude range checks in LatLonGrid and added a new test method in TestLatLonGrid to improve validation of latitude and longitude
danielwagnerhall : refactored expectconditions to use the driver instead of the ' from ' parameter
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method in ` Hive . java ` to control whether files should be replaced
added a test method ` reflector _ getOuterClass ` to the ` SomeInnerClassReflector ` class to verify the behavior of the reflector
added " auto _ generate _ android _ facet _ sources " configuration to IjProjectBuckConfig to enable automatic generation of Android facet sources
updated message handling in HubChangeExecListener to use formatted messages instead of hardcoded strings to improve readability and maintainability of error messages
added properties management and getter and setter methods in Link class , and created a test for overriding properties in QuickLinksConfigurationModuleTest to ensure proper
updated @ EqualsAndHashCode annotations in InitialConfig and added a toString method in YamlConfigFileDTO to improve object string representation for better debugging and logging
updated generic type declarations in AwaitableServerClientCallConfiguration and AwaitableServerClientCallListener to improve type safety and clarity in
updated forName methods to include CallerSensitiveAdapter and modified caller class loader handling to enhance class loading flexibility and improve caller - specific class management
updated assertions from ` isEmptyOrNullString ` to ` isEmptyString ` in ` RequestItemRepositoryIT . java ` to improve clarity and consistency
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by utilizing a
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and refactored time step definitions in TimeStepdefs . java and TimeStepdefs . java to improve clarity and functionality by
add spark _ isolated , spark _ recessive , spark _ isolated , spark _ isolated , spark _ recessive and spark _ isolated
updated RestProxyFactory to use getUri ( ) instead of ExchangeSpecification for proxy creation to enhance flexibility by allowing the URL to be passed for
removed redundant print statements from RecordGenerator . java to streamline output and improve readability of generated messages
camel - 17850 : camel - kafka : enable auto - commit for kafka consumer . thanks to joao for the patch .
removed unnecessary lock release and streamlined SQL statement output in LoggingExecutor and StandardLockService to improve code clarity and ensure proper lock management during
updated ` @ SuppressWarnings ` annotations in ` AbstractAuthorizeTag . java ` and added ` @ SuppressWarnings ` in ` AuthorizeTagCustomGrantedAuthorityTests
added synchronized keyword to methods in Database and SessionRemote classes to ensure thread safety during database operations
( chore ) camel - spring - boot - auto - configuration - maven - plugin : improve maven plugin support for nested property
updated the ticker adaptation from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct currency symbol is
( chore ) camel - core : fix checkstyle issue
updated the testId field to use a system property instead of a random UUID to improve flexibility by allowing dynamic configuration of the testId
camel - 16467 : fixed concurrency issue in defaultjobparametersconverter
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
updated height scale from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic height scaling
updated equality check in SecurityConfig and changed assertion from assertEquals to assertNotSame in SecurityConfigTests to ensure proper comparison of security strings without
set default value of ` dump - partition - id ` to false in ` StdoutSink . java ` to ensure consistent behavior when ` dump -
added imports and verification for ` UTXOSetTest ` in ` UTXOSetTest . java ` to enhance unit tests for `
[ java ] ignore unused variable name in java 9
pdfbox - 4892 : avoid npe if array be null
updated jobRestartProperties handling in JsrJobOperator and added a new test in JsrJobOperatorTests to ensure that previous restart parameters are
added a boolean field ` disallowBatchOnCascade ` to the ` DatabasePlatform ` class and its getter method to provide a way to control
refactor principal creation logic in JaasAuthenticationHandler . java to improve clarity and maintainability of principal handling
refactor core closing logic to use a separate executor for thread management to improve thread safety and reduce potential race conditions during core shutdown
added null check and visibility control for actionsView in RecentsView . java to ensure actionsView is shown or hidden when fullscreen progress
refactor parameter handling in RunIdIncrementer to improve null safety to enhance code clarity and prevent potential NullPointerExceptions
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added unit tests for the ` getMatchedDevices ` method in ` SchemaRegionBasicTest . java ` to ensure the correct number of matched devices
[ 3.0 ] fix metric collector exception when invoke metric event ( # 10727 )
modified the calculation of mSumChange in EigenvectorCentrality . java and added a new EigenvectorCentrality
updated registry port handling and improved naming conventions in multiple Java files to enhance flexibility and maintainability of registry port management
updated GeometryGenerator to use a new method for setting geometry data to improve code readability and maintainability by reducing repetitive method calls
set the amplifier of the event to 0 instead of 2 to ensure that the event ' s amplifier is set correctly for the
rename TubeCalc class to improve clarity to enhance code readability and maintainability
change default value of ` enabled ` from ` true ` to ` false ` in ` HttpClientConfiguration ` and refactor task scheduling in ` ServiceHttpClient
updated type parameters in DefaultValidator to use Class < ? > instead of Class < Class > and added validation for inherited groups to improve type safety
added a new key for headful and a timeout for the JList selection test in Nimbus L & F to address a specific issue
updated the scheduler initialization to allow a daemon thread to allow speedment applications to exit via main method completion fix # 322
remove hard - coded hyphen from version string in lexicon . getbuild ( ) .
added reflection check for type access in JavaAdapterFactory to ensure proper access control during reflection operations
camel - 16400 : added lazy session creation option to camel - mina
updated the initialization of the ` initIOContext ` method to include an ` RecordReader ` parameter and added a method to retrieve the start value
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a new method ` configurationChanged ` to manage the ` newWorkspaceRoots ` set and modified file handling logic in ` FileStore ` to
added error handling for session callback registration and unregistration in PackageInstallerCompatVL . java to improve robustness by preventing crashes due
removed " src / test / apache / lucene / index / index . cfs " and " src / test / lucene / index
[ hotfix ] [ runtime ] fix flaky akkarpcserviceutils # createandstart ( )
added a conditional check for retry in TestExportSnapshot . java to set the maximum number of attempts for mapreduce to improve stability by prevent
pdfbox - 4892 : use ` ` font - specific ' ' instead of ` ` font - specific ' '
added a new file SslConnectionTest . java to test SSL connection behavior to ensure that SSL connections are properly closed after being filled
added validation for IPv4 and IPv6 addresses in InetAddress . java and NetworkInterface . java to ensure only valid IPv4 and IPv6 addresses are
added a new test method ` testDateSerializationInCollection ` to ` DefaultTypeAdaptersTest . java ` to ensure correct serialization of dates in
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
nifi - 12241 : fix npe in putdatabaserecord . getsql ( )
adjusted the loop condition in TableOutput . java to correctly calculate the maximum width based on the current width
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated priority assignment for formatting strings in FormatStringChecker . java to ensure correct priority is used when formatting strings with parameters
[ java ] ignore non - final loop variable in a for - each statement .
updated PDFExporter and PDFExporterTest to use Java . gexf instead of Les Miserables . gexf and Java .
added unit tests for LdapUserDetailsMapper to validate role attribute mapping behavior to ensure correct handling of role attributes in the LDAP user details mapper
add ldap . read . timeout to ldapconfiguration to allow custom ldap connection timeout
refactor TestDescription class for improved organization to enhance code maintainability and readability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable related to avoid
added a condition to check if the state callback is invalidated in the gesture handling logic to ensure that the gesture is only processed when the handler is
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex variables in Workspace . java to adjust the maximum distance for folder creation and improve
updated configuration handling in OciConfigConfigSource . java to utilize ConfigProviderResolver instead of ConfigProvider to improve flexibility in configuration management
updated Testjsig . java for improved test coverage to enhance reliability and accuracy of test cases
make mana tablet , mana ring , terra pick , mana ring , and terra pick . also fix mana mana
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress unnecessary serialization warnings
refactor the validation logic in DataRegion . java to improve clarity and error handling to enhance code readability and maintainability while ensuring proper
[ jdk21 ] remove test for parenthesized pattern ( remove in jep 441
updated error message formatting in ComparableSubjectTest . java to improve clarity of error messages for better debugging
updated import statements and modified XML content handling in StreamHelper . java , and added a new TestStreamHelper . java file to enhance XML processing
updated size validation and improved array size handling in Int2ObjectCache . java to ensure proper array capacity and enhance object comparison functionality
updated security filter chain sorting in WebSecurityConfiguration and added a new test for order on bean definitions in WebSecurityConfigurationTests to ensure correct ordering
removed the TimeInForce . GTC from the OrderType parameter in the BinanceTradeService class to simplify the method signature by removing unnecessary
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to improve code reusability and
updated KEY _ SEP character from ` \ 0 ` to ` \ t ` in RocksDBBuildInfoStore . java to ensure proper
( chore ) camel - jms : allow to get component documentation and schema for camel - activemq
added error handling for retrieving the bound value in SourceUtils and created a new test class TestGetBound to improve robustness of bound retrieval and
refactor LeafFilterFactory to use a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
added a check to ensure the originalArtifactName starts with the SCOPED _ TARGET _ BEAN _ PREFIX before extracting it from the artifact name
refactor certificate handling in HttpsSegmentFetcher to iterate over available certificates to improve robustness by ensuring all certificates are processed before reading them
updated the default boolean value retrieval and added a new DnsFallback class to improve handling of default values and add a test case for DNS fallback functionality
ww - 3990 add exception when tag can not be write
changed the type of the ' success ' field from boolean to String and added a new URL property to improve data handling by associating success with
replaced the ` drop ` method with a ` try - finally ` block in ` WindowsSecurity . java ` to ensure proper resource management by
removed " phone " from the scope in CommonOAuth2Provider and related tests to simplify the scope configuration by focusing only on the email
replaced the ` submit ` method with a new ` Start ` implementation and added a ` CountDownLatch ` to manage selector updates to improve
added new values for hue and saturation in WLedBindingConstants and modified sendGetRequest in WLedHandler to ensure accurate color color representation and
replaced the method ` isValidCaller ` with a constant ` VALID _ CALLERS ` in ` VectorizationProvider . java ` to improve code
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to enable handling of JSRInst instances in the switch
add transaction management to subscription activating subscriber ( # 5338 )
refactor DBMSProcessor to use StringBuilder for SQL update statements instead of TRUNCATE tables to improve code readability and maintainability while handling
updated elevation handling in ContactItemInflater to improve UI responsiveness on devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` for clarity to improve code readability by using a more descriptive variable name
replaced direct access to ` Files . readAllBytes ` and ` Files . write ` with ` AccessController ` for privileged actions to enhance security
refactor GroovyParserVisitor , GroovyPrinter , and GSpace classes to improve the handling of binary operators and their contents to enhance code clarity
updated the warning log message to include the exception type and class name to improve clarity of error messages for better debugging
refactor character handling in RecordInputStream , UnicodeString , and Test classes to improve code clarity and ensure correct handling of compressed characters
# 1518 add test for download file with ø in name ( # 1519
replaced RuntimeException with CancellationException in AsyncResource . java and added cancellation checks in FingerprintScannerSample . java to improve error handling and provide
added a null check for statistics before calling handleCache to avoid potential NullPointerException when statistics is null
updated MongoTemplateTests to include a new test method for removing an object from an explicit collection to improve test coverage and ensure proper functionality of the
update copyright year to 2022
[ beam - 13434 ] fix typo in coder . tostring ( )
added a new boolean variable and refactored scroll - related methods in RecentsView and PagedView classes to enhance scroll behavior and manage visibility state of the clear all
added a new constant COMMON _ HMS _ PROPERTIES and refactored parameters handling in HiveIcebergMetaHook and HiveIce
added a new method ` isAddressInUse ` to check if a message contains an already in use address to improve error handling by distinguishing between
added a line to the argument list in TestNestmateAttr . java to ensure the test class path is correctly configured for execution
replaced logging with verbose _ schema in Grep . java to improve clarity by using a more descriptive variable name
[ java ] remove dependency on lifecyclebase and fix checkstyle issue
# 1190 - enh : add support for nested use savepoint ( # 1191 )
replaced ` fetchSize ` with ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated its usage in ` QueryDataSet
[ java ] use noop idle strategy instead of backoff idle strategy .
refactor HttpClientIntroductionAdvice to use a separate handleBlockingCall method to improve code readability and maintainability by reducing
added functionality to retrieve and set the HDP _ VERSION configuration in SliderAppsViewControllerImpl to ensure the application uses the correct HDP
added a new field ` loaderClass ` and ` loader ` and modified the ` close ` method in ` JavacProcessingEnvironment ` to
added DeepCloner functionality to manage deep cloning of parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to
added binding for stack trace visibility in ResourceBase . java to disable stack trace display for debugging purposes
added a check for JSType type in NativeObject . java to return null if the object is an OBJECT type to ensure proper handling of non -
replaced references to ` sun . jvm . hotspot . types ` with ` org . jvm . hotspot . types . OopField
updated serialization methods to use ` PublicKey ` instead of ` RSAPublicKey ` and added support for additional key types in ` JwkKeyList
useonlywritablebootimageheap instead of spawnisolates ( )
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean unsupported features
removed unused import of OrderClassLoaders in MavenPluginCollector . java to clean up the code and improve readability
added ` getOwnerAddress ( ) ` method to ` Actuator ` and updated its implementation in ` CreateAccountActuator ` , ` TransferAct
http : / / issues . apache . org / activemq / browse / amq - 2296 - add a main script to
update sendCommand calls to handle min and max values for ZCOUNT , ZREVRANGEBYSCORE , and ZREVRANGEBYSCORE
update protobufannotationserializer to handle empty edge with empty index .
[ java ] use ` ` remove ' ' instead of ` ` contains ' ' .
remove conflict badge when conflict be solve
replaced Iterator with generic type parameters in ExecutionContext and related classes to enhance type safety and eliminate unchecked cast warnings
replaced instances of ` StrUtils ` with ` org . apache . solr . common . strutils ` in multiple filter factory classes to standard
added driver properties for " remarksReporting " , " mysql " , and " useInformationSchema " to enable support for additional database types
updated the constructor of MethodInterceptor to include a handler parameter and added a serialVersionUID for deprecation warnings to enhance flexibility in handling mocked methods during
( chore ) camel - core : use system . currenttimemillis ( ) instead of date . currenttimemillis ( )
[ hotfix ] [ table ] wrap class loader in executioncontext
added onBufferChanged method to TerminalView and updated buffer handling in TerminalTextViewOverlay to improve responsiveness to buffer changes in the terminal
reformatted code for improved readability and maintainability to enhance code clarity and ensure proper process of configuration files
refactor freeze handling in OperationActions and add a disabled freeze operation in OperationRegistry to improve clarity and functionality of the freeze operation implementation
added insecure trust management functionality in TlsConfig and updated TlsUtils to utilize it to enhance security by allowing the use of insecure trust
refactor the handling of source and class paths in JavadocTool . java and add a new class T7091528 . java to improve
replaced ` nodeColumns ` with ` edgeColumnsGDF ` and added a new ` EdgeColumnsGDF ` class for handling edge identifiers
added cascade to DefaultUserInfo annotation in DefaultUserInfo . java to ensure that all entities are persisted in the database
replaced hashCode ( ) method with equals ( ) and hashCode ( ) in Message . java to improve equality comparison and ensure proper hash code generation
updated ISO - 8859 - 1 header and body in AsyncProvidersBasicTest . java to ensure proper encoding of special characters in the response body
[ hotfix ] [ test ] remove unused method in rocksdbSerializedCompositeKeybuilder
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` SubjectDomainCombiner ` to check static permissions to enhance security
add null check for recipe handler in recipehandlerbrewery , recipehandlerelventrade , and recipehandler floating flowers ( #
refactor parsing logic in Parser . java to improve readability and maintainability of the code
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to improve user
added a new file ` Issue596 . java ` to implement a server feature for handling unexpected requests to address issue 596 by ensuring that
updated bitwise operation for bit manipulation in NodeBitMap . java to ensure correct handling of bit values within the range
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
replaced the ` gitBashConfigValue ` with ` useStdIn ` in the ` ConsoleUIService ` class to simplify input handling
replaced Mockito assertions with TestAccountManagerCallback in ShadowAccountManagerTest . java to improve test clarity and maintainability by using a
replaced the private declaration of enclosingType with a direct call to wrapped . getEnclosingType ( ) to streamline the code by elimin
rename method names from ` getProperty0 ( ) ` to ` property1 ( ) ` and ` concatSeparator ( ) ` in ` Pairs
nifi - 10590 remove timeout from putallcallable # set ( )
[ rocketmq - 5370 ] fix npe when consumer be empty or not ( # 5371 )
[ java ] generate source identity when create a driver .
added a new file ` TopTabAction . java ` to implement the ` Presenter . Toolbar ` interface to provide a customizable toolbar
camel - 16400 : camel - dynamic - router - add support for reactive executor ( # 5373 )
updated import statements in AggregateItemReaderTests . java and removed the TestCase from the test class to simplify the test structure and improve readability
updated the constructor of ` $ { valueTypeCap } Procedure ` to include a generic type parameter to enhance type safety by specifying the generic type for
added functionality to retrieve and display the count of wikidata edits in AchievementsActivity and updated references in NetworkingModule to
added a validation check for the length of short . MAX _ VALUE in OfflineSorter . java to ensure that the length is within the valid range
added a new BugAccumulator instance and modified related logic in DumbMethods . java to improve handling of minimum value scenarios and ensure accurate reporting of
refactor CategoryDataset , CategoryRangeInfo , DefaultCategoryDataset , DefaultIntervalCategoryDataset , and SlidingCategoryDataset classes to improve code organization
updated InvalidTopologyTemplateException to include acceptable values for credential type validation to improve clarity of error messages for better debugging
updated random number generation logic in TestVectorUtil . java to ensure adequate float values for each iteration to improve variability and prevent
changed the return type of the ` compareBy ` method from ` int ` to ` long ` in ` DateUtil . java ` to improve
added SSL property handling in TestUtil . java and updated assertions in PGPropertyTest . java to ensure SSL configuration is correctly verified during tests
danielwagnerhall : disable safebrowsing when download dmg file
added null check for oldConfig before cloning it in BaseMotorMount and RecoveryDevice to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper resource rendering behavior when transcoding is disabled
modified return values in DataTable . java and added empty list check in TableDiffer . java to ensure proper handling of empty lists and prevent potential
added a new static string ` CustomIgnoreTag ` and modified the logic in ` RobustJavaMethodParser . java ` to exclude it from
( chore ) camel - jdbc : use optimisticlockingexception instead of generic runtimeexception
fix beandefinitioninjectprocessor to not require reflection for private method
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added custom onInsetsUpdated method to enhance UI behavior and improve
deleted the ClusterNodeInfo . java file to remove unused code to streamline the project
modified return statement in ShieldedTransferActuator . java to ensure consistent return behavior
added debug output for ciphersuite selection in ServerHandshaker . java to enhance visibility into ciphersuite selection for easier debugging
updated template selection logic in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle multiple templates to improve user experience
added handling for duplicate nodes with labels in ImportContainerImpl to improve error reporting and prevent duplicate entries in the import process
added a new file R2303044ListSelection . java that implements a list selection test to demonstrate the functionality of selecting
[ java ] check client timeout before register a publication to avoid duplicate publication registration .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerException when mWorkspace is not initialized
added a test method to verify the behavior of the ` compound ` property in ` StepScopePlaceholderIntegrationTests ` to ensure that the ` Step
refactor row count computation in StatsRulesProcFactory to use a local variable for clarity to improve code readability and maintainability by redu
added path and path validation logic in SpringBootDocBuildTemplate . java and modified parameter handling in DocUtil . java to improve path handling and
updated logger initialization to be final and refactored action handling in NotificationManager , NotificationServiceImpl , and SystrayActivator to improve
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the ` createBuildEngineDelegate ` method to
improve error message when json parse fails
added a debug flag to the log statement in WidgetsModel . java to ensure logging occurs only when DEBUG is enabled for better performance
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test for discount overlaps in TestSimilarityBase . java
added checks for the presence of the ` send ` method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests `
added exit and quit methods to Global . java and removed it from ScriptingFunctions . java to streamline exit and quit functionality by elimin
[ hotfix ] fix checkstyle violation in loanbrokersharkdetector
rename method names from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve method naming consistency and clarity
server : fix npe in vmware context when request cookie be miss
updated authority assertions in ResinAcegiAuthenticatorTests to ensure consistency in authority validation
eckey : use 32 byte instead of r and s in bigintegerToBytes ( ) .
update fml . disabledmods to fml . modstates instead of fml . disabledmods
refactor account selection logic into a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by reducing duplication
improve error message when connection to the client fails .
added error handling for unexpected empty simulation results in ValidatorContractController to improve robustness by throwing an exception when the result is unexpected
updated TexturePackerFileProcessor to handle null root cases to improve robustness by preventing potential null pointer exceptions
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 570 - add
updated TARGET _ MB and WINDOW values in TestRefprocSanity . java to optimize memory allocation for better performance
added null checks and error handling for ` currentConsole ` in ` EditorConsole . java ` to prevent potential ` NullPointerException ` when ` currentConsole
set credential refresh delay to 100ms in KinesisConfigUtil . java to improve user experience by allowing more time for credential refreshes
refactor dialog creation to use a dedicated method for displaying info alerts to improve code readability and maintainability by reducing duplication
updated the ` test ` method to include a ` pack ` parameter and added a package argument in the ` test ` method to enhance clarity
updated Java version from 1.7 . 0 _ 60 and 1.8 . 0 _ 31 to 1.8 . 0 _ 31 and
simplified import statements and added dependency validation in PluginBundleManager . java to improve code readability and ensure dependencies are only added if they
added functionality to manage multiple ZipFileInputStream instances in ZipFile . java to ensure proper resource management and prevent memory leaks
rename datamatRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in naming conventions
added logic to run active and idle sequence generation in SequenceGeneratorSource . java to ensure proper handling of temporary idle states during sequence generation
[ hotfix ] fix typo in blobserver gettest
replaced ` findAny ( ) ` with ` findFirst ( ) ` for retrieving annotations from ` AnnotatedDelegate ` and ` SyntheticAnnotated `
added support for additional architectures " ppc64le " in Bits . java and ByteArrayAccess . java to ensure compatibility with additional arch
updated RuntimeException message in RoboMonitoringInstrumentation . java to include a link to issue # 4736 to provide clearer guidance for resolving
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES to improve timeout handling for transaction retries
replaced instances of ` Date ` and ` OffsetDateTime ` with ` Instant ` in ` DateUtilTest . java ` to improve date handling
refactor BytesRef class to improve code structure to enhance maintainability and readability of the code
added a toast message to inform users when YouTube Player doesn ' t work on Lollipop yet and wait for updates to Google to
added checks for unterminated SQL strings in the parser to ensure proper error handling for SQL syntax errors
added a null check for mVibrator before proceeding with vibration checks to ensure that vibration functionality is only performed when v
updated table border and column background color in DotRenderer . java and modified arrowhead and tail handling in DotRenderer . java to improve the visual
added a new method ` isEncodedPar ` to check for encoded Pars in ` HiveConf ` to facilitate the detection of
pdfbox - 2852 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved clarity to enhance maintainability and readability of the code
add support for wavefront uri prefix ( # 3903 )
updated image loading methods to use NetworkedCacheableImageView and added new constants for background and cIRCLE to improve image handling efficiency and
removed the ` view ` parameter from the ` LauncherAnimUtils . ofFloat ` method calls across multiple classes to simplify the method signature and
added ` gdxControllersVersion ` to ` BuildScriptHelper ` and modified controller version handling in ` DependencyBank ` to ensure compatibility with different
refactor LaunchedURLClassLoader for improved URL handling to enhance performance and maintainability of the class loading process
updated DataSourceHealthIndicator to use DataAccessUtils for query execution to ensure proper handling of single results and avoid errors with incorrect column count
[ ds - 3952 ] add no - cache header to layout tag ( no cache )
updated warning message formatting to include Locale . ENGLISH to ensure consistent message formatting across different locales
updated the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility by allowing custom analyzer usage
updated copyright year in multiple files to reflect the current copyright year to ensure compliance with licensing requirements and provide accurate copyright information
refactor MainTest . java to improve code readability to enhance maintainability and facilitate future development
refactor TypeContributions class to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector for processing
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request
removed the isTypeMatch method from AbstractConfig . java to simplify configuration handling by eliminating unnecessary checks
added timestamp and correlationId handling in the offer method in SessionDecorator . java to enable tracking and management of session timestamps during publication operations
rename method names from trustAllXForwardedRemoteAddressResolver to trustAll and maxTrustedIndex in XForwardedRemoteAddressResolverTest to improve cl
added a new annotation ` NoBootstrap ` and refactored the ` buildBootstrapStaticBlock ` method in ` BootstrapInserter ` to
hbase - 16400 tabledescriptorchecker should use default value for maxfilesize and flushsize ( chaoyu tang )
updated variable names and logic in BranchGraphServlet . java for clarity and consistency to improve code readability and maintainability by using descriptive
added InvocationTargetException to the main method and invoked SwingUtilities ' s invokeLater method to ensure proper handling of InvocationTargetException during execution
added a new constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine `
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed the call to markAsDone in HttpProtocol . java to streamline the code by eliminating unnecessary method calls
added import for TezConfiguration and initialized default configuration in TezConfigurationFactory to enhance configuration handling for improved data processing
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional check for visibility in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check for recentSounds and implemented a forget method in OpenALSound to improve robustness by preventing null pointer exceptions when
improve handling of position discontinuity in simple baseplayer
added decimal formatting for decimal precision in NumberAxis . java to improve number display precision for better user experience
refactor TargetGraphAndBuildTargets to use factory methods instead of builder patterns to improve code readability and reduce boilerplate
removed the ` IndexFileNameFilter ` class and simplified file name checks in ` IndexWriter . java ` to simplify code by eliminating unnecessary
allow ladders to be check against the entire entity ' s collision bounding box for ladders instead of just the texture stitcher
added compression level parameter to the ` ApkBuilderStep ` and ` SignedJarBuilder ` classes to enhance flexibility by allowing different compression levels
added a test to verify that static fields are included in the jar in MirrorTest . java to ensure that static fields are correctly included in
added support for BYTES data type in FieldSpec and MetricFieldSpec classes to enhance data handling capabilities and improve code clarity
updated string concatenation in AssertJMultipleFailuresError and modified assertion messages to include a newline to improve readability of error messages for better debugging
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and added a
added CacheManager dependency and updated cache update logic in SpringDataJPAJoinFetchPaginationTest and ForumService classes to improve cache management and
update pronunciationmodel to use locale instead of german . pronunciation . featuredefinition . file
added null post body handling in SimpleHttp and updated test cases in TestHttpPlugin to ensure proper handling of null post requests and improve test coverage
refactor ClientSideSlb to use a cached thread pool and shutdown the OkHttpClient executor service to improve resource management and ensure proper shutdown of
updated v2 calculation logic in TextureRegion . java to differentiate between flipy and non - flipy textures to ensure correct rendering of
improve error message for unknown property on discovery strategy
replace final declaration of contextPath with a variable and provide a default value if null to ensure contextPath has a valid value to avoid null pointer
[ drools - 1352 ] fix the issue of the reinittypes ( ) method in kie - container . ( # 3
added serialization header for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined a default value in SerializationHeader
added precompiled header handling and validation in AbstractCxxSourceRuleFactory and AbstractCxxSourceRuleFactory to ensure correct usage of precompiled
added a new ` AccWeakReference ` class to manage security context during image updates to enhance security by ensuring proper access control during image updates
removed unused imports and modified method visibility in ObjectMap , ObjectSet , and OrderedSet classes to improve code clarity and encapsulation
changed the default value of isDirect from true to false in VertexBufferObject . java to correct the logic for determining direct state
remove duplicate code for audioeffecthelptextsmap . get ( effectname )
changed the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to enable
pdfbox - 5764 : fix arrayindexoutofboundsexception in randomaccessreadbuffer
added a null check before removing the close hook from the context to prevent potential NullPointerException when context is not initialized
updated border spacing logic for folder cell layout in CellLayout . java and DeviceProfile . java to improve layout consistency for folder items and enhance visual
replaced NumberFormat . parse with a new ValueNumeric class for handling numeric values to improve code readability and encapsulate numeric parsing logic
added a conditional check for deferred authentication in FormAuthenticator . java to ensure proper handling of deferred authentication scenarios
updated argument checks from " -- module - start - ini " to " -- add - to - start " in StartArgs . java to align
added a default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when none is provided
[ hotfix ] [ runtime ] add nullability check for operatorfactory in streamnode
updated return statements in DefaultArtifact . java to include classifier and artifact ID to improve clarity and consistency in artifact identification
camel - 16400 : camel - kafka - add support for offset - rebalance when subscribe to topic .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when classpath dependencies are missing
rename gmail _ notifications _ enabled to enable _ gmail _ notifications .
doc : [ cryptokey ] fix typo ( # 95 )
updated expected message count from 125 to 25 * concurrencyLevel in LumberjackMultiThreadTest . java to accommodate varying concurrency
fix playerupdatehandler . move ( ) to check if player be dead .
[ hotfix ] [ doc ] fix typo in exchange javadoc
api : allow api key and secret key to be specify with apikey and apisecretkey
refactor switch statements in MfaProvider , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest to use conditional statements to improve code
refactor AbstractMetaDataExportMojo class for improved code clarity to enhance maintainability and readability of the codebase
added error handling for SQL integrity constraints in Hive to provide clearer feedback when attempting to drop a table that is used by a materialized view
updated the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency in naming conventions across the project
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` to provide a deprecated implementation for the ` Robo
added checks for root group in the GroupTreeView to ensure proper addition and sorting of subgroups when the group is a root group
replaced ` buildServiceNameAndSpanName ` with ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` to
updated the ` TestDynamicNumberOfGCThreads ` class to use ` baseArgs ` and modified the ` ProcessBuilder ` instantiation to improve
changed the type of ` ImmutableFlavor ` from ` ImmutableFlavor ` to ` Flavor ` in ` CxxPlatforms . java
updated SQL creation logic in CreateTable . java and modified parameter handling in CreateTableDeParser . java to ensure correct SQL syntax and enhance parameter
updated the background drawable initialization in ChatViewerFragment to set alpha to 64 to improve visual appearance by adjusting the background transparency
test : migrate ctiteratortest to junit 5 ( # 4558 )
added token . clear ( ) and result . clear ( ) methods in various tokenizer classes to ensure proper resource management and prevent potential memory leaks
add a new test file ` ASTInitializerTest . java ` to verify that the ASTInitializer class behaves correctly without crashing on block statements
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to use ` @ EnableStateMachine ` and ` @ EnableStateMachine
simonstewart : add testlocators to the selenium test suite
[ ww - 1347 ] fix stringconverter to support float . max _ value .
remove dependency on currentunitofwork . getcurrentscope ( ) . getcurrentscope ( ) .
updated touchable insets configuration in TaskbarDragLayerController . java to ensure correct touch behavior for UI elements
removed the check for the ' ~ ' character in FencedCodeBlockParser . java to streamline the code by eliminating unnecessary
added socketTimeout property and its usage in ConnectionFactoryImpl and BaseDataSource classes to allow configurable timeout values for socket read operations
increased sleep duration in ElementAttributeTest . java to improve test stability by propagating exceptions
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability to enhance maintainability and facilitate future feature additions
added URI and Path parameters to AsyncFileImpl and improved error handling in AsyncFileImpl to enhance robustness of file operations and ensure proper
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine to indicate that the class is stable and should not be sub
cloudstack - 7898 : fix npe in nuagerevspmanagerimpl ( # 7898 )
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its implementation to improve clarity and consistency in handling failed uploads
updated Java version constants and method calls in ConstantPoolTagTests . java to ensure compatibility with Java 9 and improve code clarity
add support for recompile with - xlint and recompile with - xlint
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to clear all header entries to enhance functionality by allowing users to
replace Vector with List for better performance and type safety to improve code efficiency and maintainability by using a more modern data structure
updated the default value of the GRID _ COLUMN from 4.0 f to 3.0 f to improve the visual representation of the grid
added a condition to check if ` forViewCreation ` is false in ` CalcitePlanner . java ` to ensure that the table is
updated date pattern and assertion logic in TestHS2HttpServer . java to improve accuracy of date validation and enhance test reliability
added error handling for the asObject method in GraphPrinter . java to improve robustness by preventing application crashes due to unexpected exceptions
updated the driver from IE to FIREFOX and added a new method for checking access to access pages with an insecure SSL certificate to enhance
updated byteOffset calculation in ByteBlockPool . java and added a test for exceeding BYTE _ BLOCK _ SIZE in TestByteBlockPool .
changed the visibility of ` firstEncoder ` and ` secondEncoder ` fields from static to instance variables in ` InteractionValueEncoder . java `
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 539 .
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings for the class
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class hierarchy by removing unnecessary dependency on
add a confirmation dialog to save changes and return to the main window if the file have change .
added response type validation and improved error logging in OAuth20DeviceCodeResponseTypeRequestValidator and NexmoSmsSender classes to enhance security
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to enhance data integrity checks during buffer operations
hbase - 17400 mapreduceutil . inittablemapperjob ( byte [ ] , class < ? extends inputformat > ) should
updated the append method in AbstractJRubyMojo to include testClasspathElements instead of testClasspathElements to ensure the correct classpath elements are
sulong : allow access to non - impl language to polyglot . eval . no _ lang by default .
added deprecation warnings and validation for the reserve commit duration in ReplicationHandler to ensure compatibility with Lucene 7.1 and above by enforcing the
changed variable names from ` cacheVariableName ` to ` cacheForeignKey ` in the DIHCacheSupport class to clarify the purpose of the
replaced ` long [ ] ` with ` Object [ ] ` for generating key pairs in ` ECKeyPairGenerator . java ` to improve type
[ flink - 13502 ] [ runtime ] fix suspension of job in restarting
replaced the static instance of ` RotationTouchHelper ` with a direct instantiation of ` RotationTouchHelper ` to simplify object creation and
refactor ` UniFiControllerCache . java ` to use ` UniFiPortTable ` for improved handling of port
updated variable names from ' lwp _ id ' to ' unique _ thread _ id ' across multiple classes to improve clarity and consistency in
updated offer management logic to check for existing offers before adding or removing them to improve stability and prevent duplicate entries in the offer book
use constant for default tl protocol in test
updated MockitoMethodInvocationControl and SystemClassUserTest to handle different mock types to improve flexibility in mock interception behavior for different mock
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple classes to enhance exception handling by
replaced import of DisplayUtils with a method call to put an OCFile to streamline the intent handling by eliminating unnecessary imports
added error handling and file management methods in StoreDirect and StoreWAL classes to improve resource management and provide clearer error messages during file operations
added screenshot task handling in AbsSwipeUpHandler . java and refactored stopSwipePipToHome method in SystemUiProxy .
added hidden property and getter and setter methods in LiquibaseCommandLine and CommandArgumentDefinition classes to manage command argument visibility for improved command
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to align with the new configuration requirements for
[ geos - 7640 ] make styleinfo . getsld ( ) accessible from the style group
added security checks for malicious intents in InstallShortcutReceiver and updated method signatures in Launcher to enhance security by ignoring potentially malicious int
added getId ( ) and setId ( ) methods to TideMapLoader , TmxMapLoader , and AnimatedTiledMapTile classes
refactor Manager class methods for improved performance to enhance efficiency and maintainability of the code
updated JDBC connection to include version specification in SessionExample and SessionManager to ensure compatibility with version 0.13 for better session management
added schema and includeSchema properties to the LiquibaseGenerateChangeLogMojo class to enhance the functionality of the Liquibase
replaced ` putIfAbsent ` with ` put ` in ` JmxRegistry . java ` to ensure that the existing channel is not added to the
phoenix - 1772 : add log for single benchmark failure ( # 1773 )
changed the visibility of the doPutRecord method from final to package - private to allow overriding of the method in subclasses
fix file selector to work correctly on window
added multiple test cases for handling response content in FastCGIProxyServletTest . java to improve test coverage and ensure proper handling of response content
added a startService call to MarkReadService to enable handling of read interactions for improved functionality
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when lintClassfile is present
added logic to set a default SMTP port based on the configuration of the server ' s port to ensure a default value is set for the SMTP
added retry mechanism for SSLFactory reloading in TlsUtils . java to enhance reliability and prevent server crashes during SSL factory reload
updated date format from " yyyy - MM - dd ' T ' HH : mm : ss ' Z ' " to " yyyy - MM -
updated the assertion message in SpyingOnRealObjectsTest . java to clarify the reason for the private class not visible to Mockito
added functionality to check if the line ends with a line ending with a br tag in InlineBoxing . java to ensure proper handling of line
updated filePathString assignment to handle null parent cases to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection from TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor input stream creation in NinjaServletContextTest . java and add a new test for multipart form data handling to improve code readability
added a property " management . endpoints . web . exposure . include = * " to the AbstractCasEndpointTests class to enhance security by
added a check to ensure the current graph is a dynamic graph before proceeding to enforce that the current graph is valid and prevent runtime errors
add @ scopeone . value ( ) and @ scopeone . value ( ) to enable eager initialization of bean
camel - 16400 : camel - jsonpath - add option to suppress exception in json path expression .
refactor ControllerLeaderLocator instantiation in HelixServerStarter . java to improve code clarity and maintainability
updated usage instructions from " java " to " clhsdb " and " hsdb " across multiple files to provide clearer guidance for
refactored the configuration of the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` to improve clarity and
[ beam - 8470 ] remove deprecate write class in sinkoutputformat and writesinkitcase
updated ShadowAccessibilityManagerTest to use accessibility manager instance instead of direct access to improve accessibility management and ensure proper functionality through testing
add flutter _ notification _ go _ id to analytics . group _ display _ id ( # 1188 )
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple files to simplify the class hierarchy by removing unnecessary dependency on
refactor ` EnumDataTypeHelper ` instantiation in ` PostgreSQLDatabaseConnector ` and create a new class ` PostgreSQLEnumDataTypeHelper ` to improve code
updated the log path comparison in LogFileTests . java to ensure compatibility across different operating systems
updated method names from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple classes to reflect the new functionality
added error handling for unsupported operations in HiveMetaStoreClient . java to ensure that dropping index tables does not throw exceptions
added a check to disable scrolling when visibility is not VISIBLE in RecentsView . java to improve UI responsiveness by disabling scrolling
added a condition to highlight syntax highlighting for non - Windows operating systems to ensure proper syntax highlighting for non - Windows environments
add ` ` hrs _ request _ parameter _ to _ http _ header ' ' and ` ` xss _ request _ param ' '
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` for file paths in ` HadoopPinotFS
corrected a typo in the method call to removeCaptureListener to ensure proper functionality of the listener removal process
changed the state of _ metaDataComplete from true to false to ensure that the metadata process completes successfully
modified the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for task removal to improve performance by
added support for the " PLATFORM " and " RELEASE " flavor in the JsBundleGenrule class to enhance the build process by
updated type casting logic in Lower . java for better handling of primitive types and added a new class T6500701 . java with a
added unit tests for crlf new lines in comments and javadoc in AddImport . java and refactored imports in AutodetectGeneral
added hub mode configuration to AbstractLiquibaseChangeLogMojo and implemented it in AbstractLiquibaseMojo to enable custom
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code logic and improve readability
added checks for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to improve error handling and
replaced reflection - based method retrieval for setting the indexer thread pool in LuceneTestCase . java to simplify the code and improve readability
updated the phone number format in the address assignment from " sms : / / " to " sms : / / " to ensure the correct phone
added a copy method to MapJobExecutionDao to ensure that the original JobExecution remains unchanged during persistence operations
added a new file DownloadTest . java to implement a GdxTest class for image uploads to enable testing functionality for image upload functionality in the
updated language handling in multiple classes to ensure consistent language normalization to improve code clarity and maintainability by standardizing language representation
updated exception handling in GenericUDFRound to use UDFArgumentTypeException instead of UDFArgumentException to improve error messaging and provide clearer context for argument
updated version handling logic in ManageDependencies . java to include null check for selectedVersion to ensure robustness by avoiding potential null pointer exceptions during
added multiple AntPathRequestMatcher entries in SecurityConfig . java to enhance security configuration by allowing requests for specific styles , scripts , and Roboto
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to check for class elements before processing to improve robustness by ensuring only valid concrete classes are processed , preventing
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
changed constants from ' final static ' to ' static final ' in OpenWebNetEnergyHandler and OpenWebNetThermoregulation
remove unnecessary check for socketstatus . timeout in aprendpoint . java
deleted the SunToolkitSubclass . java file to remove obsolete code that is no longer needed
updated translation handling in DefaultRenderableSorter and added a method to check rotation or scaling in Matrix4 to improve code clarity and ensure correct
updated import statements and added a new test method for registering wrapper handlers in TypeHandlerRegistryTest . java to improve test clarity and ensure correct
added support for alternate color space handling in the PDSeparation class to enhance image processing capabilities for different color space scenarios
updated URLs in CommonsApplication and PageTitle to use BuildConfig instead of hardcoded values to improve flexibility and maintainability by centralizing
( chore ) camel - main - http : add a fake health check for camel - main - http
fix npe in entitythornchakram . gettileentity ( ) .
added a test for altering tables with primary keys and indexes in the AlterTableWithViewsIT class to ensure correct functionality of altering
updated off variable initialization in FileFloatSource . java and added randomness in TestFunctionQuery . java to improve document indexing and enhance test coverage
removed the ID field from MongoRecordReader to streamline the field management by eliminating unnecessary fields
added disconnection functionality to YeelightHandlerBase and DeviceBase classes , and improved connection handling in WifiConnection to ensure proper
added support for " AUTO _ INCREMENT " in SQL commands and a test case in TestCompatibility . java to ensure proper syntax error handling for
fix ( kubernetes - client - api ) : use sync period instead of hardcoded value
server : fix npe when remove template detail from private template ( # 3558 )
refactor image handling in ShadowBitmapFactory to utilize Robolectric ' s bufferedImage for improved performance and clarity to enhance
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the code and encourage the use of updated alternatives
( chore ) camel - broker : move the drl file to the drools / examples directory
added legendTop and legendBottom variables to PieChart . java and updated offset calculations to improve legend positioning and ensure proper offset calculations for
added a check to return early if the worldTransform is zero to optimize performance by avoiding unnecessary processing
added a new file ` maryscriptcreator . java ` that creates a file from a specified directory to facilitate the creation of
added a session attribute to store the remote host in the flowFile to enhance session management by associating the session with the remote host
removed redundant file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leaks
updated link attributes from " xlink : href " to " href " in ComponentDescription . java to ensure consistency in link attribute handling across the
camel - 15836 - camel - aws2 - s3 : use a constant instead of a hardcoded string to improve code readability
hbase - 21073 addendum log when regionserver be close during a cluster shutdown
added null check for span before logging messages in Slf4jSpanLogger and DefaultTracer to enhance robustness by preventing potential NullPointerExceptions
remove leading / trailing whitespace from the active option in the configuration to ensure that only valid options are added to the active options
added depth preference handling in DepthController . java to manage wallpaper depth settings to improve user control over wallpaper behavior based on user preferences
updated assertions in OverseerTest to check success count to ensure accurate tracking of the overseer ' s successful count
replaced the method ` getKernelVersion ( ) ` with a direct return value of ` true ` to simplify the code by directly returning the
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future development
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for test cases
added a method ` setScanAttributeForPaging ` to ` TableSnapshotResultIterator ` and integrated it into ` ScanUtil ` to enhance
updated lowRange assignment logic in Request and RequestV2 classes to ensure lowRange is within the valid range range range
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and added a debugCacheSize method in WriteCache
updated the method call from ` getUuid ( ) ` to ` getZoneUuid ( ) ` in ` HostJoinDaoImpl . java ` to ensure
[ zeppelin - 5641 ] fix encode issue in python interpreter
modified filesystem removal logic to include both zfs and zfs to ensure proper cleanup of filesystems when the zfs path is unchanged
replaced ` Object ` with ` String ` for JSON serialization in ` HttpRequestBuilder . java ` to improve code clarity by using a more
increased the poll duration from 2 milliseconds to 3 milliseconds in SoftAutoCommitTest . java to improve the responsiveness of the system
fix : do not fail if the browser do n ' t have any listener
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
update RyukContainer version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features and improv
updated bootstrap path retrieval from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` and added a new ` TestHook `
fix potential npe when try to find a patchy jar .
[ hotfix ] [ test ] replace yarnclient with yarnclusterdescriptor in yarnitcase
add stats for no data included map in localmapstatsawareservicetest
deleted the AllTests . java file to the test suite was no longer needed for the current testing framework
added Unicode characters for non - breaking hyphens and zero - width spaces in AbstractWordConverter to enhance text formatting for better readability in the
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated method call to use ` getResultMappingsForRowKey ( ) ` instead of ` nestedResultMap . getResultMappings ( ) ` to improve
added eventHandled variable to UIText . java to enable event handling functionality in the UIText class
deleted the ` Controller . java ` annotation and renamed ` Weldby ` class to ` WeldModule . java ` to clarify
ruby flavor : nfa do n ' t capture group in empty check
changed the visibility of the ` liquibaseProLicenseKey ` variable from protected to protected in ` AbstractLiquibaseMojo
refactor setMeasuresHierarchyMemberReader method to use a dedicated setMeasuresHierarchyMemberReader method to improve code readability and maintainability
[ gr - 11314 ] add - g option to generate debug information
mondrian : fix typo in mondrianproperties javadoc
added support for friend paths in Kotlin compiler and Kotlin compilation steps to enhance the Kotlin compilation process by allowing users to
added aliases for BATK , BRAHMI , MANDAIC , and MANDAIC in Character . java and modified
updated equality checks in ExecutionCommand and added a new method to convert JSON strings to ExecutionCommand objects to improve string comparison reliability and enhance JSON
refactor Mockito class for improved readability to enhance maintainability of the codebase
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to SystemScope class to provide a readable string representation of the SystemScope object for easier debugging and logging
updated the handling of CSS number and percentage parameters in CSSParser . java to improve accuracy in parsing CSS values and enhance error handling for invalid parameters
added a test for local index reverse scan functionality in LocalIndexIT . java to ensure correct behavior of local index operations
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase and refactored test methods in BackupHelperTest and LanguageHelperTest to
updated toast messages to use string resources for clarity and consistency to improve maintainability and readability of the code
removed unnecessary parentheses from conditions in RendererUtilities . java and updated assertions in RendererUtilitiesTests . java , and added a new test case in Renderer
replaced Iterator < JsonNode > with ArrayNode for ask and bid retrieval in KrakenStreamingAdapters . java to improve type safety and ensure
added a try - catch block around the SQL execution in FileContentProvider . java to handle potential SQLiteException when adding columns twice to the database
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up unnecessary console output during test execution
added hash table load factor and compute online data size in ConvertJoinMapJoin . java to improve the accuracy of data size calculations for join operations
updated the ` buildView ` method to accept a ` Context ` parameter and refactored background resource handling to improve flexibility by allowing theme
added assertion capabilities for authentication in SecurityMockMvcResultMatchers to enhance testing capabilities for authentication scenarios
cloudstack - 1645 : set vpcid to null when vpcid be null
[ flink - 10955 ] [ test ] disable flink savepoint test for 1.11
changed variable annotations from private to private in multiple Java files to ensure consistency in annotation usage across the codebase
modified loop and condition in Actor . java to ensure index bounds are respected to prevent potential ArrayIndexOutOfBoundsException during action execution
updated BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange to ensure compatibility with the Bitmex exchange implementation
[ ds - 3740 ] add test case for relationships - virtual - metadata
added null check for spatial in LodControl . java to prevent potential NullPointerExceptions when spatial is null
updated lastTokenFiltered initialization to true in ConditionalTokenFilter and added position increment functionality in FixedShingleFilter to ensure correct token filtering behavior and
fix unsafestorenode and storefieldnode . setstateafter ( ) in case the graph have change .
replace ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to improve clarity by
added an assertion to check if the CAS event repository is empty to ensure that the event repository is not empty before proceeding with further tests
removed the ` attributeTemplateName ` parameter from the ` AuthenticationAttrProcessor ` class to streamline attribute processing by eliminating unnecessary parameters
added null key validation in MacOSXPreferences and created a new file RemoveNullKeyCheck . java to ensure that a NullPointerException is thrown when
added a method to set the Typeface in CodenameOneTextPaint to throw a RuntimeException when typeface is not set in runtime to
added the ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
danielwagnerhall : remove deprecate method from webdriverrunner # fail ( string )
simplified the conditional check for item size in SolrRequestParsers . java to improve readability and maintainability of the code
added a boolean field ` useConstructorMappings ` and refactored the creation of ` ResultObject ` instances in ` DefaultResultSetHandler ` to
updated SQL syntax in CreateTableGeneratorTest to include quotes around the schema name to ensure compatibility with SQL syntax for foreign key references
added handling for FILTER mode and modified return logic in VectorizationContext . java to improve handling of filter expressions in the vectorization process
updated the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig > `
replaced the instantiation of ReorganizeTableStatement with a direct reference to modifyDataTypeStatement to simplify code by eliminating unnecessary parameters
updated cluster name handling to use constant values instead of hardcoded strings to improve code readability and maintainability by reducing hard - coded values
improve peereventlistener . connect ( ) and peergroup . connect ( ) . handlepeerdeath ( ) . handlepeerde
added style handling for various styles in Nano . java to ensure correct style application for various text styles
fix ( schematic ) : use adventure nbt instead of compound tag ( fixup )
updated return message from " Use ` String ` to " No # toString ( ) on String " to clarify that the method does not
updated memory allocation size from 64m to 32m in TestThreadFailure . java to optimize memory usage for better performance
refactor retryFailed method to return a FailureContext instead of a int to improve error handling and provide retry logic for data provider operations
change return value from 0 to bandwidth in BucketStateIEEE754 . java to ensure correct retrieval of tokens based on the specified bandwidth
danielwagnerhall : move selectpopup ( ) and deselectpopup ( ) to webdriverbackedselenium
updated the ` doPrintEntry ` method to remove the ` boolean ` parameter and simplified the ` doPrintEntry ` method signature to streamline
[ hotfix ] [ test ] fix typo in taskasynccalltest
added validation for dialog , frame , and undecorated states in Dialog . java and Frame . java to ensure only valid components are processed to
changed the visibility of the ` state ` variable from private to final to ensure that the ` state ` field cannot be reassigned after initialization
updated RedisObjectFactory to utilize RedisStandaloneConfiguration for sentinel configuration and password handling to improve the flexibility and security of Redis connection configuration
added functionality to track and update the last seen delay message in chatroom .
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method calls to simplify the
refactor share creation and operation handling in FileOperationsHelper and OperationsService to improve code organization and leverage new operations service functionalities
added @ Inject annotation to the isValue variable in BeanDefinitionInjectProcessor . java and removed it from FieldPropertyInject . java to simplify the logic
refactor y - coordinate calculations in ClassicPlotManager to use a variable for yStart instead of minBuildHeight to improve code readability and
[ test ] fix npe in smackintegrationtestframework
tmi - 18 : fix reading of jpeg with interop sub directory .
added support for ` ENABLED _ LS ` version target graph mode in ` VersionTargetGraphMode ` and updated ` VersionedTargetGraphCache ` to
added a condition to check if the media format is video before processing to ensure that video formats are processed only if they are supported
doc ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a load method to LwjglNativesLoader and modified the loading logic in LwjglApplet . java to enable dynamic
added support for handling escape characters in CSVRequestHandler to enhance flexibility in handling special characters in CSV requests
added validation for only the AUTHORIZATION _ CODE grant type in ClientRegistrations . java and modified test cases in ClientRegistrationsTests .
updated exception messages in Throwable . java to include cause and modified exception handling in SuppressedExceptions . java to improve clarity of error messages and
added SQL query assertions and modified iterator parameters in DerivedTableIT . java and ClientAggregatePlan . java to improve test coverage and ensure correct
added a new key " RSquare " to the RegressionEvaluator and a corresponding test in StreamExpressionTest to enable accurate representation of the
added handling for request headers in ThreadContextMDCServletFilter to improve context attribute management for MDC requests
replaced casting of ` MapWork ` with a local variable ` mapWork ` in ` SparkPlanGenerator . java ` to improve code read
refactor PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving folder and country images to improve code readability
updated cache behavior in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuers in JwtIssuerAuthenticationManagerResolverTests to
updated resource check from exists ( ) to isReadable ( ) in AbstractScriptDatabaseInitializer . java and added failure handling in AbstractScriptDatabaseInitializerTests
added a boolean parameter to the function ' s get method in LLVMInteropType . java and refactored related code in Cxx
replaced ` MILLISECONDS . sleep ( 500 ) ` with ` MILLISECONDS . sleep ( 500 ) ` in ` AbstractBasicMockingIntegrationTest .
added a new file KernCrash . java that implements a graphical user interface with font rendering capabilities to demonstrate the use
added a failure ( ) method call in LinkedHashTreeMapTest . java to ensure tests fail when expected conditions are not met
added a method ` getInterfaceAddresses ` to retrieve network interface addresses to enhance functionality by allowing the retrieval of network interface addresses
added a new ` HouseKeeperTask ` to manage its lifecycle in ` HouseKeeper ` to ensure proper resource management and prevent potential memory
updated the condition in ` GroupTransferService . java ` to use ` getSlaveAddress ( ) ` instead of ` getClientAddress ( ) `
refactor assertion methods in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method to ensure the correctness of
changed the type of ` results ` from ` LinkedHashSet < CategoryItem > ` to ` LinkedHashSet < String > ` and modified the ` doIn
test ( validatortest ) : fix validation of max age validation for todayleagle year
replace grbl error code with look up error + error description
updated the workspace scroll format to return a label if there are no screens to improve user experience by providing a clear label when no sc
removed the ` count ` parameter from the ` getBittrexTrades ` method in the ` BittrexMarketDataService ` to
updated ConsoleReader and MemoryHistory classes to improve handling of null input to enhance robustness by preventing null pointer exceptions during command execution
removed the " . jdk " file extension from the jdkPath path in JavaBuild . java to simplify the path for better clarity
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to simplify code and
added a logger parameter to the JFCModel constructor and updated related methods to accept a Consumer < String > instead of System . out to enhance
added a validation check for the tolerance parameter in the MaximumInscribedCircle class to ensure that the tolerance value is positive to enforce valid input constraints
added methods to create and drop views in TestUtil and implemented a test for view privileges in DatabaseMetaDataTest to enhance database interaction capabilities and ensure
added support for checking stability of float and double tests in NaNTest . java to ensure tests are only executed on 32 - bit systems
added a new file ` DesktopTaskbarUIController . java ` and modified ` TaskbarManager . java ` to handle desktop taskbar
added task count listener to mod item adapter and refactored related methods in SearchModFragment , ModItemAdapter , and ModpackApi to
refactor file handling logic in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` , ` GrpcServerAutoConfiguration ` , and ` NettyGrpcServerFactory `
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and ChainingServicesManager interfaces to simplify the interface hierarchy for better usability
fix npe when generate packinfo for mod file . ( # 7561 )
chore : update gapic - generator - java version to 2.1 . 0 ( # 536 )
added grow ( ) and growX ( ) methods to the Cell class to provide functionality for resizing cells in the system
replaced StringTokenizer with HashMap for keyStroke and ActionListener in DefaultInputHandler . java to simplify key binding management and improve code readability
resolve http : / / issues . apache . org / activemq / browse / amq - 2379 - add exception handling
replaced long [ ] array with byte [ ] array in MetricsMemoryTester . java and added memory failure count check in TestDockerMemory
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added support for enabling security in the MappingsTable class to enhance security by allowing users to configure data connection behavior based on security settings
updated flavor name from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable dumping to streamline output
updated codecNeedsEosPropagationWorkaround method to accept MediaCodecInfo instead of String to enhance compatibility with additional media formats
[ java ] do n ' t check if spy position be empty in network publication .
added a condition to check if no information is present in the output options to ensure proper handling of database information when no information is available
set default ssl port to 443 when use presto uri
added DOMOutputOptions to the buildDOMSubtree method in DOMConverter . java to enable error output formatting for XHTML elements
refactor assertion methods in Assert . java to improve code readability and maintainability
added retention functionality to publish messages by introducing topic and retained flags to enhance event management by allowing more granular control over message retention
[ test ] add testcasename to testresultsummary
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
updated import statements in LatexToUnicodeAdapter . java to align with the latest version of the fastparse library
refactor abstractsessioncontext . settimeout ( ) to make it thread - safe .
replaced ` cp . size ( ) = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and re
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to utilize an
change log level from debug to trace for firmware update handler availability to provide more detailed logging for troubleshooting purposes
added unit tests for handling null values in DateTest . java to ensure that the database correctly returns null values for date and timestamp fields
refactor string formatting in StringSubject , Subject , and RelabeledSubjectTest classes to improve code readability and maintainability by reducing
added a test for multiple repository permissions in UserModelTest . java to ensure correct permissions are validated for repository permissions
added a new file ` Test7088020 . java ` to test method invocation with different stack frames to ensure proper exception handling for method
refactor audience restriction validation to use a HashSet for better handling of audience URIs to improve clarity and maintainability of audience validation logic
refactor ` afterAppAuthChanged ` and ` refreshLocalCache ` methods in ` AbstractDataChangedListener ` and ` HttpLongPollingData
changed _ stderr from System . err to System . err in StdErrLog . java to improve handling of null output streams to avoid potential NullPointerException
added a new warning constant for separation order and implemented a check for active stages in the simulation engine to ensure that separation order is enforced correctly by alerting when not exactly one stage is active below the current
updated the query optimizer parameter from offlineTableConfig to realtimeTableConfig to ensure the query optimizer uses the correct realtime table configuration
updated the SQL execution of the CREATE _ METRICS _ AGGREGATE _ TABLE _ CREATE _ METRICS _ AGGREG
updated SavepointV2 . java and FileStateHandle . java files to improve code organization and maintainability
added functionality to set and get Bluetooth class in ShadowBluetoothDevice to enable testing of Bluetooth class functionality in the Bluetooth device
fix checkstyle issue in glowofflineplayer , glowplayer , and uuidlistfile
[ fel ] add error message for invalid parameter in sum ( [ ] )
removed the call to graph . readUnlockAll ( ) in DataBridge . java to simplify the code by directly accessing the graph instance
updated coreNodeName in ZkStateReader . java to use coreName instead of coreName to improve consistency in naming conventions for core nodes
add backpressure update functionality to chatactivity . update ( )
updated test cases in TaggerParserPosTagCompatibilityITest . java to improve test coverage for tagger parsing functionality
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress unnecessary codec usage during tests
modified the condition for element type validation in ` Types . java ` and added a new class ` T7005671 . java ` with multiple
updated triangulator values in DelaunayTriangulator and added a new test class in LwjglDebugStarter to
added @ Override annotations in multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet instantiation to use builder pattern for better readability and maintainability to enhance code clarity and reduce boilerplate for
updated state management for yellowZone in StackOverflowCheckImpl . java to improve clarity and maintainability of state transitions
added shadowing methods for SQLiteDatabase , ContentValues , and AbstractCursor in Robolectric to enhance testing capabilities and improve code clarity
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics ` and added a new
replaced ` bytesPerDim ` with ` comparator ` in ` BKDWriter . java ` to improve comparison performance by using a custom comparator
updated Locale . java to include script property and refactored default locale retrieval logic to enhance flexibility in locale management by allowing script - based
update return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap PropertySources " to " ConfigMap PropertySources " in the warning message to improve clarity and accuracy
updated imports in DefaultConfigurationTestSuite and updated tokenRevocationEndpointTest to use UaaJunitSuiteRunner to streamline test suite setup and
trim whitespace from token tokens in GzipFilter . java and update test parameters in GzipFilterDefaultTest . java to ensure consistent handling of whitespace in
updated the outputType assignment in Response . java to ensure consistency in output type handling
updated regex implementation from JDK to JONI to ensure compatibility with the latest regex implementation
replaced ` Handler ` with ` FutureTask ` for task execution in ` ViewCapture . java ` to improve task handling and performance by util
add voice . getstyles ( ) to support voice . getstyles ( ) .
added error handling for folder creation in GitBlit . java to ensure that a valid parent folder exists before proceeding with operations
updated the binding IP for node discovery from " 0.0 . 0.0 " to " 127.0 . 0.1 " to
camel - 16400 : camel - jbpm - update default handler for camel - jbpm - workitem and camel - jbpm -
pdfbox - 2576 : remove unused import , a suggest by valerybokov
updated the ` AllAppsGridAdapter ` and ` AllAppsRecyclerView ` classes to replace ` WorkModeToggleContainer ` with ` WorkFooter
updated multiple Java files related to Dalvik annotations to improve code consistency and maintainability across the project
fix : fix typo in javaprettyprinter ( # 4396 )
[ hotfix ] [ table - runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery to remove unnecessary line breaks and simplify string replacement
updated ConcurrentLRUCache to use AtomicLong for evictionCounter and added a new add method in FastLRUCache to improve thread safety and
[ javafx ] fix race condition when run action on javafx thread .
do n ' t use the local host if it ' s the intended destination .
added RuntimeEnvironment import and set data root and source root in MainFrame . java to enhance configuration management for the database and source
added ` @ Slf4j ` annotation to ` MarkedClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to enable logging of
[ hotfix ] [ table ] fix typo in tableenvironment javadoc
updated statement timeout handling in MapperBuilderAssistant and changed fetch size from 1000 milliseconds to 2000 milliseconds to ensure consistent timeout behavior across the application
refactor ` onTsTranspilationCompleted ` and ` TypeScript2JavaScriptWithTsserverTranspiler ` to remove the ` h
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
updated Preconditions messages in ArtifactFilesystem . java and refactored artifact handling in ArtifactFilesystemTest . java to improve clarity and correctness of
tika - 2237 -- add test for xls file with number formats
ggbscripttest : do n ' t trigger concurrent modification
do n ' t wait for data to be read before close the connection
added failure messages when comparing ` actual ` and ` expected ` values in ` GuavaOptionalSubject . java ` to provide clearer feedback on
updated visibility logic in BackgroundAppState and refactored shelf scrimView in ShelfScrimView to improve UI respons
fix a npe in the shader node editor when the navigator panel be collapse
mow - 332 fix corner position on image ( absolute location )
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error management and debugging capabilities
change astro discovery job to use schedulewithfixeddelay instead of scheduleatFixedRate ( # 5371 )
simplified the initialization of ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable the test due to hangs
updated import statements in GuiceFactoryTest . java for better clarity and organization to improve code readability and maintainability by using specific imports
added a ` hasSystemFeature ` and ` setSystemFeature ` methods to manage system feature support in ` RobolectricPackageManager `
refactor property path handling in RCAFrameworkLoader and add a new test class RCAFrameworkLoaderTest to improve path management and ensure correct
removed logging of the cancellation event in Task . java to streamline logging for better performance during task execution
added a null and empty check for enumerationValues in RADProperty . java to ensure enumerationValues is reset to avoid potential null pointer exceptions
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity and consistency to improve code read
updated the ` collectAndSendTelemetryData ` method to use ` collectAndSendTelemetryDataAsynch ` and added a method to
removed conditional logic for altering the column type in UpgradeCatalog260 . java to simplify the code for better readability and maintainability
updated error messages for index directory and temp resource directory creation to provide clearer guidance to users regarding available space and write permissions
rename DatasetUtilities class to improve clarity to enhance code readability and maintainability
added a method to append the selector ID to the key in Matcher . java to enhance the functionality of the matcher by including the selector ' s
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated alpha channel constants and taskbar visibility handling in StashedHandleViewController , TaskbarDragLayerController , and TaskbarLauncherStateController
removed multiple ECDH - related constants from KeyExchange . java to streamline code by eliminating unnecessary dependencies
added a check for JdbcConnection before executing the version ( ) method in CockroachDatabase . java to ensure that the method does not
chore ( core ) : fix binary and flaky test ( # 2514
added methods to retrieve media recorder MIME type in CodenameOneImplementation , Display , and ImageIO classes to enhance media recording capabilities across the
changed the visibility of the useShaders method from private to public across multiple classes to allow access to the useShaders method from
updated filtering criteria in DruidAdapterIT . java to include additional conditions to enhance filtering capabilities for improved data retrieval accuracy
reformatted the instantiation of ZkStateReader in CloudSolrServer . java to improve code readability and maintain consistency
pdfbox - 4892 : disable external entity , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a mechanism for obtaining client registration identifiers in OAuth2 clients
updated the condition to check for the presence of " < script > " in the result to ensure that all scripts are processed in the result
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated type checking logic to improve clarity
refactor border property validation logic to use a new method for checking if the border is not set or blank to improve code readability and maintain
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during connection
updated import statements and modified the ` attachProjectToConnection ` method to accept ` HubRegisterResponse ` instead of ` HubChangeLog ` to
replaced ` & 0xff ` and ` & 0xff ` with ` Byte . toUnsignedInt ` in multiple files to ensure correct unsigned
removed unnecessary parentheses in the getBytes method call to streamline code for improved readability and maintainability
updated the default value of CachingBuildEngine . DepFiles from ENABLED to CACHE to ensure the application uses the correct caching mechanism
changed the default value of rangePannable from true to false to disable rangePannable functionality in the CategoryPlot class
updated the logic for adding or removing the work mode switch based on the current active page to ensure proper handling of the work mode switch based on
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java
added handling for CancellationException in FunctionTest . java to improve error management during cancellation scenarios
changed the access modifier of the JarResource constructor from package - private to protected to allow subclasses to access these constructors for better extensibility
[ hotfix ] fix typo in defaulttrackselector javadoc
added a loop to sleep for unseq merging in LevelCompactionTsFileManagement to ensure proper timing during compaction operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to reflect the correct trading type being
replaced ` FROM Post ` with ` PostDTO ` and updated test methods to use ` PostDTO ` instead of ` Post ` to improve
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to accept ` Service ` as a parameter and added logic to update Hive ' s interactive mode settings to
reformatted the onComplete ( ) method call in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
add miss @ jsonpoJObuilder annotation for ssecustomerkey . builder
added handling for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling and provide clearer feedback for unsupported value types
updated references from ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` and ` TreeBacked
removed import of java . lang . annotation . Annotation from ParameterInfo . java to clean up unnecessary code and improve readability
updated PlaybackController to include Ac3 enabled preference and improved seek handling in VideoManager to enhance playback functionality and ensure proper handling of
[ hotfix ] fix npe in localnode . getlocalnode ( )
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement and DiskFileItem classes to address deprecation warnings related to Commons DBCP
added a test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to ensure
rename RTimerTree class to improve clarity to enhance code readability and maintainability
changed package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
* fix issue # 358 by use round instead of round
updated thread pool and scheduler names in ClientConnector . java to improve clarity and traceability of thread instances
refactor ViewResultsFullVisualizer to use private fields for treePane , resultPane , and treeSplitPane , and errorLoggingCheckbox to
added phone number fields and descriptions for user resources in ScimUserEndpointDocs . java to improve clarity and usability of user interface documentation
changed class declarations to public in multiple files to enforce singleton behavior to prevent instantiation of these classes
added null checks for responseMap in JsonHttpPropertyRequest and improved error logging in URLStreamProvider to enhance error handling and provide clearer
updated SolrRequestHandler . java for improved request handling to enhance performance and reliability of Solr requests
do n ' t show the default parallel value in xmlsuite # toxml
fix checkstyle issue in testvmwarecontextfactory and testvmwareutil
updated CardImpl initialization to include SCARD _ E _ NO _ SMARTCARD in error handling to ensure proper handling of scenarios where smartcard
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary system output during tests
camel - 16400 : camel - bindy - make it easy to configure component and whatnot .
change default value of ` useOwner ` and ` useTimeStamp ` from ` true ` to ` false ` in ` JabRefPreferences .
changed the parameter type of ` runAndCheckException ` from ` Runnable ` to ` ThrowingRunnable ` and modified the method to accept a `
added null checks for ` via ` and ` viaContext ` and ` pathFromSeed ` in ` CrawlURI . java ` to improve
camel - 16284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object handling in Liquibase
updated the default certificate validity from 7 to 90 to increase the default value for the proxy certificate validity
updated frame handling logic in ThreadHandler . java to use smoothDelta and lastDeltaUpdate variables to improve responsiveness by adjusting frame timing
updated HttpBatchReader , HttpScanBatchCreator , HttpScanBatchCreator , and TestPagination classes to handle null table names and pagination correctly to
added null check for CompactionInfoClient in Worker . java and implemented a test for FindNextCompactRequest in TestWorker . java to ensure
updated fragment state handling in ShadowFragmentActivity and added a test for onSaveInstanceState method in FragmentActivityTest to ensure that fragment states are correctly
reformatted code for consistency and clarity in BatchResourceFactoryBean . java to improve code readability and maintainability
removed the test method ` shouldParseSimpleAndroidColorReferences ` from ` ColorResourceLoaderTest . java ` to streamline the test coverage for
added error handling for NoResultException in AbstractJPAQuery and introduced a new test for uniqueResult in AbstractStandardTest to improve robustness
refactor Community creation logic to use owner instead of fromCache for better clarity to improve code readability and ensure communities are only
replaced ` lawnchair ` with ` LawnchairApp ` for retrieving the wallpaper depth effect to ensure compatibility with the
removed unused import of jdk . testlibrary . ProcessTools in LocalManagementTest . java to clean up the code and improve readability
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method across multiple classes to simplify method signature and improve readability
added null checks for extensions and improved string representation in ExtensionStack to enhance robustness by preventing NullPointerExceptions when extensions are null
2 . x : fix race condition in flatmap with inner error ( # 5371 )
added connection timeout configuration to MultiGetRequest and improved error handling in ServerTableSizeReader to enhance connection management and provide clearer warnings for
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update the test
replaced ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` with ` SystemResourcesEdgeEventFetcher ` and ` Tenant
updated caching logic in CachingBuildEngine and added a new test for outputHash calculation in CachingBuildEngineTest to ensure correct behavior when
camel - 7999 : camel - netty - add option to use byte buffer in camel - netty
updated the partition alteration method to use the table ' s fully qualified name instead of the old name to ensure compatibility with the table ' s
updated the IllegalArgumentException to include a specific error message about the Vertx instance configuration to provide clearer guidance to users regarding the necessary option for domain socket creation
move enumtypehandlerserializertest to coretypes and add colortypehandlertest
refactor StreamEx class for improved readability to enhance maintainability and ease of understanding for future developers
updated hint settings in SessionImpl to use specQueryTimeout and specLockTimeout to improve clarity and consistency in session timeout handling
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` to provide a singleton instance of ` ILoggerFactory
updated ` familyMap . put ` calls to use ` set ` instead of ` cloneFamily ` across multiple classes to ensure consistency in handling family
added handling for orientation changes in TaskbarManager to ensure proper layout adjustments based on user - defined orientation changes
fix xml encode issue in jabber chat room
updated the ` longStackPut ` method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable fields and methods
jbrules - 1343 remove dependency on brokentest from executionflowcontroltest
updated conditional statements in DLNAMediaInfo . java , DLNAResource . java , and FFMpegVideo . java to
updated NBWriteServlet to accept an unlimited parameter and modified TestWriteListener to include it to enhance flexibility by allowing unlimited writes to
update total difficulty in blockchainimpl and add a test for invalid block total diff
simplified action assignment logic in DefaultPlaybackController . java to improve code readability and maintainability
replaced ` Collections . synchronizedList ` with ` CopyOnWriteArrayList ` in ` NativeLibrarySupport ` and ` SecurityServicesFeature ` to
updated uniform allocation logic in AllAppsView . java for improved visual performance to enhance the responsiveness of the user interface by adjusting
added a check for both index and index1 in HttpURLConnection . java to ensure proper validation of the key format
added PrincipalResolver annotation to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable the use of principal resolution for improved authentication handling
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve JSON handling by utilizing Noggit ' s JSON
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve string handling by ensuring that trailing slashes are removed correctly
added methods for matching patterns in ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to improve pattern matching functionality and ensure
hbase - 25958 improve error message when bulk load operation fail to load ( addendum )
added support for entity potion and block fading events in BlockFire . java to enhance gameplay experience by allowing fading effects on water
updated method signature in CellLayout . java for improved clarity to enhance code readability and maintainability
refactor decreasePercent calculation and simplify usage calculations in multiple classes to improve code readability and maintainability
added debug logging and refactored input unready handling in AsyncContentProducer and BlockingContentProducer to improve debugging capabilities and ensure correct behavior when
removed null check for weightField in DocumentDictionaryFactory . java to simplify error handling by allowing weightField to be mandatory
updated plist variable substitution logic in AppleBundle . java and added a new test in AppleTestIntegrationTest . java to ensure proper handling
updated the bullet length and modified logic in TurretBullets , Damage , and LaserTurret classes to
updated adaptOrder method to return OrderCreateApiRequest . OrderCreateApiRequestBuilder instances instead of OrderCreateApi . OrderCreateApiBuilder to improve type
added a new file ` PreParseGrammarTest . java ` to implement XMLGrammarPreparser functionality to facilitate testing of XML schema
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotations to multiple Java classes to suppress warnings related to ` doclint : missing
added font management functionality to ExtendedEditText to enhance text styling capabilities for improved user experience
added null check for current user in AuthorizeTag and implemented a test case in AuthorizeTagTests to ensure proper handling of unauthorized access when no
camel - 7999 : camel - cxf should validate encoded uri before use to avoid potential security vulnerability
added a method to set up data in JDBCGeometryTestSetup to establish a framework for data setup during testing
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] stop restore attempt for already cancel task in backend restorerprocedure
default to create the rmi registry within the server ( server . rmi . create = true
replaced String . join with StringUtils . join for anticompactRanges to improve readability and maintainability of the log message
updated display metrics in multiple test classes to ensure consistent behavior across different Android SDK versions
[ java ] add cluster member id to service heartbeat counter .
added support for counting total thread allocated bytes in TestThreadMXBean to ensure accurate tracking of thread memory usage for better resource management
updated return statement to handle special cases for NaN values and modified hash code generation to ensure correct handling of NaN values and improve hash code generation for
http : / / issues . apache . org / jira / browse / amq - 3833 - add more detail to log message
added authentication routes and corresponding tests in the AuthenticityController and AuthenticityFormTest classes to enhance authentication functionality and ensure proper validation of
lowerphase : add assertion to check if the node be alive
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
updated comparison logic in DefaultTrackSelector to include localeLanguageMatchIndex , localeLanguageMatchIndex , and localeLanguageScore to ensure consistent ordering of
refactor RuntimeSerialization class to improve serialization logic to enhance performance and reliability of runtime data handling
mow - 169 crop the crop box on the right side of the image
refactor unitofworkfactory to improve performance
added a new variable ` allAppsCellWidthPx ` and updated references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and `
tika - 4032 -- look for embed file name in eml in content - type param also .
updated the URI construction in ThumbnailsCacheManager to use fileId instead of remotePath to improve clarity and accuracy of the generated thumbnail URI
[ java ] reset input stream when mark be enable .
added @ Deprecated annotations to multiple classes to signal that these classes are outdated and should not be used in new development
added a new configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` and its usage in ` AmbariHandlerList ` to control
bug 9445 : add warn log when deletion of template fails
removed redundant foreign call handling in SPARCArithmeticLIRGenerator . java to simplify code and improve readability by eliminating unnecessary
jbpm - 4640 - add support for legacy dsl 5 . x api
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to run in a background thread to ensure that the
[ beam - 10595 ] increase default timeout for unboundedsourcesystemtest ( # 23057 )
updated import statements and modified resource qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of resource names
deleted the files ` MrefStat . java ` and ` MrefStat1 . java ` to remove unused classes to streamline the codebase
updated scope handling in DependencyInsight to check for blank or null values to improve robustness of scope validation in dependency insights
refactor error handling in BTCETradeServiceRaw to use a constant message messages to improve code readability and maintainability by reducing
[ test ] use hamcrest assertion instead of junit in emittertest , unwrapprocessortest , and processor2connectortest (
bitcoinuri : add getpaymentrequesturl ( ) method to get payment request url .
planner - 383 : improve error message for unsupported type argument
updated folder info setting in FolderPagedView . java to ensure consistency in setting folder information
only release jfr buffer if the current thread be acquire .
[ hotfix ] [ table - common ] fix checkstyle violation in basicabstracttuple
updated import statements and refactored file handling in LintUtility . java to improve resource management and enhance error handling for reading linter configurations
replaced ` updateBackgrounds ( ) ` with ` updatePaddings ( ) ` in ` AppsContainerView . java ` to
added a new value of 13 and modified the onInventoryTick method call in Inventory . java to increase inventory tick count and ensure proper handling of
added handling for OCELOT _ BABY events in PlayerEvents . java to enhance event processing capabilities for better gameplay experience
added @ PublicEvolving annotations to StateTtlConfig . java to indicate that these methods are public and may change in future versions
added null handling for the ' x ' parameter in PreparedStatement and Array classes to ensure proper type assignment when ' x ' is null
[ java ] clarify description of all recordings in archive tool
replaced ` append0 ( " \ n " ) ` with ` append0 ( ' \ n ' ) ` in ` StringBuilder . java
added a new test method for JSON snapshot serialization in SiteSnapshotVariationsTest . java to enhance testing capabilities for JSON serialization in database snapshots
added a method to remove transaction and block from the cache in BroadTest . java to improve cache management by ensuring transactions and blocks are properly
added support for LensMask functionality in AmcrestHandler and DahuaHandler to enable or disable the LensMask feature based on
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRule
updated the constructor of ChangeLogIterator to accept a List of ChangeSetFilters as a parameter to improve flexibility by allowing different change set filters
do not print stack trace for guest exception in polyglotlauncher .
[ hotfix ] [ ec2 ] fix checkstyle violation in ec2utils
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure consistent serialization behavior across different versions
refactor method calls in SpacesVisitor to use ` dropParentUntil ` instead of ` withInitializer ` to improve code readability and maintain
# 1649 - enh : add ` ` copy ' ' option to servercacheoptions # copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to ensure that the border is visible on a floated
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
replaced ` LIVE _ URI ` with ` PROD _ URI ` in ` KucoinExchange . java ` and added logging for
updated search path formatting and exception messages in SpringResourceAccessor . java to improve clarity and correctness of resource path handling
updated unit strings from " μ " to " µ " for microgram , cubicMeter , and square centimetre
updated vertexMask retrieval to include size packed in DefaultShader . java to ensure correct vertex masking for optimized mesh rendering
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
refactor ( texbibentriesresolver ) : refactored code into a separate method to improve readability
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric environment when running tests
added a conditional check for FirebirdDatabase in DoubleType . java to return a specific database data type for double precision
added null checks for dataSource and transactionManager in DefaultBatchConfigurer . java to ensure proper initialization of DataSource and TransactionManager to avoid potential NullPointerException
test : add package - info . java for unit testing
update ping command to use 127.0 . 0.1 and set timeout to 60 _ 000L to improve test stability by avoiding
no effective change - code cleanup - use try - with - resources
updated TermScorer to conditionally use FREQS based on scoreMode to improve scoring behavior based on scoreMode requirements
make dataflowmetrics . getmetrics ( ) return an empty list instead of null
cloudstack - 7898 : fix npe in vm creation when vm be delete ( # 7898 )
refactor DynamicPartitionPruner to use a new method for finding the target ObjectInspector to improve code clarity and maintainability by encapsulating
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and its implementation in ` ActionExecutionStep ` to ensure that existing build artifacts are
added selection interval handling for selected rows in ThrustCurveMotorSelectionPanel to ensure proper selection behavior for better user experience
[ wasm ] use assertthrowsarraystoreexception instead of assertthrowsarraystoreexception .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName handling and user agent management in HttpClientBuilder and HttpClientConfiguration to enable customizable user agent settings for HTTP requests
refactor session restoration logic to use a separate method for creating and restoring sessions to improve code readability and maintainability by reducing
updated assertions in IssueTest . java to include a message and changed the type of results from HashSet to Set < Object > to improve clarity
updated ByteArrayDataSource initialization to use a default content type if the file ' s content type is null to ensure a default content type is used when
feat ( activation ) : add event to character system . send activationendevent ( charactercomponent )
reformatted mathematical expressions in GraphApplet . java for consistency and clarity to improve code readability and maintainability
added a method ` updateTaskViewsSnapshotRadius ( ) ` to ` RecentsView ` and modified its visibility in ` TaskView `
added logging functionality to generate Swagger content for 3rd party services to improve traceability of swagger generation for better debugging and monitoring
changed the return type of the put method from void to int to enable method chaining for better usability
updated KafkaContainerCluster to use a new startup timeout and improved the handling of Kafka brokers to enhance the reliability and performance of Kafka transactions
[ issue # 3550 ] fix npe in defaultmqpushconsumerimpl ( # 3551 )
simplify header addition logic in StaticServerHttpHeadersWriter to improve readability and maintainability of the code
added package access check for listenerTypeOrNull in EventListenerList . java to enhance security by ensuring only accessible classes are loaded
added application and image lists to the onCreateView method in ApplicationsFragment . java and created a custom adapter in CustomAdapter . java to
updated the ` applyIcon ` method to accept both ` 1 ` and ` 2 ` as parameters and added null checks for ` iconView `
replaced ` try - with - resources ` with ` try - with - resources ` in ` DownloadTracker ` , ` DownloadManager ` ,
hhh - 13564 - fix stack overflow in basesqmtosqlastconverter
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursor
refactor DataInputStreamWithTimeout to use ExecutorService for handling slip messages and improve error handling to enhance the responsiveness and reliability of the
added support for ToposortBasedDepsAwareExecutor in VersionTargetGraphMode and VersionedTargetGraphCache to enable tracking of the number of threads
refactor UpgradeCatalog150 . java for improved clarity to enhance code maintainability and readability
rename networkparameters . testnet3 ( ) to testnet ( ) . testnet ( ) . testnet ( )
do n ' t update if there be only one selected geos
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code safety and
replaced Apache Commons IOUtils with Apache Lucene ' s BufferedIndexOutput and updated the HdfsIndexOutput class to extend BufferedIndexOutput
pdfbox - 4892 : do n ' t set clip if there be no path
simplified the local address assignment logic in SocketChannelImpl . java to improve code readability and performance by eliminating unnecessary synchronization
refactor ` TemplateTransformer ` to use a new method ` addToRow ` for adding multiple values to improve code readability and maintainability by
added a method ` isWindows ( ) ` to check if the operating system is Windows and modified file renaming logic in ` Wallet . java `
replaced character encoding array with a constant for checking digits in Code39Reader and Code39Writer to improve code readability and maintainability by
added a boolean flag ` hasExecutedUnexpected ` to control the casting behavior of executed types to improve clarity and correctness of type expectations in
removed redundant check for fieldType . stored ( ) in IndexingChain . java to streamline the code for better readability and performance
fix ( sql ) : fix timestamp truncate with nanosecond ( # 3365 )
remove unnecessary conditional check for posting runnable stacktraces in lwjglcanvas .
doc : fix typo in gcp processor description
renamed the method ` assertInitialized ` to ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to clarify that the
updated directory handling in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a default value of " single " to ensure consistency in directory
replaced size ( ) with filterCount ( ) and added incrementFilterCount ( ) methods in FaultTolerantChunkProcessor . java to
updated the ` tabbedMethod ` declaration and modified the ` main ` method in ` FileWithTabs . java ` to improve method visibility and
replaced conditional checks for ` TerminalFactory . get ( ) ` with ` assumeTrue ( ) ` in ` ConsoleReaderTest . java `
remove unnecessary check for user info in getfeedbacksessionsaction
updated selection logic in AllAppsView . java to adjust column boundaries and velocity checks to improve user experience by allowing more granular control over the
bugfix # 209043 , use thread . initialize ( ) instead of thread . initialize ( true )
added functionality to load model list and update connection list handling in DataModelManagerDialog , DbConnectionDialog , and ExportPanel to improve data management
replaced ` writeBufferSize ` with a static final ` WRITE _ BUFFER _ SIZE ` across multiple files to improve code readability and maintainability
replaced the segment size calculation with a new SegmentInfo instance in DocumentsWriter . java and added a new test case in TestIndexWriter
added validation checks for mesh structure in ArmatureModifier . java to ensure only valid mesh data is processed during modifier validation
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future feature additions
avoid fill in the stack trace in applyspecialization
updated the calculation of the line height in LabelPainter to use a stream - based approach to improve accuracy of line height calculations
updated the constructor of ` RotationTouchHelper ` to accept a ` DisplayHolder ` parameter to enhance flexibility by allowing the use of a
refactor string handling logic in AVA . java to improve clarity and correctness to enhance code readability and ensure proper handling of quoted
updated the return value of ` Long . valueOf ` to ` IdConversion . convertToLong ` and modified the ` preHandle ` method to ensure
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
modify the assertQ statement for COUNTRY _ CODE _ s to use correct syntax and index for COUNTRY _ NAME _ s to ensure accurate query results and improve code readability
refactor Cache class to improve code readability to enhance maintainability and reduce complexity
updated variable names from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
removed unused imports and modified the doBefore method signature in TestUnifiedHighlighterTermVec . java to simplify the code and improve readability
added a new Java class ` GcodeTable ` with functionality for adding multiple rows to the ` GcodeTable ` component to enable users to
replaced a static WEBAPP _ CONNECT _ TIMEOUT with a configurable connection timeout to improve flexibility by allowing dynamic configuration of the connection timeout
updated multiple Java files to improve code structure and consistency to enhance maintainability and readability of the codebase
updated TestMediaService . java file to improve media service functionality
removed the static String constant from HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to streamline
added a new file ` MarketsPrintTool . java ` that implements the ` MarketsPrintTool ` class to print various cryptocur
[ aws - cloud - s3 ] add validation for invalid x - amz - account - id request ( # 4340 )
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` and ` HttpAccount ` classes to enable
refactor ServerSpanThreadBinder for improved thread handling to enhance performance and maintainability of the code
updated the user pointer reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified
added " the _ geom " and " number " fields to the builder in Csv2Shape . java to improve clarity and structure of shape
updated gas cost parameter from ` callGasWord . longValueSafe ( ) ` to ` gasCost ` in ` VM . java ` and removed
refactor parameters handling in Parameters . java to improve code readability and maintainability
added a method to ignore null values in the MultiplePiePlot class to improve data handling by preventing null values from being included in the
refactor bundle loading logic to simplify bundle management to improve code readability and maintainability by reducing complexity
pdfbox - 4892 : fix typo , a suggest by valerybokov
add a method to check if an action be allowed during editing to improve control over the editing behavior of actions
added a userModified flag to the LoginSamlAuthenticationProvider class to track whether a user has been modified
added a new file TestSealedObjectNull . java to test the behavior of the SealedObject with a null cipher to ensure that the
updated method names from ` onOpen ` to ` setResponse ` and added a new ` succeeded ` method to improve clarity and consistency in handling
added a new constant ` SNOW ` and modified conditional checks in ` BlockEventListener ` to ensure compatibility with server version 1.16 . 5
added an ID field and modified trade handling in CryptsyAdapters . java and CryptsyPublicTrade . java to include an ID to
added error handling for closing HMS connections in HiveStreamingConnection to ensure proper resource management and logging of exceptions
use random seed instead of system . currenttimemillis ( ) in glowserver
updated the icon size for the Nexus 5 device profile and added a new device profile for it to improve icon appearance and accommodate
2 . x : fix refcount not reset when connection object be null ( # 5049 )
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to enhance compatibility with reflective operations
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in the FormatVisitor and TokenFormatter classes to enhance formatting capabilities for
[ gephi ] save task should not delete file on cancel
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
log4j2 - 1349 add support for mutablelogevent in smtpmanager
updated the PADDING constant from LengthLike to NonNegativeLengthLike to ensure that padding values are non - negative for better data integrity
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation by removing unnecessary
refactored exception handling in ` MethodIRBuilder ` and ` SootWorldBuilder ` to use ` findRealHandler ` instead of stream
updated test result formatting and improved error message formatting in AndroidPlatformTarget . java to enhance code readability and provide clearer guidance for
updated the cache size from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if finish is zero in InvocationStageTrace . java and modified the test case in TestInvocationPublishModelFactory . java
added a try - catch block around the key loading process in ProvKeyManagerFactorySpi . java to handle potential NullPointerExceptions when loading the key
updated server socket initialization and port handling in UpstreamCheckUtilsTest . java to improve port management and enhance test reliability
ggb - 1359 make sure we do n ' t lose the panel dimension when resize
* add support for gl _ ARB _ geometry _ shader and gl _ tessellation _ shader _ 4 and gl _ geometry _
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t trigger saveallnotification if project be not in data ( # 3550 )
updated ZQLJobManager to utilize IOUtils for UTF - 8 encoding and improved string encoding handling to ensure consistent character encoding handling and enhance
added a check for non - negative arguments in IkStepDefinition . java to ensure that the argument length is greater than zero to prevent potential
refactor header names in FakeOSSOHeaderDecoder to use a constant prefix instead of hardcoded strings to improve code maintainability and reduce
deprecated the ` - suffix - strategy ` option in ` GenerateJavaSources ` , ` Config ` , and ` JavaGeneratorMojo ` to
removed unnecessary debug log statements in DerbyDatabase . java to streamline error logging for better troubleshooting
[ ci ] add timeout to cepeptest and cepjavatypetest
replace parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing contention
updated conditions and messages for updating Liquibase hub properties and API key in HubUpdater . java to improve error handling and provide clearer
added constants for Java VM and Eclipse OpenJ9 VM in Constants . java and implemented version checking in TestDDRExtensionGeneral . java
refactor logging in FontFamily . java to differentiate between CompositeFont and specific font types to improve clarity of log messages for better debugging
added HTTP version handling in ALPNNegotiationTest and NegotiatingServerConnectionFactory to ensure compatibility with HTTP / 1.1 based on
added RateControl import and set it in SettingsBodyParser and set it in MaxConcurrentStreamsTest to disable rate control in the HTTP / 2
added a new file Test6741426 . java that demonstrates JComboBox and BufferedImage rendering with NimbusLookAndFe
updated the error message in the CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages
added null checks for dbM gdPath and dbExtPath in HMSHandler . java to ensure that database paths are valid before proceeding
added a package declaration to S3CopyObjectRequest . java in the org . cloud . bridge . service . core . s3 package to
refactor setup methods to remove accentColor parameter and streamline preference category setup to simplify code and improve maintainability by eliminating redundancy
updated the expected error message in TemporaryFolderUsageTest to include the file path to improve clarity of error messages for better debugging
updated type information usage in MappingMongoConverter to use ClassTypeInformation . OBJECT instead of ClassTypeInformation . from ( Object , Map ) to
added validation to check for empty or null addresses in ClientNetworkConfig . java to ensure that only valid addresses are added to the client configuration
added " keynectisrootca [ jdk ] " to the list of certificates in VerifyCACerts . java to ensure compliance with
[ java ] return the number of output in the compute ( ) method instead of void .
added a condition to check if the popup is clicked or is popup showing before setting the mode to ensure the menu only updates when the popup is
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to test the behavior of ` MyObject `
replaced ` map ( routes ) ` with ` doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator . java ` to
refactor address handling in ` BurningManService ` to use ` Optional < String > ` for custom addresses to improve clarity and
refactor StringSubject class for improved readability to enhance maintainability and ease of understanding for future developers
updated the initial size of longData and added an @ Ignore annotation in BatchValidateSignContractTest . java to optimize test execution time by allowing
corrected a typo in the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to ensure consistency
updated the query handling in RetweetActivity to replace " from : " with " from : " to ensure accurate representation of recent queries in the
added a conditional check for rebalance in SimulatorDiscoverer . java to ensure proper handling of rebalance scenarios
added an import account endpoint to YubiKeyAccountRegistryEndpoint and a corresponding test in YubiKeyAccountRegistryEndpointTests to enable the import
updated shader program program names and variable names in ShaderManagerLwjgl . java , and modified material data handling in FontMaterialProducer
added null check for ` cnt ` in ` paintOnTopLoop ` method and enhanced safe area handling in ` SideMenuBar ` to improve
refactor AbiWriterProtocol . java for improved code organization to enhance maintainability and readability of the code
added a null check for subName before setting the caption in HierarchyBase . java to ensure that a default caption is set only when sub
changed the data flag from IMMOBILE to GRAVITY in EntityItem . java to ensure the correct flag is used for growth
added null checks and improved null checks in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ( ) ` in ` VoteResultService .
added a test case for a PostgreSQL connection with multiple threads to ensure that the database connection behaves as expected under various scenarios
updated substring methods in SubtitleUtils and RemoteUtil to use ' . ' instead of ' . ' to improve code consistency and adhere to
replaced instances of ` LINE _ SEPARATOR ` with a constant ` LINE _ SEPARATORS _ RE ` in ` DefaultJavaPrettyPrinter . java
make singleimplementor . currentsnapshot volatile so that it can be use by the compiler .
added a null check for excludeSet before adding queries in SimpleFacets . java to avoid potential NullPointerExceptions when excluding the main query
added support for merging bridge instances in ThingHelper . java to enhance functionality by supporting both Bridge and GenericThingBuilder
replaced ` printHelp ( ) ` with ` error ( ) ` in ` Ktab . java ` to provide user feedback on invalid command
added a check for the existence of the outFile before returning it to prevent potential errors when the file is not found
added parsing logic for date strings in DateConverter to handle tee format correctly to ensure proper parsing of date strings that include tee format
added a method to retrieve a post by its slug in SpringDataJPALockTest and implemented a query in PostRepository to enhance testing capabilities
changed the ` canAccessDbaRecycleBin ` variable from ` boolean ` to ` Boolean ` and added a check for database access to
added a static block to set connection and read timeouts for SimpleClientHttpRequestFactory in ClientRegistrations . java to improve request handling by establishing
added assertions to verify file existence and name consistency in SourceTest . java to ensure that the source class behaves correctly across different operating systems
remove hardcoded graalvm . version property from defaulthomefinder ( graalvmlocator )
added validity handling for client access token and refresh token in ClientAdminBootstrap to ensure proper management of token validity in the application
updated the Android API version check in the Scene class to ensure compatibility with different Android API versions
removed ' this ' references from variable references in PropertyPlaceholderHelper . java to simplify code and improve readability by eliminating unnecessary ' this
removed the ` number , number , number , # ` from the certificate output string to simplify the output format for better readability
refactor ZkSolrClientTest to use CountDownLatch and Set for managing collections to improve thread safety and ensure accurate tracking of collection processing
added BigInteger type to simpleTypes in MongoMappingContext . java to enable support for BigInteger data type in MongoDB mapping context
added a condition to check if the button text matches the text in HomeFragment to enhance user experience by preventing toast notifications when the button text
added a condition to check if MEncoder is not out of sync when MEncoderNoOutOfSync is enabled to ensure proper handling of MEncoder
updated the default event loop thread count from 10 to 15 in ConfigurationProperties . java and changed the event loop count from 10 to 15 in Configuration
changed access modifiers of ` CountMin4 ` and ` tryReset ` methods from abstract to protected in multiple classes to enhance encapsulation and improve
added sorting functionality to the ExternalFileField class and created a new test class ExternalFileFieldSortTest to enhance functionality and ensure correct sorting behavior
updated the error message in FetcherException from " Invalid URL " to " Connection error . " to improve clarity of error reporting for connection
updated event handling in OpenRocketSaver and added source ID handling in FlightDataBranchHandler to enhance event processing by including source information
changed the visibility of the check method from private to protected to allow subclasses to access the method for better extensibility
added synchronization handling for file operations in FileActivity to improve user experience by providing feedback when a sync operation fails
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for better handling of special characters to improve compatibility and prevent issues with special characters
added a check to return early if the container is not initialized and the client property is not set to null to improve performance by avoiding unnecessary
updated the calculation of the total variable in IntHashSet . java to correctly increment the total based on the provided value to ensure accurate tracking of the
added a lock timeout check before updating an entry in FeedRefreshUpdater to improve error logging for lock timeout scenarios
updated conditional checks for ACE flags in SolarisAclFileAttributeView . java and modified who assignment in Misc . java to
refactor LatLonTree to use an array for storing edges instead of a list to improve efficiency and readability of the code by reducing
added IOUtils . closeQuietly for resource management in ZkCLI . java to ensure proper resource cleanup and avoid potential memory leaks
updated comment formatting in BibtexParser to include additional characters to ensure proper formatting of comments for better readability
added strict parameter handling and validation in the Main class to ensure correct parsing behavior when strict mode is specified
add ` alwaysinvalidconstraint ` and ` alwaysinvalidconstraint ` to ` defaultvalidator `
camel - 16400 : fix camel - http component verifier to use http4 instead of http
added a method to wait for things to level out in TestCloudPivotFacet . java to improve stability by preventing indefinite
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate easier debugging
replaced String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in type handling
[ java ] return action . abort if dispatch complete .
added handling for cacheKey and CACHE _ LOOKUP attributes in EntityProcessorBase . java and updated related logic in TestCachedSqlEntityProcessor . java
added a new file PutfieldError . java that contains a class that throws an IncompatibleClassChangeError to demonstrate the expected
camel - 18131 - camel - aws : avoid infinite loop if the public address already match the public address .
add log for memtable _ flush _ after _ min , memtable _ operations _ in _ million , and memtable _ flush
replaced instances of ` Space . build ( " " ) ` with ` Space . SINGLE _ SPACE ` across multiple files to standardize space
removed the encodedLength ( ) method from Flyweight . java to streamline the code by eliminating unused functionality
updated TestMethodResultMapBuilder . java file to improve test coverage for method results
added handling for Integer methods in FindNullDeref . java to improve error handling and prevent potential runtime exceptions
[ hotfix ] [ runtime ] make tasklocalstatestoreimpl lock non - null
updated return values in Utils . java to include " m " , " h " , and " d " to improve clarity of time representation
updated conditional checks for DeepShortcutView and SystemShortcutView in Utilities . java and FloatingIconView . java to improve handling of deep shortcuts
changed the type of the validator from String to Object in JwtIssuerValidator and added a test for issuer URL mismatches to enhance flexibility in
refactor methods for buyQuickRate and sellQuickRate to improve clarity and consistency to enhance code readability and maintainability by standard
added a new configuration file ` CoverageConfig . java ` and refactored class name retrieval in ` CoverageController . java ` to use a
added a conditional check before registering sticky events in ThumbnailView to prevent unnecessary registration of sticky events
added character normalization logic in NormalizerBase . java to ensure only ASCII characters are processed during normalization
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL update statistics in ` SpillableGroupByIT ` and ` NoOpStatsCollectorIT ` to improve test reliability
( chore ) camel - cometd : migrate test to junit4 in camel - cometd
updated attribute handling in HtmlTag . java to include " OK " prefix to enforce compatibility with HTML5 standards in version 5
added a line break to the HTML output in HtmlCoreReport . java to improve the readability of the generated report output
updated ramBytesUsed calculation to handle null scores to improve robustness by avoiding potential null pointer exceptions
added StringHolder and StringHolderTypeAdapter classes with custom serialization and deserialization methods to enhance JSON handling capabilities for custom types in Gson
added extradata to miningparameters in MergeCoordinator and created a test for it to ensure that the merge coordinator correctly uses the extra data from
added a static final ` numArgs ` to track the number of arguments passed to the ` DependencyParser ` class to improve flexibility by allowing
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the codebase
updated variable names from ` configedThreshold ` to ` configuredThreshold ` in ` DefaultMigrationAddressComparator . java ` and refactored migration
rename parameter ` part ` to ` partOrList ` in ` RestClientRequest ` and ` RestClientRequestImpl ` to improve clarity
( chore ) camel - twitter : move bootstrap - responsive and bootstrap - responsive resource to the same directory
removed the basicCategory method from SpanishTreebankLanguagePack . java to streamline the code by eliminating unnecessary functionality
hhh - 13516 deprecate ` ` load ' ' method in abstractentityloader and uniqueentityloader
hbase - 26467 regionserverflushtableproceduremanager and regionserversnapshotmanager do n ' t wait for the task to be
add a check to set the width and height if it be zero to ensure that the superclass ' s size is set correctly when dimensions are zero
remove duplicate call to fillPool ( ) in HikariPool . java to improve code clarity and maintain consistency in method usage
replaced the assureMatchVersion ( ) method with a default value of Version . LATEST in multiple filter factory classes to ensure that
fix proxy generation for non - abstract method . fix # 3996 ( # 3997 )
[ drools - 1340 ] do n ' t throw an error if the input be a comma
renamed multiple Java files related to ` GuavaOptionalSubject ` , ` IterableOfProtosSubject ` , and ` MapWithProtoValues
added a check for invalid payload length in WsFrameBase . java to ensure that a valid payload length is provided to avoid protocol errors
move publishsubscribechannelparser and publishsubscribertest from ' channel ' to ' dispatcher '
updated executionId handling to use Long instead of String across multiple classes to improve accuracy in tracking execution IDs during bootstrap operations
added multiple width and height parameters to the digest method in ImageProcessor . java to optimize image processing by reducing memory usage
removed logging of the overlay version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to improve logging clarity and reduce
updated the delayUntil calculation in FileSyncAdapter to use the current time instead of a fixed value to improve synchronization timing for better user experience
updated the initialization of the afterConversionTime variable in SegmentV1V2ToV3FormatConverterTest . java to ensure the correct timestamp
refactor path handling by replacing ` fullPath ` with ` Path ` instances in ` QueryProcessExecutor . java ` to improve code clarity and
updated URL handling in DefaultPackageScanClassResolver and added URI processing in DefaultPackageScanClassResolverTest to improve URL processing accuracy and enhance error
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] add timestampextractorutils . java to support
added a new file SpringSecurityAuthenticationSource . java to provide authentication source functionality for LDAP users
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced the auto - suggest dialog with a simple form implementation using a cached list to improve user experience by avoiding unnecessary file suggestions
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
corrected a typo in the method parameter name from ' collection . getName ( ) ' to ' collectionName ' to improve code readability and
updated zoom calculation and type casting in MapOverviewImageMouseHandler . java to ensure consistent zoom behavior and improve code clarity
updated KNearestNeighborClassifier to accept Similarity as a parameter and modified related methods to enhance similarity handling and improve classification accuracy in the classification process
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing a more efficient constant
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity by using a
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintain consistency
added mtu request tests and modified mtu handling in BluetoothGattTest . java and ShadowBluetoothGattTest . java to
refactored the ` createServletOutputStream ` method into a separate method ` createServletOutputStream ` to improve code readability and maintainability by
added logging for unsatisfied link errors in VoskSTTService to improve error handling and provide better diagnostics for unsatisfied link
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety for concurrent access to the processing chains map
updated Japanese and Russian resource messages in Resources _ ja . java to improve clarity and consistency in user interface messages
updated condition from ` size > 0 ` to ` size > 1 ` in JDBCTypeMapping . java and modified assertions in JDBCTypeMappingTest
added synchronized modifier to ` addPlayer ` and ` removePlayer ` methods in ` GenshinScene . java ` to ensure thread safety when
refactor accessibility handling to use regex for control codes and code matchers to improve accuracy and performance of accessibility checks
updated command behavior and behavior in MenuBar and SideMenuBar classes to accommodate side navigation functionality to enhance user experience by allowing navigation to
removed the import statement for Disposable and added disconnect handling in WampStreamingService to improve code clarity and enhance error management during Wamp
updated energy limit validation logic in ` UpdateSettingForEnergyLimitContractActuator ` and ` UpdateSettingForEnergyLimitContractActuator
replaced instances of ` url1 ` with ` javaUrl ` and added protocol handling in ` UrlBean ` to improve clarity and functionality
camel - 7999 : camel - soap - jaxb - add namespaceprefixref property to soapjaxbdataformat
updated assertions in TestRange . java to use a new method ` isSameDay ` to improve clarity and maintainability of date comparison logic
added JettySolrRunner support to BasicAuthIntegrationTest and updated security property handling in ZkStateReader to ensure proper server restart verification and
add pricefeed to tradechartsviewmodel to allow customization of trade currency
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and
updated variable names and logic in NativeString . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added functionality to download and save files in FileDownloader to enhance file management capabilities for improved user experience
updated the initialization of the RandomAccessFile to use a local variable for the log channel to improve code readability and ensure the log length is correctly
added methods to check if the registry is running and delete files with a retry mechanism to improve reliability and error handling during file operations
removed unused import statements and added a call to startLoading ( ) in Quick3dMain and TextureTest classes to streamline the loading process
removed unused variables and added suppress warnings in multiple Java files to improve code clarity and reduce unnecessary warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerException when instances are null
added support for disabling transaction isolation in ` PhoenixConnection ` and ` PhoenixDatabaseMetaData ` to ensure that transactions
added transaction attribute handling in AbstractStepFactoryBean and modified exception handling in ItemOrientedStep and SkipLimitStepFactoryBean to improve transaction
replaced ` CasClient ` with ` DirectCasClient ` and refactored security interceptor in ` CasManagementSecurityInterceptor ` to improve
added a menu item for adding a category in the ListFragment and modified navigation drawer handling in NavigationDrawerFragment to enhance user experience by providing a
renamed method ` cancel ` to ` cancelMatchingOperation ` and updated references in ` FileDisplayActivity . java ` to improve method clarity
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated method signatures and variable names related to font size and text size in TerminalView and TerminalBridge classes to improve clarity and consistency in handling
[ fix ] constantanalysis should check if the fact be valid before modify it .
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
updated return statement in ArrayListSpanAccumulator to return a new ArrayList instance to ensure that the returned spans list is immutable and avoid concurrent modification issues
removed locking mechanism and improved code readability in Liquibase . java to enhance performance and maintainability by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and modified InstanceCacheChecker to set it to null to enable tracking of the revision for
updated foreign key and index handling logic in TableRetriever . java to improve clarity and consistency in foreign key and index naming conventions
camel - 16171 - add unit test for s3 component configuration
removed unnecessary import of TradeHistoryParamCurrencyPair and modified the method signature in BitstampAccountService to streamline code by eliminating
added error handling for NoSuchComponentException in getComponentInstance method to improve robustness by preventing application crashes due to missing components
do n ' t send push token when the remote setting be enable .
refactor LegacyAddressTest to read data from a file instead of a hardcoded string to improve test reliability by allowing multiple data files to
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from outside the class
refactor notification handling in NotificationsActivity to use a dedicated setupPushWarning method to improve code readability and maintainability by reducing duplication
added logging for channel closure and improved exception handling in NettyAsyncHttpProvider to enhance debugging capabilities and ensure proper channel closure during I /
log4j2 - 1349 fix ldap password policy enforcement
refactor DefaultAnnotationEngine and Stubber classes for improved clarity and structure to enhance code maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable tests related to issue PHOENIX - 2840
nifi - 5341 : added timezone support to aboutdto to allow user to specify the timezone of the nifi instance
do n ' t split own range if the number of token be less than the number of token
simplified the initialization of ` child ` and ` bscc ` in ` BeanContextSupport . java ` to improve code readability and
fix race condition in circuitmanagerimpl . add ( circuit )
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 2261 : remove duplicate code in sinkrunner , sourcerunner , pollablesourcerunner , pollablesinkrunner , poll
replaced error logging with info logging for authentication failures to improve clarity of error messages for better debugging
refactor ContainerOrderFocusTraversalPolicy class to improve focus traversal logic to enhance user experience by improving focus navigation experience
make freehand ( ) return int instead of double for getpointlength ( )
corrected a typo in the constructor declaration in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code consistency and adhere to
refactor connection handling in SchemaCrawlerMain and add a new execute method in Executable to improve resource management and enhance logging capabilities
add support for jdk 1.2 and jdk 1.3
corrected a typo in the exception message in CountersManager . java to ensure accurate error reporting for better debugging
updated audio queue handling logic in MediaManager . java to improve audio queue position management and prevent potential errors
added an additional parameter to the debug log statement in HttpConnection . java to improve logging clarity by including the cancelled status
added a ` isTransient ` method to ` JpaPersistentPropertyImpl ` and a corresponding test in ` JpaPersistentPropertyImplUnitTests
updated the repository version ID from " HDP - 2.2 . 0 " to " HDP - 2.2 . 0 " in
trufflevm : make eval ( ) return object rather than symbol .
change access modifier of isbinarytype method from private to public in SampleResult . java to allow access to the method from other classes and improve
updated the variable name from " hive . tez . dynamic . partition . pruning . max . data . size " to " hive .
remove priority field from javaproxyproblem . findproblem ( )
replaced the use of ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler
updated string formatting in TableWriterTest to use a configurable line separator to improve flexibility and maintainability of the code by allowing different line separators
refactor DebugHelper class to improve debugging functionality to enhance performance and maintainability of the debugging process
added a boolean field ` ownsTexture ` and modified its usage in ` ParticleEffect ` to manage texture ownership to ensure proper handling of texture
added LDAP authentication configurations to HiveConf . java to enhance LDAP authentication capabilities in the application
added import statement for Scope in DatacatalogSearch . java and updated imports in DatacatalogGetEntry . java and DatacatalogSearch . java to
updated InputMethodManager initialization and soft input handling in DetailActivity . java to improve input method management and enhance user experience
added a test for converting between primitive and object data types in DataTableTypeRegistryTableConverter to ensure correct conversion of data types during conversion
updated the size calculation in TestFileSystem . java from 100 , 500 to 10 , 50 to optimize memory usage and improve resource management
updated error message in ContentTypeManager . java for clarity to improve user understanding of potential resource closure issues
modified the ` dropSequences ` method implementation across multiple database - related classes to implement migration exception handling for database operations
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced direct field creation with a variable assignment to improve code readability and maintainability
add map and parent style gathering for hierarchical icon ( issue # 406 )
added a test method to verify the behavior of the findOne method for non - existing objects in MongoTemplateTests to ensure that the upsert functionality correctly
replaced ` mid ` assignment with ` low ( ) ` for better clarity and consistency across multiple classes to improve code readability and maintain
added functionality to record launches and refactored intent construction in Stats . java to improve app launch tracking and ensure proper handling of null shortcuts
added graphics2D drawing and disposal functionality in JavaSEPort . java to improve rendering performance and ensure proper resource management
refactor instructorfeedbackresultspagedata to reduce memory usage
add a check for zero inventory IDs and return a default ID if it is zero to ensure that a valid player ' s inventory ID is returned
added a conditional check before breaking the break statement in ConfigDescriptionRegistry . java to ensure that the loop does not proceed if the condition is met
updated return type handling in ` ReloadableJava parserVisitor ` , ` ReloadableJava17ParserVisitor ` , and ` ReloadableJava8
refactor blended tiles handling in TileMapRenderer and TiledLoader to improve code clarity and ensure proper initialization of the blen
removed unused Java classes from the @ Classes annotation in Probe . java to streamline the code by eliminating unnecessary dependencies
added null check for last and updated sum calculation logic in IfcTools2D . java to improve accuracy of area calculations and prevent potential null pointer
replaced the initialization of lockOnSync with a direct assignment of the currentThrottleRate to simplify the code by eliminating unnecessary object creation
pipeeventbus . addhandlers ( event ) now override onactionactivate ( event )
updated ZkController initialization to use TIMEOUT instead of 1000 to improve test reliability by allowing more time for ZkController operations
added a new test method ` passcode _ with _ client _ parameters ` in ` TokenMvcMockTests . java ` to validate the pass
added new offset constructors for LengthFilter and KeepWordFilter in TestRandomChains . java to enhance the functionality of the TestRandomChains class by
removed the JUnit Ignore import from RandomPlaneTest . java to enable the test execution and ensure it runs
updated LLVMMemory to use ` putI64 ` instead of ` putI1 ` and ` putI16 ` for argument handling to
updated the ` btCollisionObjectArray ` and ` btRigidBody ` methods to return the instance of ` btCollisionObject `
added copyright year to the AboutDialog and updated the openrocket URL to reflect the current year to ensure accurate information is displayed for users
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 19793 )
added print statements and updated expMOI and expMOI values in FinSet . java and MassCalculatorTest . java to improve debugging
replace TOTAL _ MEMORY with MAX _ MEMORY and update memorySemaphore initialization to improve memory management by using maximum memory instead of total
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method visibility in CreateAlignedTimeSeriesPlan . java to
updated GENESIS _ OUTPUT _ PREFIX to " Bisq co - founder " and modified validation logic in TradeData
updated the input variable and added exception handling in JsonLoaderTest . java to improve JSON parsing and ensure proper exception handling for large integer values
updated the minimum table size validation in ObjectSet . java to ensure that the required capacity is within the valid range of 0x40000000 to
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale is valid before processing
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code by eliminating unnecessary rule key
added security exception handling and modified title limit logic in FileHelper . java and TextHelper . java to improve robustness of file retrieval and enhance
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for attribute resolution in ` ShadowThemeTest ` to enable support for multiple attributes
updated the sheet name check in HSSFWorkbook . java and modified the sheet creation logic in TestHSSFWorkbook . java to ensure
updated the color tint from primaryColor to elementColor in ManageAccountsActivity . java to enhance the visual appearance by using a more appropriate
updated the handler initialization in DefaultEventBus to handle null replyHandler to improve robustness by avoiding potential NullPointerExceptions
added binaryCollationName property and its implementation in MariaDbDbmsType , MySqlDbmsType , and AbstractDbmsType to
added a default method ` whenType ` to the ` Tree ` class that returns an ` Optional ` instance based on type checking to enable safer type retrieval and reduce the risk of ClassCastException when working with tree structures
refactor navigation handling to use a dedicated method for user view destination to improve code readability and maintainability by reducing duplication
replace response . ok with response . temporaryRedirect in FeedREST . java to improve user experience by redirecting to the public URL instead of a
[ flink - 26011 ] [ kinesis ] ensure the provided deserializer be serializable
( chore ) camel - test - infra - java : fix checkstyle issue
refactor the initialization of the ZkStateReader to ensure it is created and properly closed to improve resource management and prevent potential resource leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
added a protected method ` read ` to handle ` EndPoint ` and ` Buffer ` in ` ProxyHandler . java ` to improve code re
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to simplify buffer allocation
updated the ` prepareStreamsToUpload ` method to return a boolean indicating whether the upload was successful or not
updated order comparison logic in AbstractConfigLoader and modified test cases in TestMicroserviceConfigLoader to ensure consistent ordering of configuration models and improve test
added a new file PicOfDayAppWidget . java to implement a PicOfDayAppWidget for loading images from WikimeDIA
server : fix the default value of internal lb offering id when it be invalid
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to improve clarity and functionality of join condition processing
[ hotfix ] [ stream api ] deprecate deprecated operator transformation class
added user credentials to JMX connections in NodeToolCmd . java to enable secure communication with the remote JMX server
removed unused BytesRef initialization in Stemmer . java to streamline code by eliminating unnecessary variable declarations
refactor widget application logic to use mPageViewIconCache instead of a hard - coded value to improve performance by avoiding unnecessary hardware acceleration
g3d - 310 : do not call getactiveeuclidianview ( ) on 3d desktop
updated rotation positioning logic in GcodeRenderer . java to ensure rotation values are within valid range to improve stability by preventing invalid rotation
added support for the workspace directory option in the TerminalClient class to enable users to set the workspace directory for daemon mode
updated the test file path from " options . apt " to " options . html " to ensure the test uses the correct HTML file format
refactor ScimUtilsTest to use JUnit 5 annotations and extend with PollutionPreventionExtension to improve test structure and ensure proper exception
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` AuthorizationRequest ` to improve
updated assertions in HibernateIT to use assertTrueEventually for session retrieval to improve test reliability by ensuring the cache hit count reflects
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
refactor MultiPaintEventTest class to improve code readability and maintainability
removed the ' final ' modifier from the variable mNewScale in WorkspaceStateTransitionAnimation . java to simplify the code by eliminating unnecessary
refactor SyncFactory to improve synchronization logic to enhance performance and reliability of data synchronization
added unique key field handling in LukeRequestHandler to ensure unique key information is included in the schema
added a new document filter for strokeColor and backgroundColor in BorderEditor . java and modified the color handling in EditableResources . java to enhance
add compilerassert . neverpartofcompilation ( ) to avoid compilation error .
[ hotfix ] [ test ] replace slotpoolimpl with slotpool in defaultschedulertest
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and GatewaySocketAcceptor , and modified return values in PingPongApp
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener to enhance user interaction by notifying users when the menu item is clicked
updated InfoDropTarget and UninstallDropTarget to extend UninstallDropTarget and added methods for starting details activities with uninstall affordance to
rename methods from ` add ` to ` push ` in ` LookupControllerTest ` , ` SymbolTableTest ` , and ` LookupController `
updated API , IMAGE _ URL , HOME _ URL , and EVENTLOG _ WIKI constants to use " commonswiki " instead
refactor index increment and decrement logic into separate methods for clarity to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ` with direct calls to ` Collections . sort ` across multiple classes to simplify code and improve readability by redu
added a new date and time patterns string in FormatData _ hr _ HR . java to support date - time formatting in the application
added a call to clearFocus ( ) in DetailFragment . java to ensure the clickedView is reset before further interactions
updated selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve user experience by ensuring correct language selection behavior
updated the time zone name from " West Samoa Summer Time " to " West Samoa Daylight Time " across
added native methods for registering global , weak , and access fields via handle in FastGetField . java to enhance the functionality of the FastGet
avro - 942 . java : fix reflect so that @ nullable field have a default value of null . contribute by binglin chang
increased the timeout value from 300 to 1000 in the SedaBlockWhenFullTest class to allow more time for blocking operations to
added a null check before remapping RClass in ResourceMerger . java to avoid potential NullPointerException when remapping resources
mondrian : add constructor to hapi - hapi - hapi - h2 - h2 and hapi - h2
camel - 16400 : camel - http - add connection close header to camel - http component . thanks to benjamin
increased socket timeout from 60000ms to 120000ms in BasicDistributedZkTest . java to allow more time for distributed
added a test to verify that the database query returns zero for the ' FREE ' status and its final price cts to ensure that the
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
refactor CasProcessingFilter class to improve code structure to enhance maintainability and readability of the code
do n ' t cast nestablenode to nestablenode , use getfirstelementchild ( ) instead
planner - 2748 : fix folding of ` ` add working object ' ' and ` ` remove working object ' ' ( #
updated metaPortStart and dataPortStart values in ClusterEnvBase . java and added waitingToShutDown method in ClusterNode . java
updated log message from warn to info in ELContextCleaner . java to provide clearer information about the absence of BeanELResolver properties
added a content type for " application / octet - stream " in WebdavEntry . java to ensure proper content type is set for file uploads
added a method to return the actual queue size in the LazyTraceThreadPoolTaskExecutor class and created unit tests for it to enhance functionality and ensure
fix distanceop . distance ( ) to check if the distance do n ' t exceed the minimum distance
rename ` required ` to ` requiredLabel ` for clarity to improve code readability by using a more descriptive variable name
replaced the ` next ( ) ` method with an ` updateProgress ( ) ` method in ` PurgingPartitionIterator . java ` to
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added ` getHeight ( ) ` and ` getWidth ( ) ` methods to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation for polygon vertices and updated localVertices assignment logic to ensure that polygons contain at least 3 points to avoid runtime errors and ensure localVertices
replaced the use of ` new ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve
mob - 465 : avoid npe in implicit curve when no polynomial be present
modified the handling of ` nameLength ` and ` multibyteFlag ` in ` ExternalNameRecord . java ` to accommodate both
camel - 7999 : camel - jbang - fix typo in description
added logic to exclude username and password prompts based on the returnLoginPrompts flag to enhance security by preventing exposure of sensitive information
replaced the ` remove ` method with a ` removeIf ` method for listener removal to improve listener management by ensuring listeners are only removed if
added an actionToggleSpin in PieChartActivity to spin the chart with a specified rotation angle to enhance user experience by allowing users to
cloudstack - 3569 : add process kill when copy vhd to secondary storage
hbase - 16400 avoid unnecessary normalization of table that have quota
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the visibility annotations in the ` @ VisibleForTesting `
added @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to blocking PRs being failing
fix bug with hopperhock . getboundingbox ( ) , close # 165
added authentication dialog creation in ` SsoWebViewClient . java ` to enhance user experience by providing authentication options
refactor TestStressIndexing2 to implement deleteDoc and deleteByQuery methods to improve test reliability and enhance document deletion functionality
[ flink - 22559 ] [ table - planner - blink ] disable upsert table test due to flink - 22559
replaced ` get ` with ` computeIfAbsent ` in ` ResTable . java ` to improve code readability and avoid potential ` NullPointerException `
added deserialization configuration for single values as strings in DefaultEntityMapper to ensure proper handling of single values in JSON data during deserialization
updated localization update message from " Localization update : " to " Localization update : BE , UK , and SL . " to
updated SHORTCUT _ CATEGORIES to use a resource string for application categories to improve flexibility by allowing dynamic configuration of app categories
renamed the method ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` and introduced a new method ` visitRelExpressionInstance
nifi - 1187 : add mime type for flowfile in gethttp
fix nullpointerexception when delete a bundle with conditional _ update _ on _ same _ resource
updated button references from " exit " to " done " in HelpActivity . java and modified URI construction in SearchBookContentsActivity . java to
updated NatsConfiguration . java file to improve naming consistency and clarity
updated the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter and modified its implementation to improve partition invalidation handling and
use buffer instead of boundedfifobuffer in viewresultsfullvisualizer
updated icon resource from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to align icon representation with the updated user interface design for better
[ java ] use buffer . getlongvolatile instead of buffer . getlong in broadcastreceiver .
updated import statements in MocksCreationTest . java for consistency and clarity to enhance readability and maintainability of the test code
added a constant for the DATA _ SOURCE _ NAME and modified the visibility of the generateDetectionConfig method in CSVThirdEyeDataSource to improve
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow for a longer wait time before starting the
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated methods from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
cloudstack - 3569 : fix template uuid generation to use utf - 8
added a test for depositing workspace items without a workflow test in WorkflowItemRestRepositoryIT . java to ensure that the API behaves
replaced ` stream ( ) ` with ` distinct ( ) ` in ` ClassLoaderSupportImpl . java ` to ensure unique classpath files are processed
removed the static method ` isBoxedPrimitive ` from ` Unbox . java ` to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use indexOf for better readability and efficiency to improve code clarity and efficiency when comparing command -
added a check to ensure the table is not an external table before deleting it to avoid potential errors when attempting to delete non - external tables
updated asynchronous execution settings in HiveConf and modified exception handling in SQLOperation to improve asynchronous execution management and provide more informative error messages
added a try - catch block around the dismissDialog call to handle potential exceptions during dialog dismissal
updated the execution task role handling in UpgradeResourceProvider to use a constant instead of a hardcoded string to improve code readability and maintainability
added a new variable ` diff ` in the ` OperationSetTelephonyConferencingSipImpl ` class to store the current configuration information
add a clearentries ( ) method to flutterlogtree ( # 2269 )
added checks for socket input and output shutdown status in ChannelEndPoint . java to ensure proper handling of socket states during operation execution
refactor SetNullableGenerator to improve code readability to enhance maintainability and facilitate future updates
camel - 16400 : fix bug in camel - example - reportincident
simplified import statements and refactored form handling in NettyRoutingFilter and FormIntegrationTests to enhance code readability and maintainability
added @ ApiOperation annotation to multiple service classes and updated method signatures to include an additional parameter to enhance API documentation clarity and provide additional functionality
updated lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to ensure proper lifecycle management before application listener updates
updated the FG _ FK color from 90 , 0 , 0 , 0 to 200 to improve the visual appearance of the FG _ F
added a new variable ` $ wnd . soundFormats . mp3 . required ` to ` SoundManager . java ` to disable audio
fix flaky unit test secondaryindexmanagertest . assert [ not ] markedasbuilt
added version and version information to the preferences page to provide users with information about the PMD plugin and its bundle version
[ hotfix ] [ test ] use findthrowable ( ) in customserializationitcase
updated MediaFormatUtil . java for improved media format handling to enhance performance and maintainability of media formats
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to provide a default implementation for cell editing functionality
added a new method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` to control the printing of unused commands based on
added a temporary counter for each VocalTractModifier and updated the vscales array to use 0.85 instead of 2.0 to
updated import statements in BaseScalarUdfTest and TestGenericUdfConcat classes to ensure consistency and correct usage of BaseScalarUdfTest
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
testSkeletoncontrolrefresh : use anim composer instead of animchannel to speed up animation
renamed ` NodeFilter ` to ` NodeCountFilter ` for clarity to improve code readability by using a more descriptive name
updated the condition to check for the size of sync blocks to ensure that the fetch block size is within the expected range of SYNC _ FETCH
updated ` setState ( 365 ) ` to ` setState ( 366 ) ` and modified ` ty ` assignment in ` DebugExpressionParser . java
updated dependency dependency check in ExcludeDependency . java to check for transitive dependencies to improve accuracy of dependency resolution by ensuring only relevant dependencies are considered
rename method ` tmp ( ) ` and ` lerp ( t v ) ` to ` dst2 ( t v ) ` and `
initialize the ' args ' array to an empty array instead of null to ensure that the ' args ' array is ready for use and prevent potential
updated linker argument handling in RustBinaryDescription to use ImmutableList instead of List to improve flexibility in specifying linker flags for Rust builds
[ 3.0 ] fix error message in adminemailpageuitest . java and refactored the code in adminemailpageuitest
added a new configuration variable " hive . query . name " and modified logging statements in GenericUDTFGetSplits to include externalDag
added import statement for java . io . File in TileAtlas . java to enable file handling functionality within the TileAtlas class
[ netbeans - 4379 ] do n ' t write to a closed stream in escapeprocessingoutputstream .
updated validateQuery method to include arguments for better error message formatting to enhance error message clarity and provide more context for validation failures
updated index version from 1 to 2 and refactored tree retrieval logic in LuceneExecutor . java to improve compatibility with newer index versions and
[ flink - 11014 ] [ test ] add a test to verify that default kryo registered classes do not change
added null check before adding configType to configTypesUpdated to avoid potential NullPointerException when removing the configuration
refactor boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for better readability to improve code maintainability and leverage
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user interface by hiding customization drawer when needed
refactor warning handling in TermVectorComponent to use a constant instead of hardcoded values to improve code readability and maintainability by reducing
added optimistic types logging and modified log level checks in Compiler . java to improve log clarity and ensure optimistic types are only enabled when
refactor Expect class to improve code readability to enhance maintainability and facilitate future development
added UnixSocketConfigurationStrategy to DockerClientFactory and implemented it in UnixSocketConfigurationStrategy to enable support for Unix socket connections in Docker environments
added flaky test for the ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest ` to improve test reliability by
( chore ) camel - reactive : provide more specific exception when there be no active subscription
refactor vectorization logic to use MapWork instead of MapRedTask for improved clarity to enhance code readability and maintainability by
added a new parameter ` true ` to the superclass constructor in ` StringAppender ` and ` LogDivertAppender ` classes to enable additional functionality
do n ' t call updatecurrentnode ( ) if guipackage be null .
sulong : add ` ` weak ' ' and ` ` weak ' ' to function descriptor .
updated multiple Java files related to ` XShareAuto ` , ` LoadClassNegative ` , and ` ReadFromNoaccessArea ` to improve code
# 173 - enh : add test case for defaulttransactionthreadlocal . get ( string )
added a check for invalid OperationHandle in HiveStatement . java to ensure that invalid operations are handled correctly and log warnings for non - existent operations
document alter table alter column drop not null and remove incorrect information
camel - 17836 - camel - aws : add unit test for secret manager component
refactor SimpleTree class for improved performance to enhance efficiency of tree operations
removed exception message from the return statement in UserREST . java to simplify the response structure for better readability
added a boolean parameter to the ` fromContent ` method and modified the ` Result ` constructor to include a subTree parameter to enhance functionality by
updated column width calculation in Sheet . java and added a new test for column width in HSSFSheet . java to ensure accurate column width
updated the ` Commands . less ` method to include a ` configPath ` parameter to provide additional context for command execution based on the specified path
replaced ` Set ` with ` Collection ` for table handling in ` DotWriter ` and ` GraphExecutable ` classes to enhance flexibility in
updated the default SSHD container image to use a specific version of 1.0 . 0 to ensure compatibility with the latest features and improv
cloudstack - 4892 : fix npe in agentmanagerimpl when hostid be null
refactor key generation in DefaultGroupKeyGenerator to use BlockSingleValIterator for improved clarity to enhance code readability and maintainability
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated its implementation to improve test clarity and
bcsiliconrecipes : fix npe in ingredient stack creation .
fix checkstyle issue in graphhopperconfigmixin . put ( )
updated visibility settings for child child in CellLayout and refactored drag exit method in DragController to improve code readability and maintainability by
updated the ModifyRequestBodyGatewayFilterFactory to use a rewriting function for original body and added a new test for upstream request body to improve the
added package accessibility checks in constructors and fields to enhance security by ensuring only accessible types are processed
changed log level from warn to trace in LoggingHandler . java to reduce log verbosity and focus on more detailed information during debugging
refactor prefix extraction logic in WhiteBlackList . java and add Issue348 . java for wildcard handling to improve code clarity and ensure
added options menu functionality and improved image handling in the GalleryActivity to enhance user experience by allowing quick access to images from the gallery
refactor MongoDBServiceFactory to lazy initialization to improve efficiency by avoiding redundant builder calls
added test cases for replacing boolean values with boolean values in InlineConstantMutatorTest . java to ensure code formatting is maintained for final boolean values
added Blackhole parameter to the decode method in RecordTest . java to improve performance by reducing memory consumption during decoding
fix : update gapic - generator - java with mock service generation fix ( # 263 )
updated ` getAllUnitStrings ` method to return ` Map . Entry < String , String > ` instead of ` Stream < String > ` to
removed the clearing of witnesses in ManagerTest . java to ensure the database state is reset before tests run
replaced PrestoException with a debug message in JdbcPageSink to improve error handling by logging exceptions instead of throwing them
updated stack management in NativeError . java to use dedicated functions for stack manipulation to improve code maintainability and facilitate easier manipulation of
removed a check for path names starting with a period in DrillPathFilter to improve filtering logic for path validation
renamed ` onboard ` and ` autoLoadPinotMetricsService ` to ` autoLoadPinotMetricsService ` and updated related references
added a call to clear the index in BasicFunctionalityTest . java to ensure the index is reset before each test execution
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to ensure consistent color representation across the application
changed the ` fThreadGroup ` field to be volatile and modified the ` fLookForStuckThread ` and ` fLookForSt
[ hotfix ] fix checkstyle violation in valueresultdata
updated hash code generation in FuzzyQuery to use superclass ' s equals method to ensure proper equality checks for the FuzzyQuery class
removed unnecessary console print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
removed the ` @ Nullable ` annotation from the ` removeFile ` and ` removeDirectory ` methods in ` SharedOpenFilesCache . java `
updated the product version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated ` retrievePersonAttributes ` and ` buildResolvedPrincipal ` methods to include a default value and modified principal creation logic to enhance flexibility in
changed log level from info to warn in OpenWebNetBridgeHandler . java to provide a more appropriate warning level for connection issues
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to standardize hash function naming conventions
added a constructor to ThumbnailsCacheManager to handle null storageManager and account parameters to ensure that a valid storageManager is provided to avoid potential
updated the loop condition in GroupSelectionQuery . java to allow more attempts to stop at certain points to improve stability by preventing out -
added a new file ` Bug1933922 . java ` that implements a recursive compilation mechanism to address bug # 1933922 by
reformatted comparison statements in multipleSeriesProvider and AjaxDecoratorMapper classes for consistency to improve code readability and maintainability
updated the validation check from 33 to 32 in FileResolver . java to ensure that control characters with 0 - 31 are valid
added a call to requestFocus ( ) in the Display class to ensure the component updates its focus when needed
updated test data and refactored test data in InstructorHomePageUiTest . java to improve test data organization and enhance clarity of
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor Crouton handling in DetailFragment . java and update notification handling in MainActivity . java to improve code clarity and ensure correct
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code readability to enhance maintainability and facilitate future feature additions
refactor process execution to use a builder pattern to improve code readability and maintainability by encapsulating process creation logic
replace local host with localhost for metrics incrementing past window in HintedHandOffManager to ensure accurate metrics reporting by using a specific IP
refactor controller and base handling in Metrics . java to improve code readability and maintainability by separating concerns
added assumptions for Apple platform availability in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple
use ` requireproperty ` instead of ` validateproperties ` in jvmciversioncheck . java
refactor Mockito class for improved readability to enhance maintainability of the codebase
updated TestLargePageUseForAuxMemory . java file to improve test coverage for auxiliary memory management
updated methods in BinaryParser , PlainTextParser , and ParsingExecutionContextView to include charset handling to improve parsing context management by allowing customizable
added support for a new ` MultiPartFormDataCompliance ` enum in ` HttpConfiguration ` and created it in ` Request ` to manage and retrieve
added JDK - 17 version to GradleDistributionManager . java to ensure compatibility with the latest JDK version
refactor type addition logic in DatabaseSnapshot and SnapshotControl classes to improve code readability and encapsulate type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith in ChangeSet . java to ensure that a valid runWith is returned when it is null or empty
http : / / issues . apache . org / activemq / browse / amq - 2138 - add test case for amq
updated multiple Java files related to audio device and media codec to improve code consistency and maintainability across the project
add a boolean parameter to the black box counting test case , a suggest by valerybokov
updated mSnapshotView and mIconView to use mTintAmount instead of mDimAlpha and mDigitalWellBeingToast
added a new file ` SumZeroAggr . java ` to implement the ` SumZero ` aggregation function in Drill to provide functionality for
updated SQL syntax in FirstValueFunctionIT and NthValueFunctionIT to remove the ' NOT NULL ' keyword from the SQL statement to simplify
hbase - 26300 addendum to hbase - bucketcache # getallocationfailover warning message ( chunhui )
added a null check for propName before adding it to the roleObject to avoid potential NullPointerException when propName is null
added visibility annotations and refactored task removal logic in StatusBarTouchController . java and RecentsView . java to improve testability
added a new method ` logContainerStream ` to handle container logging with a boolean parameter to enable logging of container streams to facilitate
add performance test for mvstore cache
updated the LONG constant from " L " to " J " to reflect the correct representation of long values
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be accessed without an instance of the class
camel - 16400 fixed the issue of camel - rest - do not set body to null
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` for managing file deletion and
g3d - 386 : update size - keep - drawables ( ) for plane view companion
[ java ] fix indexoutofboundsexception in bitutil and int2intcountermap
updated methods in AccessibilityManagerCompat to use ` sendStateEventToTest ` instead of ` sendEventToTest ` across multiple classes to
added user agent request handling for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on the renderer
do n ' t print stack trace if there be an error in scrolltoerrorline ( )
added theme checks for the ' menuButtonTopBool ' and ' menuButtonBottomBool ' properties in the SideMenuBar class to ensure proper
updated Skia . java to include " libskia " and added a preload variable to improve compatibility with different operating systems and enhance functionality
netparams : add support for unittest network
added error handling for missing format arguments in QueryCommand to improve user feedback when invalid format arguments are provided
replaced ` capacity ` and ` isPositionValid ` with ` length ` for improved clarity to enhance code readability and maintainability
updated the ` walkRuleAndAdd ` method to include an additional ` srcRule ` parameter and modified the dependency traversal logic to ensure that dependencies
added support for overriding module names in the PatchModuleFileManager class to enhance module patching functionality by allowing specification of module locations
[ java ] do n ' t check if we have a candidate term id in the election .
change default policy for OwnCloudClientManagerFactory based on SAML authentication status to ensure proper client behavior based on authentication requirements
add error message for missing mappedtableresource ( table ) in readbatch and writebatch
replaced try - catch block with utility . close ( ) in several classes to improve code readability and reduce duplication
refactor AnonymousAuthenticationFilter to use a deferred context for anonymous authentication to improve flexibility and maintainability of the authentication process
modified the ` removeActor ` method to include a ` unfocus ` parameter to enhance functionality by allowing control over actor removal behavior
refactor prompt initialization to use a constant for valid configurations to improve code readability and maintainability by reducing duplication
added logging capabilities to NettyHttpServer and improved response handling in RoutingInBoundHandler to enhance logging capabilities and ensure proper connection management
refactor various Java files for consistency and clarity to improve code maintainability and readability
replaced the ` update ( ) ` method with ` invokeLater ( this : : update ( ) ` in ` CodeDependenciesPanel . java
( chore ) camel - groovy : make it easy to configure and use script from the exchange context .
remove dependency on maven - plugin - api in favor of maven - plugin - api
[ hotfix ] [ cli ] make programoptions public
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and introduced a commit method to enhance testing capabilities for SharedPreferences functionality
remove unused storage alias handling in HttpsMessenger . java to streamline code by eliminating unnecessary alias retrieval
danielwagnerhall : fix npe in httpcommandexecutor . getresponsebodyasstring ( ) .
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
added dropXp and dropXp methods to the Block class for dropping resources to enhance resource management by ensuring appropriate dropping based on
added spatial location calculator methods to DataOutputQueue and depthai classes to enhance spatial location calculator functionality for improved data processing
updated multiple Java files related to community detection and GSA components to improve code organization and maintainability
replaced ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` in ` TreeTrie . java ` and added
replaced manual color calculations with method calls for foreground and background in AttributedStringBuilder to improve code readability and maintainability by leveraging
updated the fingerprint assignment logic in PeerSync . java and added a system property in PeerSyncTest . java to control the fingerprint behavior based on
changed the visibility of the moveFunds method from private to public to allow access to the method from other classes and improve usability
updated event emission logic in MongoTemplate and added application context in MongoTemplateTests to enhance event handling and ensure proper context management during MongoDB operations
improve performance of collectionitem . writedata ( ) and collectionitem . readObject ( ) , remove static instance
tika - 3741 -- close input stream in tikacli to prevent resource leak
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag to improve error handling by catching a broader range
updated the parameter order for the loadConfig method in OptionsParser . java to improve code readability and maintain consistency
[ # 7370 ] instructorfeedbackcopyactiontest : fix typo in log message
removed the ` throws Exception ` declaration from the ` ExternalWorkerService ` constructor and changed the ` cleanup ` field to be ` final ` to
removed the step property and related methods from DisplayTextVirtualDatapoint , HomematicTypeGeneratorImpl , and HomematicType
updated logging messages in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of lock acquisition and acquisition processes
removed redundant calls to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to improve code efficiency by eliminating redundant job scheduling
danielwagnerhall : fix flaky test in selenium - backed webdriver
refactor logger management to use ThreadLocal for thread - safe logging to improve performance by reusing logger instances
replaced private method ` convertToCompilationUnit ` with ` @ VisibleForTesting ` and refactored Mockito imports in ` FunctionInitializerTest `
added a new method ` boxedTypeOrType ` in ` Types . java ` and modified type checking in ` Infer . java `
update focused task handling in RecentsView . java and update orientation state in TaskView . java to improve task orientation management and ensure proper
simplified region retrieval logic in TestFlushFromClient . java to improve code readability and efficiency
added logic to manage the original repository and save contract details in TransactionExecutor . java to ensure that changes to contract details are preserved and managed correctly
updated fee calculations in TokenIssueProcessor and Program classes to use dynamic properties instead of hardcoded values to improve flexibility and maintainability of fee
refactor cache management in RealisticRenderStrategy to use URI instead of RocketComponent to improve memory management and avoid potential memory leaks
refactor the composition logic in Blit . java to use temporary raster variables to improve code clarity and prevent potential side effects from using shared raster
added a boolean flag ` isUnselectedStyle ` and modified string width calculations in ` Label ` and ` DefaultLookAndFeel ` classes to
updated ArrayList initialization to use a fixed size of size and modified action list initialization to optimize memory allocation and improve performance during action list operations
removed the ` flags ` parameter from multiple method calls in ` ShadowApplicationPackageManager ` and ` ShadowUserManager ` to simplify method signatures and
updated PingRequestHandler . java for improved ping request handling to enhance performance and reliability of ping requests
add support for mp4 sample with increasing timestamps . mp4
updated firmware check logic in TradfriGatewayHandler . java to improve clarity and consistency to enhance code readability and maintainability while ensuring
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated block node validation in BoxLayout and DefaultLayout to include " table - cell " to ensure proper handling of table - cell display in layout
refactor JsonDecoder to improve handling of skipArray ( ) and add a new test for reorderFields ( ) in TestJsonDecoder to enhance
updated the ` releaseLocation ` method in ` BlockCache ` to include ` removalCause ` parameter to improve clarity and functionality of the removal
added @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to enable unit testing for the functionality
changed fields in ContextRegisterListener to be final to enhance immutability and prevent unintended modifications
refactor ObjectHashSet and ObjectHashSetIntegerTest classes to use a cache iterator and improve iterator initialization logic to enhance flexibility in iterator management and
added batchBytes constant and updated batch size checks in SparkReduceRecordHandler and ReduceRecordSource classes to ensure batch size does not exceed defined limits
changed MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
updated logging message for clarity and added handling for " abort " in JdbcProxyGenerator . java to improve logging accuracy and ensure proper resource management
update workspaceAnim initialization to use mStateTransitionAnimation instead of getState ( ) and setImportantForAccessibility based on the current state to
hbase - 11383 protobuflogreader : increase log level from warn to debug ( addendum )
updated scope substring assignment in UaaTokenServices . java and added a new test case in UaaTokenServicesTests . java to ensure that
replaced specific JDBC wrapper imports with standard SQL imports to improve compatibility with standard Java SQL interfaces
jbpm - 4640 - add executablecommand interface to make it easy to execute a command from a runtime context
deleted the JdbcTableService . java file to remove unused code to streamline the project
added padding methods to CellLayout and modified bitmap creation in Launcher to improve layout handling for portrait and landscape orientations
added a condition to check if the string is empty before collecting candidates to avoid unnecessary processing when the string is empty
replaced ` doExecute ( ) ` with ` Action ` in ` SamlMetadataUIParserAction ` and ` SamlMetadataUIWeb
added a method to check the number of open ports in LdapMockMvcTests . java to enhance port validation for LDAP processes during testing
log4j2 - 1343 fix shutdown hook for executorservice . shutdown ( )
refactor URL filtering logic in Fetcher . java and update logging in HTMLMetaProcessor . java to improve URL handling and provide clearer logging
updated SolrQuery instantiation to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheck
use karaf ' s console api instead of karaf ' s one
[ fix ] meshhelper . getverticescolors do n ' t work with blender 2.0 . 0
added a file filter to exclude timestamped reports directories during the copy process to ensure only relevant directories are copied during the copy process
fix ( datavalidatortest ) : remove test that do n ' t validate email
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added error handling for binding form errors in FieldUtils . java to provide clearer feedback when form execution fails
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a new flag ` allowExtractingPrivateFields ` to the ` FieldSupport ` class and modified the ` readField ` method to control
added a call to ` device . getName ( ) ` in ` WebDataHandler . java ` to retrieve the device ' s name for better
refactor lookup constructor initialization in Platform . java to use MethodHandles for dynamic instantiation to improve compatibility with Java 8 by utilizing MethodHandles for
rename the ` weights ` method to ` weightsByDouble ` and update its usage in ` ZParams . java ` to improve clarity and
updated the ` writeCustomHTML ` method to include the ` Database ` parameter across multiple classes to enhance functionality by providing context about the database used
updated key deserialization logic in BTreeMap . java to improve clarity and correctness of key retrieval
added exception handling for BalanceInsufficientException in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to improve error handling and provide
do n ' t write a zero - file to the heap if it ' s set to false .
refactor code to use ` Scope . getUI ( ) . sendMessage ( ) ` instead of ` System . out ` for logging messages to
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed a method call in Horton
added import statements for ` ItemProcessListener ` , ` ItemReadListener ` , and ` ItemWriteListener ` , and ` OnSkipIn
reformatted code for improved readability and maintainability to enhance code clarity and prevent potential NullPointerExceptions
updated print statements and modified message handling in SearchFiles . java , SortedSetDocValuesFacetCounts . java , and MessageFilesParser . java to
updated Test7005594 . java for improved functionality to enhance performance and maintainability of the code
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
server : fix npe if ip address be null ( vmid = = null )
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and introduced a new ` MCOptionUtils ` listener to
updated the ` iterableSubject ` and ` iterableTest ` methods to use ` Iterable < T > ` instead of ` Object . . expectedItems
camel - 16400 : camel - http - binding should only apply filter to external header if there be more than 2 header .
added assertions to verify the correctness of the database queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the database interactions are
updated value formatting in BarChartActivityMultiDataset and BarLineChartBase to utilize LargeValueFormatter for better label display to improve chart
refactor character handling in CommentsParser to use a constant for INNOCUOS _ CHAR instead of hardcoded ' z ' to improve code
removed the @ SuppressWarnings annotation from Platform . java to streamline code by eliminating unnecessary warnings
corrected a typo in the printLir statement in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
updated the Auto - generated method stub in NullAssertionValidator . java to improve code clarity by automatically generating method stubs
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key management for build rules
added a check to ensure the system profile directory exists before creating it and updated test methods to use JUnit 5 annotations to improve test reliability
refactor thread factory creation in TestcontainersDockerCmdExecFactory to use a dedicated createThreadFactory method to improve code readability and maintainability
refactor inMessages retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to utilize receiver ' s getMessagesIn method to improve code cl
added the " accept " attribute to the element in ImageFileInputDialog to enable the file input dialog to accept images as their content
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and ShardId instead of Headers to improve compatibility with the latest elasticsearch
added detailed logging of witnesses and class names in ForkController . java to improve traceability of witnesses for debugging purposes
added a new file ` NullPointerAndEmptyArrayTest . java ` to test handling of null and empty arrays in ` APITests . java
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` to streamline the code by elimin
updated UaaStringUtils to include a method to construct wildcard patterns with any character delimiters to enhance flexibility in wildcard handling and improve test coverage
updated alias validation logic in Vectorizer . java to handle multiple table scan operators to improve error handling and provide clearer warnings for invalid aliases
updated import statements and modified exception handling in WeatherQueryTest . java to improve code clarity and ensure proper exception handling for location retrieval
added error handling for firmware setting in TinyGFirmwareSettings . java to improve robustness by logging errors when setting firmware settings
simplified import statements and refactored getLangs method to return a Set of languages instead of an array to improve code readability and
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability
hbase - 16400 add prepare ( ) method to enable / disable snapshot handler ( # 3868 )
[ wasm ] use runtimemethods . createplatformisnullcall ( ) instead of runtimemethods . createexitswitch ( ) .
removed unused imports from DockerQuickstartTest . java to clean up the code and improve maintainability
added a boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread state management and ensure proper exception
updated JavadocVisitor and ReloadableJava8JavadocVisitor to improve handling of Javadoc references and descriptions to enhance clarity and functionality of Javadoc documentation representation
camel - 16400 : camel - spring - exporter should check if camelcontextid be non - null and not empty .
removed duplicate @ Override annotations across multiple security - related classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and modified test assertions in EnumTests to ensure correct module usage and improve test coverage for static
updated the language variable from XMLConstants to XMLSchema from " http : / / www . w3C _ XML _ SCHEMA _ NS _
added logic to set content description based on badge presence in BubbleTextView to enhance user experience by providing more context for badged apps
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enhance mouse wheel functionality and improve user experience
added closing of PDF documents in VisualTester and added a new test for positioning absolute in VisualRegressionTest to ensure proper resource management
updated currency codes and variable names from BTC _ ETH to XRB in KucoinAdapters and KucoinIntegrationTests to reflect
remove unnecessary cast to vacuumenvironment . location . a
removed redundant currency conversion logic in BitfinexAdapters . java to simplify the code and improve readability
replaced HashSet with ImmutableSet and updated field handling in JsonFormat . java to improve performance and maintainability by using sorted collections for message fields
remove redundant check for isArray and isEnum in JacksonXmlFormatMapper . java to streamline the code for better readability and maintainability
updated variable names and logic in VirtualThread . java for clarity and consistency to improve code readability and maintainability by reducing redundancy
updated the ` DirectoryTaxonomyWriter ` and related classes to use ` NO _ OP _ CACHE ` instead of a custom ` NoOpCache `
refactor VetoableChangeSupport class for improved performance to enhance efficiency and maintainability of the code
adjusted the calculation of the Y coordinate by subtracting the height from the owner ' s height to correct the positioning of the content pane
pdfbox - 4071 : remove ` ` throw invalidpasswordexception ' ' from method signature
added unit tests for setting and getting short and long support messages in ShadowDevicePolicyManagerTest . java to ensure that security exceptions are correctly thrown
ggb - 1349 add menu close text to help button
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
refactor thread handling in BackendInitializerHelper and TerminalClient to use ThreadHelper for waiting for controller states to improve code readability and maintainability
updated version checking logic in SwingStartup . java to ensure correct handling of release status to improve robustness of version management in the application
added support for including a generated comment in DbMigration and updated MigrationXmlWriter to include it to enhance migration configuration flexibility by allowing users to
updated usage strings to use " < player | * > " instead of " < player > " across multiple files to enhance command functionality by allowing
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter classes to streamline the
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in method naming
added a condition to check for parallel processing in TestNGContentHandler to ensure proper handling of parallel processing in tests
updated the logic for enabling the acting master in RouteInfoManager . java to improve clarity and correctness of the code logic
refactor : remove static import of modelelementcontainerdefaultcapacities from ctmethodimpl
added serialVersionUID fields to multiple Java files to ensure proper serialization compatibility for these classes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated the ShibbolethCompatiblePersistentIdGenerator to include a separator parameter and modified the shaBase64 method to allow for more flexible
refactor parameter handling in Parameters . java to improve null safety and clarity to enhance code readability and prevent potential NullPointerExceptions
added a new file ` Person . java ` that encapsulates the ` name ` field to provide a dedicated class that encapsulates the ` name
do n ' t need localaddress to start node - ring gathering . patch by jbellis
updated the time string comparison in AbstractClient . java to ensure consistent case handling for column labels
added tests for timeColumn and timeUnit and totalDocs in SegmentMetadataImplTest . java and updated metadata handling in SegmentMetadataImpl . java to
replaced ` Color . RED ` with ` Color . DARK _ RED ` in ` SimulationPlotPanel . java ` to improve color
added a call to disconnectEmitters . onNext in NettyStreamingService . java to ensure proper handling of emitted objects during stream disconnection
fix typo in defaultbeancontext # getscopehierarchy ( # 1305 )
danielwagnerhall : click on an element hidden by double overflow in clickscrollingtest . java
added a try - catch block around the dismissDialog call to handle potential exceptions during dialog dismissal
jbpm - 6640 - add support for custom jndiregistry in jtatransactionmanager
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unnecessary functionality
rename enabledCiphers to result and update related variable names to improve clarity and consistency in variable naming
[ beam - 10617 ] fix timestamp conversion in bigqueryutils ( # 15967 )
replaced instances of ` IllegalArgumentException ` with ` requireNonNull ` for buffer , buffer , and userCredentials to improve code readability and reduce boiler
fix value coercion for input object type ( # 2267 )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices do not exceed the table '
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure that the scrollSelectionVisible (
[ java ] avoid unnecessary local before return rule when there be a member selector
replaced ` ScriptEngineManager ` with ` ScriptEngine ` in ` AbstractScriptExecutor . java ` to streamline the script engine initialization process
removed NaN checks and simplified correlation comparisons in EuclideanDistanceSimilarityTest to improve accuracy of distance calculations and enhance test clarity
do n ' t attempt to increment backup if it ' s null . patch by jbellis
refactor relativize method to accept both baseDir and path parameters to improve path normalization to ensure consistent behavior when comparing paths with dot - dot
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and modified value construction in DataType . java to ensure proper handling of
[ hotfix ] [ test ] skip deadletterqueuewritertest
replaced ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistent JSON formatting for byte array
renamed ` ErrorHandlerController ` and ` Error403Controller ` to ` Error403Controller ` and created corresponding files to improve clarity
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal . java ` and ` WindowsTerminal
replaced ` MethodInvocationTree ` with ` NewArrayTree ` and updated the ` @ TriggerPatterns ` annotation in ` Tiny . java
refactor connection acquisition logic in ConnectionPool . java to improve code readability and maintainability by eliminating duplicate code
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in ` LPPEAuthenticationHandler ` and
pdfbox - 4892 : avoid npe , a suggest by valerybokov
[ javassist ] improve error message when create class .
added new fields ` writerException ` and ` readerException ` to the ` LargeStreamletTest ` class to improve exception handling and ensure
updated the current item setting logic in HomeFragment to manage extra pages based on user settings to improve user experience by dynamically incrementing the number of
added error handling for bitmap creation and refactored return logic in AndroidImplementation . java to improve robustness by preventing crashes due to
replaced ` suppressNode ( ) ` with ` @ SuppressSubnodes ( ) ` in ` BaseParser . java ` and added ` @
refactor FDFParser instantiation to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused code to streamline the project
updated shell command execution in AbstractLauncherUiTest and removed assertion in LauncherInstrumentation to streamline input handling and improve test reliability
added JSON serialization for filenameToUrl in FileDumper . java to enable tracking of output file paths for better file management
bugfix # 209273 - reset profiler server ' s resultnotified flag to false
renamed the method ` getTextureFromImage ` to ` loadImage ` and updated its usage in ` TextureHelper . java ` to improve
update assertion from " application : " to " application " in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContext
updated the randomizer names from " 9781797745008 " to " 9781797845005 " to reflect the
updated the setting of the notification ringtone URI in AlarmReceiver . java to allow dynamic configuration of the ringtone based on user
added a method ` reportLoopCount ` to the ` RootNode ` class to report the count of loops when the call target is a loop
added functionality to finalize the version for a specific orchestration type in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl .
cloudstack - 10293 : fix listbyregionidandstate search by regionid ( # 2296 )
removed duplicate calls to streamManager . open in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` to test a counted loop problem to demonstrate the use of ` String
[ gr - 3865 ] fix compilation of method with varargs in graalvm
[ gr - 13935 ] support ' jlong ' and ' long ' type for javathread : : _ pending _ failed _ speculation field .
refactor ` KafkaStreamsTracing ` to use ` ValueTransformerWithKeySupplier ` instead of ` TransformerSupplier ` to improve clarity and functionality
[ # 7370 ] feedbackconstantsumquestiondetails : add ` ` received points ' ' to the list of question
removed DynamicColors . applyToActivitiesIfAvailable call from BaseApplication . java to streamline code by eliminating unnecessary functionality
added thread management and stack dumping functionality in CloseRace . java to ensure graceful termination of threads and handle potential interruptions gracefully
updated return statement to return ' val . intValue ( ) ' instead of ' val . intValue ( ) ' in IntPointField . java to
increased the arcSize and arcSizeFraction values in MyButton . java to allow for a fraction of width instead of a fixed value
increased the maximum width of veryHighWidth from 768 to 640 and modified the ratioWidth from 720 to 640 to
rename ` setMinifySqlEnabled ` to ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and related classes to clarify
replaced the ` waitForStateTransitionToEnd ` method with a new ` waitForStateTransitionToEnd ` method in ` AbstractLauncherUiTest
added CasCoreHttpConfiguration and CasCoreTicketIdGeneratorsConfiguration to multiple test classes to utilize the new configuration classes for improved functionality and
refactor byte reading methods in Volume . java to use DataIO for improved performance to optimize memory usage by using a more efficient reading method
( chore ) camel - http : make it easy to configure component and whatnot .
updated ClasspathInfo creation to include boot and system boot paths in DeclarativeHintsParser . java to enhance clarity and maintainability of
added mediascriptscopeprovider ( # 5331 )
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to use this method to improve layer management and event
added a check to return early if there is no queue in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp , mapWork , and originalThrowable in MapRecordProcessor . java and TezProcessor . java to improve robust
updated CylinderRegion to use Vector2D instead of Vector for center calculations to improve performance and compatibility with newer vector types
replaced the custom ` UsageException ` handling with a new ` ExpectedException ` rule in ` TestBadUseCases . java ` to improve
added null check for subparams before sending a single query in QueryExecutorImpl . java and implemented a test for multi - execution in StatementTest
bugfix # 217 , allow customization of security environment
added " rctag = android % 20app % 20edit " to the GET request in the ReviewInterface . java file to provide additional
refactor Test . java for improved readability to enhance maintainability and facilitate future development
updated PBEKeySpec to use keyLength instead of blkSize to ensure the correct key length is used for password encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure that section definitions are properly written during document processing
added location accuracy checks and logging for large jump detection in GpsLoggingService . java to improve robustness by detecting potential large jump scenarios
removed redundant log statements in TableCellLayout and TableLayout2 to streamline code for better readability and maintainability
doc : generate sample code in the java microgenerator ( # 135 )
replace boolean ` boolean ` with ` Object ` references for ` rootNameFn ` and ` sourceFilterFn ` in ` InsightFilter `
replaced binary search with direct addition in AllAppsList . java to simplify the code by eliminating unnecessary binary search operations
updated SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity class to simplify the activity hierarchy
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to reflect the correct naming convention
replace assertRootArcs ( ) with assertRootArcs ( ) in FST . java to ensure correct assertion behavior for root arcs
added assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with tests
camel - 16400 : added olingo2configuration . getconfiguration ( ) method to olingo2component .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution before proceeding
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
added functionality to send images via HTTP using XMPP to enhance image management capabilities in the XMPP client
camel - 16400 : camel - netty - do n ' t try to get the channel from pool if it be n ' t
updated URL pattern in BalancedClickhouseDataSource and added unit tests for valid and invalid host names to improve URL validation and ensure proper handling of
disable jsr199 by default in fragmentactivator
added support for handling null values in CSVRecordReader to improve data integrity by allowing null values in CSV format
added LiquibaseService annotation to multiple connection classes to skip LiquibaseService execution during database operations
replaced ` J . CompilationUnit ` with ` JavaSourceFile ` in the ` aggregatedScope ` and ` addImportedStaticFieldNames ` methods to
change event . topics from " smarthome / items / * " to " smarthome / items / / command " ( # 3
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error
replace deprecated case " zkCredientialsProvider " with " zkCredentialsProvider " in SolrXmlConfig . java and add assertions in Test
fix mana tablet not be able to show damage correctly .
added a method to set the identifier collection in mCurrentCallEvent to ensure the correct collection of identifiers for the call event
removed unused imports from TestRandomChains . java to clean up the code and improve readability
corrected the spelling of " deriveKeyWithScrypt " in the thread pool executor to improve code readability and maintain consistency in naming
updated GeneratedCode . java file to improve code readability and maintainability
updated the assertion message in TypeDefinitionRegistry . java to improve clarity of error messages
added visibility for the shareWithMeIcon in LocalFileListAdapter to improve user interface by hiding the share feature when needed
updated stylesheet references from HTTP to HTTPS in multiple classes to enhance security by using secure connections
updated imports and modified method signatures in RouterFilter , RouterServerListFilter , and RouterDistributorTest to improve null safety and clarify
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context to improve debugging and traceability of assertion failures
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should not be used in new development
added null check for ` context ` in ` CrawlerSessionManagerValve ` and refactored test cases in ` TestCrawlerSessionManagerVal
added a security check before retrieving the JspApplicationContext in JspFactoryImpl . java to enhance security by controlling access to the application context
updated position and length calculations in RocketComponentConfig . java to improve accuracy of component length calculations
replaced the @ Singleton annotation with the @ Scopes annotation in NonceService and OpenIDAuthenticationProviderModule to enable singleton binding for nonce services in the
added a call to the ` updateChildLinks ` method in ` FileWrapper . java ` to enhance the functionality of the ` FileWrapper `
refactor method signatures and improve URL building logic in SpringCloudPlugin . java to enhance code readability and maintainability by simplifying method signatures
increased the delay from 100 to 500 milliseconds in the publishWithDelay method to allow for a longer wait time for notifications to complete before
added a boolean field ` mShiftCodesAlwaysOverride ` to control the behavior of the ` mShiftCodesAlways ` variable based on its value
nifi - 1186 improved leader election logic to check if a node be a leader or not .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition to check if the identity is a reference instead of checking if it is a name to improve the accuracy of identity validation by
updated method signatures to use ` options . isNoCache ( ) ` instead of ` AbstractCommandOptions ` across multiple classes to enhance flexibility
added a sleep duration to the exception handling in TestListenTCPRecord . java to ensure proper timing and prevent the application from crashing
refactor argument assignment logic in PatchExtensionMethod . java to improve clarity and maintainability of argument handling
replaced ` Map ` with ` Set ` for managing ` RawNativeLibrary ` instances to improve memory efficiency by using a key set instead of
int - 1412 add support for sequence and ignore - send - failures attribute in router parser .
removed x509PublishUrl and x509ViewName from ClientKeyPublisherMapping and JwkViewResolver classes to streamline the handling of X509
updated the initialization of ` readers ` in ` QueryComponent . java ` to ensure that the first element of ` readers ` is correctly assigned to
refactor max and min value parsing in ValueSourceParser to use Double2Parser instead of ValueSourceParser to enhance precision in calculations involving
simplified return statement in Container . java to improve code readability and maintainability
removed the ` throws IOException ` declaration from the ` next ( ) ` method in ` Highlighter ` and ` SpanGradientFormatter ` classes to
cloudstack - 3569 : fix npe when create a user with uuid ( # 3568 )
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ConditionalOnWebApplication and ObjectProvider for flowBuilderServices
updated SQL commands and variable names in WriteJdbcPTest . java for consistency and clarity to enhance code readability and maintainability while ensuring
removed null and empty check for the " editor . app . laf " property in DefaultPlatform . java to simplify the look and feel
replaced direct calls to getDesiredState ( ) with direct calls to stateEntity to improve code readability and performance by reducing method
updated margin calculation logic in FloatingTaskView . java to ensure correct positioning of elements based on RTL layout
added a conditional check in RootFolder . java and updated the status line in NavigationShareTab . java to improve logic flow and provide user feedback
bugfix # 216231 , do n ' t increment threadid in cpucallgraphbuilder
make sure defaultperspectives be set to the def toolbar , not the default one
added NetworkAddressChangeListener to HomekitImpl and updated logging messages in HomeKitImpl to improve network address handling and provide clearer error messages for
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster to use leaseRenewalTime instead of LeaseManager to improve accuracy
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` in ` CxxLibraryDescription . java ` to
added null check for the exception message in ExceptionHandlerRegistryFactory and created a test for handling fatal exceptions with a null message to improve robustness
changed the ` nextID ` variable to be ` volatile ` and modified its usage in ` DirectoryTaxonomyWriter . java ` to improve thread safety
resolve intermittent ci failure in jmsqueuecompositeresendreceivetest
added HasSourcePath interface and updated methods in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg to
removed StringBuffer and simplified exception message construction in Arrays . java to improve performance and readability of the error message
added a custom index field name for facet fields in OrdinalMappingAtomicReader and updated tests in TestOrdinalMappingAtomicReader to enhance facet
updated the calculation logic in ` Instant . ofEpochMilli ` to handle negative seconds and negative nanos correctly to ensure accurate time representation by adjusting
changed the retrieval of the buffer type from ` boundShader . getAttribute ( ) ` to ` boundShader . getAttribute ( ) . name ( )
added a check for script update status in CopyPaste . java to ensure scripts are blocked before proceeding
added a new file TestCMoveLimitType . java containing a class with methods for testing character buffer limits to facilitate testing of
added a method to check if a recorders contain a specific recorder type and refactored audio packet processing logic to improve code clarity and
( chore ) camel - sql - store : fix checkstyle issue
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the software
refactor console creation and version printing logic in Main . java and VersionCommand . java to improve code readability and maintainability by encapsulating
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to improve clarity and maintainability by consolidating token validation logic
added EOFException handling in Http11InputBuffer . java to improve error management for end - of - stream scenarios
added unit tests for the ` deleteMember ` and ` deleteNonExistingMember ` methods in ` DefaultGroupProviderTest . java ` to ensure
( chore ) camel - jms : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation to streamline codebase
updated JavaLibrary and DefaultJavaLibrary to use SourcePath instead of BuildRule to improve type specificity and align with project structure
added new classes ` ConstructorArgsDemo ` and ` StrictDemo ` , and modified the ` StupidFinal ` and ` Stupid
make directtemplatefeaturecollectionfactory thread - safe
increased the threshold for responseCount from 0 to 2 * DatabaseDescriptor . getReplicationFactor ( ) in WriteResponseHandler . java to
added null check for indexNumber in ItemRowAdapter . java to prevent potential NullPointerException when item ' s indexNumber is not set
rename method names from ` showAnchestors ` to ` showAncestors ` across multiple classes to improve clarity and consistency in method naming
added a check to return early if the width is less than 12 to optimize performance by avoiding unnecessary processing
updated comparison logic in ChangeLogParameters and added a new test in ChangeLogParametersTest to ensure correct behavior when comparing change log parameters in inner
changed the logger field from static to instance final to ensure that the loggers map cannot be reassigned after initialization
update return statement to return the base plot instead of the current plot to ensure the correct base plot is returned for improved functionality
added an initialCreation parameter to the createUploadDir method in FileUploadHandler and RestServerEndpoint classes to control the creation of upload directories based
added support for status 200 responses in ServerGenerator , ServerFCGIConnection , HttpTransportOverFCGI , and HttpTransportOverFCGI to
added a condition to check if the comment length is greater than zero in multi - line comments to ensure that multi - line comments are not processed
added file type association management in BuckModule . java to ensure proper handling of file types by removing associated associations
replaced multiple ` ToLong ` and ` ToInt ` with a wildcard import and updated method signatures accordingly to simplify import statements and enhance code
added a new error message for unsupported CPU support in the RTM command line option tests to improve user feedback for unsupported CPU scenarios during JVM startup
reformatted code for consistency and readability in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class methods for improved performance to enhance gameplay efficiency and maintainability
added a mock method to mock the ChannelTypeUID class in AbstractModbusOSGiTest to facilitate testing of the Channel
do n ' t use nextElementindex when check if guest to host reflective call .
added a reset method to reset the systemContext in FontsContract and implemented a reset method in ShadowFontsContract to ensure proper context management
added a method to convert numeric values to milliseconds and adjusted date calculations in TimeGranularity . java and PinotDataSourceMaxTime . java to
refactor flow analysis logic in ` ControlFlow ` and ` Guard ` classes to improve flow analysis handling to enhance code clarity and maintainability
added validation for array sizes in assertEquals and improved error messaging in ArrayEqualityAssertTest to enhance error handling and provide clearer diagnostics for
added default return statements for unknown click types in WindowClickLogic . java to ensure correct behavior when dealing with unknown click types
updated index calculation in MeshBuilder . java to correct bitwise operation to ensure proper indexing of indices for accurate data representation
nifi - 1445 : remove unused variable in standardprocessscheduler
added support for resolving Java annotation processor properties in KotlincToJarStepFactory to enhance the Kotlin compilation process by integrating
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION and refactored page snapping
added shortcut permission checks and refresh logic in LauncherModel and LauncherModel to ensure shortcuts are updated only when the app has the necessary permissions
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support navigation functionality in the console
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to enhance robustness
added marker selection functionality to the NearbyMapFragment to improve user experience by hiding the bottom sheet when a marker is clicked
added error handling for Throwable in FileSyncAdapter . java to improve error reporting by printing stack traces when exceptions occur
added error handling for ` OperatingSystemMXBean . getTotalPhysicalMemorySize ` and ` OperatingSystemMXBean . getFreeSwapSpaceSize `
removed redundant calls to ` refill ( ) ` and refactored feed processing in ` FeedQueues . java ` to improve code clarity
add check for playback thread in defaultdrmsessionmanager . setplayer ( )
updated packageType and resourceCompression values to use Locale . US in AndroidBinaryDescription and AndroidBinaryBuilder to ensure consistent locale handling during binary rule
changed the XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure the correct MIME type is
updated variable references from ` INSTANCE . confFile ` to ` INSTANCE . confFile ` in ` Args . java ` to ensure consistency in variable
removed a sleep delay from the waitUntilReadyAndTimeout method in HostPortWaitStrategyTest . java to simplify the test by eliminating
changed the data type of ` getGroupingIdValue ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java
added checks for headless environments in Toolkit . java to throw HeadlessException when the graphical environment is not available
added a condition to check if the current recipe matches the specified world in ExoflameFurnaceHandler to ensure the furnace
add a thread count description to the default solver to track which thread be move during the solving process
fix issue with not select wrong resource with same name ( # 3649 )
added a new file ` Issue582Test . java ` to implement a test for the ` BTreeKeySerializer ` to ensure correct sorting
[ native ] fix division by zero error in native
refactor LoadingCache class for improved performance to enhance efficiency in caching operations
added a rule to avoid non - constructor method with class name in naming rules to improve code quality by eliminating unnecessary checks
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve stability by preventing application crashes due to stale element
updated error handling in ViewExistsPrecondition and added a new hasView method in JdbcDatabaseSnapshotGenerator to improve robustness of view existence checks
refactor DOMUtil methods for improved performance to enhance performance and maintainability of the code
added translation handling and logging functionality in TaskViewUtils and implemented matrix logging in Utilities to improve animation responsiveness and facilitate debugging
disable fixed rotation transformation by default
added a method to walk FST entries and modified term frequency handling in TempFSTTermsReader and TempTermOutputs to improve FST processing
added SolrQueryRequest parameter to the create method signatures across multiple classes to enable the use of SolrQueryRequest for query processing in augmentations
updated SQL triggers in SingleTableMySQLTriggerTest . java to handle null values for content and announcement fields to ensure data integrity by preventing null
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code readability and maintainability by reducing red
updated query string formatting in PhoenixQueryBuilderTest . java to include quotes around the column _ date string to ensure consistency in SQL syntax
added Spark . awaitInitialization ( ) in RequesterTest . java to ensure proper initialization before proceeding with tests
added methods to retrieve and save total storage pool and fee in DynamicPropertiesStore to enhance functionality and error handling for storage management in the application
added development mode support for file streaming from the source directory in AssetsController . java to enhance the robustness of file handling in development environments
updated the method to check for the map mark key in MapMarksManager to ensure the correct key is used for checking map mark positions
added a tokenRewriteStream parameter to multiple methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the functionality of the default value
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
refactor file path handling in JxBrowserManager to use fullPath instead of fileName for clarity to improve code readability and maintainability by
added a check for the AppVersion property in IOSImplementation . java and updated image file creation logic to ensure compatibility with both JPEG and PNG
updated the method call from ` getBridgeUID ( ) ` to ` getUID ( ) ` in ` SomfyTahom
( chore ) camel - alberton - aggregator : disable flaky test on github
http : / / issues . apache . org / jira / browse / amq - 3833 - remove the default trust manager
added warnings for NaN values in DynatraceExporterV2 . java and modified metric handling in DynatraceExporterV2 .
added a method to remove the session ID from the session info to ensure that session information is properly cleared when no longer needed
added hostname setting for alerts in HeartBeatHandler and improved logging format in AlertReceivedListener to ensure alerts have a valid host name
simplified the return statement in ChannelEndPoint . java to improve code readability and maintainability
[ drools - 720 ] fix kmodule xsd test to work on window
added unit tests for seekTo method in ShadowMediaPlayerTest . java and modified pendingSeek handling in ShadowMediaPlayer . java to ensure correct
rename ` createTask ` and ` createThrowingTask ` methods to ` createThrowingTask ` across multiple classes to clarify that
added border configuration for tabCloseButton in AQUA _ LAF to improve UI appearance when using the AQUA _ LAF
updated request method , connection timeout , and charset settings in TSPTimeStampService . java , and modified import statements in TestSignatureInfo . java
[ drools - 7 ] add support for wildcard type permission in xstreamutils
added error logging for non - generic types in diamond expressions and created a new class for testing to improve error handling for non - generic
[ calcite - 2261 ] add ` ` reloptutil . settargettype ( ) ' ' and ` ` reloptutil
updated validation checks for setting IDs and values in Http2Settings . java to ensure that setting IDs and values meet unsigned 16 and 32 - bit
deleted the file ` MapInterfaceTest . java ` and ` Issue664Test . java ` to remove obsolete test cases that are no longer
[ hotfix ] [ test ] remove dead code in sessionspooltest
[ geot - 6329 ] fix json serialization for geoserver wms builder
replaced the method ` setSelectedIndex ` with ` selectedIndex . intValue ( ) ` in ` PopupMenuButton . java ` to ensure the
added a check for manual unstashing in TaskbarStashController to ensure that unstashing is only performed when the appropriate flag is
camel - 16400 : camel - core - optimize route coverage to not use custom id .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting expected events to enhance flexibility in event mismatch handling by allowing control
added a new file ` HeaderFixer . java ` to handle file processing for Java files to improve the management and output of licence
added broadcast functionality for first loading completion in the launcher to enhance user experience by notifying users about the loading state
deleted the SuperJumperAndroid . java file to remove unused code to streamline the project
updated return value from ` true ` to ` table . isDistributed ( ) ` in ` SystemTableScan . java ` and refact
removed KeyValuesProviderAware and ObservationConventionAware interfaces from Observation . java to streamline the code by eliminating unused interfaces
added missblocks and missitems to the processidrematches method .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use base ( long ) instead of base + i to ensure
added caching for date and formats in HSSFCellStyle to improve performance by avoiding redundant data retrieval
updated the query in RemoteAuthenticationEndpointTests to filter the users based on a specific username to enhance user filtering capabilities for improved data retrieval
updated conditional check from ` needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java `
updated logging mechanism to include container information for better tracking of app launches
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test class to streamline the codebase
added null check for newInput and improved debug logging messages in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness
added a menu item for re - opening the browser and improved error handling in JavaScriptServer to enhance user experience by allowing quick access to the
added error handling for duplicate output scenarios in SemanticAnalyzer and reformatted code for better readability to improve error reporting and maintain code consistency
added a null check for the addEntryListener method in BasicTest . java to ensure that a NullPointerException is thrown when adding an entry listener
fix : coordinatearray # reverse ( ) do n ' t throw exception ( # 671 )
updated the ` setOpen ( ) ` method call in ` ToolbarPanel . java ` to ensure the ` setOpen ( ) ` method
added a boolean variable ` first ` to track the state of ` first ` in ` TestPayloads . java ` to ensure that the test
replaced the method call to enter the overview mode with a direct method call to show the overview mode to simplify code and improve readability by
http : / / issues . apache . org / jira / browse / amq - 3833 - fix network route test failure
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of maximum
add miss suppression of unused field in nestedarithmetictest
simplify the addition of pending chunks and buff in HttpClientRequestImpl . java and improve buffer handling in HttpTest . java to enhance code
updated verboseLevel assignment and artifact replacement logic in GetMavenDependenciesTask . java to improve logging clarity and ensure correct artifact representation
pdfbox - 2576 : use getcosdictionary ( ) instead of getdictionaryobject ( ) , a suggest by valerybokov
removed unnecessary print statement from ReferenceUtil . java to clean up code and improve readability
add visiblefieldpredicateenvironment to allow visibility of query type ( # 711 )
added properties for JSON - RPC configuration in CommonParameter and updated port assignment in multiple classes to allow dynamic configuration of the JSON - RPC port and
added a condition to check if the folder is a DropTarget before removing it to prevent potential ClassCastException when attempting to remove a drop target
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the creation
added new features for Setup wizard , Probe module , and Workflow helper in StartPageTopComponent . java to enhance user guidance for configuration options
replaced the scheduled task schedule with a fixed delay in CassandraDaemon . java to improve task scheduling efficiency for better performance
simplified the retrieval of the online status in OnlineTestCase . java to improve code readability and reduce unnecessary casting
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of a
refactor timeout handling in HttpChannelState . java and update failure listener in HttpChannelTest . java to improve code clarity and ensure proper
updated the CreateEndPoint class to extend Invocable instead of Runnable to enhance the functionality of the endpoint creation process
refactor TABLE _ HEADER _ SEPARATOR to use a constant for better readability and maintainability to improve code clarity and facilitate
updated return value from 32.0 f to 31.5 f in Camera . java to improve the accuracy of the returned value
added a new preference for the startup on boot setup and modified the URL format in multiple files to improve user experience by providing a clearer and
updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService to improve security by using a stronger encryption algorithm
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the parameter " enablePassingNulls " to ensure consistency in parameter
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to potential race conditions
refactor PinotFS handling in SegmentGenerationAndPushTaskExecutor to use PluginManager for instance creation to improve compatibility and ensure proper instantiation of
added locale - based date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent based on the user ' s
added MetalLookAndFeel to UIManager to enhance the UI appearance by using a modern look and feel
added thread - safety and improved message handling in the Bot class to ensure thread - safe execution and prevent potential deadlocks during shutdown
removed the ` getMessage ( ) ` method from the error message in ` ShenyuResultWrap . error ` to streamline error handling
updated variable names from ` module ` to ` from ` in ` ModuleTable ` and ` PackageTable ` classes to improve clarity and consistency
added handling for CmdLineException in PinotAdministrator . java to improve error logging for command - line exceptions
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and ` hashCode ( ) ` in ` Subject .
refactor variable types in CustomPlaybackOverlayFragment and ImageButton classes for consistency and clarity to improve code readability and maintainability by standard
updated zoom level settings in BasicMapViewer to adjust zoom levels to improve the user interface by adjusting zoom levels for better usability
updated DrillRoot . java to use processUser and processUserGroups instead of userGroups to enhance user management by associating process users with
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider . java ` and
added an ArgumentExtractor parameter to the DelegatedClientAuthenticationAction class and updated the service resolution logic to enhance the flexibility and functionality of the
changed defaultGroup to be final in NacosServerRegisterRepository . java to ensure immutability of the defaultGroup variable
move tilecache . destroy ( ) to createTilecaches ( ) and remove it from tilesizechanger
removed redundant calls to ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and ` InfoLayoutHelper . java ` to
refactor cleanEntriesForFeedsWithoutSubscriptions to utilize a separate method for cleaning feed entries to improve code readability and maintainability by
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1181 : fix flaky test in filebasedclusternodefirewalltest
theorem proving : do n ' t use mathematical instead of mathematical
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added ` @ SuppressWarnings ( " unchecked " , " vararg " ) ` annotations in ` Fields . java ` and ` MockitoBeforeTest
refactor CImage methods to utilize a new method ` imageToArray ` for improved image handling to enhance code readability and maintainability
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to align with the
rename ` runtimeVisibleMethodOfFieldAnnotations ` and ` runtimeVisibleFieldOrMethodAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` and
replaced direct null checks with ` Objects . equals ` for consistency across multiple Java files to improve code readability and leverage built - in
replaced ` resolveClassFromCanonicalName ` with ` resolveClassFromBinaryName ` and added ` @ Nullable ` annotations to ` SymbolResolver
added verification for default values in NinjaProperties in NinjaDefaultTest . java to ensure proper configuration and functionality of default views in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related logic in ` DeviceProfile . java
updated padding calculations in DetailFragment , DetailFragment , ListFragment , and adjusted listViewPositionOffset values in ListFragment to improve layout consistency and
updated exception handling and logging in ZkStateReader . java to improve clarity and specificity of error messages related to thread interruptions
added null checks for field and field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure that
ip - address : check if staticnat be support in the specified network id
added methods to reset header scrolling state and FAB visibility in OCFileListFragment to improve UI responsiveness by disabling the FAB
added a call to remove an extra empty screen from the workspace to improve user experience by reducing unnecessary screen clutter
added fixedWidth property to BitmapFont and adjusted xAdvances calculations to support fixed - width glyphs and improve layout consistency
replaced the boolean flag ` EXTRA _ SHOW _ TITLE ` with a static method ` createFragment ` in ` MainFragment ` and refact
added preEvent , postTransition , and postTransition methods to AbstractStateMachineFactory to enhance event processing capabilities in the state machine
refactor ConfigDescriptionProvider class for improved configuration handling to enhance performance and maintainability of configuration management
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf instantiation in StorageBasedMetastoreTestBase to enhance role management and ensure compatibility
refactor facet sorting logic in FacetComponent . java to improve readability and maintainability to enhance code clarity and ensure proper handling of sorted
refactor property handling in CheckstyleReport . java to use a local variable for overriding properties to improve code readability and maintainability by redu
refactor DeleteInactiveReplicaTest to improve clarity and logic for managing Jetty jetty instances to enhance code readability and maintainability while
added a filename argument to the FileActionsDialogFragment constructor and modified the newInstance method to include it to allow users to specify a file name for
updated reorder direction handling in CellLayout . java to use a constant for invalid direction values to improve code readability and maintainability by using a
updated fields in InnerTransferRequest and updated API paths in AccountAPI and AccountAPI to improve clarity and organization of API endpoints
fix ( jettestsupport ) : fix jettestsupport # assertjobrunningeventually ( )
added a new annotation class EnableAdminClient for configuration purposes to facilitate the integration of admin client features in the Solon framework
simplified import statements and added marker handling for identifiers in the FindTypes class to improve code readability and maintainability by reducing red
set the action text color to primary _ dark in AuthenticatorActivity to enhance the visibility of the action text in the UI
added a new method ` find ` to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` , and ` ComparableField
rename method ` addTestStepsForBeforeHooks ` and ` addTestStepsForAfterHooks ` to ` createTestStepsForBeforeHooks `
renamed the test method from " noArgMethodNotValid " to " validNoArgMethod " to clarify the purpose of the
added a cancelClient method to the SparkClientImpl class to manage client disconnections to ensure proper handling of client disconnections by canceling pending
added ` getImplicitPreCoercionValue ( ) ` method in ` SkylarkParamInfo ` , ` ParamInfo ` ,
initialize lastDisplayedUser to an empty Optional to ensure that lastDisplayedUser has a default value to avoid null reference issues
added a method ` findAll ` to the ` QueryDslMongoRepository ` class and updated the ` AbstractPersonRepositoryIntegrationTests ` class to
added null checks before stopping ` SchemaRegionConsensusImpl ` and ` DataRegionConsensusImpl ` to prevent potential ` NullPointerException ` when stopping
planner - 1649 : exit warm - up loop in case of a failure .
add xread ( ) and xreadgroup ( ) methods to MultiKeyPipelineBase and MultiKeyCommandsPipeline to enhance functionality for reading data
updated methods in LinkedBufferInput and StreamInput classes to improve readability and consistency to enhance code clarity and maintainability by standardizing method
updated ` CasWebSecurityConfiguration ` and ` CasWebSecurityConfigurerAdapter ` to use ` WebSecurityCustomizer ` instead of ` Http
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to implement
added a method to register content providers in ShadowContentResolver and modified ContentProviderController to handle provider registration to enhance the management of content providers in
updated the constructor of AttributeReader to use ClassFile . Version instead of Version to ensure compatibility with the updated class file structure
added a check for keep - alive configuration in SingleConnectionManager to ensure proper connection management based on keep - alive settings
[ java ] rename unicast sender flow control to multicast flow control supplier .
g3d - 320 : avoid npe for locus with no point in 2d
added error handling for IOException in WebSocket operations and improved resource management to enhance stability and reliability of WebSocket communications
refactor WebDriver initialization in HttpWebClient to handle different selenium driver types to improve flexibility in driver selection based on configuration settings
replaced ` assertEquals ` with ` assertThat ` in multiple test files to improve readability and consistency in assertion style
truffle : remove deprecate contextreference . getcontextreference ( ) .
updated exception handling in StubberImpl . java and added new test cases in StubbingWithBadThrowablesTest . java to improve exception
updated conditions in ` Actor . java ` and ` Group . java ` to improve clarity and error handling to enhance code readability and provide
added location permission handling in ` LocationPickerActivity ` and modified the ` getCenter ` method to utilize ` LocationPermissionsHelper ` to enable users
add a test case for http : / / issues . apache . org / activemq / browse / amq - 2635 -
added cookie specification for HTTP requests to ensure compliance with standard HTTP standards
simplified intersection logic by using intersection method from r1 to r2 to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio quality by using a more
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel to enable access to the monitoring URL for monitoring purposes
added a configuration option for creating a service timeout in KubernetesConfigOptions . java to allow users to specify a timeout for the service creation process
updated icon resource for different place descriptions in NearbyListFragment to improve user experience by providing appropriate icons based on the place ' s description
added a null check for the ` type . getPackage ( ) ` method in ` DefaultPackageScanClassResolver . java ` to prevent potential NullPointerException
added a new file ` PrintInlining . java ` that implements a test for the ` PrintInlining ` class to provide a
fix : fix nested brace in javadoc tag ( # 4395 )
[ java ] remove unused publication initial term id and offset from archive test .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) to ensure compatibility with the latest graph structure changes
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated Timber logging to use f instead of d for invalid playback speed to improve logging precision for better debugging and monitoring
do n ' t send room removal event when clustering be off .
updated the property name from ' minimize : ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to reflect the correct configuration for the
added key properties to set flipY and generateMips in TextureHelper . java to improve texture handling by enabling flip Y and M
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParser ` in multiple files to enhance event
[ wasm ] add librarynormalizationpass a base class to make librarynormalizationpass abstract .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a new test for delegating
[ hotfix ] fix checkstyle violation in memorymanager
added Temporal annotation to ConsoleSessionVO . java to enable timestamp - based data persistence in the session
added new files Hbs . java and HbsTest . java to implement template engine functionalities in Jooby to facilit
updated visibility logic for HintMessage and message items in ChatMessageAdapter to improve user experience by ensuring appropriate visibility states are set based on input
[ hotfix ] [ table - common ] fix typo in importcsv
# 728 add test for alert and confirmation dialog ( # 739 )
added a check to return null if there are multiple distinct column indices in ReduceSinkDeDuplication to optimize performance by avoiding unnecessary processing
updated methods in MiscUtils to improve handling of file paths and improved error logging to enhance robustness of file processing and provide clearer
regenerate client with updated copyright year ( # 4382 )
updated Jetty WebSocket dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - client " to ensure
replaced ` toUnmodifiableMap ( ) ` with ` Collections . unmodifiableMap ( ) ` in ` SAMLAuthenticatedUser . java ` to
do n ' t repaint header if save program change
replaced instances of ` new Double ( bytes ) ` with ` return ` across multiple classes to simplify code and improve performance by eliminating
updated the method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure the
updated context class name check in HtmlJndiTreeReport . java to include " javax . naming . Context " to ensure proper handling of context
updated the default database options return logic in StorageUtils . java and improved logging message format in Manager . java to enhance code clarity and
changed edgeType from " double " to " mutual " in ImporterGEXF . java to ensure proper handling of mutual edge
replaced the private static final int FLAG _ SLIPPERY with an import statement for FLAG _ SLIPPERY to stream
truffleconstantfieldprovider : fix array dimension calculation for non - array field .
added methods to retrieve and set the Google Drive folder path in the Google Drive settings to allow users to customize the Google Drive folder
ggb - 1357 : add ` ` shuffle suggestions ' ' functionality to the ` ` av ' ' element
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve null safety and clarify that the target parameter can be
updated the calculation of the return value in the ArrayUtil class to improve accuracy of the return value based on the new size
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if a constructor can be instrumented to ensure proper
added a multimap for waiting for anticompaction operations in StreamIn and StreamInManager classes to manage the processing of messages related to
added support for keyguard secure mode in ShadowKeyguardManager and updated related tests to enhance functionality and ensure compatibility with API level 23 and above
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization of the class
updated the parsing logic in GrblUtils to handle multiple override parts and added a check for the length of overrideParts to improve robustness
corrected a typo in the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultiple
added a condition to checkDrained ( ) in AsyncFileImpl . java and implemented a test case in FileSystemTest . java to ensure
updated the LIGHTS _ NUM and LIGHT _ INTESITY constants and modified shader creation to use vertex path instead of light to optimize
replaced ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test files to simplify filesystem initialization and improve code
updated method signatures and variable types in RuntimeOptions and CucumberFeature to use PathWithLines instead of String to improve type specificity and
refactor Gson , JsonArray , JsonObject , and JsonObject classes to improve code readability and maintainability
removed @ NotNull annotation from TEST _ DIRS array in PubRoot . java to clean up unused code and align with project standards
added a call to close the ParcelFileDescriptor instance to ensure proper resource management by closing the ParcelFileDescriptor
added a method to reset the prefix index in the BasisLibrary class to improve thread safety and avoid contention in a multi - threaded
added a debug logging annotation to TestDistributedStatsComponentCardinality . java to facilitate troubleshooting during development by redu
added throwIfImmutable ( ) method call to IntList . java to ensure that modifications are not made to immutable instances
added nullability annotations to the onApplicationEvent method in GrpcServerRunner and modified URI construction in GrpcClientBuilder to enhance code safety
rename ` workDir ` to ` workDir ` and refactored command handling in ` Graal . java ` to improve code readability
[ gr - 3649 ] fix thread safety issue in insight instrumentation .
added platform - specific handling for writing the manifest file in GenerateManifestStep . java to ensure compatibility with Windows environments and handle line endings correctly
fixed findnull deref priority to high priority and add a new class RFE3531161 . java with null check for non - null
[ configdescriptionregistry ] add nullability annotation to configdescriptionregistry ( # 6018 )
replaced ` Throwable ` with ` RuntimeException ` in ` createCancellationException ` method to improve error handling by throwing a more specific exception type
pdfbox - 4892 : do n ' t initialize stream if there be no crop
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to enable accessing All Apps from the system Taskbar
replaced FragmentActivity initialization with Robolectric ' s activity management in FragmentTestUtil . java to improve testing capabilities by utilizing Rob
renamed variable ` imageObj ` to ` gpsObj ` and introduced a new method ` getDecimalCoords ( ) ` to improve clarity
rename class names from ` ABCase1 _ 1 ` and ` ABCase1 _ 2 ` to ` TestABCase1 _ 1 `
renamed parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and added null check for ` getBlack
refactor handler assignment in OpenRocketViewer to use a variable for simplicity to improve code readability and maintainability by encapsulating event
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements the ` ChangeDependencyGroupIdAndArtifactId ` recipe to enable
refactor file handling and segment addition logic in IndexingJob . java and SegmentChecker . java to improve code clarity and ensure only valid
updated address comparison from ' lt ' to ' lte ' in GCObjectHeapIteratorAddressOrderedList _ V1 . java to ensure correct
refactor replacementPaths and pathToSourcePathMap to use memoization to improve code efficiency and readability by reducing redundant computations
rename ` JsonExamples ` to ` Examples ` and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve traceability and troubleshooting during file extraction processes
updated method signatures in FindsByLinkText . java to improve code clarity and maintainability
added a new file ` Main . java ` that contains a main method to demonstrate the usage of the Java OOP entry point
fix potential race condition in sip registration wizard . report by coverity scan .
removed duplicate lines in NativeScanner . java to improve code readability and maintainability
updated package structure for RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to better organ
refactor dependency resolution logic to use Supplier for improved efficiency to enhance performance by reducing overhead of stream operations
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling to metadata in ExtractingDocumentLoader to ensure proper content encoding is included when processing documents
cloudstack - 10363 : fix bug in databaseconfig . sql ( string , long ) , string . tostring ( string ) .
added a null check for the slot variable in WindowListener . java to prevent potential errors when the slot is not initialized
added functionality to ignore transitive repositories in Maven execution requests to enhance flexibility in handling remote repositories during Maven execution
removed the @ Inject annotation from ContactsPreferenceActivity . java to streamline dependency injection for better readability and maintainability
updated ColorsActivity to extend from AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
fix for http : / / issues . apache . org / activemq / browse / amq - 2379 - avoid npe
added a condition to skip processing if the index matches the matcher ' s start and end conditions to improve performance by avoiding unnecessary processing when the
updated the @ IntegrationTest annotation to specify the server ' s port to ensure the test runs on a specific environment
added a new function " reverse " to the UDFRegistry and created a new UDFReverse class to enhance the functionality of the UDF by providing reverse
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in ` Dispatcher ` , ` Request ` , and ` Included
refactor Tracer class for improved performance to enhance performance and maintainability of the tracing functionality
[ hotfix ] [ test ] disable rocksdbstatebackendreaderkeyedstateitcase in rocksdbstatebackendreaderkeyedstateit
simplified import statements in XMLChangeLogParserTest . java to improve code readability and reduce redundancy
added synchronization to the buffer clearing mechanism in StarTreeRecordStoreCircularBufferImpl . java and implemented a test for clearing the record store to
updated the forecast minutes , hours , and days in OpenWeatherMapOneCallHandler . java to adjust the forecast duration for improved data
updated fetch time handling in AbstractPageOperationTemplateTest to include a timeout parameter to improve test reliability by allowing more time for fetch operations
updated RemoteTargetGluer and FloatingHeaderView to improve handling of split task IDs and added logging for better debugging to enhance code readability
updated the ` parseRerunFile ` method to return a ` Stream ` instead of a ` Collection ` and modified its return type to enhance
add the livingwood , livingwood , livingwood , livingwood , livingwood , and
updated assertion statements in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added file size handling functionality in RCFileCat . java and implemented getNumberRows method in RCFile . java to enhance file management capabilities and provide
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability
fix ( jnautils ) : add checkndarray ( ) method to jnautils . getndarray ( )
[ hotfix ] fix typo in blobserver javadoc
[ java ] unusedprivatemethod rule no longer report false positive for unused private constructor .
reformatted variable declarations in LexicalContext , TryNode , and Global classes for consistency to improve code readability and maintainability
added a test method to verify the auto - startup functionality of the SourcePollingChannelAdapter to ensure that the SFTP inbound adapter behaves correctly
added methods to retrieve level and item boundables in the Tree and Quadtree classes , and updated constructor parameters in STRtreeNode to enhance functionality
update version parsing logic to handle version numbers correctly to ensure correct parsing of version strings
added a check for empty tags before persisting tags in ItemRegistryImpl . java to avoid potential NullPointerExceptions when tags are not present
added methods to parse and convert date strings to epoch milliseconds in DateTimePatternHandler and DateTimeFunctions to enhance date handling capabilities and improve error handling
hhh - 17100 fix nullpointerexception in disassemble ( )
refactor Log4j2ConfiguratorServlet for improved logging functionality to enhance performance and maintainability of the logging framework
replaced instances of HiveException and AuthorizationException with direct return statements to simplify code and improve readability by eliminating unnecessary variable declarations
updated CGoCompileStep to use String . join for cppCommandPrefix and added a new test for prebuilt C++ dependencies to improve
fix ( kubernetes - client - api ) : add buildable annotation to customresource
removed the @ Override annotation from the Only class to streamline code by eliminating unnecessary overrides
added a timeout constant for HTTP connection parameters in HttpClientFactory . java to improve connection stability by allowing longer wait times
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
simonstewart : add ability to enable / disable everything but trace in selenium server
added @ Singleton annotation to ApplicationController . java to ensure singleton behavior is consistent across the application
added handling for OwnCloudAccount to retrieve the username based on its display name to improve user experience by dynamically retrieving the account ' s display
added BatchStatus import and a test for resume paused job execution in JobLauncher to ensure proper handling of paused job instances during job execution
added null check for cacheConfig and refactored data refresh logic in HttpSyncDataService . java and DataRefreshFactory . java to enhance
douniaberrada : make localnode . getsession ( ) public , remove unused import
fix compilation unit test for java . lang
pdfbox - 2576 : rename nonsequentialpdfparser to nonsequentialpdfparser , a suggest by valerybokov
[ mahout - 444 ] fix checkstyle issue in testdistributedlanczosolvercli
updated HttpServerTestBase . java for improved test coverage to enhance reliability of HTTP server tests
refactor test cases in PortletApplicationMapTest to improve clarity and structure to enhance readability and maintainability of the test code
test : add dynamodbignorenulls test for nestedbeanschema . itemtomap ( )
add redissonautoconfigurationcustomizer to allow customization of redisson
fix indicator . todouble ( ) and add test
added new methods ` execInContainerWithUser ` and ` execInContainer ` in ` ContainerState ` and ` ExecInContainerPattern `
simplify the logic for setting interestedInByteMessages and interestedInTextMessages in NettyWebSocket . java to improve code readability and
added tests for ` SemgrexAttributeConjunction ` and ` SemgrexNegatedAttribute ` in ` SemgrexTest . java
added a broadcast intent for the CLEAR _ PULL _ UNREAD intent in HomeFragment to notify users about the pull - pull state
simplified the initialization of scroller and overScroller in TouchImageView . java to improve code readability and maintainability by removing
updated DefaultProfileValidationSupport to use the destroy method and added flush method to improve resource management and ensure proper cleanup of application context
( chore ) camel - abstract - camel - core : use vetoed instead of atomicboolean to avoid thread safety issue
added FloatingActionButton and FloatingActionButton components for displaying and interacting with the main FAB in ShareActivity to enhance user experience
added InlineParslet implementation and modified date parsing logic in ToDateTokenizer to enhance date parsing capabilities and improve error handling
updated test cases in TestAnonymousClassUnloading . java to improve test coverage for anonymous class unloading scenarios
corrected the spelling of " token " in error messages across multiple files to improve clarity and accuracy of error descriptions in the user interface
added a server check check before binding the OperationsService to ensure the service is only bound when the server is checked to improve error handling and prevent
update Position constructor to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) for consistency to ensure accurate
added wait and exception handling in CxxPreprocessAndCompileStep . java and ManagedThread . java to ensure proper synchronization and error handling during
added support for " all " repository sources in PrincipalAttributesProperties and implemented related methods in CoreAuthenticationUtils to enhance flexibility in managing repository attributes
increased max size threshold from 10 second to 1 second in mapcontainer . getApproximateMaxSize ( ) .
added support for enabling ssl protocols in NettyWebServer and ServerBasicConfig classes to enhance SSL configuration flexibility by allowing protocols to be
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce ` and introduced a wrapper class to improve thread safety and encapsulate
updated the method to return an empty string if no path expression is provided in QueryDslMongoRepository and added a test for returning an empty
updated assertion messages in RoundRectBorderTest . java for consistency and clarity to improve test readability and provide clearer feedback on border changes
added a check for empty genesis configurations before creating them to ensure that the application does not proceed with invalid configurations , preventing potential errors
remove the parallel test , it ' s not really useful
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the sign length to ensure
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to
refactor collectors methods to use ` empty ( ) ` and ` greatest ( ) ` instead of ` maxN ` and ` min
added null checks for orderbook and orderbook services in BitmexStreamingExchange and updated WebSocket client extension handler in BitmexStreamingService
added validation for GeoPointLat and GeoPointLon in GeoPointField . java and created corresponding test cases in TestGeoPointField . java
refactor method names and refactor file creation logic in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency in
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to control whether dependent tables are added to the table document
added validation for consecutive uploads without coordinates in UploadActivity to ensure that uploads do not exceed the maximum number of consecutive uploads and provide user feedback
added caching functionality and a new endpoint for viewing profile data in ProfileResources . java to improve performance by reducing redundant serialization of profile data
added checks for identifier derivation and improved property value handling in JpaMetamodelEntityInformation . java to enhance the robustness of property
updated timestamp bootstrap methods to include index and view timestamps for tables and views to ensure accurate tracking of table and view timestamps during upgrades
add registerdefaultexceptionmappers ( ) to dropwizard - jersey configuration
added a new parameter ` false ` to the ` EntryEditor ` constructor to control the behavior of the ` storeFieldAction ` action
added an owner pointer parameter to the nativeCreateNSWindow method and updated its usage to improve window management by associating it with the owner window
updated the SQL statement in FileContentProvider . java to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with
added support for the STOCK tile in the Tile class and modified event firing logic to enhance the game ' s responsiveness and visual
feature - rbuckets : add codec parameter to readasync and writeasync . regression since 3.13 . 0
use findunrelatedtypesingenericcontainer . detectunrelatedtypesingenericcontainer instead of analysiscontext . log
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator for improved animation management to enhance the responsiveness
changed the ` _ initialPageNo ` variable from final to non - final and added a new ` _ contentLimits ` to improve flexibility
fix incorrect calculation of crc16 in jedisclusterCRC16 . java ( # 2269 )
added comment parsing functionality in FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to enable handling of comments in
refactor JarArchiver initialization in MavenArchiver and update AbstractJarMojo to use it to improve flexibility and encapsulation of the
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more specific
modified aggregation handling in TSServiceImpl . java and added multiAggregationTest . java in DaemonTest . java to ensure correct aggregation behavior and validate
added error handling for unsupported WebGL format and pixel data types in GwtGL20 . java to ensure compatibility and provide meaningful feedback for unsupported
added a new test method ` testDebugInfo ` and modified the ` invokeDynamic ` method to use ` invoke ` instead of ` invoke `
replace UnmodifiableClassException handling with a more specific exception handling mechanism in InlineBytecodeGenerator . java to improve error handling and provide clearer
[ gr - 21212 ] add trace for class initialization trace .
remove queryleveltimeoutms parameter from basebrokerrequesthandler ( # 7015 )
replaced Google ' s CacheBuilder with Caffeine for loading topic routes to improve cache performance and maintainability by utilizing a more
modified the ` createDataSource ` method to accept a ` readOnly ` parameter to enable flexibility in data source creation for read - only mode
updated invalid source target release regex in FindBuildToolFailures . java and added a fatal error condition in FailureLogAnalyzerTest . java to improve
updated URI construction and location intent handling in DetailFragment . java to ensure location intent is only created if available to improve user experience by allowing location
added a null check for the referencedIds list in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader class to improve code readability to enhance maintainability and simplify future updates
added origin response headers to ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure proper handling and verification of origin responses in the
added a new ProfileSettingDrawerItem to the GpsMainActivity class to enhance the user interface by providing a new profile setting option
added support for JASPER XML validation in multiple classes to enable flexible XML validation configuration in the application
simonstewart : make the firefox driver work as expect in the firefox driver
added a maximum row limit check and modified fetch size handling in IoTDBStatement . java to ensure fetch size does not exceed the defined limits and
rename ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` in ` SqlStreamTerminator . java ` to improve clarity
added mouse click and press handling for selected nodes in StandardVizEventManager to enhance user interaction with selected nodes in the visualization
replaced direct memory setting with a static method ` zeroBuffer ` in ` ManyToOneRingBuffer . java ` to improve code readability and
[ drools - 7 ] add getter and setter for xorgroup in terminalnode
removed redundant getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elim
refactor SourcePathResolver to use getPathPrivateImpl for path resolution to improve code clarity and maintainability by reducing duplication
fix xml parser to encode / parse identifier dstu2
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and modified the URI construction in ` WebsocketRoutingFilter ` to enhance
updated file names for external test suites and modified test class names in LLVMPaths . java and TestGCCSuiteCompile . java to cl
added a new method ` getCxxPlatform ` to retrieve ` CxxPlatform ` based on ` BuildTarget ` and ` Flavor ` to
added import statements for ` org . apache . lucene . index . IndexReader ` , ` org . apache . lucene . search .
added null check for the current element in ConcurrentLinkedStack and modified method names in ConcurrentLinkedStackTest to enhance robustness by preventing null
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView . java to check for overview state and first layout conditions to ensure correct handling of gesture end target based on
added package - info . java files for multiple Apache Lucene packages to provide package - level documentation for the Lucene library
added localization support for the visible autoleveler panel in AutoLevelerTopComponent to enhance user experience by providing a clear text for the
added post - optimize callbacks to DirectUpdateHandler and DirectUpdateHandler2 classes , and implemented it in UpdateHandler to enhance event listener management during
updated Compressor and Deflater initialization to include a padding byte to ensure proper memory allocation for compressed data during compression
removed user _ data check from Shaderc . java to streamline code by eliminating unnecessary checks
added a condition to check if the metastore is local to enhance retry logic to accommodate local metastore scenarios
added checks for ` ConnectionClosedException ` and modified logging behavior in ` HeliosSoloLogService . java ` to improve error handling
refactor Subject class for improved readability to enhance maintainability and ease of understanding for future developers
use weak and strong reference type in abstractserializationservice to improve memory usage
updated color distance calculation in HSSFPalette . java and added a new test method in TestHSSFPalette . java to improve color
doc ( regen ) : update license year for generated file ( # 94 )
danielwagnerhall : do n ' t ignore a bug in android ' s xpath library .
added flags parameter to multiple registerReceiver and registerReceiver methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to support additional flags
updated the mocking behavior in FFmpegTest to use an Answer for loading the resource to improve test reliability by providing a mock implementation for
refactor OggInputStream to handle previous input stream and improve memory management to enhance resource management and prevent potential memory leaks
added a constant for handling null responses in AssertionResult . java to improve code readability and maintainability by using a descriptive constant
updated condition to check for both anomalyFailureCount and anomalyWarningCount to ensure that both anomalyFailureCount and anomalyWarningCount
refactored Toast handling in BaseActivity and added a new showToast method in DetailActivity to improve code readability and encapsulate
updated request creation in TracingFeignClient to include requestTemplate to enhance request handling by incorporating request template information
added validation for LDAP names and improved error handling for referral follow - scheme to enhance robustness and provide clearer error messaging for LDAP
refactor retain logic into a separate method ` retain ` to improve code readability and reduce duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve clarity of test
[ hotfix ] [ test ] remove unused miniclusterwithclientresource from checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused functionality as it is no longer needed
added a ` ` selectedObject ' ' field and modified the ` ` setSelected ' ' method in ` ` SIPCommSelectorBox . java
added JUnit @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the static method of FileSystemPool is isolated
set the host of the server connector to the bind address to ensure the server connects to the correct binding address
updated token expiration settings in DynamicClientRegistrationEndpoint to accommodate different grant types to enhance flexibility in token management based on heart mode
added a new CloverInstrumentationFilter class and modified its usage in TestInterfaceAudienceAnnotations . java and SplitLogCounters . java to enhance
added support for the Smartmi Evaporative Humidifier in the MiIoDevices class to enhance compatibility with the Smartmi
fix mineprocess . plausibletobreak ( ) , close # 158
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other packages
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to provide clearer diagnostics when the repository list
modified the return statement in IntHashSet to include both containsMissingValue and containsMissingValue to ensure correct behavior when comparing missing values
added Serializable annotation to RuleAdministrator class to enable serialization of RuleAdministrator instances
replaced instances of ` List ` with ` Set ` for allowed origins and modified the ` generateAllowedOrigins ` method to include patterns to
updated G3D file paths in BaseG3dHudTest and NewModelTest from " g3d / cube _ anim .
added a check for negative solidifiedPosition in the updateLatestSolidifiedBlock method to improve error handling and ensure valid solidifiedPosition is updated
hbase - 2598 fix nullpointerexception in execresult . get ( )
added a new method ` hasAccess ` to check if a remote user is authorized to enhance security by ensuring only authorized users can access the page
refactor ClassMirror and StubJar to use a new method for generating stub class bytes to improve code clarity and maintainability by encapsulating
added functionality to display the internal link text based on whether the file is a folder or a file to enhance user experience by providing clearer information
updated assertions in PredictionTest to use Locale . ENGLISH for accuracy formatting to ensure consistent formatting across different locales
changed the condition from checking for the day of the week to checking if it should not be equal to the day of the week to ensure the
removed hideInput ( ) and hideIme ( ) methods from AllAppsContainerView and LauncherAllAppsContainerView classes to streamline
use in - memory event storage engine to prevent test failure
refactor BsdFileStore to utilize BsdNativeDispatcher for filesystem path retrieval to improve code reusability and maintainability by encaps
add test case for issue # 1599
added a new parameter ` x ` , ` y ` , and ` z ` to the ` SpawnCommand ` command to allow spawning
updated content area calculations to use a constant for minimum content dimensions and refactored related methods to improve code readability and maintainability by central
[ gr - 3867 ] remove unused variable in graalcompilertest
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added failed checks and modified column addition logic in UpgradeCatalog280 . java to improve error handling and maintain code consistency
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added import for LuceneTestCase and annotation for bugUrl in RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421
updated home assignment logic in CodenameOneImplementation . java and removed unnecessary warning in HashtableContent . java to improve code clarity and ensure
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource accessors with a wildcard import and modified resource handling in LiquibaseEntityResolver and XMLChangeLogSAXParser to
set ` jdk . tls . disabledAlgorithms ` to ` false ` in ` ComHostnameVerifier ` and ` JavaxHostnameVerifier `
updated the ` @ Value . Immutable ` annotation and removed the ` EMPTY ` constant in ` CxxLibraryDescription ` and ` CxxLibrary
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest
updated the ` resizeThreshold ` annotation in ` Int2ObjectHashMap . java ` to ensure proper functionality of the ` resizeThreshold ` variable
updated folder name hint logic to use TextUtils . isEmpty ( ) instead of FeatureFlags . FOLDER _ NAME _ SUGGEST to improve cl
updated the client ID in ` UaaResetPasswordServiceTests . java ` to include " uaa " as a parameter to ensure that the
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to enhance encapsulation and restrict access to methods
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to check if the state is closed to ensure accurate representation of
refactor MimetypeIconUtil . java for improved functionality to enhance code maintainability and readability
rename ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in method naming conventions
added a new test method ` UnnecessaryParenthesesTest . java ` and modified the return condition in ` UnwrapParentheses . java
added a ` teleport ` method to the ` Location ` class and modified the instantiation logic in ` Location . java ` to enable teleportation of
replaced custom Base64 encoding methods with Spring ' s Base64Utils utility in TokenKeyEndpoint and TokenKeyEndpointMockMvcTests to enhance
updated import statements and refactored statistics reporting in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the ` ContainerAnnotation ` interface from ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the interface for
added a null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non -
refactor ` setUpRevampedTweet ` to utilize ` isMuffled ` for determining muffled users to improve clarity
added theme handling for the verified text display in UserProfileActivity to ensure the verified text is displayed correctly based on user settings
improve performance of abucoinsdigest . getinstance ( )
camel - 7999 : camel - mongo - add autowired property to camel - mongo component . thanks to benjamin
added an ` sourceIndex ` field and its getter / setter methods to the ` AttributeMapping ` class , and updated related classes to utilize
log corrupt column statistics when alter partition
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled for
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code readability and maintainability
[ geos - 10598 ] x vulnerability in the email address field - fix too eager escape
fix ( engine ) : do not enrich reflections with system module registry ( # 4395 )
updated features handling in JoinModeller . java to use a variable for the number of features to improve code clarity and ensure accurate representation of
g3d - 312 : fix for stringindexoutofboundsexception in algebraprocessor
( chore ) camel - kafka : only log trace when debug logging be enable
replaced a constant ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _
updated IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to improve handling of ignition events
tika - 3611 -- make sure that ascii name length be > = 0 or < 55
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK 1
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation
updated the version check from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval settings
added a condition to return null for FEDERATION _ USER in AuthenticationManager . java to ensure proper handling of federation users during authentication
do n ' t allow non - truffle object to be execute .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
logbackvalve : do n ' t allow access to non - existent file
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of org . apache . lucene . util . Version from CreateIndexTask . java to streamline dependencies by eliminating
added handling for missing primary keys in the comparison database to ensure correct schema management during comparisons
added ` MetastoreException ` to the execute ( ) ` method and modified error handling in ` MsckOperation ` and ` Msck
[ flink - 26011 ] [ kafka ] retry kafka commit transaction if it be already commit
[ issue # 5748 ] fix npe in forwardmessagetodlqactivity ( # 5749 )
added support for multiple services in DockerComposeContainer and created a new test class DockerComposeServiceTest to enhance service configuration flexibility and ensure proper
fix problem with collectionutil . copyset in export / structcontextdecorator
removed unused imports and simplified the return statement in FeedParser . java to streamline code and improve readability by eliminating unnecessary complexity
removed conditional check for ` mAppsCustomizeContent ` in ` Launcher . java ` and updated layout retrieval in ` Workspace . java `
changed energyReactiveVArACSumConsumed and energyRealWACSumConsumed from int to double in MeterRealtimeBodyDataDTO to
added a new file ` bug4150029 . java ` that implements a JApplet for managing temporary directories to address bug 41500
added Spark configuration handling and session closure logic in HiveConf , SparkClient , and SparkTask classes to improve resource management and ensure proper cleanup of
added a long press indicator for the deep shortcuts container and modified the Launchable class to include a long press indicator to enhance user interaction by providing
added a check for empty polygons in WKBWriter and updated test cases accordingly to ensure proper handling of empty polygons and improve test coverage for edge
refactor ` NativeLibraryMergeEnhancer ` and ` AbstractUnflavoredBuildTarget ` to use ` InflavoredBuild
added a new file ` MultiplyByMaxInt . java ` containing a test method for multi - dimensional multiplication to facilitate testing
removed the onActionViewCollapsed ( ) call and updated drawer indicator settings in OCFileListFragment . java to improve user experience by ensuring drawer
removed unused import statements from TestRAMDirectory . java to streamline the codebase by eliminating unnecessary dependencies
replaced instances of FixedBitSet with BitSet in Automaton . java and Operations . java to optimize memory usage and improve performance
drools - 2604 dmn 1.5 . 0 - dmn 1.5 . 1 - dmn 1.5 . 1 (
updated annotations in multiple test classes to use @ Repeatable instead of @ ContainedBy and @ ContainerFor to enhance flexibility in annotation usage and support for repeated annotations
updated the message formatting in AbstractController to include the duration of the file sending process to provide clearer feedback on the duration of the file being
added package access check and modified class name retrieval in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access validation
allow readresponseresolver to specify the number of response . patch by jbellis ; review by brandonwilliams for cassandra -
added calculation of freeSize in StoreDirect . java to adjust freeSize based on the size of the provided string
updated touch event handling in ` AnyKeyboardView ` and ` AnyKeyboardViewBase ` classes to include ` MotionEvent ` parameter to improve touch
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer to ensure compatibility with the latest SSL context
simplified socket creation by removing unnecessary privileged actions to enhance code readability and reduce unnecessary complexity
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
added pauseBlurs functionality and improved animation handling in DepthController , AbsSwipeUpHandler , and TaskViewUtils to enhance user experience
removed unnecessary import statements and added null check for curLatLng in NearbyMapFragment . java to improve code clarity and prevent potential
updated the ` removeSecret ` method to use ` clientId ` instead of ` client ` in ` ClientAdminEndpoints ` to ensure the correct client
replaced XMLConfigBuilder with XML configuration parsing in SqlSourceBuilderTest . java to enhance flexibility in testing by allowing multiple lines of SQL
http : / / issues . apache . org / activemq / browse / amq - 2282 - wait for consumer to complete
added tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper error handling for unknown key exceptions during data retrieval
updated filterConditions to handle null conditionDataList gracefully to improve null safety and avoid potential NullPointerExceptions
lightcontrol : use cloner instead of spatial to avoid memory leak
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and improved stack trace handling in StdErrLog . java to enhance code clarity
added context validation and improved logging in HttpSessionEventPublisher to ensure that the context is not null to enhance robustness by preventing potential NullPointerException
added a syntax check for the CREATE CQ statement in ASTVisitor . java to ensure compatibility with the latest version of the CQ syntax
[ hotfix ] [ doc ] fix typo in flinkiotdbsink javadoc
add a counter for custom simplificationconsiderednodes in canonicalizerphase .
updated the method call to include the context parameter for setting the file icon to ensure the file icon is displayed with the correct context
updated indexOrConstraintName to include the schema name in the readIdentifierWithSchema method to ensure the correct schema name is used when reading identifiers
update bigqueryreader so that bigquery value of type timestamp be format similarly for local and service - based run . this change update the timestamp value produce in
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes , and implemented it in ` ViewTest `
updated Enumeration declarations to use generics in multiple classes to improve type safety and eliminate unchecked cast warnings
updated import statements in IndexTool . java and MetaDataClient . java to improve code organization and maintainability
added new JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic in multiple classes to enhance annotation handling and improve code cl
[ gr - 35634 ] fix resourcefeature . java to check if the classpath be a jar .
update CUDA _ R _ 16F , CUDA _ R _ 16I , CUDA _ R _ 32U , and CUDN
refactor ResourceLoader to use FileFilter for listing layout directories to improve resource loading efficiency by filtering out unnecessary layout files
do n ' t override getAttachedFace ( ) in blockredstonetorch .
[ hotfix ] [ table - planner - blink ] add support for varbinary type in reltostageconverter
removed the import of DateHelper from NoteAdapter . java to streamline dependencies by eliminating unused imports
updated backup messages and error handling in the Backup class to improve clarity and user feedback during backup operations
ticket # 3485 : set position to relative instead of absolute
simplified file creation and deletion logic in ShadowParcelFileDescriptor . java to improve code readability and ensure proper file handling
updated method calls from ` poll ( ) ` to ` addFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy . java ` to improve
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
fix integerequalitycanonicalizer to handle both forx and fory fornode
removed the constant STRING _ ARRAY from TypeFactory . java to eliminate unused code and improve maintainability
refactor ` hideIme ( ) ` to ` hideIme ( ) ` and add ` hideIme ( ) ` methods to
fix network issue in blockstatecontainer ( # 4505 )
updated assertions in TimelineMetricCacheSizingTest and removed unused imports in TimelineMetricCacheTest to improve code clarity and maintain consistency
add a optimization to the glmaxtexturesize ( ) method to improve performance by avoiding unnecessary texture size calculation
[ java ] use trystoplogrecording ( ) instead of trystoplogrecording ( ) .
added a condition to reset startPosn when inTransform is true to ensure proper handling of start positions during transformation processing
replaced the ` isStarTreeDisabled ` method with a new ` isSkipStarTree ` method across multiple classes to enhance the control over
added a lockNearbyView flag and modified related methods in NearbyActivity . java to manage the refresh behavior of the nearby places
add maptransformer . of ( map ) and maptransformer . inverse ( ) to maptransformer
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for handling launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management by allowing dynamic retrieval of widget information
replaced ` ChangeListener ` implementation with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to standardize event handling
added methods to manage calling UID and UID in ShadowBinder to enhance testing capabilities for the binder in the Robolectric environment
replaced ` AutoValue _ Expect _ ExpectationFailure ` with ` Objects . equals ` and ` Objects . equals ` for better null safety
do n ' t warn about no support for deserializing message with name
simonstewart : fix bug in imagereplacedelement . getwidth ( ) , getheight ( ) , and getwidth (
added support for escaped characters in CoreMarkdownNodeRenderer and modified MarkdownWriter to handle newline characters to ensure proper formatting of escaped strings in the output
added a warning dialog button and refactored password sharing logic in SharePasswordDialogFragment . java to improve user experience by providing a clearer
refactor method invocation for MAP _ ADDRESS and UNMAP _ BUFFER to use a custom MappingMethods class to improve flexibility and maintainability
removed the ' public ' access modifier from several test methods in AbstractAssert _ describedAs _ describedAs _ to _ console _ Test . java
added new options for Slider AM keytab directory and configuration in LlapOptionsProcessor . java to enhance functionality for managing keytab storage in
updated the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and added animation functionality to enhance the graph view
added ` mHasLoaderCompletedOnce ` and ` mBindCompleteRunnables ` and modified methods in ` LauncherModel . java `
replaced boolean fields with final fields in ` NodeManageMemoryMergeOperator ` , ` NodePathsCountOperator ` , and ` NodePathsCount
updated method signatures and naming conventions in IssueInterface and ValidationReport classes to improve clarity and consistency in parameter naming and enhance validation reporting functionality
added a safeProviderName method to handle exceptions during cipher provider retrieval to improve error handling and provide clearer debugging information during handshake operations
[ hotfix ] [ runtime ] rename dynamicconfiguration to flinkconfiguration
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
remove unnecessary indentation in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to bitmap dimensions from other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to clarify the functionality of the test for covariant overrides
refactor curly and qtype methods to use a dedicated method to improve code readability and maintainability by reducing redundancy
camel - 16400 : camel - core - optimize the loading of route definition from xml . thanks to benjamin for
added space minimum and maximum settings for the scatter chart ' s X - axis in ScatterChart . java to improve visual spacing for better
updated string concatenation syntax for INTERVAL in ExpressionStringBuilder . java to ensure correct syntax for INTERVAL in expressions
added a default method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` and implemented it in ` BaseState
added a check to ensure " UTF8 " is present in the properties file to prevent runtime errors caused by missing UTF8 key
updated TestReproduceMessage and LuceneTestCase to use seedDecorators for randomized testing to improve test reliability by addressing
added logging for long - press events for AllApps items in StatsLogManager to enhance user interaction tracking for long - press actions
added null check for ` log ` in ` StoreWAL . java ` and created a new test class ` Issue112Test . java `
added a condition to show the sector land info only when the sector preset is not null or it ' s set to true to ensure that the
[ hotfix ] [ table - common ] fix unchecked cast warning in typeinfobase
refactor Enum class to improve code structure to enhance maintainability and readability of the code
added random selection validation to the ` buildNearbyRandom ` method in ` NearbySelectionConfig ` and ` NearbySelection
use cachebuilder instead of scheduledexecutorservice to improve performance
updated visibility settings for SQL view container and WMS layer import container in NewLayerPage . java to improve user experience by preventing unnecessary UI
set the default value of the Availability _ availability to UNAVAILABLE in ContextHandler . java to ensure proper initialization of the availability status
updated the ` processPBFTCommitMessage ` method to accept a ` BlockCapsule ` parameter and modified related logic to improve the handling of
fix : upgrade gapic - generator - java to 2.8 . 0 ( # 6022 )
changed the ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and added a new ` _ freeSpaceRe
changed ` KDC _ OPT _ PROXIABLE ` to ` KDC _ OPT _ RENEWABLE ` and added a new `
refactor JsonWriter initialization to ensure writer is properly instantiated and set to null to improve code clarity and prevent potential NullPointerExceptions
reformatted code for consistency and clarity in the ProfilePager class to improve code readability and maintainability
rename method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve method clarity regarding its functionality
added a new method ` valueFromClassConstant ` to retrieve object properties from class constants to enhance flexibility in configuring object values based on
[ hotfix ] [ kafka ] log error when kafkaservice initialization fails
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Sets to improve immutability and prevent accidental modification of
updated channel name from " channel " to " channelName " and added error handling for unknown output channels to improve clarity in logging and ensure proper
added keyword handling in HTMLDocument and a test for indexing in TestDemo to enhance document processing capabilities and ensure correct indexing behavior
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
refactor address handling in MemcachedSessionDataMapFactory to improve clarity to enhance code readability and maintainability by separating address addition logic
replaced the instantiation of CorrespondenceSubclassToFactoryCall with a direct class reference to improve type safety by explicitly specifying the class type
refactor Builder class to improve code readability to enhance maintainability and facilitate future development
updated the ISBNtoBibTeXFetcher . java file to use the new URL pattern and improved error handling for invalid ISBN
make polyglotcontext . enterifabsent and polyglotlanguagecontext . setkeepalivetime ( 1 , 10 ) fail if
added null check for the text before firing data changed events to prevent potential NullPointerExceptions when the text is null
added a new option ` ` simplified model ' ' to the model and refactored it to use it to improve the model model ' s
added trimming of whitespace from the line in SuffixURLFilter . java to improve code cleanliness by removing unnecessary whitespace
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when not in godmode
ticket # 4810 : remove duplicate code in checkboxcreationdialog and textinputdialog
removed the ` maxSize ` parameter from the ` LinkedHashMapCache ` and ` LinkedHashMapCache ` constructors in ` LinkedHashMapCache ` and ` TCache
removed unnecessary closing of the channel in ChannelEndPoint . java to improve code clarity and maintainability
added null check for keyIndex in FixAcidKeyIndex and refactored KeyIndexBuilder initialization in OrcRecordUpdater and Orc
updated exception handling in DirectUpdateHandler2 . java to include Locale . ROOT for better error message formatting to ensure consistent exception handling across different locales
add store check guard to writenodes , and remove redundant guard creation in canonicalizerphase
improve exception dispatch edge detection in case of exception dispatch
performance improvement : fix classification disagreement ( bugdata )
replaced ` BuildTarget . copyOf ( buildTarget ) ` with ` BuildTarget . copyOf ( buildTarget ) ` in multiple files to simplify
[ hotfix ] [ table - common ] fix typo in sqlrunner javadoc
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and
renamed ` knownApis ` to ` knownSdks ` and updated related methods to use ` Set ` instead of ` TreeMap ` to
use confidenceprogressindicator instead of progressindicator in createofferview
updated HTTP header from " Cling / " to " UMS / " in RequestHandlerV2 . java and added UMS / headers in
minor reformat in block index and fix path builder loading , close #
refactor CrowdfundingChatAdapter to differentiate between message and no - flex views to improve flexibility in handling different message types
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
add -- to support -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
simplified method signatures in TexturePacker by removing unnecessary canvas parameter to improve code readability and maintainability by reducing complexity
replaced the ` getVisitors ( ) ` method with a default ` apply ` method in ` RefactorModule ` and refactored the
added methods to retrieve ` getChildByName ` and ` getChildrenByName ` in ` Xml . java ` to enhance the functionality of the ` Xml `
added " Content - Charset " header to HttpSolrServer and its corresponding test in BasicHttpSolrServerTest to ensure proper handling of character encoding
replaced static UI _ STATE _ ALLAPPS with a new SystemUiControllerFlags annotation to enhance flexibility and maintainability of UI state
removed the clientService variable from the IntrospectingTokenService class to streamline the class by eliminating unused variables
updated error message format in HiveRecordSet . java to provide more context about the split failure to improve error reporting for better debugging and traceability
removed the ownerId field from NodeEntry . java to streamline the object creation process by eliminating unnecessary fields
rename backupsnapshotafertakingsnapshot to backupsnapshotaftertakingsnapshot to clarify the purpose of the backup snapshot action
added score calculation to the merge method in TextFragment . java to ensure that the score is maintained when merging text fragments
removed the private Digester declaration from Md4PasswordEncoder . java to optimize password encoding performance by eliminating unnecessary dependency
added a validation check for the maximumUnimprovedStepCount property in UnimprovedStepCountFinish . java to ensure that the
added a check to return early if there are currently opened editors to optimize performance by avoiding unnecessary processing when no editors are open
replaced direct calls to ` verify ( ) ` with ` verify ( VerificationMode ) ` in ` BDDMockito . java ` to
replaced ` Thread . currentThread ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner . java ` to
added a check for the type of ` CodeFirstPojoClient ` and implemented a new ` sayHi2 ` method in ` CodeFirst
added logging functionality to AbstractSplitBrainProtectionTest . java to improve traceability of split brain protection tests
added a null check for the LogoutConfigurer before adding the filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure that the logout
[ giac ] remove degree check , no need for degree ( )
refactor DockerComposeContainer to streamline log following logic and add a new withLogConsumer method to improve code organization and facilit
updated the parameter type in the testMapping method from ` Class < ? > ` to ` ResultSetMapping < ? > ` to ensure compatibility with
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` ThrowingSupplier
replaced the break statement with a return statement in ConsoleActivity . java to ensure the method returns a valid boolean value
camel - 17850 : camel - platform - http - add support for text content post in vertx platform http engine
added methods to retrieve paths with platform - independent separators in MorePaths . java to improve path handling across different operating systems
added a null check for authorizationContextParams before processing to avoid potential NullPointerExceptions during execution
replaced the ` loadLibraryOnlyIfPresent ` method with a new ` throwExceptionIfFail ` method in ` NativeLibraries . java ` to
updated SDK version from 4611349 to 4514284 and added tests for speak functionality in ShadowTextToSpeech to ensure compatibility with
add a new class ` TransactionLogKey ` and modify the return statement in ` QueueTransactionLog ` to enhance transaction logging functionality by associating
added a new boolean field ` enableSqlWithoutProfile ` and its getter and setter methods to ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository
added a try - finally block to ensure _ data is reset in a finally block to improve resource management and prevent potential memory leaks
fix eclipse compiler warning in createregistry ( # 8561 )
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated the ` getThreadInfo ` method to include stack trace depth in ` CachedThreadStatesGaugeSet ` and modified the ` getThreadInfo ` method
added a new ` prevTlogOnPrecommit ` field and modified the ` postCommit ` method in ` UpdateLog . java ` to
updated FastAsyncWorldEdit job file from version 1.17 to version 1.16 to ensure compatibility with the latest features and improvements
added null check for the input path in SegmentGeneratorConfig . java to ensure that the path is not null before creating it to avoid potential NullPointerException
added a method ` calculateNormalVector ` to ` ObjUtils ` and refactored normal vector calculation in ` TriangulationHelper ` to
updated the ` find ` method to include ` identityZoneId ` as a parameter in the ` JdbcAuditService ` class to ensure that the
refactor SpanCollector class for improved performance to enhance efficiency of span collection operations
added a null check for the cursor session before accessing its properties to prevent potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class to improve transaction isolation handling to enhance performance and reliability of transaction management
rename method ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to
added thread name handling for forwarding to the remote URL in TestSession . java to improve clarity of thread context during execution
refactor CookieManager to improve cookie management functionality to enhance performance and maintainability of cookie handling
simplified the return statement in LauncherExtension . java to improve code readability and reduce unnecessary array list creation
added OverviewToAllAppsTouchController to the list in RecentsUiFactory to enhance user interface experience by providing quick access to all
refactor scaleHotseatWithWorkspace method to getHotseatScaleAndTranslation method for better clarity and functionality to enhance the scaling logic to retrieve both scale and translation values for the hotseat in a unified
added a check to exclude JUnitRule instances in the stack trace filtering logic to ensure that only relevant JUnit rules are considered in the stack
[ java ] deal with readonly bytebuffers for get and put byte to a mappedresizablebuffer . issue # 107
replaced ` addBalanceListener ` with ` balanceListener ` in ` DepositListItem . java ` to ensure the listener is properly managed
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color rendering based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor , updated log initialization in multiple test classes to improve robustness by preventing null pointer
remove unused import of PatternUtil from Gl200ProtocolDecoder . java to streamline code by eliminating unused imports
refactor playback time checks in FullDetailsActivity to improve readability and maintainability to enhance code clarity and ensure timely execution based on
spanishxmltreereader : do n ' t ignore lemma that do n ' t match token
added a condition to clear the " language " and " iso " dc when it is empty to ensure that the item ' s language is set
updated the scheme override logic in ReactiveLoadBalancerClientFilter to handle secure instances to ensure correct scheme is used for reactive load balancing based on
[ hotfix ] fix checkstyle violation in defaultmessagestore
changed the visibility modifier of the fullFilePathFromClassName method from final to default to allow access to the method without requiring an instance class
refactor the return statement to use ` Correspondence . from ` for better readability to improve code clarity and reduce boilerplate
replaced occurrences of " US " with " EN " for language support in JRELocaleProviderAdapter . java and LocaleDataMetaInfo .
removed null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add minecraftforgeclient to allow tessellator to render block with tessellator .
added a return statement to TxCacheDB . java to ensure the method exits early under certain conditions
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class for improved performance to enhance efficiency in data processing
of - 2261 : do n ' t close the io session if it ' s closed
updated flight event parameters in FlightEventsTest . java and modified epsilon value in FlightEventsTest . java to improve test accuracy and
[ beam - 8470 ] update protobuf to v1p26p0 and v1p26p0 to ensure compatibility with the latest
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure namespace declarations are added to
update instructorfeedbackresultspagedata to use getstudentprofilepicturelink ( ) instead of getprofilepicturelink ( )
added a shortRules list and modified the defaultRules initialization in DefaultPasswordValidator to improve password validation flexibility and enforce length constraints
danielwagnerhall : change the return value of retrievelastremotecontrollogs and capturescreenshottostring to 20
added @ Test annotation to ProxyClassSerializationTest . java to enable testing functionality for the ProxyClassSerializationTest class
updated the scale argument format in DLNAMediaInfo . java from " thumbnailRatio " to " thumbnailRatio " to ensure compatibility with
use speculativeguardmovementphase instead of speculativeguardmovementphase
added a check to prevent overriding of the authentication manager bean definition in the AuthenticationManagerBeanDefinitionParser to ensure that the authentication manager bean definitions are
added handling for forwarded host and server fields in ForwardedRequestCustomizer . java and improved test cases in ForwardedRequestCustomizerTest
added a call to ` sb . setLength ( 0 ) ` in ` ConsoleReader . java ` to reset the buffer length to zero
changed the visibility of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists for better extensibility
updated OpenIDE - Module - Specification - Version values from version 1.31 . 0 to version 1.4 . 0 across multiple files to
hbase - 26475 add support for hbase . server . netty . tls . wrapsize ( ) in x509util
updated multiple Java files related to CookieStore , HttpURLPermission , Inet4Address , Inet6Address , and InetAddress to improve code consistency and
updated the ` FixedLengthTokenizerTests ` class to replace ` TestCase ` with JUnit ' s ` TestCase ` and added a new
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory to improve flexibility and error handling for invalid protocol bindings
updated SurfaceControl . Transaction usage and added transaction application in DepthController . java to ensure proper handling of surface transactions and improve rendering performance
updated version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure
hbase - 16413 addendum fix for hbase - 16413 ( addendum )
update unSeqMergeList initialization to use ` 0 ` instead of ` maxOpenFileNumInEachUnseqCompaction ` for clarity
camel - 16400 : fix issue with file input stream conversion in camel - generic
added a login parameter to DefaultShardManagerBuilder and modified the login logic in DefaultShardManagerBuilder to enable conditional login based on the login parameter
updated the DeleteGlobalRef method call from ` dcbGetUserData ( functionPointer ) ` to ` dcbGetUserData ( functionPointer )
rename the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of
added a check to terminate the response if the completion is marked before proceeding to ensure that the response is only terminated if it has been marked
added a condition to check if the current user is a student in the feedback response comments logic to ensure that only users with the appropriate team are
added checks for linked color profiles in BMPImageReader . java to ensure proper handling of linked color profiles on Windows platforms
updated the ` setSimpleCuboid ` method calls in ` ClassicPlotManager . java ` to correct the positioning of simple cub
added a wait message for PMD status and modified the actionPerformed method to run it in a background thread to ensure that the PMD status is
refactor grid handling logic into a separate method for setting grid sizes to improve code readability and maintainability by reducing redundancy
changed return values from false to true in ContributionsListFragment . java to ensure that the method correctly indicates a successful operation
added a skip range test in DistinctPrefixFilterIT . java and modified filter logic in BaseResultIterators . java to ensure correct handling
pdfbox - 4892 : add test case for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file to enhance functionality by providing a way to retrieve the last modified time of a file
hive - 26251 : disable vectorization when query iceberg metadata table ( # 3306 ) ( laszlo pinter , review by adam szita )
replaced ` currencyTextField ` with ` currencyComboBox ` in ` CashDepositForm . java ` to enhance user experience by allowing selection
changed catch block from IOException to Throwable in WriteFlusher . java to handle all errors , including errors that are not handled as errors
added a boolean flag ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling during
added a new field ` activeKeyId ` to the UaaConfiguration class to enable tracking of the active key identifier for better management
updated email sendmail actions to include attachments to enhance email functionality by allowing attachments to be sent
changed the ' isActive ' variable to be volatile to ensure thread - safe access to the ' isActive ' variable
updated order by expression context checks from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext . java `
bugfix : use tostring ( ) instead of tostring ( ) for debug output
added a check for the ownCloud application name in the calendar validation logic to ensure that only the ownCloud application is considered in the calendar validation
hbase - 26462 masterfilesystem should always set rootdir permission when kerberos authentication be enable
updated locale retrieval from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange . java ` and ` J
refactor Instant class to improve code readability to enhance maintainability and simplify future updates
added a null check for the state format in CollectionsHandler and changed the return type of getStateFormat to String in AbstractFullDistribZk
updated logging statements in CentralAuthenticationServiceImpl . java and modified object type check in AbstractTicket . java to improve clarity of log output
added exception handling for IllegalArgumentException in PDICCBased . java to improve error handling by including additional exception types
updated conditional statement in AbstractFileResourceSet . java to improve code readability and maintain consistency
add pathtranslator to pluginparameterevaluator so that it work with maven 3 . x .
[ beam - 8470 ] add protobuf coders to the coders . extensions . protobuf package .
added a boolean parameter to the JpaQueryParsingToken constructor and implemented a test for signed numeric literals in HqlQueryRendererTests to ensure
updated LaunchLugHandler and RailGuide to include instance length and separation parameters to enhance functionality by integrating instance count and separation
removed the getNonceFactory method from BitmexStreamingExchange class to streamline the code by eliminating unnecessary implementation
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timer interval in driver conductor test .
changed the default value of the ` initializeLoadedClasses ` from ` true ` to ` false ` in ` FastClasspathScanner . java ` to
added focus grabping functionality in FullTextSearchPanel to improve user experience by ensuring the search field is focused
fix test with nioparams correct usage for this branch
updated the assertion in StatementTest . java for clarity to improve code readability and maintainability
updated assertion messages in TestSolrConfigHandler . java to include expected values from the server to enhance clarity of error messages for better debugging
replaced HttpMethod with ServerHttpRequest and ServerWebExchange in CsrfWebFilterTests . java to enhance testing capabilities for non - standard HTTP
updated density string formatting in FilterResourcesStep . java to improve accuracy of drawable representation based on density
added a new method ` elementPrefix ` to retrieve the UIID of specific components to improve code readability and maintainability by centralizing UI
removed unnecessary import of DisplayMetrics and updated rotation condition in RecentsAnimationDeviceState . java to streamline code by eliminating unnecessary
added new files ` TestCloneArrayWithDifferentLengthConstness . java ` and ` TestArrayCopyWithLargeObjectAlignment . java ` to
added @ AwaitsFix annotation to ReplicationFactorTest . java to indicate that the test is awaiting a fix for the issue identified in
fixed - npe in redissonexecutorservice # executerunnable ( ) method if nextStartDate be null
simplified the ` needsToUpdateCredentials ` logic in ` FileDownloader ` and ` FileUploader ` to improve code readability and maintain
modified the closing logic for file scanners in Compactor . java to handle null scanners gracefully to improve resource management and prevent potential null pointer
replaced direct calls to ` get ( iface ) . get ( ) ` with ` getOrDefault ( iface ) . doubleValue ( ) ` for
added a nonce parameter to the claims map in TokenMvcMockTests to ensure that the correct nonce value is retrieved from the token
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the chart editor classes
added width and height settings to formLayeredPane in the Form class to improve layout management by preventing unnecessary component resizing
removed unused imports and implemented the maxY method in BrowserContentPane to improve code clarity and ensure proper height calculation based on the owner ' s
changed the return type of the openDatabase method from void to boolean in SharedDatabaseLoginDialogViewViewModel and SharedDatabaseLoginDialogViewModel
replaced hardcoded DOCKER _ COMMAND with Platform . DOCKER _ COMMAND in DockerTestUtils . java and Platform . java to
added null check for input stream before processing to enhance robustness by preventing potential null pointer exceptions
updated drawLeaveBehind method to accept a custom color parameter to enhance flexibility by allowing customization of the folder ' s leave behind color
show an error message if canary be not compatible with android studio . ( # 3995 )
bug 10663 : add warn log for invalid identityproxy table name
added modulePersistEnable and modulePersistDisable lists to StartArgs . java to enable and disable module persistence based on command - line arguments
[ gemini ] fixed args in gettrades
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order of questions
add unit test base class for realm base
removed multiple JSP setup JAR files from AuthCheckFilter . java to clean up unnecessary setup files and improve code maintainability
refactor runnable execution logic in Scheduler . java and add unit tests in SchedulerTest . java to improve code clarity and ensure correct execution order
updated the ` runCommand ` method to accept a variable number of arguments instead of an array to allow for more flexible argument handling in command execution
modified character reading logic to handle the end of the input stream correctly to improve robustness by preventing null pointer exceptions when reading from the input
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to address potential issues with overflow pages
updated arrow positioning logic in DeepShortcutsContainer . java to adjust arrow dimensions based on icon visibility
replaced ` printStackTrace ( ) ` with ` ignored ` in ` JabRefExecutorService ` , ` FileUpdateMonitor ` , and ` B
updated thumbnail update logic in AbsSwipeUpHandler . java to include a refreshView parameter to enhance functionality by allowing the thumbnail updates based on
updated the usage message in ExtractTTFFonts . java to use the class name instead of the class reference to improve clarity and provide
updated InternetAddress constructor to include a boolean parameter and improved hostname validation logic to enhance error handling and provide clearer feedback for invalid hostname inputs
replaced references to ` DrawerActivity . this ` with ` this ` in multiple activity classes to simplify code and improve readability by redu
updated ` SizeBasedDocIdSet ` and ` FilterBlockDocIdSet ` to use ` _ maxDocId ` instead of ` counter
added a new method ` promptToOpenFile ` and modified the ` promptToOpenFile ` method to accept a ` String ` parameter to
updated widget span and page sleep delay values in AppsCustomizePagedView . java and refactored page count updates in Apps
refactor instance management in FlightConfiguration and update expected length in FlightConfigurationTest to improve accuracy of component positioning and ensure accurate test
camel - 16400 : camel - micrometer should use direct instead of seda in camel - micrometer - test
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3550 ] remove hidden metadata from the list of metadata field in dspaceobjectconverter
added a test method to validate missing dimension and metric names in StarTreeConfig to ensure that the StarTreeConfig correctly handles null values
camel - 16400 : added support for dynamic recipient list in frombuilder . thanks to benjamin
refactor InlineLayoutBox and HoverListener to improve repainting logic to enhance layout rendering efficiency and ensure correct repaint behavior
refactor ` DetectAuthenticationMethodOperation ` to use ` OperationsService ` for managing authentication operations to improve code maintainability and facilitate
