refactor SocketAppender initialization to use setRemoteHost and setPort methods instead of constructor parameters to improve clarity and encapsulation of SocketAppender
refactor header handling in BasicAuthPlugin to use a more concise approach to improve code readability and maintainability
remove redundant call to RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to streamline code by eliminating unnecessary reference to
fix npe in capacitymanagerimpl when vm detail be null
added a flags field and a constructor to ShadowPaint , and updated the PaintTest to verify anti - aliasing behavior to enhance encapsulation and
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
update test to make sure eclipse be not use to compile the project
added a check to ensure ` getNonce ( ) ` is not empty in ` Realm . java ` and modified ` NettyAsyncHttp
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to handle connection and disconnection events to provide a mechanism
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
added a check to ensure the thing is enabled before filtering it to ensure that only enabled items are processed in the HomeConnectBridgeHandler
added null check before removing and adding policies in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions during policy management
update assertions in tests to use ` matches ( ) ` instead of ` isEqualTo ( ) ` for Java 9 compatibility to ensure compatibility with Java
added JSON parsing and logging for DAG information in TezTask . java to provide detailed information about the task ' s context and description
added methods to retrieve heap header and tag times in ` ComputedSummary ` and ` HprofHeap ` classes to improve accuracy of heap dump
replaced RxJava2Tasks with ApacheHttpClientMediaWikiApi for retrieving upload count to streamline the upload count retrieval process by leveraging the
remove useless mvcc / no mvcc condition from mvstore
[ issue # 5238 ] fix the issue of incorrect message size in defaultmessagestore ( # 5239 )
added logging for folder opening status when the folder is not open to improve debugging and traceability of folder access issues
added a test method to verify the sorting order of PGProperty values to ensure that the PGProperty names are correctly sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a
updated method parameters from ` Object ` to ` ItemInfo ` for ` supportsDrop ` and ` getUninstallTarget ` to improve type safety and
updated error message assertion from ` hasMessage ` to ` getMessage ( ) . isIn ` for HTTP method validation to improve clarity of error reporting
updated NearbyActivity to replace NearbyMapFragment and NearbyMapFragment with their respective listFragment and NearbyList
renamed the parameter ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve clarity by using a more d
added a boolean field ` sendZeroAnomalyEmail ` and its getter / setter methods in ` EmailConfiguration ` , and updated ` EmailReport
[ flink - 15605 ] [ kafka ] fix incorrect call to flinkkafkaclientbase # open ( )
added methods to retrieve user and geofence data in DataManager to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum length parameter to improve response handling by allowing dynamic response limits
refactor ` McastServiceImpl ` to accept a byte array instead of an array for ` ChannelData ` to improve handling of message decoding
[ hotfix ] fix resource leak in multileaderserverimpl . sendsnapshotfragment
fix test break by change to http : / / www . s2s . org
updated test cases in ConfigMetadataProviderTest . java to improve test coverage for configuration metadata provider functionality
updated variable name from ' note ' to ' noteToUpdate ' in SnoozeActivity . java to improve code clarity and consistency in
added a private static class AcceptAllFilter to streamline directory stream filtering to improve code readability and maintainability by reducing duplication
refactor JdbcTestDataSet class for improved readability to enhance maintainability of the code
added exception handling for ClassNotFoundException in lookupType and introduced a new lookupTypeHelper method to improve robustness by throwing NoClassDefFoundError when
added a new ` DockerImageName ` class and refactored ` GenericContainer ` to validate Docker image names to improve validation logic for Docker image
updated login error messages to reflect incorrect credentials to improve user experience by providing clearer feedback on failed credentials
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to ensure that the " autofocus " field
added unit tests for SamlConfig and SamlConfig configurations in SamlIDPRefreshMockMvcTests . java to ensure correct SAML configuration
added logic to handle empty and non - empty lists in ComparableVersion . java and created a new test case in ComparableVersionTest . java to
updated bottom - left mode settings and modified return statements in Sheet . java , UIManager . java , and Sheet . java to use minimum preferred
updated package structure and imports for ParallelUniverse and related test classes to improve organization and clarity of the codebase
refactor method handle creation in LocalCacheFactory and NodeFactory to use a new method type for better clarity to improve code readability and
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the FrillsAndFills class to improve the
added functionality to draw self loops and edges in the processing preview to enhance the visual representation of self - loops in the graph
updated references from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
set the translation of the drag handle indicator to zero in AllAppsTransitionController to ensure proper positioning of the drag handle indicator
added logging statements to CollectionViewer , CommunityViewer , and ItemViewer classes to improve visibility of collection , community , and item details in the
updated the documentation for pushing predicates down in the operator tree to clarify the behavior of filters during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest class to ensure tests are only executed on non - OS environments
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " in the Test
act - 1193 : fix commandexecutor . execute ( commandcontext ) in executeasyncrunnable . retryasyncjob
refactor Transaction class to improve code structure to enhance maintainability and readability of transaction management
changed annotation from ` @ CustomFieldBehavior ` to ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
added a method ` whichExec ` to ` AsyncExecute ` and modified the constructor of ` FirefoxCustomProfileLauncher ` to use it to improve
added a check to prevent duplicate entries in ` colFamToDynamicColumnsMapping ` to ensure that ` colFamToDynamicColumnsMapping
[ hotfix ] [ runtime ] make hadoop output collector and tuple unwrap iterator serializable
phoenix - 5584 older client do n ' t get correct view metadata when a 4.15 client create a view
added logic to update googleid when instructor have a new student
replaced the import of TestCellReference from org . apache . poi . xssf . util to org . apache . poi . ss
fix piston lens break on block that have hardness . close # 386
added a new file ` LongPointerPressTest3049 . java ` that implements a long pointer press test with network error handling to d
truffle : remove trufflecompileroptions . trufflefunctioninlining check from partialevaluator
simplified null checks in BaseBuilder and XMLConfigBuilder to enhance code readability and maintainability
simplified the condition in ListBlockParser . java and added a new test in SpecialInputTest . java to improve code readability and
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to extend it to improve code organization and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests related to issue 1070
[ wasm ] remove jsinterop annotation from testcaselogger . savemessage ( )
remove unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the media format is video in the web subtitle configuration to ensure proper handling of video formats in the web playback process
added security property ` jdk . tls . disabledAlgorithms ` to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to
server : do n ' t allow vm to be start in zoneware when they be not in zoneware vms
updated logging statements to include the cacheEntry object and improved string formatting in QueryResultsCache to enhance logging clarity and provide more detailed information about
add option to managedependencies to skip update the pom after manage dependency
added a test for ` getLastIntentSenderRequest _ sendWithRequestCode ` in ` ShadowActivityTest ` and implemented ` send ` in `
refactor GLJPanel and GLCanvas creation in RocketFigure3d . java for improved rendering behavior to enhance rendering performance and
added synchronization to the controllerListeners list in HydrawiseAccountHandler and implemented dispose method in HydrawiseControllerHandler to ensure thread safety when
solr - 9893 : fix test to work with java 9 .
updated year calculation in TimestampUtils to use ChronoField ' s YEAR _ OF _ ERA instead of the absolute year to ensure accurate year retrieval
fix possible npe when disconnect a jabber account . http : / / github . com / codenameone / codenameone /
added a new variable ` cur _ ws _ commit _ id ` to the SQL query in ` TxnHandler . java ` to improve clarity
replace ByteChunk with ByteBuffer in BufferedInputFilter to improve memory management and handle potential BufferOverflowException
added a new method ` toSync ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ActionGraphBuilder import and updated method signatures in various compiler factory classes to utilize ActionGraphBuilder for improved handling of ABI jar
danielwagnerhall : added test for invisible file input in ie
removed unnecessary import of java . util . Date and added exception handling for createTables ( ) in SQLManager . java to improve code clarity
added a check to return the local Maven directory if the file does not exist to ensure the method returns the correct Maven directory for non - existing
hide algebra label if they do n ' t start with the hidden prefix .
fix ( ctelementimpl ) : fix npe in getmetadata ( )
fix buffer decoding in defaulttrackoutput .
added a condition to check if the cached is not sorted by ID before reordereding in EntityIterableBase . java to ensure proper handling of
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging the expire message to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the behavior of ` Array . newInstance ( void . class , int
add ` @ AddToRuleKey ` annotation to ` toolType ` in ` ClangCompiler . java ` and ` GccCompiler .
replace hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by centralizing timeout logic
polish ` ` make prometheus sampler sampler sampler sampler experimental ' ' by default
removed @ Ignore annotations from multiple test classes to ensure compatibility with MongoDB server requirements
fix test case after change in http : / / issues . apache . org / activemq / browse / amq - 2635
updated the condition to check if the mdTable is not an artifical table to improve validation of the mdTable ' s properties
updated file status checks from ` isFile ( ) ` to ` isDirectory ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager to improve null and empty checks to enhance robustness and clarity of session attribute management
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replace direct access to ` _ stopping ` with a local variable ` stopping ` in ` AbstractConnector . java ` to improve code readability and
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14850 : camel - core - optimize message history to reduce object allocation
[ hotfix ] [ test ] fix flaky test in delayedmonopublishertest
updated error handling in WebsocketTest to check for WebSocketHandshakeException to improve clarity in error reporting when unexpected WebSocketHandshakeException is encountered
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly instead of an anonymous inner class to improve code readability and maintainability
refactor variable names from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
added support for a ' default - output - channel ' attribute in the XPathRouterParser and its tests to enable configuration of a default output channel
changed the cacheSeconds from an integer to a DurationCapable String and updated cacheSeconds to a duration format to enhance flexibility in configuring
updated OpenAPI version from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple Java files to
removed the append ( buffer , true ) method call from ByteBufferPool . java to streamline the buffer handling process for improved performance
added a check for the presence of " alt - rt . jar " in the boot class path to ensure tests do not fail if it is
updated JDBC user deletion queries to be case - insensitive and modified user data in test cases to ensure accurate user deletion regardless of case and align test data with expected
updated FlightRecorderProfiler to use ArrayList and List for option construction to improve code clarity and ensure compatibility with Java versions prior to 1.
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if ` _ contentView . hasContent ( ) ` in ` HttpParser . java ` and implemented a new test
refactor AtmosEndpoint class to improve code readability to enhance maintainability and facilitate future development
added conditions to check for " printf " and " print " method names in Java2TypeScriptAdapter . java to ensure proper handling of method
added a new file TestCapacityUntilGCWrapAround . java to test the behavior of the ` incMetaspaceCapacityUntilGC ` method on
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
removed conditional check for stamped at start in SamplingStatCalculator to simplify the calculation of endTime based on the result ' s timestamp
added unit test base on user forum issue
updated error handling and messages in JPEGImageReader for better clarity and accuracy to improve error reporting for invalid ICC _ PROFILE chunks and
fix terra shatterer and terraform rod not cause reequip animation
updated JoobyModule , SpringModule , JoobyExtension , and JoobyModule to conditionally register beans based
refactor to use container . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . getclassloader ( )
bug 52727 - add support for nameupdater . properties in meta - inf / resources
added a flag to indicate if the ellipsoid region was started in the EllipsoidRegionSelector class to ensure proper initialization of the ellips
replaced instances of " http " with " https " in JavaSEPort . java and added a default codename one com protocol to improve
add validation to getfeature to ensure sortby be valid
replaced ` equals ` with ` null ` for the ` grantor ` assignment in ` AbstractJdbc2DatabaseMetaData . java ` to improve
added graphics configuration and updated image comparison logic in DiagramGenerationTest . java to improve image handling and ensure compatibility with different graphics
fix npe in minecraftlogger when sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flakey locktest . testislocked ( ) .
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and joining tokens to enhance string manipulation capabilities
use response . senderror ( 404 ) instead of response . statuscode ( 404 )
refactor command parsing and highlighting logic in SystemHighlighter . java to improve command handling and ensure correct highlighting behavior
updated version to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " in Constants . java to reflect the
update buffer position to use dimensionSize instead of idx to ensure correct dimension size is used for buffer positioning
added support for checking drag - and - drop status in multiple classes to enhance drag - and - drop functionality in the system UI
[ java ] add test for socket traffic class on java 7
added PSK - AES256 - GCM - SHA384 + TLSv1.2 to the TestCipher class to support additional encryption algorithms
updated description retrieval from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment .
added JSON property annotation to ScimGroupMember . java to enable serialization of the " value " property in the ScimGroupMember class
refactor HqlQueryRenderer to handle reserved words in query parsing and add a new test for schema scoping in HqlQueryRendererTests
[ java ] fix typo in subscriptionhelper . java
refactor Parser class to improve code structure to enhance maintainability and readability of the code
modified the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted related logic to enhance functionality by allowing the
tika - 697 -- add mime detection for cpio file
[ hotfix ] [ table - planner - blink ] remove unneeded getmonotonicity method from flinksqloperatortable
added Inheritance annotations and implemented equals , hashCode , and toString methods in OneTimeTokenAccount and OneTimeToken classes to enhance serialization and deserialization
added a condition to check if the assistant is not running before proceeding with fling operations to ensure that the fling operation only proceeds
added a new file ` SolarisShortDSA . java ` that implements key pair generation and verification using DSA to facilit
added a method to toggle the search label in the ListFragment to improve user experience by disabling search functionality
cloudstack - 7892 : do n ' t lock the volume before create a snapshot
refactor ` FileDetailActivity ` to use a new ` DetailsServiceConnection ` class instead of a separate ` ServiceConnection ` to improve code
updated the handling of SSLPeerUnverifiedException in HttpClientTLSTest to utilize an AtomicReference for request failures to improve clarity and
removed the equals method from the ConjunctionScorer class to streamline the code by eliminating unnecessary functionality
added a null check for the variable ' v ' in bindItems method to log an error if the item binding fails
wait for leader election in cp member add / remove test ( # 11977 )
refactor cache size adjustment logic in DefaultCache . java to improve clarity and maintainability of cache size validation
updated API path from v2 to v3 and added new fields for type and currency in CryptoFacilitiesAccountInfo to ensure compatibility with the
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the ` freen
added null handling for ` readStatus . getPageData ( ) ` in ` AsyncPageReader ` and updated test annotations in ` TestDrill
updated argument validation and subscription type handling in SerumStreamingService . java and modified buildChannelName method to accept an additional subscription type to enhance
add a config option to disable charging animation in mana pool .
[ java ] handle timeout exception in cluster node restart test .
updated exception handling to log errors instead of ignoring exceptions to improve error logging for better debugging and debugging
updated assertions in DefaultServletTest to use assumeTrue for directory creation to improve test reliability by ensuring directory creation only occurs on Windows
removed duplicate lines in ResourcesInjectorFull . java to streamline the code for better readability and maintainability
updated ` changeLogFile ` and ` outputFile ` types from ` String ` to ` FileResource ` in ` BaseLiquibaseTask `
update method calls from direct field access to getter methods in BlockWorldVector . java to improve code readability and maintainability by using getter methods
updated LongConcurrentLRUMap to remove unnecessary comment and changed the CacheEntry class to be final to improve code clarity and enforce immutability
added regex escaping for resource configuration in ReflectionProcessor . java to ensure proper parsing of input arguments for resource configuration
updated FileCredentialsCache to handle KRB5CCNAME environment variable and modified EmptyCC to accept command - line arguments for the credentials cache to
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
enable fast - sync by default when fast - sync be not available
danielwagnerhall : fix classcastexception in webdriverservlet
do n ' t expand ` ` areequal [ segment [ x , y ] ] ' ' to ` ` areequal [ segment [ x
added a condition to clear pending rendering operations if it exceeds 20000 and the implementation is minimized to ensure proper handling of pending rendering operations when
fix thread safety issue in hazelcasttestsupport # sleepmillis ( )
fix issue with continuously update key in write - behind queue
set the icon of JLabel to null in GroupTreeCellRenderer to avoid potential memory leaks
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between strict and non - strict redirects to improve test coverage and ensure correct behavior of
added IO . close ( serverSocket ) and refactored test methods in ShutdownMonitorTest . java to improve resource management and enhance test coverage
increased the calculation of ` moveSize ` and modified the fill rate comparison logic in ` RandomAccessStore . java ` to improve memory
refactor field retrieval and serialization error handling in Json . java and add a new readFields method to improve code clarity and enhance error messaging
[ hotfix ] [ runtime ] move componentclosingutils to runtime . operators . coordination
delete volume for a vm that have be destroy on error state transition to error state
fixed npe while create vlan with ipv6 cidr ( # 5397 )
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and update related variable references to improve clarity and
increased the timeout value for the leader retry from 15000 to 30000 in CollectionsAPIDistributedZkTest . java to
refactor ` errorMessage ` method to remove the ` String input ` parameter and improve error message formatting to simplify error message handling and enhance clarity
updated drawing coordinates in URLImage . java to use negative coordinates to improve image rendering accuracy by avoiding negative coordinates
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in SolrTestCaseJ4 . java to ensure correct validation
replaced multiple try - catch blocks with a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by
[ hotfix ] [ runtime ] add cause to streamtaskexception in streamconfig
refactor tag processing logic in Preprocess . java for improved clarity and functionality to enhance readability and maintainability of the code
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for mapping
do n ' t encode empty extension list in jsonparser . setprettyprint ( true )
updated string splitting logic and refactored artifact extraction logic in LibraryManager . java to improve code readability and ensure proper handling of external metadata
added an alias " node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to enhance the functionality of
updated constants in OverviewActionsView and RecentsView to replace HIDDEN _ FOCUSED _ SCROLL with HIDDEN _ SPL
camel - jms : fix potential classcastexception in jmsproducer
removed unnecessary ` throws IOException ` declarations from multiple Java files to improve code readability and maintainability
deleted deprecated classes ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` to remove outdated code to streamline the codebase
added a new ` MicroServlet ` to handle HTTP / 1.0 requests and modified the ` __ content ` variable to be ` final `
update consumer capacity retrieval method in OnSubscribeRedo . java and add a new test for repeat and distinct operations in OperatorRepeatTest . java
added logging functionality and improved formatting in ` SpeedmentImpl . java ` to enhance error messages and enhance code readability
add a servlet to load dspace configuration from dspace . properties .
hbase - 2649 addendum fix the test widescanner to be more tolerant
camel - test - infra - camel : enable jmx for camel - test - infra - integration test
replace hardcoded ' / ' with a constant for canonical package separator in SourceLineAnnotation . java and update SourceCodeDisplay . java to use
added methods to find the YARN binary path and print application info for YARN applications in Hive configuration to improve application management and provide detailed application
added support for both " mysql " and " maria " database types in DbConnectionManager to ensure compatibility with additional database types
[ hotfix ] fix checkstyle violation in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to implement a test for network error handling in the application to ensure that network
added a new file ` InvokespecialInterface . java ` implementing an interface with a dynamic invocation method to demonstrate the behavior of
refactor EvictingBoundedList class to improve code readability and maintainability
use setencodingmanager instead of setencodingmanager in case of turncosts = true
added a condition to check if backgroundDisabled is not null and added a validation for selection to ensure that selection is not less than zero to prevent
added a null check for the md variable in RpcServer . java to ensure that unsupported operation throws an exception for unsupported operations
update hotseat cell size calculations in TaskbarViewController to include border spacing to improve layout responsiveness by incorporating cell
replaced partition name extraction logic with a direct retrieval of values from the values array to simplify code and improve readability by eliminating unnecessary
fix serialization of namedtaskdecorator on v4.1
updated the directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) in ReplicationHandler . java to ensure the correct directory is used for
updated the boolean variable ` equal ` from ` false ` to ` true ` and modified its assignment logic in ` DisplayModeTest . java `
added a check for non - BMP codepoints in UnicodeToLatexFormatter and updated test cases for Unicode to Latex formatting to ensure
added null checks and character handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper processing of ISO control characters
simonstewart : make the selenium backed selenium emulation more robust
added a " Clear All Tables " button to the DataBrowser and modified a condition in the BookmarksPanel to improve user experience by ensuring that
replaced direct port handling in ` OAuth2AuthorizationRequestRedirectFilter ` with ` UrlUtils ` for constructing the base URL to simplify URL generation
replaced ` java . sql . Date ` with ` assertj . core . Dates ` for date comparisons in ` SoftAssertionsTest
updated the ` adaptOrders ` method to include a reverse parameter for better order adaptation to enhance flexibility in order adaptation based on whether
delombok : do n ' t print ` ` var ' ' if the type be ` ` var ' '
simonstewart : fix compilation error in test
modified the initialization of the Configuration object to set the default value to false and removed unnecessary null check for the Hadoop conf property to streamline configuration
replaced ` drawChildren ` method with ` draw ` method in ` WidgetGroup . java ` to streamline the drawing process for improved
added unit test base on user forum issue
replace usage of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` engine . getCatalina
added unit tests for ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified ` ShadowICU ` to use locale -
updated the object map to include new color codes and modified the style to include additional information about the PlotSquared color codes to enhance the visual representation
added ZuulProperties support to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enhance flexibility in
tika - 3748 -- fix up fontparserstest to properly set default timezone
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use a new parameter for build time
updated the calculation of the ` xDist ` variable to use ` Math . abs ( ) ` to improve accuracy of the value of ` x
deleted the GUIRWTester . java file containing XML configuration reading and writing functionality to remove unused code that is no longer needed
removed nullable annotations from constructor and method parameters in LazyMessage , StandardSubjectBuilder , and Subject classes to simplify code by eliminating unnecessary null
updated error message format in TestStream . java to improve clarity of error messages for better debugging
move templateparser to org . thymeleaf . templateparser . markup package ( thymeleaf - templateparser )
added a test method for XPath evaluation with a string ID in XPathTest . java to ensure correct parsing of XPath strings from the context
added @ Nullable annotation to FutureUtils . java to ensure proper handling of nullable values in future utilities
add warn message when invokedynamic be not resolve during call - graph construction .
updated email addresses in ContextTest . java from " @ gmail . com " and " @ gmail . com " to " @ example
updated HTTP response format from " HTTP / 1.1 400 " to " HTTP / 1.1 200 " and modified URI comparison logic to
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way
change serviceclientconfiguration ( ) to throw unsupportedoperationexception instead of return null .
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced long startTime with Instant and updated related time calculations to use java . time for better performance and accuracy in time measurement
added version handling for media info parsing in LibMediaInfoParser . java to ensure compatibility with newer media information formats
added reflection - based proxy creation for IdeaDependency instances in ProjectReader to enhance flexibility and support for different dependency types in the project reader
added a new class ` SerialHeap ` and updated references in ` Universe ` to use it instead of ` GenCollectedHeap ` to
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress serialization warnings for improved code
refactored mouse wheel event to use vector2i instead of mouse . getposition ( )
modify MongoQueryCreator to handle null parameters and add a new test for null arguments in AbstractPersonRepositoryIntegrationTests to ensure proper handling of null
[ hotfix ] [ table - common ] add miss typeutils for maptypeinfo
added method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers by issuer to improve error handling and provide clearer
added checks for delimiters and improved parsing logic in CMapParser . java and a new test case in TestCMapParser . java to
refactor ContactsBackupJob to implement a ServiceConnection for managing the OperationsService to improve service management and ensure proper expiration of files based on
refactor type constraint handling in ` Attr . java ` and add new classes ` T6938454a . java ` and ` T69
added a new method ` isConfigHidden ( ) ` to ` AccountID ` and updated its visibility checks in ` AccountList . java `
added a condition to log an error if the number of supported display bounds changes to ensure that the display state reflects the correct number of supported
updated schema removal logic to use ` schema . getSchemaKey ( ) ` instead of ` SchemaUtil . getSchemaName ( ) ` to ensure correct
[ web ] add support for ` ` loginpassive ' ' action in web
added a new Box2DTest class and integrated it into the GDXTester and Box2DTest classes to enable testing of Box2
fix npe in cf . tostring ( ) . patch by jbellis
[ hotfix ] [ test ] increase default buffer request timeout to 5 minute
doc : generate sample code in the java microgenerator ( # 84 )
added a help button to the OpenOffice panel and updated its action to enhance user interface by providing a more descriptive help message
added a child option for TCP _ NODELAY in NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecodingServer
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use
added a transient field ` classRef ` and refactored class loading logic in ` ScanResultObject . java ` to improve class reference handling
refactor connection connection handling and streamline error handling in DecodeServlet . java to improve code readability and handle potential IO exceptions more effectively
updated Querydsl to use a new method to convert NullHandling to NullHandling and added a new QuerydslIntegrationTests class to enhance null handling
added null check for actor in ParallelAction and modified condition checks in SequenceAction to ensure actions are processed only when actor is not null
fix : fix checkstyle violation in cttypetest
added synchronization around closing BucketWriters in HDFSEventSink . java to ensure thread safety during concurrent access to the writers collection
added a new interface ` Issue888 _ JavaI ` implementing it with default methods in ` JJ ` and ` JK ` to
added functionality to revoke an existing certificate in CertificateManager and introduced a test for certificate revocation in CertGenerationTest to enhance certificate management capabilities and ensure
added a set of valid HTTP response codes and modified the conditional check in AbstractHttpTest . java to ensure proper handling of responses with no body
added error handling for script engine loading and improved exception messaging in ScriptTransformer . java to enhance robustness of script execution and provide clearer
updated connection pooling type in HiveConf and introduced HikariDataSource in TxnHandler and TestTxnHandlerNegative to support additional connection pooling
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file lock and unlock functionality in FileMenuFilter and OCFileListFragment to enhance user experience by allowing users to toggle file locking and unlock
updated version handling logic in mmm Version . java and ppp Version . java to improve versioning accuracy and maintainability
clear endpoint cache when drop a keyspace
refactor synchronization logic by introducing a new ` waitForState ` method to improve code readability and maintainability by encapsulating wait state checks
updated the ` getCoercedAttrValues ` method to accept ` ImmutableMap < BuildTarget , ProviderInfoCollection > ` instead of an unmodifiable map
danielwagnerhall : introduce a new interface for the html5 session and local storage , and move it to the
added null check for existing view before checking new row type in PlanExecutor . java and improved test cases in CreateViewStatementTest . java
changed catch block from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching all exceptions
updated query string retrieval logic in SpellCheckComponent . java to ensure a valid query string is used and avoid potential null pointer exceptions
added validation for illegal characters in header values and implemented a new checkValue method to improve error handling and validation for header values
replaced instanceSize with arrayBaseOffset in HybridLayout . java and added afterFieldsOffset in HostedInstanceClass . java to improve
make abstractapexcommentcontainernode . setcontainscomment ( boolean ) non - experimental
hhh - 510 - log a warning for association with ` fetch ` and ` lazy ` in ` @ fetch ( role = ' '
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to verify database name and table name retrieval in TestCompactionTxnHandler and updated TxnHandler to set database and table names to ensure
camel - 13850 : timer component should suspend when graceful shutdown . thanks to martin for the patch .
added a check to ensure the current block is not processed before adding a new trace to avoid adding duplicate traces to the work list
updated the null check in ProviderManager to use CollectionUtils for checking providers to ensure proper handling of null elements in the provider list
simplified the database version check in InsertOrUpdateGeneratorPostgres . java to enhance code readability and maintainability
added SQL queries and modified query handling in LocalIndexIT , BaseScannerRegionObserver , BaseResultIterators , and ExplainTable classes to
add validation to prevent adding collections with the same name and different types in the past to ensure that collections with the same name cannot be added to
refactor cursor handling in VDUBuffer and vt320 classes to improve clarity and functionality to enhance code readability and maintainability while ensuring
added a constant USE _ RETRIES to HttpShardHandlerFactory to enable the use of retries for HTTP requests
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a test for version 11.0 . 7.0 . 4 in
[ hotfix ] [ runtime ] skip stream task execution if all input gate be empty
( chore ) camel - activemq : fix checkstyle violation in camel - activemq
updated return statement to handle potential null properties gracefully to improve robustness by preventing potential NullPointerException when accessing properties
refactor IOException handling to use initCause instead of throwing it directly to improve clarity and maintainability of exception management
updated error message from " roll upgrade to fail . " to " stack upgrade to fail . " in multiple Java files to clarify that
added a TxConfidenceListener to manage transaction confidence updates to ensure listeners are properly managed and updated for transaction updates
bugfix # 218188 , add support for g1 perm gen to jmxsupport
removed unused import statements and simplified the return statement in NearbyController . java to streamline code and improve readability by eliminating
pdfbox - 4892 : make class public , a suggest by valerybokov
added conditions to check if the current activity type is not the home activity type in BaseSwipeUpHandlerV2 to ensure proper handling of
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants and initialization to improve clarity and consistency in naming conventions
renamed methods and variables in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming conventions
updated the method to set the unfreeze amount in the UnfreezeBalanceV2Actuator class to ensure the unfreezing functionality reflect
update description of conference scheduling description to match instead of minute
replaced Google ' s Files with Apache ' s FileUtils for directory copying in FirefoxProfile . java to improve code clarity and utilize Apache
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class to improve code readability to enhance maintainability and ease of future updates
refactor ` pushAll ` method to utilize ` addMultiFieldOperation ` for multi - field operations to improve code clarity and ensure
updated UUID assignment logic in MockHubService to use a variable instead of generating a new UUID every time to ensure consistent UUID usage across multiple calls to enhance traceability
added support for hover events in InputConsumer and OverviewInputConsumer classes to enhance input event handling for quickstep live tiles
updated the initialization logic for the bootstrap configuration variable in CoreContainer . java to ensure that the bootstrap configuration is checked before proceeding with other servers
fix camel - netty4 : camel - netty4 - http consumer option should not be use by default .
increased the HBASE _ CLIENT _ RETRIES _ NUMBER from 5 to 35 in HBaseTestingClusterAutoStarter . java to
updated file path construction in SourceSnippetHelper . java to improve clarity and consistency in file path handling
make encodedgraphcachetest more resilient to failure
updated query commands in SchemaCrawlerTextCommandsOutputTest to replace " customer _ count " with " all _ tables " and added a new test
added functionality to adapt currency metadata for Kraken assets to ensure accurate currency representation for Kraken assets
added a custom ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
replaced direct calls to ` entry . getKey ( ) ` with a local variable ` dimensions ` in ` AlertTaskRunnerV2 . java
warn on miss influxdb measurement and database
rename methods from ` doTransform ` to ` downcast ` in multiple converter classes to improve clarity and consistency in naming conventions
updated network filtering conditions in NetUtils . java and added a method to check for unique local addresses to improve address validation and enhance code clarity
refactor column name handling in DataTextFormatter to use a new method for quoting column names to improve code readability and maintainability by central
added methods for setting properties in WrapSystem and retrieving properties in StrUtils , and updated method names in CompileMethodEntity and ClassWrapper to enhance
added a constructor to UpdateRequest that accepts a URL parameter to enable proper handling of POST requests in the application
changed the EnumSerialization enum from static to non - static in ProtoTypeAdapter . java to allow the EnumSerialization to be instantiated from multiple classes
added a method to handle experimental format warnings in the RequestHandlerUtils class to provide informative warning messages for future response formats
format module names in debug logging to improve readability and maintainability of the debug output
bugfix : use default label size instead of hardcoded value
updated method signatures and formatting in DefaultBrokerHeartbeatManager . java for consistency and clarity to improve code readability and maintainability
added meanPartitionSize , partitionCount , and splitCount variables and updated null check logic in CqlInputFormat . java to improve handling of
simplified the condition in JUnitTestsShouldIncludeAssertRule . java to improve readability and maintainability of the code
[ drools - 6752 ] implement equal ( ) and hashcode ( ) for ruleterminalnodelefttuple
added StageIDsRearranger import and resolution logic in TezCompiler . java to ensure proper handling of stage IDs during query optimization
fix wrong mbean name for cassandra . net and cassandra . concurrent
refactor memory checks in LotsOfOutput . java to use a temporary variable for total memory to improve readability and maintainability of memory
added imports for ` Document ` and ` DimConfig ` in multiple Java files to enhance documentation clarity and maintain consistency across facet classes
updated LdapAutoConfiguration and LdapProperties to include anonymous read - only functionality and changed related test cases to enhance LDAP configuration flexibility and improve test
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future development
( chore ) camel - example - echo : fix checkstyle issue
added a ` finishMocking ` method to ` MockitoSession ` and updated its implementation in ` DefaultMockitoSession ` to handle exceptions
refactor dependency handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve code clarity and
rename buffer and handler variables in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes for clarity to improve code readability and
fix liquid wrapper use getflowingblock ( ) instead of getstaticblock ( )
updated the intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use a URI instead of a background class name to improve compatibility
fix typo find by codespell on fossies . org
[ hotfix ] [ cli ] add support for streamingplan in planjsondumpgenerator
update craftingmanager . getshapedrecipes to use craftingmanager . computeifabsent instead of call get (
[ flink - 11977 ] [ test ] fix flume - test - infra - kafka test failure
simplified whitespace checks in TabsAndIndentsVisitor . java by removing unnecessary conditions to improve code readability and maintainability
added a pattern to filter lines containing " pg _ temp _ " in NeuteredLinesFilter . java to improve performance by avoiding unnecessary
fix ( regen ) : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 602 )
added conditional logic to initialize liquibaseDataType based on data type type and updated conditions for handling NVARCHAR and LONG types to improve
[ wavetimersummary ] add distribution metric if not publish to histogram .
updated the handling of the ` handleAdd ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` and modified the upstream warm
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to provide a way to register a sensor listener with specified latency
added exception handling for SocketException in the test methods of SelectChannelServerSslTest to log warnings when SSL connection closes overtook 400 responses
camel - 14850 : camel - ignite should be able to use apache ignite 1.5 . 0 . final so we can
added a check for empty sets and updated the result set handling in AbstractClient . java to improve error handling and provide clearer feedback for empty
pdfbox - 4071 : do n ' t swallow exception , a suggest by valerybokov
added tests for HDR capabilities in ShadowDisplayTest . java and implemented unsupported operation exceptions in setDisplayHdrCapabilities . java to ensure proper functionality and
added a ` finally ` block to reset ` classLoader ` to ` null ` in ` JavacInMemoryStep . java ` to ensure
enhanced error messages in SemanticAnalyzer and SemiJoinHint classes to include expected source and target information to improve clarity of error messages and
added a default constructor to the Message class to ensure proper instantiation of Message objects
do n ' t warn about miss java . awt . component in serializable idiom
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo as a parameter to enhance precision handling for decimal types
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` in ` CompressionResponseStream . java ` and modified the
updated variable names from " WWWAuthenticate " to " authenticateHeader " for clarity to enhance code readability and maintain consistency in naming con
removed conditional checks for specific names and directories in DCD . java to streamline code logic for better readability and maintainability
updated thread group name retrieval in ThreadLeakTest . java to use a dedicated method to improve code readability and maintainability by avoiding
added logging functionality and modified the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator . java ` to improve access decision decision handling and
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
kvm : fix iso path for user vms during migration
refactor signal handling logic in SigInt . java and update test method name in SigIntTest . java to improve exception handling clarity and
replaced the static import of ` ArrayUtils . isEmpty ` with a direct reference to ` ArrayUtils . isEmpty ` to improve code readability and reduce
update axonautoconfigurationwithspringcloudtest to use @ enableautoconfiguration instead of @ contextconfiguration
added @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
planningentityselector : remove unused resetinitializedplanningentities , a suggest by valerybokov
added build time and build time to ArtifactInfo in TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuildRuleBuilder classes
updated the way ` aggrPositions ` is initialized and modified the handling of ` agg . getFields ( ) ` and ` agg . getFields (
added a null check for the block before adding the block appearance to avoid potential NullPointerExceptions when block is null
added support for the new currency " CNC " and " BTC " in the BTCEUtils , Currencies , and CurrencyPair
updated the default value of ` skewAllowance ` from ` 5 ` to ` 15 ` and modified related methods to handle ` skewAllowance
added sorting option for songs in SongListActivity and updated sorting logic in Utils to enhance functionality by allowing sorting of items based on the
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline request handling and improve
rename the baseblock to legacybaseblockwrapper for backwards compatibility
updated IcebergBranchExec . java to check for the existence of a tag before retrieving its snapshot ID to improve error handling and provide clear
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code and improve read
updated variable names and modified bounce count handling in PhotonMappingDemo . java and HybridDemoSsboInstancing .
updated password change validation logic in IdentityProviderEndpoints . java and added test cases in IdentityProviderEndpointsMockMvcTests . java to ensure proper handling
added removal of ` assumeReflective ` from ` notInitializedInConstructors ` in ` UnreadFields . java ` to ensure that fields are
updated error handling in JdbcExecutor to differentiate between closed connections to improve database connection management and enhance error messaging
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to verify the presence of user data and name
updated regex patterns for user and password in CredentialInjector . java and modified JDBC URL in CredentialInjectorTest . java to ensure correct parsing of credentials
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated query output messages and assertion logic in TestCoreParser . java to improve clarity and handle cases where no results are produced
simplify the equality check for child nodes in SimpleNode . java to improve readability and maintainability of the code
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to allow access to the PopulatorContextStackItem
updated the type of ` numDocs ` from ` int ` to ` long ` and added a new test for ` MoreLikeThis ` to
reformatted code for better readability in QuestManager . java to enhance maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
updated query construction in MongoSessionDataStore . java to append the " $ gt " and " $ lt " parameters directly to improve query performance by
add miss unsafegetlong ( ) intrinsics .
updated time zone name for Asia / Amman from ARAST to EET across multiple language files to reflect the correct time zone representation
updated the id value from 90000010 to 90000011 in deprecationLogger . java to ensure compatibility with the latest version of the deprecation
hhh - 13686 : handle jdbcexception in sessionimpl . get ( ) for rollback only
fix downloadexternalfile . download ( ) for file with no extension
bugfix : use screen menu bar on macos
add test for piecewise integration in ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added a method to modify the modWhiteListPattern in HiveConf . java and implemented a test case in TestJdbcWithSQLAuthorization . java
removed the entry name to the invalidClasses map in EntryLoader . java to streamline the code by eliminating redundant entries
update target calculation to use the player ' s team instead of a hard - coded team to improve accuracy in determining the target based on the player
updated the cookie domain assignment to use the domain from the helper instead of a hardcoded value to ensure the cookie domain reflects the current domain
added validation logic for nullable columns in MissingColumnChangeGenerator and MissingTableChangeGenerator , and introduced a new method to check for nullable validation in
refactor multiple Java classes related to security token service and authentication to improve code organization and maintainability
added functionality to delete and add documents in CustomCollectionTest . java and made several variables static final in CompositeIdRouter . java to improve code
added snapshot handling functionality for PostgreSQL in ` ExecutablePreparedStatementBase . java ` and introduced a test for blob types in ` PostgreSQLIntegrationTest . java
updated conditional checks for cache and max _ cached _ files and max _ cache _ size in DefaultServlet . java to ensure that cache size is
add ` ` copy ' ' option for select bib file in ` ` library ' ' tab
updated method names and assertions in ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` to improve
replaced string empty checks with StringUtils methods for myVersion and buildTimeString to improve readability and maintainability of the code
changed method visibility from public to package - private in TimeUtils . java and updated imports in GitBlitSuite . java and TimeUtilsTest
updated security frame and injected invokers logic in RefectionMHTests . java and added a version check in VersionCheck . java to improve
updated file extension checks for JPEG files in PreviewImageFragment . java to ensure consistency in file naming conventions across the application
[ gr - 3770 ] fix native - image debug info provider for hosted method .
added getIcon ( ) methods to multiple data classes and updated ClassDisplayed value in DataTableTopComponent to improve icon management and ensure consistent display behavior
refactor substring logic in CounterRequestAggregation to handle cases where the last index of the request name is null to improve robustness by avoiding
updated the handling of dollar signs in the FindAndReplace class to ensure that dollar signs are tolerated correctly in the regex replacement process
do n ' t cast connection to xmppconnection to avoid npes .
refactor SchemaExtractionProcessor to improve code readability to enhance maintainability and facilitate future development
added a new method ` copyDir ` to handle directory copying and modified the existing ` copyContents ` method to utilize this new method to
added an exception throw for unknown datum classes in JacksonUtils . java to improve error handling for unknown datum classes
replaced direct ABI retrieval with utility methods for class and source ABI jars in DefaultJavaLibraryBuilder to improve code readability and maintain
simplified the calculation of itemHeight and backgroundPadding in SelectBox . java to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent naming for database and table identifiers
updated schema handling in DbSqlSession to support both PostgreSQL and Oracle databases to ensure proper schema assignment for database compatibility
removed unnecessary API client logout implementation in HomeFragment . java to streamline the code by eliminating unnecessary logout logic
[ hotfix ] [ test ] fix flaky test
added null check for element candidates before retrieving them from the result to avoid potential NullPointerException when processing elements
refactor logic in ContainerLifeCycle to use a boolean variable for managed state to improve readability and maintainability of the code
rename iexecutionattributesdialect to iexecutionattributedialect for consistency
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
updated string handling in CmdGetTime . java to handle null loc cases to improve robustness by preventing potential NullPointerException when loc is null
added null checks for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a custom exception handler to improve robustness
deleted the Session2Token . java file to remove unused code to streamline the codebase
delete volume when destination volume can not be remove .
added an Install class to SystemShortcut and integrated it into PopupDataProvider and InstantAppResolver to enhance functionality for managing instant apps in the system
added a NullAuthoritiesPopulator class to LdapAuthenticationProvider and updated its usage in LdapAuthenticationProviderTests to ensure proper handling of null authority
updated retrolambda jar retrieval logic in Executor and CN1BuildMojo classes to ensure compatibility with the latest version of the retrolambda
changed the method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to improve clarity
refactor the ` sortLiveDocs ` method to use ` Bits ` instead of ` MutableBits ` for improved clarity and functionality to
[ fix ] jmespathextractor now handle null result correctly
added null and length checks for user authorities in AuthorizeTag . java to ensure that an empty list is returned when no authorities are provided
updated assertions in tests to use ` java . util . Date ` instead of ` DateTimeUtils ` and modified date handling in ` CasSupportJdbc
cloudstack - 7892 : vm snapshot with memory be not support for vgpu enable vms .
updated the configuration handling in ` RobolectricTestRunner ` and ` Config ` classes to differentiate between method and test classes to enhance
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to streamline connection handling for improved performance
added a method to compare partial partition keys in HiveAlterHandler and updated related tests in TestHiveMetaStore to enhance partition key validation and
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable visibility of icons in text
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback for deploying and undeploying handlers to simplify callback management and improve code clarity
added workspace listener functionality to PreviewControllerImpl and removed redundant calls to buildGraph in PreviewUIController to improve graph updates and enhance code clarity
added a check for VM anonymous classes in ReflectionFactory and modified class name retrieval in ReflectUtil to ensure compatibility with VM anonymous classes and improve class
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future development
updated file path formatting in CatalinaAcegiUserRealm . java to improve readability of the file path
updated log messages for server and action manager initialization in AmbariServer . java to clarify the initialisation process for the ActionManager
added null checks for node initialization and modification in JSONWriter . java to improve robustness and prevent potential NullPointerExceptions during node processing
modified the ` run ` method to accept a ` FileSystem ` parameter and updated the user handling logic in ` invokeHDFSClientRunnable ` to
added a check to ensure backgroundManager is not attached before attaching the activity to avoid potential NullPointerExceptions when the background manager is not attached
added functionality to set the current tab in AllAppsTabbed , Launcher , Launcher , PagedView , and Workspace classes to ensure
added a null check for the URL in BaseDataSource and created a corresponding test in SimpleDataSourceTest to ensure proper error handling for invalid URLs and
added JUnit 5 JRE conditions to the PebbleModuleTest class to enable tests only on specific JRE versions to ensure compatibility with
added EditNameDialog functionality to handle directory creation in FileDisplayActivity to improve user experience by allowing dynamic directory creation based on user input
added functionality to toggle bar border width in multiple activity classes to improve UI responsiveness and user experience by enabling customization of bar border
updated OkCoin API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to reflect the
[ drools - 5369 ] add miss deciderscorecomparator to stepscope
updated file handling to use SeekableByteChannel instead of FileChannel for improved performance to enhance resource management and ensure data integrity during file reading
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and update its usage to improve code clarity
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reordered conditional checks for serialization types in SerializationConfigurationParser . java to improve code readability and maintainability
added ActivityManager and Utilities imports , and set watch heap limit for debug devices in QuickstepProcessInitializer to improve memory management and handle security exceptions
refactor sumWithCompensation to store the result of ` sumWithCompensation ` in a variable before updating it to improve code readability
log4j2 - 1349 fix abstractloadbundletest intermittent ci failure
added a conditional check for the top - level deletion in PrecompactedRow . java before serializing the data output buffer to ensure only valid
updated color conversion logic in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest
add meterregistrylifecycle bean to enable auto - configuration of meterregistry on shutdown
[ 3.0 ] fix log level for config center not find exception ( # 3550 )
added error handling for certificate generation in CertificateFactoryTest . java to ensure robustness of certificate validation by verifying expected behavior
camel - 14850 : simple tokenizer should not recognize ambiguity between string and binary operator .
simplified the ` onTabUnselected ` method in ` EditorActivity . java ` and added focus handling in ` IDEEditor .
added user name to the error log message in AccessLogValve . java to provide more context in error reporting for better debugging
updated file paths and scaling factors in SkeletonModelGpuSkinningTest . java and improved null checks in OgreXmlLoader .
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory ` to simplify the method signature by elim
added @ Deprecated annotations to UpgradeResponse . java to indicate that these classes are outdated and should no longer be used
added support for specifying the output directory for generating d . ts files in the JSweet command line launcher and transpiler to enhance flexibility
[ hotfix ] [ kinesis ] set default fetch timeout in streamconfig to 600
[ hotfix ] [ stream ] add . html file extension to stream dataflow worker
increased the maximum number of metastore server threads from 100000 to 1000 to allow more time for the metastore server to run
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` and added a return statement to indicate that the
update shadow radius assignment from mMaxShadowRadius to shadowRadius to improve clarity by using a more descriptive variable name
added a test for chain nesting and aggregation in ChainParserTests . java to verify the behavior of message processing with aggregator inputs
updated loop condition from ' limit ' to ' end ' and added a failure call in MarketSellAssetActuatorTest . java to
fix ( context ) : do n ' t use isinternal ( ) to determine if the context be interactive .
update conditional logic in CreateKeytabFilesServerAction . java to handle null previousCachedFilePath correctly to improve robustness of keytab file comparison
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to utilize DisplayController for improved display management functionality
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent tooltip display for
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` for obtaining the screen size to ensure
changed the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > to improve type
added new test methods for persisting entities and fetching results in JPASQLBase . java to improve test coverage and ensure correct behavior of
removed debug print statement from FreeformFinSetConfig . java to clean up unnecessary code and improve readability
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
corrected a typo in the runtimeError message and added a call to spendAllGas ( ) to improve clarity of error reporting and
updated error message formatting in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy _ create _ Test ` classes to
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should not be used
replace direct registration of Unsafe with a dedicated registration method in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve code readability and
added hints to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a new test in AndroidBinaryModularIntegrationTest
change mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable page centering functionality for better
updated migrationInfo . doneProcessing ( ) calls in MigrationRequestOperation . java to ensure proper processing of migration operations
replaced instances of " ipAddress " with " baseUrl " across multiple files to standardize naming conventions and improve code readability
updated attribute type from Object to List < Object > in WSFederationClaimsReleasePolicy and added assertions in WSFederationClaimsReleasePolicyTests
updated test table creation and processing logic in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve database
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure proper parsing and deparsing of SQL
added a method ` startCopyMode ( ) ` to handle copy mode in ` ConsoleActivity . java ` to ensure compatibility with devices running Android
updated imports and modified the writeXmlOutput method to accept a Writer instead of a String to enhance XML output handling and improve resource management
camel - 14850 : fix potential npe in abstractlistaggregationstrategy when exchange be null .
camel - 16463 : camel - core - optimize to use camelexchangeexception instead of camelhelper
move basicconfigurator to main / instead of test /
make sure we do n ' t emit phi _ node in type qualifier analysis
remove unused import from testxssfrichtextstring . java
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specified parameters
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] migrate readablewritableconfigurationtest to junit 5
updated equality checks to use ` . equals ( ) ` instead of ` = = ` for field equality checks to improve code readability and ensure
changed the access modifier of the singleton field and the constructor from public to private in IndexFileNameFilter . java to restrict access to the singleton instance
replaced instances of ` testPluginDefinition ( ) ` with ` pluginDef ` and introduced a new ` createTestExpression ( ) ` method
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
removed the ` nullSafe ` method from the ` TypeAdapter ` class and simplified the ` read ` and ` write ` methods to streamline
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected behavior of the distribution test
added EXIFReader class and updated ImageProcessingService to use EXIFReader for metadata processing to enhance image processing capabilities for ExIFD0
change default return value of ` toStandardUnit ` method from ` UNKNOWN _ TO _ SDK _ VERSION ` to ` NONE ` and add a
[ drools - 5352 ] apply pmml model command ( # 5353 ) ( # 5354 )
improve ` ` expect ' ' message for countercurrencytransferstartedmessage
added a check to ensure the bubble bar is visible before proceeding to prevent unnecessary processing when the bubble bar is not visible
[ gr - 20936 ] avoid crash when a label be not find in aarch64 .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and created a new test for concurrent logging
added a ` find ` method to ` TicketCatalog ` and improved debug logging in ` DefaultTicketCatalog ` to enhance ticket retrieval functionality and
refactor SSL connection string construction and assumptions in TestSSL . java for improved readability to enhance code clarity and maintainability by
[ hotfix ] [ runtime ] fix race condition in sortmoveresultpartition
http : / / issues . apache . org / activemq / browse / amq - 2290 - fix jmsio read /
updated PluginHandleController and related classes to include type and sort parameters to enhance functionality by allowing dynamic plugin handles based on their types
added ` start ( ) ` method to span creation in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to ensure that spans
added GLKViewDrawable color , depth , depth , and stencil formats to IOSApplicationConfiguration and updated IOSGraphics to utilize these
refactor login logic in LoginIT . java to use attemptLogin method instead of direct element selection to improve code readability and maintainability by
[ pytorch ] add support for real ( ) and complex ( ) in jni utils
removed thread interruption check and replaced with a do - while loop in SynchronizationStatistics . java to improve thread state management and prevent potential
updated implementation details in mmm Implements . java and mmm ShadowPicker . java to enhance functionality and improve code clarity
refactor HTTP / 2 configuration to use a dedicated method for creating HttpClientOptions and add connection max pool size and multiplexing limit to improve code
added checks for ` DynamicArray . class ` in ` DynamicStruct . java ` and improved error handling in ` SolidityFunctionWrapper
updated ` getStringProperty ` and ` getFloatProperty ` calls to include a new parameter ` true ` to ensure consistent behavior of CSS property retrieval
added overloaded constructors to ` CopyStep ` and a new test method ` testGetShellCommandInternalPath ` in ` CopyStepTest `
fixed - rsemaphore . addpermits ( ) and rsemaphore . addpermits ( ) method throw n
fix camel - test - infra - java dsl builder test on window
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed List < String > to List < ByteString > in WitnessScheduleStore . java and updated related methods to use ByteString instead of String to
added a conditional check before printing results in TestElementsAnnotatedWith . java to avoid unnecessary output when resultsMeta is empty
refactor the removal logic in ConcurrentLinkedQueue and add a new RemoveLeak class for testing to improve code clarity and enhance error handling
added a boolean parameter ` addSpecialTokens ` to several ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] replace arraylist with collections . nCopies in taskmanagerservices
updated the handling of chunk data in LoadSingleTsFileNode . java to improve clarity and functionality of chunk data management
added session storage context handling in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to improve session management and ensure proper
add a test case that demonstrate the problem with schema validation in jspx
added a default constructor to the TypeAdapter class and updated the @ Ignore annotation in Java17RecordTest . java to clarify that the
repl : do n ' t throw killexception for suspendedevent when a kill be n ' t prepare .
rename AntPathRequestMatcher to improve clarity to enhance code readability and maintainability
refactoring : remove unused parameter in createresourcepolicy ( )
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor . java and improved test assertions in BlockingTest . java to
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of tests after each test execution
added normalization to the MD5 checksum computation to remove " Unknown " Unicode character 65533 to ensure consistent formatting of the checksum output for improved
refactor command handling in Example . java to improve clarity and null safety to enhance code robustness and prevent potential NullPointerExceptions
made the ` keyListener ` variable final in ` BasicProfilerState . java ` and added multiple ` @ Override ` annotations in ` Base
changed the type of ` dbDoc ` from ` T ` to ` DBObject ` in ` MongoTemplate . java ` and added a new
added a method to check if an IP address contains multiple remote addresses in RequestUtils to ensure proper handling of multiple IP addresses in the request
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` and modified ` workerShellStep ` to use ` json
updated CookieManagerTest . java and UnmodifiableMaps . java to use NO _ PROXY instead of InetAddress ' s getLocalHost ( ) to improve
added handling for wrapped runs in GlyphLayout . java and updated test cases in BitmapFontTest . java to improve glyph execution flow and ensure proper
added pauseOrResumeSplits and resumeOrResume methods to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes
added a new configuration variable HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to utilize it to enhance
refactor getListedTermCounts to use streams for improved performance and readability to enhance performance and maintainability of the code by reducing
added a new action class ` UseSeparateStepSizeAction ` to manage jog step size localization to enhance user experience by allowing users to
updated FileMenuFilter to use AccountManager and FileLockingHelper for file locking and unlocking functionality to enhance file management capabilities and improve user
updated RoundRobinTableInputFormat to use StringUtils for region server retrieval and improved iterator handling to enhance code clarity and maintainability by
updated the value of the BraveHttpHeaders . Sampled header from " false " to " 0 " and changed the PARENT _ SP
pdfbox - 4892 : use ioutils . closequietly instead of null check
added fullscreen functionality and modified display mode handling in GwtGraphics . java and GwtApplication . java to improve rendering responsiveness and
updated WebfingerIssuerService to use URI instead of String for issuers and parameter names , and modified the normalizeResource method to accept a
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of the Apache Dubbo client
updated file path resolution to use ` resolve ( ) ` instead of ` Gdx . files . internal ( ) ` to ensure compatibility with the
updated log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader and added a trace log in ChainingAttributeReleasePolicy
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK
removed unnecessary whitespace in package declaration to improve code readability and maintain consistency
fix a bug in the nullederefandredundantcomparisonfinder
update dashrendererbuilder to use httpdatasource instead of content - id
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and its getter method
changed return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple classes to provide a more specific return type
removed the checkErr method from AutoScalingHandler . java to streamline error handling for command operations
refactor CombinedDataset class to improve code readability and maintainability
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code clarity
remove cryptography restriction on app startup
fix nether portal not be spawn if the player be cancel .
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure proper functionality of
added null check and initialization for vectorization context in Vectorizer . java to ensure proper handling of vectorization contexts and avoid potential NullPointerExceptions
add 0.539957 to speed of wialon ( fix # 3868 )
hbase - 22727 disable metric user aggregation by default ( # 2273 )
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated the handling of user presence , visibility , and attachment state in the Launcher class to ensure proper unregistering of the receiver only when the
refactor multiple classes related to HTTP request and response handling to improve code organization and maintainability
added params to the zadd method in the PipelineBase class to enhance functionality by allowing additional parameters for zadd operations
[ ds - 3365 ] fix test that fail on window ( # 3366 )
rename testasyncmessages to testasyncmessagesperformance because gc delays can introduce false failure .
added a method to retrieve an optional build target and improved conditional checks in ` VersionedTargetGraphBuilder ` , ` VersionPropagatorBuilder `
updated epoch seconds constants in TimeZoneProvider . java to use a more descriptive naming convention to improve code readability and maintainability
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to improve
updated the initialization of the variables ' row ' and ' column ' in JSONParser . java to ensure proper initialization of the variables
replaced usage of ` JavaType . ShallowClass ` with ` java . util . regex ` for pattern matching in type matching to improve
updated the detail thumbnail height and added a new action for playback trailers in BaseItemDetailsFragment . java to enhance user experience by providing more
added a method to remove glyph information before freeing long pointer in CStrike . java and introduced a native method in CStrikeDis
fix process instance not end after terminate all process end event
camel - 16405 : camel - xml - bind - allow to use jaxb ' s xmlrootelement a the name of the type
updated the endpoint in the test from " http : / / scottb . html " to " https : / / www . abc1234
added option ` ` prdef ' ' to reset all preference to default value
changed access modifiers of several methods and fields from private to protected in ThriftMetrics and ThriftServer classes to allow subclass access to these methods and enhance
[ danfossairunit ] remove deprecate channel from danfossairunithandler
use hamcrest assertion instead of junit in integrations / cdi / cdi / common / testendpoint . java ( #
removed redundant code for stopping expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added equality and hash code methods to PartImpl class and modified PartitionPanel to skip processing if the index is - 1 to improve object comparison and
set root disk size in custom parameter if it be not already present in the vm
updated visibility logic for prediction settings based on user preferences to enhance user experience by allowing suggested apps to be shown in the drawer
[ geos - 7745 ] bbox validation for geos - 7745 ( # 7745 )
added validation methods for value and position parameters in LibrustzcashParam . java to ensure values and positions are within valid range and
deprecate ithrowableentity , mark it a deprecate in fml . mod . fml . common . registry . ithrowable
added random float values for x and y in NodeDataImpl to enhance randomness in the NodeDataImpl class
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor invocation handling in JavacStep . java to use a try - with - resources statement to ensure proper resource management and avoid potential
update version number from 0.9 . 1 to 0.9 . 2 in mmm Version . java and ppp Version . java to
added a condition to check if itemType is DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of deep shortcuts in the
added a ` hashCode ( ) ` method to the ` TimeGranularitySpec ` class to ensure proper hash code generation for ` dType `
changed access modifiers of ` BooleanWeight ` and ` DisjunctionMaxWeight ` classes from private to protected and added ` similarity ` and ` weights
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to control the use of NTLM proxy
aarch64 : use scratch register for aarch64move .
server : use capacitydao . findbyhostidtype to get reserve / used capacity instead of direct usage
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and included a new query in `
updated audio codec from 22050 to 44100 in AudioRecorderTest . java to improve audio recording accuracy and performance
updated the calculation of newOriginX in RocketFigure . java to correctly calculate the new origin based on the subject dimensions
updated DruidQueryBasedInputFormat to check for null or empty data source and modified interval list initialization to improve error handling and ensure default interval
added ` ORIGINAL _ TYPE ` to ` CustomProperty ` and updated regex pattern in ` CustomPropertyTest ` to support additional original types
added a static method to create an instance of an Index using a parent Table and a data Map to facilitate the creation of Index
replaced the boolean variable ` isBetweenGivenPeriod ` with direct return of ` checkLowerBoundaryPeriod ` and ` checkUpperBoundaryPeriod `
updated compatibility handling in SchemaCompatibility . java and added new tests in TestSchemaCompatibility . java and TestSchemaCompatibilityTypeMismatch . java to improve
added support for handling association types in QueryUtils and updated test cases in EclipseLinkNamespaceUserRepositoryTests to enhance functionality and improve test coverage
added synchronized blocks and modified span retrieval methods in TestSpanHandler . java to ensure thread safety during concurrent access to spans
changed method arguments from List < Object > to List < ? > in multiple classes to enhance type safety and reduce potential errors in method signatures
added exception handling for InvocationTargetException in ViewContextImpl . java to improve error logging and provide more detailed information during authentication failures
refactor OAuth2AccessTokenEntity class for improved access token handling to enhance security and maintainability of the code
updated error messages to reflect service request rejection instead of starting and not ready for remote calls to clarify that the service cannot process requests
added new project files for iOS data and moe resources in GdxSetup . java to support additional iOS project configurations for iOS
updated imports in TestSearcherManager . java and set a merge scheduler to improve thread safety during test execution
added null and empty checks in QTestUtil and GenericUDTFInline classes , and improved list handling in GenericUDTFInline
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
bugfix : prevent spreadsheet key event when click on the right - click
hhh - 15464 : remove osgi service from osgi bundle after stop
fix ( pool ) : do n ' t use elapsedtimemillis ( ) to calculate timeout .
move non - packaged resource into non - packaged - resources folder and copy component . xml with var substitution
updated file path handling in Compat and FileOpener classes to improve consistency and correctness in file path processing
changed the return type of the row ( ) method from Cell < T > to void to allow the method to be invoked directly from the table
[ multistage ] add port clash check to besucommand
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 initialization to allow customizable mask generation for WebSocket connections
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` Rel
added node selection statistics tracking for bucketed preferred and non - preferred nodes in NodeScheduler and NodeSelectionStats to track the number of selected nodes
added a new file ` Person . java ` containing a class with a name property and its getter / setter methods to facilitate the
added a boolean variable ` hasOwnerPtr ` and modified its execution logic in ` CPlatformWindow . java ` to ensure proper handling of the
added clock functionality and updated fade - in / fade - out settings in PlaybackOverlayFragment to enhance user experience by providing a more visual feedback
remove redundant markdirty call from updatecomparatoroutputlevel ( )
modified the access modifier of the IMPL variable and improved exception messages in SegmentReader . java to enhance flexibility and clarity in exception
updated Sudoku . java to run cell updates on the Event Dispatch Thread using SwingUtilities to ensure UI updates occur on the Event Dispatch Thread
replaced DefaultInetAddressAdapter with CollectionTypeAdapter in DefaultTypeAdapters . java and updated typeHierarchyAdapter methods in MiniGson .
added methods to assert the behavior of double , long , boolean , and string values in the Series class to ensure proper handling of null values and
changed the option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java
updated boundary checks in GeoRelationUtils and modified GeoRect construction in GeoUtils to improve accuracy of coordinate comparisons and enhance polygon query performance
server : fix npe in listvirtualmachines command - use getdiskofferingid instead of id
added cleanup method to HazelcastTest . java to ensure all Hazelcast instances are properly shut down after tests
added tests for AES / 2 and AES / 9 cipher modes with NoPadding exception handling to ensure proper handling of unsupported algorithms and improve error reporting
added filters for " going to print operations logs " and " printed operations logs " in QFileClient to enhance logging functionality by providing clearer
fix issue with inject parent and child interface in aop
fix possible npe when the sip connection address be null .
replaced manual addition of demand with MathUtils . cappedAdd in WebSocketConnection . java to simplify the code and improve readability by util
refactor code to use try - with - resources for ImageOutputStream and ensure file deletion in a finally block to improve resource management and prevent potential
replaced the usage of ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` startActivity ( )
removed the ' this ' reference from schemaCrawlerOptions in SchemaCrawlerCommandLine . java and updated the toString method in GrepOptions . java to
fix for http : / / issues . apache . org / activemq / browse / amq - 2382 - add osgi
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests to ensure proper dependency injection for the PersonRepository during tests
updated exception type from Exception to InterruptedException in UIServer . java and corrected log message formatting in TestVertxUIManual . java to
fix cactus not be able to place cactus . close # 113
refactor mouse event handling in ThemeSelector . java by introducing a MouseMotionListener to improve touch event responsiveness and responsiveness
[ java ] introduce abstractminmulticastflowcontrolrbhspadding to extend abstractminmulticastflowcontrolfields .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing
modified the constructor of StatTokSentAnnotator to throw an IllegalArgumentException if the Tokenization model is not specified to improve error handling by providing clear
added a condition to check if the query context is not a distinct query before processing group by expressions to ensure correct handling of distinct queries in query
[ gr - 11905 ] jni : add a way to find the closely linkage .
fix checkstyle issue in io / jmeter / gui / jsyntaxtextarea . java
added null check for children before iterating to avoid potential NullPointerException when accessing children
added token position and current position variables to MessagePackParser and implemented error handling for JSON parsing to enhance JSON parsing functionality and improve code clarity
added locale management in the afterClass method of AbstractSolrMorphlineTestBase to ensure consistent locale settings during test execution
simplified the calculation of the ` size ` variable in ` LauncherFragment . java ` to improve code readability and maintainability
add unit tests for the MetricsReporter class to ensure correct registration of metrics and counters
( chore ) camel - osgi : fix compilation error due to osgi service registry change
implement equals and hashCode methods in the Rectangle class to ensure proper comparison and hashing functionality for rectangle objects
replaced hardcoded " sink " strings with dynamic variable names in StreamKafkaPTest . java to enhance clarity and maintainability by
refactor DSAParameterGenerator to use BigInteger . ONE for consistency and clarity to improve code readability and maintainability
added configuration option to use FQDN for the AM machine when submitting work to LLAP to improve performance by avoiding hardcoding the host
fix client oome test by wait for client to be shutdown
added ` getCmoObjectId ` method to various shape classes and updated ` setObjectId ` calls to use this new method to improve object ID handling
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of querying distinct posts
refactor multiple Java files related to search functionality to improve code organization and maintainability
add binding and unbinding methods for ExtensionAdapter in ManagedKubernetesClient to enable dynamic binding and unbinding of extensions in the Kubernetes client
updated subtitle and body retrieval in DetailsDescriptionPresenter . java and added a new utility method in Utils . java to enhance the display of episodes
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach `
do n ' t swallow ioexception in generatesummary ( )
replaced calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( ) ` with ` intPool
added multiple @ Override annotations in FilterInputStream . java to enhance code clarity and ensure proper method overriding
updated ShadowWindowManagerGlobal to support TIRAMISU API level and introduced a new WindowSessionDelegateU class to improve compatibility with different
refactor URL handling logic in UrlHelper . java and add unit tests in UrlHelperTest . java to ensure correct handling of non - standard
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL databases during foreign key constraints
refactor lambda expressions in HStore and StoreEngine classes for improved readability to enhance code clarity and maintainability
add an event handler for sidecheck in pluggable lens , fixes # 2289
simonstewart : refactoring htmlidentifier to make it easy to configure the logging .
replaced ` getProducedTableSchema ( ) ` with ` getTableSchema ( ) ` in ` HiveLookupTableSource . java ` and
clarify deprecation of setthrowswhenusingwrongthread in listenerset
updated schema name handling in SequenceSnapshotGenerator . java to utilize CatalogAndSchema for improved schema customization to enhance flexibility in schema
updated alpha value handling in SpriteBatch and SpriteCache classes , modified the GdxTest instantiation in LwjglDebugStarter
fixed - connection . getfuture ( ) . join ( ) throw npe if redissonconnection . gettocompletablefuture ( ) throw
added logic to check if the base URL is " http : / / " and " https : / / " before adding it to statisticYear
refactor ` launchTask ` method to ` launchTaskFromView ` and introduce new ` launchTask ` method in ` TaskActionController
updated imports and modified constructor and initialization logic in MorfologikFilter . java for improved dictionary handling to enhance code clarity and
updated sorting options for community ratings and critic ratings in GridFragment . java to improve clarity of sorting options for better user experience
added imports for ViewKt and ListRow , and implemented visibility logic for ListRow in CustomListRowPresenter to ensure the header view is
replace switch - case structure with try - finally block for clientType handling to improve code readability and ensure proper resource management
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future development
replaced instances of ` accordingTo . isCaseSensitive ( ) ` with ` accordingTo instanceof DB2Database ` in multiple files to ensure
register jsr310 module for jsr310 serialization ( fixes # 399 )
updated MDC import from Apache Log4j to SLF4J in LogUtils . java to ensure compatibility with the latest Log4J
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
reformatted code for consistency and clarity in CoinbaseTransaction . java to improve code readability and maintainability
added a method to retrieve build target aliases in BuckConfig and updated ProjectCommand to use this new method to improve build target management by allowing
added garbage collection for the idle strategy in the Ping class to ensure proper resource management and avoid potential memory leaks
updated ` OCFile ` and related classes to use ` ContentResolver ` instead of ` ContentProvider ` to ensure compatibility with the latest Android
removed unnecessary state change checks for checkboxes in ReportPanel . java to simplify code and improve readability by eliminating unnecessary state checks
[ hotfix ] [ runtime ] fix npe in testinglogicalslot constructor
add a new class ` RemoveCallsToSystemGc ` to implement a recipe to remove calls to ` System . gc ( ) ` and
removed redundant calls to super ( ) in multiple exception classes to streamline exception handling by eliminating unnecessary constructor calls
added an override for the setUIID method in ScaleImageLabel to ensure proper icon handling during UI updates
replaced instances of ' foundEntry ' with ' update ' in FeedUpdateService . java to improve clarity and consistency in variable naming
added support for the " - cp " argument in addition to " - classpath " in addition to " - classpath " to ensure proper handling of
use compiler instead of options in presets for ffmpeg
set the ' initialized ' variable to true in StorageService . java to ensure consistency in initialization logic
updated Test7196045 . java file to improve test coverage and maintainability
updated the density and decay values in ShaderParametersLightShaft . java to adjust the shader parameters for better rendering accuracy
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder
updated unique constraint handling in BaseTableDdl . java to differentiate between null and nullable values to improve clarity and functionality of unique constraint
added federated share checks in UsersAndGroupsSearchProvider and EditShareFragment classes to enhance file sharing capabilities based on federated sharing capabilities
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to provide a default implementation for
updated formatting in BufferAlignmentAgent , BufferAlignmentInterceptor , DynamicCompositeAgent , ClassFileManager , and StringWriterOutputManager classes to improve code readability
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and modified the ` IntObjConsumer ` interface to
do n ' t share scoreboards for worldserver that do n ' t share scoreboards
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes
updated MTree snapshot creation logic to check for new line numbers and improved logging messages to enhance log accuracy and provide clearer diagnostics when logs
refactor dot product calculation in VectorUtil and update corresponding tests in TestVectorUtil to improve accuracy of dot product scoring and ensure correctness in
added an IRREVERSIBLE _ THRESHOLD constant and methods to manage and retrieve the latest confirmed block number to enhance the flexibility of block
replaced the locale setting logic in ` GpsMainActivity ` with a new ` Systems . setLocale ` method in ` MainPreferenceActivity `
added a check for database creation status in the LauncherClings class and implemented the wasNewDbCreated method in LauncherProvider to ensure
tidy up basicaclentryafterinvocationcollectionFilteringprovider . remove ( object ) to avoid concurrentmodificationexception
refactor conditional logic for determining if the OS architecture is 64 - bit to improve readability and maintainability of the code
added a thread check before proceeding with operations in TestIndexWriterDelete . java to ensure that operations are only executed on the correct thread
changed the access modifier of the ` closeDatabase ` method from private to protected to allow subclasses to access the method from other classes
updated imports and method calls to use the new ModelCompat API for better compatibility to ensure compatibility with the latest API changes and improve code maintainability
added attribute handling for SVG elements in BatikSVGDrawer to ensure the document updates correctly with imported SVG attributes
added a try - catch block around the error handling for IllegalArgumentException in ConsoleKeys . java to improve robustness of user configuration parsing errors
added functionality to conditionally set ` waitingForResult ` based on the intent extras in ` CodenameOneActivity . java ` to ensure
refactor constructors in HitQueue , SpanPositionQueue , PriorityQueue , and TermAutomatonScorer to use a Supplier for sentinel objects
refactor WidgetCell to remove unnecessary casting to WidgetImageView and improve widget description handling to enhance code readability and maintainability by elimin
added validation for the maximum registered attribute count in the Attribute class to ensure that the application does not exceed the defined maximum allowed attribute count
move predicatestest to com . hazelcast . query . impl . predicates package
camel - 16463 : camel - core - optimize defaultheaderfilterstrategy to allow case insensitivity of header name .
modified inline alignment logic and variable names in InlineLayout and Breaker classes to improve clarity and maintainability of the code
added nullability annotations and improved view initialization in ShareUserListAdapter . java to enhance robustness and prevent potential runtime exceptions during view infl
refactored the ` shouldInstrument ` method to include Android SDK instrumentation checks and removed unnecessary package exclusion checks to streamline the instrumentation process and
added a condition to return the last column in the table if the association is a insert destination before the source to ensure the correct column is returned
updated memory limit command to use a dynamic file path instead of a hardcoded value to improve flexibility in managing memory limits across different Docker versions
removed the ` singleton = true ` attribute from the ` @ Value . Immutable ` annotation and introduced a constant ` EMPTY _ INSTANCE ` for empty
added error handling for null rules in JavaTestRule . java to provide clearer feedback when a source under test is not among its dependencies
re - enable proxy for minecraft 1.10 , 1.10 . 2 , 1.9 . 4 , 1.10 .
added a condition to set atIndex to zero if it is less than zero to ensure proper handling of negative index values in StringUtils
increased the timeout duration for the BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased the sleep duration from
refactor TaskOverlayFactoryGo to accept an AssistContentRequester parameter to enhance flexibility in managing assist content requests
updated the way readableWitnessAddress is encoded and validated in VoteWitnessProcessor . java to ensure proper encoding of the witness address for improved security
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to align exception handling with the
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and avoid potential memory leaks
added a clear method to ExceptionThrowingTaskletStub and multiple test cases for exception handling in FaultTolerantExceptionClassesTests to ensure
improve error message when config be miss
updated the ` applyTunerConfigs ` method to include an additional ` extraProperties ` parameter across multiple classes to allow for more flexible configuration
added a set to track in - progress instances in the PinotRealtimeSegmentsManager to ensure that realtime segments are only added to the
added a condition to return null if touchable is disabled to ensure proper handling of disabled touch scenarios in the table
added a new test for building a precompiled header in a cell to ensure support for precompiled headers in other cells
throw a retryable exception if cache config do not exist
refactor JSweetTranspiler to check if the node package is installed before installing modules to improve robustness by avoiding unnecessary file
added ` @ ManagedObject ` and ` @ ManagedOperation ` annotations to ` MBeanContainer . java ` and ` Destroyable . java ` to enable
modified the condition from ` settings . inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to ensure that the
refactor string comparison methods for consistency and clarity in EspMilightHubDiscoveryService and EspMilightHubHandler to
updated the condition in the isReifiable check and added new classes T6558559a and T6558559b to
update print statements in WorldEditListener to include player position and region size information to improve clarity of debug output for better debugging and tracking of
camel - 14850 : camel - kafka : make sure to shut down the consumer when the executor be shut down .
removed the examples ( ) method from the Schema class to simplify the code structure and improve readability
replaced thread interruption logic with a loop that checks if the thread is alive before proceeding to ensure proper handling of thread interru
remove the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper cleanup of time columns from data structures
corrected a syntax error in the conditional statement to improve code readability and maintainability
replaced the use of LinkerProvider with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription
added a private String field ' name ' along with its getter and setter methods in multiple authentication property classes to provide a more descriptive name for
do n ' t exit if igv can not be connect to the igv port
refactor scan range handling and introduce small scan threshold configuration in BaseQueryPlan and QueryServices to improve scan threshold management and enhance query performance
added " routeId " to the return statement in RetryGatewayFilterFactory to include the route ID in the filter output
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor ` onOverviewShown ` methods in ` ActivityControlHelper ` , ` WindowTransformSwipeHandler ` , ` DiscoveryBounce `
refactor null checks for packedValue and globalMinPackedValue in CheckIndex . java and add a new test for deleting all point documents
updated the ` publish ` method to use ` updateLastState ` instead of ` true ` to improve clarity and functionality of state updates
updated SQL string formatting in MetastoreDirectSqlUtils . java to ensure proper quoting of STRING _ LIST _ ID in SQL statements
added a null element to the exp array in SpliteratorCollisions . java to ensure proper handling of null elements during collision detection
danielwagnerhall : add ` ` text case sensitivity ' ' and ` ` exact text case sensitivity ' '
replaced the ' do ' loop with a ' while ' loop in ManyToManyConcurrentArrayQueue . java to improve code readability and maintain
# 113 - enh : add ormqueryengine . forwardonlyfetchsize ( ) ( # 113 )
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to ensure proper handling of closed channels gracefully
pdfbox - 4892 : set initial capacity of pdobjects arraylist with size of beads list
updated window radius initialization in QuickstepAppTransitionManagerImpl . java to support rounded corners on windows to ensure correct window behavior when rounded corners are
refactor DesktopTaskView to use a View instead of a ShapeDrawable for background and icon display to improve layout management and enable customization
refactor property initialization and initialization of the UpstreamCheckService to improve code readability and ensure proper initialization of the UpstreamCheckService
updated logging statements in AbstractSession and AbstractSessionManager to check for immortal status before logging messages to improve logging clarity and reduce
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to streamline the code by eliminating unnecessary error handling
refactor multiple Java classes to improve code structure and readability to enhance maintainability and facilitate future development
added a boolean flag ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to ensure proper
updated test cases in DefaultMaskingFormatterTest to use single quotes instead of double quotes to ensure consistency in string formatting across test cases
added selectable property and methods to manage selection state in List . java to enhance user interaction by allowing selection behavior based on item state
removed the condition checking for empty field vector values in LlapArrowBatchRecordReader . java to streamline the code by eliminating unnecessary
added file separator handling and improved test cases in PolicyContext . java and TestPolicyContext . java to enhance file path expansion functionality and ensure
changed ` Set ` to ` List ` for ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` ArrayList ` to support
refactor TLSRestrictions class for improved encapsulation to enhance code maintainability and readability
[ java ] submit daemon thread when close kafka producer in kafkamanager
updated the ` assertNodeStateProvider ` method to include an additional parameter for ignorable node values to enhance node state verification by allowing more flex
added file deletion logic for the " LOCK " directory in RocksdbMavenPomCache . java to ensure proper cleanup of temporary files
updated standaloneServerFactory to use InetSocketAddress for client port assignment to ensure proper port resolution for the standalone server
added a new method ` getResponse ` to handle HTTP connection exceptions and logging in the ` RestClient ` class to improve error handling and provide better
replace ` segmentTarURIs . toString ( ) ` with ` segmentTarURIStrs . toArray ( new String [ 0 ] ) ` for
updated student login credentials from TEST _ STUDENT2 _ ACCOUNT and TEST _ STUDENT1 _ ACCOUNT to TEST _ STUDENT
added a null check for the last deleted item ID in EnhancedBrowseFragment . java and StdBrowseFragment . java to ensure that the item
increased the number of strings from 500 to 100 in TestSpecialOperations . java to improve test reliability by reducing the number of
updated ` ByteArrayInStream ` initialization and removed the ` hexToBytes ` method from ` WKBAttributeIO . java ` to improve performance by
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a transition is a direct substate and updated state assertions in tests to improve state transition handling and ensure correct listener
added checks for ListMultimap and SetMultimap in MultimapSubject . java and implemented corresponding tests in MultimapTest . java to ensure correct behavior
added JoinOperation interface to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL test functionality to ensure
[ amq - 5035 ] fix intermittent failure of amq5035test . testamq5035
updated AvaticaDatabaseMetaData . java to improve database metadata handling to enhance performance and maintainability of the code
changed the type of lifeTime , idleTime , and maxWaitTime from int to String in MongoDbConnectionPoolProperties . java to allow for
fix a nullpointerexception when create an audio medium format .
refactor methods in FacetProcessor to return boolean values indicating whether filters are applied to improve filter management and enhance code clarity
added support for enabling or disabling timeout in ShuffleHandler to improve control over timeout management during idle states
replaced hardcoded value ` - 1 ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in ` O
camel - 14850 : camel - saxon should use log4j2 . debug instead of log4j2 . log4j
updated the resource loading method in ` NNDataSet . java ` to use the ` DataResource ` class directly to improve code readability and maintain
pmd : add test case for escaped backslashes in source code
added a check for the presence of the ' atlas ' property in the map and threw an exception if it is missing to improve error handling and
camel - 14850 : camel - core - add option to turn off property placeholder resolution .
added a call to close the level database in BlockchainTest . java and removed unnecessary message broadcasting from KafkaTest . java to ensure proper
refactor code to use a new method for splitting lines in CoreMarkdownNodeRenderer to improve readability and maintainability of the code
reorder import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
refactor SQLBindings and related classes to use ArrayList instead of ImmutableList for improved performance and clarity to enhance code readability and maintainability
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive ( true ) to the baseUrl configuration in ReactorClient . java to enable connection - keep - alive functionality for improved performance
replaced string literals with constants from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve code readability and maintain
camel - 14850 : camel - core - optimize to avoid unnecessary lookup of property component
updated null check for AccountCapsule in UnfreezeBalanceActuator . java to improve robustness by avoiding potential null pointer exceptions
update version number to 3.8 . 1 in xmppserver . java
updated return statements to use unannotatedType ( ) for type handling to improve type safety and clarity in handling captured types
updated assertions in StorageGroupProcessorTest . java for consistency and clarity to improve code readability and maintainability
added DumpableCollection to dump environment information and introduced a new method to retrieve all environments to enhance debugging capabilities by providing detailed environment information
added a new parameter ` waitbeforestart ` with a value of 2500 in ` FFMpegVideo . java ` to increase the wait
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related code to simplify the constructor by eliminating
remove testlistindexoutofbound and add a test for it .
added lirgenerator . framemap ( ) and refactored compilemethod ( ) in graalcompiler . compilemethod ( )
updated JUnit imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and conditionalS
fix boat disappear when interact with water
updated toString ( ) and added getLockID ( ) method in RAMDirectory . java and modified toString ( ) in Directory . java to improve cl
removed the ` allowExperimentalOptions ( ) ` method and modified the conditional check for experimental options to streamline the code by eliminating
added new methods for asserting paths and assertions in BDDAssertions . java to enhance functionality for better assertion handling in the BDDAssert
refactor variable names and port assignment logic in ForwardedRequestCustomizer . java and ForwardedRequestCustomizerTest . java to enhance code
updated logging level from debug to warn for missing Kubernetes config files and added instructions for exporting KUBECONFIG to improve logging clarity and
added OCFile handling and upload status management in the FileUploadService and UploadListActivity classes to enhance file upload functionality and improve user experience
added a new ` ProviderLoader ` interface and refactored ` TerminalManager ` to use it for loading crypto providers to improve code organization and
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig for column name determination to improve flexibility and maintainability of the database change log
hhh - 15413 fix test failure on postgresql on oracle
fix divide by zero in internalpartitionserviceimpl . getpartitionspermember ( )
added checks to ensure the scheduler is started before starting it and handle potential exceptions to improve error handling and provide clearer feedback when the scheduler is
simplified the instantiation of InlineBox by removing unnecessary string conversion to improve code readability and maintainability
updated error messages in StatisticMap . java to use concatenation syntax to improve readability and maintainability of error messages
updated the staged rectangle slide end value from 383 to 500 in TabletSplitToConfirmTimings . java to increase the staged rectangle
updated button labels in WaveInfoDialog and PlacementFragment to use localized strings instead of hardcoded strings to improve localization support and maintainability of the
updated the condition to check for owned plots in KILL _ ROAD _ ITEMS and modified the location retrieval logic to improve accuracy in
added tests for touch exploration enablement and modified listener retrieval logic in ShadowAccessibilityManager to ensure correct behavior of touch exploration state change
pdfbox - 5328 : fix cmapsubtabletest , a suggest by valerybokov
use getname ( ) instead of getpropertyasstring ( ) . getpropertyasstring ( ) where possible
replaced direct instantiation of NPOIFSFileSystem with a factory method POIFSFileSystem . create to improve code readability and maintainability
added imports for PlotArea , PS , and PlotArea , and modified the return statement to retrieve plot absence to improve code clarity and
updated the regex pattern in TestWebHCatE2e . java to allow additional characters in the version string to ensure compatibility with the latest
changed the condition from checking if count is less than zero to checking if it is less than one to ensure that the count does not exceed the
[ kafka ] add clientid and groupid to kafka consumer config ( # 1748 )
updated import statements in JavacCompiler . java to replace IsolatedClassLoader with IsolatedClassLoader and added error handling to improve clarity of
ggb - 1193 do n ' t repaint the option when there ' s nothing to draw
fix checkstyle issue in camel - spring
added a method ` isAnimationFinished ` to check if the animation has finished to provide a mechanism to determine if the animation has been finished based
updated imports in ` LoginInfoEndpoint . java ` and added a new test method in ` LoginMockMvcTests . java ` to ensure correct
added null check for otherUrl in TimeLineCursorAdapter . java and modified refreshing text in HomeFragment . java to enhance robustness by
fix problem with space in ` ` * space ' ' and ` ` % ' ' in ` ` / ' '
refactor ObjectHashSet class for improved performance to enhance efficiency of hash set operations
refactor equality check in DataUtilities to use Arrays . equals for better null handling to improve code readability and maintainability by simplifying null
fix nbt compare nbt data , allow for delete enchanted book , mc - 12770
[ 2.0 ] add microprofile test for async - jersey endpoint
updated header map suffix from " - target - flat - headers . hmap " to " - target - user - headers . hmap "
added error handling and logging for email sending failures in MailService . java to improve error reporting and traceability of email sending failures
updated the method name from ` resetTaskItemView ` to ` resetToEmptyUi ` and introduced a constant ` EMPTY _ LABEL ` to
added unit tests for ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct handling of
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
replaced ArrayList with List in OCFile . java and OCFileListAdapter . java to improve code readability and maintainability
updated the index used to remove the view from ` getChildAt ( getChild ( 1 ) ) ` to ` getChildAt ( getChild ( 2 )
removed unnecessary imports from JettyWebSocketConfiguration and JettyWebSocketConfiguration to streamline the configuration by eliminating unnecessary dependencies
change the default value of the ` policy ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to ensure
fix jfxradiobutton not update animation when it ' s null .
updated DeweyNumber . java to handle zero - length splits and improved error handling to ensure proper parsing of Dewey numbers and
added a static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to replace " Category
updated error message in WebSocketClientTest from " Invalid close control status code 1111 " to " Invalid close code 1111 " to reflect the
added null check for classLoader in WebappLoader . java and updated expected count in TestVirtualWebappLoader . java to ensure proper handling of
remove duplicate code for clarity in PersistentAttributeTransformer . java to improve code readability and maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the functionality of the PorterStemFilter to ensure that the PorterStemFilter
modified the method name from ` postBatchMutate ` to ` postBatchMutateIndispensably ` and added a success flag to
corrected package names from " org . springframework . batch . core . exlore . support " to " org . springframework .
fix a deadlock in chatwindowmanager . java due to concurrent modification exception .
removed duplicate calls to Sys . touch ( ) from multiple Java files to streamline code by eliminating redundant calls to Sys . touch (
updated the command - line interface to use " - mardu " instead of " -- unknown " and modified the untrackedFiles method to
camel - 14850 : camel - netty should use timer from endpoint instead of create new timer per camel context
modified the visibility of the ' direction ' , ' color ' , and ' intensity ' fields in DirectionalLight , PointLight , and Spot
updated width and height calculations in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure minimum width and height is at least
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes and corresponding tests to enhance string
added a new class AnnoFilterTreeSet to filter inner classes and updated methods for finding annotated classes to improve class filtering logic and enhance annotation
modified integer overflow handling in BytesColumnVector . java to ensure newLength is set to Integer . MAX _ VALUE when newLength is greater than
refactor assertion in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for better readability to improve test reli
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI
geofunction . expandtopolyfunction now also check for equality of two function .
added null check for table before setting column class in SynthTableUI to avoid potential NullPointerException when table is null
added a try - catch block around the instantiation of the CustomChange class to handle potential ClassCastExceptions during instantiation
added methods to DistBuildConfig and modified DistBuildFileHashes and RecordingFileHashLoader to use DistBuildConfig instead of ConfigPathGetter
show warning for double entry in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to tracking and fixing issues
changed the return type of the ` doJoin ` method from void to boolean in both ` JoinTemplate ` , ` JoinWorker ` , and
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter to ensure the activity is launched as a new
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check pagination order
updated assertions in RepositoryConventionPluginTests to reflect the correct Maven artifact repository URL to ensure the correct URL is used for testing purposes
[ java ] add an affiliate task to the pubsub cluster .
improve error message for invalid taglib directive uri
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array type handling and refactored update logic in CacheKey . java to improve performance and maintainability of the code
refactor file type detection to utilize FileSystemProvider for improved consistency across file system implementations to enhance flexibility and maintainability of file type
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent memory leaks
refactor ShadowVirtualDeviceManager to utilize a reflector for VirtualSensorCallback and VirtualSensorDirectChannelCallback to improve flexibility and maintainability
added a condition to check if ` contextObject ` equals ` contextBeforeExecution ` in ` HttpSessionSecurityContextRepository ` to ensure that the session is
refactor loopback address retrieval logic in NetUtil . java to improve clarity and ensure correct retrieval of loopback addresses
rename ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` for consistency and clarity to improve code readability and maintain
updated secure validation logic in KeyInfoReferenceResolver and modified exception handling in TransformXPath to improve security checks and enhance error messaging clarity
added a boolean flag to track if the icon change listener is installed before adding it to the icon to ensure proper handling of icon change listeners when
added support for the Russian language in the Language . java file to enable support for Russian language in the application
hhh - 14816 use nanoseconds instead of second in basesqmtosqlastconverter
disable frame state verification in substrategraphkit .
added setup and teardown methods to reset system properties in Robolectric tests to ensure proper resource management and reset system properties during tests
added support for loading the " org . slf4j . LoggerFactory " in ViewClassLoader and its corresponding tests to ensure that the Logger
added a check for " jar " packaging in ChangePackaging . java and implemented a new test case in ChangePackagingTest . java
fix flaky test : download file with ` ` txt ' ' extension
fix ( demo ) : fix buffer clear in glfw demo
updated ` JogService ` and related classes to replace ` defaultUnits ` with ` preferredUnits ` instead of ` defaultUnits ` to improve
refactor date formatting in DatePatternConverterTest to use UTC timezone to ensure accurate date representation based on time adjustments
simplified the return statement in the Terminator class to improve code readability and maintainability
updated error messages and exception handling in FileSystem , LocalFileSystem , and DistributedFileSystem classes to improve clarity of URI validation and enhance error messaging for
use jabrefexecutorservice to run track notification in one minute
use awaitility in camel - ftp instead of thread . sleep
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to enhance thread - safety by using a
added an ` isIgnored ( Throwable ignored ) ` method to multiple log classes and implemented the ` ignore ` method in the ` Log ` class
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary casting of damage to byte in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary
removed the call to GraphicsUtil . cleanImage ( img ) in PanelManager . java to streamline image handling by eliminating unnecessary processing
added MMapDirectoryFactory . java and SimpleFSDirectoryFactory . java files to implement directory factories for MMapDirectory and SimpleFSDirectory to
added null check for the ` BaseColor ` object before creating it in ` PdfCleanUpProcessor ` to avoid potential NullPointerException when ` ic `
updated the assertion in QueryEqualityTest to use ' field1 _ s maxDocFreq ' instead of ' field1 ' to ensure consistency in
refactor ExtendedOperatingSystemMXBeanImpl . java for improved functionality to enhance performance and maintainability of the code
added functionality to install left commands in the SideMenuBar to enhance the functionality of the SideMenuBar by allowing users to manage left and right
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added SybaseDatabase support to the conditional check in DropPrimaryKeyGenerator . java to ensure compatibility with Sybase databases during primary key generation
refactor Client class to improve code readability to enhance maintainability and facilitate future development
[ java ] update lastrecordingposition when the leader be ready .
replace invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java to improve the handling of pressed or focused state in the UI
added a return statement in the NearCachedClientMapProxy . java file to ensure that the method returns immediately after processing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added shutdownHttpServer method to handle exceptions during server start to ensure proper shutdown of the HTTP server and handle potential exceptions during server shutdown
camel - 15836 - camel - aws2 - s3 : fix camel - aws2 - s3 - stream upload to support multiple
[ hotfix ] [ runtime ] remove the parameter tmid from taskmanagermetricshandler
fix 226 to 227 db upgrade for key that do n ' t exist in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to handle password validation to ensure that the
added a new variable ` maxEnergyLimit ` and updated its assignment logic in ` VMActuator . java ` to improve energy limit management
added maxInMemorySize property and its getter / setter methods to HttpClientProperties , and updated WebClientPlugin to utilize this new property to
refactor caching logic in Cache . java to improve performance and readability of cache operations
added new files RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java to implement Cucumber tests for
updated TypeJsonUtils to handle JsonParseException when reading double values to ensure robust parsing of double values and improve error handling for invalid JSON inputs
removed hardcoded hex strings from Utf8StringBuilderTest . java to streamline test cases for improved performance
added a check to ensure parameters are not set before appending them to avoid potential NullPointerExceptions during request handling
camel - 14850 : camel - circuit - balancer - allow to configure the maximum number of output in the load balancer . thanks to
updated the assertion in TestIndexWriterExceptions to ensure the correct document frequency is used to improve test reliability by ensuring the correct number of buffered
replaced usage of ` hash . putUnencodedChars ` with ` hash . update ( hasher ) ` for resource APK , primary d
removed static final methods for enum value retrieval in AsmRuntime . java to streamline code by eliminating unused methods
add miss biome tag for mangrove , death , and underground .
papplet . loadimage ( ) now use a fixed thread pool to request image
changed access modifiers of ` _ tableConfig ` , ` _ schema ` , and ` _ helixManager ` to protected and refactored
replaced occurrences of " § § § § § § § �
updated image comparison method from ` equals ` to ` hasImageEqualTo ` in ` AbstractSunSecureRule . java ` to improve code read
camel - 16463 : camel - jbang - run command should support -- repos option
added handling for NaN scores in CrawlDbReader . java to improve robustness by providing a default value when scoring is NaN
added JUnit cleanup method to OnStartupTriggeringPolicyTest . java to ensure proper cleanup of temporary files after tests to improve resource management and
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and updated focus
[ hotfix ] [ checkpoint ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to ensure proper handling of XML whitespace in schemas
fix ( bonsai ) : do not override trie log layer when get mutable block with no trie log
updated FilledNewArrayInstruction . java file to improve code clarity and maintainability
added ` @ Test ( timeout = 60 * 1000 ) ` to multiple test annotations in ` SimpleNetworkTest . java ` to improve test execution
updated the method to check if parentPath ends with " / " instead of using substring to improve clarity and correctness of path handling logic
added error message for failed skin file loading in JavaSEPort . java to provide clearer error reporting when skin file loading fails
updated LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to implement a dirty flag and mark the accumulator as valid to improve
added a new ` UNDEFINED ` constant to the ` Result ` class and updated its usage in ` TestStep ` to use ` Result . UNDEFINED
changed assertThrows from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure that NullPointerException is thrown instead of PersistenceException
fix uploadjobmultipartoperation when jet be disable
[ hotfix ] add try / catch to recover from the scheduled job journal
bug fix : do n ' t ignore node when view be fold
removed the ` volatile ` modifier from the ` pos ` variable and introduced a ` sizeMask ` variable in the ` ensureAvail ` method
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark tests as ignored due
refactor target handling in StorageProxy to use subList for improved clarity to enhance code readability and maintainability by eliminating unnecessary
added ' final ' keyword to parameters in FileManager . java to improve code readability and maintainability
updated TransformFunctionType to include descriptive names for various transform functions to improve code readability and maintainability by reducing redundancy
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` Element ` , ` VariableElement ` , and ` Variable
8015362 : update rfc reference in javadoc to rfc 5280
fix : searchannotationvisitor do n ' t cast character to int .
refactor ListActivity to use a for - loop for retrieving selected items and replace HashMap with SparseBooleanArray in NoteAdapter to improve performance and
rearranged conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve code clarity and maintainability by utilizing ResourceUtils for
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to accept ` Context ` as a parameter for improved context handling to enhance
[ java ] only publish new leadershipterm if the term id match the record id .
updated assertions in PMDCoverageTest to use more descriptive log messages to improve test clarity and maintainability by using more descriptive
modified the skip logic in ByteArrayInputStream and added a new Skip class with test cases to improve handling of skipped bytes and validate the expected number of bytes
refactor the condition for promptUpdate in UpdaterTask . java to improve readability and maintainability of the code
make headersmessage . max _ headers public and add a sanity check before download .
add rt . jar to the list of standard jar in modclassloader
simplified the connection rejecting logic in AbstractHandshakeHandler . java to improve code readability and maintainability
updated method signatures to use constants from the Utils class instead of string literals to enhance code readability and maintainability by using utility methods
added a condition to check if the response is already committed before sending a 500 error to improve error handling by logging warnings when the response is already
update conditional checks for pendingElements and connectionQueue in HttpSession . java to improve clarity and correctness in handling pending elements and polling intervals
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to improve
fix ( prefab ) : log prefab name instead of unknown component
updated external group mappings in LdapMockMvcTests . java to include " internal . superuser " and " internal . superuser " to enhance
updated variable declaration for thirtyDays in FreezeBalanceActuator . java and added validation for minimum amount in TransferActuator . java to
replaced the hardcoded character ' / ' with a constant File . separator in FileResolverTestBase . java to improve code readability and
ggb - 1353 show error message on back press , close input help panel
updated GpsMainActivity to use session description instead of an empty string and refactored AnnotationViewFragment to use EventBus for command events
updated JsoupNonVisualRegressionTest to include a file for saving a PDF and verifying the number of pages to ensure the test
* add androidnativebufferallocator , deprecate androidbufferallocator
added checks to convert flags to strings starting with " ! " in multiple classes to ensure proper handling of flags that start with " ! " in
added a NOPMD comment to the statement statement in JDBCHistoryCache . java to clarify the purpose of the statement is
updated the condition in BattlePassManager to use the ItemUseOp enum instead of a string comparison to improve code readability and maintain
refactor QueuePriorityTest to use a dynamic item count and add a custom toString method for PriorityElement to improve test reliability and provide a
fix test failure in affinityapitest due to dependency injection
added a null check for the main command and updated the option check to include help functionality to ensure that help is printed when the command is not
reduced the size of the LightOutputStream instances in multiple classes to optimize memory usage and improve performance
change the visibility of the ` Scanned ` class from package - private to public to allow access to the ` Scanned ` class from other
modified ClassWriter . java to introduce a showBlank flag and updated conditional checks accordingly , and added a new class T8032819 .
removed the assertion check for the length of the variable ' sn ' to streamline the code by eliminating unnecessary length validation
added null check for file extension before checking for EXTENSIONS _ DENYLIST to avoid potential NullPointerException when the file extension is null
change return statement to continue in ContactRightButtonMenu . java to improve clarity and functionality of the code
[ hotfix ] [ runtime ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor binding and closing logic in PlainSocketImpl to use a delegate instance of SocketImpl to improve code clarity and ensure proper resource management
added functionality to manage removed items in the MediaDetailPagerFragment and updated related methods in BookmarkListRootFragment and MediaDetailPagerFragment to
updated log message to clarify the purpose of offsets from the element ' s in - view center point to improve clarity and accuracy of
added a new file ` bug4865918 . java ` to implement a GUI with a scrollbar test to ensure the scrollbar functionality is correctly
replaced ` VelocityEngine ` with ` Velocity ` for template evaluation in ` ADKerberosOperationHandler . java ` to streamline code by
replaced specific command imports with a wildcard import and added null check for group triggers in QuestCommand . java to streamline import statements and
fix crash when no file manager available for account
added @ tostring ( callsuper = true ) to partitionchangeevent and tbapplicationevent
[ openhabcloud ] added default i18n property file ( # 11547 )
removed view port component and JScrollPane settings from BrowserPanel . java to streamline the UI by eliminating unnecessary component settings
added keyboard shortcuts and updated event handling in LwjglInput , ParticleEditor , Layout , and TWL classes to improve event processing
added a conditional check for indexMimeTypeParts in MoreIndexingFilter . java to ensure proper handling of mime type parts based on configuration
added a regex pattern to identify and process the author from comments in JSDoc . java to improve comment processing by allowing users to specify the author
updated metric constants in MetricsConstant . java from " delta _ total _ databaseS " and " delta _ total _ tableS " to "
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and SchemaConfig for handling database access to
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` for query parameters and added error handling to
updated Hijrah locale from " Hijrah - umalqura " to " Islamic Umm al -
updated the supported condition in WebAudioWrapper to exclude Firefox browser support to ensure compatibility with both IE and Firefox environments
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the private constructor from ` InterceptorConstants ` to enable interceptor functionality
added a " DEFAULT " keyword to the readIf ( " DEFAULT " ) method in Parser . java and modified table creation statements in TestCompatibility
updated conditional logic in StreamingAggTemplate . java and modified kill ( false ) in WriterRecordBatch . java to improve code clarity and ensure
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a ` hasFrom ` boolean property and related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest ` classes
refactor synchronization methods and improve error handling in SynchronizeFolderOperation . java to enhance code clarity and maintainability by using more descriptive
refactor applicable tests handling by introducing a new method ` applicableListTests ` to improve code readability and maintainability by centralizing the
updated the regex pattern for matching log lines in LogAnalyser . java to ensure accurate parsing of log lines for improved accuracy
( chore ) camel - google - cloud : enable integration test if google _ application _ credentials env var be not set
fixed - rsearch . value ( ) method do n ' t take inclusive parameter into account
xmlui - submit : add select change and no license option to select list .
bugfix : if ifcroot . getglobalid ( ) be null , it should n ' t be null
updated equality check from ` equals ` to ` areEqual ` in ` OptionalAssert . java ` to improve comparison accuracy for value comparisons
refactor memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally add the last margin bottom to the configuration to
added a new file ` TestArrayCopyToFromObject . java ` that tests array copy behavior to ensure that ` ArrayStoreException ` is thrown for
refactor Python string insertion to use ` Escaper . escapeAsPythonString ` instead of ` Escaper . escapeAsBash
fix typo in ajp ( apr / nio ) protocol . close ( )
add a new ` ` visitallfiles ' ' flag to the craftinghelper . findfiles ( ) method
added an import statement for JUnit ' s Ignore annotation and marked the test case as unstable to indicate that the test case is unstable
added exception handling to the ` doRequest ( ) ` method in ` TestInternalInputBuffer . java ` to ensure that the test verifies the response
refactor the ` autoloadCall ` method to include a locking mechanism for class loading to improve performance by reducing unnecessary locking overhead during class loading
updated the server version comparison logic in CustomPlaybackOverlayFragment and modified the HLS support check in PlaybackController to ensure compatibility with server versions
replaced hardcoded " localhost " in principal keys with dynamic retrieval of the canonical host name to improve robustness by avoiding hardcoded localhost
updated Jsr250Voter to return the correct value based on the presence of a JSR250 attribute and added a new Jsr250
updated import statements in MP4Parser . java to include specific classes and remove unused imports to improve code clarity and maintainability by elimin
added a constant for HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to improve session parameter management and ensure
camel - 14850 : camel - hdfs - add snappy compression codec and add unit test .
added a sleep delay of 1000 milliseconds in HttpClientTest . java to improve resource management during tests
bug # 49966 : xssfcell . setcelltype ( cell . cell _ type _ blank ) setcelltype ( cell
adjusted glyph positioning and added buffer appending for width and height in GlyphLayout . java , and updated text in BitmapFontTest . java
[ fabric8 istio ] fix istioctl integration test
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( )
make sure to close the fileinputstream in simpleauthority . getaccessproperties ( )
fix eviction in maploader when initial load be enable .
updated the return statement to use bitwise OR instead of bitwise AND for LENGTH _ BIT and ERROR _ BIT to ensure proper handling of ERROR _ BIT
[ ds - 3752 ] fix default policy for non - read community
refactor FontUtilities to use a ConcurrentHashMap for storing CompositeFont instances to improve performance by avoiding multiple instances of CompositeFont creation
set prefHeight to 0 instead of calling getHeight ( ) to simplify height adjustment logic for better readability and maintainability
( chore ) camel - dmn : fix dmn validation error message
removed unused imports and initialized LinkedList with generics in multiple Java files to improve code clarity and reduce unnecessary dependencies
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and updated its usage in ` NavHandleLongPress
added null checks for node IDs in ElementFactoryImpl and improved edge type validation in ImportContainerImpl to ensure proper handling of null values and
[ beam - 10566 ] fix npe in fnapicontrolclientcache and fnapicontrolclientcache ( #
fix bug in binfiles when flowfile be large than the bin limit .
replaced the way to find a closest CoreBuild by using a destination calculation to improve clarity and performance by using a more efficient approach for
added a check to skip copying content length in the RestTemplateCopyHeaderFilter and created a corresponding test to ensure that content - length is not
updated Java2TypeScriptTranslator to handle class and character literals correctly and refactored the transpile method in SyntaxTests to improve type
updated filter calculations and adjusted sample sizes in various classes to improve accuracy in filtering calculations and ensure accurate sample sizes
hbase - 14812 canary should support - allregions option in regionserver mode
removed the import of NodeModule from CassandraConnectorFactory . java and updated the ImmutableMap initialization in TestCassandraConnector . java to streamline dependencies
added a call to reset the cursor position in the KahaDBStore class to ensure proper cursor state management during database operations
added minimum size constraints for CallDialog and updated frame resizing logic in OneToOneCallPanel to improve user interface responsiveness by ensuring the
fix world gen lose state information for fall block .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit 4 framework and improve test setup to enhance code readability and maintain
added null checks and entity removal logic in KerberosPrincipalDAO . java and removed unused imports in KerberosPrincipalEntity . java and Kerberos
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method signature for better readability
improve handling of timeout exception in apr . poll ( ) .
updated the error message for the android . licenseKey to reference the " Monetization setup " section instead of the " Service & Apis
updated the ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed the ` is
( chore ) camel - test - infra - kie : fix relative package name determination
added an assumption to skip tests when the runtime version is 19 to ensure compatibility with the latest features and improve test reliability
simplified the method signature of ` assignTargetsForSplitScreen ` by removing the ` Context ` parameter and improving target assignment logic to
refactor LeaderLatch class for improved readability to enhance maintainability of the code
added methods to initialize zk - SNARK parameters for Sapling and Sapling output in SolidityNodeHttpApiService
transactionconfidence : add getdepthinblocks ( ) and setworkdone ( ) .
refactor variable and method names for consistency and clarity across multiple classes to improve code readability and maintainability by standardizing naming conventions
initialize platformName to " ios " to ensure platformName is set to " ios " to avoid potential null pointer exceptions
pdfbox - 4071 : fix typo find by codespell on fossies . org
added braces to conditional statements for mozDash , webkitLineDash , and webkitLineDash in Graphics2D . java to improve code read
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future development
added error handling to the nextOutgoingFrame method in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced direct instantiation of Caller with a privileged access block for obtaining the class loader to enhance security by ensuring that the caller class is
added functionality to reset the parent of child categories in the database to ensure all child categories are removed from the database
updated title assignment logic in ContributionManagerDialog . java to use a dynamic title based on the contribution type to improve user interface clarity by
added a new field ` vwap ` to the ` Ticker ` class and updated the constructor accordingly to enhance the ` Ticker `
added support for a no widgets view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to enhance user experience by providing
add a rendergraphapi to make it easy to add a tint node to a world .
added a method to set the primary color in NCFirebaseMessagingService to enhance messaging color management for better visual feedback
updated ShadowUsbManagerTest . java file to improve test coverage for ShadowUsbManager functionality
updated preference calculations in ` AbstractDifferenceRecommenderEvaluator ` and added logging in ` AverageAbsoluteDifferenceRecommenderEvaluator ` and ` RMSRecomm
added a call to ` selectedConfiguration . update ( ) ` in the ` Rocket . java ` file to ensure that the selected configuration is
updated width and height calculations in AndroidGraphics . java to ensure they are at least 1 pixel to improve performance by avoiding unnecessary integer casting
replaced instances of HashMap with LinkedHashMap in multiple classes to ensure consistent ordering of elements in the map
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a more
( chore ) camel - test - infra : migrate camel - main to junit5 instead of junit4
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , for integrating WebSocket ingress testing to
[ ds - 3752 ] fix dsm service manager to use getservicebyname ( )
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a conditional check to return false if the system property " jnr . ffi . compile . x86asm " is set to true to
refactor calls to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new annotation ` Insecure ` and modified the ` MessageBuffer ` class to use it to enhance encapsulation and improve readability of the
added new configuration variables for various Hive configurations in HiveConf . java to enhance configuration options for database operations
initialize scopes and policies collections with new HashSet instances in ResourceSet . java and add null check for policies in DefaultResourceSetService . java to
changed the ` decrefOnClose ` variable to be ` final ` and modified the constructor of ` MultiReader ` to accept a ` Collection
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 files to
simonstewart : fix flaky test in selenium - rc5
replaced occurrences of ` $ Gson $ Types . getFirstTypeArgument ( type ) ` with ` getFirstTypeArgument ( type ) ` in
changed method return types of keySet ( ) and values ( ) from Set < Integer > to KeySet and Collection < Integer > to improve type
added methods to manage the duration of the FlipTransition class and updated background color handling to improve flexibility in transition duration management
removed trace logging for not setting subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary
update forge version to 9.0 . 10 ( # 2266 )
replace usage of ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages to improve logging clarity and
update javaparser version to 1.16 . 0
modify padding settings for background elements in the ExpansionViewHelper class to improve layout responsiveness for different replies in the application
updated the callback handling in AbstractPartitionPrimaryReplicaAntiEntropyTask to check for a valid version before V3.9 to improve robustness
added metadata handling to SeedUrl and SeedResource classes to enable storage and retrieval of additional data associated with seed URLs
avoid npe when clone a fact declaration that do n ' t have a binding
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage for coprocessors
added package name handling in AnnotationActionValidatorManager . java and updated related tests in AnnotationActionValidatorManagerTest . java to ensure correct package name
updated assertions in IterableTest to explicitly cast null arrays to Object to enhance type safety and prevent potential null pointer exceptions
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes along with a default spliterator implementation to enhance the functionality of collections by supporting Stream API operations for improved data manipulation
return a cloned version of the notifInfo object to ensure that the original object is not modified during the operation
make sure command key match do n ' t interfere with command
update aeadblockcipher javadoc to clarify behavior .
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable . java ` and updated the default resource mode in ` Robolectric
added a condition to check if ` ulSize ` and ` ulPos ` are zero before accessing ` head _ Table ` and ` os2
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static message reader to enhance flexibility by allowing multiple message readers for
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
removed dependency on MavenDeployer in StandardMavenAuthenticationProvider . java to streamline the code by eliminating unnecessary validation checks
rename AudioNode . java file to improve clarity and consistency in naming conventions
added SSL context initialization and exception handling in LinkyHandlerFactory . java and refactored cookie management in EnedisHttpApi . java to
refactor HiveFunctionRegistry to use Java Streams for improved performance and readability to enhance code maintainability and streamline the registration process
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - fix amq
updated the method parameter name from ' alias ' to ' possiblyFlavoredAlias ' and modified the return statement in the buildTargetForAlias
camel - olingo2 : fix camel - olingo2 to handle empty odata feed
added a mapping for equivalent Hive versions in the MetaStoreSchemaInfo class to ensure compatibility with the latest versions of Hive
server : do n ' t expunge vms if they do n ' t have expunge
mark multiple methods as deprecated in AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
updated ONDashClockExtension to use a new method for retrieving the note title and refactored AlarmReceiver to use this new method
rename ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and update column definitions to include " nvarchar / varchar
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls in multiple Java files to improve consistency and clarity in
replaced the ` null ` parameter with an ` TestIdleListener ` class in the ` StandardSession ` instantiation to provide a custom idle listener
[ beam - 11977 ] fix bigqueryio integration test ( # 11977 )
added background resource and reset functionality to the icon in HotseatPredictionController and set the background to null in BubbleTextView to
mondrian : fix typo find by codespell on fossies . org
add support for native system query in nativeworker
refactor LIMEExplanation to check for ALL _ OUTPUTS feature before retrieving the label to improve code clarity and ensure correct retrieval of
added argument handling for command execution in AppleSimulatorController and InstallCommand to allow for more flexible command execution options
replaced direct calls to getArea ( ) with a genericStyledArea variable for improved readability to enhance code maintainability and
added checks for availability of lifecycle pipeline and manager in ContainerBase and StandardContext classes to ensure proper handling of lifecycle state availability during lifecycle operations
added background clipping to outline in QsbWidgetHostView to enhance the visual appearance of the QSB widget
added flag processing and improved flag string handling in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance flag processing efficiency and
replaced specific OpenGL imports with a wildcard import and modified depth testing logic in FloatingTextRenderer . java to streamline import statements and
rename libffi _ libffi _ nfi _ libffi _ contextLinux and libffi _ nfi _ libff
added ` propagationBehavior ` property and its getter / setter methods to ` JdbcAggregationRepository ` to allow dynamic configuration of the propagation behavior for transactions
[ nd4j ] add l1 / l2 regularization support for layer validation
added error handling for read / write operations in AbstractChecker . java to improve robustness by logging exceptions when reading or writing fails
changed the visibility of the colorStack array from static to instance and updated its assignment to enhance encapsulation and improve code readability
updated method calls from ` getMappedStatement ( id , false ) ` to ` getMappedStatement ( id , true ) ` and ` has
changed the order of tradableIdentifier and currency to lowercase in BTCEPollingMarketDataService to ensure consistency in currency representation across different
updated channel state assertions in ChannelStateTests . java to reflect new command values to ensure accurate testing of command state changes
remove the ` ` versionedhashes ' ' field from ` ` enginepayloadparameter ' '
clear trigger price and update ontriggerpricetextfieldchanged in mutableofferview
modify studentfeedbacksubmissioneditsaveaction to redirect to student home page if not error
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 2649 addendum fix checkstyle violation in hbase - regionserver
fix for # 1645 - beanstate . getchangedprops ( ) do not throw exception if bean be set to read - only
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added new methods nSetLayerType and nSetLayerPaint to ShadowRenderNode to enable setting layer type and paint for rendering nodes
replaced specific imports with wildcard imports for java . awt and javax . swing , and added firePopupMenuWillBecomeVisible and getP
updated the initialization logic for the ' insert ' variable in StressProfile . java to ensure proper handling of null and non - null values to
replace usage of ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in
added null check for requests before processing in MockServerEventLog . java and improved logging messages in HttpForwardObjectCallbackActionHandler . java
added a warning log statement for loading properties in DefaultEnvironment . java to provide a clearer warning message when properties file cannot be loaded
updated session dataset handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added a condition to check if the network supports multicast and is up in the SetOutgoingIf class to ensure that outgoing connections are only processed when
updated the constructor of sqlCommand to include the length parameter to ensure proper handling of command arguments
updated methods in ` UnDelegateResourceActuator ` and removed redundant calls in ` BandwidthProcessor ` and ` EnergyProcessor ` to
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to improve session handling by ensuring a valid ` Invalid
improve error message when token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the existence of keys in a map to ensure that the `
refactor JdbcProxyGenerator to use a new proxy implementation for JDBC4 temporary prepared statement methods to enhance flexibility and maintainability of JDBC statement
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` start ` method in ` DirectUpgradeTest ` to use `
changed return types of ` toLanguageFlags ` and ` getLanguageFlags ` methods from ` ImmutableMultimap ` to ` ImmutableListMultimap ` to align with
pdfbox - 4071 : use point2d instead of point2d . float to avoid npe
replaced instances of ` hooks ` with ` MethodHook . EMPTY ` in ` Method . java ` and introduced a constant for empty ` Method
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the ` return ` logic to handle access denial
modified the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance job execution handling in job processing
added a check for file execution permissions in SharedLibraryLoader . java to ensure that only writable files are processed
chore ( regen ) : update protoc to v3.15 . 3 ( # 3 )
rename samplerservice . res to event . getresult ( ) . getresult ( ) for clarity
added new constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , DISTANCE , start timestamp , and PRO
change searchexpression . applyrule to accept map instead of hashtable
euclidiancontroller : use absolutescreenlocateable instead of geowidget for move
updated JoglGraphics . java and ProjectiveTextureTest . java to adjust listener resize behavior and texture filters to ensure proper resizing behavior
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to ensure that the file is writable before proceeding
camel - 6667 : fix property component intercept from uri to resolve property placeholder .
updated the condition from ' > ' to ' > = ' in ActionScheduler . java and corrected the expected value in TestActionScheduler . java
updated debug _ zip path and added null check for debug _ log before replacing " debug . log " to improve robustness by avoiding potential
fix ( gui ) : show / hide button in notification overlay in debug mode
add pipe . resetgate ( ) to reset the pipe ' s gate .
added locale management to the TestSupplementary class to ensure consistent locale handling during test execution
updated the random color for the team ' s color from 0.8 f to 0.4 f to improve the randomness of the team
replaced Set < MatchedStates > with Collection < MatchedStates > and added a hashCode field to the SequenceMatcher class to enhance logging
updated the condition for checking if the annotation is null in SoftAsserts . java to ensure proper handling of null annotations and expected exceptions
updated error handling in StorageResources to include exception messages and added logging for plugin errors to improve error reporting and provide better debugging information during plugin saving
refactor CallTreePrinter to use a new method ` toCsvFile ` for CSV file reporting to improve code readability and maintainability by
updated note retrieval logic and made view reference changes in DetailFragment , and modified intent actions in WidgetProvider to ensure null safety and improve readability when accessing UI components
added peakTasks tracking and modified task loading logic in AssetManager . java to improve task management and ensure accurate loading behavior
simonstewart : make the firefox driver ' s native event default to true on window
added new properties for nutch score and fetch interval , and updated the CrawlDatum initialization to use customScore to enhance flexibility in
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ` ScimExternal
updated the condition for ` zkController ` in ` CoreContainer . java ` and added a new method ` isShareSchema ( ) ` in
updated sizeInBytes ( ) method calls to include a boolean parameter across multiple classes to ensure consistency in size calculations across different indexing strategies
replaced multiple assertions with a null assertion for version1 _ 2 in VersioningTest . java to ensure that the version1 _ 2 is
updated SQL queries in mmm Field . java and AbstractJdbc2DatabaseMetaData . java to include type checks for ' not null ' and '
[ java ] only publish new leadership term event if it ' s not already commit .
updated the ` buildMediaType ` method in ` WebClientPlugin . java ` to return ` APPLICATION _ JSON _ VALUE ` from the HTTP request
replaced calls to ` fill ` and ` fillUsingLengthPrefix ` with ` fillSlice ` and ` fillAndGetIndex ` methods across multiple
refactor compaction checks in AcidUtils and add a new test for major table compaction in TestCleaner to improve code clarity and ensure
handle null storage scheme and qualifier encoding scheme in PTableImpl . java to ensure proper initialization of immutableStorageScheme and qualifierEncodingScheme based on
added two new files , PojoProducersCustomized . java and RestProducersCutomized . java , for customizing Pojo
replaced hardcoded string " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve code read
replaced AesGcmSivProtoSerialization . register ( ) with AesGcmSivProtoSerialization . register ( ) to
fix oredictionary miss replacement for wooden slab
renamed multiple classes related to session management and caching to improve clarity and maintain consistency in naming conventions
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` pathResolver ` parameter in the ` UndefinedSymbols
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 13434 fix test failure on oracle
corrected the positioning of the sprite batch in HelloWorld . java to ensure proper positioning of the sprite based on the texture ' s
simplified the y - coordinate calculation logic in PlayerFunctions . java and improved the toString method in PlotId . java to enhance code
added a deprecated version constant for Lucene 8.5 . 0 to indicate that the version is outdated and should no longer be used
updated print statement formatting for clarity in SSLSocketImpl . java to improve readability of log output for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure
refactor dependency types to use an enum instead of a String for improved flexibility to enhance code readability and maintainability by utilizing
added a new method ` makeTargetDescription ` to ` ParseContext ` and refactored exception handling in ` NoSuchBuildTargetException ` to improve
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . java ` to ensure the
reduced the size of the ` configBlocks ` array from ` Block . blocksList . length ` to ` 256 ` to optimize memory usage
updated version checks and warning messages in BukkitMain . java for better clarity and functionality to ensure compatibility with different versions of PlotSquared
updated SQL statement generation for PostgreSQL questionmark operators in AbstractSQLChange . java and its corresponding test in AbstractSQLChangeTest . java to ensure
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
added validation and checks for file names in BuildNavAndPDFBody . java to ensure files do not end with " . adoc " and
updated MqttBrokerConnection instantiation to set the third parameter to false to adjust connection behavior for improved reliability
updated the way change sets are retrieved by using the root change log instead of the current change log to improve reliability by ensuring the change log
replaced ` new MethodResult ( ) ` with ` methodResult ` in ` StaticMethodInterceptor ` and ` RocketMQGlobalPluginHandler
added database drop functionality to TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to enhance database management and provide debugging information
added a new parameter " order _ currency " to the BithumbAuthenticated and BithumbAccountServiceRaw classes to support currency - based
move sseflux web configuration to sandbox
updated return type checks in JsonBuildHelper and IDocBuildTemplate to use isVoid ( ) instead of getFullyQualifiedName ( ) to ensure
renamed YAML _ READER to YAML and added a new REST endpoint to list detection configurations to improve code clarity and provide a way to
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation and
refactor thread factory implementation to use lambda expressions and introduce awaitTermination method to improve code readability and encapsulate thread termination logic
added unit tests for adding lists and a new PersonWithAList class in MongoTemplateTests to ensure correct functionality of list management in MongoDB operations
make sure applet panel size be update after resize .
updated toolbar visibility handling in DrawerActivity to include a delay to improve UI responsiveness during toolbar visibility changes
refactor the first page unpacking logic in SeriesReader . java to improve clarity and structure to enhance code readability and maintainability by
do n ' t save the vm password if the vm be not run
added new boolean flags ` usingOutputStream ` , ` usingWriter ` , ` isCharacterEncodingSet ` , and ` usingCharacterEncodingSet `
added a warning check for assignment side effects in GroupDialog . java to improve user experience by preventing unnecessary warnings during group processing
refactor JSON and JSONObjectConvertor classes for improved consistency to enhance code maintainability and readability
updated the condition to check if the icon width is greater than the maximum height with margin to ensure that the icon does not exceed the maximum height
refactor public key retrieval and encoding in JwtTokenCipherSigningPublicKeyEndpoint and its tests to improve clarity and functionality of public key handling in
added file existence checks and content type validation in Basic . java to ensure correct handling of file types and improve error reporting for non - Windows environments
change nettyconnection . iscompressed to return false instead of throw an exception
added a new method ` doesClassLoaderDescendFrom ` to the ` Util ` class and removed it from the ` Class ` and ` MethodHandles
updated method names from ` doConnect ` to ` connect ` in ` ChannelProvider . java ` and ` ProxyChannelProvider . java ` to
added a test method for handling an empty final column in TestCsvHeader . java and modified TextReader . java to start the output field to
added compass gravity and margins to NearbyMapFragment to improve map rendering by adjusting the appearance of the component
added unit tests for interpolation functions in GeoPathTest . java to ensure correctness of distance calculations and interpolation behavior
added exception handling to various methods in ` LeafFilterFactory ` , ` ParquetFilterPredicateConverter ` , and ` TestParquetRecordReader
added language handling for video stream types in LibMediaInfoParser . java to ensure correct language is set for audio tracks
added a warning log for schemas in newer than the old version in MicroserviceRegisterTask . java to inform users that schemas are less than the
replaced manual array resizing and copying with a unified ` addAll ` method across multiple array classes to improve code readability and maintainability by
reformatted try - catch blocks for resource closure in DataSourceProxy . java to improve code readability and maintainability
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to handle null and empty registrations to ensure proper initialization and validation
added a method ` resetUIState ` to reset the UI state in ` SchemaUpgradeHelper ` to ensure that the UI state is reset correctly
added handling for ` failedStep ` and ` ignoredStep ` in ` JUnitReporter ` , and created new test cases in ` JUnit
fix player selector not work for modded player . close # 5796
added the Closeable interface to the Selector class to enable proper resource management by implementing the Closeable interface
added MultiplexConnectionPool and modified connection pool configuration in MaxConcurrentStreamsTest . java to enhance connection management and improve connection performance
added multiple calls to stringType ( ) in CoreOptions . java to enhance clarity and maintainability of the code
updated HqlQueryRenderer to handle character and parameter nodes in query rendering to improve query processing based on character and parameter requirements
updated HTTP status handling to use HttpStatus constants instead of direct method calls to improve code clarity and maintainability by using predefined HTTP status codes
pdfbox - 4892 : avoid class cast exception , a suggest by valerybokov
updated HikariCPCollectorTest to use StubDataSource instead of hardcoded JDBC URL and set maximum pool size to 1 to optimize database connection
updated ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and cache management to enhance performance and maintainability of the Parquet
updated the success flag to true and modified the javac task execution logic in Jsr199Javac . java to ensure proper handling of
added a new ` BaseTableModelListener ` class and integrated it into the ` DefaultSortedTableModel ` to handle table changes in the model
updated the validation condition for the number in ServerConfig . java from a minimum of 49152 to a maximum of 65535 to ensure that the number
added document authority handling for devices running KitKat and above in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running Android K
removed logging start call from MainApp . java to streamline logging functionality for improved performance
modified exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness of request rejection logic and ensure proper
updated string manipulation logic in StringBuilder . java to use ' this . length ' instead of ' length ' to improve clarity and maintain consistency in
pdfbox - 4892 : throw an exception if the filter list be empty
create tbstopwatch class to enable use of spring ' s stopwatch
set the initialized variable to true in PListStore . java to ensure proper initialization of the PListStore class
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should use Servlet 3.0 AsyncContext instead
[ zeppelin - 5231 ] set context class loader for remote interpreter server
fix checkstyle issue in block / entity / forgehooks . java
updated minSdk version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
updated variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 1193 - enh : add support for simple bean name in query plan ( # 1194 )
updated JavaScript and CSS header URLs from " wro / all . js " and " wro / all . css " to " static /
added a test method to verify the functionality of showing latest timeseries in IoTDB to ensure that the functionality of the ` showLatestTimeseries `
change parameter name from " appContextLocation " to " contextConfigLocation " in multiple files to improve clarity and consistency in naming conventions
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and specificity of error handling
benchmark : add writeoutputsolutionenabled property ( default to true )
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify the functionality of ` SortedTableMap . Sink ` with specified parameters to ensure that
added a shapeless recipe for the pipe waterproof and a slime ball in the craft transport to enhance the flexibility of the
bugfix for mahout - 1349 : improve performance of abstractvector . iteratenonzero
added handling for ` Shulker ` and ` FixedMetadataValue ` for the ` ownerplot ` metadata in multiple classes to ensure proper metadata
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide a way to
updated import statements in IOHelper . java and added methods to retrieve maximum directory and file names length to improve code clarity and maintainability by
added a check for tag matching in UpToTagChangeSetFilter and implemented the isSeenTag method in UpToTagChangeSetFilter to improve error
[ beam - 13434 ] use java8 arraylist instead of guava list in java8
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing process
updated color assignments for volumePaint and upPaint in CandlestickRenderer . java to use GRAY and GREEN colors to improve
refactor layout parameter handling in InsettableFrameLayout to utilize a new LayoutParams class to improve flexibility and maintainability of layout parameter
added a duration parameter to BuildTargetDurationListener and updated related JSON responses to include the duration of the rule processing
refactor migration integration tests to use JUnit ' s assumeTrue method instead of Spring ' s @ Profile annotation to improve test reliability by
added a null check for the user before processing claims to avoid potential NullPointerException when the user is null
camel - 16463 : camel - test - support : add a way to replace route from endpoint with route name .
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by avoiding concurrent modification issues
api : make listpublicipaddresses api to list all public ip address by source network id
added tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure correct behavior of power manager settings when package name changes
update Jetty version retrieval to use build properties to ensure compatibility with the latest Jetty version
added unit tests for verifying invocation order in ` NumberOfInvocationsInOrderVerifierTest . java ` to ensure correctness of invocation verification
refactor conditional logic in TRegexExecNode . java for improved clarity and structure to enhance readability and maintainability of the code
updated startProfile method to include " - foreground " argument to enable foreground mode for profile management
replaced the executor service name from " jetty - launcher " and " jetty - closer " to " jetty - launcher " and
changed the type of ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` and simplified
updated log message to include file name and added null checks for actionsList parent in EditorTextActionWindow to improve logging clarity and ensure proper
added detailed error messages to skippedEntries in ClassFileReader . java and improved warning message formatting in JdepsTask . java to enhance debugging information
updated Fetcher and related classes to use LuceneStorage instead of LogStorage for document storage to improve performance and maintainability of document storage operations
updated the ` populateBubble ` method to include an optional ` existingBubble ` parameter and modified bubble population logic to enhance functionality by allowing
replaced warning logs with exception throwing for missing start / stop / suspend / resume times and improved exception message formatting to enhance error handling and
updated method signatures and variable names in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsServiceBeanPostProcessor
[ java ] use nak _ multicast _ delay _ generator instead of nak _ unicast .
updated Gson initialization and added JSON serialization for client information in ClientInformationResponseView . java to improve JSON handling and ensure proper serialization of client information
added a condition to check if ` openOrder ` ' s fieldAmount is greater than zero before setting the average price to ensure that the average
removed the method ` rawExecutionReports ( ) ` from the ` BinanceStreamingMarketDataService ` class to streamline the code by
added a ` fail ` method to handle exceptions and modified the timeout condition in ` LdapTimeoutTest . java ` to improve error handling and provide
fix for ticket : 136 -- if a user dictionary file do n ' t exist , do n ' t crash
added a check for the presence of the password file or credential store alias before updating the password in AmbariServerConfigurationHandler . java to
added segment parsing checks in ParseSegment . java and a new method in SegmentChecker . java to ensure only valid segments are processed to avoid processing
[ hotfix ] [ yarn ] make application attempt failure validity interval configurable
do n ' t warn if h2 driver be not present in classpath
hbase - 16405 add readtype configuration for snapshot - based inputformat ( addendum )
add ` ` fixedwidth ' ' and ` ` fixedheight ' ' to instancelogininfo query parameter
added a corner radius parameter to several update methods across multiple classes to enhance animation handling by incorporating corner radius for better visual consistency
added descriptions to the COMMANDS _ TO _ REMOVE array and updated filter warnings in QFile . java to improve clarity and functionality of
added retry logic for connection retrieval in TxnHandler . java to handle potential BONECP bug to improve robustness by allowing retries on connection pool
rename txnensurereserve to txncheckreserve and add txnensurebackupreserve overload
added a private final char array ` strings ` to the ` FirstOfStringsMatcher ` class to provide a way to store and retrieve the string
updated delete statements in CostBasedDecisionIT and DeleteCompiler to include " DELETE ROWS CLIENT SELECT " and " DELETE ROWS SERVER SELECT "
updated BaseServiceException to include a retryable check for SocketException and added corresponding unit tests to enhance error handling by distinguishing between SocketTimeoutException and
added ` ImmutableList < String > rapidInstallTypes ` to several classes and updated method signatures to include it to enhance configuration flexibility by allowing
updated the seed pattern in SortTest . java to allow for negative seed values to allow for more flexible random number generation
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` IterableEntries ` to improve type safety and
modify return statement in Workspace . java to correct display size calculation to ensure correct positioning of the hotseat element based on device orientation
do n ' t transcode audio when there be only one medium item
added localization logic for strings in the Picker class to improve user interface localization for better user experience
camel - 14850 : fixed the unit test error of cxfrsconsumertest
hhh - 13686 : add support for postgresql < 40p01 / > and postgresql < 55p03 / >
added assertions and improved query ID handling in TestJdbcDriver2 . java , and updated imports in HiveStatement . java to enhance error handling
add usestimersinpardo test for unbounded pcollections and timer test
updated HTML formatting for filename display in GpsSimpleViewFragment . java to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
replaced direct access to ` getHttpExchange ( ) ` with a private field ` exchange ` in ` HttpSender . java ` to improve code
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve
added null check for the tree before processing markers in Recipe . java and introduced Lombok ' s EqualsAndHashCode annotation in Markers
improve xwpf default run style to use double instead of float .
change variable type from String to String [ ] for email matching in AddressBookDoCoMoResultParser to improve flexibility in handling multiple email
added handling for null exclusions in RawMavenResolver to ensure proper filtering of GroupArtifact instances based on their presence
added error handling and currency pair validation in DSXAdapters . java and introduced baseCurrency and quotedCurrency in DSXPairInfo . java to
updated test classes for BlockingIO , ParsingTable , ResolvingTable , andValidatingIO to improve test coverage and maintainability
[ drools - 90 ] fix incremental compilation when kiemodule pom be invalid
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before accessing ` sobj `
camel - jackson : fix javadoc warning in camel - jackson
truffle : do not use reflection to access unreflect field in hostfielddesc
added a method parameter annotation for the CompletableFuture class in DefaultNullnessAnnotations . java to enhance nullability support for CompletableFuture and CompletionStage in the
adjust the freezing point calculation in PlaybackController . java to allow more time for playback freeze detection
added a method to set internal state for annotations in AbstractCommonPowerMockRunner and removed the run method from PowerMockRunner to streamline the
updated the method call to use realType ( ) instead of typeCode to ensure consistency in type handling across the application
refactor indentation handling in TabsAndIndentsVisitor to improve readability and maintainability of the code
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenFilter to improve compatibility with JUnit ' s testing framework
updated the output statement in HtmlProcessInformationsReport . java to include a class for wrapped columns to improve the display of table rows in the
in progress - batch - 518 : remove executioncontext - related method from stepexecutiondao impls
added a condition to check if the new media folder should be hidden before adding it to the root folder to ensure that the child is only added
added null checks for the actor parameter and updated widget management logic in SplitPane . java to ensure proper handling of null actors and improve widget management
add handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized Java types
updated debug logging to use ` this . getVersion ( modInfoList ) ` and improved null and empty checks in ` UniqueModListBuilder .
changed the logger variable from ` private final ` to ` private static final ` in ` TicketGrantingTicketImpl . java ` to allow for
updated the SQL string to include " RLE . 81 + 12 " in the timeseries creation command to ensure compatibility with the latest SNAPPY
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to use it for value checking to improve
added support for character modifier keys in US International PC in CPlatformResponder . java and introduced utility methods in LWCToolkit .
[ java ] set aeron _ publication _ connection _ timeout in ctestmediadriver . java and use it in spysimulated
added a condition to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added JUnit assertion to verify the success of installing a wellbeing test APK to ensure that the device is rooted and validate
no effective change - add @ ignoreplatform ( platform . oracle ) ; remove oracleansislimiter
updated the expected number of secure transport protocols from 1 to 3 in multiple test files to reflect the correct number of transport protocols in the server options
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of Java libraries
added a flag to control haptic dismissal behavior in TaskViewTouchController to improve user experience by preventing unnecessary dismissal of touch
fix ` ` worldexplosion ' ' fire a ` ` projectilesource ' ' exception
removed unnecessary imports and overridden the getItemId method in SymbolInputAdapter to streamline code and improve clarity by eliminating unused imports
updated method parameters from ` @ PathParam ` to ` @ QueryParam ` and changed ` limit _ bids ` and ` limit _ asks ` to
added a check to replace single quotes with double quotes in the result string to ensure proper formatting of single quotes in the result
[ hotfix ] add test for kubernetesleaderelectiondriver . tostring ( )
refactor SqlSessionFactoryBean for improved session management to enhance code readability and maintainability
[ 3.0 ] fix tripleinvoker throw nullpointerexception when invoke generic method
replace Gdx . app . error with throwing GdxRuntimeException in PolygonRegionLoader . java to improve error handling by providing a more specific exception
added a static method ` isStarted ( ) ` to ` Deadline ` and implemented timer registration in ` RawStoreProxy ` to ensure thread -
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages related to channel closure
modified how genres are displayed in ItemListActivity to handle null values to improve robustness by preventing potential null pointer exceptions
[ hotfix ] [ runtime ] reset the master hook before restore .
fix ( protobuf ) : add support for map container in protobufpersisteddata
updated the logic for determining the oldest unpinned memtable version in WALNode . java to ensure accurate calculation of the current WAL file version
updated handler invocation in Endpoint . java and added a new test for retrying the same host on callback failures in HttpTest . java to ensure
fix package - info . java in truffle . tutorial . background and truffle . tutorial . background .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server query functionality to ensure correct handling of special characters in SQL Server queries
updated constructors in CamelModule to include @ NonNull annotations and added null checks in JoobyBeanRepository to enhance robustness by preventing
replaced manual synchronization with a utility method for waiting in JavaFXSEPort . java to improve code readability and maintainability by standard
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
refactor CropperUtils to utilize a new createCropperBehaviour method for handling BitmapRegionDecoder and Bitmap objects to improve image
removed the appName parameter from the configure methods in InputRC and related classes to simplify method signatures and improve code readability
[ gr - 22424 ] add test for ignored dependency .
danielwagnerhall : use -- headless = chrome instead of setheadless ( true )
intern the value before assignment to avoid potential memory leaks
added support for the " MOVE " status in the recv _ status check to ensure proper handling of additional status codes in the connection logic
updated ISO8601 _ PERIOD _ MICROS and US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ YEAR
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with a
[ hotfix ] fix the race condition in hsbuffercontext # startspilling
updated permission checks in the Visit . java file to include checks for the UntrustedVisitFlag to ensure proper handling of untrusted permissions for plots
do not try to connect to jabber if jabber be not available .
updated the character range check in BasicURLNormalizer and added a new test for curly braces in TestBasicURLNormalizer to ensure proper parsing of URL
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to these methods
added a condition to compare clock rates in EncodingConfiguration . java to ensure accurate comparison of clock rates between two encodings
added a method to retrieve the project path and modified the ` generateProjects ` method to return an ` ImmutableSet < Path > ` to enhance project
updated the logic for setting zero digit and retrieving calendar type in HostLocaleProviderAdapterImpl . java to improve clarity and ensure correct handling of
added a new file ` MSwingUtilities . java ` with utility methods for image scaling and handling exceptions to provide a standardized way to
camel - 16463 : camel - mail should use asyncproducer to avoid deadlock when send to mailbox .
added ` @ RefreshScope ` annotations to ` CasCoreWebConfiguration ` and ` PasswordlessAuthenticationConfiguration ` to ensure proper configuration refreshing for
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , and modified SchemaCrawlerMojo . java and SchemaCrawlerMojo
added a condition to check if input state is __ NONE in FORM _ ENCODED in Request . java and implemented a new test for query
added checks to ensure glyph dimensions are non - negative before updating descent and added a method to check if an actor is a descendant to improve
replaced direct calls to reportFailure with runCloseHooks in DeploymentManager and added a new test for context shutdown hook execution in DeploymentTest to
fix lexiconreciperecipemapping ignore meta when use recipe name .
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow for a longer wait time after an interval
replaced specific StringUtils imports with a wildcard import and added a check for non - blank short name before comparison to simplify import statements and enhance code
do n ' t use classpathurlstreamhandler and use getresource ( ) instead
added a new file ` FieldUtils . java ` with utility methods for field access and manipulation to facilitate better handling of field access
simplified the condition in the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default widget padding to improve layout consistency and
change xabberaccountmanager . updateaccountsettings ( ) to update last xmpp account on error .
added a new method ` setvar ` to the ` Commands ` class to facilitate setting a variable value using command - line arguments
fire animaltame event for animal tame . close # 3895
improve error message when sort by value for range frame
pdfbox - 4892 : add test to make sure create signature work with pdfbox 2.0
added a method to set the application mode in PageListController to ensure the application reflects the current application ' s mode
added methods to handle build arguments and Docker file paths in ImageFromDockerfile . java and created a new DockerfileBuildTest class to enhance
added a null check before initializing threadInfos and threadNames to avoid potential NullPointerExceptions when threadInfos is not initialized
updated the condition to check if ` sweepAngleOuter ` is less than ` 0.00001 f ` to use ` Utils . FLOAT _
[ hotfix ] [ runtime ] add more logging to singleinputgate
added new schema constants to the Schema . java file to enhance database schema management and improve readability
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes and updated related methods to improve accuracy in scoring calculations based on minimum
renamed the method ` addActionsView ` to ` setActionsView ` in ` RecentsView . java ` to improve clarity
add support for ` ` immediateflush ' ' property in ` ` encloseoutputstreamappender ' ' and ` ` encloseoutputstream
updated the AutoConfigureAfter annotation to include both RabbitAutoConfiguration , RabbitAutoConfiguration , and KafkaAutoConfiguration to ensure proper configuration of additional auto
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
updated import statements to use direct Google Commons classes instead of shaded versions to improve code readability and maintainability by eliminating unnecessary
added methods to retrieve return and unwind blocks in BciBlockMapping and updated block counting logic in GraphBuilderPhase to improve block management and
added null check and getter / setter methods for legacyRenderer in Label . java to ensure proper handling of null icons and provide access to legacyRenderer
replaced the old intToFourBytes method with the new Ints . toByteArray method in AbstractJweDecrypter and AbstractJwe
added null check for mObserver before accessing its properties to prevent potential NullPointerException when mObserver is null
updated the generic type declaration of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
update ` setEndTimeUtc ` method to use ` currentKey bucketMillis ` instead of ` null ` to ensure proper handling of end - time
added exception handling for parsing integers in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing fails
added a class loader to the enhancer in MockFactory . java to ensure the enhancer uses the correct class loader for mocking
added a new class ` OriginalFormat ` to handle formatting of objects in ` ConverterWithEnumFormat . java ` to enhance the functionality of the
replaced hardcoded date format " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java to improve
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and performance
camel - 14850 - camel - aws2 - * : enable autowire on the aws lambda client , fixed test
validate that a valid mac address be generate for a NIC in the network to ensure that only valid NIC addresses are processed in the network
added a condition to check if the string header name equals " Authorization " to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to ensure proper execution of commands based on context
added ` getDetails ( ) ` methods to ` AbstractAuthenticationToken ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken `
updated the logic for determining random use points in SolrTestCaseJ4 . java to ensure the random number of points is at least 80%
rename method ` appendDot ( ) ` to ` endSentence ( ) ` across multiple classes to clarify that the method ' s purpose
updated TimeFormat . formatForConsole method to include Locale parameter to ensure consistent formatting across different locales
updated import statements and added logic to handle named arguments in GroovyParserVisitor . java and GroovyPrinter . java to improve code readability and ensure
added inset adjustment logic for bottom , bottom , and left insetPx in Border . java to ensure correct positioning of elements based on
refactor gesture state initialization in TouchInteractionService to use DEFAULT _ STATE instead of creating a new instance to improve code readability and maintainability
replaced Joda - Time with Java ' s built - in date formatting in LlapServiceDriver . java to improve compatibility with newer Java
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
replace ioutils . closequietly ( ) with close ( ) in torrent storage
added synchronized keyword to the initTxnMgr method to ensure thread safety when initializing the HiveTxnManager
increased timeout values in ` AbstractDistribZkTestBase . java ` and ` AbstractFullDistribZkTestBase .
added a new class SearchResults to handle search results in Lucene to facilitate the retrieval and manipulation of search results within a specified
bug fix : threadcpufeersupport should n ' t create a new thread each time
[ gr - 16938 ] fix bytecodenode . loadobject ( ) to initialize body if primitive be null .
added new versions " 8.10 . 0 - cfs " , " 8.10 . 0 - nocfs " , and " 8
changed the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the text
add a new endpoint to retrieve tenant pool information for the current instance to enable users to access tenant pool information for each instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector ` to
updated the method to include ` isToString ( ) ` in the ` InlineBytecodeGenerator ` and modified imports in ` InlineByteBuddy
added logging statements to CxxCompileStep and CxxPreprocessStep for better error handling to improve debugging and monitoring of compilation and preprocessing
improve performance of stringutil # removecharacter ( string , char )
[ 3.0 ] fix zookeepers be not work when export metadata service protocol ( # 3748 )
( chore ) camel - kie - api : add datatransformer interface to facilitate data transformation
updated variable types from ` Collection < ? > ` and ` Object [ ] > ` to ` Collection < Number [ ] > ` and `
modified the condition for checking if a method is a variable argument in FormatStringChecker . java to ensure that the method handles the case where the
updated variable declaration for SolrCore in ElectionContext . java to improve code clarity and maintainability
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added testMapModel method to CodeFirstPojoClient , CodeFirstPojo , CodeFirstPojoIntf , and CodeFirstP
pdfbox - 4071 : avoid npe if xobj be null , a suggest by valerybokov
updated scale selection logic in ScaleDialog . java to handle null selection cases to improve robustness by ensuring correct selection behavior when scaleOffsets is not
fix nullpointerexception in itemtravelBelt . tickBelt . updateplayerstepstatus ( )
pdfbox - 4071 : do n ' t throw ioexception if there be no appearance stream
changed SortedSet to LinkedHashSet for keys in ExecuteSqlCommandStep . java to ensure consistent iteration order of keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 and modified the method signatures in multiple files
updated the preload library from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest
added a conditional check for agent support before setting all constructors to public in MainMockTransformer . java and created new classes MockStaticWithPrivateCtor
pdfbox - 4071 : avoid classcastexception when decrypt string , dictionary or array
bug 60739 - allow to define awt . wm _ class string via reflection
updated depth calculation in XRSurfaceData . java to accommodate different pixel sizes based on the color model ' s pixel size to ensure
added error response body handling in OkHttpDataSource to improve error reporting for failed HTTP requests
added a static method ` exit ` to ` TopLogging ` and modified ` TopThreadGroup ` to use this new method to improve error handling
modified the calculation of the start index in NativeRegExp . java to ensure the correct index is set when the regexp is not global
ignore fail test due to upgrade to optaplanner 6.3 . 1
updated the variable used for retrieving the high allocation from ` lowIndex ` to ` highIndex ` to ensure the correct allocation is retrieved based on
added a method to clean feed entries without feeds in the DatabaseCleaner and FeedEntryDAO classes to improve resource management by removing entries without feeds
change return type of appendToLabel method from void to AtomicCounter to allow chaining of the method by returning the current instance
[ java ] introduce noopidlestrategy for the low latency driver .
added support for handling HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of HTTP
rename ` constantValueInertSpliceInstrumentListener ` and ` constantValueInertSplicedNode ` to ` toolEvalNodeFactory
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area to ensure
modified the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept a variable number of arguments instead of a single
added file separator and absolute methods to FileEndpoint , GenericFile , GenericFile , RemoteFile , and RemoteFileEndpoint classes to improve file handling
added JSON identity annotations and a new method to build JavaProvenance in JavaProvenance . java , and updated MavenProjectParser . java to
added trace logging for Hive UDFs and non - deterministic UDFs in HiveFunctionRegistry and updated type check in EqualityVisitor to improve trace
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test reliability by allowing more time for
do n ' t attempt to send hint for deleted columnfamily
added a check to verify if the output file is writable before executing the error message to provide clearer feedback when the test is running as root
added package information retrieval in LauncherModel . java to handle potential NameNotFoundException to improve robustness by checking if the application is enabled before proceed
cloudstack - 7892 : fix db upgrade bug ( db upgrade from 2.2 )
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test in FaultTolerantChunkOrient
replaced ` startsWith ( completed ) ` method with ` regionMatches ( ) ` method in ` LineReaderImpl . java ` to improve region
added imports for SourcesFileErrors and SourcesFileResults , and refactored dataTables return logic to utilize a list of global data tables
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar . java to ensure that all tasks are properly dismissed
server : add dbupgradesystemvmpemplate class to upgrade system vms
removed unnecessary null checks for the connection variable in LdapClient . java to simplify connection management by eliminating unnecessary null checks
refactor index handling in SequenceAction . java for clarity to improve code readability and maintainability
make sure we do n ' t try to set keyspace if it do n ' t exist
added a check to skip synthetic fields in ReflectUtils . java to avoid processing synthetic fields during reflection
added LoggerProvider to facilitate logging functionality using SLF4J in the application to enhance logging capabilities and facilitate easier
changed the type of the ` builder ` and ` port ` variables from ` String ` to ` Object ` in ` ServerStatusCommand . java
added deprecation warning for deprecated Spring context classes in SpringFactory . java and updated tests in SpringFactoryTest . java to provide a clearer warning
added a new method ` deepStart ` to the ` Startables ` class to facilitate deep starting of multiple startables in a
removed the ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code by elim
allow laser table to use ilasertargetblock instead of ilasertargetblock .
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
set expiration messages period to zero in MemoryLimitTest . java to ensure that the test behaves correctly for large pages
removed null checks and simplified conditionals in RequestHandlers . java to improve code readability and maintainability
modified the way the servlet name is returned by replacing hyphens with a dot to ensure proper formatting of servlet names in the log output
added imports for Google Maps and Maps , and modified how Python module search paths are handled in ProjectBuildFileParser to enhance code clarity and
updated audio frame size calculations and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness and robustness of audio
updated the return logic in ElasticSearchStringLookupService to handle null enums gracefully to ensure proper handling of null values and avoid potential NullPointerExceptions
updated error message formatting in CommitLogReader . java to improve clarity of error reporting for better debugging
added policy assignment from containerScope to WebSocketSession to enable dynamic configuration of the session ' s policy
simplified the initialization logic for static fields in the Java to TypeScript translation to improve code readability and maintainability by eliminating
replaced UI _ DIR with webroot in StaticHandler instantiation to allow dynamic configuration of the web root path
test : migrate swagger - generator - spring - boot to junit5 ( # 1745 )
use netbeans api instead of registry to check if a vm be attachable .
updated method names from ` printHeaderObject ` to ` createHeader ` in multiple classes to improve clarity and consistency in header creation
replaced individual trade DTO imports with a wildcard import and added a method for placing stop orders to streamline import statements and implement a
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper resource management and prevent memory leaks
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to prevent potential NullPointerException when mSourceView is null
updated the condition for ` decExp ` in ` FloatingDecimal . java ` from ` less than or equal to ` less than ` to
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure correct behavior of property
removed maxVersion parameter from version retrieval in RealTimeGetComponent . java to simplify version retrieval by directly using nVersions
updated the ORIGIN header handling in NettyRequestFactory to conditionally set the origin based on the URI ' s secured status to ensure
updated animation methods in RecentsView , TaskView , LayoutUtils , and TaskView to utilize modal animations to improve user experience by
updated error messages and method calls in ORCRecordReader . java to include the field parameter to improve clarity of error messages and enhance code
added new HLS sample entries for TearsOfSteel and Basic 4x3 in DemoUtil . java to enhance video
updated interface names in PersistenceProvider . java for consistency and clarity to improve code readability and maintainability by standardizing naming conventions
updated log initialization to use the correct class name for ExecRPCInvoker and HBaseRPC to improve clarity and consistency in logging context
added diagnostic logging and a new test class for compiling union types with fixed fields to improve error handling and ensure correct compilation of generated code with
refactored session creation logic in ` WebSocketEndpoint . java ` and added a new test in ` WebSocketIT . java ` to ensure session
updated delay values and method names in multiple service classes for better clarity and consistency to improve code readability and ensure consistency in naming conventions
updated OpenSymphony Group references to Apache Struts in XmlConfigurationProvider . java and LocationAttributes . java to ensure compatibility with the Apache Str
added conditional checks for stream stopping in WebCamInputPanel . java to ensure proper handling of video tracks when stopping the stream
changed the type of chartData from List to ArrayList in BittrexChartDataResponse . java and added a new enum BittrexChart
update geotools dependency to late version of geotools
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` TargetType58 ` class to streamline the
hhh - 10956 - fix nullpointerexception when composite id property have no identifier
rename ` ` find full text ' ' to ` ` download full text ' '
updated URI registration logic to include host and port details from DTOs to improve URI management by including host and port information for better debugging and
refactor WebSocket mapping and upgrade filter classes to improve code organization and maintainability
added a check for the presence of the OSDb hash before fetching it and changed List to ArrayList to improve robustness by avoiding potential null
added token transfer functionality in ` RuntimeImpl . java ` and a corresponding method in ` MUtil . java ` to enhance contract token management and ensure
camel - 14850 : ftp operation should only delete file in stepwise mode
updated searchBindPassword method to use getSearchBindPassword instead of getSearchBindDN to ensure compatibility with the updated search bind password configuration
added validation for ` JoinResult ` in ` MapJoinOperator ` and introduced ` BloomFilter ` in ` HybridHashTableContainer `
updated HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint parameter and added getter methods for local address , host , port , and remote address
added " id " extra to intent in multiple adapter classes to enhance data integrity by associating tweet IDs in the intent
added proxy authorization handling and refactored disconnect logic in HttpURLConnection . java to improve connection management and ensure proper response handling for non - proxy users
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` in ` TraceContext ` to ensure thread - safe incrementing of
refactor various Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
disable the test for ValueTypeTests by setting the enabled attribute to false to improve test reliability by preventing unnecessary exceptions
resolve split - packages : move everything from kie - api under org . kie . api and move class directly under org . kie
replace ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` in multiple predicate classes to improve clarity and consistency in predicate
replaced AccountNotFoundException handling with a generic Exception catch in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling and provide clear
added null check for witnessService before validating the witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) for improved clarity to enhance code readability and maintainability
added a check to ensure the JavaDoc is not present before setting it to avoid potential NullPointerExceptions when the Javadoc is not present
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` to improve clarity and
replaced calls to revalidate ( ) with revalidateWithAnimationSafety ( ) for improved animation handling to enhance responsiveness and
[ hotfix ] [ schema ] return an unregisteredmetricsgroup instead of throw an unsupportedoperationexception
updated the calculation of the y - coordinate in the Polygon class to improve accuracy of the y - coordinate by using an old value
updated cache creation method to use a specific Configuration type to improve type safety and clarity in cache configuration handling
added a length check for stringConstant before comparing with ' / ' in InheritanceUnsafeGetResource . java and created a new class Bug29
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie handling
added authorization checks for external table dropping in Hive and implemented the disallowWriteAccessViaAcl method in TestStorageBasedAuthorizationProviderWithACL to
added a closing brace to the conditional statement in Stage . java and corrected the position in ProgressBar . java to improve code readability and ensure proper
sulong : cache byte array support for sulong language .
update PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windows
updated the ` initWebViewLogin ` method to accept a URL parameter and modified its implementation accordingly to enhance web view login functionality by allowing dynamic
corrected a typo in the error message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity
updated the ` @ RequestParam ` annotation in ` AuditEventsMvcEndpoint . java ` and modified tests in ` AuditEventsMvcEndpointTests . java
rename ` ExponentialTimer ` and ` ExponentialTimerBeanInfo ` classes to ` PreciseThroughputTimer ` and ` PreciseThroughputTimer
removed and re - added soft body management in SoftBodyTest . java to ensure proper cleanup and resource management of soft bodies
[ hotfix ] [ table - planner - blink ] make interface public
[ zeppelinhub ] improve logging in zeppelinhubclient , zeppelinhubwebsocket , z
add test to ensure that the element ' s namespace do n ' t duplicate
fix npe in createcrafting ( ) , make sure redplasma be not null
added HTTP / 2 headers handling in BareResponseImpl and updated HelidonConnectionHandler to use HttpToHttp2ConnectionHandler to
updated plot member removal logic to check for existence of UUIDs before removing them to improve clarity and maintainability of the code by elimin
updated string concatenation parameters and formatting in SimpleReport . java to improve readability and maintain consistency in output formatting
removed the ` - XDignore . symbol . file ` option from ` JavapFileManager ` and modified its usage in ` J
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and modified access modifiers in the ` start ( ) ` method to improve cl
added null checks for contract and contract address in contract creation and validation to improve error handling and provide clearer error messages for invalid transactions
g3d : do n ' t use input3d . createinput3d ( ) in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable integration tests for better performance
change scripttagpayloadreader . parsepayload to return false instead of throw parserexception
changed the method signature of getRepositoryFactoryClassName from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName to ensure compatibility with the updated implementation of the method
changed return types of getExecutableCommand methods from String to List < String > across multiple classes to allow for more flexible handling of command strings
replaced instances of ' this ' with a direct reference to the IOSGLES20 class to improve code readability and maintainability
removed the UploadPathActivity class and related imports from the codebase to streamline the codebase by eliminating unused components
updated return statements in SimpleTextFieldsReader to conditionally return values based on index options to ensure accurate retrieval of total and sum term frequency based
fix ( jdttreebuilder ) : implicit constructor should not be add to constructor declaration
updated populateValidateNullableIfNeeded , populateValidatePrimaryKeyIfNeeded , and populateValidateUniqueIfNeeded methods to include a Database parameter to ensure compatibility with Oracle databases
refactor Database class to improve code structure to enhance maintainability and readability of database operations
refactor SpringApplicationBuilder class to improve code organization to enhance maintainability and readability of the codebase
updated iterator assignment in PointInSetQuery . java to ensure consistent reference to sortedPackedPoints to improve code clarity and maintainability by
updated the mapping logic in SchematicHandler . java to trim leading and trailing spaces from rawName to improve clarity and correctness of
added case handling for collection types in AbstractCollectionAssert . java and updated return statements in CollectionAssert _ isUnmodifiable _ Test . java to improve
changed the ` Option ` enum from static to non - static in ` ProcessExecutor . java ` to allow the ` Option ` enum to be
added a twitlonger confirmation dialog in Compose . java and removed it from ComposeActivity . java to enhance user experience by providing
replaced the toggleKeepInSync method with a direct file synchronization approach using CheckBox to streamline file synchronization process and improve code readability
replaced javax . xml . bind . DatatypeConverter with java . util . Base64 for Base64 decoding in ImageUtil . java and added
added new classes ControllerCounter and DBCallback in the datastore package to provide a mechanism for tracking controller counts and database operations
added ' final ' keyword to the ticketId parameter in the deleteTicket method to improve code clarity and enforce immutability of the ticket
added a new file FlywayMigrationRunner . java to initialize Flyway application context to facilitate testing of flyway migration
replaced instances of ` isEmpty ( ) ` with ` size = = 0 ` in HashMap and added a new class ` OverrideIsEmpty `
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
updated the ` modify ` method to accept a nullable ` EnumSet < Modifier > ` parameter and added a warning log for missing ORC compression modifiers
refactor main value retrieval and enhance error handling in LauncherHelper , TestHelper , and TestHelper classes to improve robustness and provide clear
updated class names in integration test files to follow a consistent naming convention to improve code readability and maintainability
rename jvmci _ ir _ node _ count and jvmci _ ir _ size to jvmci _ ir _ size and jvmci _ ir
pdfbox - 4892 : remove cloneable from cellcopypolicy , a suggest by valerybokov
added a method to reset the icon load result in FloatingIconView . java and invoked it in Launcher . java to ensure proper resource
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to retrieve
refactor IconRecentsView to handle different screen orientations and adjust item margins accordingly to improve layout handling for different screen orientations and ensure
deleted the AddAdapter . java file to remove unused code to streamline the project
fix a bug in nonstatic lifter that occur when the constructor list be empty .
modified the constructor of ` OpTraitsRulesProcFactory ` to include a ` processSortCols ` parameter and adjusted the logic for processing sort columns
refactor LogWatcher handling in TestLogWatcher . java to improve message validation to ensure that no messages are found when a new watcher is registered
added a print statement to the Java2TypeScriptTranslator class to facilitate debugging output during the translation process
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
set SPRING _ AOP _ PROXY _ TARGET _ CLASS to " true " in the environment if it does not already exist to ensure
removed the singleton lock check from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary configuration
improve documentation for expectation callback
refactored ` writeFile ` method to include an ` appendToFile ` parameter and added a new method ` appendToFile ` to improve file writing
updated MavenExecutionContextView to check if mavenSettings equals settings and modified MavenRepositoryMirror to return the mirrors instead of an empty list to
added an ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` constructors and updated related classes to utilize it
updated the redirect URI comparison logic in ` OAuth20CallbackAuthorizeEndpointController ` and added a new test in ` OAuth20CallbackAuthorizeEndpointController
refactor annotation handling by introducing a new method ` AnnotationParser . toArray ` to improve code readability and maintainability by centralizing annotation
updated method calls in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawable
updated the default value for the " line . separator " property in GlobalConfiguration . java to provide clearer guidance on how to set the
fix bug in configurationmanagerutils . isderivedclass ( ) and add test in cmutests .
[ thymeleaf ] add an input sanitization to the server and server name in the model .
chore : update java and python dependency ( # 139 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and added logic to read and write output
refactor CountersReader to improve code readability to enhance maintainability and facilitate future development
updated containerType assignments in AllAppsRecyclerView and modified logDeepShortcutsOpen method to accept a View parameter instead of an integer to improve
hbase - 15913 add deprecation warning for config key hbase . ipc . server . reservoir . initial . buffer .
[ native ] fix bug in creation of hashnode ( kleftsemiproject )
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types and updated references to use this new method to improve
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future development
pdfbox - 4892 : do n ' t use y label for input box , a suggest by valerybokov
hbase - 13686 increase the size of region increasingtowupperboundregionsplitpolicy from 4 to 8
removed unnecessary model method calls in LauncherClings . java to streamline the code for improved readability and maintainability
refactor ManagedSelector to initialize keys and updates lists directly instead of assigning them to improve code clarity and maintainability by eliminating redundant
added an excludedDatasources field and a method to set it in SpringDataSourceBeanPostProcessor to allow configuration of the list of excluded datasource types
make sure undo point be store after delete a column
( chore ) camel - kinesis : improve error handling for kinesis proxy
refactored channel triggering logic in VelbusSensorHandler to use a loop for multiple channels to improve code readability and maintainability by
disable unfavorable benchmarks in LocalCacheSelectorCode and update delayable logic in BoundedLocalCache to improve performance by preventing unnecessary
added a test for illegal database names in IoTDBSessionSimpleIT . java and threw an IllegalPathException in PartialPath . java to ensure
added a call to ` resetNewFiles ( ) ` in ` GarbageCollector . java ` to ensure new files are reset after garbage collection
rename ` desiredWorkspaceLeftRight ` and ` desiredWorkspaceLeftRight ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and ` desiredWorkspaceHorizontal
refactor whitespace and formatting in CharTokenizer . java for consistency to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 436 )
rename xenserver _ network _ label to xennetworklabel to avoid confusion
updated libGDX version from " 1.5 . 5 " to " 1.5 . 6 " and libGDX nightly
removed the ` metricNames ` set and its getter method from the ` SolrCore ` class to streamline the code by eliminating unnecessary
replaced ` URI ` with ` Path ` for working directory and absolute path in ` MavenManifestFactory . java ` to simplify path handling and
replaced the direct check for " mac " with a static final boolean variable IS _ MAC to improve code readability and maintainability by central
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added logic to clear and add slot lists in the Frame class to improve the management of slot data in the application
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count to ensure a default value is used for
added configuration properties merging logic in ConfigurationSpringInitializer . java to enhance property management for better configuration management
updated the setupLogging method to accept a SLF4J logger instead of a Logger instance to ensure compatibility with the latest SLF4J
replaced instances of HashMap with LinkedHashMap in multiple Java files to ensure consistent ordering of keys in the data structure
added logic to retrieve the superclass of a class if it is null and the type is an instance of Object to ensure proper handling of class types
added debug logging for writing items in Hibernate , JPA , FlatFile , and JMS item writers to improve traceability and traceability of
replaced the method of parsing language range from a string replacement to a wellformed string to improve clarity and correctness of language range parsing
refactor handler execution in Http2ServerResponseImpl and update context handling in Http2Test to ensure proper context management during server operations
add a cache to the xssfevaluationworkbook so that it can be reuse .
updated schema text detail type checks and modified symbol assignment logic in BaseSchemaTextFormatter . java to improve clarity and correctness of schema text
updated MongoFactoryBean references to MongoClientFactoryBean and MongoClient in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB
replaced instances of HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure consistent ordering of elements in the collections
added a check to ensure the operator tree is properly cloned before proceeding to prevent unnecessary operations from being cloned
added a null check for the client ID in DynamicRegistrationClientConfigurationService and modified JsonFileRegisteredClientService to use ClientDetailsEntityJsonProcessor
fix achievement list not be clear . close # 187981
initialize userName , productName , productVersion , driverClassName , driverVersion , and connectionUrl fields to empty strings in MutableDatabaseInfo and Mutable
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottom
added support for reading long values into ByteBuffersDataInput and ByteBuffersIndexInput classes to enhance data processing capabilities and improve error handling
updated UnixFileAttributes . java to include additional fields for time - related attributes and refactored time conversion logic to enhance clarity and accuracy
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection of humongous references to
added a search visibility toggle in the AllAppsContainerView to control the visibility of the search container based on user preferences to improve user experience by
updated the method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java `
added null checks for ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action for reloading the current page in the menu to enhance user experience by allowing navigation to the reload page
changed log level from info to warn for specific log messages in SQLManager to provide more informative log messages for missing entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is selected before proceeding
use serviceloader . load ( ) instead of factoryregistry . lookupproviders ( )
added a method to close the table in the finalize method to ensure proper resource management and prevent potential memory leaks
added a method to stop the statement executor and logging statements in JdbcConnector , HiveViewImpl , and JdbcConnector classes to improve resource management and
updated XML parsing features to enable and disable external DTD loading in DocumentFactory and XMLSAXHandler classes to improve XML parsing flexibility and
replaced JdbCommand . waitForPrompt with jdb . contToExit and modified output verification in JdbStopThreadidTest . java
added a new implementation of the ` getType ` method in ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide functionality
replaced instances of ` runnable ` with ` Future < ? > entry ` in the ` ExpressionThreadPoolManager ` class to improve type safety and
updated the property key from " port " to " vertx . httpPort " in HttpTestBase . java to improve clarity by using
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to simplify listener registration for better usability
increased DEFAULT _ BATCH _ SIZE from a fixed value to a dynamic value based on available processors to improve flexibility in batch size
added error handling when establishing the Resource Manager connection in TaskExecutor to improve robustness by logging exceptions during resource manager connection establishment
initialize classFile to null and modify exception handling in LambdaRewriter . java to improve null safety and simplify error handling for class loading exceptions
updated the error message in IllegalArgumentException for min and max to include min and max parameters to improve clarity of error reporting for better debugging
updated method signatures to include an owner parameter for better context in message handling to enhance type safety and clarity in message processing
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` in the com . codename1 . db package to provide a
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 1193 - enh : add setbeanid ( ) method to ebeanserver . setbeanid ( object bean , object
replaced hardcoded string " tools / xslt / add - menu - to - site - descriptor . xsl " with a method call to get
added a list of request matchers to the HttpSecurity class to enhance request matching functionality by allowing multiple request matchers
added hashCode and equals methods to ContactResource class to ensure proper resource comparison and hashing for ContactResource instances
move getrequest ( ) and getresponse ( ) from abstractajpprocessor to abstracthttp11processor
updated log messages in FileManager . java for clarity and consistency to improve readability and maintainability of the logging output
added tearDown method to TestIndexSearcher and reset mockControl in TestJdbcDataSource to ensure proper resource cleanup and optimize during tests
added import statement for LambdasWithInterfaces and removed redundant assertions in SyntaxTests . java to streamline code and enhance readability by standard
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
replaced the implementation of the ` ParserDecorator ` with a new ` FallbackParser ` using ` MediaTypeRegistry ` to enhance compatibility with multiple parsers
update fmlsecuritymanager # getcallclasscontext to check for the correct class context .
simplified variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in the CoreAdminApis class and modified the RENAME method to include a
added a new test case for JSX comments in JsLexerJsxTest . java and refactored parser logic in Parser . java to
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for testing purposes
added a new test method to verify error handling when Buck configuration is missing and updated error assertion methods to improve error reporting and provide clearer
added physical memory checks to TestStringBufferAndBuilderGrowth . java using OperatingSystemMXBean to ensure that the machine has sufficient physical memory
marked ` conversionService ` as deprecated and updated method calls in ` MapToLocalDateConverter ` to improve code clarity and adhere
added a success flag to the HiveMetaStoreClient class to indicate that the operation was successful
updated the condition check from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and
updated conditions to check for both " vine . co / v / " and " amp . twimg . com / v / " in
added a @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should not be used
rename ElementType and Target classes to improve clarity and consistency in naming conventions
added references to REF _ invokeStatic and REF _ invokeSpecial in MemberName . java and updated assertions in MethodHandleNatives . java to
updated the default value of the ` submitKeyUpdates ` variable from " false " to " true " and added synchronization around the ` runChange
bug fix : replace old text if edit start with pressed character
camel - 16400 : fix issue with bean expression with static method use wrong bean name .
refactor multiple Java classes related to benchmarking to improve code organization and maintainability
refactor exception handling in AgentRunnerTest for clarity and consistency to improve code readability and maintainability
added ` getDescription ( ) ` method to multiple classes and updated return statements in several files to provide clearer descriptions for better clarity in the
replaced references to ` activeGroup . faces ` with a local ` faces ` variable and added checks for ` hasNorms ` and `
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
replaced instances of ` reentrantLock ` with ` lock ` in multiple Java files to standardize naming conventions and improve code read
updated ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes to include
update back ( ) method to accept event component as a parameter to ensure the component is properly associated with the event
do n ' t call tlsauth ( ) if the server ca n ' t verify the server certificate .
updated method signatures in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to use generics for better type safety to improve code clarity
updated references from NutchConf to getConf in multiple Java files to improve consistency and maintainability of configuration management
fix issue with sheet assembly tab deselection and add a check for late stub
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for easier testing
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java to avoid potential NullPointerException when time interval is not set
removed the " - logLevel INFO - serverPort " argument from the command in MockServerContainer . java to simplify the command configuration for improved
updated error logging to include exception messages to improve error reporting for better debugging and debugging
move robotshatonoringpolicy to crawldocumentmetadata so we can use it .
added JUnit ` @ Ignore ` annotation to ` ITSystemTest . java ` to temporarily disable tests during development
test : fix test failure on window
added a method ` alternativePath ( ) ` to the ` ExpectNewDemo ` class that returns an empty ` ByteArrayInputStream ` to provide a way
updated input initialization to use getFirstFilter ( ) instead of a direct call to input . init ( ) to ensure proper initialization of the first filter
[ java ] add protectiondomain parameter to bufferalignmentagent constructor .
added dispose ( ) method to properly release resources in WaterRipples . java to ensure proper resource management and prevent potential memory leaks
added a configuration option to disable semi - join optimizations based on external table operations in Hive to allow users to disable certain optimizations and optimize
updated the authorization header description in TokenKeyEndpointDocs . java to clarify the required authorization requirement for public keys
modified wallpaper offset settings in Workspace . java and adjusted scroll range in Workspace . java to ensure proper visibility of the wallpaper in the launcher
change return value of SybaseASADatabase . java from false to true and modify SequenceSnapshotGenerator . java to handle SybaseASAD
nifi - 1646 : putsql should not commit or rollback on cleanup if autocommit be set to false .
added error handling for file creation and existence checks in SnapPuller . java and updated tests in TestReplicationHandler . java to ensure proper
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure correct identification of
[ java ] allow framer . frame ( ) to be call with an output buffer .
removed unnecessary parameters from the OAuth2LoginAuthenticationFilter and OAuth2AuthorizationRequestRedirectFilter constructors to simplify method signatures and improve code readability
added extended parameter documentation to the GenericUDFStringToMap class to clarify the functionality of splitting text into key - value pairs
updated the ` PlainFormatter ` class to use ` java . time . temporal ` for instant formatting and removed the ` formatInstance ` method to
updated the timeout duration in the close method from 1000ms to 3000ms and added a retry mechanism for closing the agent to improve resource management and
hhh - 13434 remove use of reflection from bytebuddy in classloadingstrategyhelper
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
updated log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log message
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that produce at least one sample result
updated the error message to specify that rows and columns must be greater than zero to clarify the requirement for non - zero rows and columns
wagoncart : fix npe in decisionnode . getfeaturevalueasstring ( ) and wagoncart . get
added functionality to sort BoundSheetRecords by their positions in XLS2CSVmra and TestBOFRecord classes to improve sorting of sheet records
refactor thrust calculations in ThrustCurveMotor . java for improved clarity and accuracy to enhance code readability and maintain
niftyjmedisplay : fix niftyjmedisplay so that niftyjmedisplay do n '
refactor hash code field offset calculations in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code read
remove deprecate getmesh ( ) from block
[ hotfix ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added option ` EMPTY _ WORD _ OPTIONS ` to ` LineReader ` and modified matcher logic in ` LineReaderImpl ` to improve handling of
skip write _ commit _ log when push view replica update
added a new constant ` KEY _ AUTO _ OPEN _ WEB ` and implemented ` getDefaultButtonID ( ) ` method in ` ResultHandler `
added a test for batching operations on a Board entity in JoinedTableTest . java to ensure that batching functionality works correctly for
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps during persistence failures
removed the deprecated ` format ` method from ` CucumberOptions ` and updated related references in ` RuntimeOptions ` , ` RuntimeOptionsFactory
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified the back key handling in ExtendedEditText . java to improve code readability and maintainability
corrected the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new ` Capacity . java ` class with methods to
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to update the
added support for extraction of endnotes from a paragraph in the XWPF document to enhance functionality to support additional endnote relationships in XML document
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event tracking by including client information
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify GDAL versioning functionality to ensure compatibility
added a new file ` Lifecycle . java ` to implement network error handling in the application to provide a mechanism for managing network - related errors and
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 404 on tomcat
removed unused imports from BodyTubeShapes and RocketFigure classes to streamline code and improve maintainability by eliminating unnecessary dependencies
added support for retina screen scaling and updated viewport and scissor calculations in PJOGL . java to improve performance and flexibility in
add an option to auto - select offline when create project ( # 5449 )
updated DiskDocValuesConsumer to use BlockPackedWriter instead of FormatAndBits and introduced a new BLOCK _ SIZE constant to improve performance and
camel - 16463 : make route sort by status in the routebystatus field .
removed unused data list and stream processing in GoAwayTest . java to streamline code and improve readability by eliminating unnecessary data
added support for setting properties using FluentPropertyBean in ReflectionUtils and created a new FluentSetterBean class to enhance flexibility in configuring fluent bean
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to use ` Charsets ` and ` Callable ` , and introduced a new ` HttpResponse
( chore ) camel - filesorter : fix test that fail on window
replace lastAppearedTaskTarget with getLastAppearedTaskId ( ) in GestureState . java to improve clarity by using a
add a new option to enable the writing of image / image scaling information in the rtf file
added aggregate function name handling in TSServiceImpl . java to ensure correct handling of aggregate function names in the output
updated test classes to extend from ` WithNestedTest . AbstractNestedTest ` instead of ` LuceneTestCase ` and added cleanup method to
added functionality to enable or disable XCap configuration in PresencePanel to enhance user experience by allowing dynamic configuration of XCap server URI
add a new constant for handle exception and modify error handling logic in the Dispatcher class to allow customization of exception handling behavior in dev mode
added methods to stop text editing in CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to improve user experience by ensuring
nifi - 1643 : allow controlrate . grouping _ attribute _ name to be set to null if group do not exist
add ` ` always open preset ' ' checkbox in component preset chooser dialog
http : / / issues . apache . org / jira / browse / amq - 3877 - fix race condition when send message to
added a check for Windows OS type in HTMLDataFlavorTest . java to ensure tests are only executed on Windows to avoid execution issues
added SQL _ SERVER _ SNAPSHOT transaction isolation level to TransactionIsolationLevel . java to enable SQL server snapshot management in the application
replace ` put ` with ` offer ` in ` AsyncWriteEngine . java ` to manage concurrent addition to ` newRecids ` to ensure
[ java ] use java . util . zip . zipfile instead of jrecompat . getinstance ( ) . jarfilenewinstance ( )
added null check for the command class before creating a regexRegisteredService instance to prevent potential NullPointerException when the command class is not set
change default disk _ failure _ policy to ignore and add ' ignore ' to cassandra . patch by jbellis
remove the ' public ' access modifier from ripperinterface . rip ( )
updated filter logic in PeerDiscoveryAgent . java to include IPv6 address validation to ensure only valid IPv6 addresses are processed for filtering
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to simplify the code by eliminating unnecessary method
updated import statements in PinotSegmentRebalancer . java and modified the computePartitionAssignment method to include ClusterDataCache to improve code organization and
simonstewart : add support for auto - removal of container
simonstewart : fix parsing of command with illegal argument
fix flaky createglossarytests by add retry
update references from ` $ ref ` to ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java `
updated EntityDeletedEvent to utilize JsonUtils for JSON serialization and refactored assertions in IdentityZoneEndpointsMockMvcTests to improve code read
added a new constant MI _ GOP and a conditional check in FormatConfiguration . java , and updated LibMediaInfoParser . java and Lib
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of the behavior of
added locking mechanism to manage concurrent access in ParseConfigUtils . java to ensure thread safety when accessing multi - dimension items
add acquirereleasecolumnssegmentoperator to prevent memory leak in minmaxvaluebasedselectionorderbycombineoperator
simonstewart : unignoring the firefox profile test until we can fix it
updated the return type of ` getSystemBars ` method from ` Map < String , String > ` to ` Map < String , Map <
do n ' t call ` projectstats . addbug ( bug instance ) ` when the bug instance be n ' t dead
bugfix # 203322 , use color . disabledshadow instead of color . disabledforeground when import from gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code and improve readability
added a check for empty Recurrence by days in the ScheduledAction class and created a corresponding test case to ensure that the next time based on
refactor upload button handling in ShareActivity to use a menu for single upload functionality to improve user experience by enabling single upload functionality in the
refactor multiple classes related to message expression handling to improve code organization and maintainability
added a method to load exchange metadata from an InputStream in MeXBTExchange and RippleExchange classes to enhance data loading capabilities for exchange
added a custom serializer for Hadoop Writable types in CrawlDbReader to enable proper serialization of Hadoop data types in JSON processing
remove unused test class from testjaspicbasicauthenticator . java
updated the @ Component annotation in MDNSDiscoveryService . java to include a service configuration pid to ensure proper configuration management for the MDNS service
added null check for messageItem before scrolling to the position in ChatViewerFragment to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to use a worker thread for thread synchronization to improve thread management and prevent
added assertions to check dependencies for DATANODE and NAMENODE in RoleCommandOrderTest . java to ensure proper validation of blocker roles in
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and modified the ` writeObject ( ) ` and ` dedupWithTableInfo
standardized spacing in conditional statements across multiple files to improve code readability and maintain consistency in formatting
added transformation matrix and updated logo sprite flipping behavior in BitmapFontTest . java to improve sprite rendering and ensure proper icon flipping behavior
added a check for built - in aggregations in the StreamPhysicalPythonGroupWindowAggregateRule to ensure that aggregation calls are not considered as Python
added a volatile boolean field ` hasPendingEcho ` and modified related methods in ` EndpointState ` , ` Gossiper ` , and
fix race condition between storageproxy and gossiper . getunreachableendpoints
geosymbolictest . testmultiply should not change to multiplication
refactor content type handling in FormAuthenticator and add content type getter / setter in SavedRequest to improve flexibility in content type management and
changed variable access modifiers to private and initialized display variables in XToolkit . java to improve encapsulation and ensure proper initialization of display variables
refactor RecommenderJob and AbstractJob classes for improved organization to enhance code maintainability and readability
refactor metaLock to use ReentrantReadWriteLock for improved concurrency management to enhance thread safety and prevent potential deadlocks
added a test method to read an identity provider in another zone using a Zones token to ensure the correct handling of identity providers in different zones
updated job scheduling in ObjectTypeNode . java to use ExpireJob and added null check for timestamp in PointInTimeTrigger . java to improve
removed the import of ` org . jasig . cas . authentication . principal . Service ` from ` SendTicketGrantingTicketActionTests
[ rip - 10 ] send heartbeat to all broker when rebalance be change
add cairo . detached . mkdir . mode configuration property ( # 5097 )
[ java ] send message to slow down service when there be a slow follower .
change default label from ` ` [ author3 ] [ year ] ' ' to ` ` [ auth ] [ year ] ' '
updated dependency handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing time dependencies to
refactor OAuth service management in GoogleCloudAPI and add dispose method in GoogleTTSService to improve resource management and ensure proper cleanup of the
camel - 7017 : fixed file consumer do file not work when file name be dynamic . thanks to martin rao for
added a new configuration option ` ` mainIndex / reopenReaders ' ' in ` SolrConfig ` and modified the condition in ` SolrCore `
add dialect version to mapwriter and freeplaneversion
added methods ` currentDate ( String key ) ` and ` currentTimestamp ( String key ) ` to the ` Update ` class and corresponding tests
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest .
refactor Condition interface and its implementation to use lambda expressions to improve code readability and maintainability
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve search performance by using a
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve readability
added a method to retrieve direct nearby upload preferences and modified the ` providesUploadController ` method to utilize it to enhance the functionality of
added support for the database mode ` sysDummy1 ` in the ` Mode ` class and implemented corresponding tests in ` TestCompatibility ` class to
refactor logging statements for improved readability and consistency in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to enhance code clarity and
added lastPid tracking and updated related methods in POIXMLProperties to improve property management and ensure proper handling of custom properties
[ geotiff ] fix for nan nan in getmin ( )
updated import statements and refactored the executeDriver method in CliDriver . java , and modified return statements in SessionState . java to improve
replaced ` Executor ` with ` Scheduler ` for HTTP execution in ` MockRestAdapter . java ` to improve flexibility in handling unsubscribed
added a default method ` selectByRuleIdSet ` and a new method ` selectByRuleIdSet0 ` in ` RuleConditionMapper
added a new method ` addExitDescription ` to ` ExitStatus ` and updated usage in ` AbstractJob ` and ` AbstractStep ` to
fix npe in multiblockrenderhandler . onrightclickblock ( ) when the player be the minecraft player .
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity by indicating the purpose of the
removed an unused import statement in PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` for improved alert handling to enhance
replace params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) in PythonUtil . java to ensure the correct build target is
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and
added an assertion to check that the service message is not null to ensure that the service message is correctly retrieved from the service
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` and simplified key handling logic in ` MappingMongoConverter . java `
updated Timber logging statements for clarity in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 14850 : camel - core - optimize to reduce object allocation in camel context
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields to enhance robustness by avoiding potential
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for tabular list handling to improve clarity and functionality of application list display in
[ ds - 3752 ] use getidentifierservice ( ) instead of getservicebyname ( ) in createmissingidentifiers .
updated the method call from ` bytes . length ` to ` bw . getLength ( ) ` in ` assignBytes ` to ensure the correct length
replaced the abstract method ` getDisplayScript ` with a concrete implementation that returns ` null ` in ` LocaleNameProvider ` to provide a default
replaced keyToPress and keyToRelease with CharSequence sequence values in RemoteWebDriver . java and updated the @ Ignore annotation in BasicKeyboard
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added synchronization and error handling in NetworkConfigurationWatcher . java and added null checks in NetworkManagerListenerImpl . java to improve network connection management and
refactor HSSFWorkbook to use a new method for retrieving embedded objects and add tests for reading nested objects to improve code clarity and
removed unused import of Shdr from Shdr . java to clean up the code and improve readability
updated variable names from hostParams to roleParams for consistency to improve code clarity and maintainability by using a more descriptive variable name
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbols in
use gl11 . glpopattrib ( ) instead of glstatemanager . popattrib ( ) in modelhourglass
refactor LiveTvGuideActivity to use a consistent calendar instance and improve date handling to enhance code clarity and maintainability by using a
updated method invocation in MockGateway and added new classes CommonParentTest , ChildA , ChildB , and Parent in the class hierarchy to improve
added dlopen calls for libfreetype . so and libfontmanager . so in JREUtils . java to facilitate
[ fix ] multi - variable function do n ' t work correctly .
loop safepoint elimination : add guard support for unsigned range guard
[ j2kt ] fix ` ` instanceof ' ' handle in type analysis
added a new ` LocalizedString ` class and refactored method arguments in ` Attr . java ` , ` Attr . java ` ,
added a ` disableClasspathSearch ` property and its getter / setter methods in ` ServerConfig ` , and updated the condition in ` DefaultContainer
changed fields to be final and replaced System . arraycopy with Arrays . copyOf for array initialization to ensure immutability of the formats array and prevent
updated the default retries value from 0 to 2 in multiple classes to increase the retry limit for better resource management
added support for loading settings from a file in TexturePacker . java and updated usage instructions to include a settings file parameter to enhance functionality by
updated ` AchievementsFragment ` to use ` AppCompatTextView ` for displaying uploaded and used images instead of progress bar to improve
added mock logging and tracing methods in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing behavior
added a new ` CategoryInfo ` class and updated the ` generator ` parameter in ` CategoryInterface . java ` to include ` categoryinfo `
simplified assertion messages for username and password in AuthzAuthenticationRequest . java to improve code readability and maintainability
added accessibility settings and refactored timeout alarm logic in TaskbarStashController . java to improve accessibility support for taskbar visibility
added a condition to check if the signature contains the ' ^ ' character and throw an exception if it is already thrown to ensure that NoSuchElementException is
updated access flags in ClassVisitorDriverFromElement and added multiple unit tests in StubJarTest for stubbing various Java constructs to ensure correct access
replaced direct assignment with ` Objects . requireNonNull ` in ` IntervalFilter ` and added null check in ` LowpassIntervalsSource ` to ensure
added tests for entry set iterator behavior in MapInterfaceTest . java to ensure that the iterator correctly handles unsupported operations and NoSuchElementException
added a serialVersionUID field to TreeMap . java to ensure proper serialization compatibility for the TreeMap class
update image creation time from milliseconds to seconds to ensure accurate representation of image creation time
use locus2d instead of locus2d for singular feature
added functionality to delete private and public keys for accounts in AccountRemovalJob to ensure proper key management for accounts in the application
do n ' t use hard - coded ' keep - alive ' for http connection when connection pooling be disable .
fix postjoinmapoperation when map have no interceptor and lite member join
update inlining processor for text , javascript , and css in standarddialect .
removed the ` spillEnabled ` parameter from several ` BaseHybridHashTable ` , ` BinaryHashTable ` , and ` LongHy
refactor environment variable handling by introducing new methods for case - insensitive environment retrieval to improve code readability and maintainability by encapsulating environment
add check to prevent nullpointerexception if extension be null
added import for SerializableMode in Mockito . java and removed an unnecessary closing brace in PluginSwitch . java to ensure compatibility with SerializableMode and
make the field injection point optional when set a bean by default .
added support for isolation level in select statements in database compatibility to enhance flexibility in SQL query parsing based on database compatibility settings
added new constants for Hive server configuration variables and updated references to use these constants to improve code readability and maintainability by reducing hardcoded
added an implementation of the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` to ensure that the query is not
added a new file TestStrangeControl . java that contains a thread executing StrangeControl . test ( 42 ) to demonstrate
updated build target file names from " json " to " jsfile " and " jslib " in JsFile . java and JsLibrary .
added selection start and end variables and methods to set and get selection positions in ShadowEditText to enhance the functionality of selection management in the Shadow
refactor grpc server initialization to use a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
modified the ` use ` method in ` Jooby ` and ` Router ` classes to accept a ` Class < ? > ` parameter
added a null check for the fst variable in FreeTextSuggester . java to ensure that IllegalStateException is thrown when lookup is not supported at
updated string output formatting and improved jar path handling in T4975569 and T6729471 classes to ensure consistent line endings
added functionality to load and instantiate an AbiWriter class in JavacInMemoryStep to enable dynamic loading of the ABI writer class
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlways
added a check to ensure the service is not stopped before scheduling tasks to avoid potential NullPointerExceptions during shutdown
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor component preset retrieval logic and improve column index handling in ComponentPresetChooserDialog . java to enhance readability and maintainability of the code
removed unnecessary imports of ` BufferedInputStream ` from ` BazaarRepository ` , ` CVSRepository ` , and ` IndexDatabase ` classes
camel - google - sheets : fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory `
deleted files mmm Constants . java and mmm DistanceUtils . java to remove unused code to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve readability and maintainability of the code
initialize jdk . internal . foreign . abi . fallback on image class loader to avoid build - time initialization
fix ( openshift - client ) : add an inline test for create a rolebinding
added logging statements to UaaSessionCookieConfig for session cookie configuration to improve debugging and visibility of session cookie configuration details
updated the calculation of the file name to use the current month ' s day of the year instead of the LOG _ DAYS constant to ensure accurate
2 . x : fix typo in observableblockingsubscribe . terminate ( )
added error handling for invalid options in JavapTask and created a new class T8033711 for testing to improve robustness of
replaced usage of ` collect ( toList ( ) ) . collect ( toList ( ) ) ` with ` toList ( ) . toList ( )
[ hotfix ] [ runtime ] do n ' t log error in taskdriver when shutdown = true
[ flink - 13434 ] [ network ] add support for tiered storage in singleinputgatefactory # geteffectivemaxrequiredbuffers
refactor success status checks in EmailSenderService and MailgunService to use a new method to improve code readability and maintainability by central
added useGL20 configuration to Cuboc and changed LwjglApplication instantiation to enable GL20 rendering by default to ensure compatibility with
remove unnecessary check for voidtype in method . returntype ( )
replaced DefaultSourcePathResolver with SourcePathResolver and updated output handling in OutputMacroExpander . java to improve code clarity and enhance
fix flaky test ` ` no running job ' ' message
added a check to exclude the " \ build \ " directory from the file path in MergeWordsListTask . java to ensure that the file
[ # 7237 ] instructor : instructorfeedbackresponsecomment : fix typo and remove unused method
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that contains a class A with associated methods and a test method to demonstrate object
replaced direct stream skipping with Apache Commons IOUtils methods to improve code readability and reduce potential issues with stream handling
added interceptor logging and improved error handling in ConnectionPool and DataSourceProxy classes to enhance error reporting and provide better debugging information during connection pool initialization
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all exceptions
hbase - 13434 fix lucenewblockcache . getcurrentsize ( ) and lucenewblockcache . get
removed unnecessary check for taskCount in RecentsView . java to streamline code for better readability and maintainability
added a configuration change listener for the routing table in HelixBrokerStarter . java and increased the sleep duration in HelixServerStarter
added CoinmateMetadataServiceRaw and CoinmateStatic classes to retrieve exchange metadata to enable the retrieval of exchange metadata from the Coinm
add validation to ensure systempath refers to $ { basedir } or $ { basedir }
pdfbox - 4892 : save object key only if they do n ' t match
add ptransform . setdisplaydata to allow customization of displaydata . item ( )
replaced instances of ` DefaultSubject ` with ` assertThat ` for null checks in ` SubjectTest . java ` to improve clarity and
disable weak cryptographic algorithms in JSSE configuration to improve security by preventing certificate path validation
add check for sub - commands and group type in optiondata .
update module - info . java files for mmm and ppp modules to enhance module dependencies and improve code organization
added error handling for unknown server errors in the ensureConnection method and improved exception management to enhance robustness of connection handling and provide clearer
set sCheckingEvents to true in LauncherInstrumentation . java and ensure mFinished is null in LogEventChecker . java to ensure proper
refactor exception handling and add methods to close writers and record writers in FileSinkOperator and SortedDynPartitionOptimizer to improve error management and resource
added diagnostic output to the return statement in SchemaGenerator . java to improve error handling by displaying diagnostic information during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths and modified scanning logic accordingly to improve performance by avoiding redundant scanning of methods
updated variable name from ` o ` to ` testInstance ` and added error logging for service initialization failures to improve null safety and provide clearer
[ kotlin ] fix nullpointerexception in routecontexthandler
added ` natIp ` field to ` EkeyConfiguration ` and modified logging in ` EkeyUdpPacketReceiver ` to include IP address
updated imports and refactored buffer allocation in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer classes to
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
updated HttpConnection to conditionally set the HTTP parser state based on header and body lengths to ensure proper handling of Expect headers and bodies in HTTP
[ java ] fix multitimeout race condition in multitimeout . request
avoid overlap with starved sstables during level compaction . patch by jbellis
added a test annotation to the TestOrcTimezone1 class to ensure proper test coverage for the OrcTimezone functionality
updated conditional logic and introduced new methods for matching enabled metrics and timers in Debug . java to enhance matching functionality by allowing sub - strings for enabled
updated the method for retrieving segment mappings and improved error handling in ` PinotSegmentRestletResource ` , ` TraceContext ` , and
modified the renderer retrieval logic in JTable . java and added a new test class Test6888156 . java to ensure proper handling of
added conditional logic to check for the existence of the SHELL environment before adding it to the arguments to ensure that SHELL and BUSY
updated the deleteWithoutSubscriptions parameter from ( 10 ) to ( 1 ) in the DatabaseCleaningService . java file to ensure proper cleanup of
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
removed the call to deleteFilesAfterClose ( ) and updated fileMmapEnableIfSupported ( ) in BTreeMapTest . java to
modified iterator initialization in SortedIntList . java and added a new iterator constructor to improve iterator management and ensure consistent behavior during iteration
added a method to unregister the JMXHelper and modified exception handling to improve JMX management and handle potential exceptions more effectively
increase default writebuffer size for rocksdb from 4mb to 64mb
removed an unused parameter from the constructor of the Style class to simplify the code by eliminating unnecessary parameters
replace ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in the request
[ beam - 9370 ] remove unused json graph from samzarunner ( # 9370 )
update helloaudio example to use jme3 ' s mouseinput instead of jme3 ' s vector3f
update LoopRotateBadNodeBudget . java to improve code structure to enhance maintainability and readability of the code
updated ` convertToMongoType ` methods to accept ` TypeInformation < ? > ` as a parameter across multiple classes to enhance type conversion functionality for better
move inputboxrenderer . iscomplex check out of inputboxrenderer . iscomplex
simonstewart : fix an issue where sendkeytoactiveelement return an empty string instead of an array .
added methods for scaling images and improved error handling in ` AddAndScaleMultiImage . java ` to ensure valid target dimensions and handle transparency
removed duplicate methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker . java ` to
update shift state when a new keyboard be add .
removed the DETECTED _ ACTIVITY constant and its usage in multiple classes to streamline the codebase by eliminating the deprecated activity detection
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed the import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to clarify the usage of unused variables in multiple Java files to improve code readability and provide clearer guidance for debugging
updated error message in WebSocketUpgradeHandler to include response status to provide more detailed information about the upgrade protocol status
updated the assignment of blockMode in P11Cipher . java to improve code readability and maintain consistency in formatting
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
removed redundant code for permission checks in the Merge . java file to streamline code for better readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpRequest , HttpResponse , Request , and Response classes to streamline code by elim
the dummy freetts voice now use a file path for the phone set .
refactored the ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` instead of ` HashMap ` to improve code readability
refactor ` updateRendering ` methods in ` DLNAResource ` and ` Request ` classes to streamline rendering logic and enhance clarity
added resolution and remote artifact repositories to DefaultPluginManager to enhance plugin management by including resolution and artifact artifacts
( chore ) camel - cxfrs : fix the test error of camel - cxf
refactor PhysicsClient class methods for improved readability to enhance maintainability and ease of future development
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable frequent failure tests to address frequent failures
added a new File instance with the specified name in ZipFile to enhance file handling capabilities for improved file management
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used and
change channel . uid to be non - final by default , add a test .
added StackTraceUtils and integrated logging functionality in GenericDAOImpl and ForumServiceImpl to enhance traceability of stack trace for better debugging and monitoring
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
mondrian : fix problem with parenthesis in function name ( mondrian - 24 )
updated SQL queries and error logging in CheckDatabaseHelper . java and CheckDatabaseHelperTest . java to include cluster names and improve clarity in
add jdk . internal . misc . innocuousthread workaround for jdk 11
updated JsonTreeReader to handle additional JsonToken types in nextJsonElement method to improve error handling for unexpected JSON elements during parsing
added command - line argument handling for the external runner in TestCommand . java and a corresponding test case in ExternalTestRunnerIntegrationTest . java
added new methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing
[ hotfix ] [ table ] [ example ] use flink planner in streaming mode
added a call to ` clearDatabase ( ) ` in ` MssqlIntegrationTest . java ` to ensure the database is cleared before proceed
updated progress display logic and added disposal logic in Progress . java and RSSReader . java to improve UI responsiveness and ensure proper handling
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent directory does not exist
added methods to write files with POIDocument , OutputStream , and File in IOUtils . java to enhance file handling capabilities and ensure proper resource
replaced println statements with print statements for runOptions , sketch name , and exportClassPath to improve readability of output for better debugging
replaced ` Box ` with ` BlockBox ` and added getter methods for ` _ root ` and ` getDotsPerPoint ( ) `
added generic user search support in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance LDAP authentication
consolidated multiple import statements into a wildcard import and added default ports handling in NettyHttpServer , DefaultRouteBuilder , DefaultRouter ,
updated SnmpTargetHandler to check if the handler is initialized before updating the status and refactored mock verification in AbstractSnmpTargetHandler
[ # 7271 ] instructor can not submit session in section ( # 7272 )
added @ Incubating annotation and marked methods as deprecated in AvailableSettings . java to indicate that these settings are outdated and should not be used
refactor FileResolverImpl to handle jar and zip paths more efficiently and add a new WarFileResolverTest class to improve path resolution
updated log message format in DocumentsWriterPerThread . java to include docstores to improve clarity of log output for better debugging
fix dirt name to be unlocalized . close # 149739
updated stripWhitespaceX and stripWhitespaceY settings in ImageProcessor . java to ensure proper handling of whitespace settings during image processing
increase the number of threads used in Striped . lazyWeakLock from threads to 1000 to improve performance by reducing the number of
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . java ` to
removed the DateFormat parameter from the makeResultFromDelimitedString method in CSVSaveService . java to simplify method signature by eliminating unnecessary
added preferred size adjustment for the pane in NavigationShareTab to ensure the pane displays the correct row height for better UI responsiveness
refactor BeiderMorseFilter to use State instead of offset attributes and add a test for custom attributes to enhance token attribute handling and ensure
updated UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , UpnpServerHandler , and UpnpEntryQueue classes to
fix warp lens use wrong block position .
added JUnit 5 assertions and a dynamic test factory for JSON serialization in JsonTest . java to improve test coverage and ensure proper functionality of JSON
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed catch block from Exception to Throwable and added logging for loading errors to improve error handling and provide more informative logging for errors
updated KubernetesMockServer instantiation to use HTTPS instead of a fixed boolean value to enhance security by allowing HTTPS connections for the Kubernetes server
[ graal ] fix miss stamp for math intrinsics in lower .
updated HTTP method and response headers in DefaultServlet . java and its corresponding tests in DefaultServletTest . java to allow POST requests and improve response
tika - 3746 -- fix locale - dependent usage of decimalformat in tiffextractor
replaced exception throwing with response handling in ShowFileRequestHandler . java to improve error handling by providing more specific response details
added try - catch functionality to the ReflectorClassWriter class and corresponding test cases to enhance error handling and ensure proper exception management in the reflector
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to enhance functionality by allowing clamping values based on specified
added imports for OAuth2 utilities and modified token creation logic in ChainedTokenGranter . java to enhance authentication handling and ensure proper scope
rename BC _ instanceof . java file to improve clarity and consistency in naming conventions
replaced setSaveFlags ( SAVE _ ALL ) with a logger instance in EditorBottomSheetBehavior . java to enhance logging capabilities and improve
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and enhance test reliability
hhh - 13686 : fix nativequery implementation to use basicdomaintype instead of type
added a WeakHashMap to track font AAT information and updated return logic accordingly to improve memory management and ensure accurate font attribute retrieval
use intarraylist instead of intbigarray in typedset . size ( )
danielwagnerhall : use sessionid instead of sessionid to get the window handle
refactor BrokerRequestUtils to improve code organization to enhance maintainability and readability of the code
refactor instance handling in InjectorBuilderImpl to use a map for instances in the correct order to improve clarity and maintainability of the code
updated path handling in ` BuildTargetToRawTargetNodeTransformer ` to utilize ` buildTarget . getBasePath ( ) ` instead of `
added null check for the ' val ' parameter before parsing to avoid potential NullPointerException when ' val ' is null
add a connection listener to the jabber service when a jabber connection be close .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to standardize the load factor for better performance and
added methods to retrieve and store output data type variations in VectorizationContext and Vectorizer classes to improve data type management and enhance vectorization capabilities
move htmlassettranslator and stringsresourcetransformer to zxing - client - j2se
updated the condition for determining the overview actions behavior in OverviewState . java to ensure correct behavior when the shelf is removed from the overview
added JPA @ Entity annotation to BaseActivityEventEntity . java to enable entity - related functionality in the application
added tracing statements for various touch interactions in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and monitoring of touch interactions
added a new file ` InvalidOptions . java ` to test command - line options handling to ensure that invalid options are handled correctly and provide clear
added a condition to log an error if the number of supported display bounds changes to ensure that the display state reflects the correct number of supported
refactor the ` getClientIdAndClientSecret ` method into the ` OAuth20Utils ` class and update its usage in ` OAuth20UsernamePassword
changed the value of ` _ unwrapServletException ` from ` false ` to ` true ` in ` ErrorPageErrorHandler ` to enable the unwrap
added default status and infoUpdated assignments in PackageUpdatedTask . java to ensure proper handling of shortcut updates
camel - 16400 : fixed seda component to use default queue size of 500 if not specify .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and called them in Kernel . java to enable batch updates
added HttpClient configuration and validation to ThirdEyeApplication . java to enable dynamic configuration of HTTP client in the application
added sorting functionality to the JobInstanceFetchRequest class and updated the JpaJobPersistenceImpl to include it to enhance the request management by allowing
updated the ` cancelCryptoFacilitiesOrder ` method to return null instead of throwing an exception to improve error handling and provide a default return value
make sure keyboard be close when click in algebraviewweb
use native function for memcpy ( ) in llvmheap .
removed unnecessary whitespace in method declarations in BindLdapAuthenticationHandler . java to improve code readability and maintain consistency
ggb - 1640 make it possible to disable block tooltips
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added a timeStyle parameter to GsonBuilder to
updated player identification from " < UID : " to " ( ) " in the list command to improve clarity of player identification output
added a check for an empty list in the List class to ensure proper handling of empty lists
added exception handling for InvocationTargetException in ParametricCallable . java to improve robustness by throwing CommandException instead of InvocationTargetException
updated the ` getLikeExpression ` method to include a boolean parameter for filtering string columns to enhance flexibility in expression handling based on whether the
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide functionality for starting and
updated ` runChild ` method to set locale and default locale in ` LuceneTestCase . java ` to ensure consistent locale handling across different
refactor multiple Java classes related to PostgreSQL connection handling to improve code organization and maintainability
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context initialization logic
[ camel - 3390 ] add a test case to make sure routebuilder reference work
fixed flaky test : testexecutestreamcommand . testexecutestream fails on window
refactored the ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter instead of using ` noWarnings ` to improve
added ThrottleType enum and modified processThrottled logic in TestExecutor . java to support different throttling strategies based on character and byte types
removed redundant pixel assignment in ColorBleedEffect . java and added conditional checks in SpriteBatch . java to improve code clarity and
refactor annotation classes to improve code organization to enhance maintainability and readability of the codebase
added a new interface ` Model ` and implemented it in ` Sheet ` and ` Workbook ` classes to implement the ` Model ` interface for
camel - 16400 : camel - cxf should use camel _ filter _ pattern instead of hard cod the pattern
added a ` clearEntityManager ` configuration option to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to control the clearing of
added null checks for shortcuts in InstallShortcutReceiver , Launcher , LauncherModel , and Workspace classes to improve robustness by preventing potential
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to enable dynamic selection of elements in the collection
update exchange host and exchange name from " btc - e " to " wex " in WexExchange . java to reflect the correct exchange
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and added null check for child in EncodedTreeReaderFactory .
added null check for segments file in SegmentInfos . java and a test for opening the IndexReader after deletion in TestIndexReader . java to
fix test fail due to date order change ( # 3752 )
updated the calculation of the percentage value in DeviceHandler . java to ensure proper handling of negative and larger values to improve robustness of the value
updated condition checks from ` limit < 1 ` to ` limit < = 0 ` in ` RangeInputStream . java ` and ` RangeReader .
camel - 14850 : camel - core - optimize routescollector to reduce stack frame in use during rout
fix wrong calculation of initial position in hl chunk
updated package structure and class inheritance for NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to improve test organization and align with Lucene
added a new stateful mapper and updated the output handler in OutputHandler . java , and implemented a stateful mapper in StatefulOperatorTest . java
removed null check before setting bitmap shader shift for fill and stroke in Area and Line classes to simplify code by eliminating unnecessary null check
removed unnecessary database existence checks and improved import statements in Blockchain and BlockchainTest classes to streamline database management and enhance code clarity
added trimming of whitespace from the regex group in SQLPlusSupport . java to ensure proper parsing of the result from the matcher
fix intermittent unit test failure with apr .
[ web ] fix divider location in dock split pane
add healthcheck metric to pinot controller health check ( # 3995 )
set the visibility of the shared avatars view to GONE in the LocalFileListAdapter to hide the shared avatars view for better
use @ source instead of @ clientbundle . source ( ` ` org / geogebra / web / resources / mebis /
[ java ] use less than or equal to instead of less than or equal to in udp ping / pong command .
added logging level check in LogInterceptor to ensure commands are only executed if logging is not fine
replaced CountDownLatch with assertWaitUntil in EventBusTracingTestBase . java to improve reliability of span completion checks
updated the locale initialization in QueryParser to use the default locale and added getter / setter methods to enhance flexibility in locale management in query parsing
refactored entrycustomizationdialog to use collections . singletonlist ( ) instead of arraylist ( )
jbrules - 2269 : fix bug when add a new rule to a rule set ( # 2269 )
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` for handling unauthorized cases
replaced a fixed sleep duration with a dynamic wait loop based on server state to improve responsiveness and error handling when the server is already
added a new constant for the number of open connections and implemented methods to retrieve and set the open connection count in the SourceCounter class to enhance
add builder to allow field definition to be pass to executionstrategy and executorserviceexecutionstrategy
refactor ` getSrcRoots ( ) ` method to return an instance of ` ImmutableSet < String > ` instead of a local variable to improve
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to ensure compatibility with Java ' s built - in output
updated file handling in FileSourceTextLinesITCase to use a random UUID for the temporary file name to ensure proper directory creation and validation of
added support for converting ` DataTable ` to ` JRuby ` in ` JRubyStepDefinition ` to enable support for processing ` DataTable ` instances
updated method names and parameters in SearchImagesRenderer and ApacheHttpClientMediaWikiApi for improved clarity and functionality to enhance code readability and
renamed ReadSentimentDataset class for clarity to improve code readability and maintainability
update error message in FormulaParser to include specific error details to improve clarity of error reporting for formula parsing errors
added bind address functionality and modified exception handling in WebSocketClient . java to enhance WebSocket connection management and improve error handling
[ java ] do n ' t delete archive and aeron directory when shut down consensusmoduleharness .
refactor size setting logic in WidgetGroup to use a unified setSize method to improve code readability and maintainability by consolidating width and height
updated the comparison of sessionFixationAttribute to use Boolean . valueOf for better type safety to ensure proper handling of boolean values in session fixation
refactor the startOneChannelLA method call to include edgeOption parameter to improve clarity and control over the channel initialization process
danielwagnerhall : add a coefficient backoff mechanism to the chromedriver
added methods and attributes to ` TraceExchangeFilterFunction ` and updated ` ClientResponseWrapper ` to accept ` HttpMethod ` and ` route ` to enhance
fix npe in precompactedrow . compact
updated color conversion logic in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest
[ # 1868 ] add ' on ' and ' not sure ' option to contribution question ( # 1869 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] suppress findbugs warn in kafkaexactlyoncesink
added PGConnection to the connection proxy in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to ensure proper connection handling
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log messages in TokenAuthenticationHandler to provide clearer context about the presence of a token encryption secret to improve logging clarity and provide more
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should not be used
added topology update event handling in the FinalizeKerberosServerAction class and modified AmbariManagementControllerImpl to utilize this new method to
added support for iterator and end values in NamedListCodec and created a test for iterator functionality to enhance performance and ensure proper handling of collections and
do n ' t throw migrationcommitexception when assigncompletelylostpartition be call with null state
added schema inclusion rule to ApiExample . java to ensure public schemas are included in the generated API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflect
fix sdo create a polygon with a closed / single point ring ( # 5448 )
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base name and dimension
added a method to set debug evaluation output for next evaluation in HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes
test ( core ) : migrate ctmodule to junit 5 ( # 2175 )
removed the ' isLiveTvDirectPlayEnabled ' parameter from the ExoPlayerProfile instantiation and adjusted the condition in PlaybackController to
added a return statement to the DynamicStyleBar class to ensure proper execution flow in the method
added logging statements for setting and resetting properties in Utils . java to facilitate debugging and monitoring of database property updates
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future development
updated the condition to promote both object and boolean types to ensure proper handling of boolean types in method promoting
sulong : fix npe in llvmpackframenuller .
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
add a simple test suite for caffeine cache default configuration
added a method to calculate the bounding box of a mesh to provide a way to calculate the bounding box based on the number of vertices
added a target hash function option to compute target hashes to enable users to specify the hash function used for computing target hashes
refactor DefaultConfigurationProperties class to improve configuration handling to enhance flexibility and maintainability of configuration management
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight paint behavior in BarChart to improve visual appearance and visual
updated the mapping of pgSgPathPlanMap to store the result in sgPathPlanMap to improve clarity and maintainability of the
[ hotfix ] [ test ] fix checkstyle violation in infinispanremoteproducerit
added locking mechanism for artifact fetching in MavenDependencyResolver and updated test assertions in MavenRoboSettingsTest to improve reliability of artifact fetching and
modified the fragment shader to include an optional GL _ ES declaration to ensure compatibility with GL _ ES for shader precision
hbase - 22084 fix concurrentmodificationexception in rsgroupadmin2
added error handling for loading the JspPage class and changed log level from warn to debug to improve robustness by ensuring the TldProcessor is
updated version handling in CustomAnalyzer and added a test for version aware filtering to ensure compatibility with the latest Lucene versioning and improve test coverage
added a test to verify that ` getApplicationInfo _ readsValuesFromSetPackageArchiveInfo ` returns the correct value from ` setPackageArchiveInfo
replaced direct method invocation with MethodUtil . invoke across multiple classes to enhance access control checks and improve code maintainability
added project configuration and task start events to GradleBuildService and Main classes , and modified progress listener to include operation types to enhance the
refactor synchronization mechanism in AndroidWebDriver . java to improve code readability and maintainability
do n ' t throw poolinitializationexception if initializationfailtimeout < 0
removed the timeout parameter from the getResult method and added an error method to handle HTTP responses more effectively
changed the ` isNative ` field to be transient and modified its usage in the ` addEntry ` method to allow serialization and deserialization of the
update error message format in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler for clarity
refactor TagSupport and related classes to improve code structure to enhance maintainability and readability of the code
updated debug log messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for better debugging and debugging
updated method names and variable assignments in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity and consistency in source
added null check for the registrant repository in UsersPanel . java to improve error handling and provide clearer debugging information when the repository is not
added support for font file extensions " . otf " and " . OTF " in SunFontManager to ensure compatibility with font file extensions
refactor type checking logic in AnnotationMatcher to improve clarity and correctness to enhance code readability and maintainability by using more descriptive
updated error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting
updated debug logging statements in FaultTolerantChunkProcessor to check if debug logging is enabled before logging messages to improve performance by avoiding unnecessary
make sure we do n ' t try to create test class if they do n ' t exist
added a condition to check if the app should move to the default screen on the home intent to enhance user experience by allowing navigation to the default
updated maximum bitrate from 110 to 30 in the configuration to allow more flexible bitrate settings
removed the getOptions ( ) method and modified the loop structure in CommandLineParser . java to streamline code by directly iterating over optionsMap values
trim whitespace from the return value of the method to ensure that the description is trimmed before returning it to avoid potential errors
updated the output filename to use a fixed name instead of a dynamic path to improve clarity and consistency in output file naming
[ hotfix ] remove pid from log message in processbesunoderrunner
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to ` MusicLoader ` and ` Sound
replaced the use of ClassUtils with a generic Class < ? > in OnBeanCondition . java to improve type safety and enhance code clarity
added ScreenRecord annotations to RequestPinItemTest . java to track test timing issues related to screen recording
disable the lrPauseButton selection if it is not null in CPUFeature . java and MemoryFeature . java to ensure the lrPauseButton is
refactor account preference management by introducing a separate ` mAccountsPrefCategory ` variable and refactoring related methods to enhance code readability
do n ' t duplicate ` ` available ' ' presence when send ` ` available ' ' packet
modified the initialization of StringBuilder in ObjectInputStream to accommodate a maximum length of Integer . MAX _ VALUE to ensure proper memory allocation based on the
disable stats export for web endpoint integration test
refactor InterruptedException class for improved error handling to enhance robustness and maintainability of exception management
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future development
refactored SSL connection handling in ` ConnectionCheckOperation . java ` to improve clarity and maintainability of SSL connection checks
no effective change - code cleanup , add check for map type
fix checkstyle issue in ` ` solr - plugin - communitycollectionitemfilterplugin . java ' ' and ` ` xmlworkflowfactorytest .
replaced the addition of AuthenticatorActivity to sExemptOfPasscodeActivites with a new intent flag to ensure the activity is reordered
refactor ( patternparameterconfigurator ) : remove deprecation in favor of template .
changed the return type of ` beginDraggingWidget ` from void to boolean and added null check for ` image . getDrawable ( )
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collect components in DynamicStyle . java to prevent potential NullPointerException when root is null
add a confusionmatrix to testclassifier and make it easy to write a confusion matrix .
rename last _ sample _ ok to last _ sample _ ok for clarity
added unit tests for Bluetooth headset connection and removal states in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth
corrected a typo in the method name from " # autowire " to " # autowired " in PropertyBindingSupportTest
added " clone " method to the objectMethods set and introduced a new constant for finalize method to enhance object management by allowing cloning of objects
added null check for counters in IntegrationTestBigLinkedList . java to prevent errors due to insufficient YARN configuration issues
send not _ implemented error code when dereferencing object .
updated the service filter logic in SamlIdPServicesManagerRegisteredServiceLocator to include a matching check for the registered service ID to enhance service
added a null check before running the UI thread in PhotoFragment . java to avoid potential NullPointerException when getActivity ( ) is not initialized
rename ` LOGGER ` to ` logger ` for consistency in naming conventions to improve code readability and maintainability
added methods to set and get the string type in DatabaseAdaptor and modified access modifiers in JDBCSessionDataStore to enhance flexibility in handling string types
updated test cases in UIMAUpdateRequestProcessorTest . java to replace " language : english " with " suggested _ category : * "
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
[ drools - 2387 ] fix decision table output boxing ( # 2387 )
updated TextureMap . java and SplashProgress . java to modify the defaultEnabled flag to true for macOS to ensure proper texture map creation and
added tooltip text for the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing a more descriptive tooltip
replaced ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( e ) ` in ` EnumFactory `
add description and text to the ` ` reload / restart ' ' action
[ web ] use getlabel ( template ) instead of getlabelsimple ( ) in ggb command
updated the BRIGHTNESS _ FACTOR constant from intValue ( ) to doubleValue ( ) to ensure accurate representation of the maximum value of the
add a context and date to the sscm history entry
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods in ` Home
added return type validation for indexedWriteMethod and propertyWriteMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a
updated logging statements in DynatraceExporterV2 to use placeholder syntax for better readability to enhance code clarity and maintainability by
updated method parameter names from ' runnable ' to ' task ' in Context , Request , and Response classes to improve clarity and consistency in naming
fix miss call to setcapabilitiesfromnbt in itemstack . setcapabilitiesfromnbt ( ) .
updated the assertion in LifecycleUtilsTest to compare the execution ID of binding2 instead of a default value to ensure that the correct execution ID is
added checks for contract types in Wallet . java and updated contract retrieval logic in GetContractServlet . java and TriggerSmartContractServlet . java to
added new package - info . java files for several packages in the dtfj package to provide package - info . java and module - info
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to iterate through the current tail before adding a new node to improve
added duplicate handling for JavaFileObjects and refactored test execution in JavadocTool and T7091528 to improve code maintainability and
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to improve flexibility in
updated ` LoginServerTokenEndpointFilter ` to accept a list of parameter names for adding users and modified the constructor to accept these parameters to enhance
added a new constant C _ KEY and updated language creation logic in LanguageFactory and CPPParserTokenManager to support a specific key for language
refactor executor service implementation by introducing a new ` MoreExecutors ` class and updating related imports to improve code organization and maintainability by
added cache control headers and expiration settings in LoginService and FormAuthenticator classes to improve cache management and ensure proper response handling
added exception message to error logging in VoiceManager . java to provide more detailed error information for better debugging
updated HSSFTests to include new test classes and modified test suite names to enhance test coverage and improve code clarity
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
updated the method of obtaining the absolute path of the output file to handle potential null values to improve robustness by preventing potential NullPointerExceptions
added access controller settings for resource resolution in Java2DRenderer to enhance resource management during rendering
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that tests fail on Windows environments without throwing exceptions
changed the ` mbean ` variable to be ` final static ` and modified the ` main ` method to throw an exception to improve error handling and
added checks for whitespace comments in TabsAndIndentsVisitor . java to ensure that whitespace checks are only performed when comments are empty
updated assertions for collectionRate , totalNodeRate , totalShardRate , and totalReplicaRate in TestTriggerIntegration . java to allow for more
change string comparison in DatabaseChangeLog , RanChangeSet , AlreadyRanChangeSetFilter , and NotRanChangeSetFilter to be case -
implement the ` getString ` method in ` ShadowBundle ` to return a default string value if the provided key does not exist
updated date and time formatting logic in TweetActivity . java to utilize locale - specific date and time formats to improve flexibility in displaying
nifi - 1369 : fix npe in standardprocesssession . getconnections ( ) when there be no connection
refactor keyboard request logic in DetailFragment . java for improved readability and maintainability to enhance user experience by ensuring the keyboard is visible
update classpath handling in App . java to ensure proper formatting of canonical paths to improve clarity and maintainability of classpath management
make sure solve ( ) be call in a thread - safe manner
added import statement for Message class in GenericMessage . java to utilize the Message class for better message handling functionality
refactor SQL queries in PostgresConnector and TaskAttempt classes for improved clarity and functionality to enhance code readability and maintainability by
updated file filter handling in AquaFileChooserUI . java to include a check for the presence of a filter before setting the file filter
fix potential deadlock when create ice stream
[ bug 45380 ] fix arrayptg . toformulastring ( ) to return true / false instead of true / false
updated import statements in PGtokenizerTest . java to use specific assertion methods to improve code readability and maintainability
updated Java2TypeScriptTranslator to handle nested anonymous classes with parameters and improved final variable management to enhance code clarity and ensure correct handling
added SQL sequence creation for auto - increment columns in AddAutoIncrementChange . java to ensure PostgreSQL does not support auto - increment columns and provide
modify byte reading logic in DataInput . java to ensure correct handling of zero values to improve data processing accuracy and prevent potential errors
added assertions to verify the properties of vertical and horizontal pixel spacing in ImageParserTest to ensure correct metadata retrieval for vertical and horizontal pixel spacing dimensions
updated method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` in ` Component . java ` to ensure correct
refactor import statements in multiple Java files for improved readability to enhance code clarity and maintainability
fix the engine _ finish / engine _ free mixup
added iteration handling methods and improved event firing in multiple classes to enhance iteration functionality and provide better event processing capabilities
refactor code to ensure proper release of HttpContent and fileUpload resources to improve resource management and prevent potential memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during tests
modified URL loading logic in BrowserActivity to handle " twitter : / / " URLs to improve user experience by launching a new activity based on
added a client instance and awaited host status in DeploymentGroupTest . java to ensure proper handling of host state during tests
changed the logResult parameter from false to true for " listLabels " logging to indicate that the " listLabels " log is allowed instead of
increased ` MaxAutoRetries ` from 0 to 25 in ` RestTemplateRetryTests . java ` to increase the maximum number of retries
removed unnecessary print statement from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and
added support for a new " fraction " resource type in multiple classes to enable parsing and retrieval of floating - point resources in the application
removed file write confirmation from BasicFrame . java to streamline file handling by eliminating unnecessary confirmation logic
added checks to ensure groupId and artifactId are not null before calling findNewerDependencyVersion to enhance robustness by preventing potential null pointer exceptions
hbase - 2649 use quotasexceededexception in namespacestatemanager # createtable ( ) instead of
refactor multiple Java classes related to token filtering and attribute handling to improve code organization and maintainability
refactor TestFuzzPreLoop class to improve code structure to enhance maintainability and readability of the test code
added a check to set f0 to 0.0 if it is less than zero in HTSVocoder . java to ensure that f
updated logging messages for catalog retrieval and added null checks for primary and foreign key columns to improve logging clarity and prevent potential NullPointerExceptions during database
refactor the b2c converter implementation to use a synchronizedstack to avoid concurrentmodificationexception
added SharedPreferences support to check if empty pages are allowed based on user preferences to ensure that empty pages are not displayed in the workspace
added a warning log message about the deprecation of cucumber - needle to suggest using cucumber - cdi2 or cucumber
refactor theme handling in ShadowThemeTest and add new methods in ShadowVMRuntime for object address retrieval to improve theme management and enhance object address
updated error message in VerifyFast . java to use Arrays . toString ( ) for better readability to improve clarity of failure messages for better
no effective change - code cleanup - remove obsolete migration annotation
updated method handle access modifiers and added prototype property functions in ScriptObject to enhance accessibility and improve prototype management in the ScriptObject class
added a randomness parameter to the Collections . shuffle method in TestFilterDirectoryReader . java to ensure randomness of the readers is used for
updated the display name assignment logic in UsersAndGroupsSearchProvider to differentiate between remote clarification and known remote clarification to enhance
updated the path formatting in CookieRetrievingCookieGenerator to use a default value if the path is blank to ensure that the path is consistently
updated closing braces in multiple Java files to improve code readability and maintain consistency across the project
updated cache name assignment from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated comparison logic for pageNumber in ValidationResult . java to ensure correct validation of page numbers based on their presence
added a null and equality check for the focused widget in the UIDropdown class to ensure that highlighting only occurs when the current widget is
fix checkstyle issue in util / soundutil . java ( # 703 )
refactor AppleCxxPlatform handling in ApplePackageDescription . java and AbstractKnownBuildRuleTypes . java to improve clarity and
added a test for the clickhousify SQL statement in ClickHouseStatementTest . java to ensure the correct SQL format is used for
replaced ` onConnect ` method with ` onAccept ` method in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
rename EnglishPTBTreebankCorrector class for clarity to improve code readability and maintainability
added a new file TestGetLoggerNPE . java to test Logger and LogManager functionalities to ensure that Logger and LogManager functions correctly
added a ` data ` field to ` PathSharingContext ` and modified its initialization in ` ActionDirectory ` , ` ScriptedProcessor ` ,
make sure we do n ' t swallow exception in staticobject . cast ( ) .
added support for " NEXT VALUE FOR " in NextValExpression and updated related classes to enhance functionality to support multi - row values in SQL statements
add link to resources . md in error message
refactor BoundedLocalCache to improve read buffer handling and add a new test for pending writes to enhance cache management reliability and ensure correct
added a new exchange parameter " Leverage _ Level " to QuoineExchange and implemented order direction in QuoineNewMarginOrderRequest
added bound initialization for properties in the PropertyDescriptor class and created a new Test7192955 class for validation to ensure binding properties are correctly validated
replaced ` failsafeWidth ` and ` failsafeHeight ` with a new ` SetDisplayModeCallback ` interface in ` Lwj
added a check to reset buttonsAwatingRelease if it is not null in the parent form to ensure proper cleanup of buttonsAwatingRelease when
fix line cell height calculation when wrap width be set to zero .
updated error message from " L ' ' argomento del parser non deve essere nullo " to " L ' argoment
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
simonstewart : change string . format to use string . format ( string , string , int ) and string . format ( string
replaced the usage of ` getNamespaceContext ( prefix ) ` with ` getNamespace ( prefix ) ` in ` StaxXmlPullParser . java
added nestedJoins configuration to multiple test classes to enable nested joins functionality in the test environment
server : fix listvolumes api to allow root admin only
added caching functionality for JavacFileManager in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to enhance
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s MatcherAssert
fix nullness error in text and metadata renderer
fix ( tcp ) : fix offset calculation in symbolmapreaderimpl
removed debug print statements from TermFilterTest . java to clean up the test output for improved readability
removed the Reflection class and updated import statements in Jooby . java and TypeConverters . java to streamline package structure and eliminate unnecessary
refactor ThreadlessExecutor to remove the sharedExecutor dependency and introduce getter and setter methods for finished and waiting states to simplify the code and
removed unnecessary try - catch block around error handling in DateTimeFormatter . java and added new test cases in TestDateTimeParsing . java to improve error handling
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` chunkLengthInKB ( ) `
added a case for WILDCARD in Types . java and created a new class T7034495 with generic interfaces in T70344
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
updated condition checks for Hop characters in TransclusionDecideRule . java to improve clarity and correctness of the code logic
remove versionutils . getmicronautversion ( ) from micronaut
added assertions to verify the functionality of Print _ Area and Area3DPtg in TestBugs . java to ensure that the Print _ Area
updated the MindIconFactory to conditionally return a description string based on the presence of a ' / ' character to improve code clarity
updated the ` onHomeIntent ` method to accept an internal state parameter to enable handling of the home intent based on the internal state
refactor dependency tree preference handling in CxxBuckConfig . java to improve clarity and maintainability of the code
added a method to show file details with an active tab parameter across multiple activities to enhance file display functionality by allowing users to specify the active tab
updated method names from " $ apply " and " $ applyStatic " to " apply " and " applyStatic " across multiple files to standard
added randomization logic for bytesAL in MinimalEncoder . java and updated expected values in HighLevelEncodeTestCase . java to improve code
updated string formatting in SourceBuilder . java to include required attributes and since information to improve readability and clarity of output for better debugging
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure the adapter updates correctly
added a method ` setDefaultWALSyncMode ` to the ` ShadowSQLiteConnection ` class to provide a way to set the default WAL
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct behavior of
camel - 15836 - camel - s3 : remove unused getters from defaults3casyncclient
updated error messages in test cases for corrupted streams in ParserTest . java to improve clarity and accuracy of error reporting
improve assertion error message in hazelcasttestsupport . testcollectionsize ( )
do n ' t emit bailout if an error occur during graph building .
mob - 1358 : fix npe in getpngimage ( ) on mac o x
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
updated the ` getOrderBook ` method to include a ` limit ` parameter and modified related calls in ` YoBitMarketDataService `
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in ` StressHierarchyBaseClass . java ` and updated
[ flink - 16405 ] [ table - common ] add streamreadconstraints to standarddataflow ' s jsonmapper configuration
updated engine retrieval from ` configuration ` to ` a default value ` in ` PmsConfiguration . java ` to ensure a default value is used
rename ` FullIterator ` to ` WheelIterator ` in ` TimerWheel . java ` and update imports in ` TimerWheelTest
improve error message if bug pattern can not be find
[ hotfix ] [ test ] increase timeout for localchunkprovidertest
changed the visibility of the " menu _ uncomplete _ checklists " menu item from true to false to improve user experience by disabling the
updated DefaultResultSetHandler to resolve discriminated result maps and added Contract class with associated tests to improve result map resolution and enhance test coverage for
updated null checks for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to improve robustness by ensuring proper handling of null
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary annotations
removed unnecessary casting of ` mContainerActivity ` to ` FileDisplayActivity ` in ` FileDetailFragment . java ` and ` OCFileList
added trimming to the token in ConfigAttributeEditor and implemented a test for trimming trailing and leading spaces in ConfigAttributeEditorTests to ensure
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux classes to improve code organization and maintainability
[ gr - 21763 ] make module reference public and add unnamedmodule method .
updated the logic for determining the relational kind from " TABLE " to " SYSTEM TABLE " based on the presence of " pg _ " prefix to
chore ( regen ) : deprecate tier _ enterprise _ plus _ value and update documentation
updated the RQST field and case handling in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore . java
added a new module - info . java file for the core module to define module exports and dependencies for various components in the runtime
added handling for flushing and filling states in SslConnection . java to improve connection management and ensure proper flushing behavior
updated Log4j2LogDelegateFactory to return the logger if it exists and added a new test class for error handling in LoggerFactory to
updated environment variable handling and added server VM checks in ExecutionEnvironment and Test7029048 to improve test reliability and ensure correct server
refactor methods in ExecutableFindOperation , MongoOperations , ReactiveFindOperation , and ReactiveMongoOperations to improve code organization and maintainability
added a reference to " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the PostgreSQL SSL
disable the test case in TestInterProcessSemaphoreEdges . java to indicate that the test is currently failing due to a known issue
refactor key iteration in EditableResources to use a sorted set of resource names to improve readability and maintainability of the code
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` and ` TerminalFactory . java ` to support
added additional file extension checks for " . gr " and " . grs " in ClassType . java to ensure compatibility with additional file types
replaced HashMap with TreeMap for combined vector storage in DrillTestWrapper . java to improve performance and readability of vector operations
added a condition to iterate over values in the loop to ensure that only valid names and values are processed
refactor WebSocketPolicy class to improve connection handling to enhance performance and maintainability of WebSocket communication
refactor permission handling in ShadowTelephonyManager and ShadowWifiManager by removing static access to enable instance - based permission management for better test isolation and flexibility
added a new method ` resolveMessage ` to ` StandardMessageResolver ` and modified conditional checks in ` AbstractMessageResolver ` to enhance message resolution
updated class instantiation to use parameterized types for TraceMethodVisitor , TraceClassVisitor , and CheckClassAdapter to enhance type safety and improve type safety
added new classes LoggingAuditService and UaaAuditService for user authentication logging to enhance logging capabilities for user authentication processes
added nullability annotations and validation for temperature values in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to ensure proper handling of
updated conditional logic in BeanDefinitionInjectProcessor to include a check for abstract classes to ensure proper handling of public and abstract methods in bean definitions
camel - 14850 : camel - http - add support for http . proxyhost and http . proxyport .
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the
added a call to jdkSerialFilter ( ) in System . java to utilize the jdkSerialFilter ( ) method to enhance serialization
add detail about the pool size when pool mode be enable .
replaced calls to ` getScroller ( ) . forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple files
updated the method name from ` ensureRealtimeClusterIsSetUp ` to ` ensureRealtimeClusterIsSetUp ` and applied environment variables to enhance
added methods ` isError ( ) ` and ` isError ( ) ` to ` ValidationReport ` , modified error handling in ` DisallowValidator `
updated inline QSB configuration in InvariantDeviceProfile . java to use closestProfile instead of displayOption to improve flexibility in handling display options
updated ` createClassPath ` method to include ` throws Exception ` and modified URL decoding in ` SortedArrayStringMapTest . java ` to improve
updated regex patterns in TransformSteps . java to use ' ( . * ) ' instead of single quotes for string literals to improve clarity and
fix null pointer exception in pgraphicsjava2d . fillrect ( ) and toolkit . retinaprop ( )
replaced hardcoded timeout values with a configurable timeout variable in ` FaultToleranceTest . java ` to improve flexibility and maintainability of wait
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of Docker images in the environment
[ java ] remove system . gc ( ) call from knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replace createHardLink method with copyFile method in SnapshotTaker . java to improve file copying functionality and handle potential file existence issues
rename method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ pytorch ] fix npe in ndarray # todevice ( )
added a conditional check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to
replaced InstrumentationTestCase with AndroidJUnit4 runner in NotesHelperTest , GeocodeHelperTest , and ReminderHelperTest to
added gas limit rules to ProofOfWorkRule , DifficultyRule , and ParentGasLimitRule in CommonConfig . java to enhance functionality by
changed the visibility of the ` setupData ( ) ` method from public to private and removed redundant calls to ` setupData ( ) ` to
replaced the ` autocommit ` boolean with ` runInTransaction ` in the ` ChangeSet ` class to clarify that the transaction
added null check for listener in TripleServerStream . java to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ doc ] fix doc for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling
updated method names in Common . java for consistency to improve code readability and maintainability
refactor the app launching process to use a context layer for clicking an app to improve resource management and enhance event logging for app launch
[ hotfix ] [ runtime ] fix typo in javadoc of streamexecdeduplicate
added warning log for Kafka message sending errors in KafkaSubscriber . java to improve error handling and debugging capabilities during Kafka message sending
added PersistentPropertyAccessorFactory and isImmutable method implementations in SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable proper configuration of persistent property
geotools : fix setcoord ( ) to return true for set undefined
added scroll handling logic to AskGestureEventsListener to improve user experience by allowing scroll events on X and Y axis to enhance user experience by
improve the accuracy of the ngramestimator . compareto ( ) method
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
updated the method calls in StatsLogCompatManager to retrieve folder icon labels and cardinality to improve clarity and accuracy of the logging of folder icons
updated server name retrieval from getServerSlogan ( ) to getServerName ( ) in ThemeUtils . java to ensure consistency in naming conventions
[ gr - 3369 ] c2 : add skeleton predicate test for c2 ir node .
added a setter method for the TransferHandler and modified the equals and hashCode methods in SelectionHighlighter . java to improve object comparison and hash code
added a new file ` StringResultConverter . java ` and modified ` AsmRuntime . java ` and ` AsmUtil . java `
replaced the @ DisabledIfSystemProperty annotation with the @ Disabled annotation in multiple test classes to ensure tests are disabled without running reliably on
updated the condition in JansiWinSysTerminal . java to check if the wait time is zero instead of not equal to zero to ensure
added null checks and improved buffer limit logic in BufferUtils . java to enhance code robustness and prevent potential NullPointerExceptions
updated the expected value in the property assertion from " data / " to " data " in TestSolrDiscoveryProperties . java to ensure the correct
updated OS detection logic to support both Windows and macOS to ensure compatibility with newer operating systems and improve compatibility with macOS
updated Lock class to accept a string lockName instead of a File lockFile to improve flexibility in handling lock files
replaced ` appIcon ` with ` allApps ` to wait for the ` apps _ view ` instead of the ` appIcon ` to
updated references from ` this ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java ` and ` Invoc
modified the SQL query for retrieving step executions from " oreder by STEP _ EXECUTION _ ID " to " order by STEP _ EXEC
updated button handling logic in LwjglInput . java to return - 1 and ignore unknown buttons to improve button processing by ignoring unknown buttons
added admin token to submit an approve and reject claimed task in TaskRestRepositoriesIT . java to enhance access control for claimed tasks
replaced instances of ` logger ` with a standardized ` LOGGER ` constant in multiple response builder classes to improve code readability and maintainability
simplified the date parsing logic in ` SsoAccessTokenProvider ` and updated test method visibility in ` SsoAccessTokenProviderTest ` to
[ geos - 7868 ] fix test failure on window ( # 7868 )
added alarm suppression request methods to GreetResourceMockedTest and OciMetricsCdiExtensionTest classes to enhance testing capabilities for alarm
reordered conditional checks for EXIT _ ON _ CLOSE operation in JFrame . java to improve code readability and maintainability
refactor database connection handling to use a try - with - resources statement to improve resource management and prevent potential null pointer exceptions
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to streamline metrics initialization and
refactor file and folder output handling in OCFileListFragment . java to improve clarity and correctness of file and folder listing output
changed the default value of the HashKnownHosts configuration from " yes " to " no " and modified the loadKeys method to return an Iterable
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to validate thread creation in ` MyThreadFactory ` to ensure that thread names do not start
refactor lock period retrieval logic in DelegateResourceActuator to include dynamic store support to improve flexibility in managing lock periods based on dynamic properties
added a new TicketModel instance in EditTicketPage . java to manage ticket data for improved functionality
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimissing apps from predicted
updated constructors in various assertion classes to include class type as a parameter to enhance type safety and allow for more flexible assertion types
added a new menu item " QUOTE " and implemented functionality for quote functionality in TweetActivity to enhance user experience by allowing users to click on
do n ' t acquire an interrupt lock until the current thread be start .
fix ( mediacodecaudio ) : use direct playback instead of passthrough
added a conditional check for the result before offering failure and closing the consumer to ensure failure handling occurs only when the result is true
updated German and French XSLT error messages from " Stiller Modus " to " Silent - Modus " and " L '
make checkpointscleaner thread - safe
updated import statements and method implementations in MockRestAdapter , RestAdapter , and its tests to replace ` Observer ` and ` Subscription ` with `
rearranged the conditional block for creating the components . yml file in ComponentPresetManager . java to improve code readability and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated assertions in TestJdbcDriver and TestJdbcDriver2
bugfix for ticket : 136 -- do not update audio effect when a user click on an item in the list of input box .
added session validity check and corresponding test case in Session and SessionHandlerTest classes to ensure proper exception handling for invalid sessions and improve test coverage
hhh - 15827 remove exceptionhelper . java which be no longer need
change key size from 256 to 255 in JceX25519Domain . java to optimize key generation for improved performance
added codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene ' s codec
[ hotfix ] add debug log for empty checkpointrange header list
added support for RSA / ECB / OAEPPadding algorithm and improved exception handling in the operator helper to enhance security by allowing O
replace instances of DARWIN _ AARCH64 with MACOS _ AARCH64 across multiple files to standardize platform - specific inclusion checks
do n ' t swallow securityexception in debugsourcesresolver
simplified the conditional check for OS . IS _ UNIX by removing the negation of UNIX _ SOCKET to improve code readability and
updated error handling and modified primary status logic in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to improve error reporting and ensure
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory management and ensure proper resource
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable synchronous download functionality in the FastSyncChainDownloader class
updated the DST _ OFFSET setting in SimpleDateFormat . java and added a new class Bug7130335 . java for testing date formatting to
refactor variables in AllAppsView . java for clarity and consistency to improve code readability and maintainability by using local variables instead of
cloudstack - 3745 : fix npe when delete vr
refactor StringBuffer class for improved performance to enhance efficiency of string operations
added a ruleUID field to the RuleResource class to ensure the rule ' s UID is associated with the specified rule
added null check for listener before unsubscribing to prevent potential NullPointerException when listener is null
added property to jolttransformjson to allow pretty print to be apply to the transform .
make access _ table public .
update error messages in DataSourceInitializer and its tests to provide clearer context for missing resources
do n ' t swallow exception in tcptransport and xmpptransport
renamed multiple Java classes related to event handling to improve consistency and clarity in naming conventions
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to enhance the handling of upgrade susp
apply a consistent copyright notice to the java / tree
removed the initialization of fields from the writer to streamline code by eliminating unnecessary field retrieval
added a constructor to OAuthProperties that initializes encryption and signing keys to ensure proper configuration of encryption and signing keys in the OAuth properties
replaced calls to ` getColumnFamilies ( ) . length ` with ` getColumnFamilyCount ( ) ` in multiple files to improve clarity and
simplified the alias check logic in SampleWebJspApplicationTests . java to enhance code readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , Serializable , and package - info files to improve code organization and maintainability
added a reset method to the Cluster interface and implemented it in the ClusteredServiceAgent interface to provide a way to reset the idle strategy for
incremented the currentChunkID variable before incrementing it in ChunkedWriter . java to ensure proper incrementing of the currentChunkID for
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a base class for job execution management in a structured way
replaced direct call to ` replay ( core ) ` with a variable ` replayFuture ` and changed return statement to break to improve clarity
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method ` getServiceIds ( ) ` to return a Publisher of service IDs based on Consul configuration to ensure that service ID retrieval is only
replaced ` Math . random ( ) ` with ` new SecureRandom ( ) . nextInt ( ) ` for hashSalt generation to improve security
add option to verify runtime compilation framestates during bytecode parsing .
updated currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure accurate time comparison based on aggTimeBucketMillis
added handling for abstract methods in CallsRealMethods . java and created tests in CreatingMocksWithConstructorTest . java to ensure correct behavior when
refactor checkPackageAccess method to accept Class objects instead of String names to enhance security checks for package access validation
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` instead of ` AbstractTest ` and added error configuration tests to enhance
updated variable names and improved font handling in ContributionListPanel . java to enhance code readability and maintain consistency with naming conventions
added handling for the REQUEST _ HAS _ TIS flag in the QuickstepTestInformationHandler and modified the LauncherInstrumentation logic to util
replaced ` SwingUtilities . invokeAndWait ` with ` mutex . EVENT . writeAccess ` in ` ConnectAction . java ` to improve
updated the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions
[ javaemul ] add javaemul . internal . arrayhelper , javaemul . internal . object , javaemul . primitive
added support for HOME and END key bindings in the Less application to enable navigation to the home and end key in the terminal
replaced the synchronized block with a direct loop for retrieving connected plots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation and sharing logic in Utilities . java to improve clarity and functionality of sharing activities based on package availability
changed the visibility modifier of the constructor from public to package - private in the Roster class to restrict access to the constructor for better encapsulation
added basic constraints extension to the cert generation to enhance security by enabling basic constraints for certificate generation
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to address a failing test due to
replaced conditional assignment of variable ` ps ` with direct assignment to ` precisionStep ` in ` TrieDateField ` and ` TrieField `
removed the TaskbarStateHandler class and updated its usage in BaseQuickstepLauncher to streamline the codebase by eliminating unnecessary components
added a new file ArrayLength . java to test array field and field retrieval to ensure that the method correctly handles cases with zero - length arrays
wait for process to exit in hazelcaststartit . teardown ( )
replaced the ` @ Singleton ` annotation with ` @ ApplicationScoped ` and introduced a ` init ( ) ` method in ` ApplicationSettingsService
updated assertions and newValue logic in Safepoint . java to ensure that the value is non - negative and set a default value to 1
updated thread name field type from " [ C ] " to " Ljava / lang / String ; " and changed return type from charArray
updated the default random seed value from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90HnswGraphBuilder
added stroke and font object handling in PGraphicsJava2D to enable customization of stroke and font rendering for better visual representation
[ calcite - 5279 ] fix window and group by with dynamic star ( # 5279 )
added a new method ` findInterestingChildren ( ) ` to initialize ` _ header ` and ` _ children ` of ` Comment2000 `
added import for Messages and set status code 0 to a warning icon in HTTPServer . java to enhance error handling by providing a warning icon for
deprecate mouseevent . getmodifiers ( ) in favor of getmodifiersex ( )
ad64 : fix miss cycle in amd64countleadingZerosnode and amd64counttrailingZerosnode
camel - as2 - fix nullpointerexception when disposition notification be not set .
refactor Locale class to improve code readability to enhance maintainability and facilitate future development
added a clearLog button and a clearLog method in ErrorConsoleController , and implemented a clearLog method in LogMessages to enable users to
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated caption handling in multiple classes to utilize LocaleHolder and changed return types of getCaptions ( ) to Set to improve code clarity
added connection pooling methods and modified execution count in test classes to improve resource management and ensure proper connection pooling behavior
danielwagnerhall : add opera blink capability to the session
do not swallow exception in managejournalspanel . download ( )
added multiple new Lifx product types to the LifxProduct . java file to enhance the product identification process for improved functionality
added asynchronous handling to the OverseerCollectionProcessor , CollectionsHandler , CollectionsAPIAsyncDistributedZkTest , and CollectionsAPIAsyncDis
refactored static final variables in PostgresDatabase and refactored assertions in PostgresDatabaseTest to improve code readability and maintainability
updated LogPanel and SummaryPage to use the repository model ' s HEAD reference when objectId is empty to ensure that the correct reference ID is used
changed the model space calculation from unit _ Y to unit _ XYZ in SkeletonInterBoneWire . java to ensure the correct transformation of
added a ` browserDestroy ` method to ` AndroidImplementation ` and replaced the ` deinitialize ` method with a ` destroy ` method to improve
added a wait for active collection for readApiTestViolations in AutoScalingHandlerTest . java to ensure that the test relies on the correct
refactor loop structure in ScreenTerminal . java to use indexed indexing instead of enhanced for - each loops to improve readability and maintainability of
updated the controller state check in SoftResetAction . java to include specific controller states to improve the logic for determining the state of the application
disable on - disc stream cache to speed up texture pack reloading
added parentFolder assignment logic in Request . java and RequestV2 . java to ensure proper retrieval of the DNA resource based on the media
server : fix typo find by codespell on fossies . org
refactor FileOutputStream initialization to include a custom close method to ensure proper resource cleanup and prevent potential resource leaks
added error handling for RestClientException when retrieving the number of issues in the repository to improve robustness by catching potential HTTP 403 responses and provide
log4j2 - 1349 add test for messagefactory2adapter . getoriginal ( ) .
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern to allow minor version numbers to ensure compatibility with the latest version numbers
added initial and dismiss delay settings for ToolTipManager in ExtractionModelFrame . java to enhance user experience by improving tooltip appearance and
refactor ProjectCommand . java to utilize an ImmutableSet for passed - in targets and improve target management to enhance code clarity and maintainability
added UTC timezone configuration and a test for the format2445 ( ) method to ensure accurate formatting of time values in UTC
updated MediaSessionConnector . java file to improve session management functionality
remove jssefactory dependency , use endpoint . gethandler ( ) . getsslsupport ( ) instead
updated accuracy display format in GpsLoggingService . java to use getAccuracy ( ) instead of getAltitude ( ) to improve accuracy accuracy
added support for future exchange configuration in BinanceExchange and updated associated services to conditionally adapt futures based on exchange settings to enhance flexibility in
modify admin account management to use instructor course table instead of account list
added a method to set the accept queue size for the connector to ensure the connector respects the maximum number of worker threads
updated the method of obtaining the watchServiceEnabled to use a constant instead of the class name to improve maintainability and readability of the
http : / / issues . apache . org / activemq / browse / amq - 2290 - fix jmsfactory for ssl
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test cases in ` TestWindow
updated duration calculation in GCInspector . java to allow for zero duration for fast collection to improve performance by avoiding unnecessary assertions
fix npe in nodewithjavadoc # getjavadoc ( ) when linecomment be empty
replaced the reserveMemory method with a readReservedMemory method in WhiteBox . java and added a check for OSX to improve memory handling
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that region
hbase - 2696 hbaseadmin . gettable ( ) should print procid when wait for operation
camel - 14850 : camel - cxf - allow to configure the serviceclass of the wsdlservicefactorybean
refactor YamlChangeLogSerializer to serialize databaseChangeLog as a map instead of a formatted string to improve code readability and maintainability by
replaced ` println ( ) ` with ` print ( ) ` for output formatting in SchemaPrinter . java to improve readability of error messages
replaced custom message sending with ` C . NOT _ IN _ PLOT . send ( player ) ` in ` DebugRoadReg
updated references from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure proper context is used for
updated the @ GeneratedValue annotation to include a " native " generator in multiple classes to ensure compatibility with Hibernate ' s native generation strategy
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method signature and improve code clarity
added position and remaining parameters to the write method in BZip2Codec . java and changed ByteBuffer initialization in TestBZip2Codec . java
move initlogger ( ) to geogebralogger , move it to web applet
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified Value . java to use it to define a default value type for empty
updated group comparison from ` = = ` to ` . equals ( ) ` for consistency to improve readability and maintainability of the code
updated Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future development
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated ` VersionedTargetGraphBuilderTest ` to utilize it to
rename min / max / mean row compacted size to min / max / mean row size
fix json serialization issue in metadata collection ( # 3746 )
added a check for the presence of a previous element in the sobj array before setting it to ensure that the correct element is removed from the
updated file upload logic to use the remote parent path instead of the local file path to ensure the correct file ID is set for the current upload
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure correct processing of supplementary characters in
added unit test base on user forum issue
updated subscription streams in BinanceIntegration and BinanceUsIntegration to include " ethbtc @ depth20 " and " ethbtc @
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to reset allocation state
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
refactor property handling in mmm Agent . java and add a new class AgentCMETest . java for testing management properties to ensure thread
refactor ModelUtils to improve code readability to enhance maintainability and facilitate future development
refactor methods in AbstractDoubleArrayAssert for improved clarity to enhance code readability and maintainability
updated width and height calculations in Legend . java to include bounds checking for non - empty labels to ensure proper alignment of text dimensions based on
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf and CodeFirstSpringmvc classes
replaced the method of retrieving term frequencies from ` d . get ( fieldName ) ` to ` d . getValues ( fieldName ) ` and added
replaced dependency on CxxLink with BuildTargetSourcePath in Omnibus . java to utilize the new BuildTargetSourcePath
add a disabled message if the versioning feature be not enable .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable in ` MediaFolder `
removed the " - b " argument from AidlStep and updated the formatted string in GenAidlTest to streamline argument handling
fix for mondrian - 179 : delete obligation on edge
added a TODO comment to clarify the purpose of the test in FakeHttpLayer . java to improve code readability and maintainability
replaced error handling with a revokeLeadership call in EmbeddedLeaderService . java to ensure proper resource management and prevent potential issues with leadership
refactor CompositeDiscoveryClient to use reactive methods for creating Flowable instances to improve code readability and performance by reducing stream operations
replaced calls to ` applySystemConfiguration ` with ` applyQualifiers ` in multiple files to standardize method names and improve clarity in
[ hotfix ] [ doc ] update jobmanageroptions description
renamed ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and updated related methods for better clarity to improve code readability
added reflection - based class loading for WoodstoxInputFactory and WoodstxOutputFactory in XmlUtil . java to ensure compatibility
refactored the test setup method in AuditAliasCommandIntegrationTest to use a separate setup method to improve code readability and maintainability by
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to streamline code for better readability
( chore ) camel - cxf : disable test that do n ' t support invocation without parameter
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions during the update process
refactor ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and improve the ` addProviders ` method to enhance
refactor background filling logic in HSSFCellStyle and HSSFFont classes to improve clarity and maintainability of color manipulation logic
[ hotfix ] [ benchmark ] fix checkstyle violation in zoneddatetimeformatterbenchmark
refactored the ` shouldBufferUpdate ` method in ` DistributedUpdateProcessor ` and added a new test class ` DistributedUpdateProcessorTest `
added a null check for the rocket ' s stage in SimulationListHandler to ensure proper handling of null rocket stages
make / editreplace / / replace and / / editscript clearer , and add an option to / / editscript to replace .
refactor ExtendedMasterSecretExtension to improve code structure to enhance maintainability and readability of the code
changed the processor variable from non - final to final in AndroidInput . java to ensure immutability of the processor variable
added a listener to handle write failures in WritableKeyProcessor to improve error handling by notifying when the end of stream is encountered
added " CUBE " to MySQLDatabase . java to support CUBE - specific database functionality
added a try - catch block around the rm ( snapDir ) method call to handle potential IOException during cleanup
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectRunner ` and updated related methods and classes to
replace reflection - based field retrieval with direct calls to ` httpClient ` methods in ` DefaultOkHttpClientFactoryTest ` to improve code readability and
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when output is null
ggb - 1193 make sure av . getparentsplitpane ( ) and av . getparentinertia ( ) do n '
modified the ` jailerMain ` method to include a ` fromCli ` parameter and updated the exception message accordingly to allow users to specify
refactor HttpRequest class to improve code structure to enhance maintainability and readability of the codebase
added a shared preference for unread notifications in the TalonPullNotificationService to enable users to manage unread notifications effectively
added a check for the kind of the parent object before accessing its properties in IsNullNode . java to ensure proper handling of object types during null
updated Box2DTest and Pong classes to use a new OrthographicCamera constructor and improved memory management to enhance camera functionality and
updated layout manager initialization and added null checks for mRecyclerView and mCommentsRecyclerView to improve code robustness and prevent potential NullPointerExceptions when
changed log level from trace to warn for background operation abortion to improve logging clarity by indicating that the operation was aborted
fix a bug in jimplebodybuilder when the method be not abstract .
ggb - 1346 do n ' t call app . invokelater in ie10plus , but do n ' t call it
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified the user retrieval logic to include device IDs to enhance
updated the baseUrl in CGIARProvider . java from " http : / / droppr . org / srtm / v4.
removed unused listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
make getdefault ( ) return a boolean and add exception handling in ui router
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods in ` BuildRuleResolver ` for improved clarity and functionality to
set the visibility of transportSpinner to GONE when makingShortcut is true to improve user experience by disabling the transport spinner when shortcuts are made
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
modified back button handling in multiple fragments to return a boolean indicating success to improve user experience by preventing further actions on the back button
added support for long view index configuration in QueryServices and its option in QueryServicesOptions to enhance flexibility in managing long view index data types
corrected the casing of the variable name from " V " to " v " in SDRTrunk . java to ensure proper formatting
replaced direct path manipulation with StringUtils . cleanPath for better path handling to improve code readability and maintainability by using a consistent utility method
removed the columnPosition parameter from the diffDropColumn method in MTable . java to simplify method signature by eliminating unnecessary parameters
updated IndexWriter and IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
hbase - 11301 add option to disable strict column family check in importtsv
[ java ] keep track of log subscription id for log recording .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent ) ` and added visibility control for voice button
added a condition to return early if the first element of the JSON node is " i " to ensure proper handling of single - element JSON nodes
refactor Procedure class to improve code structure to enhance maintainability and readability of the codebase
updated resource bundle loading to include default locale and system class loader to enhance resource loading flexibility in the application
[ kotlin ] add normalizearraycreationskotlin pas to generate kotlin array literal .
added checks for mincount and hasAnyCount before incrementing segments in PerSegmentSingleValuedFaceting . java to ensure correct handling of term
fix potential npe in modmetadata # getauthor ( string )
added a new OSGiTest class and implemented tests for Google Gson annotations and Sun . misc import packages to ensure compatibility with Java ' s
nifi - 3746 : fix controller service enablement check in propertydescriptor . enablereferencingservicesgraph
hbase - 13434 remove unused parameter from htable . setautofetching ( boolean )
test ( annotation ) : add test for annotation applied on any element in a class
added hasUserData method to SimpleFeatureImpl and its corresponding test in SimpleFeatureImplTest to ensure proper handling of user data in feature processing
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for improved performance
added a new class ` InJavaSourceSet ` to handle Java source sets and updated imports in ` UsesJavaVersion . java ` to enhance
do n ' t run wfpc2u5780205r _ c0fx . fits if it ' s n ' t
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter instances with specified attributes
removed the use of external storage preference from the SDK version check to simplify the condition for SDK version compatibility
added a new constant ` INDEXER _ NO _ COMMIT ` to ` IndexerMapReduce ` and modified ` IndexingJob ` to
server : make diskofferingid and snapshotid optional in createvolume api
added a null check for the content variable in ToHtml . java and updated the assertion in BaseTestCellComment . java from assertFalse to
added checks and logic to handle ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling
added a new file ` Issue382 . java ` and modified ` Routes . java ` to include error handling for specific HTTP error types to
replaced the static method ` signum ` with a direct import of ` Integer . signum ` in ` PositionUtils . java ` to simplify code
set the visibility of the holder ' s text to GONE if the condition is met to improve user experience by preventing unnecessary text visibility
fix ( jdt ) : fix classcastexception in ctimportimpl . getimportkindfor ( ctreference ) ( # 3998
simonstewart : fix the firefox driver service to get the profile .
make liquidblock implement bucketpickup , fixes # 61422
fix intermittent test failure in amq2902test
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
refactor DistinctErrorLog to replace existingObservation with distinctObservation for clarity and consistency to improve code readability and maintainability
updated test configuration to use TestGroup annotations instead of hardcoded false values to enhance flexibility in testing configuration based on test group annotations
renamed the method ` createLogger ` to ` getOrCreateLogger ` and modified its implementation in ` SQLEditorSupport . java `
add miss denyaccess ( class , method , field , proxy ) to graalcontext
refactor image processing to use WritableRaster for improved performance and clarity to enhance performance and reduce memory usage during image processing
updated the invocation of verifyAndAddTransactionalProperties to include the partition ' s descriptor to ensure transactional properties are correctly validated for the Hive table
updated the logic for determining overlay scrolling behavior in Workspace . java to improve clarity and functionality of overlay scrolling behavior
hhh - 15413 add an unmodifiablebatchbuilder in order to support concurrent modification
rename shouldnotreachhere ( ) to shouldnotreachhere unexpectedinput ( )
added a new test class ` MockWithStaticStateDemo ` and a corresponding test method in ` PartialMockingRetainsStateTest ` to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing to
added error handling for null ugi and action execution in SecurityUtil . java to improve robustness by handling potential exceptions during action execution
updated error handling to include the AL error code in OpenALMusic . java to improve error reporting by providing more context for audio buffer allocation
camel - 16463 : camel - jbang - rename endpointhelper . reslovestringparameter to endpointhelper . resolveparameter . de
updated precision and scale handling in RexNodeConverter . java to improve precision and scale management to ensure accurate representation of decimal types in the R
updated retrieval of vendor and device properties to use Optional for null safety to improve robustness by handling potential null values gracefully
updated the ` updateAccount ` method to use the current time instead of a hardcoded test name to improve clarity and accuracy of the account
changed the type of ` topStage ` from ` AxialStage ` to ` RocketComponent ` and updated selection logic in ` BasicFrame
added getter and setter for longRunningTime in mmm Args . java and initialized it in mmm Args . java to allow configuration of long
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and introduced a new class Ideas _ 2012 _
updated import statements and method signatures in HttpServerProvider . java , ScriptEngineManager . java , and FtpClientProvider . java to improve code
[ geot - 6752 ] fix xmlunit unit test ( # 6753 )
updated assertions in TestRestClientRequestImpl to use the correct order of buffer and client request headers to improve code readability and maintain consistency in assertion
updated the condition to check if the referenceDatabase is equal before proceeding with the alreadyExists check to ensure that the comparison logic only proceeds
removed the ` addAndroidConstants ` method and modified the handling of ` proguardConfigPath ` to streamline the code and improve readability by
refactor assertions in DuplicateCookieTest and SessionRenewTest to use ` await ( ) . until ( ) ` for better readability to improve
added user _ args and is _ daemon information to the ImmutableMap builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance traceability
fix miss resource bundle in jdk11 +
updated log message from " match limit " to " match order " in HepPlanner . java to clarify the purpose of the
added a new file TheRockMetaDataDemo . java to demonstrate how to retrieve and print exchange metadata from the Therock
changed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to be strictfp and added a strictness test in ` ParseDouble
removed the unparseIdentifier call from columnNamesBuilder to simplify column name handling by directly using the original column name
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the ` contextFreeTemplate ` method to include
added a check for non - synthetic methods in InstantiateStaticClass . java and implemented a new test method in Bug1282 . java to ensure
replaced ` getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to streamline path retrieval
added handling for pending resources and conditions in IkStepDefinition . java to improve resource management and error handling during message execution
changed the access modifier of ` equals ` and ` hashCode ` methods from ` final ` to non - final in multiple type classes to allow overriding
added a method to retrieve the default synchronization level and modified the SyncLevel enum to include a null check for the ' syncLevel ' parameter to
fix flaky test controlcommandstest . testclientpause ( )
added a condition to check if the shard state is not RECOVERY in RecoveryStrategy . java to ensure that recovery operations are only performed when
corrected syntax in the create method call in opencv _ core . java to improve code readability and maintain consistency in method syntax
added sdkPath to AppleBundle and modified makeProcessExecutorParams to accept ExecutionContext and set the SDKROOT environment variable to enhance functionality by
[ hotfix ] remove dead code in blobcleanuptask
bug 10562 : fix typo in log and exception message
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion logic for sort and union types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of
fix typo find by codespell on fossies . org
updated the proxy retrieval method in EmbeddedVelocityToolboxView to specify the class loader when obtaining the ServletContext
refactor nightly build checks and update related localization strings to improve code clarity and maintainability by centralizing version management logic
added support for removing trailing / ' s from SQL statements in OracleDatabase to ensure proper handling of trailing / ' s in SQL statements for Oracle
make null _ value _ analysis _ assumensp = true configurable via system property findbugs . nullderef . assumensp
fix broken unit test due to port conflict
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values , and refactored text
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
reformatted method signatures in MaxRectsPacker . java for improved readability to enhance maintainability and clarity of the code
( chore ) camel - kie - services : fix javadoc warning
added help page management functionality in PMS and updated HelpTab to use it to improve user experience by allowing users to navigate to the help page
added GeocodeProviderFactory and Constants interface files for the Omni Notes Beta package to provide functionality for geocoding and preferences in the
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to reflect the correct package structure to ensure compatibility with the latest
refactored exception handling in tests to use Assert . fail instead of ExpectedException to simplify error message verification and improve code clarity
fix memory management for python proxy and gateway server
updated conditions in ` SegmentsInfoRequestHandler . java ` and refactored collection creation in ` CollectionsAPISolrJTest . java ` to
updated the calculation of ` numPredictiveAppCols ` to consider phone device type to improve accuracy of predicted app columns based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage in ` DrillJoinRelBase `
add a new build craft block to make it easy to demonstrate .
updated layout parameters for drag target and search bar in DeviceProfile . java to improve layout management for better user experience
change yahoosession . run ( ) to yahoosession . start ( ) so that it do n ' t wait for the
initialized ` ms ` to ` null ` in ` HiveMetaStore . java ` and modified error handling in ` HiveMetaStoreClient . java
updated the ` getDisplayScript ` method to accept a ` Category . DISPLAY ` parameter and added a test for bug 7079486 to ensure
updated references to ZkStateReader to use constants from ZkStateReader instead of static imports to improve code readability and maintainability by
replaced ` ThreadLocalRandom ` with ` Random ` for random number generation in ` StoreDirectTest . java ` to improve performance and reduce
added a check to determine if the launcher is ready before backuping data to ensure that backup operations are only performed when the launcher is ready
updated error messages in IllegalArgumentException to include space and position information to improve clarity of error messages for better debugging
camel - 16400 : added unit test base on user forum issue
rename variables and methods related to bar space from " body space " to " bar space " across multiple classes to improve clarity and consistency in
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
refactor test to use temporaryfolder and file . newfile ( ) instead of file
added multiple logger level settings for express , quartz , reflections , Jetty , and MongoDB in Grasscutter . java to
changed the visibility of ` highlightCnstScrRngQuery ` from instance to static in ` SpanScorer ` and modified related methods
added a method to retrieve the current state of the workspace and modified a condition in the overview mode check to improve state management and ensure correct behavior
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
updated conditional checks in SnippetTemplate . java to include a cacheable argument to ensure template notifications are only sent when the cache is enabled
added a new scope constant ` SCOPE _ SOLR _ CORE ` and modified several classes to incorporate it to enhance scope management
added primary key constraint to the " measurement " table in DatabaseMetaDataTest . java to ensure the correct primary key is used for the measurement table
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in ` PantheonCommand . java ` and
refactor session creation logic in HttpSessionContextIntegrationFilter . java to improve clarity and ensure proper handling of SecurityContextHolder contents during session creation
added a new file ` TestIfWithDeadRegion . java ` with a method to retrieve a string value from a string to facilit
rename english ud to english usd , fix typo in dependencyparser
added HighResolutionTimer enabling and disabling for concurrent access tests in SnowflakeIdGeneratorTest to improve performance and control over concurrent access tests
added a boolean variable ` staticUi ` in ` AppSettings ` and modified ` MainFragment ` to conditionally hide the toast bar based on
replaced an anonymous Privilege implementation with a lambda expression and added a local free operation in a finally block to ensure proper resource management and
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler . java ` and modified ` WhitelistLogoutHandler .
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve localization support
tika - 3746 -- add miss mime type detection for excel file from tika - tika - app
added logging statements and improved feature path handling in the Runner and FeaturePath classes to enhance traceability of feature loading and enhance logging clarity
camel - 14850 : camel - eip - maven - plugin to generate spring - boot tooling metadata to fool java editor to
do n ' t wait for migration when endpoint be remove . patch by jbellis
added debug logging statements and refactored audio notification and playback device handling in DeviceConfiguration . java and PortAudioAuto . java to improve trace
added ` WebsocketConfig ` and modified ` WebSocketPluginConfiguration ` and ` WebSocketPluginConfigurationTest ` to utilize the maximum frame payload size
added TestRunner support and result queue management in CacheValidationListener to enhance test execution capabilities and improve performance during test execution
replaced direct trimming of the content length with a conditional check before adding it to the document to ensure that content length is only added if
fix potential deadlock in defaultsolvingjob . solvingfinished ( )
added handling for ` PathAlreadyExistException ` during timeseries creation in ` MManager . java ` to improve robustness by ignoring PathAlreadyExist
added a method ` check ( boolean result ) ` to the Authz class to provide a way to access the result of a boolean operation
changed access modifiers of several methods from public to protected in several classes to restrict access to these methods for better encapsulation
server : fix listvirtualmachines api do n ' t return reserve / unassigned vms when listvirtualmachines api command be pass in
removed conditional assignment of ` _ valueString ` in ` HttpParser . java ` and updated test method names in ` HttpParserTest . java `
added a method ` threadCompleteInitialization ( ) ` to ` J9VMInternals ` and removed it from ` Thread ` to streamline
added a new method ` getExternalStoragePublicDirectory ` to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` to enable testing
[ drools - 9 ] fix type coercion after mvel 2.1 . 0 . drools9
updated import statements and improved code formatting in LoggingConfig . java , DbgPacker . java , and DbgPacker . java
added exception message to the logging statement in ActionNode . java to improve debugging by providing more context for exceptions during construction
remove the tel : from the to number if it do n ' t contain it .
refactor visibility logic for shared file in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated ` HIVEOPTSORTDYNAMICPARTITION ` configuration in ` HiveConf . java ` and updated its usage in ` Test
refactor ` Operation ` and ` ExecuteStatementOperation ` classes to use a new ` confOverlay ` map for session and query IDs to improve
replaced usage of Google ’ s Lists utility with Java ' s built - in ArrayList and HashSet in the BTCMarkets
[ geot - 5449 ] fix unit test in ogrdatastoretest ( # 5449 )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to streamline the code by eliminating unnecessary functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future development
camel - 14850 : camel - netty - http : fixed the issue of camel - netty - http should use the port number
replace system . out . println with log . info and log . error with log . error
added a condition to check if the number of rows in the connection list does not exceed the size of the connection list to prevent potential ArrayIndexOutOfBoundsException
[ java ] methodwithsamenameasenclosingclass - add a new rule to report method with the same name as the enclosing class .
added ` ExtendedPlatformComponent ` class and refactored ` ManagementFactory ` to utilize it for MBean retrieval and proxy creation to improve management
replace double quotes with backslashes in SQL statements to ensure SQL queries are properly formatted with backslashes
updated DTO response paths to include " org / knowm / xchange / bleutrade / dto / " prefix to ensure compatibility with
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future development
added a filter parameter to the AbstractSpatialFieldType class and updated the FilteredQuery instantiation to use it to enhance query flexibility by allowing filter
removed progress display and visibility checks from GpsLoggingService and added a post to update results email sent in AutoEmailHelper to streamline the
replaced ArrayList with HashSet for inlinks and added an iterator method in Inlinks . java , LinkDb . java , LinkDbReader .
added a synchronized method to stop scanning in TradfriDiscoveryService to ensure proper cleanup of older results based on the current timestamp
modified the ` filterForPartition ` method to accept a boolean parameter to control the behavior of partition filtering based on server - side filters
added " Abandoned " status and " Closed " to the status arrays in TicketModel , TicketBasePage , and TicketsPage classes to
removed the default value of ` columnAliasPrefix ` from multiple platform classes to simplify the code by eliminating unnecessary initialization
updated data types from Text to BytesWritable in multiple classes to improve compatibility with binary data handling
add warn when run on a 32 - bit jvm on a 64 - bit system .
pdfcopy : fix a bug where parent be not be add to a top page .
added a new option ` DAEMON ` to the ` OptionEnum ` class and implemented daemon mode functionality in ` TerminalClient ` to
added a new file ` FlushIndexTask . java ` to implement a performance task for flushing the index buffer to ensure that the index writer is
make sure we do n ' t write too much disk space when create sstables
added a check for SEASONS output in addition to TEXTS _ NOSORT in MediaLibraryFolder . java to ensure proper handling of
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using IPv6 addresses to ensure that IPv6 addresses are correctly
updated grid size points in GridSizeMigrationTask . java to ensure consistency in grid size configurations
updated method calls from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve clarity and consistency in
added READ _ ONLY option and modified transaction handling in Context . java to improve flexibility in transaction management during read - only scenarios
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future development
updated lastRunEnd calculation and adjusted offset check in BlockBoxing . java to improve accuracy of lastRunEnd validation by using ceiling instead
updated exception handling in GracefulStopTest to check for both ClosedChannelException , EofException , and EOFException to ensure proper handling of
refactor locking mechanism to simplify listener management in NetJavaImpl . java to improve code readability and maintainability by eliminating unnecessary locking
refactor NetworkParameters class to improve code structure to enhance maintainability and readability of network parameters
updated account asset optimization configuration in DynamicPropertiesStore . java to ensure proper configuration of asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to 0 in VM . java to provide a mechanism for
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to ensure proper exception management during transaction processing
[ java ] removed exceptiontypechecking rule which be no longer use
updated resource retrieval to fallback to English and improved error logging messages to ensure fallback to English when no localization is available for a file
added a new file ` ProcessorInfo . java ` that defines methods to determine available processors based on the " Cpus _ allowed " system property
add - html option to generate html output ( default stylesheet )
[ micronaut ] fix npe in logbackloggingsystem when logger . config be null
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve cluster ID handling and enhance data management during service component recovery changes
polish ` ` remove conditional on property ' ' for spring . profiles . active = tag - propagation
refactor rustDepType assignment in RustCompileUtils . java to use a switch statement to improve readability and maintainability of the
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` for query parameters and added error handling to
hbase - 2643 fix halfstorefilereader seek to first kv in file
hhh - 15546 - deprecate @ generatetime annotation and introduce @ generatetime . isalways
[ nd4j ] add test for layer normalization ( nan )
replaced direct calls to ` showShareFile ` with a call to ` getFileOperationsHelper ( ) . showShareFile ` across multiple activities
added a new test class ` LiquibaseUpdateMojoExecutionTest ` for testing LiquibaseUpdate Mojo execution to ensure correct
convert the proxyType string to uppercase before setting it to ensure consistent handling of proxy types in the application
add a new mod _ minecraftforge . java file for mod _ minecraftforge . java to provide a way to
refactor JdbcDatabaseSnapshot to improve column filtering logic and enhance readability to enhance performance and maintainability of the data retrieval process
added a new Container to the CSSBorderTest class with a styled label to enhance the styling of a label in the application
refactor LoadBalancerAutoConfiguration and add RetryInterceptorAutoConfiguration , and introduce RetryableStatusCodeException for better error handling to improve robustness of
replace ` FILL _ PARENT ` with ` MATCH _ PARENT ` in ` CellLayout ` constructor to improve layout behavior by allowing more flexible
updated the calculation of ` parentTaskName ` to use ` currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to improve accuracy of task
added error handling for invalid input in AddServiceRequest to improve robustness of service request processing
simplify the return logic in IndexDatabase . java to enhance readability and maintainability of the code
[ giac ] make sure ggbround ( x ) do not round to 2 if x [ 0 ] = x [ 1 ]
updated AnonCipherWithWantClientAuth . java file to enhance authentication algorithm functionality
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the codebase
make evictiontest more resilient to slow machine
replaced internal encoding method with a direct password encoding method in Md5PasswordEncoder . java to improve code clarity and maintainability by
replaced the local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve
refactor Response class to improve code structure to enhance maintainability and readability of the code
fix sstablemetadata . getmaxtimestamp to use max _ value instead of min _ value
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added null and emptiness checks for replies in multiple classes to ensure proper handling of empty or null values during message compression
updated the ` toString ` and ` equals ` methods in ` HitbtcBalance ` to use ` java . util . Objects ` for
fix ( sql ) : fix order - by when use in statement
changed return statement from ` s ` to ` addrs . toString ( ) ` in ` RetriesExhaustedWithDetailsException . java `
use open cookie to open the gcode file when open a gcode file
updated HTTP client imports and refactored connection manager initialization in JsonToGrpcApplicationTests . java to use the new version of Apache HttpClient
updated energy removal logic in PipePowerWood . java to ensure accurate energy management based on stored energy
added a check to delete the temporary output file if it exists to ensure that the temporary output file is clean before proceeding
updated JSON property name from " tid " to " id " in BitstampWebSocketTransaction and added new test cases in BitstampStreamingMarket
added expiration checks in ` ReplayProcessor ` and ` ReplaySubject ` , and created corresponding unit tests in ` ReplayProcessorTest `
fix checkstyle violation in citationstylegeneratortest
refactor SQL statements in MediaTableFiles . java for column insertion and retrieval to improve readability and maintainability of the code
show only definition for equation in exam only
fix an npe in sipcommtextfieldui when the component be null .
hbase - 22705 add cache for meta scan ( addendum )
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code readability and maintainability
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable or disable the transient taskbar feature in
[ hotfix ] fix checkstyle violation in accessexecution and archivedexecution
added a condition to set density to 3 f if scale is set to 3 in IOSGraphics . java to ensure proper rendering behavior when scaling
rename the ` optional ` field and related methods to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in variable
[ hotfix ] [ runtime ] add exception to log in regionstatestore
replaced an anonymous AssertTask implementation with a lambda expression for assertTrueEventually in TestClusterUpgradeUtils . java to improve code readability
updated warning log message and refactored async context test classes for clarity to improve logging clarity and enhance asynchronous request handling
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search functionality
added logic to set lock mode for read - committed transactions in the database to ensure proper locking behavior when the database is in a read - committed
skip big endian test on amd64 only .
updated type checks for input and return values in Scalars . java to improve type safety and ensure proper conversion of Integer and StringValue to String
improve error message in createtablestatement when there be only one primary key
added conditional checks to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to ensure proper
improve error message when there be no flutter isolate
added new header configurer methods for various header writers in HeadersConfigurer . java to enhance header configuration flexibility and facilitate easier
refactor methods in ObjectEnumerableAssert for improved clarity to enhance code readability and maintainability
danielwagnerhall : move cdp test to the grid router package
added type attribute to @ aggregateroot in testsourcingrepositorytest
added support for handling prebuilt libraries in Python in - place binaries to improve the management of prebuilt libraries during the build process
added client authentication handling in NetServerOptionsConverter and updated HttpServerOptions to use DEFAULT _ CLIENT _ AUTH instead of a deprecated flag to improve flex
hive - 20228 : configure repl configuration directory base on user run hiveserver2 ( anishek agarwal , review by sankar hariappan )
refactor task view management logic in RecentsView . java to improve clarity and functionality to enhance code readability and maintainability by
increase test timeouts to prevent flakiness
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in variable naming
fix the issue that pipelinebuilder # dealwithconsumeallchildrenpipelinebreaker do n ' t set exchangesumnum correctly
added import statement for ClassLoaderHandler in module - info . java to utilize ClassLoaderHandler for improved class loading functionality
bugfix : do n ' t call solution business . solve ( ) in event thread
added JsonIgnore annotation to ApplicationSettings . java to disable JSON serialization during serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure proper handling of null throwable scenarios
replace direct access to queryInfoMap with a variable for improved readability to enhance code clarity and maintainability
fix auto workbench animation not show when there be no recipe
fix ( gl200text ) : fix npe in gl200textprotocoldecoder
rename timeColumnName and fieldSpec to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to improve cl
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
add initializable interface to provide a way to inject initializable object
add longtasktimer . active tag to the longtasktimer . stop ( ) example
changed the type of SYNC _ DELTA _ RATE from float to double and updated related calculations in AdaptiveFetchSchedule . java
modify abstractstandardfragmentinsertiontagprocessor to warn about deprecation in thymeleaf syntax
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes map
http : / / issues . apache . org / jira / browse / amq - 4238 - fix for amq - 5
added new color constants and modified the extractInto method to use applyFallback to enhance color extraction functionality and support for dark text hints
added accessibility check for data folders in SketchBuilder . java to ensure data folders are accessible and include full paths in the source folder list
replaced ` TextUtils ` with Apache Commons ` StringUtils ` for title handling in ` NotesHelper ` to improve code readability and maintainability
removed initialization of SessionRegistryImpl from ConcurrentSessionControllerImpl to simplify session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in NettyStreamingService . java to improve debugging and monitoring of reconnection failures
replaced ` Factory ` instances with ` Proxy ` instances in multiple test files to ensure compatibility with the internal Javassist proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread storage to improve performance and reduce contention in multi - threaded
updated SocketExceptions . java and ExceptionText . java to improve error message formatting and added address verification in ExceptionText . java to enhance clarity
added a check to verify if the view directory is under the repository directory to improve error handling and provide clearer feedback when view directories are under
remove ` ` tab - header - area ' ' from tab pane
8015369 : [ testbug ] add ` ` - xx : + usecompressedoops ' ' to runtime / class /
removed error logging for update logs in PeerSync . java to streamline error handling for outdated updates
deleted the ConnectionHook . java file to remove unused or redundant code related to PostgreSQL connections
updated waitForReplicasInSync handling across multiple test classes to ensure consistency in synchronization mechanism across replicas
camel - 14850 : camel - swagger - allow to specify the actual type of the parameter
updated version handling in ApexLanguageModule and implemented hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with the current version of
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory and improve thread management to enhance performance and flexibility in managing aggregate execution
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter to enhance flexibility in buffer management during WebSocket connections
added scroll functionality to the layout manager for the thumbnails in UploadActivity . java to improve user experience by allowing scroll to the top of the thumbnail
fix ( sql ) : fix ( sql ) : fix duplicate column name in sample by
refactor the ` onDraw ` method in ` LauncherAnimUtils ` and add a new ` dispatchOnLauncherTransitionStepAnim ` method
added functionality to disable the default user agent in the HTTP client configuration to enhance flexibility by allowing users to specify a default user agent
added a pubsubhubbub flag to the ApplicationSettings and modified FeedRefreshUpdater to conditionally handle PubSub based on its value to enhance flex
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method for better error handling
updated the method to check for synthetic classes in StubJarClassEntry . java and adjusted the corresponding test in CalculateAbiFromClassesStepTest
added dspacewebapp . java to implement a web application that do not have a ui
added null check for leftTableAlias in CalcitePlanner and implemented a method to retrieve the table alias containing a column in RowResolver to ensure
updated trigger key identity to include " Trigger " in JobGenerator . java to improve clarity by specifying the purpose of the trigger key
updated log messages in Wallet . java to use more descriptive log levels and improved error handling to enhance logging clarity and provide more context
updated imports in BasicMapTest . java for consistency and clarity to improve code readability and maintainability by using specific utility classes
updated the declaration of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added TlsClientCertPolicy enum and its usage in GitBlitServer to manage client certificate policies to enable flexible configuration of client certificate
added a debug log statement to indicate when a new CHALLENGE has been saved in the KrakenFuturesStreamingService class to improve
added headers to ProxyWebSocketHandler and implemented subProtocols retrieval to enhance WebSocket handling by allowing dynamic configuration of WebSocket protocols
added a debug log statement to the HiveQueryResultSet class to facilitate debugging and monitoring of query results
updated string formatting for dimensions and label in HolidayEventFormatter . java to improve readability and maintain consistency in string representation
refactor inner class handling in FinalizePrivateFieldsTest and enhance type checking in FinalizePrivateFields to improve clarity and maintainability of inner class
[ hotfix ] [ runtime ] fix checkstyle violation in unexpectedjobexecutionexception
deleted the module - info . java file and modified AquaLookAndFeel . java and AquaUtils . java to remove
updated maxFreq handling to maxCost in DrillSidewaysQuery . java and DrillSidewaysScorer . java to improve accuracy in
added GeoDegeneratePath . class to classRegsitry in StandardObjects . java to support the GeoDegeneratePath functionality in the
removed the ` preFill ` parameter from several pool constructors across multiple classes to simplify the pool initialization by eliminating unnecessary parameters
added a new flag ` FLAG _ STASHED _ IN _ APP _ SYSUI ` and updated state management in ` TaskbarLauncher
added null check before accessing the default style in CascadeDeleteVisitor . java to avoid potential NullPointerException when accessing the default style
refactor GuiUtil to use a unified setSize method for setting dimensions and introduce a new MarqueeLabel class to improve code
refactor icon assignment logic in FileTreeViewHolder . java for improved readability and maintainability to streamline code structure and enhance the
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve clarity and accuracy in resource validation
fix thread safety issue in xmlreporter
add test for nativeworker with probability function
added deregistration of the current client container in the shutdown thread to ensure proper resource management during application
added a method to drop temporary tables in SybaseASE15Dialect to provide a way to control the dropping of temporary tables after usage
simonstewart : unignoring the color test for htmlunit
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve link indexing logic to enhance performance and maintainability of the link indexing process
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to improve clarity of reserved memory information for testing
do not update the timeline when there ' s no ad group
refactor equality check in MultimapSubject . java to use a boolean variable for clarity to improve code readability and maintainability by suppress
changed the frequency property value fetch from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate representation of the frequency
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced ` TreeMap . putAll ( includedLabelSets ) ` with ` TreeMap . new TreeMap ( includedLabelSets ) ` to improve performance by
added a constant NORMAL _ 4F and refactored the vertex format handling in VertexLighterFlat . java to improve null safety and maintain
added span tracing in TracingClientInterceptor , ITTracingClientInterceptor , ITTracingServerInterceptor , and ITHttpClient to
updated timezone handling in ScheduledTrigger . java to use TimeZone . toZoneId ( ) instead of ZoneId . of ( string ) to improve
added AsyncBucket and InMemoryExtension classes and updated Bucket and ConfigurationBuilder to support asynchronous operations to enhance bucket functionality and support asynchronous operations
refactor test class path retrieval logic in resexhausted003 . java to improve clarity and ensure correct handling of test class paths
reformatted code for consistency and improved readability to enhance maintainability and clarity of the code
refactor OngoingStubbing class for improved readability to enhance maintainability of the codebase
modified the web server management logic to use an Optional < WebServer > for improved flexibility to enhance flexibility in managing web server instances
updated variable name from ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static import for ` SolrHttpClient
added a check to ensure the thread allowlist is not utilised but not cleared to improve error handling and ensure that the thread allowlist is
replaced the method ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests ` to ensure the processor uses the correct
dmndtanalyser : do n ' t collect gap / overlapping if the hit policy be not collect
add a test for sliding window combine with combinelatortest .
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
removed the check for the " Running " attribute in the ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
updated the formatting of the code in the Solution . java file to improve code readability and maintain consistency
refactor AquaMenuBarUI to utilize AccessController for accessing system properties to improve compatibility with macOS and enhance security checks
glowentity . setrawlocation do n ' t set fall distance if the player do n ' t fall .
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance performance and maintainability of the query execution logic
added timestamp , parent hash , nonce , and number fields to the BlockUtil class to enhance block configuration by including timestamp , parent hash , nonce
rename loopsafepointinsertionphase to safepointinsertionphase for clarity
refactor code to use a local variable for child lists in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve readability
changed access modifiers of methods in ArtifactResolver from package - private to public to allow access to these methods from outside the package
stop the current thread in ClientConnectionHandler and dispose various objects in BulletPhysics to ensure proper resource management and prevent potential memory leak
added a validation check for maxBufferedDocs to ensure that maxBufferedDocs is at least 1 to prevent runtime errors
added state management for the login state in LoginActivity to manage user login state during the login process
added null checks in Pump . java and implemented a reverse order test in PumpTest . java to ensure proper handling of null values and
modified access modifiers of methods and fields in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to allow subclasses to access
updated the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java
added Jetty server configuration and handler setup in TestJNDI . java to enhance JNDI integration with the Jetty server
updated formatting and assertions in SortedDynPartitionOptimizer . java for consistency and clarity to enhance code readability and maintainability
change return value from NioEventLoop to true in FileStreamChannel . java to simplify the logic for determining if the loop is an instance
updated the calculation of newNumNulls in StatsUtils . java to ensure accurate handling of null values based on the new number of rows
camel - 16463 : camel - jbang - export - kamelet should only export karaf karaf karaf k
replaced OkHttpOAuthConsumer with OpenStreetMap and added authorization handling in OSMJob . java to improve API access token management and enhance
remove system . out . printlns and change return type to compilationresult in basicptxtest
added client authentication configuration to IoTDBRestServiceConfig and integrated it into RestService to enhance security by allowing client authentication based on configuration
replaced the instantiation of a HashSet with a new HashSet in PropertyAndSetterInjection . java and added a new test class ChildWithSameParent
update bloomuriuniqfilter to use bloomfilter64bit instead of bloomfilter32bitsplit .
updated the ` getCursorAdapter ` parameter from ` false ` to ` true ` in ` HomeFragment . java ` and added a preference to
updated the intermediate header height ratio from 1f to . 75 in ProfilePager . java to improve the responsiveness of the user interface
updated references to ` RuntimeEvent ` to ` RecompilationEvent ` and added a new class ` RecompilationEvent ` to improve event
added host system preparation configuration and methods in ExecutionCommand and Configuration classes to manage host system preparation status based on configuration settings
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and created a new test class ` UnknownChangeLogFormat
added logic to remove leading slash from the location if it starts with a slash to ensure proper handling of leading slashes in URLs
added properties handling for entities and scores in the StaticPipeline class to allow dynamic configuration of entity and score in the pipeline
refactor filename handling in Frame . java and add configuration check in WhoopsModule . java to improve file path management and enhance application error
[ geos - 7752 ] catalogrepository . getdatastorebyname now return null if it can not find a datastore
refactor Assert class to improve code readability to enhance maintainability and facilitate future development
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
fix test which randomly fail on slow ci server
replaced ` List < IMeasurementSchema > writeMeasurementScheams ` with ` List < MeasurementSchema > schemas ` in multiple files
updated loop syntax and added memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve code
updated the JAR file reference from " slf4j - log4j12 " to " slf4j - reload4j "
[ hue ] fix huebridgehandlerosgitest # testconfigurationerror
refactor package structure for multiple activities and update import statements accordingly to improve organization and clarity of activity - related classes
[ drools - 1276 ] ignore fail test when drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` , ` _ topicName ` , and ` _ gitHubAPI
refactor AbstractPart class implementation to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by catching potential LockException during lock management
replaced properties loading with ResourceBundle for GEM _ PATH and RUBY _ VERSION retrieval to improve resource loading efficiency and enhance flexibility in
replace the constant ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY for null or empty receive addresses to improve code readability and
updated variable declaration for classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
added setup and teardown methods in JobManagerStartupTest to ensure the blob storage directory is clean before and after tests to improve test reliability by
chore : [ datastream ] update protoc to v3.15 . 3 ( # 377 )
added an extras bundle to the builder in FileDisplayActivity . java to ensure proper bundle management during activity launching
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to improve code clarity by using more descriptive control
updated cluster name expectations from 4 times to 3 times in AmbariManagementControllerImplTest . java and AmbariManagementControllerTest .
removed the nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added exception handling in JpaTicketRegistry . java to
updated Bug4823811 . java files to improve code clarity and maintainability
replace direct addition of patternToDelete to args with a path relativizer function to improve path management by using the project filesystem ' s path relat
modified the requestFullState method to accept a boolean parameter indicating if an initial request is required to enhance flexibility in handling full state requests based
added an attribute attribute field and modified related methods in ShibbolethCompatiblePersistentIdGenerator . java to allow customization of persistent ID generation
removed duplicate @ Inject annotations in RequestValidationService . java to improve code readability and maintainability
refactor keyboard message handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by reducing duplication
updated formatting in ` FileNodeProcessor . java ` , ` MManagerBasicTest . java ` , and ` MTreeTest . java `
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a test to make sure slurpfile work with utf - 8
changed access modifier of ` client ` from protected to private and added ` @ FunctionalInterface ` annotation to several classes to enhance encapsulation and
refactor span assertions in TraceWebFluxTests to use a dedicated method for filtering spans to improve code readability and maintainability by redu
added support for DateWritable in ETypeConverter and updated related classes to support date conversion to enhance compatibility with Hive ' s date type handling
replaced hardcoded string " \ \ s * , \ \ s * " with a constant Patterns . COMMA _ SEPARATOR to improve code
make sure input box do not fail on invalid input
refactor column mismatch validation logic in SemanticAnalyzer . java to improve clarity and maintainability of the code
refactored document matching logic in WANDScorer . java to improve clarity and correctness to enhance code readability and ensure correct
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT and event classes to improve code clarity and maintainability by
updated the default value of curPixVal in XRSolidSrcPict . java and added a new test class WhiteTextColorTest . java
improve the performance of biomedictionary . gettypes ( ) by use a queue instead of a list
rename variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintain consistency in naming conventions
added stability annotations to TaplTestsLauncher3 . java to enable tests for local , PLATFORM _ POSTSUBMIT , and
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not only non - null but also non - empty to prevent potential NullPointerExceptions when logFileSuffix is not
refactor PythonBuckConfig to improve code structure to enhance maintainability and readability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and modified methods in ShadowApplicationPackageManager and ShadowPackageManager
add alarm support to meiligao protocol ( fix # 399 )
fix null pointer exception in powerdiode . getpower ( )
introduced a new ` TrimCache ` class to handle cache trimming with progress dialog to improve user experience by providing feedback on cache size
fix ( rendertask ) : update dependency com . google . common . base to com . google . common . base
return 401 instead of 403 in basicauthaccesscontrolfactory . isauthorized ( )
added an abstract method ` schedulePeriodically ` and updated several parameters in the ` call ` method of the ` Scheduler ` class to enhance the
replace ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to
added a debug log statement and modified stream handling logic in StreamUtil . java to improve error reporting when multiple streams match the specified path
refactor create _ table _ with _ environment _ context method to create _ table using CreateTableRequest instead of EnvironmentContext to improve clarity
added an ` aborted ` flag and modified ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragInsStateTracker
added indentation checks in multiple block parser classes to ensure correct parsing behavior based on indentation limits
change the autoplay on autoplay when the video be already online .
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle in the WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added new file ` Issue475 . java ` and ` XSS . java ` to handle HTML and JavaScript processing in Jooby
added a condition to return early if the units to scroll is zero to optimize performance by avoiding unnecessary operations
changed the condition from checking if the contract list size is greater than one to checking if it is not equal to one to ensure that the contract
added methods ` add ( Enum value ) ` and ` put ( String key , Enum value ) ` to ` JsonArray ` and ` JsonObject `
added hashCode method to IPPPrintService and created TestRaceCond class for testing to ensure consistent hash code comparison between PrintService instances
use getversion ( ) instead of getversion ( ) for backward compatibility
added a condition to check if the transaction ' s platform fee is greater than zero before proceeding with the connection check to ensure that the connection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix buffer leak in adaptive reconfiguration
removed the ' public ' access modifier from multiple classes and interfaces to restrict access to these classes without the ' public ' modifier
added import statement for Retrofit in Part and PartMap classes to enable support for Retrofit functionalities in the application
refactor JsonBuildHelper and ParamsBuildHelper to improve handling of generic names and introduce new API parameter handling in ParamsBuildHelper to enhance
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the existing TYPE _ OPTIONS _ POPUP _ DIALOG and TYPE _ TASKBAR _
fix : update gapic - generator - java with mock service generation fix ( # 5382 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation behavior based on recents
removed an argument from the createRenderScript method call in AllAppsView . java to simplify the code by eliminating unnecessary parameters
pmd : fix checkstyle violation in ` ` if ' ' statement
move system - bundle check into pluginmanageractivator . java , a suggest by valerybokov
updated import statements and formatted code for consistency in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replace hardcoded 0.01 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest . java to improve code
refactor rocket configuration handling in Overview . java to improve clarity and functionality to enhance user experience by allowing selection of motor configurations
server : fix npe in agentmanagerimpl . getagent ( ) when host be delete .
added null check before converting data to data in DefaultRecordStore to avoid potential NullPointerException when accessing values
kvm : do n ' t return null when fail to find kvm host
updated error messages in ParamAction . java to include attribute names and values to improve clarity of error messages for better debugging
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a generic Object instead of InvocationContainerImpl
added a method to strip method parameters from method names in LocationOpener . java to improve method line parsing by stripping unnecessary parameters
updated the version name and version code for the GreatVoyage application to reflect the latest release and ensure compatibility with the latest versioning
mondrian : use hashset instead of arraylist in outputfilter . java
update to geotools 5.0 . 1 , use new label cache item class
make sure popups be center at the right , not the bottom
updated error messages in ValidationSuite . java for clarity and consistency to improve readability and maintainability of error messages
replaced an anonymous implementation of ` IStartingWindowListener . Stub ` with a dedicated ` StartingWindowListener ` class to improve code organization and
added documentation comment inherited from MBeanServerConnection in MBeanServer . java to improve code clarity and maintainability
updated exception messages in CheckPackageAccess . java to reflect correct package access and definition checks to improve clarity in error reporting and provide clearer
increased the awaitTermination timeout from 30 seconds to 90 seconds and added an assertion to verify that the executor service is not terminated to improve
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it to ensure that logging
added @ JsonIgnore ( true ) annotations to Schema . java to disable JSON serialization during serialization
increased the test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
simplified the ` train ` method and introduced log likelihood calculations in ` SimpleNaiveBayesClassifier . java ` to improve accuracy
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and introduced ` CheckHelperAuditModule ` to improve clarity and functionality
refactor Prototype class to improve code structure to enhance maintainability and readability of the codebase
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure that the default value is used for transactional tables
[ java ] remove unused method in recordingwriter . writefragment .
fix sample offset for cea subtitle
fix datastoremetricqueryimpl . getalias ( ) for kairos
replaced instances of " BTC _ CAD " and " BTC _ USD " with " USD " and added new currency
hhh - 13434 fix resource leak in test
updated KafkaSender import from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align
added two new files , GwtBinaryIntegrationTest . java and A . java , to implement integration tests for GWT binary building to ensure proper
updated visibility logic for loadingCauseLabel and changed ResultSetRenderer to ResultSetResultSet in SQLConsole to improve user experience by ensuring loadingCauseLabel is only
reformatted code in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XMLSecurityPropertyManager handling to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to improve XML security property management and enhance code
added a new file ` InlineDefaultMethod . java ` with interfaces and classes implementing default methods to demonstrate the use of default methods
updated SQL query patterns in SqliteFieldPredicateView . java to use GLOB instead of LIKE for better matching to improve performance and accuracy of
( chore ) camel - jbpm - dmn : make dmnprofiles protect to allow subclassing
fixed - rscript . load ( ) method throw npe if slave node do n ' t exist
remove staticobject . setwordfieldvolatile and replace with staticarray . assert ( ) .
updated log messages to use the size of targets instead of a single string to improve clarity and consistency in logging output
make sure to retain the packet before send it to the target .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and updated the thread pool configuration in Web
replaced the mapping of shortcut IDs and updated shortcuts in LauncherModel . java to improve the handling of removed shortcuts and enhance the functionality of
remove unnecessary check for non - string value in DefaultHttpClientBinderRegistry . java to streamline code for better readability and maintainability
removed the home navigation case from DetailFragment . java to streamline the app navigation process by eliminating unnecessary navigation
added a condition to check if the Android market is present before including play services to ensure that play services are only included when there is an Android
refactor TableBlockParser to improve handling of whitespace and zero - length headers to enhance flexibility in processing table rows and ensure proper processing of
added support for an optional bridging header in NewNativeTargetProjectMutator and related classes to enhance flexibility in handling bridging headers
updated the handling of unused JavaType methods and improved the source path construction in PotentiallyDeadCode . java to enhance code clarity and
added diamond - related functionality in Attr . java and created new classes Diamond - related classes to enhance type inference for redundant arguments
replaced invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClient
removed unnecessary import and debug logging statement from SolrCacheHolder . java to streamline code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by rethrowing all exceptions
modify the condition in Test6796786 . java to check for the difference between two values to ensure accurate comparison of floating - point values
added a local file for logback configuration in JoobyMojo . java and updated the list of files in Main . java to
added a new file ` JaasEventCheck . java ` that implements the ` ApplicationListener ` to handle authentication failures and success events in the
refactor animation logic in QuickstepTransitionManager to utilize a list for views to animate to improve code readability and maintainability by consolid
updated string distance comparison logic in ConjunctionSolrSpellChecker and added unit tests in ConjunctionSolrSpellCheckerTest to ensure correct behavior
changed the type of the fetchers variable from HashMap to Map in ShadowSystemServiceRegistry . java to align with Java naming conventions for better
[ hotfix ] remove unused log name from defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : increase the timeout for modify storage pool command to 5 minute
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and maintain consistency in naming conventions
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to improve code readability and maintain consistency
updated schemaTypeCache to use Collections . synchronizedMap and replaced synchronized block with computeIfAbsent to improve thread safety and simplify schema retrieval logic
update header addition logic in StaticServerHttpHeadersWriter and add a case sensitivity test in StaticServerHttpHeadersWriterTests to ensure headers are
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that are not available from CMU
added a method to create storage directories in the TestCollector class to ensure the storage directory exists before proceeding
added chunked streaming mode to HTTP request in StarTreeJobUtils . java to optimize data transfer efficiency for improved performance
add basictypechecker , multipletypesyntaxchecker and singletypesyntaxchecker test
hbase - 13434 use protobuf from hbase . thirdparty instead of com . google . protobuf
added a new ` Node ` class and a test method in ` BeanPopulatorTest ` to ensure that nested beans do not cause stack overflow
added IOException to the getRemoteName method signature to ensure proper handling of potential IOException when retrieving the remote name
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl and added a new client creation method in ClientFactory and ClientFactoryImpl to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security interceptor configuration to accommodate aspect - based method security
updated import statements and added hostname verification functionality in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enable removal
replace joinInternal ( ) with invokeUrgent ( ) in ClientSchemaService . java and update assertions in CompactFormatIntegrationTest . java
removed redundant joint removal logic from the body ' s joint list to streamline the management of joints in the world
fix a nullpointerexception in searchfilter . findphonenumber ( )
[ hotfix ] [ test ] move sourcereadertestbase to testutils
replaced multiple file existence checks with a try - finally block for handling exceptions to improve error handling and ensure proper exception management during document retrieval
added a new interface ` HookDefinition ` and its implementation ` JavaHookDefinition ` , along with a test class ` JavaHookTest ` to
refactor buffer synchronization logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
updated setExoOptions method to include a boolean parameter for allowing TV support to enhance flexibility in exo options handling based on the
remove user identifier from the identifier collection in DMRDecoderState . java to clean up unused identifiers and improve code clarity
added an INVISIBLE color constant and modified the toString method in Color . java , and updated imports in RailButtonShapes . java to improve
updated the nullHandlingEnabled logic in CountAggregationFunction . java and added a new test in NullHandlingIntegrationTest . java to enhance null handling
initialize the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the deep state during transaction processing
escape the name before appending it to the buffer in StreamInitiation . java to ensure that XML names are properly escaped before processing
updated directory initialization to use a configurable directory name instead of a hardcoded string to improve flexibility and maintainability of the work directory configuration
[ drools - 6752 ] deprecate rule in rulesetfactory should not be set to true
make amd64directcallop use codebuffer . position ( ) instead of label .
updated TimeRange class to use static constants for minStamp and maxStamp to improve maintainability and readability of the code
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor metrics emitting logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by encapsulating the code
added support for video attachments in DetailFragment and modified intent handling in GalleryActivity to ensure proper handling of video attachments and improve user experience in the
fix tank not be fillable on client and server . close # 386
updated CsharpLibrary . java to handle Dotnet library resolution using RuleAnalysisLegacyBuildRuleView to improve flexibility in validating Dotnet
of - 1649 : xmpp plugin do not process iq packet of type ' get ' .
[ gr - 20936 ] intrinsificationphase : fix nullpointerexception in intrinsificationphase . getintrinsificationgraph
[ hotfix ] fix checkstyle violation in metrictrackingwindmillserver
pdfbox - 4892 : make sure lastobjectid , lastgenid and lastobjoffset be not negative , a suggest by val
added a new constructor to ` LwjglAppletApplication ` that accepts a ` Canvas ` and modified ` LwjglApplet `
simplified the return statement in ` EnvironmentAndSystemPropertyClientProviderStrategy . java ` to handle null ` DockerClientConfig ` to improve code
refactor LdapAuthenticationHandler and associated classes to handle AuthenticationResponse instead of AccountState directly to improve integration with LDAP password policies and streamline authentication response processing
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and set its value in ` LdapUtils ` to enhance
refactor Readable class to improve readability to enhance maintainability and facilitate future development
updated the method of running a PDF document in JsoupNonVisualRegressionTest to use TestSupport for font - based page handling to
updated the icon used in the menu item from share _ menu _ item to ic _ menu _ share to improve the visual appearance of the
lucene - 5886 : improve java version detection in constants . java and common - build . xml , add java 9 support
update JDBC41 connection handling to check for non - JDBC 41 compliant drivers to ensure that exceptions are not thrown from non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced ` HashSet ` with ` ArrayList ` for ` filteredSet ` and ` filteredList ` in ` Enclosed . java ` to improve
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
reformatted the declaration of ChartProvider . java for improved readability to enhance code maintainability and clarity
update working _ directory to match the current file ' s parent path ( # 3369 )
modified the return statement in JavacParser . java and added a new class ExtraSemiTest . java with a Java compiler test to
added ` createdAt ` field and corresponding methods in ` User ` and ` UserRepository ` , and updated tests in ` UserRepositoryTests ` to
refactor Test15FloatJNIArgs class to improve code readability and maintainability
updated version and author information in mmm Plugin . java and ppp Plugin . java to improve clarity of version , author , and website
fix incorrect substring length in mockprocesscontext . encrypt ( ) and mockprocesscontext . decrypt ( )
[ java ] ensure archive callback can not be reentrant .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerException when merging dependencies
updated test annotations in SslBytesServerTest . java to include a timeout of 10000 milliseconds to improve test reliability by allowing more time for execution
refactor Peer class to improve code organization to enhance maintainability and readability of the codebase
updated methods in RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and StreamProviderConfig to improve index segment management and enhance stream provider
added null check before calling writeTo on viewCaptureDataSupplier to prevent potential NullPointerException when exportedData is null
refactor RecyclerViewFastScroller to use a dedicated method for calculating scroll thumb radius to improve code readability and maintainability by reducing
updated error messages in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckToolWindowFactory
added a conditional check for Windows platforms before adding a JCheckBox to the configuration to ensure the preventSleep option is only added for non - Windows
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the Jak
updated cropping calculations in QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to accommodate vertical bar layout to
added full - screen exclusive mode functionality to manage window visibility to enhance user experience by allowing full - screen access
fix playeddurationstr ( string ) and add unit test
added methods for adding credentials for MapWork and ReduceWork in DagUtils . java and updated TezTask . java to utilize this
( chore ) camel - core : fix use of keyset iterator instead of entryset iterator
trim whitespace from thread names when setting the thread name to ensure thread names are consistent and avoid potential errors
updated error message in GpsMainActivity . java to clarify that the description cannot be added to a file to improve user experience by
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` with associated methods and a test method in ` Main . java ` to facilitate testing
updated the key from " hbase _ master _ host " to " hbase _ master _ hosts " in the componentToClusterInfoKey
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused XML serialization and deserialization interfaces
modified the return type of the ` performJoin ` method to a list of ` GenericRecord ` objects instead of a single ` GenericRecord `
updated MAX _ DELEGATE _ LOCK _ PERIOD validation to allow values greater than 10512000 and greater than 3000000 to ensure proper
cloudstack - 5892 : fix npe when network rate be 0 ( # 5893 )
removed the initServices ( ) method and updated the applySpecification ( ) method in CmcExchange . java to streamline the initialization process and
added checks for the presence and parsing of the seed node IP list in GossipLocalNode . java and updated configuration file names in Constant . java
set default value of ` enabled ` to ` false ` in ` ClientTpcConfig ` and add unit tests in ` ClientTpcConfig
updated the Swagger UI version from " 2.2 . 10 - 1 " to " 3.18 . 2 " in multiple application files to
refactor the handling of modular inverses in MutableBigInteger and add a new ModInvTime class for computing modular inverses
refactor the handling of blank names in NamedObjectList to improve clarity and correctness of the key assignment logic
replaced ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple query compaction classes to ensure proper cleanup of empty directories and tables
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable RCFileInputFormat serialization for improved data handling
added default methods for Java type conversion in TypeMapperComponent to enhance type handling capabilities for Column objects
added error handling for parsing port from host headers in Request . java and updated tests in RequestTest . java to improve robustness of port parsing
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for method invocation to improve compatibility with Robolectric features and enhance test
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve handling of empty outgoing values
modified the initialization of ` cfsDir ` and ` cfsDir ` in ` SegmentCoreReaders . java ` , and updated the return
added ` hasMainThreadProfile ` methods in ` AggregateDao ` , ` AggregateDao ` , ` AggregateRepository ` , and ` TransactionCommon
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi absent or set to false to
updated the constant names in filter factories to use lowercase instead of uppercase to ensure consistency in naming conventions across filter factories
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor for backward compatibility
added a list of time zone identifiers and removed specific America / Dawson , America / WhiteHorse , and America /
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to improve clarity and specificity of the synchronization group
updated method calls to use ` getId ( ) ` instead of ` getObjectId ( ) ` in ` GridFsTemplate . java ` and added
added methods to retrieve total size and bytesSoFar in ShadowDownloadManager and updated corresponding tests in ShadowDownloadManagerTest to enhance the functionality of the
refactor character insertion logic in TextField . java to improve readability and maintainability of the code
added a check to prevent processing of equality in GroupNodeViewModel to improve performance by avoiding unnecessary object comparison
added a method to handle terminal setting for blocks in Block . java and updated return statement logic in BlockLexicalContext . java to improve code
added hashCode methods to IntervalXYDelegate and XYSeriesCollection classes , and improved equality checks in XYSeriesCollection to enhance hash code generation and
fix clientqueuedisruptiontest by close client after each test
refactor CloudWatchAppender and rename test methods in RegisteredServiceScriptedAttributeFilterTests to verifyScriptedAttributeFilter to improve code readability and
replaced GsonBuilder ' s serializeSpecialDoubleValues ( ) method with Gson ' s serializeSpecialFloatingPointValues ( ) method to ensure compatibility
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty subtag strings before canonicalizing them in Locale . java and introduced new language tag handling in LanguageTag . java
kvm : add kvm . ssh . to . agent config to control ssh to agent in the management server
removed the ` public ` access modifier from constructors and methods in ` SchedulerWhen . java ` to enhance encapsulation by restricting access to these
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the updated package structure
added a condition to exclude the " - " character from the filter check in SimpleSearchQueryConverter . java to ensure that the filter does not
updated sort column label text from " natural order " to " Natural column order " and refactored UISettings usage in DataBrowser
replace ` Arrays . copyOf ( input , 6 ) ` with ` Arrays . copyOf ( input , 6 ) ` in ` Utils . java `
updated the remote address writing method to include HTML encoding to ensure proper handling of non - space characters in the session information
change itemstatetriggerhandler to check for smarthome / items instead of / items
simplified the synchronization block in FastHttpDateFormat . java to improve code readability and maintainability
refactor file moving logic to use a thread pool for improved performance and error handling to enhance thread management and provide better error reporting during file
added two overloaded methods ` trigger ` to ` WrapTimer ` for scheduling and canceling a timer task to enhance functionality by allowing customizable
added support for LOCAL _ DATE , LOCAL _ DATE , and LOCAL _ TIME types in StringTypeUtils and its corresponding tests to enhance type handling capabilities
added a verbose flag to error logging in AbstractStatusReporter to enable more detailed error reporting for better debugging
modified ClickStartHandler initialization to include a boolean parameter and added menu toggling logic to enhance user interaction by allowing menu toggling when
s2s vpn : do n ' t allow vpn connection to be establish between customer gateway and customer gateway .
refactor error handling in CursorReadingTask and add a new test for error handling in CursorReadingTaskUnitTests to improve error management and ensure
pdfbox - 2576 : check for encrypted pdfs before create a thumbnail or filter
fix ( dubbo - curator ) : start the service in a separate thread
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
replaced ` getSelectedItemId ( ) ` with ` id ` in the URI generation and added a call to ` getContentResolver ( ) . delete
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
refactor replaceOrderBulk method to accept a list of order commands instead of a collection to enhance flexibility in order replacement functionality
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new file J9ConstantHelper . java with a method to retrieve long values and updated ObjectHash . java to use this new helper
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing multi - threaded invocations in Mockito to ensure
improve roster notification when a user be not find .
updated properties retrieval from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a
updated the formatting of the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintain consistency in formatting
added null check for ` extTypeCustomDesers ` before assignment in ` MessagePackFactory ` to avoid potential NullPointerException when ` extTypeCustom
added a system property to set the mock server ' s logging level to WARN to improve logging visibility for better debugging and monitoring
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
updated scoreMap to use termScoreMap instead of scoreMap and introduced termScoreMap for improved functionality to enhance clarity and maintainability
updated conditional checks in U64 . java to use less than zero instead of masking and added an ` eq ` method to improve clarity
added a headline style to the MainViewModel to improve the visual appearance of the main view
updated the notification logic in WallpaperColorInfo . java to include a check for dark text support to ensure that dark text updates are only
[ hotfix ] [ runtime ] fix potential race condition in ` choosequeuedrequesttoexecute `
updated the maximum pool size and keep alive time constants , and introduced a new constant for core pool size , keep alive time , and keep alive
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
[ opencvimagefactorytest ] fix build on window
fix for http : / / issues . apache . org / activemq / browse / amq - 2382 - add prefetch option
fix ` ` java . lang . classcastexception ' ' when return value be ` ` throwable ' '
added a new annotation ` @ Repeatable ` to the ` Issues ` field in the ` Issue ` class to facilitate the
updated user property keys from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and its corresponding test to
updated socket connection logic to use unresolved InetSocketAddress if socksProxyHost is not set to ensure proper handling of socket connections based on the system property
[ hotfix ] fix checkstyle violation in slotreport
replaced the import of ClassUtils from Apache Commons Lang with Apache Commons Lang to ensure compatibility with the latest version of Apache Commons Lang
replaced instances of HashSet with LinkedHashSet in SslContextFactory . java to ensure consistent ordering of protocols and ciphers in the SSL context
added a static resource variable and logic to return it if the resource equals the system ' s location to improve resource management by avoiding potential null
reduce plaintext segment size in streamingaeaddecryptingchannel and seekabledecryptingchannel
added a test case to verify that an invalid circuit breaker gateway fallback throws an exception to ensure proper exception handling for invalid circuit breaker requests
added SSL connection factory to the HttpClient configuration to enhance security by allowing hostname verification during HTTP connections
updated the size limit for the character input and removed the resetBytesReadCounter method to improve performance by reducing unnecessary byte reading overhead
moved the ` preferAES ` property from the ` StandardProtectionPolicy ` class to the ` ProtectionPolicy ` class to streamline the
( chore ) camel - open - telemetry : use logger instead of system . out
remove aws - aws2 - describe - instances - aws2 - aws2 - aws2 - aws2 - aws2 - aws2 -
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to provide user feedback when the locale or file system is configured in a
hhh - 14827 skip test on oracle 11 when use a driver other than ojdbc6
added file existence check and improved exception handling in TextureUnpacker . java to ensure proper file handling and provide clearer error messages for missing
refactor AmbariManagementControllerImpl to use cluster global locking and improve service state management to enhance thread safety and ensure consistent behavior during service
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the result set does not close a statement and introduced a method to check if it is closed to ensure that the
remove unused mark support check and add new test cases for buffer sizes in ChunkingTest . java to improve code clarity and ensure proper functionality
added logic to remove pre - deleted databases from the schema map to improve schema management by ensuring that pre - deleted databases are properly removed
removed the " chunkedWriter " from the pipeline if it exists before writing to ensure proper handling of chunked responses in the HTTP / 1.1
updated item deletion logic in EnhancedBrowseFragment and added confirmation dialog for item deletion in FullDetailsFragment to ensure proper handling of item deletion and
refactor RuleFinder to implement the RuleBank interface and update its usage in CSSBank and CSSParser to improve code modularity and encapsulate
do n ' t swallow exception in jcaTlsCrypto . init ( )
added new classes TestMonomorphicObjectCall and Object with native methods for object manipulation to facilitate testing and object manipulation in a
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in the ` DataBrowser ` and ` Desktop ` classes
hbase - 2649 fix npe in defaultmemstore # shouldseek ( scan )
[ hotfix ] rename ` ` localstate ' ' to ` ` localresourcerecoveredirectories ' '
refactor AlterTimeSeriesStatement to accept a boolean parameter indicating if the statement is an alter view to improve flexibility in handling different statement types
fix matchtext ( ) in selenide to match whole / substring
added exception handling when retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by handling potential exceptions during retrieval
refactor parameter handling in HttpClientIntroductionAdvice to use a loop for adding entries to the paramMap to improve code readability
( chore ) camel - jms : use char [ ] instead of string for password
server : fix listdomainchildren api call to return list of domain in recursive mode
refactor ` toSortedListWithCounts ` and ` equals ` methods to use ` ! = ` instead of ` > tolerance ` to improve
updated the parameter name in the initialize method from ' status ' to ' original ' and added warnings to the BasicTumbleStatus instance to
sulong : fix miss transfertointerpreter and invalidate interop interpreter if miss .
rename variable ' tree ' to ' var ' in PrettyPrinter . java to improve clarity by using a more descriptive variable name
added null check for indexToNode [ currSize ] before creating a new node to prevent potential NullPointerException when indexToNode [ i ] is null
refactor filtering logic in DatagramSocket and DatagramChannelImpl classes to improve readability and maintainability of the filtering logic
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to ensure compatibility with the latest JUnit
added a new class ` NutchServerInfo ` with properties and methods for retrieving and setting server information to facilitate the representation
updated EdgeNGramTokenFilter to utilize AttributeSource for token attributes to enhance attribute management and improve performance during token processing
added support for using a timestamp in CqlInserter and ThriftInserter , and updated SettingsColumn to include a timestamp option to
refactor DSAParameterGenerator to use BigInteger . ONE for consistency and clarity to improve code readability and maintainability
modified the ` NumberUtils ` and ` Numbers ` classes to implement new methods for converting float and double to integers and updated the ` Num
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added constraint violation checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper . java to enhance error handling for specific SQL exceptions
[ issue # 5550 ] fix the issue that remote broker offset store be not set correctly when the broker do not exist ( # 5
added a new method ` addTab ` and refactored tab creation logic in ` Tabs . java ` to improve tab addition functionality and
replaced array size usage with zero - length arrays in multiple Java files to improve performance and readability of the code
[ hotfix ] [ runtime ] make testingtaskmanagerruntimeinfo configurable in mockenvironment
added conditional checks for ` reqGroup ` , ` scope ` , ` artifactId ` , and ` scope ` in ` MavenVisitor . java `
updated mock application secret , app name , name , configuration , and name updates in ZookeeperDataChangedListenerTest . java to reflect changes in
added a new file ` FormatCheckingTest . java ` to test class format errors to ensure that the output contains specific error messages for illegal class
updated line number handling in CodeGenerator . java to improve clarity and maintainability of line number management
added a try - catch block around the retrieval of service properties to handle potential exceptions during configuration retrieval
added two overloaded ` createToggle ` methods to ` RadioButton ` class for better functionality to enhance the functionality of the ` RadioButton `
updated cache initialization to use a specified cache size and increased CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10 , 000 to improve
changed default capacity from private to public in SimpleChannel . java and modified capacity handling in ChannelParser . java to allow dynamic configuration of the default
http : / / issues . apache . org / jira / browse / amq - 3877 - fix npe in osgam
add the ability to load mode contribution via the ` ` usemode ' ' system property
[ runtime ] avoid illegalstateexception when taskmanager be kill during
refactor ` RobolectricTestRunner ` to replace ` projectRoot ` with ` androidManifestPath ` to improve clarity and consistency in
added null check for notPropagatedHeaders and updated selectiveHeaderPropagation logic in AbstractMessageProducingHandler to ensure proper handling of non -
refactor CompareMode class for improved comparison logic to enhance performance and maintainability of the code
implemented ` HasTests ` interface in ` RustBinaryDescription ` and ` RustLibraryDescription ` classes and added ` @ Hint `
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and maintain consistency in naming conventions
refactor OnExitTest class to improve code readability and maintainability
added an onUserPreferenceChanged method to recreate the taskbar when user preferences change
refactor heap dump logic to support both IBM and J9 JVM environments to enhance flexibility in dumping heap information in different JVM environments
camel - jbang - make sure mybatis session be close even if commit fails .
simonstewart : make the ie driver compatible with the firefox driver
updated support for Java 5 for - loops and improved type safety in IteratorToFor . java to ensure compatibility with Java 5 and enhance type
added a method to set the application state to the unavailable state to ensure proper handling of application state when the application is unavailable
updated position and limit calculations in ByteBuffer and StringCharBuffer classes to improve clarity and correctness of buffer management logic
removed the call to ` toUri ( ) . toString ( ) ` from ` move ` in ` ConditionalResolverMergeFiles . java ` to
updated array handling in NativeArray and added setEmpty methods in various classes to improve array management and ensure consistent behavior across filter and data types
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
added a new document ` doc6 ` to the ` TestMultiPhraseQuery ` class and updated the assertion to reflect this change to ensure the
updated the ` assignTickets ` method to check for offline payment status and modified the filtering logic in ` TicketHelper ` to improve ticket assignment
added a ` _ onTimeoutThread ` variable and improved exception handling in ` HttpChannelState . java ` to ensure thread safety during timeout
updated logging behavior in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , ServerTimeoutsTest , and ServerTimeoutsTest to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
update consistencyForPaxos default value to LOCAL _ QUORUM when consistencyForPaxos is set to ConsistencyLevel .
added a condition to check if the model name contains " Home " in HeosDiscoveryParticipant . java and set the SERIAL _ NUMBER property
added a new ` Wait ` class and updated ` PlainSelect ` , ` SelectDeParser ` , ` SelectTest ` , and ` Select
added attribute handling for Neo4j node and edge properties in the Neo4j integration to enhance the functionality of Neo4j
added a null check for serverName in the session manager condition to prevent potential NullPointerException when serverName is null
nifi - 1643 : move rocksdbmetronome to nifi - controller - repository
updated the method to retrieve the " IS _ GRANTABLE " value from results instead of a hardcoded string to improve flexibility by allowing
updated JavaScript execution logging and modified URL validation logic in JavascriptContext . java to enhance debugging capabilities and improve URL validation logic
camel - cxf : fix the camel - cxf test error on macos
updated column modification logic in LoadTestTool . java to handle the case when the columnDesc is null to ensure proper handling of non - null
implemented the Disposable interface in the Texture class to ensure proper resource management and prevent potential memory leaks
updated conditional checks to ensure tldBundleLocation is not null before checking if it is a directory to improve robustness by preventing potential NullPointerExceptions
[ besu ] check goquorum genesis config only if goquorum privacy be enable
replace IOException with Throwable in HttpInput . java to improve error handling by suppressing specific exceptions
added a condition to check if the JVM is not " JP " in the list in LocaleTest . java to ensure that the JVM is
updated references from ` Wrapper ` to ` HostResponseWrapper ` in multiple Java files to improve clarity and consistency in naming conventions
added a check for the boost in the query equality and modified hash code calculation to include the boost to ensure accurate comparison and hash code generation based
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
[ web ] text - edit : use verticalpanel instead of listbox for the text field
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` that tests CMS class unloading behavior with various parameters to ensure
added a check for non - empty entities before creating the ItemTossEvent instance to prevent potential NullPointerException when processing item events
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to use ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter `
fix compactionstest . testcompactions by use identityqueryfilter instead of range
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added support for the SPEL operator in the OperatorEnum and implemented a new SpELJudge class to enhance the functionality of the operator
[ hotfix ] [ planner ] fix check for ordinalitytype in localexecutionplanner
bugfix # 208322 , use awt . awt . eventqueue instead of javax . swing . util . service . service . lookup
removed unused static import of assertEquals in ConscryptTest . java to streamline code and improve readability
updated references from ` 0l ` to ` 0L ` for start _ offset and length in ` ShadowArscAssetManager9 . java
updated source and target options in SetupHid . java from version 1.5 to version 6 to ensure compatibility with the latest source and target
made the ` extractMetadataColumns ` method public and added metadata - only projection handling in ` PushProjectIntoTableSourceScanRule ` to
updated AboutActivity to use a sorted localized names reference for the dropdown item to ensure consistent ordering of localized names in the user interface
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming settings before refreshing shared preferences to ensure shared preferences are only refreshed when live streaming is enabled
updated the exception handling in AuditConfiguration . java to include the original exception as a cause to improve error reporting by providing more context in the exception
fix flaky test of fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in CompositeType , CompositeTypeTest , and DynamicCompositeTypeTest classes to enhance type safety and improve code clarity
added a transport support method to the GitClientApplication class and updated the RepositoryUrlPanel to check for transport support to enhance the functionality of the
added delegation names to various input consumer classes and implemented logging for active gestures to enhance clarity and tracking of gesture input consumers for better
added null check for mavenMetadata and updated version handling logic in ChangeParentPom . java to improve robustness by avoiding potential NullPointerExceptions
added a check for " Large Page Support " output and updated log messages to include " gc + init " before " gc + heap +
cloud _ usage db do n ' t exist before migrate event
[ bugfix ] fix test failure on window
added a new test class for ObjectStreamClass functionality to ensure proper initialization and functionality of the ObjectStreamClass class
simplified the null check for datacenter information in the ZoneAwareDiscoveryFilter class to improve code readability and maintainability by eliminating
changed log level from error to warn in OpenTracingTracer . java to provide more informative logging for tracing failures
added a toString ( ) method to the Generator class to provide a string representation of the registered generators count
refactor URI handling in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to improve code
added error handling for missing resources in ClusterControllerImpl . java and corresponding test cases in ClusterControllerImplTest . java to ensure proper resource retrieval
added null response check and improved error logging in AccepttoApiUtils . java to enhance robustness of API response extraction and provide clearer
removed Android version check for buffer allocation in VertexBufferObject . java to streamline code for compatibility with newer Android versions
refactor SybaseASADatabase class to improve code readability and maintainability
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor and modified its usage in the ` HashJoinInfo ` class
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to access the distance of a
added immutable and one - shot flags and refactored pending intent creation logic in AndroidImplementation . java to improve intent handling and ensure compatibility with
added methods to append read column IDs and updated configuration handling in HiveFileFormatUtils to improve column ID management and ensure consistency in configuration management
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple calls to ` DisplayTemporaryToast ( ) ` in ` SavedExperiments . java ` to display a temporary toast message
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure that the service version is correctly set when it is null
added a new test class RawSerializationTest for Gson serialization tests to ensure proper handling of primitive and object types in JSON serialization
simonstewart : rename seleniumserver to sslcertificategenerator so that it can be use with selenium - backed selenium
refactor loop to iterate through replies instead of using an enhanced for - each loop to improve code readability and ensure proper padding for the status
increased the timeout duration for ResourceAccessException in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access
added a new test method ` testNGramFilterPayload ` to validate the functionality of the NGram filter to ensure that the NG
refactor AclImpl . java to improve code structure to enhance maintainability and readability of the code
refactor EasyRandomTest methods for clarity and consistency to improve readability and maintainability of tests
bug 12040 : fix the problem where if the connection be not retrievable , we cause a
added a ThreadLocal variable ` tryWriteAgain ` to manage the state of ` _ runCompleteWrite ` to ensure thread - safe execution of
updated formatting and added a method to check the visibility of ancestors in the Actor class to improve code readability and enhance the functionality of the Actor
added logging for failed rolling - update step in the deployment group to improve debugging and traceability of failure scenarios
[ hotfix ] [ table ] fix checkstyle violation in table - planner
added event handling for authentication failures due to nonexistent usernames and introduced a new event class for tracking these failures to enhance security event logging and provide clearer feedback for authentication issues
updated AtMostXVerificationTest . java file to improve test coverage for AtMostX verification functionality
updated default QTYPE references to use LuceneQParserPlugin ' s NAME instead of OldLuceneQParserPlugin ' s NAME to ensure compatibility
updated SimpleDateFormat instantiation to use Locale . US to ensure consistent date formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and ` JavaLanguageServer ` , and created ` LocalsCompletionTest _
changed the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the test _ fetch _ token _ from _ authorization _
added transaction management methods to DatabaseAdapter and modified GncXmlHandler to use them to improve database transaction management and enhance error handling during XML processing
replaced byte array handling with ByteArrayOutputStream for reading from input stream to improve performance and reduce memory usage during reading
added multiple @ Override annotations and refactored exception message handling in MessagingTemplate . java to improve code clarity and ensure proper null checks for
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a source file is an instance of ` CompilationUnit `
added methods to set maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy to improve performance and memory management during indexing operations
added a new test method ` updateWits ` in ` ManagerTest . java ` to verify the functionality of updating witnesses to ensure correct
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper handling of NoSuchElementException when iterating over the iterator
( chore ) camel - flume : remove unused log4j level parameter
added basic authentication and reindex collection assertions in BasicAuthIntegrationTest . java and modified DaemonStream . java to use ExecutorService for thread management to
changed the type of the ' nodes ' variable from HashMap to LinkedHashMap to ensure consistent ordering of graph nodes in the graph structure
[ java ] add internalerrormapper to jerseysupport for log internal error
refactor header validation logic in Http2TestBase . java to use a new method to improve code readability and maintainability by reducing
added a switch statement to handle specific system properties in System . java to ensure proper handling of system properties based on Java specification versions
updated method parameters from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to enhance flexibility in string
[ gr - 32424 ] add miss jvm . countertime ( ) and jvm . getclassid ( ) and jvm . getevent
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the datasource reference from ` ds ` to ` ds2 ` in ` PersistenceManagerProvider . java ` to ensure compatibility with compactor configurations
refactor DeploymentOptions class to improve code structure to enhance maintainability and readability of deployment logic
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` directly instead of a ` ConstantState ` to simplify drawable handling
refactor code to use try - with - resources for better resource management in XmlParser and YamlParser to improve code readability and ensure proper
added support for the COALESCE operator in RexNodeConverter and registered it in SqlFunctionConverter to enable support for coalesce operations
camel - 14850 : camel - hl7 should not use hl7 validation . thanks to martin mccandless for
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper context class loader is used for proxy
refactored DefaultDateTypeAdapter to use default constructor and added synchronization to improve thread safety during serialization and deserialization
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI setting and query handling to improve code readability and maintainability by simplifying the code structure
added a filterOldEntries ( ) method to filter old entries based on their size to improve the efficiency of the entry filtering process
changed log level from fatal to warn in FSHLog . java to provide more informative logging for exceptions during the append operation
refactor ` NodeMap ` class to implement ` NodeMapIterable ` for improved iterator implementation to enhance code clarity and maintainability by
updated PredicateDefinition variable name from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency
added a check for non - empty fields before adding aggregation to MongoRecordReader and modified the return condition in RexToMongoTranslator to ensure
added jid to the admin list if it be empty .
replaced usage of MultiFields . getFields ( searcher . getIndexReader ( ) ) with SolrIndexSearcher . getSlowAtomicReader ( )
modify the return statement in ConstantBeanHolder to include the identity hash code of the bean to improve clarity by providing a more descriptive class
removed line number check for primitive type in GroovyParserVisitor . java to simplify the code logic for better readability and maintainability
remove string . hashcode ( ) and string . hashcode ( ) from uninterruptible code .
fix test which randomly fail on slow ci server
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure correct length adjustment based on position and buffer size
updated the Nullable import from ` io . micrometer . common . lang ` to ` io . micrometer . core .
updated SQL query in IconCache . java to include an additional column for user identification to enhance data integrity by ensuring only the user - specific information
( chore ) camel - core : fix typo in the property name
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method and modified its usage across multiple classes to enhance resource
added a method to fix baremetal foreign key constraints in the Upgrade410to420 class to ensure consistency in database schema and prevent
removed the IJava2DRenderer interface and its implementation from Java2DRenderer . java to simplify the codebase by eliminating unnecessary interface
add onteardown ( ) method to defaultaudiosink that call onoffloadbufferemptying when the audio track be empty
added scheduled task management to the UpstreamCacheManager to improve performance and control over the execution of upstream tasks
refactor StreamType class to improve code readability and maintainability
updated assertion in Recording . java to include a descriptive message to improve clarity of the assertion failure message for better debugging
updated FilestorePage and RootPage to use RequiresAdminRole for admin role checks and improved user authentication handling to enhance security by restrict
( chore ) camel - elasticsearch - rest : ignore camel - elasticsearch - rest test until it be fix
updated the ` accept ` method to check if the class is an instance of ` Lifecycle ` and ` CustomizableThreadCreator ` to ensure proper
updated button text messages in OfferBookChartView for clarity to improve user experience by distinguishing between buy and sell operations
camel - 14850 : restlet component - restlet should not allow method to be use with invalid url .
add javadocs for createnextblock ( ) and createnextblockwithcoinbase ( )
removed the Serializable interface from BTreeMapJava and added serialization methods in ConcurrentSkipListMapTest and JSR166Test to ensure proper handling
( chore ) camel - jbang : avoid npe on startup failure
reorder conditional checks for command mode and statistics gathering in Main . java to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file and updated the DefaultJwtSigningAndValidationService . java and DefaultJwtSigningAndValidationService . java to
added a condition to close the system windows when the action is triggered from the AltTab to ensure proper resource management when the application is triggered from
updated dialog handling in DialogFragmentIT . java and removed unused BottomSheetBehavior import in OCFileListBottomSheetDialog . java to improve code
updated MimeUtil . parseCharset calls to include " UTF - 8 " encoding to ensure proper handling of character encoding in HTTP responses
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper resource cleanup and prevent potential memory leaks
replaced manual serialization of LogFormat with utility methods from TestUtilities to improve code readability and maintainability by centralizing serialization logic
updated the method used to parse the duration from ` previousClause ` to ` previousUntilLastClause ` and modified the ` PreviousFill ` constructor
updated array size checks and added negative size handling in JAXWSExceptionBase . java to improve error handling and ensure proper array size validation
test : migrate ctunresolvedimporttest to junit 5 ( # 2635 )
increased the thread join duration from 10 seconds to 60 seconds to allow for more time for processing tasks to complete
[ hotfix ] [ test ] change default default slot share group from legacy to region
added methods for setting and getting the title in ShadowActivity and updated @ Implementation annotations in ShadowAlertDialog , ShadowDialog , TextView , and
replaced deprecated LogFactory and LogFactory with POILogFactory and POILogger in POIFSFileSystem . java to improve logging consistency
refactor alarm handling in InstarHandler to improve clarity and functionality to enhance readability and maintainability of the alarm processing logic
add map . delete operation count to localmapstats ( # 11977 )
refactor status handling in Response . java to use a switch statement for better clarity to improve code readability and maintainability by using a
added a method to find the JavaFileManager location and updated the loop to use it to improve code clarity and ensure the correct location is
add project name to the flutter create args for stable channel
added a new file ` DeprecatedStubbingTest . java ` to test deprecated stubbing behavior in Mockito to ensure compatibility with the latest stub
updated the import statement for DispatcherType from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet .
fix partmod for np - adv ; add npml and nx to partmod for np - adv
added a conditional check for RSA key exchange property before adding TLS cipher suites to ensure compatibility with RSA key exchange configuration
corrected variable name from ' output _ reader ' to ' reader ' in multiple Java files to improve code readability and ensure proper resource management
delete the access token when the service be remove .
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to
added functionality to handle region location updates in ConfigPhysicalPlan and improved logging levels in ProcedureManager and DataNodeInternalRPCServiceImpl to enhance
added a new file ` FileDialogLeakTest . java ` to test the garbage collection of ` FileDialog ` to ensure that the `
hbase - 2640 move testopentableincoprocessor to hbase - coprocessor package
trufflefeature : check for @ uninterruptible annotation before return false .
[ hotfix ] [ protobuf ] [ table - planner - blink ] [ table - planner - blink ] do not use split method
change condition from checking if ` disi ` is null to checking if it is not null in ` DrillSidewaysScorer . java
fix race condition in fakemediasource . setnewsourceinfo
added JVM version checks to determine if the Java version is 9 or higher to ensure compatibility with Java 9 and improve compatibility
updated FileReporterTest to explicitly cast null parameters to String and File types to ensure proper type handling for null values in the FileReporter constructor
updated end - to - end encryption key existence check from ` isFalse ( ) ` to ` isTrue ( ) ` to ensure proper validation of
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button
added GET _ USER constant and implemented user retrieval logic in RpcServlet to enhance user access control and ensure proper handling of requests
added an @ EnabledIfSystemProperty annotation to check if the operating system is amd64 or x86 _ 64 to enable integration tests for
updated variable usage from ` startClass ` to ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure consistency in class reference
improve error message and add local for parameter register number
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
[ drools - 5369 ] fix the layout of the nimbus look and feel in the example application
fix a bug in the version string replacement in the app page .
refactor animation listeners in LauncherAppTransitionManagerImpl to improve clarity and maintainability of animation state management
updated exception message in DumpedPrivateKey . java to include the version instead of base58 to improve clarity of error reporting by providing more context
fix miss extra data when update offer data
refactor milestone parameters initialization in TicketPage . java to conditionally create open and repository parameters based on milestone status
pipe - wood : make wood pipe woodable by default
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRevision ` parameters to enhance cluster management by associating
initialized the ` downgradeAllowed ` variable to ` true ` in ` UpgradePack ` and added a test for it in ` UpgradePackTest
updated QName and NameType usage in XML scanning implementations to use ATTRIBUTENAME instead of ATTRIBUTE to improve clarity and consistency in naming con
[ lwjgl ] add an option to emulate system load library .
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` and ` getWidgetNameComparator ( ) `
updated file handling in DefaultPlatformManager and FatJarStarter to ensure the directory exists before creating a FileOutputStream to improve resource management and ensure
updated formatting and assertion message in TestSecretKeyCredentialHandler . java to improve code readability and enhance assertion clarity
camel - 14850 : camel - example - routebuilderfinder should use springcamelcontext instead of applicationcontextaware to avoid reflection
[ hotfix ] [ metric ] fix description of metric - scoped - reporter option
hbase - 2649 fix testfulllogreconstruction . testfulllogreconstruction failure ( addendum )
added methods for setting buffer size and reuse address in DatagramSocketOptions to enhance flexibility in socket configuration options
use getshutdownmessage ( ) instead of hard cod ` ` server . shutdown - message ' '
douniaberrada : remove deprecate locatable interface from selenium api
updated error messages in VersionInfo . java to clarify that the schema field must be searchable or has docValues to improve error reporting for
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
corrected spacing in the initialization and disconnect logic in HandshakeHandler . java to improve code readability and maintain consistency
updated newline formatting in Navigator . java to improve code readability and maintain consistency in formatting
changed access modifier of record reader class constants from private to package - private and updated registration method to allow access to these constants from outside the class
added support for greater and less equal criteria in MongoQueryCreator and corresponding unit tests to ensure correct query creation for different criteria types in MongoDB queries
refactor group by expression validation in CalciteSqlParser to use a dedicated method to improve code readability and maintainability by reducing duplication
refactor MappedByteBuffer and FileChannelLinesSpliterator to use Unsafe and add buffer reference counting functionality to improve memory management and ensure proper resource cleanup
refactor variable usage from ` l . getValidator ( ) ` to ` validator ` for consistency to improve code readability and maintainability
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified the ` testCircuitBreaker ` method in ` CircuitBreakerTest
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in mmm Launcher . java and ppp
change ' webui . submit . upload . ajax ' to ' webui . submit . upload . progressbar '
added @ Disabled annotation to TableExtRetrieverTest . java to disable tests related to retrieval strategy for column privileges
added synchronization to the methods ` addExportedCount ` and ` getExportedCount ` in ` EntityGraph . java ` to ensure thread safety when
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java
updated character validation logic in HttpParser and added a new test for encoded HTTP headers in HttpParserTest to improve error handling and ensure proper parsing
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` to align the activity with the new configuration layout
updated log message in SLWTTextListing . java to include the position of the SLWT to improve clarity of log output
refactor ` ForceLeaderTest ` and ` HttpPartitionTest ` to conditionally use ` useTlogReplicas ` to improve test reliability
refactor Thread class to improve code organization to enhance maintainability and readability of the code
refactor template file suffix sets in AbstractConfigurableTemplateResolver to separate HTML , XML , and text formats to improve clarity and maintainability of
camel - 14850 : fix set namespace on cxfpayload and defaultcxfbinding when namespace be not specify .
removed unnecessary whitespace in YamlRepresenter and RepresentConfigurationSection classes to improve code readability and maintain consistency
updated date and month output formatting in ToChar . java and added a test for the TO _ CHAR function in TestFunctions . java to enhance
added support for validating transaction IDs in GenericUDTFGetSplits to ensure compatibility with the latest Hive configurations for transaction management
replaced string length checks with isEmpty ( ) for columnNameProperty and columnTypes initialization to improve code readability and avoid unnecessary object creation
bug fix for issue # 510 , issue # 515 , add an initialavailable property to the stub dependent class
updated formatting and added a new test method in TestSSTDeserializer . java to improve code readability and enhance test coverage for SSTDeserializer
updated the default grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant value to improve code clarity and maintainability by
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to clarify the difference between line breaks and line break characters
added a boolean field ` waitingForKeys ` to ` DecoderInputBuffer ` and updated conditions in ` ClippingMediaPeriod ` to manage
updated API paths in OkexV3 . java from " / api / margin / v3 / accounts " to " / margin / v
refactor conditional statements in LineUtilitiesTests to use curly braces to improve code readability and maintainability
updated varargs handling in JavacParser and added new classes VarargsAndOldArraySyntax and T6569633 to improve error logging
log warn if defaultdrmsessionmanager be use on wrong thread
added support for method calls in VariableContext and corresponding tests in TestVariableContext to enhance the handling of method calls and improve test coverage for various
[ gelly ] fix parsing of invalid profile string and compilation unit
updated buffer limit logic to use the buffer ' s position instead of the buffer ' s capacity to ensure accurate buffer limiting based on the current
added HttpClientProperties and modified NettyRoutingFilter and RetryGatewayFilterFactory to incorporate response timeout functionality to enhance HTTP request handling by
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` and updated related method calls in ` CxxLibraryFactory . java `
add unit test base on user forum issue
added support for handling ` ExprNodeFieldDesc ` in ` ASTConverter ` and ` RexNodeConverter ` to enhance functionality for field access
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
fix httpclientrequestbuilderimpl . relativizenotproxy ( ) for non - proxy request
updated certificate handling logic in PKCS12KeyStore and modified alias and key handling in StoreSecretKeyTest to improve certificate management and enhance clarity in key
added reflection access checks in NativeObject , Bootstrap , ReflectionCheckLinker , and NativeObject classes to enhance security by ensuring proper access control for
removed the ` public ` access modifier from constructors in the ` CollisionMap ` class to enforce package - private accessibility for subclasses
mark the method ` getRawInputFromTransactionInput ` as deprecated and add a null - check using ` checkNotNull ` to improve code clarity and
replaced multiple if - else statements with a switch statement for logging levels in ConfigurationValueConverter and Main to improve code readability and maintainability
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in configurationserverimpl . java
added encryption handling for old Excel files in the OldExcelExtractor class to ensure proper error reporting when encryption is not supported
[ gr - 22424 ] add miss module - exports for native - image benchmarks .
updated visibility setting for the image in TimeLineCursorAdapter . java to ensure proper handling of image visibility during rendering
increased the sleep duration from 10 seconds to 1 second in BatchingStateChangeUploadSchedulerTest . java to allow more time for attempts to
refactor file handling in ShadowContext and add a deleteDir method in ContextTest to improve directory creation logic and enhance test coverage for file operations
replaced the implementation of ExceptionFactoryImpl with direct instantiation of AssertionFailedError and ComparisonFailure classes to improve compatibility with OpenTest and JUnit
increased WAIT _ TIME _ MS from 10 , 000 ms to 60 , 000 ms to allow for longer wait time for improved performance
added support for audience handling in OAuth2 request processing to enhance security by allowing access to audience claims in the OAuth2 request
remove default value for breakonfirsterror in kafkaproducer
added a new constant selectableItemBackground to the R class to provide a standardized background color for item selection in the application
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is set for updates
[ java ] add resumeablerandomaccessfilelistener to avoid race condition .
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added functionality to manage format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve data format handling and
[ hotfix ] [ kafka ] deprecate unused function in flinkkafkaproducer
updated the condition for checking compressed chunk length in CompressedInputStream . java to ensure correct length validation based on the maximum compressed length
camel - 14850 : add a new idempotent repository that can be use by spring data redis
fix containerrepair not use damage metadata for vanilla
[ mng - 5642 ] fix regression in legacylocalrepositorymanager when use local repository
[ hotfix ] [ runtime ] only start the local task manager if it have be initialize
added deployment options for artifact resolution in AbstractArtifactResolutionException . java to enhance user experience by providing detailed information about the deployment process
replaced the usage of ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a new
updated imports and added a new method ` findByEntries ` in ` FeedEntryStatusDAO ` to improve code organization and enhance functionality by integrating
added thread execution handling in ` ContextImpl ` and refactored variable names in ` BlockedThreadCheckerTest ` to improve thread management and
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to include a ` formatterString ` parameter and improved error handling
updated LoadContactsTask to handle different SDK versions to ensure compatibility with devices running Android O and above
replaced setter methods for remote address and hostname with direct assignment to improve code readability and maintainability by eliminating setter methods
added a null check for realClass in Robolectric . java to ensure that a valid shadow class is annotated with @ Implements to prevent
enable tls mutual authentication by default if tlsmutualauthenticationrequired be set
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to improve code clarity and ensure proper exception handling for
added getter methods for Consumer and Producer in AbstractKafkaResumeStrategy to enhance accessibility of consumer and producer in the resume strategy
refactor conditional structure in PageChangeListener . java and enhance frame class loading in FrameRenderer . java to improve code readability and maintainability by
updated warning log message to reflect SMS configuration instead of email configuration to improve clarity of error messages related to email configuration
# 1193 - enh : add @ draftqueryoptimise ( query ) ... for lazy loading of live bean
added error handling for resource temporarily unavailable in MultipartBody . java to improve robustness by catching potential IO exceptions during transfer operations
fix : fix checkstyle violation in executablefactory and zipfolder
refactor EndpointConfiguration , SpEL , MainSupport , package - info . java , and SSLContextParameters . java files to improve code organization and
fix attach file action when there be no working directory
added LoadOptionsBuilder and SchemaInfoLevelBuilder to SchemaCrawlerOptionsBuilder in AccessTest . java to enhance configuration options for schema crawling
updated package and test method names in TestLoadLegacyLibrary . java to improve clarity and organization of test cases
replace exception throwing with returning null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty to enhance the functionality of project property management
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ runtime ] fix javadoc typo in datastreamjob
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential resource leaks
camel - 16464 : fix camel - cxf to use real class name for service class
added a condition to check if the HTTP / 2 protocol is " h2 - 14 " and modified the return logic in the HTTP2Server
updated method symbol handling in LambdaToMethod . java and added lambda detection in ClassFileVisitor . java and ReflectionVisitor . java to improve code cl
fix a bug in the coordinationtransformer where whnp do n ' t match what
increase timeout for dl4j inception v3net from 5 second to 1 second
added a method to set the slop value of mpq to improve query parsing accuracy by using phrase slop
increased the sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow for more time for event triggering
updated port number from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to align
fix ( screengrabber ) : use threadmonitor instead of mono . parallel ( ) . schedule ( )
added a condition to check if edit options are available before setting the visibility of the compound to ensure that the component only shows when the edit options
updated the progress calculation in DepthController . java to ensure that the progress is at least 1.0 f to improve performance by avoiding unnecessary
remove session . packetreceived ( ) , it be already implement by session interface .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the ` service ` parameter in multiple classes to prevent potential ` NullPointerExceptions ` to ensure safe handling of ` service ` inputs before accessing their properties or
added ` hidden = true ` to the ` arity ` and ` description ` fields in ` PantheonCommand . java ` to allow the
added a method to exclude the CoroutinesRoom class from instrumentation to ensure that only CoroutinesRoom classes are included in the configuration
added synchronization to the isSupported method in NegotiateAuthentication . java to ensure thread safety when checking if the HTTP caller is supported
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the code by eliminating unused methods
camel - 16463 : camel - jms : set maxconcurrentconsumers to 1 , add thread name to the jms reply manager so
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added functionality to handle image tags in PdfDocument to ensure proper rendering of image elements when a tag is present
log4j2 - 1349 add test for patternselector
simonstewart : fix the iehta test run in hta mode
updated the ` thank ` method to use ` MwThankPostResponse ` instead of ` MwPostResponse ` and added a
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to implement it to enhance socket - based communication capabilities in the Jetty
updated revokingStore initialization and enabling logic in Manager . java to improve clarity and functionality of revokingStore management
added unit tests for SQL collection implicit joins in HQLTest . java to ensure correct behavior of JPA queries with implicit joins
replace line breaks in assertions to ensure consistent formatting of expected and actual values to improve code readability and maintain consistent line endings
updated file management in IndexWriter and added assertion for unreferenced files in MockDirectoryWrapper to enhance file management and improve test reliability
removed the ` final ` modifier from several method declarations in ` BaseError . java ` to enforce immutability and enforce immutability of
added validation for user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the percentage is within valid range of 0 to 100
added a condition to check for the ` show _ old _ login ` flag in ` AuthenticatorActivity . java ` to ensure that the legacy login
rename ` StreamNetworkThroughputBenchmarkTests ` class to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming conventions
simplified response page assignment in EditTeamPage . java to improve code readability and maintainability
updated debug log message to provide more context for plugin credentials initialization errors
refactor connection management to ensure server socket channel is properly closed to improve resource cleanup and ensure proper shutdown of the server socket channel
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a private method ` createDynPartSpec ` to check for dynamic partition specifications to improve code readability and maintainability by encapsulating logic
make round half up factor optional for scientific notation
added a visitDirectory method to JarDirectoryStep and updated DirectoryTraversal to handle directory traversal to improve directory traversal functionality and ensure proper handling of directory
added a new file ` JWKSetEditor . java ` that implements a property editor for JWKSet in the MITRE OpenID Connect configuration to
refactored term finishing logic in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , VersionBlockTreeTermsWriter , and Version
add miss boundary in toespressonode and invokeespressonode to ensure that only one of the parameter klass be evaluate .
updated the default value of ` byIP ` from ` true ` to ` false ` in ` Fetcher . java ` to disable thread fetching
simplified the conditional check for queryTimeout in StatementUtil . java to improve readability and maintainability of the code
added dependencies for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to enhance target configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
fix : set initial delay for network usage stats update task to be immediately
updated interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a new constant for the final frame interpolator to improve code
adjusted the height calculation for navBar ' s swipe length to improve layout responsiveness based on display density
added a new module - info . java file for the org . eclipse . jetty . http3 . server package to define module dependencies
fix npe when create json object with null value
simplified the context initialization logic in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] make default value of tolerabedexceptionnumber configurable
refactor ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` and add a new ` visitPackage ` method
added spaces around the system property retrieval in TimestampCheck . java to improve readability of the command string
replaced FluentIterable with Buck ' s MoreCollectors for file listing in ChromeTraceBuildListenerTest . java to improve code readability
removed default value for the register variable in AbstractServiceConfig and added a constant REGISTER _ KEY in Constants . java to allow dynamic registration of
fix otr session leak when otr mode be disabled
added new properties for node label outline size , transparency , and color in PreviewProperty . java and modified renderProcessing method in NodeLabelRenderer .
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated a boolean value from false to true in the Win32FontManager class to enable font management functionality in the application
added null check for the variable ' v ' and set cursor before visiting it to prevent potential NullPointerException when ' v ' is null
added IErrorHandlingPolicy for handling errors in JDTBatchCompiler based on classpath presence to improve error handling behavior based on the compiler ' s
added methods for setting text block alignment points in LabelBlock . java and updated related tests in LabelBlockTests . java to enhance text alignment functionality
rename classes and parameters in mmm and ppp files to improve clarity and consistency in naming conventions
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
updated isLoopback variable type from boolean to Boolean and modified related logic in NetworkInterface . java to improve flexibility in determining if a network interface
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
fix flaky test : filedownloadviaproxytest # testdownload fails on window
camel - elasticsearch : add option to output a flowfile even if no hit .
updated method signatures and calculations in QuotaManagerImpl . java to remove aggregationRatio parameter to simplify code and improve readability by eliminating
refactor switch - case statements in Election . java for better readability and structure to enhance clarity and maintainability of the switch -
move event drain from close ( ) to processfile ( ) in readfilesp and streamfilesp
refactor widget handling logic in PageChangeListener . java for improved clarity and structure to enhance readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added error handling around unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to improve robustness by logging exceptions during session management
updated CategorizationFragment . java to improve categorization handling to enhance user experience by providing more detailed categorization information
update status message in HueLightHandler from " reachable = false " to " not reachable " to clarify that the status is not
add a loading flag to the fmlclienthandler to allow the client to see if it have be load .
show millions / thousands instead of mil / k / k in inventory ui
refactor MessagePackParser to handle different data types and add a new BinKeyPojo class in MessagePackDataformatTestBase to improve
added parameterized tests for querying reserved words as relationship names in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON
added boundary checks for x2 and y2 in GeometryUtils . java to ensure proper positioning of coordinates based on offset
refactor sorting order dialog handling and remove unnecessary type casting in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability
do n ' t exit if testplan can not be find
replaced direct usage of ` dbmsType ` and ` dbmsOperationHandler ` with ` getDbmsName ` , ` schemaName ` ,
modified the handling of the ` argIdent ` variable to include a conditional check for ` type ` and ` isNonStrictIdent ( ) `
updated the default protocol setting in JettyHttpComponent9 from a hardcoded " SSL - HTTP / 1.1 " to the dynamic protocol
set the default value of ` displayVolume ` to ` true ` in ` VolumeVO . java ` to enable the display of volume information in
refactor version method to accept a boolean flag for full versioning to improve flexibility in version output based on whether the version is full or
updated the logic for determining if the change log parameter is a global change log and modified the condition to check for the global change log parameter to
change log level from warn to debug in jtatransactionmanager . findtransaction ( )
hhh - 15827 skip setoperationtest on oracle because basicformatterimpl cause exception
refactor sslSocket timeout handling to streamline the handshake process to improve code readability and maintainability
updated size calculation in multiple fragments to account for popup status bar height to ensure that the action bar height is calculated only when the activity is not
make defaultclasshierarchyoror and noclasshierarchyoror final to make it final .
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix for amq -
refactored JodaTimeRangeRandomizersTest to use AssertJ assertions for better test coverage to improve code readability and maintainability by
updated WebDescriptor to redirect URLs for Jetty 9 and Jakarta EE versions 5.0 to ensure compatibility with servlet versions 5
fix : add support for readiness . isready ( ) for node
update loop to iterate over handler endpoints instead of liveEndpoints to ensure all endpoints are processed from the handler
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to ensure compatibility with the latest RPC version
added security checks using System . getSecurityManager ( ) before calling Reflection . getCallerClass ( ) in ObjectStreamClass and ObjectStreamField to
removed unused imports and changed the visibility of UGSCommandCount to private in XLCDCommunicator . java to enhance encapsulation and
refactor DefaultMetricsTagProvider to use a HashMap for tags instead of an ImmutableMap to improve code readability and maintainability by reducing dependency
danielwagnerhall : add mockbrowsertest to the suite , not just the mockbrowsertest
set the default option from OFF to ERROR in the Launcher class to improve user experience by providing a more descriptive error message
changed instance variables to final in IconNormalizer . java and modified string concatenation syntax in Log . java to enhance immutability and improve code read
added a boolean flag ` firstCallPrepareDo ` and modified prefix invocation logic in ` PrepareInterceptor ` to enable conditional handling of the first call
refactor ` showWorkspaceAndExitOverviewMode ` and ` hideAppsCustomizeHelper ` methods for improved clarity and functionality to enhance the
replaced eager singleton binding with direct provider binding for FormAuth , BasicAuth , AuthStore , and AuthStore classes to simplify dependency management and
updated the ` incomingAssociations ` method to include a boolean parameter to control whether to ignore invisible associations during association processing
server : remove private ip from host _ type _ private _ ip when host be delete
improve documentation for profile servlet on linux 4.6 .
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` and ` RequiredFieldModelTest ` for handling required fields to
rename configuration classes from ` CasCoreConfiguration ` to ` CasCoreConfigurationAutoConfiguration ` across multiple files to clarify that the configuration class
refactor FeatureFlags class to improve code readability and maintainability
updated UUID formatting and improved unique identifier generation in ConfigStore . java , CommonSetup . java , and ItemUIDtoHueIDMapping
added functionality to display a picture drawable in TimeLineCursorAdapter and TimelineArrayAdapter to enhance user experience by providing a visual representation of images
updated documentation for major and minor compaction configurations in HiveConf . java to clarify that compaction on full CRUD tables are run via queries
added a null check for the storage path before checking if the waiting message is down to avoid potential NullPointerException when the storage path is not set
refactor resize checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMultiSet , VectorMapJoinFastBytesHashMap ,
updated LDAPConnectionService . java to improve LDAP connection handling to enhance performance and maintainability of LDAP connection management
camel - 16463 : camel - core - aggregate should not require attribute . thanks to john mccandless for the patch
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to streamline debugging by eliminating unnecessary log statements
added a condition to check if the class name starts with " com . intelliJ . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher from ` hits . length ( ) ` to ` hits2 . length ( ) ` and ` hits3
added a new file ` LucenePackage . java ` in the ` org . apache . lucene ` package to provide a utility for obt
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure accurate size adjustment based on the existing size
added estimate method to GenericUDAFBloomFilter and GenericUDAFEvaluator , and changed variable declarations to final in multiple classes to improve performance
added a null check for the drawer toggle before executing the ValueAnimator to prevent potential NullPointerException when the drawer toggle is not available
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to improve code clarity and suppress warnings for unused parameters
added logic to determine if ` overrideClassLoaders ( ) ` is called with an instance of ` AppClassLoader ` or ` PlatformClassLoader ` to
fix msbib export format when corporate = true
added a ` cancelCoreRecoveries ` method to manage core recovery cancellation based on ZooKeeper awareness to improve error handling and control over the cancellation
replaced calls to ` System . currentTimeMillis ( ) ` with a custom ` currentTimeMillis ( ) ` method for consistency to improve code readability and
simplified the null and size check logic for the found list in RepoEditView . java to improve code readability and maintainability by
updated connection parameter descriptions in PGProperty . java for clarity to improve readability and maintainability of the code
added security - related fields and modified the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java to enhance security configuration flexibility and ensure default
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize does not exceed primeSize
refactor file usage checks to utilize a new method ` getUsableSpace ` for better consistency across classes to improve code readability and maintain
updated the combine method in DistinctSqlAggregation to handle multiple values instead of a single delegate to improve the efficiency of the combining of distinct SQL
added a test method to verify that post - login activities are executed on successful authentication to ensure that the application correctly executes post - login activities for
refactor ExtractorSpanishStrippedVerb to accept a string path instead of a static final instance to enhance flexibility by allowing dynamic extraction
fix chararrayset . contains ( ) to correctly handle object . tostring ( )
updated error messages and refactored track type validation in muxerWrapper . java to improve clarity of error messages and enhance code readability
updated JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid and refactored asset directory addition in JsBundleGenrule to
added UTF - 8 character encoding support in PinotClientRequestServlet and refactored StringDictionary to use byte arrays for improved performance to
renamed " Logical Analyzer " to " Logic Analyzer " and updated drawable resource references to improve clarity and consistency in naming conventions
added instance variables for vector class name and class to improve flexibility in instantiating vector instances
removed syncMetaLeader ( ) method from CMManager . java to streamline leader synchronization process for improved performance
add ' no response ' instead of ' not submit ' in contribution question
added TestLoggingExtension to DiagramRendererTest to enable testing of logging functionality in the DiagramRendererTest
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 527 : camel
added support for the Viomi Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance
refactor SSL session data access to use a local variable instead of repeatedly calling getSslSessionData ( ) to improve code readability and reduce
added a new file ` CreateNewSpreadsheet . java ` for creating Excel sheets with multiple rows and comments to facilitate the creation
update redis cache entry ttl to 15 second
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` and updated related log messages to clarify notification
updated wiremock version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety
added a condition to check if the character is ' < ' in DocClassUtil . java to ensure proper handling of single - character strings in
removed String . format from the return statement in Workspace . java to simplify the code by eliminating unnecessary string formatting
added import for Scope and sent a message for validation errors in ValidateCommandStep to provide user feedback when no validation errors are found
updated imports and refactored web resource configuration in IntegrationTestContextLoader . java to improve resource loading functionality and ensure proper context management
updated method calls from ` getResponderAt ` to ` getComponentAt ` and ` getResponderAt ` in multiple files to improve clarity and
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated ` StatsService ` and ` DefaultStatsService ` to use it instead of ` Map <
updated variable assignment and expression replacement logic in CellContentConverter . java to improve clarity and correctness of the expression processing
refactor glob transformation logic in SeleneseTestCase . java to improve clarity and correctness of glob comparison output
mondrian : fix typo find by codespell on fossies . org
added thread dump logging and improved file permission handling in ProcessTools , CustomLauncherTest , and LocalManagementTest to enhance debugging capabilities and ensure
remove tumblr ripper test that do n ' t pass
added a conditional check for symbol slots before converting storeType to ensure that conversion only occurs if the symbol has a valid slot
optimize chunk initialization when nextloadposition be zero
added UTF - 8 output handling and improved IndexWriter configuration in BaseLockFactoryTestCase . java to enhance test reliability and provide better
add tikaconfig . serviceloader ( ) . isdynamic ( ) to allow dynamic loading of service loader .
updated imports and added checks for package - info compatibility in DocLint . java and added new test classes in DocLintTester . java to
added a new import command constant and modified conditional checks in DataImportHandler and DataImporter to include it to enhance functionality by allowing the import command
added a test to verify that inner classes are not modified when ignoreDefinition is true to ensure that inner classes are not modified when ignoreDefinition is
removed unused import of android . util . Log from JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to handle workspace screens
danielwagnerhall : add / quitquitquitquit to kill jvm
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to improve type safety and clarity to enhance code readability and maintain
added a check to skip processing if Teredo is present in the system ' s display name to ensure that only Teredo instances are
fix nullpointerexception when add contact fail .
updated bean registration in AuthenticationConfigBuilder to use a new BeanComponentDefinition to improve code clarity and maintainability by using a more concise
modified the parameters of the drawBitmap method to use null instead of r . left and r . top to ensure that the drawBitmap function beh
correctly decode meitrack and totem
changed method visibility from public to protected for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager classes to enhance accessibility
marked multiple methods in EnhancedRandom as deprecated to indicate these methods will be removed in future versions to encourage users to migrate to
fix clientmapstoretest : catch all type of exception , not just the specific one
added a configuration option to keep empty sentences and modified processing logic in DocumentPreprocessor , MaxentTagger , and TaggerConfig to allow
updated the ` createArtifactSubdirectory ` method to return a boolean and added error handling for directory creation failures to improve error reporting and provide clear
changed the visibility of ` systemProvider ` from static to instance in ` ReusableCompiler ` and modified return statements in ` JavaLanguageServer `
[ java ] fix npe in directagentattache when resource return null answer .
simplified the ` sendEmail ` method by removing the try - catch block to improve error handling and simplify the method signature
fix potential npe in pipeitemsobsidian , and add miss package - info . java
fix date parsing in dataimporter when locale be not specify
added a boolean field ` includeDecals ` and its getter / setter methods in ` StorageOptions ` , and implemented a decal option in
updated the ` generateDocumentation ` method to include a ` null ` parameter in ` Liquibase . java ` and modified the ` get
refactor perf object creation and improve logging functionality in HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance logging capabilities and ensure
corrected spelling errors in log messages for consistency to improve code readability and maintainability
updated version check in ignoreRecordAttribute . java to use the MAJOR _ VERSION constant to improve clarity of the output message regarding the
added a new test class LdapPasswordAuthenticationTest to verify LDAP password authentication functionality to ensure proper functionality of LDAP authentication and validation of user attributes
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler . java to utilize BasicStatsNoJobTask for footer scan
fix an npe from reload on save
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future development
modified the ` start ` method in ` Reflector ` to include a reconnect option and updated related tests in ` DefaultSharedIndexInformerTest `
updated conditional checks in EdgeDataTable . java and NodeDataTable . java to include dynamic number column support to ensure compatibility with sparklines when using dynamic
added null checks using ` Objects . requireNonNull ` for groupId , artifactId , and getVersion in ` ResolvedGroupArtifactVersion ` to ensure non - null
added null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration handling to enhance performance and maintainability of header management
added lighting functionality and texture loading methods in PhotoPanel and FlameRenderer classes to enhance rendering capabilities and ensure proper resource management
add an ' add ' menu item to the sni list editor so that it can be add to the list .
updated condition to check if the index is within valid characters in CSSParser . java to improve error handling and prevent potential ArrayIndexOutOfBoundsException
added logic to enable or disable the default look and feel in the UI based on application properties to improve user interface responsiveness and user
removed unnecessary " NOT EXISTS " keyword from SQL query and simplified method calls to improve code readability and maintain consistency in the query structure
updated F2 _ TEST and F5 _ UNKNOWN constants to 2 - TOWER _ TEST , F5 _ TRANSPONDER _ TEST
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to ensure compatibility with the new database structure
refactor String class to improve code readability to enhance maintainability and facilitate future development
removed unused logger and charset imports from multiple classes to improve code clarity and maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ( ) ` to return an array of entries from the map to enhance functionality by allowing retrieval of global entries
added multiple assert statements for the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method
test : migrate cufiltertest to junit 5 ( # 2635 )
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ; ' '
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow subclasses to access the method from outside the class
added assertions to verify the presence of properties in the metamodel for AbstractEntity and Person classes to ensure that properties are present in the metamodel
removed unnecessary configuration parameter from Outlink instantiation in multiple files to simplify code and improve maintainability by eliminating unnecessary configuration
refactor methods to remove unnecessary lexical context parameter to simplify method signatures and improve code readability
added imports and modified return statement in UseLambdaForFunctionalInterface . java to include modifiers to ensure proper handling of unused imports during type expression
replaced ` appendClassSelector ` with direct addition of ` createFileSet ` in ` m _ classFilesets ` to simplify the code by
removed unsupported check for root input type Aggregate in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary
fix npe in registryevent . mapping ( ) when use registry . active . registry
simplified the assignment of x3 and y3 in the Intersector class to improve code readability and maintainability
added default methods ` sbeDecodedLength ( ) ` , ` sbeLimit ( int limit ) ` , and ` sbeLimit (
updated Elasticsearch version handling in tests and introduced a new test for elasticsearch cluster health to ensure compatibility with the latest Elasticsearch version and improve test reliability
replaced direct usage of ` messageBytes ` with a copy of ` messageBytes ` in ` PeerMessage . parse ` to improve memory management
updated ClusterDefinition and GSInstallerClusterProvider to handle versioning and cluster name properties to improve cluster management by allowing version identification in cluster definitions
camel - 14263 : remove unused method from ftp component
[ zeppelin - 5449 ] fix error message when dependency can not be load ( # 5449 )
modified local initialization logic in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java
added basic constraints check in ForwardBuilder and created a new class BuildEEBasicConstraints to handle certificate validation to ensure that only valid basic constraints are
added initialization logic for database connections in JdbcPostgresqlDAO to ensure values with the same time are upserted for PostgreSQL versions 9.5 and
updated WebSocket configuration to set a maximum message size and added validation for buffer size in AbstractWebSocketConnection to ensure that the WebSocket connection does not exceed
lucene - 7661 : fix indexreader . undeleteall to not prevent double write .
updated null checks for scopes in ClientRegistration . java and modified test cases in ClientRegistrationTests . java to ensure proper handling of null scopes and
added null check for orderBy before processing in CartesianProductStream . java to avoid potential NullPointerException when orderBy is null
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t allow vm to be start in stopped state if it ' s in stopped state
refactor logging initialization to store the result of LogUtils . initHiveLog4j ( ) in a variable before logging to improve logging
added a check to ensure tasks list is not empty before accessing its first element to prevent potential NullPointerExceptions when no tasks are available
change the return value of deletenode ( ) to boolean in pubsubmanager . deletenode ( ) and openpgppubsubutil . delet
fix a bug in the relationdao . delete ( ) method of the relationdao . deletebyid ( )
pdfbox - 4892 : check for empty barcode , a suggest by valerybokov
replace TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order of cipher suites
updated character validation logic in Escaper . java and modified expected string in InternationalizationTest . java to improve handling of control characters and
updated the ` ProviderSqlSource ` and ` SqlProviderTest ` classes to use ` CharSequence ` instead of ` String ` for SQL provider method
updated import statements and modified null checks for aliasChildren in InternalMNode . java to improve code clarity and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to ` PagedView ` and updated scroll delta calculation in ` Workspace ` to improve layout
renamed variable ` synthetic ` to ` pruned ` for clarity in ` JavaTemplate . java ` to improve code readability and maintainability
added ` setAccessible ( true ) ` to the method in ` WidgetInterceptor . java ` to ensure the method is accessible for proper access
added a conditional check to exclude the " database . server . id " field from literal initializers in ConnectorConfigGenerator . java to ensure that
replaced MacOS X version with Windows version in the user agent string to improve compatibility with newer operating systems
added a menu item to open a web interface in the popup to enhance user experience by allowing access to the web interface directly
added a new variable ` actualValue ` and refactored value initialization in ` HandleGetter . java ` to use it for better clarity
added error handling for Record creation in EncryptedSlideShow . java to improve robustness by preventing potential ArrayIndexOutOfBoundsException when building record
[ hotfix ] [ test ] add debug log in queue and filecheckpointio
removed redundant call to loadBattlePassManager ( ) before calling postLoad ( ) to avoid null pointer exceptions during avatar loading
updated Docker image version from " sshd : 1.0 . 0 " to " sshd : 1.1 . 0 " and modified
added a large array and forced garbage collection in ThresholdTest . java to ensure proper memory management and prevent potential memory leaks
updated log name checks and added new logging levels in StdErrLog . java and StdErrLogTest . java to improve log level management and
fixed - remoteservice . getremoteservce ( ) method throw npe if remoteinterface . getremoteservce (
added methods to get and set the selected state of buttons and checkboxes in MultiButton . java to enhance functionality by allowing dynamic selection of buttons
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align the intent with the
[ issue # 5790 ] fix checkstyle issue in broker / brokercontroller . java
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to improve code clarity and ensure proper resource management
refactor theme color retrieval in ProgramGridCell and Utils classes to improve code clarity and maintainability by centralizing theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters for various artifact types in ToolingApiLauncher to enhance type flexibility in the application configuration
removed an unnecessary line break in TestPayloadCheckQuery . java to improve code readability and maintain consistency in formatting
updated ConsoleReader to include the length of the buffer in the print method and modified ConsoleReaderTest to include a new test for reading lines with
added user information to the command in BaseCommand . java to provide more detailed information about the command execution process
rename org . graalvm . compiler . test to org . graalvm . compiler . api . test in graalvm - api
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
updated StreamExInternals to conditionally instantiate Java9Specific based on the " one . util . streamex . emulateJava8 "
updated texture source from " wheel . png " to " sys . png " in DecalTest . java , MusicTest . java ,
updated the registration and unregistration of the close system dialogs receiver to ensure proper resource management and prevent potential memory leaks
updated import statement for consistency in HostsRemovedEvent . java to improve code clarity and maintainability
updated ClientDetailsEntity to include a new property ` allowIntrospection ` and modified ` ChainedTokenGranter ` and ` Introspection
replaced direct calls to ` write ` with HTML encoding for remote user , session attributes , and content in ` HtmlSessionInformationsReport `
added methods for PhrasePrefixQuery and SpanQuery in Query . java to enhance query functionality for better query processing
replace size ( ) = = 0 with isempty ( ) for good readability
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve type checking logic to enhance clarity and
updated method parameters in AbstractAssert , Assert , DateAssert , ExtensionPoints , Descriptable , and ExtensionPoints to use Object instead of A
updated the package of ThrowingFunction from ` org . apache . shenyu . plugin . jwt . lambda ` to ` org .
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods to use instance methods instead of static methods to enhance flexibility
fix : fix npe in typefactory . getfirststatement ( ) when use inner class
updated BitmapDrawable instantiation to use Robolectric to enhance compatibility with Robolectric features
updated method names from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve cl
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a volatile counter for reinvocations and modified the logging message to include it to track the number of invocations and improve traceability of backup
update topPadding calculation in DefaultLookAndFeel . java to use innerHeight instead of getHeight to improve layout responsiveness by aligning
added a break statement in the Recognize class to handle cases where the loop terminates
added preference management functionality to manage home screen visibility based on user preferences to enhance user experience by ensuring proper haptic feedback when the home screen
updated ExcelBatchReader to handle different formula types and added new test cases in TestExcelFormat to improve formula parsing functionality and enhance test coverage for
fixed bug 1364816 - immutablefield no long report false positive for field assign in a anonymous inner class in a constructor .
added a customizable user agent in CommaFeedConfiguration and updated HttpGetter to use it to improve flexibility by allowing dynamic configuration of user
camel - 14263 : camel - avro - allow to specify a required attribute for the avro data format .
changed log level from info to debug for file not found message to reduce log verbosity and improve performance
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use reflection for retrieving the unique ID to improve compatibility with the server ' s
camel - 14850 : camel - core - optimize route collector to reduce stack frame in use during collect route
added support for vertex coloring in PShape3D by introducing a boolean flag to control rendering behavior based on whether the vertex color is
added a new boolean parameter ` isPkColumnFiltered ` and modified related methods in ` SchemaDotFormatter . java ` , ` DiagramRenderer
replaced shadow matrix extraction with direct matrix value retrieval to simplify code and improve performance by eliminating unnecessary shadowing
changed package declaration of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class definition handling in GroovyEngine . java to simplify code and improve clarity to enhance readability and maintainability of the code
fix ( brandingservlet ) : move plugin context listener to branding . plugin
removed concatenation operator for command output in NativeCodeGenerator . java to improve code readability and maintainability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in `
added unit tests for expectedexception handling in ThrowableAssert _ hasCause _ Test . java to ensure that the assertion correctly verifies the cause
updated variable names for flattenName and pack in AutomaticDependencies . java to improve clarity and maintainability of the code
changed the variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity by reflecting the purpose of the
danielwagnerhall : added unit test for firefoxdriver ' s profile capability .
camel - 16463 : camel - jbang - allow to specify route description via routeid / description attribute on mbean . thanks to
updated JavacTreeMaker . java to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure the edge uses the correct weight for processing CSV data
updated the calculation of cost per hour based on the current month in the QuotaManagerImpl class to improve accuracy of tariff cost per hour
updated SQL queries in DatabaseMetaData . java to include additional attributes and changed the default value from null to byte array to enhance data retrieval accuracy and
throw an error if binarized sentence do n ' t be build by parser
modify the ` toString ( ) ` method to return a formatted string representation of the user object to enhance the readability of the user object representation
updated MessageHelper to retrieve the message body as a string and handle potential null values to improve error handling and provide clearer feedback when the message
[ hotfix ] [ runtime ] fix usage of currentexecutionattempt in taskdeploymentdescriptorfactory
update ' cansubscribe ' method to use ' owner ' instead of ' subJID ' .
added a path reference for the Maven test classpath in AbstractJRubyMojo and removed unnecessary suppress warnings in CucumberMojo to
update method handle assertion to use the original method type instead of the converted return type to ensure correct type comparison and improve test coverage for method handles
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height comparison from ' > ' to ' ! = ' in URLImage . java to ensure that the image dimensions are not equal
added a condition to check if the name does not start with " META - INF / " and modified the way package names are appended to the
updated method signatures to include the ' final ' keyword for parameters and added conditional execution based on the display type to improve code clarity and ensure
updated assertions in StackWalkerTest to use a dynamic expected value based on the major version check to improve test reliability by adjusting the expected
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from other classes
refactor ` SimpleWordCount ` , ` RBKTimeSlidingTest ` , ` DistinctTest ` , and ` SimpleWord
removed server restart settings and exit checks from TestDatabase . java to streamline server behavior and improve code clarity
added null and empty checks for the block in NodePathsConvertOperator . java and modified child iteration logic in SchemaQueryMergeOperator . java to
added functionality to retrieve and display the total harvesting time in CallInfoFrame and updated relevant methods in IceUdpTransportManager and
updated particle rendering parameters in ParticleEditor . java to improve rendering accuracy and visual consistency
added logic to update the " keyserver _ port " property of " hadoop - env " based on the presence of " keyserver _ port
added transparent background color to SvgViewerFactory to improve visual rendering by applying a transparent background
updated import statements and annotations in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to ensure compatibility with the minimum SDK version
updated the method signature of ` containsExactly ` to use ` asList ( ... ) ` instead of ` accumulate ( first , rest ) `
updated the Bandwidth builder to use refillGreedy instead of simple and improved key handling in Bucket4jFilterFunctions to enhance
modified GermanAnalyzer , GermanStemmer , and WordlistLoader classes to implement an external list of stopwords and load text files to
added support for custom hooks in the Generator class and modified transformations accordingly to enhance query control and improve lineage evaluation based on specific hooks
added exception handling for NoClassDefFoundError in REngine . java to ensure proper handling of cases where NoClassDefFoundError is encountered
updated TraceFilter and TraceWebFilter to use SpanAndScope instead of Span to improve span management and ensure proper cleanup of spans
added a null check for the cause when setting the exception message in AbstractUpdateCommandStep to avoid potential NullPointerException when the cause is null
updated SolrServerException to include the base URL parameter to improve error handling by providing a specific base URL for better debugging
modify landscape setting and return logic in HSSFPrintSetup . java to ensure correct display behavior based on whether the device is landscape
update return statement to handle null values gracefully to improve robustness by preventing potential null pointer exceptions
added validation to check for invalid argument names in ArgDesc . java to ensure that the argument name does not contain tab or space characters
added support for background location listeners in AndroidLocationPlayServiceManager to enhance location updates handling based on the current activity context
updated primitive type check from ` ! = GL10 . GL _ POINTS ` to ` = GL10 . GL _ POINTS
trufflestring . toindex ( ) should check length before compare two array .
added a method to set the command list in ComboBox to improve command management functionality
nifi - 3746 : escape filename in tls - clientmanager and toolkits - standalone ( # 3748 )
updated command - line arguments in ZkCLI to use " zkhost " instead of hardcoded " zkcli . sh - cmd " to
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` instead
added a conditional check to post a severe event if the remote gRPC status is OK to ensure that the build fails gracefully when the remote gRPC status
updated method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
fix entity entity not be save in chunkmanager . fix # 3752
added a new method ` getErrorString ` to handle error messages in ` GLSurfaceViewAPI18 . java ` to improve error reporting
[ mary ] fix wrong query parameter in feature registry if feature registry do not support locale
updated server URI handling in RFC2616BaseTest . java to replace the server URI with a direct host reference to improve clarity and correct
added a method to add a helper list in Construction . java to enhance functionality by allowing dynamic addition of elements to the list
added logic to skip the first of the escape sequence in GlyphLayout . java to improve handling of special characters in the layout processing
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management and
added null checks and improved folder synchronization logic in ReceiveExternalFilesActivity . java to enhance robustness and prevent potential NullPointerExceptions during folder operations
fix npe in testng when serviceloaderclassloader be null
removed debug log statement from BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to improve logging clarity
added type checking for Node instances in TimelineControllerImpl . java to ensure correct column assignment for nodes and edges
added a method to register extra components in the BaseBrokerStarter class to enhance the functionality of registering additional components for the broker admin
added a test method for bug 4658 in MultiCfQueryExecIT . java to validate the functionality of SQL queries to ensure proper handling
peergroup . getpeerversion : use witness _ version instead of bloom _ filter .
add mjprev and mjchangedcycle tracking to tileabstractbuilder
updated ` RatisRetryPolicy ` and ` RatisClient ` to accept a ` Supplier < RatisConsensus > `
updated multiple Java files to improve code structure and consistency to enhance maintainability and readability of the codebase
updated JMXHelper registration in DefaultRemoteProxy to check for ManagedService annotation before unregistering and registering to enhance robustness by preventing potential NullPointerException
tika - 3748 -- detect non - unicode entry name when parse a zip - entry .
added a new file ` TestSplitThruPhiDivMod . java ` with mod and division tests to demonstrate the behavior of
added new methods for lookuping generic interfaces and superclasses in TemplateRegistry . java to enhance template registration functionality for generic interfaces and superclasses
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage and improve performance
added TODO comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify the availability of various languages in the settings screen
refactor byte array initialization and add a loop to limit the amount of bytes sent to 8192 to optimize memory usage by avoiding unnecessary array allocation
remove windowfocuslistener and replace it with windowadapter in sipcommmenu .
added a null check for the source node before throwing a SemanticException to ensure that a valid semantic exception is thrown when the source node is not
added scaling and center extent calculations for skeletal mesh in SkeletonRenderer . java to ensure proper rendering of the Skeletal mesh with
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to standardize the Solr home directory configuration for better test consistency
added @ ComponentScan annotation to SpringWebConfig . java to enable scanning of the Spring application context
removed the getAccount ( ) method from the UserListItem class to streamline the code by eliminating unnecessary methods
added unit tests for ` installPackage ` in ` ShadowPackageManagerTest ` and modified ` ShadowApplicationPackageManager ` and ` ShadowPackageManager
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future development
added TransactionCapsule fields and initialization methods to TransactionTrace class to enhance transaction tracing capabilities and ensure proper resource management
add property to enable randomness of member list ( # 11977 )
replaced Text ( ) with CrawlDatum ( ) in SegmentReader . java to improve data handling by utilizing CrawlDatum instances
refactor JsonDeserializer to improve code structure to enhance maintainability and readability of the code
changed the configuration name from " tsfile - engine . properties " to " tsfile - engine . properties " and changed fetchSize to Thread
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the requirement
closed - issue batch - 563 : itemorientedstep can be taskletstep +
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure a default value is set for the title
added handling for empty response bodies in AsyncHttpClientCall and a corresponding test case in AsyncHttpClientCallTest to ensure that the response body is not
restore ` embeddeddriverinstance ` for backwards compatibility
use registermacevents ( ) instead of macadapter . init ( ) for mac event registration
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
modified the return statement to return the result of ` toEnum ( type , s ) ` instead of calling ` toEnum ( type , s
changed the visibility of ` hideUnprivilegedObjects ` from private to private final in ` PgConnection . java ` to enforce immutability
updated log level from info to fine in ThreadedAcousticScorer . java and refactored data source initialization in AudioData
added a check for Android Q compatibility in IOUtils . java to enable saving Giphy video support for Android Q devices
fix test case and add test for async variable instance
refactor multiple Java classes related to EhCache and LDAP authentication to improve code organization and enhance maintainability
replaced manual logger retrieval with a more concise computeIfAbsent method to simplify code and improve readability
deleted the DataOutputOutputStream . java file and updated import statements in HbaseObjectWritableFor96Migration . java to remove unused code to stream
updated the configuration for hive . stats . column . autogather in TestAcidOnTez . java to reflect the correct number of rows
changed log level from info to debug in MavenEnhancePlugin . java to improve logging visibility for enhanced class enhancements
added a method to retrieve the default provider name " Conscrypt " and updated related references to use this new method to improve platform - specific
added Captor processing for instance fields in MockitoBeforeTestNGMethod . java to enhance field annotation processing for improved testing capabilities
improve error message when no test case be find .
updated import statements and modified method calls in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyAutoCompleteTest . java to improve
use graphhopperosm instead of deprecate graphhopper
danielwagnerhall : add retries to client creation in selenium - backed selenium test
changed the visibility of ` mHideSysUiScrim ` from final to non - final and added preference handling for top shadow visibility to
added a ` enqueue ` method to ` Call ` and modified the cancellation logic in ` OkHttpCall ` to improve call cancellation handling and ensure
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
added inheritance of RequestMatcher from org . springframework . security . web . util . matcher to allow subclassing of RequestMatcher for improved
added IF to the list of interfaces in DeferredAttr . java and created a new class ImplicitLambdaConsideredForApplicabilityTest .
[ j2kt ] add test for box primitive equality in j2kt integration test
added unit tests for the ` applyQualifiers ` method in ` DeviceConfigTest ` and refactored dimension setting in ` DeviceConfig `
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource used in the RootCursor from the logo to the launcher icon to improve the visual appearance of the launcher icon in the
added content content to errorBuilder in FileUploader . java to improve error reporting by displaying the content of the error
updated the implementation of ConcurrentHashMap to improve performance and maintainability of the code
added methods to adapt user trades from an array of AbucoinsFill objects in the AbucoinsAdapters and TradeService classes to
updated event handling in PlotSquared and Claim classes , and modified player clearing logic in Delete to improve clarity and functionality of plot claiming logic
danielwagnerhall : add htmlunitdriver constructor with proxy support
added support for handling VARBINARY data type in BlobType . java to improve compatibility with different database types
refactor cookie version handling logic in SetCookieSupport . java to improve clarity and maintainability of the code
added synchronization to ensure thread safety when accessing language ' s simpleTypeMap in LibFFIContext . java to ensure thread safety when accessing language '
replaced ` Context ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer ` to improve type safety and ensure correct thread
updated the ` waited ` variable in ` Connection . java ` and modified the ` deadServerNoTimeout ` method in ` LdapTimeoutTest
corrected the spelling of " Uniocde " to " Unicode " in the usage message to improve code readability and maintain consistency
fix unit test failure of cxfmessageheadersrelaytest
updated multiple SynthUI and SynthButtonUI classes to reflect new naming conventions to enhance code readability and maintainability
added handling for BoosterSet in ComponentAssemblySaver . java and changed return value in BoosterSet . java from true to false to
added support for proxy authentication in jabref .
updated references from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` and refactored
replace InternalError with a return statement in Class . java to improve error handling for JEP 359 support
updated logging statements in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay logging to improve logging consistency and
removed chunked transfer handling in NettyRoutingFilter . java to simplify request processing by directly using the HTTP client
added a call to ` clearAttributes ( ) ` in the ` PatternTokenizer ` class to ensure proper handling of attributes during token parsing
updated the ` VerificationAfterDelayImpl ` and related classes to include a polling period parameter for improved error handling during verification to enhance reliability
added compaction state management in SessionState and updated SemanticAnalyzer logic to exclude compaction checks to ensure proper handling of table masking based on compaction state
[ zeppelin - 2279 ] fix copy of interpreter jar from zeppelin - zeppelin
hbase - 2649 addendum fix checkstyle violation in hbase - server
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test due to potential issues
updated ` calcXBounds ` method implementations in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
added a try - finally block to ensure the reader ' s content and error handlers are properly cleared to improve resource management and prevent potential memory leak
added byte buffer release logic to HttpSenderOverHTTP to ensure proper resource management and prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` and ` Java
added null and closed check before closing the result set in JdbcExecutor . java to ensure proper resource management and prevent potential memory leaks
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to reflect the new versioning requirements
fixed bug 1371761 - usestringbufferlength no longer report false positive for empty stringbuffer
removed error logging from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
updated the createDb method to return a Connection object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , CreateCustomMetricTest , and ListResourcesTest classes to improve code organization and maintainability
hbase - 15921 add a config option to set the max size of off - peak compaction in compactionconfiguration
updated BitstampDepositAddress . java to handle both " address " and " address " nodes and added DepositAddressJSONTest .
replace IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling for buffer capacity issues
updated the method to use ` toAbsolutePath ( ) ` instead of ` toPath ( ) ` to ensure the correct path is used for
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and modified ` InvocationFinishedEvent ` to use ` InvocationType ` instead of `
refactor network interface enumeration to iterate through all available interfaces to ensure that only valid multicast interfaces are returned
replaced the existing validation check for " 1 : any " with a loop that checks for " 1 : any " to improve code readability
added a clone method that throws an UnsupportedOperationException in BufferedChecksumIndexInput to ensure proper functionality of the clone method in the class
update radius comparison logic in Circle . java to use a fixed radius value to improve accuracy of radius validation in circle calculations
added a check for the frequency band identifier before assignment in P25Channel . java to ensure that the frequency band is only updated when it matches
rename ` tapSquareSize ` and related variables to ` tapRectangleWidth ` and ` tapRectangleHeight ` in ` GestureDetector ` to
set ` DEFAULT _ REPLICATE _ ON _ WRITE ` to false in ` CFMetaData . java ` to disable replication by default
added a new query parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in the ` Util `
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests `
updated error handling in FileActivity and modified synchronization logic in FileDisplayActivity to improve user experience by providing a clear error message when the result is
added a method to write data to a Quiche connection in ForeignIncubatorQuicheConnection and JnaQuicheConnection
added a boolean parameter to the method call in JavascriptContext . java to enable conditional execution of JavaScript functionalities
refactor TableCell constructor to remove unnecessary parameters to simplify code and improve readability by eliminating unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` to configure tracing capabilities for UAA to enhance tracing capabilities and facilitate easier
added a second parameter to the addContent method in Submissions . java to ensure proper handling of parameters during submission
refactor ` getPrunedQueryableSegments ` method to accept a list of queryable segments instead of a single segment to improve flexibility
updated VertxBufferTest . java for improved functionality to enhance performance and maintainability of the code
fix bug # 54444 - fix hsmf message submission chunk date extraction
changed the visibility of the ` mContext ` variable from private to protected to allow subclasses to access the ` mContext ` variable
removed unused imports of SortedSet and TreeSet in ShowTablesOperation . java and ShowViewsOperation . java to streamline code by eliminating unnecessary
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and ` MongoTemplateTests ` to utilize it to improve
[ hotfix ] fix return statement in jobcoordinationservice
updated the method name from ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and introduced a new class ` hUmanReadable
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a conditional check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
[ hotfix ] [ core ] fix error log message in cpundarrayfactory
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated its usage throughout the ` contextInitialized ` and `
added null checks for incoming Fields , TermsEnum , DocsEnum , DocsAndPositionsEnum , and LeafReader in FilterLeafReader .
camel - 16492 : camel - jce should use secret key size if key size be negative .
updated exception handling in NetSocketReader and removed unused constructors in SoftEndOfStreamException to improve error message clarity and simplify exception handling
removed redundant @ Inject annotations from multiple Java files to streamline the code by eliminating unnecessary dependency injection
updated assertions in ` BundledDistributionTest . java ` and added database user assertions in ` PostgreSQLTest . java ` to improve test coverage and
[ flink - 18686 ] add pipeline . name config option to specify job name for printing and logging
updated scaling logic in OverviewState to account for two - panel layouts to ensure accurate scaling based on the device ' s layout height or width
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome to enhance the functionality of the I
refactor methods in DataUpdateManager and StorageUtils to remove unnecessary timezone parameters to simplify method signatures and improve code readability
[ j2kt ] add a ` ` isqualified ' ' field to the ` thisreference ` class .
fix xhamster ripper to work on non - english locale
fix a concurrentmodificationexception in glowworld
mondrian : fix oracledialect . gettableschema ( ) return null when schema be null or empty
fix a typo in the console filter ( # 2271 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select and deselect all
[ java ] do n ' t use termwindowlength when calculate the term offset .
fix checkstyle issue in util / guildupdateowner / guildupdateownerevent . java
update inPortalTicks increment logic in Player and Entity classes to accommodate a new range of 80 to ensure that the inPortalTicks is
updated spacing calculations and added compression handling in ClusterMonitorTileSkin . java to improve visual representation of tiles based on their compressed status
refactor multiple codec template classes for consistency to improve code organization and maintainability
change variable types from int to long for length calculations in Base64 . java to ensure correct handling of long values in binary data processing
simplified the null check condition for the renderer to improve code readability and maintainability
cloudstack - 5892 : do not allow scale cpu / memory volume with custom service offering
updated import statements and replaced Builder with LimitOrder . Builder in HitbtcAdapters . java and Order . java to improve code clarity
rename ` idleCount ` to ` consecutiveIdleCount ` for clarity to improve code readability and maintain consistency in naming conventions
updated the description URI for the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the
refactor name handling in ConfigCategory . java to use displayName instead of name to improve clarity and maintainability of the code
updated the condition in ParticipateAssetIssueActuator to include an additional check for negative values to improve validation logic for preciseExchangeAmount and
added a loop to limit the number of iterations in FeedUtils . java to improve control over the number of iterations for processing
added a test method ` testHDF4 ` to verify HDF4 file parsing to ensure compatibility with Java version 1.5 and improve test
[ calcite - 6092 ] [ sql ] add test for sqloperatortest . castto _ 6092 _ fixed ( )
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added a new method ` quietCloseAll ` to close multiple ` AutoCloseable ` objects and updated the loop to use this new method to
replaced hardcoded button button strings with a constant string for positive button response to improve clarity and maintainability of the code by using a
added a conditional check to ensure srcWidth , srcHeight , srcWidth , and dstHeight are non - zero before drawing to avoid potential NullPointerException
replaced ReflectionHelpers . callInstanceMethod with Unsafe . class . getMethod for defining a class to improve compatibility with Java ' s security framework
fix btcnode validation regex to handle multiple fqdns , add
refactor conflict handling in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and maintainability of
fix an npe in the version of flutter ( # 5371 )
added a condition to return the reference if it equals the current reference in the ReferenceMemory class to ensure that the correct reference is returned when it
added file input handling and logging for seed files in Injector . java to improve error handling and provide clearer diagnostics when injecting seed URLs
added a condition to hide the original view when checking if it is an instance of ItemInfo to ensure that the original view is only displayed when
updated maxNodes calculation and modified the conditional check for maxTrips in DefaultLoopPolicies . java to ensure that maxNodes does not exceed the
added support for checking texture coordinates type and logging warnings in CombinedTexture . java and introduced a new method in UVCoordinatesGenerator . java to
added error handling for barcode file deletion and improved argument validation in multiple classes to enhance robustness and prevent runtime exceptions during file deletion operations
added seek and close methods to TracingConsumer and TracingProducer classes to enhance tracing functionality for better resource management
update SQL query in HandleDAOImpl . java to use substring instead of locate and set the oldPrefixLength to improve clarity and correctness
replaced the initialization of convertedValsList with a constructor that initializes it directly from the collection to simplify the code and improve performance by elimin
added a deprecated constructor to the AbstractTimer class to indicate that the class should no longer be used in favor of a new one
added a warning dialog for nightly builds in MainWindow . java to inform users when the version of Universal Gcode Sender is a n
modified getresponsessortedbyrecipient to accept a boolean parameter to enable sorting of response by team name
update return message from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to clarify the purpose of the code
deleted CacheApplication . java and replaced its usage with CommonsApplication . java in ShareActivity . java to simplify the codebase by eliminating
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` for service and broadcast operations to streamline
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
refactor configuration update logic in RuntimeEnvironment . java to ensure compatibility with devices running Android KitKat and above
added support for the " stack _ repo _ update _ link _ exists " resource in VersionDefinitionResourceProvider and a corresponding test in StackManager
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
skip null index name in cfmetadata . getindexes ( )
added package imports for XML resolver helpers and readers in CheckPackageAccess . java to ensure compatibility with the Apache XML resolver features
rename methods from " save " and " persist " to " add " and " update " in JobRepository and related classes to improve clarity
remove loop exit input from successor if successor is an instance of LoopExitNode to ensure proper handling of loop exit nodes in the graph
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController and added a new reset method to improve layout management and
added a check for terminal support in ConsoleReader . java to ensure compatibility with terminal features
solr - 5369 : add timeout check to lbhttpsolrclient and cloudexitablereadertest
added a validation check for session validity before checking if it is dirty in AbstractSessionCache . java to ensure that session data is only valid before
refactored index change handling logic in ChangedIndexChangeGenerator . java to improve null safety and clarity in handling index changes
replaced ` java . util . Vector ` with ` java . util . ArrayList < RadioButton > ` for managing buttons to improve performance and
updated UserManagerCompat to support both NYC and MR1 versions and introduced UserManagerCompatVM and UserManagerCompatVNM
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to multiple database classes and updated ` ReorganizeTable
refactor ActionGraphCache to utilize MapDifference for mismatched rules and improve error messaging to enhance clarity and maintainability of error reporting
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide database - related descriptions for locking and unlocking databases in the Hive planner
replaced direct field assignments with setter methods in RankingUIModel and RankingToolbar classes to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to enhance disconnect functionality and provide clearer information
added a test for setting and deleting storage groups in IoTDB and updated the AuthorityChecker to handle the DELETE _ STORAGE _ GROUP privilege
chore ( regen ) : update doc from ` oud \ \ DocumentAi \ V1beta1 \ 352 \ 3
added support for variable declarations and improved type validation in multiple classes to enhance type safety and provide clearer error messages for missing or malformed variable
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to provide a way to
replaced specific buffer capacity checks with a wildcard import and updated constructor and exception messages in CountersManager . java to improve code clarity and
updated log messages in MultiSteps . java and SendEmail . java to use placeholder syntax to improve code readability and maintainability
added null check and cloning for joinKeys in JoinDesc . java to ensure proper handling of join keys and prevent potential NullPointerExceptions
added PrincipalResolver to WebAuthnConfiguration to enable customizable principal resolution for authentication handlers
added search paths parameter to the ` addSettingsFromFile ` method and updated related tests to support additional search paths for Xcconfig parsing
added ' final ' modifier to several lists and fields in Oracle . java to enforce immutability and enforce immutability of these fields
[ hotfix ] [ checkpointing ] disable rescaling of unaligned checkpoint
fix unsupportedoperationvisitor for sort _ by and map _ value _ constructor
add option to disable log for compiletheworld test .
added a check to prevent deletion of local variables in LambdaRewriter to ensure proper handling of local variable types during evaluation
added support for MySQL databases in CreateTableGenerator to ensure proper handling of timestamp columns in table creation
added context class loader management in EnvConfiguration . java to ensure proper resource disposal and associate with the current thread ' s context class loader
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure proper ejection delay is set
rename ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and update related method names to clarify the purpose of the
refactor TransactionUtil2 to improve code organization to enhance maintainability and readability of the code
refactor token signing service methods to include an optional service parameter for issuer validation to enhance flexibility in issuer claim validation by allowing dynamic resolution of
updated string formatting and null check for DocCollection in ClusterState . java to improve code readability and handle potential null collections gracefully
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn , ForeignKeyColumnMutator , AbstractRelationalDbmsHandler , and ForeignKeyColumnProperty classes to
[ java ] : do n ' t call state ( ) in election when a follower fail to join a leader .
replaced static import of Shadows . shadowOf with a private method Shadow . extract in ShadowActivity and ShadowBluetoothDevice to simplify shadow
added error handling for null or empty selection root in FileSelection . java and improved test cases in TestBugFixes . java to enhance
deprecate iforgeitem . oninventorytick ( itemstack , slotindex , index ) , mark it a deprecate for removal .
fix ( export ) : fix war signature for exportinterceptorplugin
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when SherlockActivity is not initialized
updated widget binding logic to include options for improved functionality to enhance widget management by allowing dynamic binding of options
added new capability constants and cases for air pressure and voc PPM in EcobeeSensorThingHandler . java to enhance capability handling for
refactor conditional statements in OperationSetServerStoredContactInfoFacebookImpl . java for improved readability to enhance code clarity and maintainability
added AAPT and AAPT2 environment variables to the environment variables in Genrule . java and updated tests in GenruleTest . java to
do n ' t dump access table if trufflecompileroptions . truffleinstrumentBranches be set
added null check before disposing of message to prevent potential NullPointerException when disposing messages
changed the access modifier of ` db ` from private to public and added ` @ Getter ` annotation in ` TronStoreWithRevok
update log warning messages in CoreContainer . java to clarify that LogWatcher is not implemented for log4j
replaced printStackTrace ( ) and System . err . println with fail ( ) for cloning failures in CategoryPlotTests . java to improve error
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` in ` IOSImplementation . java ` and introduced a new class ` Small
* replace hashmap with intmap in shader . getattributetype ( ) and screenshots . getattributetypes ( )
updated JDBC connection string from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
changed variable type from Date to Object for first and last exchange completed timestamps and added null checks to improve type safety and handle potential null values gracefully
updated TestHtmlTag and TestUseOption to include a default language parameter and added new output tests in TestUseOption and C1 classes to
updated condition to check if the result is incomplete and has more than 10 items to improve validation logic for completion results
updated command - line argument handling and modified time column name retrieval in HybridClusterIntegrationTestCommandLineRunner to improve flexibility in specifying time column
updated output format handling in ` SiteSnapshotVariationsTest ` and ` OutputOptions ` classes to differentiate between HTML and SVG formats to improve
updated condition to check if QSB is not enabled in DeviceProfile . java to ensure correct behavior when QSB is not enabled
add ` equals ` and ` hashCode ` methods to ` AnimationList ` and update equality checks in ` SceneKey ` and ` Gltf
added a date buffer and corresponding methods in AbstractGenerator , HttpGenerator , HttpConnection , and Response classes , and updated HttpConnection to use this
replaced Adler32 with CRC32 for CRC32 in Store . java to standardize naming conventions and improve code readability
set xen . heartbeat . interval to null instead of ' any # of seconds '
added a new warning constant ` ZERO _ AREA _ FIN ` and modified validation logic for geometry warnings in ` FinSetCalc . java `
use custom jackson serialization for documentmetadata in elasticsearchio ( # 3365 )
hhh - 15546 - add date _ trunc ( ) and date _ trunc _ trunc ( ) support
added error handling for memory pool errors in MetricUtils . java and updated corresponding test cases in MetricUtilsTest . java to improve robustness of
added a JavaScript usage parameter to the ensureSignedUp method in UserTests . java and updated return statements in FileAccess . java and FileTreeNode
updated type annotations in ValidationTask . java to use ` Types . PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) ` to
updated the BACKFILL constant value from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the new
replaced instances of ` DataWord ( ) . getData ( ) ` with ` DataWord ( 1 ) . getData ( ) ` and added
refactor badge update logic in AllAppsContainerView . java to improve code readability and ensure proper handling of BubbleTextView instances
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the start method calls for altContext and otherContext in ResourceHandlerTest . java to ensure correct behavior after ContextHandlerCollection is started to
removed unnecessary conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline code by eliminating unnecessary logic
trufflejdkservices . lookupmodule should not be null .
added @ Ignore annotation to ClassicSuperHandlingTest . java and corrected a typo in the method name to clarify the test ' s
updated import statements to reflect the correct package structure for ItBit - related classes to ensure compatibility with the latest version of ItBit features and improve
simplify code , use isdefined ( ) instead of ! = null
changed ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` classes to be ` final ` and
fix potential resource leak in useraccountdao . getuseraccount ( )
replaced usage of ` getClass ( ) . getName ( ) ` with direct references to " java . util . Vector " and " java .
added tableNameWithType parameter to the warning log message in RetentionManager . java to provide more context about the table ' s retention time
trim whitespace from the fragment list before checking its length to ensure that the fragment list is not empty before proceeding
fix resourcepackfilenotfoundexception to use modfile . getfilepath ( ) instead of path . tofile ( )
refactor TransformerBuilder handling and button selection logic in PartitionToolbar . java to improve code clarity and functionality for managing TransformerBuilder instances
removed unnecessary condition for showing as grid in RecentsView . java and added checks for task view focus and visibility to improve code readability
refactor ` calculate ` methods to return ` BMIViewObject ` instead of ` Map < String , String > ` across multiple classes to
removed the comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability and performance
update damage calculation for hay bale block to adjust damage based on its type to improve damage adjustment for h
updated environment variable handling to support both " OPENJ9 _ JAVA _ COMMAND _ LINE " and " IBM _ JAVA _ COMMAND _ LINE
added support for custom plugin properties in OptionsParser and related tests to enhance flexibility in handling plugin configuration options
updated condition to check if hashTable is not empty before verifying joinType to ensure that the hashTable is not null and does not contain empty
updated timestamp validation logic and renamed test methods for clarity to improve accuracy of timestamp representation and enhance test coverage
[ java ] do not share archive context in clustered service agent .
added a condition to check if the compilation threshold is not zero and improved assertion formatting in LambdaForm . java to ensure proper handling of compilation
added test methods for image mosaic in AbstractTest . java and integrated them in GeoRasterOnlineTest . java to enhance testing capabilities for image
refactor TogglableFlag and related classes to improve default value handling and add a change listener to enhance functionality and maintainability of the
updated logging statements in DockerClientFactory to use parameterized messages to improve logging readability and maintainability
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing for unsupported platforms
updated assertions in RoutesTest to use Hamcrest ' s assertThat for better readability to improve test reliability and maintainability by
added new functional interfaces for byte , float , and short predicates and functions in the com . speedment . common . function package to enhance functionality
changed the return type of getSubsColor ( ) and setSubsColor ( int ) to String in PmsConfiguration . java and updated related
added a conditional check before deregistering the invocation and deregistering it if it ' s complete to ensure that invocation is only deregistered if the
replaced the use of ` flush ( ) ` with ` output ( null , nop ) ` in the ` AbstractWebSocketConnection ` class to
added a check for the " redirected " intent before starting the WelcomeActivity in LoginActivity to ensure that the welcome activity starts only when the
added a new class ` ShadowCheckedTextView ` to implement shadow behavior for ` CheckedTextView ` in Robolectric to enable testing
added Serializable interface to ParserState class and updated getter _ CACHE and changeCallback fields to be transient in AccessorProperty and Property classes to ensure
8274293 : add identrustdstx3 alias to verifycacerts . java test
removed duplicate calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` and set ` TEMPDIR _ CONFIGURED
when parse the nickname of a muc occupant , it should have the correct nickname .
updated QuicSession and related classes to include a new context parameter and modified connection handling to improve connection management and ensure proper context handling
updated merge settings to use the new ` getConfig ( ) ` method and added conditional logic for merge policies in ` CreateIndexTask . java `
refactor character type checks in ICU4JImpl and TextPosition classes for improved readability to enhance code clarity and maintainability by
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and updated AbstractDatabase . java to support this functionality
rename NbtScoreboardIoService . java file to improve clarity and consistency in naming conventions
updated SAML2 configuration to simplify resource mapping and improved logging severity from error to warn to enhance code clarity and ensure proper handling of writable
changed the visibility of the ` printer ` variable and refactored the ` createPrinter ` method in ` GraphPrinterDumpHandler ` to improve
added BigDecimal import and updated order average price calculation in HuobiAdapters . java to ensure accurate calculation of average price in order data
updated ProjectionOperation and TypeBasedAggregationOperationContext to use ` getTarget ( ) ` instead of ` getName ( ) ` and changed field types from
modify the logic for adding players in FakePlayer to ensure players are only added if they are not already in the viewers list to improve player
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve drawable state management for better visual feedback
updated SPDYClient to utilize new compression and parser mechanisms with improved connection handling to enhance performance and maintainability of connection management in the SPDY protocol
fix the npe of protostuffobjectoutput . writeobject ( ) when the input be null
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator to improve code readability to enhance maintainability and facilitate future development
ggb - 1353 do n ' t show ax if they do n ' t show the number
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve performance and
updated variable assignment for clarity in XmlWorkflowServiceImpl . java to enhance code readability and maintain consistency in variable naming
added SSL context and hostname verification for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java to enhance security by
fix display of real used clock rate for g722
updated TextureAtlas . java file to improve texture loading functionality
updated the method to return the module name instead of the product name and added a method to set the module name in AppleLibraryBuilder to
added locking mechanism around release process in TestSlot . java to ensure proper resource management and prevent potential memory leaks
fix : ebean . find ( … ) . findids ( … ) do n ' t work with inheritance
updated WebSocket response handling in WebSocketServletRFCTest . java to improve clarity and functionality of response header validation
[ wasm ] fix memory leak in function instance and node .
added a ttl configuration to the ClickHouseLogCollect classes and updated related queries to allow dynamic table creation time based on the specified ttl value
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and updated related methods in CustomPreconditionWrapper to
updated imports and refactored server initialization in DeploymentExceptionTest . java to utilize Jetty ' s Server and HandlerCollection for improved
added error handling for Fresco initialization and VectorDrawable creation in CommonsApplication and NearbyController to improve robustness by logging exceptions
updated return statement to handle null and empty object names more gracefully to improve robustness by preventing unnecessary trimming of object names
update error message from " could not find file " to " could not open file " in UserDataException to provide more informative error messages for
[ hotfix ] [ table ] make environmentsettings . plannerclass and environmentsettings . executorclass static final
renamed variable ` owner ` to ` issuer ` for clarity and updated subject creation logic to improve code readability and handle potential null values
added a deprecation annotation to RuntimeOptions . java to indicate that these features are outdated and should no longer be used
replaced ByteBuffer encoding with a direct call to getBytes to improve performance and readability of the code
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to facilitate permission evaluation
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` and implemented cleanup logic in ` Line
[ hotfix ] fix checkstyle violation in masterfilesystem
replaced instances of CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR and BLOCK _ MERK
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5365 -
improve error handling in defaulthttpclient and fullnettyclienthttpresponse
replaced BorderLayout . center with BorderLayout . centerAbsolute in Picker . java to improve layout consistency for spinner components
updated the ` recycleMemorySegments ` method to include the ` numRequiredBuffers ` parameter and added a new ` recycleMemorySegments ` method to
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of MBeanServer instances
updated JUnit imports and annotations in AbstractIT . java to use RetryTestRule instead of AndroidJUnit4 runner to improve test reliability
refactor auto - commit logic in CallTask and QueryStateMachine classes to simplify transaction management and improve code clarity
updated import statements in CsvFieldType , CsvTable , CsvTableScan , CsvTest , and created a new package - info . java file to
added support for " javax . microedition . khronos . opengles . GL " in the instrumentation configuration to ensure compatibility
[ hotfix ] [ test ] remove unused variable in streamtasktestharness
refactor request handling in ` mmm Request . java ` and add a new test in ` mmm RequestTest . java ` to improve
updated storage point retrieval methods and variable visibility in MainApp and DataStorageProvider classes to improve compatibility with newer Android versions and enhance storage point management
added methods to handle session availability and unavailability in SessionManager to improve session management by allowing updates to the priority of active and unavailable sessions
added package " liquibase . pro " to the scanning configuration to support additional Liquibase packages in the application
renamed the method from ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in the ` SyncedFolderProvider ` class to improve
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments for improved functionality to enhance flexibility in loading global objects
refactor substring handling in FastPathResolver to use startIdx instead of a hardcoded value to improve code clarity and maintainability by using a
replaced ` length ( ) ` method with ` toIntExact ( ) . getRetainedSize ( ) ` for footer and stream checks to
updated method names from ` hasRandomizedType ` and ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` and ` has
drill - 3596 : throw unsupportedoperationexception when use lead or lag in window frame
clear the headers of proxyRequest in AbstractProxyServlet . java to ensure proper handling of HTTP headers during proxy requests
added a check to skip the test if SA attach is not expected to work to ensure that the test runs only when SA attach is not expected
added null check for bgColor in GraphicsDevice . java and introduced TranslucentWindow . java for fullscreen window translucency support to
added a check for null userInfo before populating the user info elements in UserInfoActivity to improve user info handling by providing a clear error message when
added custom field serialization for precompiled headers in PrecompiledHeaderData . java and removed unnecessary precondition check in PreprocessorDelegate . java to improve
[ hotfix ] [ table ] support append mode for kafkasourcesinkfactorybase
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the behavior of named output groups in the project workspace
updated regex pattern and added content comparison logic in FileSettings . java to ensure correct handling of line breaks in file content
[ hotfix ] fix checkstyle issue in util / statelessflow . java
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch ( mode = PERSISTENT ) annotation to TaplTestsQuickstep . java to enable persistent taskbar mode
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve error message when item model can not be load
removed unused imports and added JUnit @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not
fix getcurrentsurfacescale ( ) in jogl for 2x screen
refactor RussianLowerCaseFilter to improve code organization to enhance maintainability and readability of the code
replaced serverProps and clientProps with emptyProps in CsvBulkLoadToolIT . java and updated zookeeper port retrieval in QueryUtil . java to
replace separator characters in displayName with underscores to ensure consistent file path formatting across the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 - make w
added a boolean flag ` repeatFirstLineIndent ` and modified the ` setIndent ` method to include it to control the indentation behavior based on
changed the type cast from Oid to Object in the equals method to ensure proper type handling and avoid potential ClassCastException
fix issue with hikaripool . getconnection ( ) call setmetricstrackerfactory ( ) , setmetricregistry ( ) , set
loopex : fix classcastexception in controlflowanchored
added the line ` buttons [ i ] . setFocusPainted ( false ) ; ` in WindowsPlacesBar . java to ensure the button is
updated condition to check for unique constraints and foreign keys in DatabaseSnapshot . java to ensure proper handling of backing indexes in database snapshots
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated the ` AccountAPI `
[ ds - 3752 ] check if dc . title do not contain a dc . title ( # 3753 )
added a check for empty words before processing the HypothesisUtance object to ensure proper handling of cases where no words are available
camel - 16400 : camel - ruby - add a test to show how to use the script engine in parallel .
updated thread management in FeedRefreshUpdater to use databaseUpdateThreads instead of backgroundThreads to improve thread management for database updates
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds to allow more time for fast scrolling in the Re
updated the SystemClassName constant to point to " Ljava / lang / System " instead of using MetaUtil to ensure compatibility with the latest Java
hhh - 13644 fix procedurecallimpl # getresultstream ( ) to return stream
updated the initialization of ` apiProperties ` to handle potential null values to improve robustness by avoiding potential NullPointerException when ` getApiProperties ` is
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frames in WebSocket to enable proper handling of binary and text frames in WebSocket
replaced direct calls to ` localDriver . findElement ( ) ` with ` new WebDriverWait ( localDriver , 10 ) . until (
updated random point generation logic in RandomGeo3dShapeGenerator . java to use random boolean checks for latitude and longitude to improve accuracy of random
added a keepAlive method to the ResourceBundle class to ensure proper memory management of ClassLoader instances
changed the return value from false to true in SQLiteDatabase . java to enable the functionality of database operations
do n ' t report jsr166 lockmonitorenter warning if the sig start with ' ljava / util / concurrent /
added MkdirStep imports and commands to create temporary files in AndroidAar , AppleBundle , ApplePackage , and FatBinary to
updated boundary checks and error messages in MeshLeveler . java for improved clarity and consistency to enhance error handling and provide more detailed error
( chore ) camel - pmml : skip dmn - jpmml if there be no jpmml module on classpath ( #
replaced ` locationMode ` with ` thermalStatus ` in the ` ShadowPowerManager ` class to accurately reflect the functionality of the
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with macOS environments
[ shapefile ] make use of memory - mapped buffer on window .
added a null check for the organization in the pom . xml file to ensure that Plugis are required to have an organization in the pom
removed copyright notice from SepPostingsWriterImpl . java to improve clarity and maintainability of license information
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method to use the system ' s Java class path instead of an empty string to ensure compatibility with the system ' s class path for
replaced ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte [ 0 ] instances for cryptKeyInit , cryptKeyPriv , and md5
added a test method to verify that Javadoc is not unchanged during the build process to address issue # 3198 and ensure that the Javadoc is not
change LAUNCHER3 _ PHYSICS flag from false to true to enable phone synchronization feature in the application
added a ` < div class = ' noPrint ' > ` tag to the ` HtmlThreadInformationsReport ` class to improve the display
update LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and update TEST _ VERSION _ CURRENT
added macosx symbolicator and task handles in BsdDebuggerLocal . java and expanded OS detection for Darwin in PlatformInfo . java
fix potential memory leak in fml client handler and message codec
make networkdispatcher exception message more debug - level
[ java ] fix race condition in aeron client conductor .
added a break statement in TouchImageView . java to ensure proper control flow in the switch statement
fix : update gapic - generator - java version from 3.0 . 1 to 3.18 . 1 for dialogflow v3
removed SSL handshake listener and streamlined the feeder flush call in FeedableBodyGenerator . java to streamline the process of flushing the feed
added checks for object type assignments in TypeUtils . java to ensure correct handling of type constraints during type conversion
replace nonblockinghashset with concurrentskiplistset for memtables pending flush
added null check for ` tree . errs ` before calling ` memberEnter ` and modified error handling logic in ` JavaCompiler ` , ` Err
bug info view : use ` ` none ' ' instead of ` ` no _ background ' '
replaced ` finish ( ) ` with ` dialog . cancel ( ) ` in the ` AboutActivity ` builder to ensure the dialog is
modified the calculation of newLowerBound and newUpperBound in IntegerStamp . java to handle negative values and added unit tests in IntegerStampTest . java
added a method to read an InputStream from a byte array and updated the image instance initialization to use this new method to improve code readability and
added methods to manage variable assignments and scope management in CaseStmtToken and updated related classes to improve code clarity and ensure proper handling of variable
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by handling potential exceptions during encryption
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with additional library dependencies
updated string concatenation in StringUtilsTest . java to use system ' s line separator to improve compatibility with different operating systems
added compatibility settings to TemplateEngineFreemarker and updated JavaScript alert message in ApplicationController to ensure compatibility with different character encoding and improve
do n ' t use bytearrayinputstream in crdgeneratortest , just print the generated crd
make some field final in sampleresenderfactory so that it can be reuse .
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter class to ensure that the emailable
added quoting logic in CommandLineBuilder and improved test assertions in CommandLineBuilderTest to ensure proper handling of quoted version strings and enhance test coverage for
removed the ' public ' access modifier from multiple classes and interfaces to enforce package - private visibility for better encapsulation
added a method to set the number of reduce tasks in FreeGenerator to enable dynamic task management based on the number of fetchers
fix ( graphql - core ) : fix nullpointerexception in schemageneratorhelper
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the file system
added checks for multiple texture float extensions in FloatTextureData . java to ensure compatibility by verifying support for both OES _ texture _ float and GL _ ARB _ texture _ float extensions
add fileserver . write ( ) and fileserver . closefile ( ) ; add version 2.1 . 20050211 .
added a null check for outputDirectory and jarStream before setting the output directory to ensure that the output directory is only set when both outputDirectory and jar
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance monitoring for SQLite connections
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
add a new enum to handle resource - related error in the config package
added a check for buffer size before modifying bufferPosition in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure proper buffer positioning
updated error handling in DefaultServlet and JspServlet to include localized messages to improve error reporting and provide clearer context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext for permission testing to enhance thread management
updated the CHECK _ EVERY _ N constant from 10000 to 0xFFFF and modified the checkFreeMem ( ) method calls to include conditional logging
refactor loop variable names in TestSplitTransaction . java for clarity to improve code readability and maintainability
added null check for currentSelectionArea before enabling selection to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for JAAS demos in the DemoModulesTests class to ensure correct configuration and execution of the JAAS
added conditions to check if spanX and spanY are 1 in the canCreateFolder method to ensure proper placement of folders based on their span
refactor CacheOffHeap class for improved performance to enhance efficiency in caching operations
improve error message in createtable when table depend on another table
added validation for tile height and improved data string trimming in TiledLoader . java to ensure only valid XML gid values are processed and
added synchronized keyword to setWorkingSet method in InMemoryTileCache . java to ensure thread safety when setting the working set
added a new Java class ` Solution ` that reads integers and prints them based on their minimum and maximum steps to implement a solution for improved
[ ttorrent ] add address checker to check bad announce request
fix npe in multilaymodel when use translucent rendertype
added a method to remove tags from the toolTip in GuiConfigEntries . java to improve tagging functionality by removing specific tags from the
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` , ` Capability ` , and
added a null check for recipients before sending the email and changed time calculations from seconds to milliseconds to improve robustness by handling potential null values and ensure accurate time
refactor duplicate code in routinginboundhandler # issingle ( routematch )
improve dockerclientfactory . client ( ) to take a fail fast flag
added resourcesMode parameter to AndroidMetadata and updated related methods in RobolectricTestRunner and RobolectricTestRunner to enhance the
remove mandatory org . apache . commons . lang . time . dateutils dependency introduce in rev
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the new project structure
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command execution failures
refactor TreeMap class implementation to improve performance and readability of the code
added methods to enable asynchronous stack traces in the display class to improve performance and control over stack trace behavior
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to improve color management for UI
added style class settings for link and description elements in LinkedFilesEditor . java to ensure proper styling of text elements in the editor
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added tests for class name matching in ResultSetMetaDataTest to ensure
removed file deletion logic from Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to streamline code by eliminating unnecessary file deletion
added null check for the _ info object before accessing its status code to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to initialize the provider field
updated the condition for setting maxRAM in LauncherPreferenceJavaFragment to allow a maximum RAM of 2048 for 32 - bit devices to ensure
add miss stats to localmapstatsprovider when map have data
added logging functionality to FileProfileActivator for file existence and missing file checks to enhance traceability and debugging capabilities of the FileProfileActivator
corrected a typo in the parameter name from " noname1234 " to " invalid _ " in the addToBody method to improve cl
changed collection type from List to Set for the roles map in GuildImpl . java to improve readability and performance of the code
updated the maximum number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to
added multiple assertions to the dashboardUserMapperTest to ensure that the delete function returns the correct number of deleted records
rename ' giver ' to ' primary ' in instructorfeedbackresultsspagedata . java
sulong : fix miss deref check in getobject ( ) .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for testing purposes
add usage help to help for terasology command
updated action bar title handling in DrawerActivity . java and added notification functionality for old interactions to improve user experience by ensuring interactions are properly displayed
updated CommandLineParserTest . java to improve test coverage to enhance reliability of command line parsing functionality
added new touch controller constants and interpolators for animation transitions in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController classes to enhance
updated method to use ` javaNameFromExternal ` instead of ` toUnderscoreSeparated ` to improve clarity and consistency in naming conventions
added native methods for frame management and release functionality in CWrapper . java to enhance functionality and facilitate better resource management in the application
added constant value checks in mmm Checker . java and created a new ValueTest . java file with various static final elements to ensure correct handling
updated test cases in MontgomeryMultiplyTest , TestMulAdd , TestSquareToLen , and TestSquareToLen classes to
removed null check for constructors in PojoUtils . java to simplify code logic by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future development
updated error message formatting in UploadBuild . java to improve clarity of error messages for better debugging
update bounds calculations in DeviceProfile . java to include search bar offset to improve layout positioning for better user experience
fix nullpointerexception when disconnect ( ) be call from an idle timeout .
refactor activity launching logic to run on the UI thread to ensure UI updates are executed on the correct thread to improve performance and prevent potential
removed unused imports and refactored the ` getSourceGroupOptional ` method in ` AppleSource . java ` to improve code clarity and
increased the timeout duration for trigger firing in TestSimTriggerIntegration . java from 22 seconds to 32 seconds to allow more time for trigger
fix the size of all - null block return from floatstreamreader
add check for distfromstartsq in abstractnodecostsearch to avoid npe
added a condition to skip processing for specific UI component types in ResourceEditorView . java to ensure that only Form and Dialog components are processed in
replaced ` UiThreadHelper ` with ` LauncherModel ` for background thread handling in ` DragView ` and ` FloatingIconView
added a null check for the commitPoint variable in ReplicationHandler . java to ensure that the default commit point is used when it is not already
added unit tests for ` getImeiForSlot ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManager `
added debug request logging functionality to SimpleHostRoutingFilter to enhance debugging capabilities for HTTP requests
added the ` destory ( ) ` method to several classes and implemented resource cleanup in ` BitmapInvertedIndex ` to ensure proper resource management
[ rip - 10 ] add test case for statictopicit and normalmessagesendandRecvit
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 26905 bulk load should not crash if bulk load fails
added a ` commission ` field to the ` DefaultWithdrawFundsParams ` class and updated the constructor to include it to enhance the
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
consolidated multiple catch blocks into a single catch block for SolrServerException , IOException , and KeeperException to improve code readability and maintain
added error handling for abstract overloaded methods in Java to TypeScript translation to improve robustness of method invocation and provide clearer feedback
replaced direct call to sweepDisk ( ) with a try - with - resources statement using StacklessLogging to improve logging management and ensure proper
added serialization support to ` SqlDataType ` and refactored static ` Entities ` class to enhance data type management and improve code clarity
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
updated claim request handling in ConnectOAuth2RequestFactory to check for null values before parsing to improve robustness by avoiding potential NullPointerExceptions
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory and introduced a singleton instance to improve flexibility and maintainability
updated the ` processTypeHintForNestedDocuments ` method to handle null ` source ` correctly and added unit tests for handling null values in `
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and added a
fix npe in moddirtransformerdiscoverer by initialize static list
update error message in AbstractQuerydslProcessor for clarity to improve readability of error messages for better debugging
implement getcallstack ( ) for pegraphdecoder , and add tostring ( ) .
rename methods and variables from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and
camel - 6661 : fix the bug of mailmessage . getidentityhashcode ( ) in camel - mail
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - allow redel
updated the return statement to include setting the property name of the identifier to ensure proper handling of property names in the identifier processing
move wave generator to main activity to avoid crash
added null checks in KeyedProperties and SheetOverlaysManager classes , and improved error handling in SheetOverlaysManager to enhance robustness
added unit tests for logging and exec functionality in PodIT . java to ensure proper logging and execution of pod logs and executions
added a test method ` testNoWriter ` in ` TestReplicationHandler . java ` to verify behavior when no index is detected to ensure proper
make sure dispatchmethodkernelokra do n ' t call super . dispatchmethodkernelokra ( )
updated type casting and implemented Comparable interface in DefaultMxRecord to improve type safety and enhance sorting functionality
refactor thread creation to use a privileged action for better encapsulation to improve code readability and maintainability by encapsulating thread creation logic
added validation and selection of " Linux6 " in SelectBox and UITest classes to enhance user experience by ensuring the dropdown is selected for
[ hotfix ] use collector . printstacktrace instead of throw illegalstateexception in jobgloballistener
updated the createState method to include a parentSplit parameter and modified related logic in FlowBuilder and SplitState classes to enhance state management by allowing
changed the ` connectionState ` variable to be volatile in ` SSLSocketImpl . java ` to ensure thread safety when accessing the ` connectionState
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added integration tests for polling behavior in EnableIntegrationTests . java
refactor memory allocation methods to use ` nmalloc ` and ` MemoryUtil . wrap ` instead of ` ByteBuffer ` to improve memory management and
added exception handling for IOException and DocletAbortException in HtmlDoclet . java and AbstractDoclet . java to improve error management and provide
[ java ] unusedmodifier : fix false positive with enum
refactor code to use method references instead of lambda expressions for improved readability to enhance code readability and maintainability
updated @ Parameterized . Parameters annotation to include an SSL name parameter to improve test clarity by specifying the SSL context for parameterized tests
added exception handling for IllegalFormatException in TransformationHelper . java to improve error logging and provide clearer feedback on transformation failures
updated method name from userPermissions to activeConnectionPermissions in ActiveConnectionRESTService . java to improve clarity by using a more descriptive variable
refactor equality check in Point class to use Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by utilizing
updated the process method to handle potential null outputRoot gracefully to improve robustness by preventing potential NullPointerException when outputRoot is null
added a AnnotationFilter interface and modified methods in PDPage , PDFRenderer , and PageDrawer to utilize it to allow filtering of annotations based
refactor StackTraceCleaner class for improved error handling to enhance robustness and maintainability of exception management
added content type handling for CSS and JavaScript files in PluginServlet to ensure proper content type is set based on servlet path extensions
hhh - 15417 skip test that fail on oracle and sybase
updated the method name from ` upgrade ` to ` upgrade ` and modified version checks in ` ForkController . java ` to improve clarity and
added getStats ( ) methods to AbstractDataImportHandlerTest , Context , ContextImpl , and DocBuilder classes , and changed docCount and deleted
[ scb - 2249 ] add an option to enable long polling for kie client ( # 2249 )
refactor gesture handling in the launcher to use a scroll method instead of gesture margins and fling functions to improve responsiveness and maintainability
replaced the instantiation of ` UnlocksDialog ` with a new one and added a button to the ` PausedDialog ` to enhance user
added a call to clear the drop list in the PlayerEventListener to reset the event ' s drops state for improved functionality
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default parameter for the input name
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to improve error handling by using a more specific exception type
updated print statements in TsFileSketchTool . java to include the chunk type and adjusted the skip index in LocalTsFileInput . java to
exclude ' lib - swift . h ' from umbrella header in project generator
rename method from ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to
added a call to encode ( ) in RequestPlugin . java to ensure proper handling of HTTP request encoding
mondrian : fix for mondrian - 1211 , mondrian - 1212 , mondrian -
added null and empty password validation in LdapAuthenticationProviderImpl . java and created corresponding unit tests in TestLdapAuthenticationProviderImpl . java to ensure
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper resource management and prevent potential memory leaks
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings and improve code clarity
changed visibility of ClassGraphClassLoader from public to package - private and updated null check logic to enhance encapsulation and improve clarity in class loading
added error handling for schema errors in ErrorResponseException . java to improve error reporting for better error reporting
added a constructor to the EventSourcingRepository class with null checks for the eventStore parameter to ensure that a valid eventStore is provided
refactor symbol handling logic in binary node processing to improve code readability and maintainability
modify search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of search text to improve user experience by
refactor command handling in NuvoConnector and NuvoHandler to improve clarity and functionality to enhance readability and maintainability of the command
tiffimagereader : use chunky planar config instead of plane config
added a call to close the InputStream in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
refactored laser table to use a new average util class for energy change
added two new files , SigInt . java and SigIntBarrier . java , implementing signal handling in the agrona concurrent framework to
refactor graph handling in ExporterGEXF to support hierarchical graphs and improve edge count retrieval to enhance flexibility in graph processing based on
refactor TCTLSeparatedProtocol to use Java NIO ' s Text class instead of byte arrays for null buffer handling to improve
[ # 10773 ] fix index out of bound in rubric response ( # 10774 )
updated the condition in CatalogComparator to check for ORIGINAL _ CASE instead of DB2Database to ensure correct comparison of schema and catalog cases
refactored test methods in BrowserMobProxyTest to improve clarity and functionality to enhance test structure and ensure proper cleanup of the browser
updated criticalErrors string formatting to use Integer . toString ( ) for better readability to improve code clarity and avoid potential null pointer exceptions
removed a redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline the code by eliminating
[ hotfix ] [ doc ] fix javadoc warning in internalbytearray and trufflestring
[ hotfix ] [ graph ] fix the wrong type in outEdgesfunction
refactor Java6 and JUnit soft assertion classes for consistency to improve maintainability and readability of the codebase
deleted the file ` ClassA \ 314 . java ` and added a new file ` DiacriticTest . java ` to implement
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and add a new assertExecutionsDone method to improve concurrency handling and
added error handling and improved workspace reader assignment in DefaultMaven . java , and modified project collection logic in DefaultGraphBuilder . java to
updated SSL handling in ServiceRegistryConfig and improved IP port assertions in TestServiceRegistryConfig to enhance SSL configuration accuracy and ensure correct IP port
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
removed unnecessary whitespace in the Jdbc3Connection constructor to improve code readability and maintain consistency
added a ` ensureInstance ( ) ` method to the ` ServletHolder ` class to ensure the servlet instance is properly initialized and improved exception
added date formatting and expiration logic for delta server time in BinanceExchange and BinanceBaseService classes to improve accuracy of server and system time
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat container
modified the deregisterAnimated method to check for a null Form instance before calling deregisterAnimated to improve robustness by preventing potential NullPointerExceptions
modified the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and updated related method calls to enhance bitmap decoding functionality
[ java ] reduce number of message from 10 to configuration . number _ of _ messages .
added click and long - click functionality to the tweet holder in TimelineArrayAdapter to enhance user experience by allowing users to click on the tweet
added " text " data type to the unmodifiableDataTypes list and refactored conditional checks for OracleDatabase and PostgresDatabase to enhance data
remove @ ignore from entryprocessorbouncingnodest . testentryprocessorwhile2nodesarebouncing
updated method names and state messages in AmbariManagementControllerImpl . java and AmbariManagementControllerTest . java to reflect the correct
[ mielecloud ] fix npe in createbridgeservlet
refactor robots expiration logic to use a configurable validity duration instead of a hardcoded value to improve flexibility and maintainability of the code by
added null check for display name before checking for " Teredo " in multiple files to improve robustness by preventing potential null pointer exceptions
modified constructors in SpriteBatch to accept a default shader parameter and updated shader creation logic accordingly to enhance flexibility in shader management based on the
added synchronous _ commit property to properties in TestUtil . java to enable committing functionality for improved performance
added element coercion checks and improved sorted set handling in SortedSetTypeCoercer . java to enhance error handling for duplicate elements and
refactor message string assignment logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity of confirmation messages based on file type and
added a condition to check if the character is less than 256 in URLPathEncoder . java to ensure proper handling of special characters in safe array
use a fixed port instead of a hardcoded one .
removed the expect statement that returns an empty map in HostResourceProviderTest . java to ensure that the test returns an empty map instead of null
[ hotfix ] remove unused parameter from yarnentrypointutils . loadconfiguration ( )
remove dependency on java . beans . * from sipcommframe . java
removed the ShadowHtml class and updated HtmlTest to expect a string instead of a HTML string to simplify the codebase and eliminate unnecessary dependencies
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated logger logger names to include " org . eclipse . jetty . http3 " and " org . eclipse . jetty .
changed the visibility of the addListeners method from private to static in MockSettingsImpl . java and added validation tests in MockSettingsImplTest .
[ hotfix ] fix checkstyle violation in statehandlestore
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty
update constant and improve instructorcourseenrollpageaction and instructorcourseenrollresultpagedata to use constant instead of hardcoded value
use try - with - resources to avoid resource leak
camel - 16445 : fix the test error of camel - 1145
added libraryTarget parameter to several Java classes and refactored jar parameter retrieval methods to improve code clarity and maintainability by separating library
fix typo in trusteverythingtrustmanager ' s error message
api : remove override for listcapacity . getpagesizeval ( ) in listcapacity .
added handling for the CLOSED case in IteratingCallback . java to ensure proper processing of closed scenarios in the iteration process
added an ` isAuthorized ` boolean property to the ` AccessControlContext ` class and introduced a new method ` impliesCreateAccessControlContext ` in `
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending deployment events to ensure proper
added a conditional check for " tiff " codecV and container in DLNAMediaInfo . java to set the MIME type accordingly
refactor argument type and assumption handling in OptimizedCallTarget . java to improve clarity and maintainability of argument type management
added a new file ` CubocDesktop . java ` and modified ` Cubocy . java ` , ` Map . java `
updated PolicyMonitor initialization to use the target directory instead of the test resource directory to ensure compatibility with the project ' s directory structure
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trashbin list
updated the method call from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) . allConnectors ( ) `
refactor checkglobalvariablestoragenode to be a subclass of checkglobalnode .
modified the ` createLauncherEvent ` method to include an additional ` Intent ` parameter and updated the event dispatching logic to include the intent as
increase max burn amount forurningmanpresentationservice to 100k ( # 5461 )
replaced specific database imports with a wildcard import and updated the ` snapshotObject ` method to handle ` UniqueConstraintSnapshotGeneratorSnowflake `
updated the logic for constructing the SQL select statement in DMLTransformer . java to handle cases where the insertStatementBuilder is empty to improve cl
updated the PGT URL parameter from " http : / / www . github . com " to " https : / / www . github .
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and refactored function body handling to improve function name generation
updated JarLauncher . java for improved functionality to enhance performance and maintainability of the code
updated generic types in multiple classes for improved type safety to enhance code clarity and prevent unchecked cast warnings
do n ' t send hole punch packet if we ca n ' t send it .
added a test method for updating a PGobject in the ResultSetTest class to ensure proper handling of PGobject data during database updates
modify PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY for empty results and add a test for non - UAA origin in PasswordResetEndpoints
replaced the method of obtaining the second child node with a direct retrieval of the document element to improve code readability and maintainability by
refactor caching logic in Cache . java to improve performance and readability of cache operations
rename ` timeInSec ` and ` prevTimeInSec ` to ` timeMillis ` and ` prevTimeMillis ` to improve clarity and
fix the light relay not be able to bind to any block in the world .
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to use it to improve type safety and
refactor Model class to improve code structure to enhance maintainability and readability of the codebase
updated the recordedTime calculation to include a new value of 619315200000L to improve accuracy of recorded time tracking
added a condition to resize the status if the terminal type is Windows to ensure proper resizing of the terminal status on Windows
updated host version state management to check for NOT _ REQUIRED state before setting it to INSTALLED to ensure host version state is only set when it
move j2cl / j2cl - jsinterop - annotations and j2cl / jsinterop _ bundle _ deploy to j2cl
[ mng - 5792 ] maven - plugin now support setting of global / user location via mavensettingsbuilder
replaced try - catch block with a direct assignment for the operation variable to simplify code and improve readability by eliminating unnecessary try -
reformatted method calls in KnativeEnvironment . java for improved readability to enhance code clarity and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity by using a more
added connection setup methods in CloudSolrClient and a test for uploading configuration in TestCloudSolrClientConnections to ensure proper connection handling and validate
synchronize access to allbindings in breakpoint and debuggersession to avoid concurrentmodificationexception
refactor RobolectricTestRunner and ShadowContext to improve file management and cache handling to enhance code readability and maintainability by central
added LinkedHashSet and TreeMap to the list of styles in SecureXStream . java and updated related tests in XStreamPersisterTest . java to enhance
( chore ) camel - kie - api : add kmodulemodulemodel to kiehelper ( # 119 )
updated Farmland type checks in BlockEventListener . java to ensure proper handling of Farmland instances to improve robustness in determining
added a default implementation of the ` getLocalIp ` method returning ` null ` to provide a default implementation for better flexibility in retrieving the local
updated JdbcStepExecutionDao to serialize and deserialize the " OBJECT _ VAL " value using SerializationUtils and improved test cases in AbstractStepExecution
refactor code in AbstractDictionary , BiSegGraph , BigramDictionary , HHMMSegmenter , and WordDictionary classes for improved read
added " libs " to the resource list in Python . java and updated resource extensions in tensorflow . java to support additional libraries and improve resource loading
refactor PluginTab to improve handling of DownloadPlugins and introduce a refresh button to enhance user experience by allowing refreshing plugins
changed log level from info to warn for error messages in DefaultHistory . java to provide more informative logging for errors during file reloading and
vmware : fix npe in case vm be not attach to a vm
update sshd . stop ( ) to accept a boolean parameter to enable graceful termination of the server
updated the implementation of ExperimentalMockitoJUnitRunner to enhance testing capabilities and improve performance
updated serial ID handling in GpsSettingsActivity , Session , and HttpUrlLogger to use a new utility method to improve code maintainability and
updated the implementation of the SwapGBuffers class to improve performance and maintainability of the code
remove the skeleton control from the spatial if it ' s null and the skeleton control is not null to ensure that the skeleton control is properly removed
added functionality to set smart replies in ShadowRankingTest and updated ShadowRanking to use a reflector for setting notification channels and smart replies to
[ java ] only add segment file to the list if need .
updated the initialization of ` carrot2ResourcesDir ` to use ` initParams ` directly instead of ` resourceLoader . getConfigDir ( )
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new file ` bug8004298 .
update ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
updated error handling in RecommenderMapper and Retriever classes to throw exceptions instead of returning null to improve error messaging and provide clearer feedback when
added client information handling in SurrogateAuthenticationEventListenerTests to improve test reliability by integrating client - specific information during tests
added a boolean variable isUserView and set it to false in CardPresenter . java to enable user view management in the card presentation
updated method names from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` for consistency and clarity to improve code readability and
rename histogram variables for batch and syncLogTimePerRequest in LogDispatcherThreadMetrics . java to improve clarity and maintain consistency in naming con
added a new module - info . java file for the SQLite connector to define module exports and dependencies for the SQLite connector
added a delay of 500 milliseconds in StreamResetTest . java to improve resource management during tests
removed conditional check for " new " or " api " in PermissionsManager initialization to simplify the code by eliminating unnecessary condition
updated DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added a method to get the depth of the SpringLoadedState class to provide a default value of 0.5 f for better visual representation of
refactor data handling in BinaryDecoder to use Arrays . copyOfRange instead of manual array copying to improve code readability and maintainability by util
[ hotfix ] fix checkstyle violation in executiongraph
removed unused swipe layout imports and modified notification handling in NotificationActivity and NotificationRenderer to streamline notification management and improve user experience
added null check for invocation in DefaultExceptionConverter . java and updated test cases in ExceptionsTest . java and EndpointTest . java to enhance error
fix checkstyle issue in inventory / glowcontainer . java ( # 703 )
replaced MethodHandle instantiation with reflection method retrieval for setting a field to improve compatibility with Java ' s reflection framework
changed type casting from ` int ` to ` Integer ` for multiple queries in ` MathTest . java ` to ensure proper handling of integer values
updated the return statement in BaseEmailContentFormatter to remove the join operation for " metrics " and " datasets " to simplify the email subject formatting
added functionality to manage the visibility and addition of a simple panel in the layout management to improve the user interface by ensuring that the layout is properly
updated condition in ServerCallable . java to include a null check for location to enhance robustness by preventing potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for null DSA key parameters and replaced the usage of a usable key with a direct return statement to ensure proper validation of key
refactor MediaTypeRequestMatcher to use a helper method for checking ignored media types to improve code readability and maintainability by encapsulating media type
updated task attempt number handling in LlapBaseInputFormat . java to improve clarity and accuracy in logging messages
added properties to the SpringBootTest annotation to allow bean definition overriding to enhance flexibility in bean definition overriding behavior
added null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
updated package structure for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , and BTCMarketsManualExample classes to improve
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure proper rendering of code blocks
added a new file ` CompatibilityTest . java ` to test internal DTD properties to ensure that the properties are correctly validated and validated
added new files for VariantComponentsModule , PushUtils , and SecurityUtils to provide utility functions for push registration and key management in the application
refactor replica counting logic in TableRebalancer to use a loop for improved clarity to enhance readability and maintainability of the re
bump version to 2.7 . 0 and prepare release note
log4j2 - 1343 fixed line separator in regex replacement test
improve error handle for eagain , timeout , and timeout on ajp
added default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in naming
added a shell command " am wait - for - broadcast - idle " in LauncherInstrumentation . java to wait for broadcast idle to ensure
added unit tests for font tag and link tag attributes in ResourcesTest . java and modified the return statement in ResStringPool . java to ensure
fix guistatscomponent file path issue
added permission handling for CALL _ PHONE in Launcher . java and introduced ATLEAST _ MARSHMALLOW flag in Utilities .
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , Startup , and SimulationPanel classes to reflect changes in
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoPointInBBoxQuery , GeoPointIn
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a way to determine if the Docker
added a new constant VPX with a value of " vpx " to the CodecTypes class to provide a standardized representation of the
added a coordinator address option to DistBuildFactory and modified its usage in DistBuildRunCommand to allow users to specify the coordinator address for remote
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve file path matching
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to avoid adding unnecessary label values when the value is zero
make sure ` ` possibly generically true ' ' and ` ` undefined ' ' do not show a ' true '
added a test annotation to the TestPerfBenchMarkDriver class to improve test coverage for performance benchmarking
added materialization time setting in ObjectStore and created a test for it in TestObjectStore to ensure the creation metadata reflects the materialization
added handling for ` UnsatisfiedLinkError ` in ` getModel ( ) ` and ` loadModel ( ) ` methods to improve error handling
remove the ' is one way ' property from JMSSamplerGui and improve message formatting in JMSSampler to enhance clarity of
updated break weight logic in GlyphView . java to use equality checks to improve clarity and accuracy of break weight determination
refactor sync handling in RCFile . java to improve efficiency and readability to enhance performance by reducing unnecessary synchronization checks
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 13
replaced direct usage of getSortedByCounts ( ) with a LinkedList for storing step and processor entries to improve data representation by concatenating entries with
removed unused parameters from ` setToSortedDataFlavorArray ` and added a new test class ` DataFlavorComparatorTest ` to streamline
hbase - 13663 add - infoport flag to testthriftservercmdline ( # 2365 )
added a check for EOF in the RegExpScanner class to prevent processing when atEOF is encountered
refactor metrics and timers handling in Debug . java to use sets for enabled metrics and timers to improve performance and maintainability of the code by
check that nickname be not null before compare with message .
do n ' t show an error message if a file be miss or be inaccessible
refactor refresh token creation logic into a separate method for clarity to improve code readability and maintainability by encapsulating refresh token creation logic
simplified error message formatting in BuckConfig . java to improve readability and maintainability of error reporting
[ hotfix ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` that returns null in ` ShadowNativeImageReaderSurfaceImage . java ` to
set SSL URI to " https : / / data . btcchina . com " in BTCChinaExchange . java to ensure proper
pmd - ant task : use file . separator instead of file . separator if file be not absolute
added two new files , OauthController . java and Oauth2PluginTest . java , to implement OAuth2 integration tests for the OAuth2 plugin
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future development
added flatMap and flatCollection methods to AbstractStreamEx and removed them from EntryStream and StreamEx to streamline code structure and improve readability
updated error logging message in RestCodec . java and added exception handling in ExceptionToProducerResponseConverters . java to improve clarity of error messages
updated the ` shouldComeFromThisClassLoader ` logic to allow for Android projects with mixed scala to be run with Maven Surefire
do n ' t add sdp to transmittable audio if it ' s not already set
updated CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction to improve type handling for database functions in the CreateTableGenerator
added methods to check the number of GML features in the NormalizedMultiValuesTest class to ensure compatibility with the latest GML features in
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` ,
added configuration checks before expanding regex mapping in ColumnarDataSource and updated return statements in RowProcessor to ensure regex mapping is only expanded when configured
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduced a new method ` getPositionsArray
added XLCDCommunicator and XLCDController classes and updated FirmwareUtils to use a switch statement for firmware checks to improve
( chore ) camel - kie - maven - plugin : migrate xsd schema to kie - api
updated retry logic in EventQuery classes to check if the message is empty before proceeding to improve robustness by ensuring retry times is greater than
replaced ` awaitThreadState ` and ` awaitThreadStates ` methods with ` join ` for thread joining in ` WorkerProcessPoolTest
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased resource constants for energy freezing and unfreezing in EnergyCost . java from 20000 to 10000 to
updated the ` command ` method to throw a ` ConfigurationException ` and modified the method signature to include ` throws ConfigurationException ` to improve error handling and
deleted the ` SpringTransactionHooks ` class and replaced its usage with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest ` to
refactor AbstractClassAssert to improve code readability to enhance maintainability and facilitate future development
added a new file ` GetUninitializedStringValue . java ` with a test class for verifying uninitialized string values to ensure that uninitialized
added support for provided dependencies query in AndroidLibraryDescription and updated related tests to improve dependency resolution and enhance test coverage for graph enhancement queries
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to enable synchronization of the keyboard open and close animations during
replaced the retrieval of system anomaly message with a conditional check to store the saved bugreport state to improve performance by avoiding unnecessary logging
added a constant for Cinepack format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to support Cine
added camera bobbing control and adjusted hand movement animation offsets in Player . java to improve user experience by controlling camera bobbing behavior
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in the GrpcCasBlobUploader class to ensure
deleted the HSQLDBServerFilesFilter class and replaced its usage with a direct reference to the FilenameFilter in TestUtility . java to simplify
added null checks for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey are
updated API version from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added logging for missing
added a method to handle method invocation based on type existence in the HasTypes class to improve method invocation handling by avoiding unnecessary type checks
replaced hardcoded array size from 6 * 3 to a constant NUM _ VALUES in AmbientCubemap . java to improve code
do n ' t show warning about reset mode if mode be not configure properly .
added handling for zero values in GenericUDFMask classes to return correct numeric values for zero or negative inputs
fix unit test to use temporary folder
add isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack class
fix mc - 167447 by set line width to 1.0 ( # 228587 )
simonstewart : set browser . startup . page to 0 in firefoxdriver and firefoxdrivertest
added a condition to check for HTTP method and response status codes in Http1xClientConnection . java to ensure proper handling of connection upgrades and
updated task accept method from " compile " to " process - classes " to provide a more descriptive name for processing classes
replaced ` shutdown ( ) ` with ` closeIdleConnections ( 1L , TimeUnit . MICROSECONDS ) ` for HTTP connection management
added a conditional check before processing aggregate function identifiers in AmbariMetaInfo . java to ensure that aggregate functions are only processed if they have
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to utilize this new method to improve fullscreen handling
added a new Java file for counting frequencies from user input to facilitate the counting of frequencies from user input
[ java ] set socketchannel to null in clusteredagentmanagerimpl . close ( ) .
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign operations
added exception handling for NoSuchElementException in readToStartFragment ( ) and readToEndFragment ( ) in StaxEventItemReader . java to improve
simplified import statements and added null checks in TestAttributeSet . java and TestAttributeSetTest . java to enhance code clarity and
updated import statements to use net . minidev . json instead of com . nimbusds . jose . shaded . json
updated conditional check from " Linux " to " AIX " for family assignment and added support for " Linux - s390x - 64
server : fix access detail for private ip when vr be start
added a new method ` invokeWithoutBlockingWithResultSync ` to facilitate asynchronous execution of a runnable with result synchronization
remove xmpp presencemessagecomboboxtests . java since it be no longer use .
updated calculations for right , bottom , left , and primarySnapshotWidth and primarySnapshotHeight in PortraitPagedViewHandler . java to
kmeans : fix checkstyle violation in testclusterdumper
updated size calculation in KeyValue . java to accommodate rowCache array size to ensure accurate size calculation for rowCache data integrity
camel - 14850 : camel - core - optimize to let type converter be eager create .
added support for handling ConditionalTask in SparkCrossProductCheck to enhance task processing capabilities for conditional tasks
added handling for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions in Launcher
updated the condition in ` LoginInfoEndpoint . java ` and added new test cases in ` LoginInfoEndpointTests . java ` to ensure correct
hbase - 26969 add tostring ( ) method to make it easy to debug
renamed the ` message ` field to ` msg ` and introduced a new ` result ` field in the ` HuobiAccountInfo `
added " PERIOD " to the reserved words in MariaDBDatabase and implemented a test for adding a period column in AddColumnGeneratorTest
[ beam - 10552 ] add documentation for portable worker config option
added documentation for Android 7.1 - related changes in VersionChangeLogs . java to clarify specific issues related to dictionary loading and bug
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and added a static import
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] do not use aeron client invoker when use aeron client .
updated validation logic in Attr . java and added a new class NoWarnOnImplicitParams . java with generic type handling to improve type validation and
refactor menu item visibility and visibility logic into separate methods in FileMenuFilter to improve code readability and reduce redundancy in menu item visibility
updated transaction history result types from deposit and withdrawal to BTC _ deposit and credit in BTCETransHistoryResult .
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and reduce memory usage
added a @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should not be used
updated condition in LastQueryExecutor and added a new test for last with unseq time larger than sequence time in IoTDBLastIT to ensure
updated the newline character in the reqStr append statement to ensure proper formatting of the response string
added a static block to set a system property to " ERROR " in BuildImageMojo . java to set a default log level for HTTP
added a safe area to the title bar in the Sheet class to ensure the title bar has a valid area before proceeding
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of TimeSeriesChunkMetaData objects from the
added SQL syntax to alter table and column renaming in AlterTest . java to ensure correct SQL parsing and deparsing for table and column renaming
changed the access modifier of the copyState method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executeasync ( ) method should return a completablefuture instead of the original promise . # 3323
move file name suffix to constant , and use it in filelister
refactor multiple Java files related to the Orc framework to improve code organization and maintainability
refactor null check for valueArg in CompareFunctionsProcessor . java to improve code readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
modified the ` toString ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to include
added state validation checks in AbsSwipeUpHandler and unregistration of TaskStackListener in TaskAnimationManager to ensure proper handling of gesture state
added methods to get and set lock timestamp in AppPreferences and updated PreferenceManager to use instance methods instead of static methods to improve flexibility and
refactor artist retrieval logic in MediaInfoParser to use a separate method to improve code readability and avoid potential null pointer exceptions
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when accessing remoteMessage
fix npe in splittext when there be no header or flowfile
added support for Windows key store type in HttpsConnectorFactory to ensure proper handling of key stores for improved security
increased the default check timeout value from 400 to 1 , 000 in RestTemplateSenderTest . java and WebClientSenderTests . java
added a condition to check for ` ResultCode . FILE _ NOT _ FOUND ` in ` FileSyncAdapter . java ` to ensure that
added animate properties and methods to manage visual values in the Slider class to enhance animation control and improve visual value management
updated variable names from ' eol ' to ' lineSeparator ' in LineSeparatorProcessorTest . java to improve code readability and maintain consistency in naming
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize texture packing size for better performance
added a new test case for negation of parentheses in UnnecessaryParenthesesTest . java and updated the condition in UnwrapParentheses
fix issue with camel - hazelcast when poll timeout be set to 0 .
added a new test class ` TextFeedbackTest ` and refactored the ` TestRunner ` methods in ` TestRunner ` to improve test
replace Math . round with Float . compare in DefaultSolrHighlighter . java to improve comparison accuracy for score comparisons
updated case statements in AddAndScaleMultiImage . java and refactored resource saving in ResourceEditorApp . java to use try - with
[ hotspot ] fix miss array class offset for copy snippet snippet .
[ scb - 1544 ] default metric printer should not print 0 operation
added support for remote SCM reinitialization in configuration classes to enhance flexibility in managing remote SCM configurations
added conditions to check for additional state in the MieleApplianceHandler to ensure proper handling of state transitions in the application
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging in ` StatsLogCompatManager ` to enhance
updated logger variable name from ' log ' to ' LOG ' for consistency to improve code readability and maintainability
added unit tests for ProjectGenerationEvent ' s Finished and Started events in EventSerializationTest . java to ensure proper serialization and deserialization of ProjectGeneration
ggb - 1551 show point in selection menu only if point be select
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ test ] reduce the amount of time left for random read in integrationtesttimeboundedrequestswithregionreplicas
renamed multiple Java classes related to heap management and testing to improve clarity and consistency in naming conventions
added additional compiler flags to the list of ldflags in NdkCxxPlatform . java to support additional garbage collection and nocopy
updated the URI construction in SpringCloudCircuitBreakerFilterFactory to expand the fallback URI before building it to ensure that the fallback URI is correctly formatted
danielwagnerhall : move test to their own module so they can be use by other test
fix bug # 52727 - allow access to share string table in xssf
added a new method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to retrieve
added a check for available text width before layouting in SwingUtilities2 . java and modified the Look and Feel setting in Test663
refactored FlatteningIterator to simplify iterator push logic and introduced a new test class for iterator testing to improve code readability and enhance test
replace HTML tags with spaces in the title and body in the notification data to ensure proper formatting of HTML tags in tweet links
doc : generate sample code in the java microgenerator ( # 4 )
[ # 7013 ] instructorfeedbackeditQuestionsuitest : add reload and delete any exist question ( # 7014 )
updated return values and conditions in HSSFSheet . java and added new assertions in BaseTestSheet . java to improve row number validation and
added permission checks for malicious intents in the InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from
[ java ] reset the activity time of the last activity on the slow tick rather than the slow tick .
updated hashCode implementation to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to improve consistency and clarity in object comparison
added a check for remotely closed connections in HTTP3StreamConnection to ensure proper flushing and release of the Quic session when the connection is
added AutoCloseable interface to SplitReader and removed the close method from the interface to ensure proper resource management and prevent potential memory leaks
removed duplicate ` deepCopy ` method from ` GsonBuilder ` to streamline the code by eliminating unnecessary copy operations
return not _ found instead of null in llvmescanner . parse ( ) .
refactor file handling in RestClientRequestImpl to streamline asynchronous file operations to improve code readability and reduce redundancy in asynchronous file operations
updated the dispatchStatusString method call in GrblController . java to ensure consistent handling of controller status updates
updated MockFactory to use a new SearchingClassLoader for combining class loaders and added a new SearchingClassLoader class to enhance class loading flexibility
add test to show that ' refresh flag ' work with ' in between ' node .
added a condition to check for LEFT _ SEMI _ JOIN in the ConstantPropagateProcFactory to ensure proper handling of LEFT _ SEMI
modified response completion checks in HttpReceiver and HttpSender to simplify response termination logic to improve code clarity and maintainability by eliminating unnecessary
updated array length offset references to use ` arrayOopDescLengthOffset ( ) ` instead of ` arrayLengthOffset ( ) ` across multiple
http : / / issues . apache . org / jira / browse / amq - 4238 - add the default policy to the
updated multiple Java files related to Kerberos and SSL handling to improve consistency and maintainability of the codebase
added a check to ensure the appCtx is running before stopping it to prevent potential NullPointerExceptions when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout instance instead of void
refactored metrics handling in SpringmvcClient and improved error handling in CodeFirstSpringmvc to streamline metrics retrieval and
updated variable name from ` accountAgeWitness1 ` to ` accountAgeWitness ` and removed unused constant ` SAFE _ ACCOUNT _ A
reformatted code for consistency and improved readability in StructureHeader and StructureReader classes to enhance code readability and maintainability while ensuring consistent
added ResourceUrlProviderExposingInterceptor support in CasWebflowContextConfiguration and its tests to enhance webflow interceptor management for improved resource URL
add dexreturninliner to dexbody to transform return statement .
modify enrichedruledto to use getproperties ( ) instead of getconfiguration ( ) .
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated assertions in AliasCheckerSymlinkTest . java to
[ flink - 20536 ] [ table - planner - blink ] [ table - planner - blink ] remove the sql dialect
updated ` AndroidBinaryGraphEnhancer ` , ` AndroidPackageableCollection ` , ` AndroidPackageableCollector ` , and ` AndroidPackage
add test for invalid package name in package declaration
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum cross compaction unseq file level for impro
[ hotfix ] move activeresourcemanager and activeresourcemanagerimpl to the ' active ' package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ` ZipResource ` to use ` CLASSPATH _ SCHEME ` instead of ` CLASSPATH _ SCHEME _ PREFIX ` and improved
refactor ExpandableUploadListAdapter for improved readability and maintainability to enhance code clarity and ensure proper handling of image uploads and
refactor RobolectricTestRunner to merge parent classes and method configurations to enhance clarity and maintainability of the configuration merging process
added filtering for block and item registry in ModelLoader to ensure that only valid blocks and items are processed to avoid potential errors
refactored methods in ` AbstractDataChangedListener ` and modified ` WebsocketCollector ` and ` WebsocketDataChangedListener ` to extend
updated JSONPojoConvertor to handle enums correctly and added color management in JSONPojoConvertorTest to enhance functionality for color conversion and
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option is
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated its handling in ` GWTRequestWrapper `
added orientation correction support and modified mouse event handling in GyroControl . java to improve accuracy of mouse movement based on device orientation changes
remove hardcoded biome list size from biomedictionary
replaced instances of ` println ` with ` print ` in eval statements and made interfaces and interfaces public to improve code clarity and ensure consistency
updated the declaration of the ` env ` variable in ` FileCompilerConfig . java ` to ensure proper usage of the ` jdtCompiler `
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to convert
added a preload parameter to the MMapDirectoryFactory class to control the preloading behavior of the map directory
added custom metrics for worlds , economy , plot expiry , and MySQL storage settings in BukkitPlatform . java to enable
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future development
added aspect ratio and default card image drawable in CardPresenter . java to enhance visual presentation of the port folder
[ ds - 3752 ] fix login method count in xmlui
updated cloning logic for long , double , decimal , byte , and byte lengths in VectorHashKeyWrapper . java to handle empty arrays gracefully to
added tests for ` System . nanoTime ( ) ` in ` TimeChangeTest . java ` to ensure correctness of system . nanoTime ( )
added trimming of the input line in MultiPartFilter and printed the request parameter in MultipartFilterTest to improve handling of null or empty input
add livingexperiencedropevent instead of entitylivingbase . getexpperiencedrop ( ) .
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer feedback on configuration errors to improve user experience by providing clear
remove unsupportedoperatorvisitor and use planner . validate ( ) directly
added support for RdepsFunction in GraphEnhancementQueryEnvironment and associated tests to enhance dependency resolution for query targets and improve test coverage for
refactor character handling methods in Character . java to improve code readability and maintainability
added logic to scale entire rockets based on selection type to ensure only specific rocket components are selected in the scale dialog
replaced ` Arrays . toString ( ) ` with ` bytes ` in assertions in ` UpdateableResultTest . java ` to simplify code and
added time boundary retrieval for hybrid tables and refactored related methods in BaseBrokerRequestHandler to improve handling of time boundary information for hybrid tables and
simplify the addition of socketRef to the poller in the AjpAprProcessor and Http11AprProcessor classes to improve code
update eightmuses ripper to support both comix / picture and eightmuses . com
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standardize
added a condition to check if the profile is a phone and is not landscape in QuickstepLauncher . java to ensure proper handling of phone
replace usage of ` getValue ( query , PROPERTY ) ` with ` unwrap ( query . class ) ` in ` PartTreeJpaQueryIntegration
replaced direct file reading with a new method ` readMatchingLines ` to enhance security by ensuring privileged access to the file read operations
added dynamic method invocation for retrieving the result stream in JpaQueryExecution to enhance functionality by allowing dynamic execution of the result stream method
updated null check for entity in PhysicsProcess . java to improve robustness by preventing potential NullPointerException
added a test for entry processor with predicate to clear the map when value attributes are indexed to ensure that the entry processor correctly clears the map when
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color calculations in Utils . java and modified htmlMessage in UtilsTest . java to use " Green " color instead of " 99TEST "
disable text input when there be no value
updated the scratch path format and added recursive deletion for the link tree in Aapt2Link . java to improve clarity and maintainability of
replaced ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
ggb - 1883 clear selection on mouse up , not on mouse up
( chore ) camel - aws2 - ysld : do n ' t swallow exception when parse cql expression
added ` isCanceled ( ) ` method implementations across multiple classes to standardize the implementation of the ` isCanceled ( ) ` method across different
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code readability and maintainability by centralizing annotation
replaced the existing ` removeAllWidgets ( ) ` method with a default implementation that throws an exception to indicate that the method is not yet implemented
[ hotfix ] [ yarn ] fix flaky test in yarnsessionfifoitcase
opensslcipher : do n ' t update output size if input be too small
added support for video transcoding based on Fire TV stick status in PlaybackController to ensure proper handling of high - resolution media transcoding
[ beam - 1640 ] fix data source translation to use mock data source
replaced specific imports with a wildcard import and modified listener management logic in GpsLoggingService . java to simplify import statements and enhance listener management
updated the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for full widths and added J
added handling for ` BaseItemDragListener ` in ` FolderIcon . java ` to improve drag - and - drop functionality to enhance user experience
added a new method ` createEmptyArtifact ` to various ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , `
removed unnecessary whitespace from comments in RabbitMQPublisherImpl . java to improve code readability and maintain consistency
removed a condition that checks if the video link contains " . m3u8 " in addition to " . m3u8 " to
camel - sftp : use fileutil . compactpath ( ) to compact the path for sftp operation .
updated the assertion method in BaseWeatherConsumerTest from ` assertIsSatisfied ( ) ` to ` assertMockEndpointsSatisfied ( )
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintain consistency in variable naming
blockdoubleplant and blocktype now check for large fern , not just fern
changed tree focus behavior from non - focusable to request - focused in TranscodingTab . java to improve user experience by ensuring the tree
added exception handling to rethrow exceptions in VirtualMachineManagerImpl . java to improve error management by ensuring that exceptions are properly propagated
updated DB2TestSystem to acceptLicense method and modified DockerDatabaseWrapper to check for DB2TestSystem instance to enhance license acceptance logic and
changed the visibility of the units variable from final to non - final and added a setter method for it in DoubleModel . java , and updated
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and ZMW
added logic to set the number of samples in fpp if it is greater than zero to ensure proper handling of the number of samples in the
removed " job . " prefix from assertTasklet calls in StepWithSimpleTaskJobParserTests to simplify test assertions for improved readability
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability of credentials and services
simplified the string representation of the ` ggbabs ` function in ` ExpressionNode . java ` to improve code readability and maintain
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to ensure proper handling of service output
[ drools - 5352 ] fix type conversion of bigdecimal to objectcreationexpr ( # 5353 )
added " org . eclipse . jdt . " to the import statements in WebAppContext . java to hide the use of JDT in
modified the return value of the useAuthCache method to always return false to simplify the authentication logic by always returning false
replace the namespace assignment with a capitalized version of the first segment to ensure the namespace is consistent and avoid potential issues with capitalization
camel - 16400 : camel - direct - add backwards compatibility for consumer not available exception
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is null
updated progressBar step message formatting in Loader . java to improve code readability and maintain consistency in logging
added a helper method to execute vibration and cancel actions on the UI thread to improve UI responsiveness by ensuring vibration is executed on
added a method to update the last remote stream ID in HTTP2Session . java to ensure proper tracking of the last stream ID for improved
enable text antialiasing for the editor header and toolbar
[ java ] remove unused variable and improve javadoc .
refactor : remove static import of enums in ctannotationimpl . java ( # 1193 )
updated ExoPlayer . java file to improve video playback functionality
updated RGB pixel retrieval method in WRobotPeer . java to use a new rectangle for improved rendering accuracy
added a new method ` newPrintStream ` to handle encoding for output streams to improve compatibility with different output encoding settings
change vibrate from 1 to 25 in TouchableMovementMethod . java to increase the vibration duration for better responsiveness
fix checkstyle issue in ` ` findbugs . com ' ' and ` ` findbugs . com ' '
simplified the constructor of WebSocketClient by removing unnecessary parameters to enhance code readability and maintainability
simonstewart : move the i18n test to the right place
[ gr - 16938 ] add linkatbuildtime support for load constant in bytecodeparser .
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper cleanup of the authentication system during tests
added a lowercase comparator to sort feature in a case - insensitive manner to improve the accuracy of feature collection in the code
refactored parsing logic and error handling in JavadocTool . java and added test files in T7091528 . java to improve code
danielwagnerhall : fix elementattributetest and elementattributetest for multi - select . fix issue
added a validation check for the length of keys in HighestKvno . java to ensure that the count of keys does not exceed 9
added error handling for attribute retrieval in HDF5BatchReader to ensure only Huge objects BTrees with 1 record are supported and log a warning
use writeresult instead of pdone in bigqueryio . expand ( ) and bigqueryio . expand ( )
updated XML root element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " in CreateTemplateRequestEntity . java and added
added a new file TestMultiANewArray . java to implement dynamic class creation and testing for multi - dimensional arrays to facilitate
added configuration option " secondary . storage . vm " to manage secondary storage based on the presence of a VM per zone to ensure proper management of
refactor synchronization logic in SyncBlockChainMsgHandler to use local variables for block IDs to improve code readability and maintainability by reducing
added theme setting for PreviewViewer in PreviewTabView to ensure the correct theme is used for the preview tab
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a new test for HTTP idle timeout in ConnectorTimeoutTest . java and updated the setIdleTimeout method in ServerConnectorTimeoutTest . java
add dcoref . dictlist , dcoref . dictpmi , dcoref . signatures and dcoref . dictionarylist
replaced the method ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a
updated JpaPagingItemReader and JobLaunchingGatewayParserTests to remove unnecessary type casting and improved error message formatting to enhance code
changed log level from warn to debug for child node detection to reduce log verbosity for better debugging
refactor ColorExtractionService to utilize a new method for extracting hotseat palettes and improve bitmap extraction logic to enhance code maintain
added methods to set default data table entry and cell transformations in TypeRegistry to enhance flexibility in handling table type transformations
added an assertion to check if newAvailableShared is less than or equal to initShared in AtomicRemainder . java to ensure proper initialization of
doc ( regen ) : regenerate with update license year
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` , and updated the ` isProjectGenerated ` method to always
simplified the conditional check for USER _ PROPERTY and AUTH _ HEADER in DriverUtils . java to improve code readability and maintainability
added contact form routes and a new Contact class to handle contact form requests to enhance contact form functionality and improve code organization
guacamole - 642 : use objectpermissionset instead of permission for simpleuser . getpermissions ( )
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new version of the application
[ drools - 586 ] fix typo in traitsfactory . setmode
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to cl
replaced manual closing of PerDocConsumers with IOUtils . closeSafely to improve resource management and avoid potential memory leaks
[ hotfix ] fix checkstyle violation in ruleserviceimpl
added an OnClickListener to the overflowButton to display the menu on the overflow button to enhance user interaction by allowing the menu to be shown
updated failure messages to specify " is a null reference " and " is a non - null reference " to clarify that the subject is
ggb - 1353 fix problem with help button on tablet
move protobufferutilstest to core / util package
fix setting of divider position in multi - pane
fix aux file chooser for cross reference
make geoserverfeaturestore . getmetadata ( ) backwards compatible with geoserver 2.0
renamed the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of
fix a problem in the contact list when a contact be remove from the ui .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test for cleaning up the audit log table after parameters by position in AuditLogTest . java to ensure that the audit log table is
added a suppression warning and changed the return type of the inject method to Object to enhance type safety and suppress unchecked warnings
added regex patterns for parsing comment lines and improved error handling in ACLFileParser to enhance robustness of comment parsing and enhance robustness in
updated import statements and modified the ` isReadable ` method in ` MapRDBFormatMatcher . java ` to include ` FileSystemPlugin ` and `
added a new ` ancestorDimensionValues ` map and modified the handling of dimension names in ` StarTreeImpl ` and ` StarTreeNode
added user unlock state checks before dumping plugin manager state and refactored closeOpenViews method calls to improve code clarity and ensure proper
updated condition from ` widthStr ` to ` positionStr ` to check for a non - null ` positionStr ` instead of ` widthStr
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance readability and maintainability of the validation process
[ hotfix ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu .
cloudstack - 2635 : restart service should allow the service to restart its own network ( s )
updated ` RuntimeTypeAdapterFactoryFunctionalTest ` to use ` get ( ) ` instead of ` remove ( ) ` for retrieving JSON element
make storeundoinfoforproperties configurable
replaced direct access to system property access with a privileged access block to retrieve the XR gradcache property to enhance security by ensuring that
replace assertEquals with awaitility in StreamCloseTest . java to improve test reliability by waiting for streams to be available before assertion
modified the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessor ` , ` DocFieldProcessorPerField ` ,
added support for handling deprecated warnings in ConfigurationMetadataGenerator and introduced NestedConfigurationProperty annotation in AbstractJpaProperties to improve compatibility with deprecated warnings and
refactor capacity and mask assignments in BiInt2ObjectMap and Int2ObjectHashMap to use final variables instead of mutable variables to improve code
updated the number of threads from 25 to 15 in HiveConf . java and refactored file renaming logic in Hive . java to improve thread
do n ' t ignore exception in disconnect ( ) , close ( ) and selectnow ( )
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when context is null
[ gr - 16938 ] fix classloading issue in native - image build server .
changed the return type of ` modifyGrantedAuthorities ` from void to List and updated related method calls in ` SwitchUserAuthorityChanger `
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created two new integration test classes , ` RawJax
add support for setquerytimeout ( statement ) and is _ jdbc41compliant ( statement ) .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for XSLT substring functionality
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence next value function in MariaDBDatabase and enhanced sequence support check in CreateSequenceGenerator to ensure compatibility with MariaDB
updated string concatenation syntax in MappedResizeableBuffer . java , UnsafeBuffer . java , CompilerUtil . java , and Int2ObjectCacheTest
added TableDataManagerProvider and ServerMetrics to multiple test classes to enhance metrics tracking for various queries in the application
added support for " jsse . enableMFLNExtension " property in SSLExtension . java to enable support for additional SSL extensions in the
changed the iterator type from ObjectIterator < T > to ObjectHashSetIterator and removed the constructor from ObjectIterator to simplify the iterator implementation and enhance
updated character remaining count in Compose . java and TweetFragment . java from 22 to 23 to adjust the character count for shortened URLs
add ttl to data point write buffer for cassandra datastore
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and updated related log messages to enhance prompt
added a new method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve a terrain from a specified cell
added default value printing and expression printing in Pretty . java , and created a new class T6665791 . java with Java compiler functionality
added error handling for missing quest encryption keys in ResourceLoader to improve error logging for missing quest encryption keys
added a condition to check if push is not enabled before verifying the transport ' s push support status to ensure that only supported push connections are
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
updated the sign method in BlockUtil to use the private key from local witnesses instead of the private key from the arguments to enhance security by
modified return statements in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve robust
updated method names and logic in ` ColumnText ` , ` PdfPRow ` , and ` PdfPTable ` classes to improve clarity
refactor ListFragment to use a SparseArray for managing undo notes instead of separate remove and insert operations to improve code organization and maintainability by
update feedback question id for feedback response , comment , and response comment .
added a null check for data and threw an exception for non - null values in bug8024061 . java to ensure that an exception is
no effective change - remove unused pstmtdelegate
refactor padding retrieval from a custom Padding class to use Rect instead of a custom Padding class to improve widget padding management and simplify padding
refactor MethodHandle initialization and add a new constant for consStringFilter in NashornBeansLinker . java to improve code readability
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename ` CountDownLatch ` from ` latch ` to ` goAwayLatch ` and adjust related countdown assertions to improve clarity and
updated assertions in IterableSubjectTest to use hasMessageThat ( ) instead of getMessage ( ) to improve clarity and accuracy of failure message verification
replaced ThreadLocal with a direct assignment of the currentBook variable to simplify code and improve readability by eliminating unnecessary thread - local
added support checks for method invocation and object type in ContactSecurityVoter to ensure that only valid object types are accepted in the vote method
removed unused imports for GachaHandler and Tools in DataLoader . java to improve code clarity and reduce unnecessary dependencies
added rowAffected parameter to postUpdateLog methods across multiple command step classes to provide more informative log messages based on the number of affected rows
ggb - 1340 fix margin for scaler in web
set foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration to set default fps settings to 60 seconds
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
replaced DefaultWebSocketFrame with ChannelFutureListener for WebSocket frame closure to improve WebSocket frame handling and ensure proper listener registration
updated event listener classes and added new test cases in StateMachineErrorTests . java and DocsConfigurationSampleTests . java to improve test coverage
refactor SettingsActivity to use a new method for setting the list background color to improve code readability and maintainability by encapsulating background color
replaced the Apache StringUtils with OpenHAB StringUtils and added a null check for the line variable to ensure compatibility with the latest OpenHAB
added an ` accumulate ` method to ` JavaUserDefinedAggFunctions ` for calculating the sum and count of an accumulator to facilitate
hbase - 26969 fix checkstyle violation in hbase - replication
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regular expressions to improve performance by caching compiled regular expressions
added a static method to reset the gameThread instance to ensure proper resource management and prevent potential memory leaks
added a null check in the login method of DigestAuthenticator to ensure that the realm matches the login service name before proceeding with the authentication process
refactor parameter merging logic in ` SavedRequestAwareWrapper ` and improve null handling in ` SavedRequestAwareTests ` to enhance code
updated log status messages in BasicConfigurator , LoggerContext , ConfigurationAction , LoggerContext , and ContextInitializer classes to improve clarity and accuracy of
replaced ` hasNotified . compareAndSet ( false , true ) ` with ` this . wakeup ( ) ` in ` CommitLog .
added a condition to exclude Android O in the image view check and introduced a new utility method for Android O detection to ensure compatibility with Android O
updated schema info level from minimum to basic in SchemaCrawlerTest to ensure compatibility with the latest schema information
replaced XML output stream with a buffered output stream in SaveTask . java to improve performance and resource management during XML writing
updated character encoding handling in TestPayloads . java by replacing random byte generation with a fixed byte length utility to improve performance and maintainability of
fix mc - 103516 not be able to remove entity from world . checkentity
removed duplicate entries for Tomcat10ContainerAdapter and Tomcat101ContainerAdapter from ProbeConfig to streamline configuration by eliminating
[ drools - 535 ] fix serialization of multiple accumulate in protobufinputmarshaller ( # 535 )
camel - mail fixed switch / cases indentation see camel -
pdfbox - 4892 : make class package - private , remove public modifier
added support for dynamic HTTP method and HTTP headers in RemoteEndpointServiceAccessStrategy to enhance flexibility in handling different HTTP methods and URLs
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class for creating a ` ResponseBuilder ` to improve code modularity
added a call to ` manager . notify ( Notification . COMMAND _ START ) ` in ` AsyncBackgroundTaskManagerTest . java ` to ensure
refactor ` PreviewItemManager ` to add ` recomputePreviewDrawingParams ` method for better handling of ` mReferenceDrawable ` to improve code
updated tokenizer and filter factories from TokenFilterFactory to CharFilterFactory in LukeRequestHandler . java to improve handling of character filter factories and
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot in AbstractCategoryItemRenderer . java to improve
added verbosity handling to the createSubContext method in JavacStep and ExecutionContext classes to improve error message output based on verbosity settings
added a condition to convert schema to uppercase if it is not null and the database type is oracle to ensure consistency in schema handling for Oracle databases
added the class name to the context description in AsyncLoggerAllThreadContextImplementationsTest . java to improve clarity of context information for better
added a new file TestShrinkToOneRegion . java with a main method that calls System . gc ( ) to facilitate testing of
replace string splitting with Splitter for customPackages in SandboxTestRunner . java to improve code readability and performance by utilizing Splitter
updated context handling in AnalyzingInfixSuggester and added binary context tests in AnalyzingInfixSuggesterTest to
updated attachment handling in PushsaferMessageBuilder . java to use a local variable for the encoded string to improve clarity and correctness in
remove ` ` show label histogram ' ' command from modelexplorer and sequencemodelexplorer
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the access modifier of the FORMATTER function from ' private final static ' to ' private static final static ' in multiple test classes to improve
refactor UDFRound to use BigDecimal and RoundingMode for improved null handling and precision to enhance code clarity and maintainability by using more
replaced direct object assignments with ` ConfigParser . valueAsOrElse ` for ` injectionEnabled ` and ` useIncludedLibrary ` to improve code
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to these classes from outside the
updated permission messages and variable names in PlayerEventListener . java for clarity and consistency to improve code readability and maintainability by using more d
updated the ` getAdditional ` method to include a ` Session ` parameter and modified its implementation in ` ConditionInConstantSet ` to include the session
replaced occurrences of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` to
added random box and circle creation and transformation transformations in Box2DCharacterControllerTest . java to improve test coverage and ensure proper friction
added tests for exceeding maximum size limits in flight recorder options to ensure that the application does not exceed the specified maximum size limits
updated error message from " must be power of 2 " to " must be a multiple of 8 " in ObjectAlignment . java and Options .
added functionality to extract the target package from the Android manifest to enhance the instrumentation testing capabilities by allowing dynamic extraction of the target package
refactor DocHelper to improve code structure to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use a new ArrayList instance to ensure that acceptableThrowawayItems does not modify the list of items
refactor method calls to use explicit casting for boolean , byte , char , short , and int types to improve type safety and clarity in
reformatted code for improved readability in MessageHandler . java to enhance maintainability and clarity of the code
refactor Inflection class to improve code readability to enhance maintainability and facilitate future development
added methods to get and set the locale in EvaluationContext to enhance locale management functionality in the evaluation context
replaced the import of ` io . cucumber . core . api . plugin . Plugin ` with ` io . cucumber .
added a break statement in the DrawerActivity . java file to ensure proper control flow in the switch statement
updated import statements in MongoQueryCreator . java and modified debug log statement to use getQueryObject ( ) to improve query logging clarity and ensure
added a new constant XWORK _ LOGGER _ FACTORY in XWorkConstants and implemented dynamic instantiation of LoggerFactory in LoggerFactory to enhance logger
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest for clarity to improve test naming for better readability and
polish ` ` remove @ ConditionalOnMissingBean ' ' annotation for liveness / readiness / health indicator
added a ConcurrentMap for managing concurrent PStore instances in LocalPStoreProvider to improve thread - safety and performance during local PStore retrieval
changed the visibility of the ` deleteFiles ` method from public to private to enhance encapsulation and improve code readability
renamed ` Provider ` to ` ServiceProvider ` and updated related methods for clarity to improve code readability and maintain consistency in naming con
[ truffle ] do not throw unsupportedmessageexception when aot be enable .
added ` isToolchainCreated ` method to ` ToolchainProvider ` and its implementations in ` DefaultToolchainProvider ` , ` DaemonLifecycle
fix deadlock in polyglotengineimpl when context be add to the engine .
updated condition checks from ` indexOf ` to ` contains ` for version and fails in ` AbstractCheckDescriptor . java ` to improve readability and
updated linker flag references to use exported flags in PrebuiltCxxLibraryDescription and related tests to ensure correct handling of linker flags for shared libraries
refactor ` onConfigurationChangedInternal ( ) ` method to ` updateRecentsRotation ( ) ` in ` RecentsView . java
added generic type parameters to multiple listener checks across multiple classes to enhance type safety and prevent potential runtime errors
abstractblockchain : use block . getheader ( ) . gethashasstring ( ) instead of newblock . getheader ( ) to
use getstorepathphysic ( ) instead of storepathphysic ( ) to get diskpartitionspaceusedpercent in defaultm
[ hotfix ] remove try - with - resources in micrometermetricmanager
[ amq - 5841 ] fix compaction log log lose message count ( # 5842 )
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a method to check for the presence of a system UI object and execute a shell command for key event detection to improve test reliability by
changed logger from static final to final in SessionRegistryImpl . java to enforce immutability of logger and principals , sessionIds , and session
http : / / bugs . google . com / p / mybatis / issues / detail ? id = 558 : empty cookie store
fix ( bonsai ) : fix npe during archive rollback
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept CharSequence instead of String to enhance
[ java ] unignoring a test in marionette
added a try - finally block to ensure the connection is returned in a finally block to handle potential IOException during connection execution
rename CMD _ ESCAPER to CREATE _ PROCESS _ ESCAPER and update references accordingly to clarify the purpose of the
added synchronization to the heartbeatExecutorService initialization in DbTxnManager to ensure thread safety when accessing the heartbeatExecutorService
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced a new method ` wrapWithTracingAnd
added a new method ` updateFirstLineShowing ( ) ` to the TextArea class to fix drag - selecting text out of the Text
added temporary directory configurations in TestInformationSchemaWithPrivilege . java to ensure tests use the correct temporary directory for mapreduce operations
refactor graphics configuration retrieval logic in mmm Component . java and ppp Component . java to improve clarity and maintainability of the code
updated the ` ServerStatus ` initialization to include a boolean parameter and added a new test for legacy mode in ` TikaResourceTest ` to
camel - 16405 : optimize pipeline to reduce object allocation .
updated argument handling for model loading and improved tag management in PrintTagList . java to enhance flexibility in specifying the model file and enhance
updated the method to retrieve the table name from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser `
do n ' t attempt to drain the queue if an exception occur during recovery .
[ java ] make startfromtruncatedrecordinglogtest more reliable .
updated the calculation of the ` arc ` variable in the ` LineBorder ` class to use a float instead of an integer to improve precision in
added check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to prevent potential NullPointerException when galleryImages is null or empty
updated the DEPLOYMENT _ ID column definition in the CreateDatabaseChangeLogTableGenerator class to ensure the DEPLOYMENT _ ID column is
pdfbox - 2576 : fix typo in usage message
removed the ` moreColumnsOk ` parameter from the ` getIndex ` and ` canUseIndex ` methods in ` AlterTableAddConstraint .
added provisional engines map and updated engine retrieval logic in QuickfixjComponent to improve engine management and ensure proper handling of provisional engines
added displayZoomControls property and methods for setting and getting display zoom controls in RoboWebSettings to improve control over the display of zoom controls
add a corporea block , brick , and slab , and fix a crash when try to attach a spark to a corporea
refactor ConnectionFactory to improve connection handling to enhance performance and maintainability of connection management
added a method ` EnableDisableMenuItems ( ) ` to set the icon of the ` mnuAnnotate ` menu item based on user settings
updated the message used in the ` setMessageForEmptyList ` method from ` server _ search ` to ` filter _ list ` to improve cl
hhh - 13434 : use @ setting instead of @ serviceregistry . setting ( )
added auto - resizing behavior to the JTable in MotorMountConfigurationPanel and modified the constructor of MotorMountConfigurationPanel
use system . getproperty ( ` ` line . separator ' ' ) instead of system . lineseparator ( )
added getter and setter methods for creator , subject , and subject in POIXMLProperties . java , and updated test cases in TestPOI
reformatted the call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintain consistency
[ java ] handle empty cnc file in aeron client .
refactor ` UnsatisfiedTypeBounds ` to use a new ` Command ` interface instead of ` Marker ` and introduce a new helper
added support for detecting and decompiling JMod classes in ClassFileSourceImpl to ensure compatibility with Java ' s built - in jmod
updated the ` TreeBackedElement ` and ` TreeBackedPackageElement ` constructors to use nullable ` PostEnterCanonicalizer ` to improve
updated token request creation in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and set request
fix wrong argument pass to array . get ( ) in abstractfrompropertyvaluerangedescriptor
added sync method to ZooKeeperWatcher and invoked it in ZKAssign to ensure proper synchronization of ZooKeeper nodes
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure that the current context is not equal to EGL _ NO
[ drools - 5352 ] avoid to remove activation from a ruleflowgroup when it ' s active
added a return statement in HystrixDashboardConfiguration . java to ensure proper execution flow in the HystrixDashboardConfiguration class
removed the exception handling for PipeNotExistException in DropPipeProcedure . java and added a failure assertion in IoTDBPipeIT . java to improve
fix clientqueuedisruptiontest by close client after each test
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl # tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
removed unused imports from GeoPoint - related classes to improve code clarity and maintainability
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` and ` OnDiskBuildInfoTest ` to use
fix guiingameforge use itemstack . isempty ( ) to check for emptiness .
updated references from " path " to " timeseries " in TSParser . java and SQLParserTest . java to clarify the purpose of
added a check to return 0 if the velocity is less than the threshold in TubeCalc . java to ensure that zero values are not considered
replaced calls to ` getBucket ( ) ` with ` _ storage . create ( BlobInfo ) ` for bucket management in GcsPinot
removed the blockCloseVertxByName call from the finally block in TestHighwayTransport . java to ensure proper resource cleanup after the transport closure
hhh - 15413 - ddl - db - ddl - migration - db - ddl - support drop view if exists
updated the expected engine value from 2 to 3 in CarrotClusteringEngineTest . java to increase the test coverage for the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
added a new ` ParserStateObjectInputStream ` class and modified ` ParserCacheCommand ` to use it for deserializing ` RemoteDaemonicParser
update objectQuotingStrategy assignment logic in ChangeSet . java and DatabaseChangeLog . java to ensure proper handling of object quoting strategy based on the
updated the method from ` parse ` to ` fromXmlStream ` in ` MetainfoParser ` to improve compatibility with XML stream parsing
deleted the CsrfControllerAdvice . java file to remove unused CSRF - related code to streamline the codebase
updated endorsedArg to quote the path list in AntCompiler . java to ensure consistency in file path handling across different operating systems
added scrim animation functionality to the background of the drag layer in the launcher to improve visual feedback during the transition of the background during the app
updated the long comparison threshold from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to
regenerate client with updated copyright year ( # 4382 )
added validation for absolute and UNC path prefixes in WindowsPathParser . java and corresponding tests in PathOps . java to ensure only valid paths
replaced InetSocketAddress with a direct MulticastSocket instantiation in Promiscuous . java to simplify the code and improve performance by eliminating
removed and re - added writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
change return value from nBits to nBits . clone ( ) to ensure that nBits is not modified during comparison
changed the visibility of the ` deriveCollectorName ` method from private to protected and added unit tests for the ` ProfilerCollector ` class to allow
datamongo - 2043 - fix type hint when write simple type in mappingmongoconverter
added performance measurement for proxy creation in ProxyMaker . java to improve performance monitoring for proxy creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by providing more context in connection exceptions
refactor ` reinflateWidgetsIfNecessary ( ) ` method to use ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure that the file deletion functionality is
lwjglabstractdisplay now properly call display . processmessages ( ) when renderable = = false
add test case to show student profile picture in instructor student list page
added support for optional environment variable ' onlyrun ' and ' method ' in TestIgnorance . java to enhance test ignorance
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better readability
updated QueryDslJpaRepository to handle null pageable cases and added a test for null pageable in QueryDslJpaRepository
added a new method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to ensure that
camel - jbang : camel - jbang - increase test timeout from 10 minute to 1 minute .
refactor SnowballAnalyzer class for improved performance to enhance efficiency of Snowball analysis
updated previousIndex initialization and modified logic for handling InternalBatch in StreamingAggTemplate . java to improve index management and simplify batch processing logic
improve bytecodeparser error message when a receiver be null check .
added a new method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` to enhance stream processing capabilities by
updated log messages to clarify file movement status and added retry logic for renaming files to improve logging clarity and enhance error handling during file
updated InjectorProxy and related classes to use a new newInstance method instead of setAccessable to enhance flexibility in instantiating components with constructor initialization
[ hotfix ] [ stream ] do not close stream in flinkstreamingcreatefunction
added unit tests for SQL parsing and deparsing in ShowStatementTest , UnsupportedStatementTest , CreateTableTest , and CreateTableTest to ensure
replace ` return null ` with ` return ImmutableList . of ( ) ` in ` AppleTest . java ` to return an empty list instead
updated the expected output in NamedSetTest from " Deliberate error " to " Quality Distribution , Inc . " to improve clarity
added a websocketReconnect flag and refactored connection state management in WebSocketConnection to improve WebSocket connection handling and provide more detailed logging information
replace ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI _
hbase - 15921 retry table creation in testregionreplicareplicationendpoint . testreplicareplication fails on hudson
added configuration setup for PMS in FormatRecognitionTest . java to ensure proper configuration management during tests
cloudstack - 7555 : create ovumatedisktemplates ( ) method in templateservice interface , add a transition to operationfailed to
updated test class annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 tests instead of Spring tests to improve
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated table and table names from ' metricVal ' to ' metricVal1 ' in AppendOnlySchemaIT . java to ensure consistency in naming
added a validation check for the deleted documents count in SegmentReader . java to ensure that the correct document count is used for indexing operations
add a method to get the name of the jain - sip logger and improve javadoc
update filament length from 1.0 to 0.9 in FilamentFactory . java to ensure that staves w / no starting
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration . java and set it to true in VertxPlatformHttpEngineTest
added a test for CSRF protection matcher behavior in CsrfFilterTests to ensure proper handling of case sensitivity in CSRF protection requests
replaced static fields with local variables in HotSpotObjectConstantImpl . java to improve code readability and maintainability
updated method names from ' add ' to ' addFrequency ' across multiple classes to improve clarity and consistency in naming conventions
added a watermark to the metadata ( ) method in FileIO . java to ensure that the watermark is properly set for file operations
move ctedefinition to be a non - final field in sqqmctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable ResultSetMetaData functionality in tests
updated library output format to include the root directory to ensure compatibility with the project filesystem ' s root path for library output
updated the slider model from a fixed value of 180 to a fixed value of Math . PI to ensure proper rendering of the slider based on the
move save to a separate thread to avoid spurious crash
added expression language support to KerberosProperties . java to enable expression language support for Kerberos authentication
removed conditional checks for ` remoteMountPointComponent ` before setting its translation and rotation degrees to streamline the code by eliminating unnecessary checks
updated ` setupViews ` method to include ` ScrimView ` as a parameter to enhance view setup by incorporating scrim
allow periodic materialization to be disable by default
added a ` value ` attribute with getter and setter methods to the ` ProtocolParameter ` class and updated the ` list ` and ` ParamTag
add a unit test that demonstrate the behavior of a chunked servlet with header
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to handle the ` isBumped ` flag to
added Content - Type header to SwitchToPostInterceptor and modified request body formatting in SearchRequestUnitTest to ensure proper content type handling for HTTP
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging for setting fetch size in PhoenixResultSet . java and replaced SQLFeatureNotSupportedException with a warning log message to improve debugging and
initialized AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
[ hotfix ] fix checkstyle violation in llrealtimesegmentdatamanager
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method signature for
hbase - 16405 remove unused org . apache . hbase . codec . prefixtree . prefixtreecodec from tablemapreduceutil
added error handling for inflation failure in DesignerActivity and made root field final in XMLLayoutInflater to improve user experience by preventing
refactor PushbackInputStream class to improve code organization to enhance maintainability and readability of the code
make loweringtoolbase abstract and simplify loweringtool implementation .
updated the error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to improve clarity
fix ` makefiles . rule ` to correctly handle \ r \ n
replaced direct usage of ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and updated
updated the transform refresh logic in SimpleBatchNode to ensure proper handling of the RF _ TRANSFORM flag and bound refresh to improve performance and
[ gr - 16927 ] make safepoint check more robust .
refactor window size callback handling in LwjglWindow . java to use a dedicated method to improve code readability and maintainability by
updated animations in LauncherAppTransitionManagerImpl to use offscreen translation instead of translation to improve animation accuracy by using a more precise offscreen
refactored ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and updated associated methods to improve type handling
added methods to set file length in ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to improve file handling
updated manifest handling in AndroidNdkScriptGenerator and modified AntScriptGenerator to include memcpy _ wrap . c in AntScriptGenerator to
camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource for bulk operation
added support for role " * " in RuleBasedAuthorizationPlugin and updated tests accordingly to enhance permission handling and improve test coverage for collection requests
updated ZookeeperClientServerRegisterRepository to handle multiple event types and improved null checks to enhance the robustness of URI registration process and ensure
renamed methods and classes related to deep stub in ReturnsDeepStubs for clarity and consistency to improve code readability and maintainability by
modify contract call value handling to return a default value when the contract ' s call value is empty to ensure that the contract ' s call value
improve logging of date parse error
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the PBE algorithm name in ` PBETest
tmi - tiff : do n ' t throw eofexception for too large tiff value
added validation for job parameters in CommandLineJobRunner and implemented a corresponding test case to ensure that invalid parameters are handled correctly and provide clear error messages
fix test that fail on window because of \ r \ n not \ n
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence generation to improve thread safety and maintainability of the lastSequenceId variable
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ( ) ` to calculate the sum
changed minSdk and maxSdk attributes from private to protected in WifiUsabilityStatsEntryBuilder and ShadowWifiManagerTest to allow subclasses
added a new Java class to perform a permutation check for a given number of elements in an array to provide a solution for checking the validity of
replace map with concurrenthashmap in table . addcolumnfamilystores
refactor taskbar recreation logic to use boolean flags for screen size and orientation changes to improve clarity and maintainability of the code logic
refactor SyncFutureCache . java for improved synchronization logic to enhance performance and maintainability of asynchronous operations
updated the DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and the latest version for
[ java ] uselessstringvalueof : false positive with string literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior
add option to set target max type shard size for hollowproducer
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated assertions to check for " mydb " instead of " mydb . db " and refactored parameter handling in DDLTask to improve
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase ` to execute the ` ClearDatabaseChangeLogTableStatement
added version handling in RestClient and modified CallPath and CallPathProviderTest classes to support versioning and improve path comparison logic
updated exception messages and introduced a closed state management mechanism in PhoenixDriver . java to improve error handling and ensure proper resource management during
rename mesurement to measurement , fix javadoc
added JUnit integration tests and modified visibility settings for UI elements in FolderPickerActivity and UploadFilesActivity to enhance test coverage and ensure proper visibility
[ gr - 20936 ] do n ' t remove phase that do n ' t exist .
added a check to return the string if the length is less than two in StringHelper . java and created unit tests in StringHelperTest . java to
refactor JpaQueryCreator to use a local variable for part type and add support for NOT _ CONTAINING to improve code readability
do n ' t retry sip account creation if the session have n ' t be store .
added dispatching of P25Message in P25MessageFramer . java to enhance message processing capabilities
added null checks before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end in WebsocketTest
[ ds - 3752 ] fix integration test and add comment
refactor widget padding initialization to use dynamic padding values from the launcher to improve flexibility and maintainability of widget padding management
added ` hideAllApps ` method to ` TaskbarAllAppsController ` and updated ` closeOverlay ` in ` BaseActivityInterface ` to
removed the ` synchronized ` keyword from the ` launch ` method and replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join
updated the calculation of the point ' s x and y coordinates in JavaSEPort . java to correctly account for the canvas ' s position and
replaced ` notificationManager . notify ` with ` startForeground ` in ` UploadService . java ` and added a conditional check for ` to
fixed bug 1371753 - excessivepubliccount now catch more case .
added a configuration for the HBase client retries number in TestThriftHBaseServiceHandler . java to limit the number of retries for HBase operations
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for better traceability
added exception handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new method ` getTickers ( ) ` in ` Bittrex ` and created a corresponding response class ` BittrexTick
updated the handling of enum constants in EntityEntry . java to improve type safety and ensure correct retrieval of enum constants
replaced Class < ? > with Object in the registerSession and unregisterSession methods across multiple classes to improve type safety and clarity in session
updated the character array ' clist ' to include newline and carriage return characters to improve character handling for better readability and performance
added stylesheet management methods and updated content retrieval logic in ResourceService , ResourceHandler , and DefaultServlet to enhance flexibility in stylesheet handling and improve
added a call to ` clearIndex ( ) ` in the ` TestFiltering ` class to ensure that the index is cleared before proceeding with
changed method invocation from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with PointerParameterStrategy for address retrieval
updated condition in CreateSequenceGenerator to exclude CockroachDatabase to ensure compatibility with CockroachDatabase for sequence generation
removed the condition checking for ` isEnum ` in the ObjectStreamClass . java file to simplify the code by eliminating unnecessary checks
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and added a new class ` SymbolNotFoundError
updated BinaryResponseWriter to conditionally create a SolrDocument based on return fields to improve document handling based on the presence of a specific return field
added handling for PING and PONG cases in WebSocketImplBase and implemented a test for pause and pong functionality in WebSocketTest to ensure proper
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
refactored DnsResolverProvider to use wildcard imports and updated DnsCache configuration for improved cache management to enhance code readability and maintainability
added a conditional annotation to the TraceMessagingAutoConfiguration class to ensure messaging tracing is only enabled when the MessagingTracing class is present
mondrian : fix for mysql compatibility with quote identifier
updated import statements in multiple Java files to streamline dependencies and improve code organization
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper processing of close tags in the XML
removed the ` setVisibility ( GONE ) ` method from ` TouchCharInput . java ` to streamline the code by eliminating unnecessary
added a null check for the current user before comparing its ID to prevent potential NullPointerException when accessing the current user
updated JSObjectLinker to handle different index cases for setting the object member to improve flexibility in setting the object ' s member based on
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to utilize default instances and improve suffix handling to enhance flexibility
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should not be used
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
deleted JoglDebugAdaptor . java and modified RocketFigure3d . java and GuiceStartup . java to streamline debug
added unit tests for the ` toString ` methods in ` ExtraFieldPropagation ` and modified the ` extractLambda ` method in ` AWSPropagation `
added PendingIntent to mNotification in FileDownloader . java and FileUploader . java to enable automatic updates to the current notification in the file
refactored the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to introduce a ` set ` method to improve
refactor DateTimeFormatter class to improve date - time handling to enhance performance and maintainability of date - time operations
updated desktop properties for DnD autoscroll and shell folder manager in WToolkit . java to ensure compatibility with the late version of
added null and empty checks for the administrator credential in the setAdministratorCredentials method to ensure proper handling of principal , password , and keytab
added a constant for maximum width scale for landscape screens and updated width used based on device profile conditions to ensure proper width adjustment for
added rendering start and end calls in PSurfaceJOGL . java to ensure the sketch window is properly initialized before rendering
refactor Hashing class for improved performance to enhance efficiency of hashing operations
modified the ` accept ` method to use ` Files . getBaseName ( ) ` and ` Files . getBaseName ( fileName ) ` instead of
updated the ` addToListIfNeeded ` method to include a content description parameter for better localization support to enhance user information display by providing a clearer
removed unused variable ` newType ` and added null check for its value to improve code clarity and prevent potential NullPointerExceptions
update ACTIVITY _ START _ DELAY from 500 to 800 in mmm Launcher . java and ppp Launcher . java
added a new constant WEBAPP _ HOME in SolrJettyTestBase and updated references in JettyWebappTest to use this constant to
reset ` selectedMotorSet ` and clear ` table . clearSelection ( ) ` in ` ThrustCurveMotorSelectionPanel .
added BufferUtil import and invoked clearToFill method in ByteBufferPool . java to ensure proper buffer management and prevent potential memory leaks
fix alarm trigger creation via rest api ( # 1193 )
rename " authorization " to " authentication " for LDAP configuration to improve clarity and consistency in naming conventions
added deleteExchange and queueDelete methods in DurableOnTransient . java to ensure proper management of exchange and queue deletion
[ hotfix ] fix flaky test in bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to include error handling for connection failures to improve robustness and provide clearer error messages
polish ` ` use optional value in more functional style '
updated Quartz2Adapter . java file to improve performance and maintainability of the code
[ gr - 3649 ] avoid illegalstateexception when call sulonglibrary . getmember ( ) .
updated schema references from 6.2 to 6.3 in SecurityNamespaceHandler and XsdDocumentedTests to ensure compatibility with the latest Spring Security
updated the ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and modified the ` DiscoveryClientNameResolver ` to use
added a check for non - empty annotations before updating them in JavacParser . java and created a new test class TestAnnotatedAnon
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with internal naming package access
change the ' strict ' variable from false to true in StaxEventItemReader . java to enable stricting of the event processing by default
modified the ` readPartition ` method to include an ` isExhausted ` boolean parameter and updated related logic in ` OfflineSorter ` to
refactor ActionResetingPool class to improve code organization to enhance maintainability and readability of the code
added a check for ` getXY ( ) ` before converting ` lightState ` to ` ColorMode ` to ensure proper handling of color modes
refactor drag - and - drop functionality to utilize a target cell array for folder creation calculations to improve code clarity and maintainability by
added loading dialog functionality to FileOperationsHelper and removed it from FileDetailFragment and OCFileListFragment to improve user experience by providing a clear
added null and existence checks for uigestureFile before loading logs to prevent potential NullPointerExceptions when uigestureFile is not present
updated method calls to use Locale . getDefault ( ) for case - insensitive comparisons to ensure consistent behavior across different locales in test cases
added a listener to the result in XmlSuite . java to enable listener management for the XML suite
added a new method ` loadWithNewGlobal ` and modified existing method handles in ` Global . java ` and ` Context . java ` to
added JSON serialization methods to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest ` to ensure proper handling of JSON strings
added ObjectPostProcessorConfiguration import to HeadersConfigurer and modified OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and Saml
replaced double quotes with single quotes in string replacement methods across multiple Java files to improve consistency and maintainability of file handling logic
[ drools - 5352 ] avoid npe when compare null in in operator
added imports for FieldCache and commit ( ) and purgeFieldCache ( ) in TestDistributedSearch . java to ensure proper FC ins
added test case for message boundary event on subprocess and message boundary event on multi - instance
add resolvestaticcall ( ) to handle static method resolution .
http : / / issues . apache . org / jira / browse / amq - 3877 - ensure messagegrouphashtbucketcount
added constants for slot IDs and replaced boolean fips with int slotId in Secmod . java to improve code clarity and maintainability by
added alignment support to the widget management in Layout . java and changed the return type of startRenderering to boolean in GdxRenderer . java
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added midi imports and a condition to check class types in JDK13Services . java to enhance security by preventing unnecessary class instantiation
added a condition to check if the keyword is the same as the htmlFilename before adding it to the keywordToReference map to ensure that the
camel - 16405 : fixed multicast eip to account for size of a collection .
refactor SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability by removing unused methods
escape special character in statsd output ( # 644 )
add udp port to member serialization so that it can be use with multicast address .
rename ` OperatorMulticast ` to ` OperationMulticast ` and update references accordingly to improve clarity by reflecting the purpose of the multicast
increased send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for
added a try - finally block around the node start operation in VertxTestBase . java to ensure latch is released properly after the operation completes
added an import statement for ListIterator and modified the destroy method to reset cachedEventListenerRegistry to null to ensure proper cleanup of cachedEventListenerRegistry after
simonstewart : refactoring to make it easy to get the login token from the local storage
[ pytorch ] remove pytorch dependency from pytorch ( pytorch )
added a TaskStackChangeListener to clear the force invisible flag in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to
pdfbox - 4892 : optimize checkdatepattern , a suggest by valerybokov
camel - 14850 - camel - cxf should set a default factory bean if not configure yet
refactor animation handling by extracting the endPendingAnimation logic into a separate method to improve code readability and maintainability
added logging for duration and play time calculations in LauncherAnimationRunner to improve debugging and traceability of animation play times
added conditional handling for exception compilation in C1XCompilation . java and introduced BailoutOnException option in C1XOptions . java
updated signup and password fields to be null in mmm Links . java and modified corresponding assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename previousallocationgraphallocations to reserveallocations in slotprofile
changed the type of the ` onlyFormat ` variable from ` SimpleDateFormat ` to ` String ` and added a method to retrieve it to improve flex
[ geotiff ] [ geotiff ] fix gc _ nodata property in geotiffreader
sulong : fix npe when the sulong source section be null .
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replaced ` client . blockUntilConnected ( ) ` with a ` CountDownLatch ` to handle connection state events to ensure that the client
added null check for the array parameter in the ArrayTypeHandler class to prevent potential NullPointerException when accessing array data
replaced the class ` RegexpTunnel ` with direct usage of ` REProgram ` for retrieving the prefix to simplify the code and improve performance by
updated application picking method to use Application class instead of null to ensure compatibility with the latest application configuration
[ drools - 1359 ] fix npe when call phreakfromnode . unlinkcreatedhandles ( ) in phreaknode
replaced Preconditions with TransactionUtil for validating asset name , URL , and description in AssetIssueActuator . java to improve validation logic for asset
do n ' t copy textfield if it ' s already a textfield
updated descriptions in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , LGWebOSHandler , and LGWeb
updated node configuration methods to add seed , active , and trust nodes to improve node management by consolidating seed , active , and trust information
updated assertions in BaseTokenStreamTestCase to include detailed error messages and changed thread array type from Thread [ ] to AnalysisThread to improve debugging
log4j2 - 1342 : add trigger interval and modulate flag to timebasedtriggeringpolicy
added new methods for item click functionality in ` ShadowAdapterView ` and removed it from ` ShadowListView ` to streamline the functionality of
pdfbox - 4071 : avoid class cast exception , a suggest by valerybokov
added a method to handle a null loop scope in GraphDecoder and implemented the afterMethodScope method in PEGraphDecoder to ensure proper handling of
refactor HttpSessionDestroyedEvent to use a dedicated method for obtaining session attributes and add unit tests for security context handling to improve code clarity
updated HttpZipkinSpanReporterTest . java to include new imports and a test method for changing the service name in Zipkin to ensure the
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for better debugging and tracking of spool modes to improve
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and update references accordingly to improve clarity and consistency in naming
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for the lock operation to complete before
updated ConfluentSchemaRegistryDeserializerProvider to include a default cache capacity and added new overloaded methods to improve flexibility in handling schema registry
renamed the JCheckBox from " remind " to " checkAtStartup " and updated its tooltip to improve clarity and user experience by
added methods for method generation in NodeGenerator . java and modified return statements in NodeFactory . java to enhance type safety and improve code clarity
hhh - 13686 - fix foreignkeys . istransient check in cascadingactions
added support for the PROTO _ PROPERTY _ NAME constant and its usage in the ScriptObject class to enhance flexibility in handling prototype property access
updated the default read mode from " heap " to " mmap " in CommonConstants . java and modified the return statement in ImmutableSegmentLoader .
added import for ByteArrayTemplate and modified return statement in ArrayTemplateBuilder to utilize ByteArrayTemplate for byte class handling
added Hipchat integration properties and a new configuration class for SAML service provider integration to enhance the SAML service provider functionality and facilitate
replaced List with Set for commandRegistryUrls and updated resource retrieval logic to improve performance and clarity in managing command registry URLs
updated warning log message to include current context and added debug logging to improve traceability of uncovered HTTP methods for better debugging
added a boolean flag ` loggedIn ` to the ` login ` method in ` SvnRepositoryConnector ` and set it to true in `
camel - 16400 : camel - jms should not lazy create a transaction manager when transacted = true / false
server : fix import order in vmwareresource . java
refactor Timers class to improve code readability and maintainability
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to stream
removed deprecated static final string constants from UAX29URLEmailTokenizer and updated constructors to accept version . LUCENE _ 31 as
removed redundant Map implementation from ScriptObject class and replaced occurrences of Map with ScriptObject in ContextTest to simplify the class structure and improve code cl
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future development
[ ds - 3752 ] fix bug in workflowmanager , subscriptionmanager , workflowmanager , and passwordservlet that use eperson . get
updated JaversTransactionalDecorator to implement InitializingBean and removed @ PostConstruct annotation from ensureSchema method to improve bean initialization and ensure schema
removed null check for pgTypeName before putting it into the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null checks
added multiple server initialization and setServer calls in ScopedHandlerTest . java to ensure proper server setup for various handlers
calltimeoutexception should not be log during wait - notify phase
changed the condition from checking if the username and password is blank to checking if it is empty to ensure that the login process correctly handles cases where
updated permission check from ` Objects . equals ( " " ) ` to ` String . equals ( " * " ) ` in ` CommandMap
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of the postLogin variable and related methods from byte [ ] to String in HostBean , TerminalBridge , HostDatabase ,
refactor simulation and flight configuration handling in GeneralOptimizationDialog . java to improve clarity and consistency in simulation name generation
camel - 14850 : camel - core - optimize and allow to turn off context reload by default .
updated log configuration parameters in CommonTestUtils . java to improve clarity and consistency in logging configuration
refactor PrologSizeSanityCheck class for improved size sanity checking to enhance performance and maintainability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future development
added a check for ` nonCloseable . markSupported ( ) ` before invoking ` invokeSafely ( nonCloseable : : reset )
added a check for enabled embedded settings in EmbeddedNeo4jServer and improved conditional checks in DefaultBeanContext to ensure proper handling of
fix ( player ) : make movement debug command work with prefab
updated the ` random ` method to include a half - length total weight parameter for improved random number generation to enhance performance by reducing the
refactor GsonParser to simplify cache string assignment and remove unnecessary validation checks for start absolute and start relative to improve code readability and enhance validation
added comments to the parameters in ApacheHttpClientMediaWikiApi . java for clarity to improve code readability and provide clearer documentation for sorting
replaced multiple calls to ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple files to improve cl
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added PipeTaskCoordinatorLock . java for improved
added conditional logic to determine whether to use preinstrumented JARs based on a system property to enhance flexibility in dependency jar generation based on
change the condition from " if ( ! isSilent ) " to " if ( isSilent ) " in ExecDriver . java to correct the
added validation checks for default and required attributes in IndexSchema . java and created a test for severe errors in BadIndexSchemaTest . java to
do n ' t randomly read the repair if there ' s an exception
replaced ImmutableSortedSet with Iterables in PrebuiltCxxLibrary and added a new test for including directories to improve code clarity and ensure
modified date fields in AdaptableX509CertSelector to be non - null and introduced sensitivity flags for Subject Key Identifier and Serial Number to
log4j2 - 1349 use abstractappender instead of string . parseint ( string , int )
added a deprecation annotation to GuiScreenEvent . java to indicate that the method is outdated and should not be used in 1.16
added methods to manage category addition and removal in CategoryEditSearchRecyclerViewAdapter to improve category management and enhance user experience
# 1193 - enh : add miss servercachetype parameter to servercachemanager . getcache ( )
refactor RocketComponent to use an iterator for updating massOverriddenBy , CGOverriddenBy , and CDOverriddenBy
[ java ] : fix deadlock in javadiagnosticprovider when compilation fails .
refactor ` Task ` class to use ` Supplier < V > ` instead of anonymous inner classes to improve code readability and maintainability by
added synchronization and improved executor management in WanReplicationServiceImpl . java to enhance thread safety and prevent potential memory leaks
added null checks for destination paths in Partition . java and updated Driver initialization in DDLSemanticAnalyzer . java to improve robustness by handling
replaced lambda expressions with lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and reduce
added a new test file ` FilesTest . java ` and a static method ` delete ` in ` Files . java ` to ensure file deletion
removed try - catch blocks around socket closure in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
updated the method for adding working directories in the Project class to improve clarity and functionality of working directory management
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the visibility of the static String variable from public to private to restrict access to the constant for better encapsulation
updated Java file types for CSV and JSON files in SimplePostTool . java to ensure compatibility with the latest Solr API changes
[ geosymbolic ] make sure max and min command do n ' t have symbolic toggle
refactor client container start and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
update conditional logic to use logical OR instead of logical AND for null check to improve clarity and correctness of logical operations
ensure web application context be clean up after each test
added search string handling and updated resource retrieval logic in RemoteBrowseHandler . java to enhance user experience by allowing search functionality based on query parameters
removed the visibility of the neutral button in SetupEncryptionDialogFragment to streamline the user interface by eliminating unnecessary functionality
add new countitems ( collection , boolean includearchived , boolean includewithdrawn ) method to itemdao interface
updated SQL statements to include quotes around table and column names in DDLTask . java to enhance readability and maintain consistency in SQL syntax
added exception handling and logging functionality to CheckTokenEndpoint to improve error management and provide better debugging information for OAuth2 exceptions
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
updated methods in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use subdomain instead of serviceInstanceId to improve clarity and consistency in
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and DataBrowser . java , and added tooltip text in SQLConsole
added support for Surefire version 2.22 . 0 in the ActionProviderImpl class to enable users to run a single test method with
changed exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error handling by providing a more descriptive exception message
[ hotfix ] [ core ] add flink annotation to mark datastreamutils and collectsink a experimental
fix a typo in the comment of streamcepstrumsource
updated index validation logic in List . java to prevent index out - of - bounds errors
replaced ` OrExpression ` with ` Parenthesis ` in ` CloneHelperTest . java ` to utilize the new syntax for parsing
added confirmation option to the DebugPaste command in the plot debug paste functionality to enhance user experience by allowing the debug paste command to be executed
[ java ] use ` orelsethrow ` instead of ` get ( ) ` in ` endpointmanagementcontextconfiguration `
ggb - 1193 fix focus problem when click on the ` ` new ' ' button .
updated GoBinaryDescription and GoBinaryBuilder to use immutable arguments instead of mutable ones to enhance immutability and maintainability of the code structure
added URL handling for application . env in Jooby . java to ensure proper resource loading for logback application environment
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce a new class ` Second
fix wrong decimal format in elasticmeterregistry ( # 498 )
updated Contribution class to use final fields for email , author , and commits , and removed null check for email and author to improve code read
replaced a for loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
refactor how elements are retrieved and instantiated from the fields map to improve type safety and avoid potential ClassCastException
update error messages in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
[ fix ] testmultirendertarget now use a full loop for light lighting .
pac4j - webflow : added debug log if no current client can be find
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper namespace declaration is
added DSA parameter specifications and improved algorithm validation in KeyStoreManager . java to enhance security by integrating DSA parameters for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set process engine version in activiti deployment when deploy process
updated velocity configuration properties in SpecificCompiler . java to improve clarity and consistency in naming conventions
replaced the method ` isCurrentThread ` with ` verifyIsCurrentThread ` and ` verifyThreadIsAttached ` in ` VMThreads . java
added null check for map values in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues . java
corrected a typo in the method name from " interceptors " to " handlerInterceptors " to improve clarity and consistency in naming conventions
add config option to turn on / off oil wells in the worldgen .
added file validity checks for " . clean - me " in the ImportContext class and updated JobQueue to check for the existence of " .
improve error message in memoryrealm . readxml ( )
removed duplicate import statements from CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
added a wildcard import statement for ZipEntry and updated constants in ZipConstants64 and ZipEntry to enhance code readability and maintainability by using wildcard imports
refactor ` newFileSystem ` methods to enhance file validation and error handling in ` ZipFileSystemProvider ` to improve robustness and robustness of
replace Box . createHorizontalStrut with Box . createHorizontalGlue in IfControllerPanel . java to improve UI layout by using a more
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper connection setup for improved test coverage
added Gson serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable JSON serialization for
add databaseadapter . deleteadatabase ( ) method and use it in databaseadapter . deleterecord ( ) .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
correct the calculation of the response message length in AbstractAjpProcessor . java to ensure the correct length is used for processing the response message
improve shutdown and start / stop of admin console plugin
replaced the unregisterHandlers ( ) method with direct assignments for binaryConsumer and textConsumer in WebSocketImplBase . java to improve code readability
added configuration properties for device ID transformation and ID table settings in IoTDBDescriptor to enable dynamic configuration of device ID transformation and ID table settings
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test reli
updated the condition of ` mockTsp ` to check for ` ! = null ` instead of ` = = null ` to ensure that the
refactor script creation and encoding in Transaction and TransactionTest classes to improve code readability and maintainability
updated the expression to include " / schema / types / fieldType " in addition to " / schema / types / fieldtype " to support additional
added null check for valueCompleter in Completers . java and created OptionCompleterTest . java for testing to ensure correct handling of
fixed an issue that s3utils # listobjects throw an npe if the directory do n ' t exist .
changed data types of sourcePeerId and selfPeerId from String to int across multiple classes to allow for more flexible representation of peer IDs
refactor file upload logic by introducing a separate ` UploadFile ` method to improve code readability and maintainability by encapsulating file upload
updated the alpha value of the replyButton from 0.5 f to 1.0 f to improve the visual appearance of the reply button
added a mock for AccessLogContext and updated the expected string construction to include a timestamp to ensure proper timestamp handling and improve test reliability by
fix unit test for marycachetest . patch by jbellis
removed null checks and initialized subscribers in SettingImpl . java to simplify subscriber management logic and improve code readability
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary initialization logic in AbstractSaml10ResponseView . java to
replaced ` printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` for logging exceptions to improve error handling by providing a more
added a condition to check if the asset directory is in dev mode before processing to ensure that static assets are correctly handled when the file is not
updated the database put method to include writeOptions in RocksDBKeyedStateBackend . java to ensure consistency in the configuration of write options
changed the default format string from " value - tag - index " to " value - index " to simplify the format specification for better readability
move dijkstrabi hint to request . gethints ( ) instead of request . gethints ( )
[ multistage ] enable native command by default .
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming conventions
camel - 16463 : cameldestination should not log exception when process message fails .
make forwardpropagatetree public so that it can be use by subclass
updated SQL query in JDBCExample . java to include a second limit of 20ms to improve query performance by allowing more than 20ms for processing
[ v30 ] warn if $ { project . basedir } be not support during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future development
added zoom functionality in ShareActivity by implementing onKeyDown to handle back key events to improve user interaction by allowing zoom - out fab interactions
added a condition to skip deprecated fields in Json . java to ensure that only deprecated fields are processed in JSON processing
added floating - compose animations to the LauncherFragment to control the visibility of the send layout to improve user experience by providing visual feedback during floating
[ hotfix ] [ yarn ] fix checkstyle violation in utils
added progressable parameter to createSequenceWriter and related methods across multiple classes to enhance file creation efficiency by incorporating progress tracking
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
remove duplicate contributions and update panel ordering and colors in the ContributionListPanel to improve the organization and color management of contributions in the
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and adjust code formatting for consistency to improve code readability and maintain
added a check to set ` dPath ` to ` System . getProperty ( " user . dir " ) ` if it is empty to ensure
fix ( e - ac3 ) : set default channel count to 48000 if no sample rate be specify
log4j2 - 1349 add mapfilter . filter ( ) method , to allow custom filtering of map message
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification methods
updated the axis reference from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method call to ensure correct axis
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to improve clarity and
added test to expose issue curator - 72
fix # 5355 : fix # 5355 documentation for method and variable
refactor one - handed mode support checks in RecentsAnimationDeviceState . java to improve clarity and maintainability of one - handed
added onDetachedFromWindow method to cancel running tasks in AppsCustomizePagedView to ensure proper cancellation of tasks when the window
added support for a dictionary resource in the MorfologikAnalyzer and MorfologikFilter classes to enhance the Morf
replaced count and count checks with thrown state in ResultSetTest . java to ensure proper handling of exceptions during test execution
updated the initialization message parameters in GradleBuildService . java from " debug " to an empty string to provide a default directory for project
replace ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and add new exception detection methods in ` ExceptionUtil ` to improve handling of
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability
increased the await duration from 5 seconds to 10 seconds in ZipkinStreamTests to allow more time for the server to be up before
added support for deviantart . username and deviantart . password configuration .
replaced known Google signature constants with new Google primary key constants in PackageUtils . java to improve clarity and maintainability of the code by
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtleTest .
added a method to notify window state changes in WWindowPeer . java to improve event handling and logging for window state changes
added email description to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to provide additional information about email
update method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure the
modified the ` getISO3Language ( ) ` method to return ` lang ` only if the language length does not exceed 3 characters to ensure
refactor ChangeLogParser usage and improve update visitor creation in Liquibase . java to enhance code readability and maintainability by central
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when the screen is pinning is
added text - related fields and methods for handling no chart data in Chart . java to improve user experience by allowing customization of chart data display
added synchronization checks for header and response status updates in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when accessing
refactor chunk handler logic in NettyResponse . java and NettyResponseTest . java to improve code readability and maintainability by encaps
added HTTP / 2 headers and updated test cases for header limits and limits to enhance HTTP / 2 support and improve test coverage
fixed - redissonlocalcachedmap . entryset ( ) and keyset ( ) method throw npe if storemode = localcache .
camel - 14850 : fix potential npe in camel - jpa when use jpa endpoint .
updated jumpSpeed references from fallSpeed to jumpSpeed in PhysicsCharacter . java and PhysicsCharacter . java to ensure consistency in
added a condition to check if reparsedFunction is null in the syntax extensions check to ensure proper handling of functions when reparsed functions are not
renamed ` log ` to ` logger ` and refactored order book handling in ` BitstampPusherService . java ` to improve
added deprecated methods for retrieving old upload segment URI in FileUploadDownloadClient to improve code clarity and adhere to updated API standards
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to
added a new method ` assertPredicateFails ` to the ` LanguageTestSupport ` class and multiple assertions in ` JuelLanguageTest ` to
added alpha bound to the range of 0 to 1 in RecentsView . java to ensure the alpha value does not exceed the valid range
updated string replacement syntax in ManifestReversion . java to ensure proper formatting of the import package attribute
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future development
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to enable snippet functionality in the Java language server
added a loop to iterate over time buckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding
[ java ] move download list from code . google . com to chromedriver . storage . googleapis . com
( chore ) camel - pg : fix connection leak in camel - pg - event
updated import statements in FeedParser . java from ` com . sun ` to ` com . rometools . rome ` to align with
added logic to handle " Content - Length " header in TransferCompletionHandler and modified NettyTransferAdapter initialization in NettyAsyncHttpProvider to
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the constructor from the EnhancedRuntimeException class to streamline the code by eliminating unnecessary parameters
resolve intermittent failure in socketappendertest due to race condition
camel - 14850 : remove camel eventadminendpointbuilderfactory in favor of camel eventadmin
updated method signature for ` compare ` and ` compareFallback ` in ` ByteArray . java ` to include ` byte [ ] ` as a parameter
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing input proxy from
camel - 6770 fixed the camel - restlet unit test after camel - 6770
simplified the method signature of ` resizeAndRehashIfNeeded ` by removing the ` currentIdx ` parameter to enhance code readability and
move module - info . java and smokemodulepathtest . java to ` ` com . hazelcast . test . modulepath ' '
added a new method ` getSourceDirs ( ) ` to the ` JavaServerConfiguration ` class and modified the ` getCompiler ( ) ` method
removed the visibility of the menu item " menu _ open _ web " and added a menu item " menu _ mute _ hashtags
rename test methods from ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotAncestorOfIt
update y - coordinate calculations to ensure values are non - negative to improve robustness by preventing negative coordinates
added ` PathNotExistException ` to the ` selfCheckDataTypes ` method and improved error handling for missing data types to enhance robustness
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ runtime ] make mailboxexecutor nullable in abstractstreamoperatorfactory
hbase - 25905 add rpc precheck for settabestateinmeta and fixmeta ( addendum )
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` and improved print message formatting to enhance
updated the constructor of BlockJUnit4ClassRunner to use the Java class from the test class to improve clarity and ensure compatibility with the
[ drools - 786 ] fix kiewatcher to use lasttimedata instead of remoteitems
updated calculation for app cell width and padding in DeviceProfile . java to improve layout spacing for better user experience
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency
added a forceMerge call to the writer in TestMultiPhraseEnum . java to optimize the merging process for improved performance
make session . close ( ) return void rather than connection . close ( )
updated method names in GetLocations . java for clarity to improve code readability and maintainability
simplified exception handling by removing unnecessary stack trace printing to improve code readability and maintainability by reducing unnecessary stack trace printing
modified exception handling to ignore IOException instead of throwing it directly to improve error handling by avoiding unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features
refactor ` emitSnippet ` method to accept ` CharSequence ` instead of ` String ` and introduce ` wrapLastTerm ` method to improve
changed logging level from warn to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the usecaches option from the nio2endpoint
refactor database reading methods to utilize Resource objects instead of MaxmindProperties to improve code maintainability and simplify database retrieval logic
fix instructorfeedbackresultspageuitest and instructorfeedbackresultspageuitest for the new helper view
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance optimization checks for raw storage schemes
removed the public access modifier from several methods in the ApprovalStore and ApprovalsControllerService classes to enhance encapsulation by restricting
added a boolean flag ` mStartedDownload ` and a delayed task to cancel the download notification if it was previously set to ` true ` to
updated method calls from ` getOpenView ` to ` getAnyView ` and added a new method ` getAnyView ` to improve view management
updated project version from 1.0 . 11 to 1.0 . 13 and modified copyright year from 2008 to 2009 in JFree
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistency in
refactor GsonBuilder class to improve serialization logic to enhance performance and maintainability of JSON processing
do n ' t add center to circlecenters if it ' s null .
remove espresso home option and use graalvm home instead
doc ( javadoc ) : fix typo in javadoc
changed the access modifier of ` timeToDieInSeconds ` and removed the ` deleteSession ` boolean from ` DeleteSessionAction ` to enhance encapsulation
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code read
initialized ` sz ` to 0 and modified result initialization logic in ` JoinQParserPlugin . java ` , ` SolrIndexSearcher . java
updated the ` triggerMediaScan ` method to include the ` file ` parameter in ` FileDownloader . java ` to enhance functionality by allowing
removed conditional logic for posting test results in TestRunning . java to simplify result processing by eliminating unnecessary verbosity checks
added methods to set custom G - code text in MainWindow to enhance user experience by providing additional G - code settings
replaced PrintWriter with BufferedWriter and OutputStreamWriter in AdditionalJaxbMappingProducerImpl . java to ensure UTF - 8 encoding is used for writing to
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future development
added exception handling for unsetting system property in TestBadConfig . java to ensure proper exception management during tests
added a method to remove fragments and the action bar in GpsMainActivity to ensure the action bar is hidden after the current fragment is removed
updated spanishTokens and spanishTokens2 lists from " = " and " = " to " ( " , " ) " and "
updated range handling in RemoteMediaHandler and RemoteRawHandler to use ` Range . Byte ` instead of ` Range . asByteRange ( )
updated G - code file path and improved debug output formatting in VisualizerCanvas . java , and modified GcodeViewParse . java to
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " while
updated formatting of method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added null check for output stage and initialization of columns and data in StatementResource . java to ensure proper resource cleanup and ensure correct data is set
fix integritycheck error when file directory do not exist
removed unused import and added shardToClient map to ChaosMonkey . java to streamline code by eliminating unused dependencies
fix npe in configurationactivator when no configuration file be find .
updated formatting of the code in NestedRepositoryTreePanel . java to improve code readability and maintain consistency
updated ExtensionTypeHeader constructors to be public and added validation for extension type to ensure the type is within a valid range of 128 to 127 to
pdfbox - 4071 : do n ' t swallow ioexception , a suggest by valerybokov
change default value of ` deleteOnShutdown ` and ` pushOnShutdown ` from ` true ` to ` true ` and add getter and setter
updated the ` handleEvent ` method to include a ` triggerCallback ` parameter and improved error handling in the ` triggerSink ` to enhance
added a test for retrieving the first Python interpreter path in BuckConfigTest . java to ensure that the correct executable path is returned for Python
added a default signin button to the root pane in InitialAccountRegistrationFrame to enhance user interface by providing a more informative sign - in
added a new configuration option TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages to include the exception context to improve clarity of error messages for better debugging
move fieldaccessibilitycallback and methodaccessibilitycallback to org . axonframework . util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created ` OidcIdTokenClaim
removed the private ` center ` variable from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline the code by
simplified the condition for checking if the pcollection is equal to the specified name to improve code readability and maintainability
refactor SslContextFactory to improve SSL connection handling to enhance performance and maintainability of SSL connection management
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations and defaultLogEntries instead of hardcoded 5000 to improve clarity and consistency in
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for access confirmation
added a new file ` ConsumerClassLoaderFilter . java ` and updated ` ReferenceConfigTest . java ` and ` ApplicationConfigTest . java `
modified the ` shiftRows ` method to include additional parameters for copying row height and resetting original row height to enhance functionality by allowing flexibility in
rename ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods to ` setRolloverPressedIcon ` and ` setRol
updated TaskViewUtils , TaskViewSimulator , RecentsView , and RecentsView to use new methods for setting grid translation
refactor assertions methods for improved readability to enhance maintainability and facilitate future development
added null checks and return statements for the ` currentDateTimeFunction ` in multiple database classes to ensure consistent retrieval of the ` currentDateTimeFunction `
added a new method ` anonymousPath ` in ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a content description for tasks to enhance the
added a timeout value of 50 if the timeout is zero in CatalogTracker . java to improve responsiveness by allowing more time for meta availability
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
make genericitem . getstate ( ) return the default conversion of the item instead of null
added integration support for Hibernate ' s ClassImportIntegrator in the BidirectionalOneToOneNPlusOneTest class to enhance test coverage
removed an extra empty screen from the workspace and updated the startSearchPageIndex to use a default value of 0 when workspace screens are
updated initializations of baseDerivedRefs and HashSet in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to ensure consistent formatting of string values
refactor batch handling logic in SendingAccountor . java to improve clarity and correctness in waiting for batches
added a position variable and a method to set its value in WALPrettyPrinter . java to provide a way to seek to the end of the
updated the port number for the NettyTransceiver from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java
sort log event before generate a report , so that the event order be deterministic .
added a test method to CSVFileLoggerTest to verify CSV line formatting with double quotes to ensure proper handling of escaped quotes in CSV output
minor fix to dcorefchinesebenchmarkslowitest and refactored method name in abstractsequenceclassifier to be more
do n ' t send iq with non - remote recipient .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary implementation
updated configuration settings for HTTP plugin checks in Fetcher2 . java to improve readability and maintainability of the code
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java to ensure
updated package names from " other _ package " to " other _ package2 " in AstTests . java to reflect the correct context of the
[ minestom ] fix ` setdiameter ( ) ` and ` resize ( ) ` behavior in ` worldborder `
hbase - 26363 hmaster # getwalgroupsreplicationstatus ( ) should check if the master can host user region ( #
remove the caller from the login operation view when the user click on it
added a method to generate instance configurations and updated the usage of ` markDataResourceOnline ` to use this new method to improve code clarity
changed the access modifier of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
added a test method to verify error handling when reading an error message from a Maven project to ensure robustness of the project building process and validate
removed redundant condition checks in PropertyMap . java to simplify the code logic for better readability
updated the ` getControllerId ` method to accept a nullable ` configId ` parameter and modified related logic in multiple classes to enhance flexibility in
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition checking for refresh tokens in OidcConsentApprovalViewResolver to simplify the logic for determining consent prompts
removed a print statement from Http2SolrClient . java to clean up the code and improve readability
replaced a lambda expression with an anonymous inner class ` NoopGetter ` in ` BaggagePropagation . java ` to improve code read
refactor conditional logic in ConditionalOnEnabledResourceChain . java to improve resource management efficiency
added a condition to check if ` treeRoot ` has children before processing to ensure that ` treeRoot ` is not an instance of ` R
updated the method used to retrieve filtered streams from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` to ensure that the
updated log messages to include " CN1 " for clarity and added intent listener restoration to improve logging clarity and ensure proper handling of
updated the return value of the ` getBestDateTimePattern ` method to use a dynamic skeleton instead of a hardcoded " h : mm a "
removed KeyguardManager dependency and simplified device lock check logic in TouchInteractionService . java to simplify code and improve readability by eliminating
fix npe in case of custom disk offering change
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel and added position tracking to improve asynchronous file handling and enhance data integrity during
refactor ` SigInt ` and ` SigIntTest ` classes to improve code readability and simplify exception handling to enhance code maintainability and
ggb - 1642 : do n ' t update the bounding box when there ' s no text
change return value from - 1 to 0 in Asset . java to ensure correct behavior of asset processing
refactor ComputeBenchmark to use a constant valueLoader and mappingFunction instead of a hardcoded value to improve code readability and maintainability by
added a refresh listener to the UploadListFragment to notify data changes to ensure that the adapter reflects the refresh state of the adapter
use ` path ` instead of ` file ` in ` bibdatabasecontext ` and ` bibdatabasecontext `
replaced direct access to emitters . items with direct access to emitters . get ( i ) in ParticleEffect . java to simplify
refactor tomcat ' s service and engine handling to improve clarity and functionality to enhance code readability and maintainability by streamlining
updated error message formatting and changed print statement to println in Console . java and BuildRuleFactoryParams . java to improve readability of error messages
added a check to return early if the playback state is not PLAYING to improve performance by avoiding unnecessary processing when the playback state is
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the
updated Java2TypeScriptTranslator to handle inner class field clashes correctly and added a new test class InnerClassFieldClash to improve error
added logging and follow redirect filter configuration properties to DockerClientFactory and DockerClientProfile classes to enhance Docker client configuration flexibility for logging and redirection
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure proper
hhh - 10183 fix test on sql server 2008
added a ` revert ( ) ` method in ` OPCPackage . java ` and improved resource management in ` ZipHelper . java `
changed the visibility of the ` storeClassFile ` method from private to public to allow access to the method from other classes
updated the NO _ MORE _ ORDS constant in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to
updated error messages to be more descriptive and added a null check for Runnable in JavaVM to improve error reporting clarity and enforce non -
updated the condition to check for additional newline characters in LineReaderImpl . java to ensure compatibility with additional newline character detection
changed method parameters and variables from List to Set in multiple classes to improve performance and reduce memory usage during source file fetching
added a check to return early if the mesh has no vertices to optimize performance by avoiding unnecessary processing when there are no vertices
added verification error handling and updated method names in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replace ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root ,
truffle - api : add javadoc to implicitcast and typesystem
refactor JsonObject class to improve code structure to enhance maintainability and readability of the codebase
updated idle timeout condition in SelectChannelEndPoint . java and modified logic in HttpConnection . java to ensure proper handling of idle time calculations and improve
fix miss patch in marmlandblock . cansustainplant ( )
added functionality to create a table and retrieve its primary keys for a specific table in the database to ensure accurate metadata retrieval and handle multi - tenant
updated SimpleDateFormat to use Locale . US in HttpCookie . java and added a new class B6791927 . java with cookie validation to
remove duplicate db . close ( ) calls from DbHelper . java to improve code readability and maintainability
increased timeout duration in batch message listener integration tests from 1 second to 5 seconds to allow more time for processing to complete before proceeding
add tracera phase to economy allocation stage .
fix key event filter for save _ all , save _ database
refactor ObjectMapper initialization to use a static block that sets the system property for line separator to ensure consistent line endings for JSON processing
update windows path handling in NativeEnvironmentRepository . java to ensure correct path formatting for Windows environments
replaced instances of ` Application appTest ` with a single instance of ` Application appT ` across multiple test files to streamline the application
[ java ] remove unused record log validation code .
replaced GroupName with ErrorGroupName in ITSystemTest . java to improve error handling by using more specific error group names
remove dead code from testfuzzoptimizations . testfuzzoptimizations
added a private boolean variable ` reverseImage ` and updated its assignment in ` CameraManager . java ` to streamline the retrieval of the reverse
updated string comparisons in multiple Java files to use ` . equals ( ) ` instead of ` . equals ( ) ` for improved readability
do n ' t overwrite field that be involve in the mdm link on creation ( # 3395 )
updated JUnit imports and annotations from ` @ Before ` and ` @ Test ` to ` @ BeforeEach ` and ` @ Test ` while
fix bug in settypes . indexof ( column _ name _ rule _ id ) , use indexof ( column _ name _ rule _
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future development
updated triggerTime calculation to include the default time zone to ensure accurate time representation for alert notifications
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating ` AbstractMethodError ` instances to enhance
camel - 14850 : allow simple language to use $ { body . ognl } instead of $ { body }
remove unnecessary check for empty toExplore in AbstractParser . java to streamline code by eliminating unnecessary checks
camel - 14850 : camel - jclouds : fixed the c error of camel - jclouds
camel - 15656 : camel - test - infra - camel : fix the osgi bundle not release yet
added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest to verify the visibility of the ACC _ STRICT access
[ java ] increase driver timeout for channelvalidationtest .
added a new file ` FileExtensions . java ` with static immutable sets of CLANG source and header files to provide a centralized way to
replaced the existing ` ThreadLocalDateFormat ` implementation with a new static final instance for ` FORMAT _ THREAD _ LOCAL ` to simplify the
updated VMDeprecatedOptions to include new deprecated features to ensure compatibility with the latest features and improve memory management
added displayName property to Pac4jBaseClientProperties and utilized it in DefaultDelegatedClientFactory and DelegatedClientIdentityProviderConfigurationFactory
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination scenarios
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 .
fixed npe in forgeeventfactory . getcapabilities ( ) when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling by ignoring all relevant exceptions
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these classes are outdated and should not be used in future
updated variable names for clarity in HyphenationTree . java to improve code readability and maintainability
add some time to make the iq register more reliable .
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the constant description for ` PARAMETER _ NEEDS _ TO _ BE _ NAMED ` in ` ParameterBinder . java ` to cl
added a new boolean variable ` providersChanged ` and set it to false in ` ConfigurationManager . java ` to reset the ` providersChanged `
added a method to escape quoted identifiers in the token rewrite stream to ensure proper handling of identifiers in Hive syntax
added null check for type1 . getName ( ) and added handling for missing ' name ' entry for PostScript name in FileSystemFontProvider to
updated type casting and removed unchecked warnings in SolrResourceLoader . java to improve type safety and enhance code clarity
modified the boundary check for hit detection in the Window class to ensure correct behavior of the method based on its position
added a null check for appManifest before retrieving the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to streamline JSON deserialization and enhance serialization capabilities to improve code readability and maintainability by reducing dependency on J
added userName property and its getter / setter methods to the Driver and HiveSemanticAnalyzerHookContext classes , and updated SQLOperation to
camel - 14850 : camel - xslt component now allow to configure the xslt source , url , and inputstream
added HadoopShim integration to ContainerRunnerImpl and TaskRunnerCallable classes to enhance functionality by integrating Hadoop shim functionalities
updated expected file size in ShadowAssetManagerTest , modified URI creation in ShadowContentObserverTest , and removed unnecessary variable assignments in ShadowDownloadManager
fix potential npe in coyoteadapter when no context be available .
camel - 14850 : fix flaky test in throughputlogger
replaced the use of ` System . getProperty ( " java . vm . version " ) ` with ` Platform . isDebugBuild ( ) `
replaced references to ` MeterStatisticsManager . statisticsOperationMap ` with a new ` statisticsModelMap ` to streamline the management of meter
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback configuration file
updated method signatures to include @ NotNull annotations and renamed DefaultCookieValueManager to NoOpCookieValueManager to improve null safety and clarify
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to standardize command escaping behavior based on
refactor ` waitUntilReadyAndSucceed ` and ` waitUntilReadyAndTimeout ` calls to use a try - with - resources
changed the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify that the test class is
updated the closing brace formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate shield addresses in RpcApiService to provide functionality for generating shield addresses from the wallet
changed return type of readConsoleInput ( ) from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal
updated regex patterns and initialized sRunFlavor in TestStabilityRule . java to improve matching accuracy and maintain consistency in flavor identification
added a condition to decrement mvToMatch in DefaultSolrHighlighter and updated highlighting tests in HighlighterTest to ensure that multi - valued fields
modified the ` tryToLogin ` method to include username and password parameters in the ` tryToLogin ` method to enhance the login process by
removed unused imports and refactored entity management logic in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrown
camel - jms : fix checkstyle issue in producer / jmsproducer . java
removed ` wrapCollection ( parameter ) ` from the ` update ` method call in ` DefaultSqlSession . java ` to simplify the method signature
updated imports in BTCEAdapters . java to include IllegalCurrencyException and added logging for unknown currencies to improve error handling and log warnings for
remove redundant code in durableconduitbridge . addsubscription ( ) .
pdfbox - 4071 : increase default value for tolerant , a suggest by valerybokov
updated ` startController ` method to include tenant isolation configuration and added new tenant creation methods in ` ClusterTest ` and ` HybridClusterIntegration
replaced ImmutableMap builder with direct casting of response values to simplify code and improve type safety
added a check to ensure attrs . size ( ) is greater than 0 before checking if it is less than or equal to 4096 to prevent potential
added methods to retrieve project JDK name , type , and language level in ` AbstractIjProjectConfig ` , modified ` IjProject
corrected the spelling of " Experimental " in the description of the HiveSessionProperties . java file to improve code clarity and maintain
added tests for ` GrantedAuthorityEffectiveAclsResolver ` to handle user - specific acls resolution to enhance test coverage and ensure correct functionality of
replace reflectionclassdeclaration with javalangobject in javaparsertypedeclarationadapter
added button count management logic in XToolkit . java to limit the number of supported buttons to 24
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java to ensure compatibility with the latest Java version
added a new ` MessagePackFactory ` class with multiple overloaded methods for creating instances of ` MessagePacker ` and ` MessageUnpacker
add is _ desert tag and is _ cave tag to forge ' s biome tag provider . close # 786
rename method ` present ` to ` draw ` in multiple screens to improve clarity and consistency in naming conventions
refactor layout handling in ComponentGroup to differentiate between horizontal and vertical orientations to improve UIID assignment for group elements and toggle buttons
replaced the matcher check from DOI _ URL _ PATTERN to a direct match call to improve code readability and reduce unnecessary dependency on matcher
replace ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput
[ java ] remove iscounterunavailable from clusteredserviceagent and make commitposition counter non - volatile .
add test for record id class with @ idclass ( idclass )
refactored port resolution logic in HttpConverterRegistrar to improve error handling for malformed URLs to enhance robustness and provide clearer error messages when
cloudstack - 7892 : fix npe in listvirtualmachines api when the host / pool id be not specify in the list
replaced file input closing method with file length calculation in NRTCachingDirectory . java to improve resource management by using a more efficient method for
updated JavascriptCompiler to use a new method for generating Java classes and improved exception handling to enhance code clarity and maintainability while ensuring proper
removed synchronization from the store method in UISettings . java to ensure thread safety when accessing the UISettings class
added native text input checks in TextField . java and changed the access modifier of fireDataChanged method from private to public to enhance text input handling
improve spannerio retry error message when emulator only support one transaction at a time
no effective change - use diamond operator instead of generic one
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with a test for object cl
replaced ` getClaim ( ) ` with ` getStringClaim ( ) ` for ` nonce ` and adjusted logging levels for replay attack detection to
added a condition to check if a field is a relationship field to ensure proper handling of relationship fields in the DCInputSet
added server slogan functionality to the capabilities table and updated related classes to enhance functionality by providing server - specific slogan information
updated conditional logic in DrawerActivity to use ' = = ' instead of ' ! = ' for menu item comparison to improve code readability
replaced a failing test with an assumption check in SolrRequestParserTest . java to ensure that the test only runs if a network connection is
added a check to return early if there are no missing symbols for the specified build ID to improve performance by avoiding unnecessary processing when no missing
updated test cases in StringHelperTest . java to include additional data entries to enhance test coverage and ensure correct data formatting
added a warning log for cases where the data provider returns an empty array or iterator to inform users that the test should not perform anything
replace collections . empty _ map and collections . empty _ set with collections . emptyList ( ) and Collections . emptySet ( ) in multiple Java files
update freeplane version to 1.9 . 8 and fix selection style
updated the restitution parameter from ' mass ' to ' restitution ' in PhysicsRigidBody . java to ensure the
added a new file AutoFtpActivity . java and updated FtpHelper . java and FtpHelper . java to implement FTP testing functionality
refactor token type checks in BaseSemanticAnalyzer to use a local variable for better readability to improve code clarity and maintainability by
added methods to retrieve and set component state in multiple classes to enhance component management capabilities in the application
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` to handle serialization and deserialization of the ` Remote
pdfbox - 4892 : fix typo ; update javadoc
updated file reading methods to use InputStreamReader with UTF - 8 encoding and added suppression warnings for S1135 and S3551 to improve
added assertWorkingScoreFromScratch method to AbstractScoreDirector to ensure that shadow variables are not stale during processing
updated the SEMIJOIN _ CONVERSION configuration option from " hive . enable . semijoin . conversion " to " hive . optimize . semi
log a debug message if the message content be not an io . netty . buffer or java . io . serializable instance
replaced the ` removeFile ` method with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in `
added assertions to verify the presence and hash of transactions in PollingTransactionReceiptProcessorTest to ensure that the transaction hash reflects the expected behavior
deprecate ichemaregion # constructschemablacklist ( ) and fix test
throw a rendererexception instead of a nullpointerexception if the samplemimetype be null .
replaced ` notify ( ) ` and ` wait ( ) ` calls with ` notifyAll ( ) ` and ` wait ( ) ` in
added ` @ JsonCreator ( mode = properties ) ` to the ` @ AllArgsConstructor ` annotation in ` J . java ` to ensure
added SQLFeatureNotSupportedException for index creation on views in MetaDataClient . java to ensure proper error handling for unsupported index creation in views
added a new file ` Website . java ` and updated ` PopulatorImplTest . java ` and ` PopulatorImplTest . java
added a setup method to set the default locale in BSFormatterTest to ensure consistent default locale is used for tests
log a warning if a badly download jar file be detect .
replaced ` containsString ` with ` equalToIgnoringCase ` for sha1sum assertion in ` MultiPartParsingTest . java ` to
added checks for single and variable expressions in SimpleExprGenerator to ensure proper handling of variable expressions in the analysis
camel - 14263 : camel - vertx should not create a vertx instance if it do not exist .
updated the writeAttributes method to include the NodeModel parameter instead of null to ensure that the writeAttributes function uses the correct NodeModel instance for
updated log messages to use " Synchronized " instead of " Synchroned " and added null checks for file and current directory retrieval to improve cl
added a new property ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
updated resource path resolution to use MavenPaths instead of MavenTestingUtils to improve compatibility with the Jetty toolchain testing framework
added validation logic for URI and MetaData register DTOs in RegisterServerConsumerExecutor . java and updated URIRegisterExecutorSubscriber . java to improve
update isPlaying condition in GwtMusic . java to ensure isPlaying is only set when the sound is not paused
added a new permission constant ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` Captions ` class and updated the ` Main
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor . java and added trace functionality in QueryRunnerTest . java to improve query
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use predefined emoji values to improve clarity and maintainability of test assertions
replaced the native method ` NMTWaitForDataMerge ` with new native methods ` NMTOverflowHashBucket ` and ` N
[ hotfix ] [ serializer ] migrate eitherserializersnapshot to implement new method of resolve schema compatibility
updated AddressResolverOptions to replace DEFAULT _ NDOTS and DEFAULT _ ROTATE _ SERVERS with DEFAULT _ NDOTS _ RES
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a test for ` RequestR
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated references from " liquibase / parser / core / xml " to " www . liquibase . org / xml /
move commonmimetypelocator from source to test . source package
changed the ` repoState ` from ` INIT ` to ` NOT _ REQUIRED ` across multiple classes to align the state representation with the intended requirements
updated the comparison logic in GenerateChangeLogTask to include schema types as a parameter to enhance comparison accuracy by including catalog and schema information
replace JUnit Test imports with TestNG annotations in TestBackwardAnoamlyFunctionUtils . java to ensure compatibility with the latest testing framework
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG rendering to facilitate testing of progressive JPEG
replaced alpha settings and modified material management in MaterialLoader . java to improve clarity and maintainability of the material loading process
add 32 - bit architecture support for window in native - image building
added a null and length check before setting the size in Label . java to avoid potential NullPointerException when text is null or empty
modify readVarInt ( ) to divide by 1 000 000 to ensure proper handling of integer values in readVarInt ( )
changed ` PushUtils ` , ` ThumbnailsCacheManager ` , and ` PushUtils ` to be ` final ` and added a private constructor
simplified the calculation of the length variable in RocketPanel . java to improve code readability and maintainability
removed unnecessary cast to MockDirectoryWrapper when setting enableVirusScanner to false to simplify code and improve readability by eliminating unnecessary
updated the CSV file path in the componentPresetDao load method to ensure correct loading of presets from data files
added accessibility check for taskbar visibility in TaskbarStashController and updated references in ActivityContext and FloatingIconView to improve access
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNode ( ) ` in ` NodeManager
pmd : add support for target 1.5 and target jdk 1.3
replaced PowerMockito with MockitoJUnitRunner in QuotaResponseBuilderImplTest . java to simplify Mockito usage and improve test
added error and output stream handling in TestSchemaToolCatalogOps . java to improve error reporting and provide better debugging information
added a DFSClient parameter to the SaslNegotiateHandler and related methods in FanOutOneBlockAsyncDFSOutputSasl
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query functionality by integrating repository metadata
add support for entityresolvers2 and entityresolvers for xml - based parsing .
removed duplicate import statements for various PhoenixDatabaseMetaData constants from MetaDataEndpointImpl . java to streamline the code by eliminating
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry functionality in TxnHandler to
refactor variable names from ` xl ` to ` xAxis ` for consistency and clarity to improve code readability and maintainability
added character validation methods and a set for Windows system names in FsUtils . java to ensure proper handling of printable and non - printable characters in
rename method ` selenide . in ` to ` selenide . using ` to ` selenide . using `
added process plugin configuration handling and modified exception handling in DefaultMaven . java , DefaultLifecycleExecutor . java , and DefaultProjectBuilder . java
added ' d ' to the division operator in ProxyConnectionManager , ServerTrafficCounter , and ProxyOutputStream classes to ensure that the division operator is
fix integration test that fail on window
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
add ` ` admin _ button ' ' attribute so jsp can displau new ` ` create top - level community ' '
added atomic thread names to longCompactions and shortCompactions in ThreadPoolExecutor to improve thread naming for long and short compaction executions
updated the method of obtaining the package name in WallpaperChooser from the application context to a resource - based approach to improve flexibility
updated player visibility retrieval in Near . java to filter out visible players from the plot to improve user experience by ensuring only visible players are displayed
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
rename MlibOpsTest . java file to improve clarity and consistency in naming conventions
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added unit tests in SchemeGeneratorTest
simplified key and initialization vector handling in UploadFileOperation . java to improve code readability and streamline encryption process
added Stability annotation to WorkProfileTest . java to address a test related to local and post - submission issues
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary logic
replaced the method call to setCursorPosition with input . setCursorPosition in GwtTestWrapper . java to ensure the correct cursor position
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced ` LockFreeBucket _ FinalFields _ Cache
nodeprobe : add ' tpstats ' to the list of available thread pool mbean
updated the method to retrieve maximum bitrate from user preferences in ExternalPlayerActivity and PlaybackController to ensure accurate bitrate retrieval based on user
updated ZipkinHttpSpanExtractor to include checks for presence of trace and span IDs and refactored span handling logic to improve code clarity
move isbsqswapordaoactivated ( ) to abstract method so that it can be override by subclass
do n ' t use reflection to get the right icon of a completion suggestion
added a method to set the project in the file system to ensure the application uses the correct project context
added ProjectFilesystem parameter to several constructors and methods in JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario classes to enable
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
refactor MetricsDSLContext class to improve code readability to enhance maintainability and facilitate future development
removed the VersionConfig interface and refactored the VersionBuckConfig class to simplify the code structure and improve readability by eliminating
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve robustness by preventing potential
make assertions . validatetypes ( sourcefile , typevalidation ) public
fix : update gapic - generator - java with mock service generation fix ( # 536 )
added SLF4J logger imports to SimulationStatus . java to enable logging capabilities for simulation status updates
updated VERSION _ POSITION _ Y and VERSION _ FONT values in Splash . java to reflect the new versioning behavior of the splash screen
added a runLater call to the notification addition in UserInterfaceComponentImpl . java to ensure notifications are executed on the Event Dispatch Thread using the Event
updated mock behavior in ReturnsElementsOf . java and added additionalAnswers . java file to enhance testing capabilities and improve code clarity
updated error message from " not allowed use non - equality " to " only allowed using equality " to clarify the purpose of the error
add a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure that stored fields are correctly stored
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to use this method to improve
camel - 6665 : fixed bean component to correctly detect ambiguous method invocation with parameter type .
updated references from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added a ` bufferOwned ` flag and modified constructors in ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` to manage
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing users to forget
[ java ] fix typo in jerseyclientconfiguration javadoc .
remove reference to characterstreamreadingmessagesource and characterstreamwritingmessagehandler from camel - core .
updated variable names from ' s ' to ' o ' in InstanceOfPatternMatchTest . java and RemoveRedundantTypeCastTest . java
added methods to manage the last column and row indices in the StringDict and Table classes to ensure proper handling of empty arrays in the table
deprecate the ` createContainerCmdHooks ` field in ` GenericContainer ` and implement ` AutoCloseable ` in ` Container ` to enable
updated logging level from info to error in MediaInfo . java and refactored exception handling in RendererConfigurationTest . java to improve error logging
added a schemapattern option to the configuration in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow configuration of the schemapattern
bugfix : return an empty string instead of null when no id be provide
refactor calculations for the ratio and bitmap creation in AndroidGraphics . java to improve accuracy of bitmap dimensions and enhance code readability
refactor Base64 encoding methods for improved efficiency to enhance performance and readability of encoding operations
sulong : fix miss miss specialization in sulongglobalcontainer
simonstewart : unignoring a test that fail on the iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code readability and maintainability
replaced ` ResName resName ` with ` int resId ` in ` AttributeResource ` and modified constructor parameters in ` OverlayResourceIndex
[ java ] resolve context tl file before use it in defaultdockerclientconfig .
try to fix flaky test : simplereactiveelasticsearchrepositorytests
added a loop to handle type variable assignments in capture method and created a new class T6450290 with generic classes to improve type safety
added logging level configuration to LoggingFlags . java and implemented logging level management in LoggingOptions . java to enhance logging capabilities by allowing users to specify
added logging statements and modified method signatures in LauncherModel , SecondaryDropTarget , ModelWriter , and PackageUpdatedTask to improve traceability and
added ` allFilesOption ( ) ` method implementations in ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity `
added deprecated methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` to indicate that these methods should no longer be used
updated the calculation of ` numPredictiveAppCols ` to consider phone device type to improve accuracy of predicted app columns based on device type
update StringUtils to convert content to UTF - 8 encoding to ensure proper handling of character encoding in string processing
added a new class RequestMatchers with methods for matching request matchers to enhance security checks for request matching in the application
do n ' t use ` ` button ' ' instead of ` ` inputbox ' ' for temporary mode
updated calculations for height and width in the ProgressBar class to account for background height and width adjustments to ensure proper positioning of the knob
make json - based - function - manager . path - to - function - definition relative to the test directory
changed ` extra _ L0 ` , ` extra _ L1 ` , ` extra _ L2 ` , and ` extra _ L4
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handler only proceeds when the state
updated layout metrics calculations for landscape and portrait layouts to improve layout accuracy and consistency in layout management
added a condition to check if the redir file is " / robots . txt " in the HttpRobotRulesParser class to ensure that the
[ netbeans - 5271 ] fix wrong warning icon in callhierarchytopcomponent
replaced " continue " and " close " buttons with " createWorld " and " return " buttons in AdvancedGameSetupScreen . java to
updated the null check condition in UDFOPDivide . java and added a new test class TestUDFOPDivide . java
refactor code formatting and improve exception handling in ` FlowJob . java ` and ` StopAndRestartFailedJobParserTests . java ` to
replace ` filterProcessesUrl ` with ` matcherBuilder ` in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser ` to enhance
added onDestroy ( ) method to unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource cleanup when the activity is
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency in naming con
refactor multiple Java classes related to command handling to improve code organization and maintainability
added a request timeout configuration to the RaftServerConfigKeys class to ensure proper handling of request timeouts during RPC operations
replaced error logging with debug logging in TsFileResourceManager . java and modified tests in ResourceManagerTest . java to improve logging clarity
added a method to set the system properties in the MavenModuleLoader class to ensure proper management of system properties during module loading
added metrics for readiness check status in ServerMeter and updated HealthCheckResource to use these metrics to enhance monitoring capabilities for readiness checks and improve
add miss custom itemblock registration for animatedtorch
added null check before closing the writer to prevent potential NullPointerException when the writer is not initialized
added a method to retrieve Hive configuration from a specified directory and updated references in multiple test classes to utilize this new utility method to improve code
added " Muting Users " link to the list of users in FeaturesActivity . java to enhance user experience by providing access to Muting Users
added a property to initialize ` jdk . reflect . useDirectMethodHandle ` to disable direct method handle usage to improve performance by avoiding
hbase - 22727 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 18686 ] [ yarn ] fix the npe when the environment variable be not set to the directory
refactor method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) . getPronunciations ( )
removed unnecessary newline characters from JSON string representation in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added an extra key " id " to the compose data in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to store
[ java ] log a warning if a topic be lose during shut down .
replace IOException with NoClassesFoundToAnalyzeException in FindBugs2 . java and add a new exception class NoClassesFoundToAnalyzeException .
replaced ` java . security . Key ` import with ` java . security . PublicKey ` import in ` KeyFetcher . java ` to ensure
updated the ` isIncompatible ` variable from ` false ` to ` true ` in ` DLNAResource . java ` to enable compatibility checks
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and consistency in
pdfbox - 4071 : check for empty range array , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 2290 - fix unit test and add
set the default value for enableOffHeapFormat and update default star tree format version from " v1 " to " OFF _ HEAP " to
modified the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to improve user experience by ensuring the title does not
refactor JColorChooser and BasicColorChooserUI to utilize ColorChooserComponentFactory for previewPanel initialization to improve code clarity and ensure
changed log level from info to debug in DefaultBuildExtensionScanner to reduce log verbosity for improved debugging
added a null check for reusableBitmap before setting inMutable and inSampleSize to avoid potential NullPointerException when reusableBitmap is null
added a method to retrieve the layout parameters of the FakeView class to provide access to layout parameters for testing purposes
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java and created a test for it in CursorSimpleTest
pdfbox - 4892 : fix for pdfbox - 4893 , pdfbox - 4894 , pdfbox - 489
temporarily ignore this test until we fix it
added a private String field ` ts ` with getter and setter methods in the ` Message ` class to provide a way to access and modify the
[ opengrok ] move exceptionmapper to web - api
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
fix miss legacy parameter in isochrone endpoint
removed the ' public ' access modifier from multiple test classes to enforce package - private visibility for better encapsulation
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and maintainability
fix ( bootstrap ) : allow shadowclassloader to be use in eclipse . launch
[ drools - 5369 ] allow to disable numeric value in sheet ( # 5369 )
change log level from info to debug for default value logging to reduce log verbosity when debug logging is not enabled
added null checks and improved joystick handling in Lwjgl3Controller and Lwjgl3ControllerManager to ensure
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor port forward saving logic in PortForwardListActivity to improve readability and maintainability of the code
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to the ` GlobalConfiguration ` class and integrated it into the ` Main `
refactor SyncedFolderObserver to include a null check for the folder name before creating a PersistableBundle to improve robustness by avoiding
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future development
simplified touch event checks in StatusBarTouchController . java and modified gesture state checks in TouchInteractionService . java to improve code read
refactor ` VectorReader ` from an interface to a class and update its package structure to improve organization and encapsulation of vector reader functionality
updated import statements from ArgumentMatchers to Matchers in multiple test files to align with the latest Mockito API changes
updated methods in AndroidInstrumentationTest , AbstractPathSourcePath , Serializer , and AppleCxxPlatformsTest to use getRelativePath directly instead
updated method signatures and implementations to use RecordReaderFileConfig instead of RecordReader to improve clarity and flexibility in handling record reader configurations
added a null check for the extractor before instantiating it in ControllerMethodInvoker . java and updated annotations in Param . java and Params . java
cloudstack - 7892 : fix secondary storage limit for account and domain
add a potionshiftevent to the guiscreentropevent , and fix a bug in inventoryeffectrenderer .
added a deprecated constant for COLD _ READS _ TO _ OMIT _ KEY and removed its value from uncheckedOptions to indicate that the
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure proper cleanup of resources after tests
[ issue # 5231 ] fix the bug of popmessagerequestprocessor ( # 5239 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to ignore the test due to a moment issue
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to enhance websocket upgrade functionality and ensure proper session management
added support for a configurable connection timeout in AndroidImplementation . java to enable flexible connection timeout management in the application
updated getUserAccessPermissions and getTeamAccessPermissions methods to return list of RegistrantAccessPermission objects for users and teams to enhance permission management
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing with quoted casting
updated file access assertions to differentiate between root and non - root environments to ensure correct file accessibility based on the operating system
added logging functionality and improved executor selection logic in FixedThreadExecutor . java to enhance traceability and control over thread management based on available processors
added null check for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerException when accessing the field
updated method signatures to use InitializingBean instead of CasEventListener to improve compatibility with Spring ' s event handling framework
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and encapsulation
added a custom close method to the DeflaterOutputStream class to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` with native methods for retrieving system properties to provide tests for JVMTI GetSystem
do n ' t allow @ inject to be annotate with @ declaredbean in beandefinitioninjectprocessor
[ scene2d ] save camera / lightcontrol data to jme . jme . export ( )
refactor PopupNotificationPanel to use a parent window for disposal to improve code clarity and ensure proper handling of popup window disposal
replaced instances of NoInstanceException and InvalidInstanceException with a unified InferenceException and removed redundant exception classes to streamline exception handling and
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` property
changed the parameter type of the ` after ` method from ` int ` to ` long ` in ` VerificationAfterDelay ` to allow for more
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
added conditional logic to set icons based on RTL support in Toolbar and FlowLayout classes to ensure proper title display based on the target '
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the instantiation of ` StopFilter ` to
updated email address handling in EmailsTest . java and SystemErrorEmailReportTest . java to use an InternetAddress instance to improve clarity
fix bug : permission error be show when it should n ' t
added support for dynamic TTY name retrieval based on version in JansiNativePty . java to enhance flexibility in obtaining the
updated BandwidthProcessor to use bytesSize instead of bytes for bandwidth calculations to improve accuracy of bandwidth estimation based on dynamic properties
replaced direct assertions with Awaitility ' s await syntax in Issue410Tests . java to improve code readability and maintainability by
refactor API URL constants in EaseeBindingConstants . java to use a common API base URL to improve code organization and maintainability by
[ hotfix ] fix flaky test in kafkaioit
updated regex matchers in SearchResultMatcher to use is ( itemName ) instead of anyOf ( ) to improve clarity and accuracy in JSON validation
added SSL - related imports and implemented trust - related functionality in OkHttp . java to enhance SSL handling for improved security and certificate validation
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and functionality of long click
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added nullable stdout and stderr fields to ShellStep and updated the escapeAsBashString method to ensure workingDirectory is not null to prevent potential
increase timeout for asyncappendertest from 1000ms to 2000ms
updated the escapeDatabaseObject method to include an additional parameter for the object type to enhance flexibility in handling database objects by allowing different object types
added a boolean variable ` inputChanged ` and modified the condition in ` MaterialRenameDialog . java ` to ensure that the input field reflects
added a new method ` setState ` to ` ShadowDisplay ` and a test for state change in ` ShadowDisplayTest ` to ensure proper functionality
add a directinvocationservice interface to allow the dispatcher to use it .
make sure x and y be ^ x and ^ y in gwt backend
updated SQL query conditions in PgDatabaseMetaData . java to account for server version differences to ensure compatibility with PostgreSQL server versions prior to 9.0
[ java ] add miss @ nullable annotation to message field in queuechannel
refactored the ` getPathsFromResource ` method to use ` URI ` instead of ` String ` for improved clarity to enhance
added support for handling Jenkins nodes in the CollectorServer to improve monitoring and application management for Jenkins nodes
refactor header attribute resolution in ` HeadersBeanDefinitionParser ` and add tests in ` HttpHeadersConfigTests ` to improve handling of secure HTTP headers
refactor EOFException handling and improve logging conditions in ProtobufLogReader . java to enhance readability and clarity of error messages for malformed edits
removed redundant calls to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer . java and added a shutdown method in
camel - mybatis fixed switch / cases indentation see camel - 14540
updated GoAwayGenerator , GoAwayBodyParser , GoAwayGenerator , GoAwayBodyParser , GoAwayFrame ,
refactored the creation of ` AuditEvent ` and ` AuditEventTests ` for improved readability to enhance code clarity and ensure
added bounds checking for FLOAT _ ROUNDING _ ERROR in Interpolation . java and changed return value in cbrt method to ensure proper handling
move default folder to / defaults / instead of / defaults /
refactor code to store the executable path in a variable before adding it to the builder to improve readability and maintainability of the code
added multiple assertions to compare PointRangeQuery instances in TestPointQueries . java to enhance test coverage for PointRangeQuery instances
hbase - 2649 fix testhfilecleaner . testarchivedhfile ( ) test failure
added a condition to check if the download file name matches the original file name before setting the file label to ensure that the file label reflects
do n ' t swallow exception in jedisclustercommand
[ hotfix ] make rowtimeminibatchassgineroperator chain strategy always
replaced RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor . java and added new test cases
replaced the initialization of ` hmap ` and modified benchmark methods in ` QMapReadRandomKeyBenchmark ` and ` QMapReadSequential
added initialization of G _ SCH _ B with a new HashMap in HybridPlotWorld . java to ensure the G _ SCH _
added checks for empty fields and refactored identifier handling in GroovyEngine . java to improve code robustness and maintainability by avoiding potential
make sure ` ` 0 ' ' be not draw a ` ` 0 ' ' , not ` ` 0 ' '
added configuration options for TCP keepalive and read socket timeout in HiveConf . java and modified HiveServer . java to utilize these settings to enhance
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in the ` FileRenameAction `
no effective change - code cleanup - remove unused import
replaced Joda - Time imports with built - in TimeUtils for time conversion in RealtimeSegmentRelocator . java to improve code
vpc : do n ' t return success when vpc fail to start
updated interpolation logic in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to ensure windowAlpha is non -
updated fatal error message to reference Spring Security 4.0 instead of 3.2 to clarify that the schema cannot be used with Spring
refactor multiple Java classes related to protobuf assertions and values to improve consistency and enhance code readability across the project
changed instance variables from non - final to final in multiple classes to enforce immutability and enforce immutability of variables
added a new file TestConfigureUDF . java and modified ExprNodeGenericFuncEvaluator . java and ExprNodeGenericFuncEvaluator . java to
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
refactor logger initialization to use the LoggerFactory directly to improve code readability and maintainability by eliminating unnecessary variable declarations
updated method names from updatePurgedShardNodes and updatePurgedShards to deletePurgedShards and deletePurgedShards to improve clarity
added support for Java 17 and 17 - preview versions in JavaLanguageModule to ensure compatibility with the latest language features
make fileappenderresiliencetest wait for compression job to finish before stop
[ java ] remove unnecessary assert in volatilereadnode . getlastlocationaccess .
added a method ` getSteps ( ) ` to return an unmodifiable list of steps in ` SimpleJob . java ` to enhance functionality by allowing
removed unused fromBase58 and toBase58 fields from JsonRpcApiUtil and TronJsonRpc classes to streamline code by elimin
refactor currency pair creation and retrieval logic in BitstampAdapters . java to improve code readability and maintainability
update longtasktimer to use base time unit instead of nanosecond
[ hotfix ] [ euphoria ] do not use hashpartitioner in reducebykeytranslator
updated the handling of color values and preferences in HostEditorActivity to utilize CharSequence and ListPreference for better type safety to improve code clarity
rename incompatibledatabasehandler to databaseversionhandler for consistency
added a constant for maximum number of tweets in conversation and updated the condition in the loop to ensure that the loop does not exceed the defined
updated the refresh interval from 1 second to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map refresh
[ hotfix ] fix queue persistence of partially acked deleted tail page
fix checkstyle issue in util / glowserver . java ( # 703 )
refactor the grow method in DataIO . java to improve code readability and maintainability
removed unnecessary import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
camel - 14850 : add getmittedfilename ( ) to attachmenthttpbinding so that it can be use by camel
added a method markReadForLoad ( ) to the LauncherFragment class to mark the fragment as read for loading state
updated the ` main ` method to throw ` ClassNotFoundException ` and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException ` to
added a method ` checkForSpillPossibility ` to handle partition allocation in ` HashAggTemplate . java ` to ensure proper handling of partition
replaced direct usage of ` info . info . getDocStoreSegment ( ) ` with a local variable ` dsName ` in ` IndexWriter
added a default name ID format and a check for supported name formats in SamlProfileSamlNameIdBuilder . java to ensure the default name
added redirect functionality and error handling for password change aborted in ChangePasswordPage . java to improve user experience by providing clearer feedback during password change
updated closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file containing font size checks for MetalLookAndFeel and system look and feel to remove unnecessary
added validation for filter begin and end dates in RRD4jPersistenceService . java and changed logging level from warn to debug in RRD
added checks to return early if numVectors is less than or equal to zero to optimize performance by avoiding unnecessary processing when numVectors is zero
test : migrate executablereferencetest to junit 5 ( # 2635 )
added null checks before setting view and glassPane to null in JLayer . java and created a new bug6994419 . java
camel - 14850 : add option to wiretap to allow to easily turn it into a dynamic endpoint .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 5369 ] add planner . enable _ topn option to pushlimittopn .
[ java ] remove unused aerondirectoryname from agent log test .
fixed - rbatch . ping ( ) and rbatch . pingasync ( ) method do n ' t work correctly in batch mode . #
replaced the deprecated ` getConfVarInputStream ` method with a new method ` getConfVarURL ` and introduced a new class ` LoopingByteArray
updated the device reference from ` defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` BaseModelLoader . java ` to
modified the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper menu inflation and item selection behavior for
refactor CertificateValidator class to improve certificate validation logic to enhance security and maintainability of the code
add hawtio . dirname system property to set home dir
added a condition to return a SINGLE _ SPACE when comments are empty to improve handling of empty comments and whitespace scenarios
make field volatile in dictionary class to avoid potential npe .
removed printStackTrace ( ) call from Throwable in ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
moved ` CustomItemDropTest ` to the ` integration . regression ` package and refactored it to extend ` BaseTest ` to
added conditional checks for partition existence in DDL tasks to ensure partitions are only created if they do not already exist
nfs secondary storage resource : read all the byte from the input stream , not just the last one
[ java ] remove redundant call to controlrequeststreamid in cluster service .
added support for spatial operator " ogc : spatial _ operators " and " fes : spatial _ operators " in the CapabilitiesTransformer class to
added LuceneTestCase import and annotation to BasicDistributedZkTest . java to address a known issue related to SOLR - 2
updated condition checks in Http11InputBuffer . java for better readability and logic flow to ensure proper handling of preface validation during request processing
[ java ] set cluster . ingresexclusive to false by default .
replaced hardcoded HBASE _ OFFHEAP _ PCT _ KEY and HBASE _ BUCKETCACHE _ SIZE _ KEY with an
added methods to manage and update the running record count in JSONRecordReader to improve record tracking and ensure accurate reporting of record counts
added logic to filter out items based on a specific year pattern to ensure that only valid years are processed in the merged items list
updated drawColor calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use a fixed color value instead of
removed OpenGL version check from the render method to ensure compatibility with OpenGL ES 2.0 rendering
added ActionContext import and reset context in BackgroundProcess . java to ensure proper context management during processing
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database and table names to enhance table name handling and
added a connection timeout configuration in TestConnections . java and changed the count variable to be final in StubConnection . java to improve connection management and
added multiple test cases for the ` approx _ percentile ` function in ` TestHiveAggregationQueries . java ` to ensure that the aggregation function
updated DEFAULT _ IDLE _ TIMEOUT from zero to 30 seconds and refactored idle and write timeout variables to use constants from WebSocketConstants to
updated the account reference in the getSharesWithForAFile method to use the user ' s platform account instead of the current account to
updated generic type declarations for Enumeration and NetworkInterface in Inet6Address . java to improve type safety and enhance code clarity
refactor button enabling logic in PlaybackControlView . java to improve clarity and functionality to enhance code readability and maintainability by
updated session presence checks to use session IDs instead of session objects to improve clarity and accuracy in session management
changed the method used to retrieve transitive class paths from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) `
change default value of useexceptionprobability to ___ _ instead of default to false .
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to enhance visual
guacamole - 523 : fix mysqluser . touserwithblobs ( ) to be consistent with other mysql implementation .
added " centre " alias to the aliases list in Middle . java to support the centre functionality in the Middle class
added dependency injection for DirectUpload in CommonsApplicationComponent to enable dependency injection for the DirectUpload class
added space top settings for left and right axes in BarChartActivity and adjusted range checks in BarLineChartBase to improve chart organization and ensure
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance the flexibility of Java library flavors in
added operation event status parameter to OnlineHubService and modified service initialization in CompositeLogService to improve handling of operation event status and ensure proper
added debug logging and visibility annotation handling in DexAnnotation . java to improve traceability of method parameters and enhance visibility annotation management
( chore ) camel - jms : replace startbundle ( ) and finishbundle ( ) with setup ( ) and teardown ( )
refactor Process initialization to use a separate variable for classpath to improve code readability and maintainability by reducing redundancy
update resource loading logic in PackageResourceLoader . java to ensure correct file path handling for Android resources
[ hotfix ] fix checkstyle violation in dataset
added an import statement for junit Ignore and annotated a test method to be ignored to temporarily disable the test due to a known issue ( b / 243855320 )
added escapePercent method for stack trace formatting in ShouldHaveMessage . java and updated test cases in ShouldHaveMessage _ create _ Test . java
fixed - jcache . close ( ) throw npe if redisson . cachemanager . geturi ( ) return null . # 3
change log level to info for taskalreadyclaimedexception in commandcontext . close ( )
added a brace to the ALPNClientConnectionFactory instantiation in HTTP2Client . java to improve code readability and maintainability
fix entitypropertiespacket . writevalue ( ) to always write the base value
fix ( sonos audio sink ) : check if the handler be initialize before use it
increased ` countDownLatch . await ( 500L , TimeUnit . MILLISECONDS ) ` to ` countDownLatch . await ( 5 ,
changed log level from info to debug in LightThingHandler . java to provide clearer feedback on unsupported light type request on GitHub
make db . properties available in db . properties and make async - job - manager thread pool size configurable
updated method signatures and messages in Reporter . java and ReturnsSmartNulls . java to include an Object parameter to enhance parameter handling and improve error messaging
change variable name from ` dataFrame ` to ` frame ` in the ` generate ` method to improve code clarity and reduce potential type casting
updated multiple ` package - info . java ` and ` module - info . java ` files for both ` mmm module ` and ` pp
added a check to ensure ` physicalColumnNames ` is not empty before matching ` DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN ` in `
added a return statement to mixPlay in the mmm Engine . java file to enhance input mixing functionality in the game engine
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
corrected the calculation in FinderPatternFinder . java and updated test values in QRCodeBlackBox1TestCase . java and QRCodeBlack
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability by eliminating
rename test matrix vector multiplication test method to matrix vector multiplication to clarify the method ' s purpose and improve code readability
add new method name $ $ $ find , $ $ $ , $ $ find , and $ all
fix ( e - ac3 ) : set default channel count to 48000 if no sample rate be specify
added new methods ` getFormula ( ) ` and ` setFormula ( String formulaText ) ` to the ` XSSFName ` class
updated the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to increase the test duration for
gml : fix parse problem with pattern schema constraint ( # 1193 )
added a new test class ` ClassPathXmlJobRegistryContextTests ` for testing the ` ClassPathXmlJobRegistry ` to ensure proper job
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger event timestamps and improve
camel - 12320 : deprecate option on camel - restlet we should not use anymore .
camel - 14263 : log component now support showout option on the endpoint - log component
replaced the ` submitTraceEvent ` method with a new ` writeChromeTraceMetadataEvent ` method to improve code readability and encapsulation
refactor limitOrders addition logic to check order status before adding to avoid adding duplicate orders to the limitOrders list
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and improve image layout validation
updated timestamp handling in Event . java and modified ruby _ timestamp method in JrubyEventExtLibrary . java to improve code clarity and ensure
added a check for non - existent paths in the ContextHandler and created a test for real path retrieval to ensure correct handling of non - existent
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
refactor scroll handling in JEditTextArea to improve clarity and functionality to enhance code readability and maintainability by aligning variable names
[ gr - 3770 ] fix miss guardsstage and stageflags in graphdecoder .
test ( sniperprettyprinterjavaxtest ) : migrate sniperjavaprettyprinter to junit 5 ( #
replaced direct instantiation of URLOutputStream with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added Entity annotations to the Mail class to facilitate the use of entity - related functionality
updated default value of includeTablespace from false to true and added documentation for it to enable tablespace functionality by default
added methods ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` to return the ` AtomicBuffer ` to provide access to metadata and
added a check for non - empty files in ScanBatch and implemented a test for JSON directory with an empty file in TestJsonReader to ensure
updated failure message formatting to include custom name in the failure message to enhance clarity of failure messages for better debugging
added a regex pattern for matching library names and updated the condition for Cuda check to improve robustness of library name validation based on Cuda
change exception handling from ClassNotFoundException and NoClassDefFoundError to a more general Exception in JrtJavaBasePackages . java and PackageHelper .
hbase - 15905 add checkfsafemode ( ) method to wait for hdfs to be write in safemode
updated error messages in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error reporting for better
mng - 5642 : remove plugindescriptor cache from defaultplugincache
fix update contact status when jabber contact become offline .
remove unused servletrequestdetails . withresourceandparams ( ) since it be not use
added a new integration test class ` AccountInfoFetchIntegration ` for fetching account information from BTCE exchange to ensure accurate retrieval of account information
added mouse wheel functionality to VDUInput and vt320 classes , and updated TerminalView to utilize this new mouse wheel functionality to enhance user
updated library path handling in Natives . java to use a variable for better readability to improve code clarity and maintainability by reducing
no effective change - remove deprecate @ columnhstore annotation
add miss player _ skin _ flags metadata index ( # 113 )
updated LoadBalancerWithServiceTests to utilize SLF4J for logging and improved service retrieval logic to enhance code readability and maintainability
fix null member return by mapservice . entryevent . getmember ( ) .
updated the method of retrieving the operating system version to use AccessController for security to enhance security by ensuring the OS version is retrieved using a privileged
updated file suffix handling in TemplateEngineFreemarker to allow configuration of file suffix based on application properties
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
replaced direct access to ` dockParent ` with a ` AnimationCallback ` for improved animation handling to enhance code readability and maintainability
updated EasyBind binding logic in StyledTextAreaVisual . java to ensure caret column is bound only when necessary
added dependency on CxxBuckConfig and introduced declaredPlatforms set in various description classes to improve platform management and ensure proper filtering of flav
replaced SimpleParameterAccessor with ParameterAccessor in multiple files to standardize parameter handling across the application
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and a corresponding test case in DataUtilitiesTest to ensure proper handling of default values for arrays in
update SSL engine creation logic to handle null address and use client authentication to improve security by ensuring correct host name is used when address is null
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve test reliability and accuracy of cache hit validation
danielwagnerhall : delete all cooky in ie , not just the current url
added a boolean flag ` mHasEndedLauncherTransition ` and modified the gesture state check in ` AbsSwipeUpHandler . java ` ,
added " < meta charset = \ " utf - 8 \ " " to HTML tags in HTMLListWriter . java and HTMLWriter . java
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
updated the maximum length of the hive stats key prefix and improved the concatenation of statistics aggregation prefixes to enforce a stricter limit on key prefix lengths and enhance code clarity
added a new class ` bug6337518 ` extending ` BasicComboBoxUI ` and modified the ` arrowButton ` addition in ` Basic
rename TestRandomAccessBuffer . java file to improve clarity and consistency in naming conventions
updated method signatures in UserInfoActivity . java to improve code readability and maintainability
added ` HomeContentProvider . CONTENT _ URI ` import and called ` notifyChange ( ContentResolver . CONTENT _ URI , null ) ` in
added functionality to manage the state of pressed or focused background in BubbleTextView and updated Launcher to manage the state of the activity to
updated ` getFallbackResponse ` methods across multiple classes to include an error parameter to enhance error handling in fallback responses
removed the condition checking for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the
added null check for tags before accessing its length to prevent potential NullPointerException when accessing tags
updated JAVA _ REGEX _ SPECIALS to include a trailing period in the regex specification to ensure proper matching of Java patterns in SQL queries
added functionality to save and update the action bar title in FileActivity and FileDisplayActivity to improve user experience by ensuring the action bar title is
updated method to retrieve the last element instead of the only element in PythonDslProjectBuildFileParser . java and added a new test for
updated the schedule hour from " * " to " 0 " in CleaningService . java to set the time to zero for better clarity
added methods to validate table structure for partitions and table paths in TransactionalValidationListener to enhance validation logic for partitioned tables and improve error handling
refactor ReplicationHandler and SnapPuller classes for clarity to improve code readability and maintainability
changed the data type of generatedKey from int to long and modified the SQL statement execution to handle generated keys correctly to ensure accurate key generation and
updated variable name from ' rc ' to ' _ rc ' in SimpleReferenceCache . java to improve code clarity by using a more d
updated test assertion messages to include " failed to inline " and " failed to inline " to improve clarity in error reporting for tests
updated keep - alive timeouts and added null checks for endpoints in WebClientFactoryImpl . java to improve logging clarity and ensure proper handling of
deleted the ` HttpTestAccount001 . java ` file to remove unused test cases to streamline the codebase
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and refactored tests in ` DispatcherTest . java
camel - 14850 : camel - cxf should only create attachment if dataformat be not cxf _ message
added a case for the ' ~ ' character in the ClientUtils . java file to handle special characters in the application
camel - slack : use java . time . duration for delay to avoid overflow .
fire blockharvesting event when a block be drop . close # 386
reduced the layout size of the FormLayout and added an extra space for the encodedAudioPassthrough JCheckBox to improve UI consistency and
added a new file ` bug8057791 . java ` that implements a custom JList with a specified selection index to implement a GUI
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java with a static field definition to improve
fix : add websocket method factory when engine api be add eth subscribe
updated null check for the ' to ' variable in ComposeActivity . java to ensure that ' to ' is not null before proceeding
added dictionary handling in ParquetFixedWidthDictionaryReaders and a new test for handling big integers with dictionary in TestColumnReaderFactory to improve data
refactor layout handling logic in PortraitPagedViewHandler . java for better readability and maintainability to improve code clarity and
added a new ` Log ` and ` LogInterceptor ` annotation classes for logging Spring Cloud application execution to enhance logging capabilities and facilitate
updated thread dump formatting in QueuedThreadPool . java to include trace information when trace length is greater than zero to improve clarity of thread trace
updated CacheGenerator and CacheProvider to support an optional implementation parameter to enhance flexibility in handling cache combinations based on the provided implementation
updated the ` createReferenceMap ` method to include ` totalFrameSize ( ) ` as a parameter to enhance the functionality of the ` create
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future development
added camel - graphql karaf feature for camel - itest - karaf
refactored the main method in RFE2891944 . java and added two new test methods for BigDecimal initialization to enhance test coverage
replaced URL encoding with direct string concatenation in HttpClientIntroductionAdvice . java to simplify string handling and improve code readability
replaced the implementation of ` unsupportedPlatformTool ` with a new class ` UnsupportedPlatformTool ` to improve code clarity and maintainability by
change loopCount variable type from double to int and update log message to use TimeUnit for better precision in recovery attempts
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
( chore ) camel - test - infra - kie : fix test case to run in the same thread
updated layout specifications for components in VLCVideo . java to improve UI appearance and layout consistency
updated URLs from " bisq " to " bitsquare " in multiple Java files to align with the new bitsquare API requirements
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " / . m2 " and refactored user XML file handling in MBoot . java to ensure proper
added a call to bind an array buffer using Gdx . gl20 . GL _ ARRAY _ BUFFER to ensure proper binding of the array buffer
refactor ServerHttpSecurity class for improved request handling to enhance performance and maintainability of the code
added JUnit 5 ' s @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers support in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP configuration flexibility for HTTP requests
add userpasswordnotvalidexception and use it in the defaultsystemsecurityservice
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
replaced the signing key decoding method from Codec . base16Decode to Bytes . fromHexString to improve code readability and performance by using a
replaced CascadedStyle with CSSName and added validation for float properties in FloatUtil . java to improve code clarity and ensure proper
jbrules - 1342 : add javadocs for plannerfactcollectionproperty , plannerentityproperty , planningscore , solution , pl
refactor RestUtils to use a private method for default headers and introduce a new method to return MultiMap instead of CaseInsensitiveHeaders to
rename the ` ` enc ' ' field and method to ` ` charset ' ' in proxyserver , realm , and simpleasynchttpclient
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that `
replaced the use of ` compareTo ` with ` Long . compare ` for comparison operations in ` ExpandableUploadListAdapter ` and ` File
replaced error logging with debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better debugging and
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline dependencies and improve code clarity
changed the visibility of the WingDings class from package - private to public to allow access to the WingDings class from other
added a check to ensure the filter is not our own before removing it from the network to improve error handling and provide clearer logging for invalid
move bcpginputstream . wrap ( inputstream ) from pgpkeyring to pgpinputstream
updated data output handling in MinimalLockingWriteAheadLog to use BufferedOutputStream to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
rename FocusTransitionTest . java file to improve clarity and consistency in naming conventions
gwt : fix compile error in sharecontrollerw
added a type check for ` sourceTask ` before casting it to ` MapRedTask ` and improved error handling for job retrieval to enhance
updated the initialization of the _ readListener variable to ensure that the readListener is not null to prevent potential NullPointerExceptions during initialization
refactor color selection handling in AppearancePanel to use ChangeListener for component color changes to improve code readability and maintainability by encapsulating
updated TaskHelper constructor to set the ' hidden ' parameter to improve visibility control for task processing
http : / / issues . apache . org / jira / browse / amq - 4238 - fix test regression .
pdfbox - 4892 : close file lock in ccittfactory . createfromfile ( )
added DefaultParameterHandler import to LanguageDriver . java and modified BoundSql . java , SqlSource . java , and LanguageDriver . java to
lsra spill optimization : check loop depth before set spill state .
added a new file ` MicronautAstBuilder . java ` with a method to compile AST nodes with specified script class names to enhance
fix : pgstatement . execute ( ) do n ' t call closeoncompletion ( ) twice .
updated the default value of ` serviceAdvisorType ` from ` null ` to ` ServiceAdvisorType . PYTHON ` to ensure compatibility with the
refactor resolver management in GenericDatumReader to use a ThreadLocal instance to improve thread safety and management of ResolvingDecoder instances
updated method signatures and variable types from Collection to List in multiple classes to improve type safety and enhance performance by using ArrayDeque instead of Stack
replaced hardcoded byte arrays with dynamically generated random bytes for output values in SendCoinShieldTest . java to improve test reliability by
added a new method ` setPersonalisation ( Date , Locale , email , and distinguisher ) ` to the ` SkeinParameter
removed redundant code in CodeGenerator . java to streamline the code for better readability and maintainability
removed the ` percent ` parameter from the ` scroll ` method signatures across multiple classes to simplify the method signature by removing unnecessary parameters
changed the visibility of the ` pointer ` variable and added reset methods in ` FlatRecordReader ` to allow external access to the ` pointer `
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` across multiple files to clarify the purpose of the class is
remove unnecessary cast in castexpression . castto ( )
replaced the use of ArrayList with a boolean variable for managing accepted media types to simplify the code and improve readability by eliminating unnecessary
added a new boolean variable set to false in TaskView . java to enhance the functionality of the TaskView class
added an ` isAutoIncrement ` method to ` LiquibaseDataType ` and updated its usage in ` CreateTableChange ` to ensure proper
set default value for errorText to " Command failed due to Internal Server Error " to provide a clearer error message for better debugging
updated imports and arguments in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for performance data usage to
replaced ` add ` method calls with ` push ` method calls for ` currentStatus ` and ` boosterStatus ` in ` BasicEvent
added AJP connector configuration and port handling in GitBlitServer . java and updated Build . java and Build . java to support AJP
added type coercion logic for intersection types in TransTypes . java and created a new Intersection03 . java file to enhance type handling
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread if it does not already exist to improve performance by avoiding unnecessary thread creation
add option to compress bundle in parallel .
hide the opengl surface if the platform be windows
updated the temporary directory path in AbstractRecordExtractorTest . java to use the class name instead of a hardcoded string to improve clarity and
added configuration parameters and logic to enable or disable HTTP services for fullNode and solidityNode to enhance control over HTTP service management based on configuration
added a service field to GoogleCloudFirestoreTicketDocument and updated the return statement in GoogleCloudFirestoreTicketRegistry to include it to enhance
refactor Generate class to improve code structure to enhance maintainability and readability of the code
json _ format ( ) should return ` ` null ' ' instead of ` ` null ' '
updated BadgeRenderer to use a constant for DOTS _ ONLY and modified width calculation to accommodate it to enhance flexibility in badge
changed the ` getConfiguration ` method from final to non - final in ` FreemarkerManager . java ` to allow the method to
added a test for invalid excluded package names in OgnlUtil to ensure that ConfigurationException is thrown when excluded package names are invalid
modified the initialization of ` deviceUdid ` to use ` mac ` or ` iphone ` based on the ` platformName ` to ensure
replaced error logging with warning logging and updated response handling in DefaultHttpClientFilter . java and TestDefaultHttpClientFilter . java to improve error handling
refactor context binding and invocation handling in AllAppsView . java to improve code readability and ensure proper execution of the reset WAR execution
added a TEXT _ BURN flag and adjusted shadow layer settings in Utilities . java to improve text rendering behavior based on whether the text is burn
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database resources after tests
added a line to retrieve a parser from the parser list in SecurityNamespaceHandler . java to ensure that the parser is properly initialized before usage
reformatted conditional check in ` BoundedLocalCache . java ` and added new tests in ` BoundedLocalCacheTest . java ` to
refactor RawConnection to extend WebSocketConnection and implement complete and flush methods to enhance WebSocket connection management and improve asynchronous frame handling
added multiple test cases for soft assertions in SoftAssertionsPerfTest . java to enhance test coverage for various assertion methods
added a test failure exit code constant and modified the execute method in PythonRunTestsStep . java , and updated assertions in PythonTestIntegrationTest
added a conditional check for ` markupEnabled ` before updating ` xAdvances ` in ` GlyphLayout . java ` to ensure that text rendering
refactor score comparison logic in TestBooleanRewrites . java to use streams for better readability and maintainability to improve code clarity and
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` for anonymous classes in ` TypeHandlerRegistry . java ` to ensure correct
add flush ( ) method to the playerconnection interface and remove unnecessary cast to playersocketconnection
added a check to prevent multiple calls to removeOnDrawListener in Launcher and LauncherAnimUtils classes to ensure that draw listeners are only
refactor multiple classes related to index handling to improve code organization and maintainability
replaced specific import statements with wildcard imports in ReplicaAssigner . java and added a condition to check if matchStatus is not APPLICABLE
updated the default value of the MEDIAPARSERV2 boolean from false to true to enable media processing by default
add support for aop proxy generation with @ inject ( aoptype = ' method ' ) and @ injectmethod ( aoptype =
hive - 12026 : add test case to check permission when truncate
do n ' t log a warning if a provider be register in wrong state .
updated the random color calculation in PastelColor . java to use a constant colorBase to improve clarity and maintainability of the color
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated the image rendering logic in HolographicViewHelper to use original and outline bitmaps to improve visual clarity and maintainability of
simplify request method handling in CloudClient . java to improve code readability and maintainability
improve multiwordpreprocessor . gettag ( ) to take an optional containingphrase parameter .
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
updated class loading logic in HivePassThroughOutputFormat . java to improve compatibility with Hive ' s passthrough output format
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a validation check for the start and length parameters in the DOMBuilder class to ensure valid input before proceeding with operations
updated conditional logic in ClusteringCoefficient . java and improved edge retrieval in EigenvectorCentrality . java to enhance clarity
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the behavior
camel - 14850 : camel - core - optimize key selector to use property placeholder instead of hardcoded value .
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor multiple Java classes related to certificate management to improve code organization and maintainability
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and added sorting
updated client key assignment logic in HttpClientIntroductionAdvice . java to improve clarity by using a more descriptive variable name
int - 1619 add support for the ` ` transformer ' ' bean in the ` ` config ' ' namespace handler
changed BACK _ FACTOR to REWIND _ TIME and introduced a new constant REWIND _ TIME in the ResumeObj . java file to
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and its implementation in ` JavaSEPort
updated usage syntax in UtilityCommands . java and modified usage output in DocumentationPrinter . java to improve clarity of usage messages and enhance readability
updated the attribute key from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming
removed duplicate setter methods for sequence and unseq file lists in CrossSpaceCompactionResource to streamline code and improve maintainability by elimin
removed duplicate @ Override annotations in Observation . java to improve code clarity and ensure proper method overriding
refactor ruleset synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and maintainability of the code
fix a potential npe in abstractsootfieldref . checkstatic ( )
add support for name and tag key in elastic meter registry ( # 1193 )
added methods for listener management in IController and command creation in TinyGController , and updated BackendAPI to use IController instead of Abstract
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to validate rendering behavior for huge horizontal rules
replaced System . out . print statements with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve
updated enum values and added a new method for retrieving the revocation date in multiple Java files to improve code readability and maintainability by standardizing
changed the condition from checking if frameLength is equal to zero to checking if it is less than or equal to zero to ensure that frame length
updated return statements in IntFloatMap . java and IntIntMap . java to handle zero values correctly to improve code clarity and ensure consistent
refactor ImageDownloadService to use Runnable for setting icons and styles to ensure UI updates occur on the main thread to improve thread safety and prevent
added a null check for the registered variable in HandlerRegistration . java to improve robustness by preventing potential null pointer exceptions
removed the native method ` hasNextSibling ( ) ` from multiple node classes and updated the return statement in ` IeNavigator ` to streamline
fixed - npe be throw when redisdistributedmapcacheclientservice . redisdistributedmapcacheclientservice return null . #
updated log messages for MobFileCache to provide clearer context about cache settings and eviction policies
refactor ColConvCCMTest class for improved readability to enhance maintainability of the test code
replaced instances of ` source ` with ` target ` and introduced new boolean variables ` allowCovariantReturns ` and ` syntheticNameChar `
pdfbox - 4892 : fix generic warning , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` asString ( ) ` and added a new class ` X
http : / / issues . apache . org / jira / browse / amq - 3877 - add miss return statement in genericfile
added an invokeLater call to the EventQueue in bug6638195 . java to ensure proper execution of tasks on the Event Dispatch Thread
updated maxSize calculation to use getMaxBinaryMessageSize instead of getMaxBinaryMessageBufferSize to ensure the maxSize reflects the correct size of the binary message
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to correct steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
refactor JdbcSerDe to use java . time for date and timestamp conversion to improve code readability and maintainability by using more descriptive
updated VERSION from 2 to 3 and refactored metadata reading and writing logic to accommodate new versioning to ensure compatibility with newer data
updated FlywayAutoConfiguration to include a new JPA dependency configuration class and modified FlywayInitializerJpaDependencyConfiguration to enhance dependency
added a sorted ( ) method to the ClassesImpl class to ensure the classes are sorted before processing
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer to improve code readability to enhance maintainability and facilitate future development
refactor memory scope and resource scope retrieval logic in TestCloseScope0 . java to improve compatibility with different JVM versions for better resource management
updated the test parameter from 500 to 5000 in AdaptServerSocket . java to increase the timeout duration for the server socket test
updated CaptchaChannelProcessorTests . java file to improve test coverage for Captcha functionality
added a condition to update the item ' s owner collection if it is not the owner of the specified collection to ensure that the item ' s
added retry logic for saving properties in AbstractRegistry to allow for a maximum number of retries to improve reliability of property saving attempts
updated TrackingDirectoryWrapper to use ' directory ' instead of ' mergeDirectory ' to improve clarity by using a more descriptive variable name
[ java ] unusedimports - fix a bug in java 1.5
added validation to prevent inserting overwrite queries on bucket partitioned Iceberg tables to ensure that operations on a non - bucket partitioned Ice
updated SAML configuration assertions in BootstrapTests . java to reflect correct expected values to ensure consistency in SAML configuration validation for legacy keys
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for non - static classes
modified the method name from ` theAddressie ` to ` addressees ` in the ` getAddressVector ( ) ` method to improve cl
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
refactor release methods to include IOException handling and introduce a new LockReleaseFailedException class to improve error handling and provide clearer exception management for
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure
added a conditional check for unary operators in SpelExpressionTransformer and modified return conditions in LiteralNode and MongoQueryMethod to improve handling of unary
added TypeValidation to ByteBuddy initialization in MockBytecodeGenerator to disable type validation during bytecode generation
updated the ` AnnotationSetScanner ` and ` BuriedAnnotations ` classes to use ` TypeElement ` instead of ` DeclaredType ` to
updated locking mechanism in LockModePessimisticReadWriteIntegrationTest and changed in MySQLTableLockTest and MySQLTableLockWithEmploy
updated the ` setSystemProperties ` method to remove the ` LogFile ` parameter and modified its implementation to streamline the method signature and ensure
refactor HTTP request handling to support multiple redirects and improve error handling to enhance reliability of HTTP redirects and provide clearer error messages
added new constants for service , version , and application mappings in ServiceCombConstants . java and updated MicroserviceFactory . java to use EnvironmentConfiguration
replaced ` proc . getName ( ) ` with ` proc . getBeanName ( ) ` in ` ToeThread . java ` to ensure
updated DB _ PATH _ REGEX to be static and modified database path handling in BaseAndroidTestCase . java , GeocodeHelperTest . java
updated return statement to retrieve unread count from HomeDataSource to improve data retrieval efficiency by utilizing the current account ' s unread count
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method to improve clarity
updated the ` getAllOrder ` method to include a ` limit ` parameter and modified the ` getPriceKeysList ` implementation to limit the number of
updated user retrieval logic in HomePage . java to handle null user cases to improve robustness by preventing null pointer exceptions
added a method to get the absolute file path in LocalFileSystem and implemented a test for matching relative wildcard paths in LocalFileSystemTest to ensure correct
added maximum width and height limits for instance bounds in ComponentBuilders . java to ensure that the application does not exceed its defined maximum dimensions
added logging functionality and deprecated a method for setting connection manager timeout in CommonsHttpSolrServer . java to improve code clarity and provide a
removed duplicate error handling code from PrintController . java to streamline error handling for document creation failures
refactor file path formatting in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and
added checks for empty words and number formats in SpellChecker . java and a corresponding test case in SpellCheckerTest . java to ensure
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added methods to retrieve and display file actions in the FileDisplayActivity to enhance file management functionality and improve user experience
added error handling for logging replication time and configuration files in SnapPuller . java to improve robustness by catching exceptions during log replication
swapped the order of parameters in the update method call to improve code readability and maintain consistency in parameter order
renamed the parameter ` materials ` to ` theMaterials ` and added logic to remove ` MaterialColumnParser ` instances from ` fileColumns
updated dependency bank entries in DependencyBank . java to include additional dependencies and descriptions to enhance clarity of dependency management and improve user experience
added maximum recycled views for various item types in AppsContainerRecyclerView to improve the responsiveness of the app ' s layout
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to verify the build process of
improve baritone control so they do n ' t crash if a block do n ' t match the mining .
added imports for ParsedNode and ParsedNodeException in CreateProcedureChange . java to facilitate parsing of procedure changes from Liquib
added null handling support in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance filtering capabilities and ensure proper handling of null values
added validation for bootstrap method arguments in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap method invocation
try to fix the test error of jmshttpjmstest
remove unnecessary method call to clear formatters in CucumberInstrumentation . java to streamline code by eliminating unnecessary method calls
changed the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and updated related return statements to ensure type safety and improve type
adjust workspace label visibility based on cell size and padding to ensure proper visibility of workspace labels based on icon and text size
refactor assert statements in ReplicationFactorTest to use assertRf method to improve readability and maintainability of error messages
sulong : llvmlanguage should initialize context before pre - initialization .
removed JUnit @ Ignore annotations from ChaosMonkey tests to streamline test execution by eliminating unnecessary dependencies
replace RuntimeException with JsonIOException in Gson . java to improve error handling for JSON - related issues
replaced Integer . valueOf ( ) with Integer . parseInt ( ) in VisualScoreTagTest . java to ensure correct parsing of integer values
updated error messages and modified file tree walking parameters in Copy . java to improve clarity of error reporting and limit file tree walking limits
added checks for high and low level consumer segment names in HLCSegmentName , LLCSegmentName , and SegmentName classes to ensure segment
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
updated the method to return a new DateTime instance using the clock ' s current time instead of the current time to ensure accurate date conversion for better
updated the return statement in TargetCpuType . java to include additional CPU architecture options to enhance CPU management by specifying the target architecture
added a method to delete all files for a given account in FileDataStorageManager and integrated it in ManageAccountsActivity to improve file management and
updated the command line argument from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity of the command
added a new method to create a suite description with a unique ID and updated the equals method to use it to enhance functionality by allowing unique identifiers
replaced the deprecated ` decode ` method with a new ` decodeBarcode ` method in ` SnapshotThread . java ` to streamline the
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor signature and eliminate unnecessary dependencies
add unit tests for range pasting in GWCZoomContextFinder to ensure correct behavior of scale range calculations
added a new configuration key ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and a method to enable dependency tracking in ` JR
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
catch already exist exception when try to add a new table or keyspace
update the welcomewindow to use a compatible cache for the splash screen image
updated tuner configuration handling and error logging in TunerManager , RTL2832TunerController , and R820TTunerConfiguration
added ` HasTests ` interface to ` AbstractShBinaryDescriptionArg ` and implemented a new test method in ` ShBinaryRuleIntegrationTest `
added a condition to set ` includeString ` to " db : hsqldb " in ` TestFilter . java ` to ensure proper handling
fix checkstyle issue in loader / javabinloader . java
do n ' t materialize host exception in trufflestacktrace if the original exception have no stack trace
export jvmci service in java 8 or later if service do not exist .
added test to ensure that duplicate command handler resolver be reject .
[ flink - 20865 ] [ stream ] add fine - grained shuffle mode option to batch job
fix entityfishhook do n ' t use block . getstate ( ) . getblock ( ) for vanilla block . close #
camel - 14263 : camel - ftp : create an aws - ftp component base on sdk v2 , regen doc
rename ` commandRunner ` to ` stepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename the variable ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to improve clarity
added a check to return early if the items list is empty to optimize performance by avoiding unnecessary processing when there are no items
added a conditional annotation to check for the presence of the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure
log4j2 - 1349 add property to xmllayout to allow customization of log4j ' s attribute
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented a ` remove ` method in ` NamedList ` to
updated EscherProperty to use getPropertyNumber ( ) instead of _ id and added unit tests for EscherProperty class to ensure correct property retrieval
refactor method call to use a static reference to improve code readability and maintainability
fix : call modifyhierarchy ( ) when remove a method from a class .
added null checks for disputesPerTradeId , disputesPerDelayedPayoutTxId , and disputesPerDepositTxId
added ` getObjectHash ( ) ` and modified ` toString ( ) ` and ` toString ( ) ` methods in ` AbstractNamedObject ` ,
wallet : set the confidence type of sendtx to not _ see _ in _ chain
refactor HttpClientIntroductionAdvice to improve argument handling for HTTP requests to enhance clarity and maintainability of the code by elim
filter any recipe starting with _ , such name be reserve for metadata .
hbase - 2696 hregion # close should log the exception when open region fail
refactor null and length checks in Credential . java for improved clarity to enhance readability and maintainability of the code
[ java ] fix checkstyle violation in clientconductor . java
updated the ` destroy ( ) ` method to throw ` InterruptedException ` and added ` process . destroyForcibly ( ) ` and ` process
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle environments
camel - 15656 : camel - mail : make it easy to connect to mailstore / mailserver . thanks to martin
added token validation logic in the parser to ensure that tokens are not consumed in the document to prevent parsing errors
camel - 16832 - camel - aws2 - translate : list all the available language in the enum - start with ` ` l '
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model assignment logic in ` Voice . java ` to
added emailDomain property and related getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable email domain management for LDAP identity provider
added new request timeout configuration constants and methods to retrieve them to improve configuration flexibility and allow for configurable request timeouts
bugfix : do not try to process deferred concept if there be no concept link to save
added RedisCategory import and annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated ` FindDeprecatedMethodsTest ` to use parameterized tests and modified the ` noNPEWhenUsedFromDeprecatedUses ` method to improve test
added a call to super . paintComponent in the WaterfallPanel class to ensure proper rendering of the overlay and waterfall components
removed unnecessary import statements from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added a new method to get and set a full event signature in LogEventWrapper to
modified filter condition to exclude files ending with " _ " for session identification to ensure that only valid session names are processed in the filtering process
updated drawing methods in MapView to use background and fillRect instead of clearRect to improve rendering consistency by using the current color of the graphics
[ drools - 701 ] fix compilation of invokers in executable model
removed debug print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN score values before asserting document counts in TestFieldCacheSort . java to ensure that document counts are only assert
updated the initialization of oldKeys to use Set . copyOf ( ) instead of a direct copy of getEntityKeys ( ) to improve code readability
added checks for zero - time strings in ColumnSnapshotGenerator and introduced a new test for date default values in MySQLIntegrationTest to ensure proper handling
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
updated the type of ` vsContext ` from ` Map ` to ` Map < ? , ? > ` in multiple collector classes to enhance type
[ drools - 5352 ] add test case for kiesessionmodel . setclocktype ( )
updated the initialization of msClient to use ' this . conf ' for clarity to improve code readability and maintainability
added a conditional check to return early if the modalness matches the current modalness to optimize performance by avoiding unnecessary processing when the modalness
added unit tests for codec capabilities in ShadowMediaCodecListTest . java and implemented native _ getGlobalSettings in ShadowMediaCodecList . java to
fix # 5460 : focus be wrong when enter key in offer edit
added validation for width and height in SunVolatileImage . java and improved error handling in XRSurfaceDataProxy . java to ensure
updated the thousands separator from a period to a non - breaking space in the FormatData _ uk . java file to ensure consistent formatting of
replaced the integer array with an AtomicInteger for thread - safe access in AsyncStressTest and StressTest classes to improve thread safety and
added beta flavor checks and toast messages in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when beta flavor is
added access , name , and desc fields to SearchMethodVisitor . java to enhance accessibility , name , and description for better context management
added multiple ` Thread . sleep ( 1 ) ` calls in ` IoTDBInsertWithoutTimeIT . java ` and updated exception handling to include
corrected formatting of code in DLNAResource . java to improve code readability and maintain consistency
camel - 7011 : fixed xml schema for resequencer / batch - config and resequencer / stream - config
refactor transaction management in TableReader by introducing a separate acquireTxn ( ) and releaseTxn ( ) methods to improve code readability and
[ flink - 18686 ] [ thrift ] make keymanager and trustmanager type configurable via the ssl . keymanager . algorithm property
replace JavaIsoVisitor with Applicability in the getSingleSourceApplicableTest method to streamline applicability checks for primitive wrapper classes
fix miss exit ( ) on tab key in blockmania
replaced ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to update access specifier references from " PACKAGE
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for incompatible overrides to improve clarity of error messages and enhance
updated stripes and stripeStats assignment logic in OrcInputFormat . java to improve readability and maintainability of the code
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
change myhentaicomics . com from http : / / myhentaicomics . com to https : / / my
added command - line argument handling and version printing in App . java to display the current JAR version if available
use splittokens ( ) instead of split ( ) for export list
update rotation handling in ConsoleActivity and implement input input connection in TerminalView to improve user experience by allowing dynamic rotation settings based on keyboard configuration
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc >
added a null check for the ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 16463 : camel - jbang - make it easy to configure http header map factory .
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
int - 1815 jmsoutboundgateway now support < outbound - gateway / > and < consumer - endpoint / >
updated the index parameter in the ArrayFunctions class from ` i + 1 ` to ` i 2 ` to correct the expected value in the trace
refactor script engine initialization and improve error logging in AbstractScriptProcessor and InvokeScriptedProcessor to enhance code clarity and ensure proper handling of
updated ` PooledConnectionImpl ` to include ` org . postgresql . PGStatement ` in proxy instantiation to ensure compatibility with PostgreSQL ' s
replaced ` flushMemTables ( ) ` with ` flushMemTablesAndRefreshSizeEstimates ( ) ` in ` CassandraIOTest
changed log level from error to warn in AtomicRemainder . java to provide more detailed logging for fragment limits
avoid aggressive ttl expiration during compaction . patch by jbellis
fixed - rblockingdeque and rblockingdeque . pollfirstasync ( ) and polllastasync ( ) method throw npe if
updated printMap calls to remove the " % s " argument and simplified output formatting in JobInspectCommand . java to improve code readability and
refactor Engine class to improve code readability to enhance maintainability and facilitate future development
refactor sorting logic in ChildHolder to use entrySet for improved readability to enhance code clarity and maintainability by using a consistent comparator
[ rip - fix ] [ test ] refactoring aclclient to use sessioncredentials
changed the condition from ` numIndexDims = = 1 ` to ` numDataDims = = 1 ` in BKDWriter . java
[ zeppelin - 5352 ] fix npe when interpreter group be null ( # 5353 )
[ fix ] expressionnodeevaluator should use ' lt ' instead of ' funn '
removed the public access modifier from several methods in NodeIdAccessor . java to enhance encapsulation by restricting access to these methods
server : do n ' t allow to attach volume to a volume before create snapshot policy / policy
removed the public access modifier from the write , flush , and clear methods in ItemWriter . java to restrict access to these methods for better encaps
updated the mock Thing instance from an empty string to a specific test string to improve test coverage for the RoombaHandlerTest
added a toString ( ) method to ImageNameSubstitutor class and a corresponding test in ImageNameSubstitutorTest to provide a clear
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to simplify directory handling and improve performance
updated line height calculation to ensure it does not exceed the buffer ' s height to improve performance by avoiding unnecessary line height calculations
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future development
bugfix # 208322 , remove workaround for oracle nashorn .
remove the chat transport menu item from the button group when it ' s remove .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
set bsqblockchainexplorer only when it ' s present in proto
added attribute management methods to StandardSession and Session classes to enhance session management capabilities by allowing retrieval , setting , and removing attributes
added assertions to verify the properties of the ` getPlainBean ( ) ` and its ` getAlong ( ) ` method to ensure the
updated the array size for averages from pageSize to initialPageCount to ensure accurate memory allocation for better performance
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future development
added JDBC datasource and transaction manager beans to BatchMetricsApplication . java to enable support for HSQL database connections in the application
make glowrootloghttpservice implement httpservice instead of unauthenticatedhttprequests
pdfbox - 4892 : use non - stroke java composite , a suggest by valerybokov
removed the ` notifyAll ( ) ` call from the ` close ( ) ` method in ` DocumentsWriter ` and added synchronization in `
added methods for retrieving and setting multiple choice options and validation constraints in UiBinding . java to enhance the UI component ' s functionality for better validation
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency to improve readability and maintainability of the
added a fullSave flag to control whether to update the stored copy of the tree for full saving to ensure only updates the tree for full saving
refactored affix class to use a pattern cache instead of a hardcoded one .
replaced explicit generic type declarations with the diamond operator and added a string literal for Kraken fee values to improve code readability
removed the import of CharTermAttribute and its usage from tokenStream in DefaultIndexingChain . java to streamline code by eliminating unnecessary
updated NBJavacTrees . java file to improve performance and maintainability of the code
removed unsupported operation exception for unsupported data encoding in VectorizedPrimitiveColumnReader to improve error handling for unsupported data encoding
added SLF4J MarkerFactory import and modified logging logic in HttpSolrCall . java to enhance logging clarity and ensure consistent tracking of
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service instances
improve defaultentityqueryrepository . getvlfilter ( ) to prevent infinite recursion
updated error message handling in HubChangeExecListener to provide clearer feedback based on the presence of a changelog to improve user experience by providing clear
try harder to make test more robust .
updated method signatures and return types in CxxPreprocessAndCompileStep . java and added a new test in BuildReportIntegrationTest . java
updated maxEvents initialization and modified event counting logic in ObjectStore . java to improve event handling and ensure accurate event count management
simplified the validation logic in ValidatedLocalValidatorFactoryBean . java to enhance readability and maintainability of the code
fix concurrent modification exception in entityawareworldprovider
[ gr - 22424 ] remove unnecessary check for exact type in copy phase .
do n ' t set log level to all in testcoyoteadapter
removed the ` WantedAnywhereAfterFollowingInteraction ` class and updated related test assertions to streamline exception handling and improve clarity
added validation checks for the ownerAddress and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure that only valid
refactoring scriptlauncher to use treemap instead of comparator
chore ( regen ) : update java microgenerator to 1.0 . 2 ( # 212 )
replaced ` _ metadataProperties . addProperty ` with ` _ metadataProperties . setProperty ` in ` BaseSingleTreeBuilder . java ` to streamline
updated AsmLoader and AsmLibraryLoader to accept a ClassLoader parameter to enhance class loading flexibility by allowing different ClassLoader implementations
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated Java2TypeScriptTranslator to conditionally use " declare " or " export " based on isDefinitionScope to improve clarity in namespace
replaced ` EmptyServerHandler ` with an ` AbstractHandler ` that initializes ` baseRequest ` as handled to ensure proper handling of HTTP requests
simplified the way input listeners are instantiated in HelloInput . java to improve code readability and maintainability
avoid npe in abstractsqmpath when getlhs ( ) be null
updated package declaration in multiple test files for consistency to improve code organization and maintainability
refactor image processing logic in AwtCanvas . java to use BufferedImage for improved type handling to enhance performance and maintainability of image processing
[ gr - 16938 ] fix graal startup when use native - image .
remove dataflowportabilityapiunsupported from usestimersinpardo test
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 434 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility across different classes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max size configuration for map do not allow any data
update error messages from " AST " to " LST " across multiple files to clarify the intended usage of the LST element in
refactor scoring calculations and improve scoreable management in ThreadedAcousticScorer . java to enhance code readability and maintainability
replaced an AssertionError with returning null in NetHooks . java to improve error handling by returning null instead of throwing an exception
refactor ApplicationControllerFluentLeniumTest to use the window object for title assertions and click method to improve code clarity and ensure accurate
added a default ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedRichIterable ` ,
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant for the default order to improve code readability and maintainability
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and modified its validation logic to allow
updated method signatures in Deflater . java to improve code clarity and maintainability
added a try - catch block to handle exceptions in Font . java to ensure proper exception handling during resource cleanup
added a null and empty check for content in VersionTypeBinding . java to ensure proper handling of cases where content is null or empty
refactor ` NearbyListFragment ` to store ` places ` directly instead of storing it in a variable to improve code readability and
mailconverters : change content type check to be case - insensitive
use asn.1 format for openssh key in openssh spec
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and modified its implementation to enable automatic folder suggestion updates based on
updated import statements and added cache annotations in InheritanceCacheTest . java to improve code clarity and ensure proper caching strategy
updated the import statement for DefaultOAuth2RequestFactory and added a method to retrieve user approval requests in TofuUserApprovalHandler to ensure
fix influxdb naming convention apply to tag value ( # 645 )
do n ' t fail test if there be no resolution for a marker
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure compatibility with the new cookie format
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` class to ensure
added functionality to manage the visibility and clicking of the " Clear All " button based on user preferences to improve user experience by allowing users to
updated ` desiredRepoVersion ` to be final and adjusted timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider
remove memoryleaktest from cluster
updated the return statement in ServletTester . java to use the local host ' s IP address if available to improve clarity of the returned
added a check for MVDWAPI integration in the ServerListener and defined a new setting in Settings to ensure compatibility with MvDW
add assertclustersizeeventually to hazelcasttestsupport . assertclustersize ( ) and make abstractpartitionassignmentcorrectnesstest . test
added singleton implementation for FFIProvider and introduced a SingletonHolder class to enable dynamic loading of FFI providers based on JNA settings
add a test for hierarchical file list in batch processing
added null checks and assertions for object to save in MongoTemplate . java and implemented new test cases in MongoTemplateTests . java to enhance robust
update position values in NodeClass . java to use NODE _ LIST instead of 0 to improve clarity and consistency in handling direct input and success
added an ` accTradeValue ` field and its getter method in ` BithumbTicker ` , updated ` BithumbTradeServiceRaw
updated logging statements in RealtimeSegmentDataManager and AvroUtils for improved readability and consistency to enhance logging clarity and provide more detailed
replaced ` maxParallelThreads ` with a constant ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor
replace ArrayList with CopyOnWriteArrayList for multiple readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to improve
doc : fix typo find by codespell on fossies . org
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
camel - 14850 : camel - mvn - allow to turn off fail test on slow ci server
updated condition from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java ` to
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore and modified assertions in CodeStoreEndpointsTests and AutologinIT
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the database
refactor MediaDetailFragment to use a HashSet for all language codes and simplify language description processing to improve code readability and maintainability by elim
do n ' t swallow arrayindexoutofboundsexception , log a recoverable exception
added reference filter and filter methods to ListImagesCmd and ListImagesCmdImpl classes to enhance image filtering capabilities for improved image management
camel - 14263 : camel - jms - add support for bridgeerrorhandler a endpoint option .
added conditional checks for empty opsToExclude in OpExclusionUtils . java to ensure all ops are set to true when no operations are found
added two return statements in DatabaseCommand . java to ensure that the method returns false for improved functionality
replaced individual Politician instances with new Politician instances in HonestPoliticianExample . java to improve
[ zeppelin - 5231 ] use string . isnotempty ( ) to check if initfile be empty ( #
camel - 14850 : camel - restlet should use port number from restlet component instead of hardcoded 0
updated import statements in SchematicFormat . java and removed a case for WALL _ SIGN to streamline dependencies and improve code clarity
added a system property for maximum query length in QTestUtil . java and modified overridden configurations in SessionState . java to improve query performance and
changed access modifiers from public to private for several fields and refactored the creation of HttpConfiguration to use a base method to improve encapsulation
replaced instances of " writeHdfs " and " writeKafka " with " hdfsSink " and " kafkaSource " across multiple Java
updated the logic for determining if the application name is " spark . app . name " in HiveConf and HiveSparkClientFactory to ensure
rename variable ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve clarity by using a more d
simonstewart : add the ability to maximize a window in the webdriver - backed webdriver
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystemFactory ` to
updated assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " to ensure proper handling of entity expansion
modify table offset and length assignments to mask the value of 0x7FFFFFFF to ensure accurate representation of table offsets and lengths
removed the customization method from DirectMethodHandle to streamline the code by eliminating unnecessary assertions
refactor buffer initialization and improve coordinate checks in LineChartRenderer . java to enhance readability and maintainability of the code
refactor flavor handling in AndroidBinaryDescription and update tests in AndroidBinaryFlavorsIntegrationTest to improve code clarity and ensure proper flavor
updated buffer index assignment from offset to i in LwjglGL11 . java to ensure correct buffer generation for improved performance
added new classes ` Property ` and ` PropertySuper ` , and created a test class ` TestClassResolutionFail ` to handle class resolution errors
remove shutdown hook only if group property ` ` shutdownhook _ enabled ' ' be set to true .
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and removed the ` url ` parameter from the ` VirtualFilterChain
[ hotfix ] fix arrayindexoutofboundsexception in percentileaggregationfunction
added checks for schema availability before loading tables in MetaDataBasedSQLCompletionProvider and modified mdTable assignment in QueryTypeAnalyser to ensure that
initialize baseType to null in DatabaseInfoRetriever and initialize literalPrefix , literalSuffix , and localizedTypeName to empty strings in MutableColumnDataType to improve
updated JavaDoc comments to use ` { @ link } ` syntax instead of ` < href = ' ' ' to improve code readability and
replaced multiple instances of ` getInstance ( ) ` with direct instantiation of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and
updated configuration file references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to
added sound effects functionality in AllAppsView . java to enhance user experience by enabling and disabling sound effects
updated the main method signature to throw IOException instead of Exception to improve error handling by explicitly indicating that the exception is not thrown
added ` leftAxis . setGranularityEnabled ( true ) ` to ` BarChartActivitySinus . java ` to enable granularity support for
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability by centralizing version comparison logic
refactor ContextHandlerGetResourceTest to use MavenTestingUtils for directory checks and add OS alias support checks to improve test reliability and ensure
added a close ( ) method to multiple classes and updated connection handling in JsonAsyncHttpPinotClientTransport to ensure proper resource management and prevent
refactor mockappender to use a blockingqueue to improve thread safety
[ beam - 4142 ] improve error message of hadoopresourceid . getdirectory ( )
removed unused import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by elimin
fix itemserviceimpl . removeitem ( item , context , item ) not unbind correctly
refactor Config and Attribute classes to improve code structure to enhance maintainability and readability of the codebase
simplified conditional checks for screen hot detection in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced theme - based image tint handling with a configuration - based approach in NavbarButtonsViewController . java to improve flexibility
replaced abort with throw in PolyBenchLauncher . java to improve error handling by throwing exceptions instead of aborting
replaced bootstrapMethodIndex and nameAndTypeIndex with refKind and memberIndex in ClassWriter . java to improve data handling by using a byte
updated ` findBox ` and ` findElementBox ` methods to include ` BlockFormattingContext ` as a parameter to enhance flexibility in box
refactored process launching logic and added error output handling in WorkerProcess and WorkerShellStep classes to improve error management and provide better error
added null check for operator and improved error handling for null operator in CheckedListReplaceAll . java to enhance robustness and provide clearer
added a ` _ testFill ` flag and a ` _ writeCallback ` flag in ` SslConnectionTest . java ` to control the behavior
added device configuration change listener functionality to DeviceFlag . java and changed the visibility of mCurrentValue in FeatureFlags . java to enhance event handling and
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue 2.2 . 0 gh -
removed the import of MalformedURIException from StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
[ fix ] instructorfeedbackeditpage : add focus to the end - of - date field
refactor synchronization and streamline observable subscription logic in KrakenStreamingTradeService . java to improve code readability and maintainability
changed ` System . err . println ` to ` System . out . println ` for logging the ignore of the Class - Path entry to improve
updated the SparseRowMatrix constructor to accept a Vector array instead of RandomAccessSparseVector and added a randomAccessRows boolean to improve flexibility
fix npe in delete volume usage event when volume be attach to a volume
refactor plan path handling in Utilities . java to support both local and local configurations to improve flexibility in specifying the application ' s path for
use vendored guava to ensure compatibility with vendored guava
register memorycctprovider in memorycallgraphbuilder before call registermemorycctprovider .
fix a nullpointerexception in conferencechatmanager . getmultiuserchat ( ) .
added file write validation in Save . java to ensure the file can be written before proceeding
added a new FolderSyncActivity to manage folder synchronization functionality to enhance user experience by integrating folder synchronization features
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
add support for ' % ' a a separator in the spanish tree normalization
replaced PointReader with heapPointWriter ' s getPackedValueSlice method in SimpleTextBKDWriter . java to streamline value
added LocaleRandomizer and its corresponding test class to generate random locale values based on available locales
add mime type detection for x - font - printer and x - font - type1 file
updated version numbers in Installer . java and AutoUpgrade . java from " 8.2 " to " 10.0 " to ensure compatibility
added a privileged action for setting the thread name in the TCPTransport class to enhance security by ensuring the thread name is set correctly for R
modified the handling of the read operation in Http2AsyncParser to ensure that the read timeout is set to zero when the block is set to
updated the default watcher initial delay from 120 to 600 milliseconds to improve the responsiveness of the application
updated the parameter in the error message from ` previous ` to ` previous . name ` to improve clarity by including the original name in the
added Joda - Time support for date fields in ThirdEyeJiraClient to enable proper parsing of date values in the Jira
added a PriorityGenerator instance and refactored priority generation methods in HeadersGenerator and PriorityGenerator to improve code clarity and ensure proper handling of
added a constant for the maximum scalar replace code size and modified the scalarReplace boolean condition to include a check for the length of the entire class
added DATE _ TAKEN column to the projectionTest array and updated folderSortOrder and fileSortOrder to include DATE _ TAKEN in the
updated drawing parameters in TexturePacker2 . java to use image dimensions instead of fixed values to improve image rendering accuracy by adjusting dimensions for
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and removed unused FilterHolder from JettyWebSocketServletContainerInitializer to streamline WebSocket filter configuration
added shutdown calls for ` validateSignService ` and ` trxHandlePool ` , and modified the initialization of ` nodePersistTaskTimer `
added RawJsonRequestBodyAnnotationProcessor and integrated it into JaxrsSwaggerGeneratorContext to support raw JSON request bodies in Swagger generation
added a new method ` newTarget ` to create instances of ` Target ` with specified type and extension to enhance logging capabilities by allowing dynamic target
updated the return statement in BeanContainer to use an ArrayList for entries and added BeanContainerTests class with a new test class to improve performance and
updated metric assertion from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to reflect the
camel - 16405 : fixed the issue of fileinputstreamcache not be release when exchange be complete .
added a line to set the device ID for the position in TeltonikaProtocolDecoder to ensure the position reflects the correct device ID
updated the method of reading the first line from ` Files . readFirstLine ` to ` Files . asCharSource ( ) . readFirst
added a null check for the operator in JCAssignOp and created a new Test class with a test method to ensure proper handling of operator assignments
added a flag to enable account handling in ` BaseActivity ` and modified ` FirstRunActivity ` to conditionally call ` onCreate ` to
replaced specific JTS imports with a wildcard import and refactored the logic for determining the maximum polygon to improve code readability and maintain
updated DrillViewTable to accept a list of paths instead of a single view and modified WorkspaceSchemaFactory to use this new constructor to enhance
updated the constructor of PooledByteBufAllocatorL to include additional configuration parameters to enhance flexibility and flexibility in allocator configuration
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with a test for object cl
added LLAP _ IO _ THREADPOOL _ SIZE configuration to control the number of threads used for low - level IO thread pool to improve
added class initialization for sun . security . ssl . Debug and sun . security . ssl . SSLLogger in Java versions 8 and 11 to ensure
updated latitude and longitude range checks in LatLonGrid . java and added a new test for growing polygons in TestLatLonGrid . java
simonstewart : add new expectedconditions . invisibilityofelementwithtext ( ) and new expectedconditions . refreshed ( )
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related logic to enhance file replacement functionality by allowing deletion
added a test for the ` getEnclosingObject ( ) ` method in the ` SomeInnerClassReflector ` interface to ensure that the `
added " auto _ generate _ android _ facet _ sources " configuration to enable automatic Android facet sources generation in the Ij project configuration
refactor message handling in HubChangeExecListener for improved clarity and consistency to enhance readability and maintainability of error messages
added properties property handling to the Link class and corresponding tests in QuickLinksConfigurationModuleTest to ensure that properties are correctly overridden for quick links in
removed redundant @ EqualsAndHashCode annotations and added a toString ( ) method in YamlConfigFileDTO to streamline object serialization and provide a clearer
updated generic type parameters for ` SimpleForwardingServerCall ` and ` SimpleForwardingClientCallListener ` to improve type safety to enhance type safety and
added CallerSensitiveAdapter annotations and modified forName methods in mmm Class . java and ppp Class . java to enhance class loading capabilities and improve
updated imports and replaced ` isEmptyOrNullString ( ) ` with ` isEmptyString ( ) ` in ` RequestItemRepositoryIT . java ` to
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` and changed ` LinkedBlockingQueue ` to ` LinkedBlockingQueueEx ` to improve
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
refactor TimeStepdefs to use a Calendar for date processing instead of HumanTime to improve clarity and functionality of the TimeStepdefs
fix spark banner not be add to the inventory . close # 386
updated RestProxyFactory to use exchangeSpecification ' s getUri ( ) instead of exchangeSpecification to simplify proxy creation by using the provided URI instead of
removed redundant print statements from RecordGenerator . java to streamline output for better readability and maintainability
camel - 14850 : camel - kafka consumer should not commit offset when auto commit be enable .
removed lock release logic from Liquibase and updated LoggingExecutor and StandardLockService to streamline lock management and ensure proper database change log
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and AuthorizeTagCustomGrantedAuthorityTests . java to include " rawtypes " and " deprecation
added synchronized keyword to several methods in Database . java and SessionRemote . java to ensure thread safety when accessing database operations
camel - 14850 : camel - spring - boot - auto configuration maven plugin now also support non - mutability property .
updated the method to return ticker data based on the counterSymbol instead of baseSymbol to ensure accurate fetching of market data related to the counter currency in the currency pair
camel - 16405 : camel - core - optimize to reduce object allocation in messagehelpertest
replaced UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
added synchronization to date and number formatting methods in DefaultJobParametersConverter to ensure thread safety when parsing date and number formats
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the height map height scale from 256 to heightScale to improve the responsiveness of the FractalHeightMapGrid
updated equality check from ` equals ` to ` notSame ` in ` SecurityConfig ` and changed assertion in ` SecurityConfigTests ` from `
set default value of dumpPartitionId to false to ensure that partition ID dumping is not enabled by default
added UTXO - related imports and implemented a test for TronTXOutput and TronTXOutputs in UTXOSetTest .
[ java ] unusedvariable : fix false positive with java 9
pdfbox - 4892 : avoid npe if array be null , a suggest by valerybokov
added a new test method to verify job restart properties override previous restart parameters in JsrJobOperator to ensure that new job parameters are correctly overridden
databaseplatform : add databaseplatform . disallowbatchoncascade ( ) .
removed redundant declaration of ` principal ` in ` JaasAuthenticationHandler . java ` to streamline code for better readability and maintainability
refactor core shutdown process to use an executor service for improved concurrency handling to enhance thread management and ensure proper shutdown of the SolrCore
added visibility control for mActionsView based on fullscreen progress in RecentsView . java to ensure actionsView is visible when fullscreen
refactor parameter handling in RunIdIncrementer to improve clarity and ensure proper initialization of JobParameters
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added assertions to verify the expected number of matched devices in SchemaRegionBasicTest to ensure accurate testing of the schema region functionality
[ 3.0 ] add tryinvoke ( ) method to metricseventbus , log error
updated EigenvectorCentrality . java to handle negative maximum values and added EigenvectorCentralityBuilder . java to
updated registry creation and lookup logic in LookupIPv6 . java to use a dynamic port instead of a hardcoded value to improve flexibility in
added product ID and type to geometry data in GeometryGenerator . java to ensure accurate data representation for geometry data
change beacon amplifier to 0 ( not 2 ) in the entity beacon .
refactor TubeCalc . java to improve code structure to enhance maintainability and readability of the code
set the ` enabled ` variable to false in ` HttpClientConfiguration ` and replace anonymous Runnable with lambda expressions in ` ServiceHttpClientFactory ` to improve
validate group to be non - null and non - interface .
updated JList selection annotations and added a timeout of 500 milliseconds in bug8057791 . java to improve code clarity and ensure proper
refactor the ScheduledExecutorService initialization to set the daemon thread to allow speedment applications to exit via the main method completion to enhance thread management and
update version parsing logic in ItemLexicon . java to ensure compatibility with the latest version format
added a reflection access check in the JavaAdapterFactory class to enhance security by ensuring only relevant methods are accessed
camel - 16400 : camel - mina should use lazysessioncreation in camel - mina unit test
updated initialization of IO context in CombineHiveRecordReader and HiveContextAwareRecordReader to include RecordReader as a parameter to enhance flexibility
deleted ClassLoaderHolder . java and LoaderManager . java files , and modified VerticleManager . java and VerticleManager . java to streamline
added a method ` configurationChanged ` to ` FileStore ` and updated ` JRTFileSystem ` handling in ` ScanClassPath ` to ensure proper
added try - catch blocks around registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during session registration and unregistration
updated index file paths in TestBackwardsCompatibility . java to ensure compatibility with the latest version of the Lucene library
[ hotfix ] add akkarpcserviceutils . createandstart ( ) method to facilitate creation of akkar
added retry configuration for mapreduce map attempts in TestExportSnapshot . java to limit the number of attempts for improved performance
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new test class ` SslConnectionTest ` to verify SSL connection functionality to ensure proper handling of SSL connections and prevent potential connection leaks
added validation for address family types in InetAddress and NetworkInterface classes to ensure compatibility with IPv4 and IPv6 address formats
added a test for date serialization in a collection of dates in DefaultTypeAdaptersTest . java to ensure proper handling and serialization of date objects in
refactor Message class to improve code readability to enhance maintainability and facilitate future development
added logging for SQL generation and modified condition for first update key handling in PutDatabaseRecord . java to improve traceability of SQL generation and ensure
update loop condition in TableOutput . java to correctly calculate the index based on the running width
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated priority logic in FormatStringChecker to differentiate between normal and high priority based on string arguments
[ java ] localvariabefobefinalrule - ignore non - final loop variable in for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample file in PDFExporterTest to ensure compatibility with the latest PDF format and improve
added unit tests for LdapUserDetailsMapper to validate role attribute mapping to ensure correct handling of role attributes in LDAP operations
add a config for ldap connection read timeout ( # 5449 )
updated TestDescription . java files for consistency to improve code maintainability and readability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` and update related references across multiple classes to clarify the purpose of the
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handler only proceeds when the state
updated the maximum distance for folder creation from 0.6 f to 0.55 f and removed unused variables to improve the accuracy of folder creation
updated OciConfigConfigSource . java to replace ConfigProvider with ConfigProviderResolver and modified property handling logic to improve configuration management and enhance code
refactor Testjsig class to improve code structure to enhance maintainability and readability of the code
fix mana ring , terra pick and tablet item not respect the item ' s count
regenerate client with updated copyright year ( # 4382 )
removed the static final serialVersionUID field and added a @ SuppressWarnings annotation to resolve serialization warnings without requiring a
refactor file validation logic in DataRegion . java to improve clarity and handle empty tsFile scenarios more effectively
added two new Java files , Switch21 . java , Switch19 . java , Switch21 . java , and Switch19 . java to implement
updated error message for better clarity in ComparableSubjectTest . java to improve readability of error reporting for better debugging
added standalone flag to XML content processing in StreamHelper and created TestStreamHelper for testing to enable XML processing in standalone mode and improve test coverage
updated size check and improved exception messages in Int2ObjectCache . java to ensure accurate capacity validation and enhance error messaging for better clarity
add ordering to security filter chains and implement a test for it to ensure correct ordering of security filter chains based on bean definitions
removed TimeInForce . GTC from the order type parameter in BinanceTradeService . java to streamline order processing by eliminating
updated ` FloatRangeRandomizer ` to extend ` AbstractRangeRandomizer ` and added validation for minimum and maximum values to enhance functionality and ensure
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 14850 : camel - activemq - make it easy to configure component with spring boot autoconfiguration .
added error handling for retrieving the upper bound in SourceUtils and created a new test class TestGetBound to improve robustness of bound retrieval and
refactor LeafFilterFactory to use a helper method for constructing FilterPredicateLeafBuilder based on ParquetType to improve code readability and maintain
modified artifact name handling and added cleanup methods in JobContextFactoryBeanTests and StepContextFactoryBeanTests to ensure proper resource management and ensure proper cleanup of
added a loop to read certificates from an input stream and updated the server key generation to ensure all certificates are processed and log their serial number and
refactor default value retrieval logic in ` mmm Config . java ` and add a new ` DnsFallback . java ` class for testing to
ww - 3645 add cause to the exception when fail to write a tag
changed the ` success ` field to ` url ` and updated related JSON properties in ` DepositAddress . java ` to enhance functionality by
replaced an anonymous Privilege implementation with a lambda expression and added a local free operation in a finally block to ensure proper resource management and
removed " address " and " phone " scopes from the OAuth2 provider and its tests to simplify scope definitions and improve code readability
refactor the submission of the started state in ManagedSelector to use a separate Start class to improve code readability and maintainability by reducing
added a new BIG _ DECIMAL _ 182 _ 04 constant and refactored color color sending logic in WLedHandler . java to improve
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set in ` VectorizationProvider . java ` to improve code
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate handling JSR insts in
use transactionmanager in subscriptionactivatingsubscriber to avoid concurrentmodificationexception
refactor database update logic to use an UPDATE statement instead of a TRUNCATE table to improve performance by avoiding unnecessary table truncation
remove elevation variable and its usage in ContactItemInflater for devices running Android Lollipop or higher to streamline the app ' s
renamed variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in variable naming
added privileged access control for file operations in SandboxFileManager . java to enhance security by ensuring file operations are wrapped with privileged actions
refactor GroovyParserVisitor and related classes to improve handling of Groovy binary operations to enhance type safety and support for binary operations in the Groovy parser
updated warning message to include the class name of the exception to improve clarity of error reporting for better debugging
refactor character reading and compression handling in RecordInputStream and UnicodeString classes , and add a new test for UMLat reading and writing in
add test for file download with norway character in name
updated error handling in AsyncResource to use a custom CancellationException instead of a RuntimeException to improve error reporting and provide clearer feedback on cancellation
added null check for statistics before handling cache in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is null
added a test method to remove an object from an explicit collection in MongoTemplateTests . java to ensure that the object is removed from the specified
change copyright to 2022 , add miss license
change string . format to use % n instead of \ n
added functionality to manage the scrolling behavior of the clear all button in RecentsView and PagedView classes to improve user experience by ensuring
refactor HiveIcebergMetaHook to use a static final map for common HMS properties to improve code readability and maintainability by
added a method to check if an address is already in use and refactored address handling in Jetty , Netty , and Utow
added a new argument " - cp " to the argument list in TestNestmateAttr . java to ensure the test class path is
updated schema text detail type from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in schema formatting
fix checkstyle issue in util / cluster / clustermanagerbase . java
# 1746 - add nested transaction savepoint support ( # 1747 )
change fetchSize from a fixed value to a ThreadLocal instance in QueryProcessExecutor to improve thread - safety and prevent potential memory leaks
[ java ] use noopidlestrategy instead of backoffidlestrategy for ping pong .
refactor blocking HTTP request handling by introducing a new method ` handleBlockingCall ` to improve code readability and maintainability by encapsulating
added a check for HDP _ VERSION and set it as a system property in SliderAppsViewControllerImpl . java to ensure that the
added ` loaderClass ` , ` jusl ` , and ` loader ` fields to ` JavacProcessingEnvironment ` , and implemented
added deep cloning functionality for XStream serialization in ParameterizedRobolectricTestRunner and RobolectricTestRunner to improve object cl
http : / / issues . apache . org / jira / browse / amq - 4892 - disable stack trace for web server
added a type check for OBJECT in NativeObject . java to return null if the object type is not OBJECT to ensure proper handling of object types
replaced multiple static OopField references with a single static OopField and introduced well - known klass retrieval in SystemDictionary . java to
updated JwkKeyListView to use PublicKey instead of RSAPublicKey and added support for RSA private key serialization to enhance serialization capabilities and improve
make native image heap writable when use only writable heap .
rename MBeanServerMXBeanUnsupportedTest . java file to improve clarity and consistency in naming conventions
removed import of OrderClassLoaders from MavenPluginCollector . java to streamline dependency management by eliminating unnecessary dependencies
added the ` getOwnerAddress ( ) ` method to multiple actuator classes and updated the ` Validator ( ) ` method signature in ` TransactionCaps
http : / / issues . apache . org / jira / browse / amq - 4237 - add a simple main class to
refactor command sending logic in BinaryClient to conditionally include minimum and maximum byte values to enhance flexibility in command execution based on minimum and
add empty index support for protobuf annotation
[ java ] remove correlationid from asynccommandidset if it exists .
added saveConflict calls in FileDataStorageManager , FileDownloader , and FileUploader classes to handle file conflict scenarios more effectively
updated generic type declarations in several classes for improved type safety to enhance code clarity and prevent unchecked warnings
replaced instances of ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` in multiple filter factory classes to
added Oracle and MySQL specific driver properties in DatabaseFactory to enable remarks reporting and information schema compatibility for Oracle and MySQL databases
updated the ` MockMethodInterceptor ` instantiation to include a ` handler ` parameter and added a ` serialVersionUID ` field to ensure compatibility with the latest
use system . currenttimemillis ( ) instead of date . gettime ( ) in filechangedexclusivereadlockstrategy
refactor execution context handling to wrap class loaders to enhance class loading flexibility and improve type safety in execution context management
added onBufferChanged method to TerminalTextViewOverlay and updated buffer height handling in TerminalView to improve buffer management and ensure proper scrolling behavior when
refactor code for improved readability and structure in ConfigDispatcher . java to enhance maintainability and clarity of the code structure
added a new method ` disabledFreezeAction ` and modified freeze operation logic in ` OperationActions . java ` , ` OperationRegistry . java
added an ` _ insecure ` flag to the ` TlsConfig ` class and modified the trust manager logic in ` TlsUtils ` to
refactor the handling of source and class paths in JavadocTool . java and add a new class T7091528 . java for testing
changed the data type of ` edgeColumns ` from ` nodeColumns ` to ` edgeColumns ` and modified the comparison logic to use case -
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the DefaultAddress entity is properly managed by the cascade option
change message . equals ( ) to use array . equals ( ) instead of messageid . hashcode ( )
updated test cases in AsyncProvidersBasicTest . java to use Unicode escape sequences for ISO - 8859 - 1 to ensure correct handling of Unicode
[ hotfix ] [ test ] remove unused method in rocksdbserializedcompositekeybuilder
added a method to check the static permissions of a ProtectionDomain in the JavaSecurityProtectionDomainAccess class to enhance security by allowing access to
fix crash when use float flower with no recipe . close # 212
refactor parsing logic in Parser . java to improve readability and maintainability of the code
added a method to show a connection error popup in UploadMediaDetailFragment and implemented it in UploadMediaDetailsContract to improve user experience by providing
added a new file ` Issue596 . java ` with a test for handling unhandled requests and modified ` HttpHandlerImpl . java ` to
change bit shift from 1 to 1L in NodeBitMap . java to ensure correct handling of long values in bit manipulation
refactor ImportLayoutStyle class for improved readability to enhance maintainability of the code
replaced ` gitBashConfigValue ` with ` useStdIn ` and introduced constants for TERM _ PROGRAM and MINTTY to
refactor shadowaccountmanagertest to use testaccountmanagercallback instead of mock
replaced the private final enclosingType with a direct retrieval of the enclosing type from the wrapped object to simplify the code and improve readability by
updated method names in Pairs , InPairsExpression , and TestCacheViaComplexNaturalKey3 classes to improve clarity and consistency in
hbase - 22727 remove timeout from putallcallable # set ( keyvalue , value )
[ rocketmq - 5596 ] fix npe when consumer type be empty or not set ( # 5597 )
[ java ] generate source identity before send message to the driver .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a toolbar for the
camel - 16405 : dynamic router should use reactiveexecutor if recipient mode be all _ match
updated test class imports and annotations in AggregateItemReaderTests . java to improve test structure and enhance readability of the test class
added generic type parameter ` < T > ` to the ` Procedure ` constructor in ` AbstractObjectValueTypeMap . java ` to improve type safety
added functionality to retrieve and display wikidata edits based on user name in AchievementsActivity and OkHttpJsonApiClient to
added validation to ensure ' len ' is within Short . MAX _ VALUE to prevent illegal argument exceptions during sorting
make dumbmethods . accumulateabsolutevalue ( ) consistent with the absolutely - min value .
refactor various dataset classes to improve code organization to enhance maintainability and readability of the dataset implementation
enhanced error message for invalid credential type in ProvisionClusterRequest to include acceptable values to improve clarity of error reporting for better debugging
updated random integer generation for v [ 0 ] and v [ 1 , 100 ] in TestVectorUtil . java to ensure correctness in random
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the comparison logic to improve performance and
added SSL handling in TestUtil and modified PGPropertyTest to check SSL presence to ensure proper SSL configuration and improve test reliability
chrome : disable safebrowsing for chrome
updated flight configuration handling in BaseMotorMount . java and RecoveryDevice . java to ensure that oldConfig is not null before cloning it
added a condition to check if transcoding is disabled in DLNAResource to ensure proper handling of transcoding settings during rendering
modify the handling of empty gherkinRows and raw lists in DataTable and TableDiffer classes , and add a new test for empty lists
added a static variable ` CustomIgnoreTag ` and a conditional check to remove it from the iterator if it starts with ` CustomIgnoreTag `
camel - 14850 : camel - jdbc - optimize should use optimisticlockedexception instead of generic runtimeexception
fix : resolve issue with @ configurationproperties ( ` ` parent ' ' ) and @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added onInsetsUpdated method for toolbar and fragment container padding to
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
modified return statement in ShieldedTransferActuator . java to ensure consistent behavior of the method
added debug output for the chosen ciphersuite in ServerHandshaker . java to indicate if the chosen ciphersuite is legacy or standard
updated template selection logic in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle single template selection correctly to improve
added functionality to duplicate nodes with labels in the ImportContainerImpl class to improve error handling and provide user feedback when a node cannot be imported
added a new file R2303044ListSelection . java that implements a list selection feature to facilitate testing and validation of
[ java ] check for correlation id already in use before create a new one .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the compound property is correctly
updated row count handling in StatsRulesProcFactory . java to use a new list to improve clarity and maintainability of the code
added path handling and parameter extraction logic in SpringBootDocBuildTemplate . java and updated DocUtil . java to improve parameter management and enhance code
[ java ] remove unused variable and improve code readability .
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate based on remote configuration to improve flexibility in managing
updated the RuntimeException message to include detailed JSON parsing error details to improve error reporting for better debugging and debugging
added a conditional check for DEBUG mode before logging the " filtered and not added to the widget tray " message to improve performance by avoiding
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a new test method in ` TestSimilarityBase
added reflection - based method invocation for ` SimpleMailMessage ` and ` MailSender ` in ` SimpleMailMessageItemWriterTests ` and `
added exit and quit methods with corresponding properties to Global . java and removed the old quit method from ScriptingFunctions . java to streamline exit
replaced the usage of ConfigurableApplicationContext with a direct context reference in LoanBrokerGateway and LoanBrokerSharkDetectorDemo to improve code
renamed methods from ` getFirstUnverified ` and ` getLastInvocationStackTrace ` to ` findFirstUnverified ` and ` findLastInvocationStackTrace `
[ vmware ] fix miss cookie in vmware web service .
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
updated ` bigIntegerToBytes ` calls to include a constant value of 32 in ` ECKey . java ` to ensure that the byte values are
rename fml . disabledmods system property to fml . modstates
refactor account selection logic into a separate method ` showAccountChooserDialog ( ) ` to improve code readability and maintainability by encapsulating
updated IOException message to include host and port information to improve clarity in error reporting for connection issues
added error handling for unexpected results in ValidatorContractController to ensure that an exception is thrown when processing an empty simulation results
added a null check for the root file before reading fields in TexturePackerFileProcessor to avoid potential NullPointerException when reading settings file
added null check for datasource and datasourceJNDI in PooledConnection . java to ensure proper handling of connection pool properties
updated the target and window values in TestRefprocSanity . java and changed the count calculation in TestRefprocSanity . java to
add null check for currentConsole before writing to avoid potential NullPointerExceptions when currentConsole is null
added a credential refresh delay of 100 milliseconds to the Kinesis configuration to allow more time for credentials to be refreshed during kinesis operations
refactor alert dialog creation into a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
added a ` pack ` parameter to the ` test ` method and its associated loop in ` T4501661 . java ` to enhance
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and modified dependency
replaced multiple specific imports with a wildcard import and added a method to check if a dependency is provided to simplify import statements and enhance dependency resolution
added a HashSet to manage ZipFileInputStream instances and modified the releaseInflater call to ensure proper resource management and prevent potential memory leaks
rename datamatrix to data _ matrix for consistency
added methods to run active and idle events in SequenceGeneratorSource . java to improve event handling and ensure thread safety during execution
corrected the spelling of ' getCurrentyActiveConnections ' to ' getCurrentActiveConnections ' in the BlobServer and BlobServerGetTest classes
replaced ` findAny ( ) ` and ` findAny ( ) ` methods with ` findFirst ( ) ` and ` findFirst ( ) `
added support for additional architectures ( ppc64 and ppc64le ) in Bits and ByteArrayAccess classes to enhance architecture detection for
updated the error message in RoboMonitoringInstrumentation to include a reference to the GitHub GitHub to provide more detailed information about activity resolution failures
use long . max _ value for timeout in waitwithdeadline ( )
replace instances of java . time . Date and java . time . ZoneOffset with java . time . Instant in DateUtilTest . java to
refactor BytesRef class to improve code structure to enhance maintainability and readability of the code
added a toast message indicating when YouTube Player does not work on Lollipop to inform users about updates to Google
added parsing error checks for unterminated dollar quotes , string literals , and block comments in the SQL parser to improve error handling and provide clear
added check to ensure vibrator be not null before try to use it .
updated table border and background color settings in DotRenderer . java and modified arrowhead and arrowtail assignment logic to improve table styling and enhance
added a method to check if a string is encoded and updated the SetProcessor to use this new method to determine if a string is encoded and
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
renamed methods in X509Certificate class for clarity to improve code readability and maintainability
validate wavefront config uri implementation ( # 3903 )
replaced ImageView references with NetworkedCacheableImageView and added loadImage method in NetworkedCacheableImageView to enhance image loading
removed the ` View ` parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
updated gdxControllersVersion from " 2.0 . 0 " to " 2.0 . 0 " in DependencyBank . java and modified
rename LaunchedURLClassLoader . java file to improve clarity and consistency in naming conventions
updated the query implementation in DataSourceHealthIndicator to use a RowMapper for better row retrieval validation to ensure correct number of columns in the result set
add no - cache header to layout tag , and remove unused import in adminonlyfilter . java
updated warning message formatting to use Locale . ENGLISH to ensure consistent behavior of warning messages across different locales
refactor SolrQueryParser constructor to include an Analyzer parameter to improve flexibility in query parsing by allowing different analyzer configurations
added licensing information and updated copyright year in multiple Java files to enhance copyright information and clarify licensing requirements
removed unused imports from MainTest . java to improve code clarity and maintainability
refactor TypeContributions class to improve code readability and maintainability
added support for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of vector types in batch processing
updated parameter from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using the request object ' s name for
removed the ` isTypeMatch ` method from ` AbstractConfig . java ` to simplify the code by eliminating unnecessary type matching logic
[ java ] add ` ` offer ' ' method to facilitate the creation of message buffer with a timestamp and correlationid .
rename method ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll ` and
add a new annotation ` NoBootstrap ` and modify ` BootstrapInserter ` to check for annotations annotated with ` @ NoBootstrap ` to
updated TableDescriptorChecker to use TableDescriptorBuilder for maxFileSize and memstoreFlushSize retrieval to improve flexibility in determining maximum and flush size
updated variable names and calculations for commit counts in BranchGraphServlet . java to improve clarity and correctness of commit management logic
updated main method and run method to include InvocationTargetException to improve thread safety and error handling in the application
added a constant BUILD _ ID and refactored cache metadata handling in CachingBuildEngine to improve clarity and maintainability of build information
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code and improve maintainability by elimin
removed redundant call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added TezConfiguration import and initialization in TezConfigurationFactory . java to enhance configuration management for Tez configurations
added null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added null checks and a forget method to the OpenALAudio class to ensure proper handling of recent sounds and prevent potential NullPointerExceptions
clear onpositiondiscontinuity only once in simplebaseplayer . state
added various decimal places for number tick units in NumberAxis . java to enhance the display of tick units for better visual representation
replace builder method calls with factory methods for creating TargetGraphAndBuildTargets to improve code readability and reduce boilerplate in the codebase
removed the IndexFileNameFilter class and replaced its usage with direct file name checks in IndexFileDeleter . java to simplify file deletion logic and
add a config option to check the entire entity ' s collision bounding box instead of just the block ' s collision bounding box for ladders
added a compression level parameter to the ApkBuilder and SignedJarBuilder classes to allow customizable compression levels for output jars
add a test to verify that static fields are included in a JAR file to ensure that static fields are correctly included in the jar
added support for BYTES data type in MetricFieldSpec and related classes to enhance data handling capabilities and improve performance in metric operations
updated string formatting in multiple failure error messages to include a newline character to improve clarity of error messages for better debugging
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed `
added cache management functionality and updated test cases in SpringDataJPAJoinFetchPaginationTest and SpringDataJPAJoinFetchPaginationConfiguration to enhance
make the pronunciation model use locale - specific file name
added a null check for postbody in SimpleHttp and implemented a corresponding test case in TestHttpPlugin to ensure proper handling of null postbody
added a Dispatcher to ClientSideSlb and shutd it up in ClientSideSlbTest to ensure proper resource management and shutdown of the
modified the v2 setting logic in TextureRegion . java to account for horizontal flipping to ensure proper positioning of texture regions based on their
throw invalidconfigurationexception instead of hazelcastexception for unknown property on discovery strategy
added a null check for contextPath in MetricsPublisher . java to ensure a default value is used when it is null
[ drools - 5352 ] avoid npe when reinitializing a kiecontainer with a class that do n ' t exist
added serialization header for BTreeMap and validation during read operation to ensure proper serialization and deserialization consistency for
added precompiled header checks and improved error handling in the AbstractCxxSourceRuleFactory to ensure proper handling of precompiled headers and enhance
replaced ` WeakReference ` with a custom ` AccWeakReference ` class for improved security handling to enhance security by ensuring privileged
changed visibility of the ` findNextIndex ` method from package - private to private and modified its implementation in ` OrderedMap ` and ` OrderedSet
changed the assignment of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the vertex is direct
mary : fix for ticket : 135 -- correct handling of audio effect help text
changed the return type of the ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to
pdfbox - 5764 : use ` ` limit ' ' instead of ` ` capacity ' ' for chunk size in randomaccessreadbuffer
added null check before removing the close hook from the context to avoid potential NullPointerException when context is null
updated border spacing and cell padding logic in CellLayout and DeviceProfile classes to improve flexibility in layout spacing for different folder types
refactor value numeric handling in ColumnConfig to use a new ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing
updated the condition in FormAuthenticator to check if the response is deferred to ensure that the authentication process behaves correctly when the response is not deferred
updated argument checks from " -- module - start - ini = " to " -- add - to - start " in StartArgs . java to
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition name is used when the specified value is null
[ hotfix ] [ stream ] add null safety check in streamnode and streamgraph
updated return statements in DefaultArtifact . java to include classifier information to improve clarity of artifact representation in the output
camel - 14850 : camel - kafka - rebalance should not call staterepository . getstate twice for the kafka topic .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor to improve user feedback when a class cannot be loaded due to missing dependencies
rename gmail _ notifications _ enabled to enable _ gmail _ notifications in xmpp wizard
doc ( generator ) : update protoc to v3.15 . 3 ( # 1 )
updated LumberjackMultiThreadTest to use dynamic concurrency level based on available processors to improve test reliability by adjusting expected message count
fix checkstyle issue in entity / player / glowplayer . java and playerupdaterequesthandler . java
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
api : make api and secret key optional in updateUserCmd . java
refactor switch - case statements to if - else statements for improved readability in MfaProvider , IdleTimer , JdbcMfaProvider
rename AbstractMetaDataExportMojo class for clarity to improve code readability and maintainability
added exception handling for SQLIntegrityConstraintViolationException in Hive to ensure proper dropping of materialized views during database operations
changed property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to align with the project ' s
added a new deprecated class ` RoboExecutorService ` in the ` org . robolectric . util . concurrent ` package to indicate that
added checks for the group ' s root state before adding subgroups to the menu items to ensure that subgroups are only added when the group
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the
refactor TestDynamicNumberOfGCThreads to use dynamic arguments instead of hardcoded values to improve flexibility in testing dynamic number of GC
updated ` CxxPlatforms ` and ` KnownBuildRuleTypes ` to use ` Flavor ` instead of ` ImmutableFlavor ` to
update CreateTable and CreateTableDeParser to use PlainSelect for parsing create options and improve parameter handling to enhance flexibility in SQL creation statements
updated the background drawable setting in ChatViewerFragment to include alpha transparency to improve the visual appearance of the chat background in the UI
test : migrate ctiteratortest to junit 5 ( # 2635 )
added token . clear ( ) method calls in multiple tokenizer classes to ensure consistent token state management during token processing
add a test case to make sure astinitializer do n ' t crash
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to remove dependency on ` Enum < S > ` and added validation to
simonstewart : make the selenium - backed selenium test suite a bit easy to run
updated StringConverter to set maximum fraction digits for both Double and BigDecimal types to enhance flexibility in number formatting for better precision
remove redundant code in aggregatelifecyclelistener . getcurrentscope ( )
updated touchable insets to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ INSETS _ CONTENT to
removed an unnecessary check for the ' ~ ' character in the FencedCodeBlockParser class to streamline code by eliminating unnecessary
added socketTimeout property and its handling in multiple classes to enable configurable socket timeouts for network connections
added a delay of 500ms in ElementAttributeTest . java to handle InterruptedException to improve responsiveness during test execution
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of special characters in HTTP responses
refactor List . java to improve code structure to enhance maintainability and readability of the code
added URI and Path parameters to AsyncFileImpl constructor and updated error handling in AsyncFileImpl to improve flexibility in handling file operations and provide
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are part of the stable state
fix npe in case there be no vsp device configure on physical network .
rename ` retryUploads ` to ` retryFailedUploads ` and update related logic in ` FileUploader . java ` and ` UploadListActivity .
updated Java version checks to use classFileVersionJava9 instead of getJavaVersion ( ) to ensure compatibility with Java 9 and improve class generation
fix problem with error and warning in papplet . parse ( )
added a method to remove all client headers from the client header map to facilitate easier management of client headers in the HTTP client
replaced Vector with ArrayList and updated related method calls to improve performance and readability of the code
updated the DEFAULT _ GRID _ COLUMN constant from 4.0 f to 3f to adjust the default grid column for improved user experience
added a condition to check if the view creation is not defined in the CalcitePlanner class to ensure that the planner correctly handles view creation
updated date pattern in TestHS2HttpServer . java and refactored variable names for clarity to improve code readability and maintainability
added a try - catch block around the object assignment in GraphPrinter . java to handle potential exceptions during reflection operations
simonstewart : add a test to make it easy to access page with an insecure ssl certificate .
replace ` byteOffset + = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ( byteOffset , BYTE _ BLOCK _ SIZE )
replaced static methods with instance methods for ` firstEncoder ` and ` secondEncoder ` and updated string formatting to use ` Locale . ENGLISH `
do n ' t swallow unexpected error in tcpclient . close ( )
add @ suppresswarnings ( ` ` serial ' ' ) annotation to papplet . java
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` and modified constructor parameters
added confirmation dialog to save / discard any change and return to the main window
added validation for response type and client ID in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in OAuth20AccessToken
added a check to ensure the index is at least 1 in DrillBuf . java to prevent potential errors during buffer operations
updated the ` initTableMapperJob ` method signatures to include ` InputFormatClass ` as a parameter to enhance flexibility by allowing different input
removed an unnecessary call to the append method in AbstractJRubyMojo . java to streamline the code by eliminating an unnecessary
sulong : throw an exception if eval be use without a language .
added deprecation warning for the RESERVE commit duration in ReplicationHandler . java to ensure compatibility with Solr 7.1 and improve error handling for
resolved - issue batch - 1342 : use linkedhashmap instead of hashmap for cache _ key and cache _ foreign _ key
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for key pair generation to improve type safety and simplify key pair generation process
added a suspend method to the Restarting class and updated the StateWithExecutionGraph to include a status override parameter to enhance state management by allowing
replaced the singleton instance of RotationTouchHelper with a direct instantiation to simplify the initialization process and eliminate dependency on MainThreadInitializedObject
refactor the code to use flatMap for port table handling to improve readability and maintainability of the code
updated thread ID parameters in several methods from ` lwp _ id ` to ` unique _ thread _ id ` to improve clarity and accuracy
remove offer from the list if they have the same offer id and update log message accordingly
use constant for tl 1.3 and 1.2 for test
added type handling for ` mock ` in ` MockitoMethodInvocationControl ` and updated related tests in ` SystemClassUserTest ` and `
updated the ` NotLoadedException ` constructor to accept a ` PartialDatabaseObject ` parameter instead of a ` DatabaseObject ` to improve clarity
removed the import of DisplayUtils and added an extra file to the intent in FileDisplayActivity . java to streamline the code by elimin
added error handling and error logging for file renaming failures in StoreDirect and StoreWAL classes to improve robustness of file operations and provide clear
added a task snapshot retrieval process in the UI _ HELPER _ EXECUTOR and modified the stopSwipePipToHome method call to
added hidden functionality to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to improve command argument visibility management in the application
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test runs on the correct
[ geos - 7748 ] use geoserverextensions . bean ( ` ` catalog ' ' ) instead of direct reference to catalog
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents during shortcut creation
added ` getId ( ) ` and ` setId ( int id ) ` methods to ` TiledMapTile ` , ` AnimatedTiled
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection string to include version parameter in Session . Builder to ensure compatibility with the latest version of the IoTDB database
added schema properties and modified the schema generation logic in LiquibaseGenerateChangeLogMojo . java to enhance schema handling and improve the
updated the method from ` putIfAbsent ` to ` put ` in ` JmxRegistry . java ` to improve performance by reducing the overhead of
planner - 535 : log singlebenchmarkrunner exception instead of just error
changed the access modifier of the ` doPutRecord ` method from ` protected final R ` to ` protected R ` to allow the method to
fix crash when open folder in folderselectorfragment .
added asynchronous response handling and test cases for large response content in FastCGIProxyServletTest to improve performance and reliability of response content processing
added a call to start the ReadInteractionsService in MarkReadService . java to start the ReadInteractionsService for improved functionality
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when the
added logic to set the mail server port to a default value of " 25 " if it is not specified to ensure a default mail server port
added retry logic for SSLFactory renewal in TlsUtils . java to improve reliability by allowing retries when attempting to renew the SSLFactory
updated the date format in ObjectMapperProvider to include milliseconds to ensure accurate representation of time in milliseconds
update assertion message in SpyingOnRealObjectsTest to clarify visibility issues related to mocking private classes
added functionality to check if the line ends with a line tag is on NL in InlineBoxing . java to ensure that line endings are
updated filePathString construction to handle potential null parent cases to improve robustness by preventing potential NullPointerException when filePath ' s parent is null
removed the import of DocCollection from TopicStream . java to streamline dependencies and improve code clarity
refactor NinjaServletContextTest to use a dedicated method for creating the ServletInputStream and add a new test for handling the Windows 1250
updated properties in AbstractCasEndpointTests to include specific web exposure settings to ensure proper configuration of web exposure settings in the test cases
added a validation check to ensure the current graph is a dynamic graph to ensure that the current graph is valid to prevent runtime errors
fix ` @ scopeone ` not work with ` @ type ( default = ' ' ' ) ` and add ` @ eagerinitfactory `
added support for suppressing exceptions in JSON path expressions to enhance error handling by allowing exceptions during JSON path operations
replaced the existing ` ControllerLeaderLocator . create ( _ helixManager ) ` method call with a new implementation to ensure proper initialization of
updated usage messages in CLHSDB . java and HSDB . java from " java " to " clhsdb " and " hs
refactor ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` to streamline code for better readability and maintain
[ hotfix ] remove deprecate write . class from beam - sdk - transforms
refactor ShadowAccessibilityManagerTest to use accessibilityManager instance instead of accessibilityManager directly to improve code clarity and maintainability by
add a new analytics group to show a flutter usage statistic
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` SourcePathResolver ` parameter in several
replaced the existing EnumDataTypeHelper implementation with a new PostgreSQLEnumDataTypeHelper class to improve code organization and encapsulate enum value retrieval logic
updated the assertion in LogFileTests to use the platform - independent file separator to ensure compatibility with different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added support for dropping index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations for index tables
added visibility check before updating disabled flags in RecentsView to ensure that disabled actions are only updated when the visibility is not visible
added conditional syntax highlighting for non - Windows operating systems in Repl . java to ensure proper syntax highlighting for non - Windows environments
rename xss _ request _ parameter _ to _ cookie and xss _ request _ parameter _ to _ http _ header to hs _ request
replaced file path retrieval method from ` toUri ( ) . toUri ( ) . getRawPath ( ) ` to ` toString ( )
updated the method call to removeCaptureListener in SelectBox . java to ensure proper cleanup of capture listeners
changed the value of the _ metaDataComplete variable from true to false to indicate that the metadata has already been completed
updated the ` removeTaskTarget ` method to use a thread pool and modified bitmap creation logic in ` ThumbnailSearchResultView ` to improve performance
added environment variable handling for PLATFORM and RELEASE in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest
modified type casting logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java `
added unit tests for crlf new lines in comments and Javadoc in AddImportTest . java and modified imports in AutodetectGeneralFormat
added hubMode configuration to AbstractLiquibaseChangeLogMojo and declared it in AbstractLiquibaseMojo to allow custom
simplified the initialization of skipPolicy in JsrFaultTolerantStepBuilder . java and modified the condition in JsrChunkProcessor
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
updated the method for setting the IndexWriterConfig ' s indexer thread pool to use reflection instead of reflection to improve flexibility in accessing IndexWriter
updated the address format in GameCanvasImplementation . java to remove the porting from the SMS address to simplify the address construction for better readability
added a copy method for JobExecution and updated usage in MapJobExecutionDao to improve job execution management by serializing and deserializing JobExecution objects
added a new file ` DownloadTest . java ` to implement a test for downloading an image from a specified URL to facilitate testing
normalize the language to ` ` spa ' ' , not ` ` es ' '
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for better error handling in ` GenericUDFRound . java ` to improve error
fix nullpointerexception in managedependencies # managedependencies # updatedependency ( )
added multiple AntPathRequestMatchers for various HTTP headers in SecurityConfig . java to enhance security by allowing dynamic URL matching based on application context
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
add initial support for annotation in superclass that pass inherited @ inject
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to potential issues
[ openwebnet ] fix schedule with fixeddelay ( # 1746 )
simplify code by use the executor . execute ( new socketeventprocessor ( ) )
deleted the ` SunToolkitSubclass . java ` file which contained a method for flushing pending events from the application context to remove unnecessary functionality
replaced direct calls to MathUtils with a new method ` getTranslation ` in ` DefaultRenderableSorter ` and added a method to check for
added a new test method to verify the registration of wrapper handlers before primitive types in TypeHandlerRegistryTest . java to ensure correct handling of primitive
added a method to convert alternate color space to RGB images in PDSeparation . java to enhance image processing capabilities for PDLab colors
replaced references to ` CommonsApplication ` constants with ` BuildConfig ` constants in multiple files to centralize configuration management for better maintainability
camel - 14850 : camel - platform - http - health : add health check for component that have extension for connectivity verification
fix a nullpointerexception in the thorn and flare chakram .
added a test for altering tables with indexes extending primary keys in AlterTableWithViewsIT . java to ensure proper functionality of index management
updated offset initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve code clarity and enhance test coverage for
removed the DrillMongoConstants . ID field from the fields collection in MongoRecordReader . java to ensure the ID field is properly removed from
added disconnect functionality to YeelightHandlerBase and DeviceBase classes , and improved connection termination handling in WifiConnection to ensure proper
add support for ` ` auto _ increment = 3 charset = utf8 ' ' for mysql compatibility
added support for multiple existing shared index informers in SharedInformerFactory and updated tests accordingly to improve flexibility in managing shared index informers and
server : fix npe when save template detail from db
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage and improve color array initialization to enhance code clarity and
added new properties ` isShortcut ` , ` uri ` , and ` displayMode ` to ` LauncherProvider ` , and removed deprecated constants
[ drools - 686 ] move data / broker file to drools - examples
added ` legendTop ` and ` legendBottom ` variables to the PieChart class and updated offset calculations accordingly to improve legend positioning and
added a check to return early if the world transform is zero to optimize rendering performance by avoiding unnecessary processing
added test case for mary script generation
nifi - 1640 : add the remote source host attribute to the flowfile in listenhttpservlet .
updated compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and prevent potential memory leaks
updated link attribute references from " xlink : href " to " href " in ComponentDescription . java to improve clarity and consistency in link
camel - 14850 : camel - aws2 s3 stream upload : use name of executor instead of hard cod the name
hbase - 23203 add log for regionserver when cluster be shut down
added null check for spans before logging in Slf4jSpanLogger . java and improved warning messages in DefaultTracer . java to enhance
trim whitespace from active options before adding them to the configuration to ensure that active options are trimmed and prevent potential errors
added depth effect preference handling and modified wallpaper zoom out logic in DepthController . java to enable or disable depth effects based on user preferences
updated the assertion in OverseerTest to check the success count of the overseer to ensure that the overall success count reflects the
removed conditional checks for kernel version in LinuxFileStore . java to simplify the code by always returning true for attribute checking
[ hotfix ] fix checkstyle violation in execconstants
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in ScanUtil . java and invoked it in TableSnapshotResultIterator . java to enhance scanning capabilities
added validation for lowRange in Request and RequestV2 classes to ensure lowRange is not less than 100000000000L to prevent potential issues with
changed access modifier of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and updated cache size calculation in Async
server : fix listhosts api to return zoneid instead of host uuid
[ zeppelin - 5231 ] fix zeppelin - 5231 in zeppelin -
replaced a conditional check before removing a file from the filesystems list to simplify the removal process by eliminating unnecessary checks
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated related methods for JSON serialization to improve data representation
increased the polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` and ` hard
[ selenide ] log ` ` fail to take screenshot because browser be not find ' '
renamed multiple Java classes related to the dial package to improve clarity and consistency in naming conventions
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
update RyukContainer version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest Ryuk features
updated method return from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` ,
fix checkstyle issue in fml / client / fmlclientlaunchprovider . java
[ hotfix ] [ yarnitcase ] simplify yarnclusterdescriptor creation in yarnitcase
fix localmapstatisticawareservicetest . test _ stats _ included _ maps _ on _ local _ map _ stats
deleted the AllTests . java file to remove unused test suite dependencies
added Unicode character handling for non - breaking hyphens and zero - width spaces in AbstractWordConverter to improve text processing accuracy for Unicode characters
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated the method to retrieve the result mappings for a row key using a new helper function to improve code clarity and maintainability by using a
added a new boolean variable ` eventHandled ` and set it to true in ` UIText . java ` to ensure the event is handled
deleted the ` Controller . java ` annotation and renamed ` Weldby . java ` to ` WeldModule . java ` to improve cl
allow zero - width quantifier to monitor capture group in empty check .
replaced the initialization of ` liquibaseProLicenseKey ` with a protected variable ` liquibaseProLicenseKey ` to
mondrian : fix a bug where the measure hierarchy member reader be n ' t set properly .
make - g an alias for - h for generate debugging information .
mondrian : fix typo find by codespell on fossies . org
added functionality to retrieve and manage friend paths in Kotlin compiler and step definitions to improve the handling of source paths for Kotlin compilation
added aliases for character scripts in Character . java and modified main method in CheckScript . java to enhance character script handling and improve command - line
replaced equality checks with ` equals ` for commandId , hostname , role , and roleCommand in ` ExecutionCommand ` , and added JSON
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
refactor OCFile . java to improve code structure to enhance maintainability and readability of the code
added a ` toString ( ) ` method to the ` SystemScope ` class to provide a clearer representation of the object ' s properties
refactor CSS parsing logic to handle percentage and non - number parameters more accurately to improve error handling and provide clearer error messages for invalid
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to validate the correct number of rows returned during the reverse scan
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated assertions in ` BackupHelperTest `
updated toast messages in multiple activities to provide clearer context to improve user experience by providing more descriptive messages for toast notifications
simplified condition checks in RendererUtilities and updated test assertions in RendererUtilitiesTests to improve code readability and enhance test coverage for live item
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid operations instead of iterators to improve type safety and enhance code readability
added error handling for SQLite exceptions during database alteration in FileContentProvider . java to improve robustness by catching potential SQLite exceptions during database
removed ` System . err . println ` statement from ` AsyncServletIOTest . java ` to clean up the code and reduce unnecessary console
updated ` ConvertJoinMapJoin . java ` to use a new method for calculating online data size based on the hash table load factor to improve
updated the ` buildView ` method to accept a ` Context ` instead of a ` LayoutInflater ` and added background resource management to enhance
added assertAuthentication functionality to SecurityMockMvcResultMatchers and corresponding tests in SecurityMockMvcResultMatchersTests to enhance security by allowing authentication based on
vpc : set gateway network id to null in case vpc id be null .
[ flink - 10955 ] [ test ] skip flink savepoint test on java 11
fix the annotation order of the field in the java . desktop module .
updated loop condition and action processing logic in Actor . java to improve code readability and ensure actions are processed correctly
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API changes
[ ds - 3752 ] add test for orgunit and orgunit relationship virtual metadata
added null check for spatial before processing to avoid potential NullPointerException when spatial is null
updated token filtering logic and added new filters in ConditionalTokenFilter , FixedShingleFilter , TestRandomChains , TestConditionalTokenFilter , and
update unsafestorenode and storefieldnode to use stateafter ( ) instead of graph . unique ( )
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the CasEventRepository does not return an empty list to ensure that the event handling logic does not throw an exception
removed unused ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` parameters from ` AuthenticationAttrProcessor ` to streamline code
added null check for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
removed the ` setTypeface ` method that throws an exception in ` CodenameOneTextPaint . java ` to ensure that runtime exceptions are
implement the ` open ` method in multiple PinotFS classes and update PinotFSFactoryTest to return an InputStream to enhance functionality by allowing
simonstewart : remove the deprecated fail ( string message ) method from webdriverrunner
solr - 2645 : fix solrrequestparsers . getitems ( ) to return null if item . getsize ( ) > 0
refactored the ` createResultObject ` method to use a private field for ` useConstructorMappings ` and removed the ` ResultObject `
updated SQL generation syntax in CreateTableGeneratorTest . java to include quotes around the table name to ensure compatibility with SQL standards for foreign key
modify VectorizationContext to handle filtering based on the result type to improve flexibility in vectorization handling based on the type of the result
updated the type declaration of ` moveSelectorConfig ` to specify it as ` MoveSelectorConfig ` to improve type safety and clarity in config
replace ReorganizeTableStatement instantiation with modifyDataTypeStatement to streamline code by eliminating unnecessary parameters
refactor cluster name handling to use constants from IoTDBStartCheck to improve code readability and maintainability by standardizing naming conventions
do n ' t swallow exception in peergroup . connect ( )
added conditional logic to handle multiple style strings in Nano . java to ensure consistent style assignment based on user - defined styles
change datafixer to use adventure nbt converter for chunk , block _ entity , and entity
update return value in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on String "
8274883 : test / java / lang / runtime / thread / testthreadfailure . java fails due to incorrect memory allocation
refactor retryFailed method to return a FailureContext instead of an integer and introduce DataProviderRetryAnalyzer for retry logic to enhance error handling
updated the method to return a bandwidth value instead of the first value to improve accuracy of token retrieval based on the bandwidth value
danielwagnerhall : add some unimplemented method to the selenium emulation api
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and added public key algorithm details to simplify the method signature and
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks to ensure that dialog and frame components are opaque and not decorated to prevent runtime exceptions due to invalid component states
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to enforce immutability of the `
added RedisStandaloneConfiguration and RedisPassword handling in RedisObjectFactory to improve sentinel configuration management for Redis connections
added ' lastseendelayedmessage ' property to chatroom . jabber . jabber . api . jabber . chat
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method call to
refactor share operation handling in FileOperationsHelper and OperationsService to utilize new service methods to improve code maintainability and facilitate
removed the check for ` isInjected ` in ` BeanDefinitionInjectProcessor ` and added ` @ Inject ` annotation in ` FieldPropertyInject `
replaced direct calls to ` getMinBuildHeight ( ) ` with a calculated variable ` yStart ` in ` ClassicPlotManager . java `
added null pointer exception handling in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions during execution
do n ' t read exif - with - interop subfiles if they do n ' t have an interop directory .
added support for the ENABLED _ LS mode in VersionTargetGraphMode and updated executor initialization in VersionedTargetGraphCache to improve dependency management based on
added a condition to check if ` child . format . isVideo ( ) ` is true before processing video formats in ` DLNAResource
refactor AutoMlClient to improve code organization to enhance maintainability and readability of the code
updated LwjglNativesLoader to load native libraries dynamically based on the presence of the PersistenceService to improve flexibility in loading native
added support for CSV escaping in CSVRequestHandler and updated related test cases to enhance flexibility in handling CSV encapsulation and improve test coverage
updated grant type validation in ClientRegistrations . java and modified corresponding test cases in ClientRegistrationsTests . java to validate the correct grant type
enhanced error messages in Throwable and SuppressedExceptions classes to include additional context to improve debugging and clarity of exceptions during self - suppression
updated query execution and iterator initialization in DerivedTableIT . java and modified OrderedResultIterator to use null as the limit parameter in ClientAggregate
added RSquare handling in RegressionEvaluator and a corresponding test in StreamExpressionTest to improve regression evaluation accuracy and ensure correctness of RS
added handling for request headers in ThreadContextMDCServletFilter to ensure proper processing of context attributes based on request headers
refactor code to use a local variable ` mapWork ` instead of casting it to ` MapWork ` to improve code readability and reduce
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by encapsulating
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer in JwtIssuerAuthenticationManagerResolverTests to improve cache
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
do n ' t cache interop type in non - trivial interop method
replaced ` MILLISECONDS . sleep ( 500 ) ` with ` MILLISECONDS . sleep ( 500 ) ` in ` AbstractBasicMockingIntegrationTest .
added a new file ` KernCrash . java ` that implements a simple application with a custom font to demonstrate the use
added a call to ` fail ( ) ` in the ` LinkedHashTreeMapTest . java ` file to ensure that the test fails without
added a new method ` getInterfaceAddresses ` to retrieve network interface addresses with a specified prefix to enhance functionality by allowing dynamic filtering of network interfaces
do not cancel the housekeeper thread if it ' s already cancel
updated the condition from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in the ` GroupTransferService ` class to ensure
refactor Assert class to improve code readability to enhance maintainability and facilitate future development
added a new test class ` Issue247Test ` to verify the functionality of creating and accessing a tree map in a database to ensure that
changed the type of the ` results ` set from ` CategoryItem ` to ` String ` and modified the ` doInBackground ` method to
updated validation logic in ValidatorTest . java to check for date validity based on leap years to ensure that validation results are only validated for valid years
added error code handling and improved response processing in GrblController . java to enhance error reporting capabilities for improved user experience
updated the scroll format return logic to include a label for the home button when there are no screens to improve user experience by providing a
removed the count parameter from the getTrades method in Bittrex and BittrexMarketDataService classes to simplify method signature and
updated ConsoleReader and MemoryHistory classes to improve handling of null strings and streamline flushing logic to enhance code robustness and prevent potential NullPointerExceptions
updated the jdkPath assignment to remove the " . jdk " suffix to streamline the path for better readability and maintainability
refactor method calls from ` getDescription ( ) . getBuildRuleType ( ) ` to ` getType ( ) ` across multiple files to improve code
updated JFCModel constructor to accept a logger parameter for warning messages to enhance logging of warning messages for better debugging and monitoring
added a check to ensure the tolerance is positive in MaximumInscribedCircle . java to ensure that the tolerance is not negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to enhance testing
added platform - specific checks for stable float and double tests in NaNTest . java to ensure tests are only executed on 32 - bit systems
added DesktopTaskbarUIController to manage hotseat icons during taskbar initialization and destruction to ensure hotseat icons are
added progress tracking functionality to the ModItemAdapter and modified related classes to handle task count updates to improve UI responsiveness during mod item installation
refactor file handling methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` to use ` Collection < ServerInterceptor > ` instead of ` Set < ServerInterceptor > `
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and the implementation of ChainingServicesManager to simplify the interface and class hierarchy for
add debug log to resourcepackloader . generatepackinfo for mod file .
fix ( gapic - generator - java v1.0 ) : update gapic - generator - java version to 2.1 . 0 ( #
added grow ( ) , growX ( ) , and growY ( ) methods to the Cell class to enhance the flexibility of cell grow
refactor binding management in DefaultInputHandler to use generics and simplify key binding retrieval to enhance code readability and maintainability by eliminating
fix for http : / / issues . apache . org / activemq / browse / amq - 2382 - catch exception in
updated memory allocation from long arrays to byte arrays in MetricsMemoryTester . java and added a memory fail count check in TestDockerMemoryMetrics
deleted the JobParametersPrototype . java file to remove unused or redundant parameters from the codebase
added a ` securityEnabled ` parameter to the ` MappingsTable ` class and updated related methods accordingly to enable security checks for mapping rows based
update references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable dumping to file
kristianrosenvold : do n ' t call audio _ decoder _ avc workaround for android < = 17
[ java ] check if a log buffer be connect before set the producer limit .
added a condition to check if no information is available when dbInfo is null to ensure proper handling of output options when no information is available
make ssl default to 443 when port be not specify
added error output options to the DOMSubtree builder in DOMConverter . java to enhance error handling by providing customizable output options
refactor Assert class to improve code readability to enhance maintainability and facilitate future development
added ` retain ` functionality to the ` Publish ` and ` Event ` classes , and modified related classes to support this functionality to allow users to
added ` @ JsonIgnore ` annotation to ` TestResultSummary . java ` and updated JSON schema in ` EventSerializationTest . java ` to
[ flink - 18686 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
use fastparse . parsed instead of fastparse . core . parsed in favor of fastparse . parsed
bugfix : ssl _ ctx _ set _ session _ id _ context and ssl _ ctx _ set _ timeout be not thread safe
replaced ` . size ( cp . size ( ) = = 0 ) ` with ` . isEmpty ( cp . isEmpty ( ) ) `
[ hotfix ] [ table - planner - blink ] use ansi sql dialect instead of calcite dialect
change log level from debug to trace for no firmware update handler available for a given thing UID
added tests for handling null values in date and timestamp fields in GetObjectTest . java to ensure correct behavior of date and timestamp retrieval in the database
refactor string construction in StringSubject , Subject , and CustomFailureMessage classes to improve readability and maintainability of the code
added unit tests for repository permissions in UserModelTest to ensure correct behavior of repository permissions for different team types
added a new file Test7088020 . java that implements a MethodHandle for testing method argument types to ensure proper handling of expected stack
replaced the ` matchAudienceRestriction ` method with a ` HashSet ` for audience URIs matching in ` Saml2ResponseValidator . java `
refactor cache refreshing logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code readability and maintainability by
replaced direct usage of ` System . err ` with a null check for ` _ stderr ` in ` StdErrLog . java ` to
added a new warning constant SEPARATION _ ORDER in Warning . java and implemented stage activation checks in BasicEventSimulationEngine . java to enhance
updated the query optimization parameter from offlineTableConfig to realtimeTableConfig to ensure the query optimizer uses real - time tables instead of offline tables
added logic to enable or disable the HBase normalizer in the PhoenixHBaseAccessor and UpgradeCatalog240 classes to ensure proper handling of
rename SavepointV2 and FileStateHandle classes to improve clarity and consistency in naming conventions
added BluetoothClass handling and tests in ShadowBluetoothDeviceTest . java and ShadowBluetoothDevice . java to enable testing of Bluetooth
rename # contains ( playerprofile ) to # containsprofile ( playerprofile ) in uuidlistfile
( chore ) camel - feel : allow empty list in sum ( ) function
updated method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( ) `
updated the construction of the coreNodeName string to use the core name from nodeProps to improve clarity and consistency in naming conventions
added updatebackpressure to chatactivity . update ( ) for backpressure .
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for Tagger parser functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
updated element type checks in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with
updated triangle positions in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTriang
updated multiple Java classes to implement the ` @ Override ` annotation to ensure proper method overriding and enhance code clarity
refactor JWTClaimsSet creation to use builder pattern to improve readability and maintainability of the code
refactor stack overflow state management in StackOverflowCheckImpl . java to improve clarity and maintainability of the code
added shadow methods for SQLiteDatabase , ContentValues , and SQLiteDatabase in Robolectric to enhance compatibility with Robolectric ' s
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced the ` bytesPerDim ` field with a ` ArrayUtil . ByteArrayComparator ` for comparison to improve performance by utilizing a custom comparator for
replaced language , country , and variant variables with a script variable and updated their usage in the Locale class to enhance locale management by utilizing
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to reflect the last set text alpha instead of the current text
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of warning messages
replaced specific test class imports with a call to a suite runner for better test management to streamline test suite setup and ensure compatibility with the
added trimming of whitespace to mimeTypes , excludedAgents , excludedPaths , and excludedAgentPatterns in GzipFilter . java to ensure proper handling of
updated the assignment of _ outputType in Response . java to ensure correct output type is set to WRITER
updated the default regex implementation from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest Nashorn regex implementation
replaced ` Handler ` with ` Executor ` and updated task handling in ` ViewCapture . java ` to improve thread management and enhance task execution
bug - fix for ticket : 136 -- add support for ' style ' attribute in feature processor .
added error handling for folder creation failures in GitBlit . java to ensure that folders exist before proceeding with operations
updated the default node discovery bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to
camel - jbpm - fix camel - jbpm - inonly and camel - inout default handler name
pdfbox - 4892 : remove unused import , make class private
updated ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and modified text setting in ` AllAppsGridAdapter ` to improve clarity
refactor multiple Java classes related to Dalvik processing to improve code organization and maintainability
update defaultjavaprettyprinter to handle ` ` extends ' ' and ` ` super ' ' for implicit type parameter
added a call to free memory in the driver context to ensure proper memory management and prevent memory leaks
updated format strings in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , JpaPersistentPropertyImpl , and StringQuery classes to improve
updated eviction counter handling in ConcurrentLRUCache and renamed cumulativeStats to statsList in FastLRUCache to improve performance and clarity in
added a new method ` runAndWaitInJavaFXThread ` to ` DefaultTaskExecutor ` and modified ` runInJavaFXThread `
update local host check from InetAddress . getLocalHost ( ) to intendedDestination instanceof Inet4Address to ensure correct handling of IPv4 addresses in network
added RuntimeEnvironment setup in MainFrame . java to set database and source paths to ensure proper configuration of database and source paths for the application
added constructors for MarkedClientEnabled and MarkedServerEnabled classes to log successful enabling of Solon Admin client and server in specified
refactor TableEnvironment class to improve code readability and maintainability
updated timeout handling in MapperBuilderAssistant and modified fetchSize in ExecutorTestHelper to include a timeout of 2000 milliseconds to improve timeout management and
refactor method signatures to remove the ' hangingTscTimeout ' parameter from multiple transpilation completion callbacks to improve code clarity and
added serialization support for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocation
updated error messages and refactored artifact handling in ArtifactFilesystem and ArtifactFilesystemTest to improve clarity of error messages and enhance code readability
tika - 1349 -- fix bug in summaryextractor when document be not a hpsf document
[ web ] fix concurrentmodification exception in ggbscript
do n ' t use dataavailable ( ) if there be no channelinputstream available .
added failure messages to ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest ` to provide clearer failure messages when
updated visibility checks in BackgroundAppState and modified mMidProgress and mMidAlpha calculations in ShelfScrimView to include vertical swipe
add a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when nav is null
[ geot - 5892 ] fix image bound box for mow _ pin _ image
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error reporting accuracy for exceptions
[ astro ] fix discovery job schedule with fixed delay
simplified the incrementing of ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic .
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang during execution
updated import statements in GuiceFactoryTest . java to include specific Google Guice dependencies to enhance dependency management and improve code clarity
added a system feature management map and methods to check and set system features in RobolectricPackageManager to enhance functionality for managing system features
refactor RCAFrameworkLoader to handle multiple paths and add a new test class for augmenting path properties to improve code readability and ensure
removed logging statement from Task . java to clean up the code and improve readability
added null check and initialization for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
rename variables and conditions related to inline box handling in BoxBuilder and InlineBoxing classes to improve clarity and functionality of inline box management
replaced direct calls to ` collectAndSendTelemetryData ( config ) ` with ` collectAndSendTelemetryDataAsynch ( )
removed MySQL - specific column alteration for the UPGRADE _ ITEM _ TABLE column type to simplify the code by eliminating unnecessary column
updated error messages in BaseTableDataManager to provide clearer guidance to provide clearer guidance on permissions for index and temporary resources directories
updated method names in DatasetUtilities . java for consistency to improve code readability and maintainability
added selection selection ID to key formatting in Matcher . java to enhance clarity and maintainability of the code
updated debug log statement syntax in GouraudShadingContext . java to improve code readability and maintain consistency in formatting
updated taskbar visibility and alpha management in the taskbar components to improve user experience by managing taskbar visibility based on device and awake states
updated the formatting of key exchange constants in KeyExchange . java to improve code readability and maintain consistency
added a type check for JdbcConnection before executing a SQL query in CockroachDatabase . java to ensure proper handling of JDBC connections and
updated file index handling in ServerMainTest to differentiate between " 2 . log " and " 3 . log " to improve clarity and
added methods to retrieve media recorder mime type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to enhance media recording
move the use of confighandler . useshaders to shaderhelper . useshaders ( )
updated the BindableFilter condition to include an OR operator and modified the return value from " C = 6588 " to " C = 1
reformatted ZkStateReader instantiation for consistency to improve code readability and maintainability
corrected formatting of code in XMPMetaParser . java to improve readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` in the package ` org . springframework . security . oauth2 . client ` to provide
changed the condition from ` if ` to ` while ` for checking the presence of the " < script > " tag in the result to improve
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified its logic for varargs access to improve
refactor border property checks to use a helper method for clarity to improve code readability and maintainability by reducing duplication
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager . java and WatchHTTPManager . java to reduce log verbosity and
updated ` InternalDropAllCommandStep ` and ` HubUpdater ` to return ` HubRegisterResponse ` objects instead of void to improve handling of
updated byte handling in multiple Java classes to use ` Byte . toUnsignedInt ( ) ` instead of bitwise operations to improve code clarity and
[ hotfix ] fix checkstyle violation in travis
updated default value for DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure proper caching behavior based on the
changed the rangePannable property from true to false in CategoryPlot . java to disable range panning for better visual representation
updated the logic for managing the main active state of the work mode switch in AllAppsContainerView to improve UI responsiveness based on the
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` from package - private to private to improve encapsulation
added handling for CancellationException in FunctionTest . java to improve robustness by preventing unnecessary processing of cancellation exceptions
changed constructors to protected in JarFileResource and JarResource classes to enhance encapsulation and allow subclassing of the classes
rename DefaultTrackSelector . java file to improve clarity and consistency in naming conventions
added a loop to wait for an unseq merging process in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging
updated the fee currency from AUD to BTC in the userTrades assertion to reflect the correct currency used in the test
added a @ Table annotation to the Post table and refactored test methods in HibernateDTOProjectionTest and JPADTOProjectionTest to
refactor Unicode class to improve code readability to enhance maintainability and facilitate future development
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
reformatted the onComplete ( ) method call in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
camel - aws : fix json serialization of ssecustomerkey with null md5
added support for BIG _ DECIMAL type in RangePredicateEvaluatorFactory to enhance value type handling and improve error messaging
replace instances of ` inner ` with ` javacProcessingEnvironment ` and ` javacRoundEnvironment ` in ` TreeBackedProcessorWrapper .
removed annotation printing from ParameterInfo . java to streamline code by eliminating unnecessary print statements
updated PlaybackController to include additional user preferences and improved error handling during seeking to enhance playback stability and provide more options for user configuration
modify the return statement to include a JSON response containing the value of null to enhance the response structure to include the value associated with the response
added ` @ SuppressWarnings ( " deprecation " ) ` annotations in ` DelegatingStatement . java ` and ` DiskFileItem . java ` to
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate schema template functionality to ensure correct
updated RTimerTree . java file to improve performance and readability of the code
update package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
[ fix ] issue # 358 , text label do n ' t look nice ( # 358 )
updated client thread and scheduler initialization in ClientConnector . java to include unique names and hash code for better debugging and monitoring
updated visibility and layout settings for JScrollPane and JCheckBox in ViewResultsFullVisualizer . java to enhance code readability and improve UI respon
added descriptions for user phone numbers in ScimUserEndpointDocs . java to provide clearer information about the user ' s phone number and its
changed class visibility from package - private to public and added private constructors in multiple files to enhance encapsulation and ensure singleton usage in classes
added null checks for properties and responseMap in JsonHttpPropertyRequest and URLStreamProvider classes to improve error handling and provide clearer logging for
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future development
added a condition to check if the ' parallel ' parameter is not equal to ' DEFAULT _ PARALLEL ' in the XmlSuite class
fix checkstyle issue in cloud / vmware / testvmwareutil / testvmware . java
added a condition to check for SCARD _ E _ NO _ SMARTCARD in the card removal event to handle scenarios where the card is
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary system output during testing
camel - 14850 : fixed the unit test error of camel - bindy
set default ` ` useowner ' ' and ` ` usetimestamp ' ' to false
updated method parameters from ` Runnable ` to ` ThrowingRunnable ` in ` runAndCheckException ` to improve error handling by providing more specific exception
refactor hash function to handle null values for ' via ' , ' viaContext ' , and ' pathFromSeed ' to improve robustness
camel - 14263 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
change default value of proxy . cert . validity from 7 to 90
added smooth delta tracking and updated delta calculations in ThreadHandler . java to improve performance and accuracy of elapsed time calculations
added a null check for paginator in the HttpBatchReader and HttpScanBatchCreator classes , and improved URL parsing logic to ensure proper handling
added null check for ` ci ` in ` Worker . java ` and a corresponding test case in ` TestWorker . java ` to ensure that
updated fragment state handling in ShadowFragmentActivity and added a test for onSaveInstanceState method in FragmentActivityTest to ensure that onSaveInstanceState is
refactor code formatting for improved readability in BatchResourceFactoryBean . java to enhance maintainability of the code
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the correct color value is returned for Android color references
added exception handling for NoResultException in AbstractJPAQuery and a new test for uniqueResult in AbstractStandardTest to improve robustness of
renamed the variable ` fromCache ` to ` owner ` and updated the logic for adding communities to improve clarity and correctness in
updated the depth preference initialization in DepthController . java to use LawnchairApp instance to ensure compatibility with the latest Lawnchair
removed an unnecessary import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
updated the method signature of ` updateTotalEnergyAverageUsage ` to remove the timestamp parameter to simplify the method signature for better clarity and
updated the ` toString ` method in ` ExtensionStack ` to handle null extensions gracefully to improve robustness by preventing potential ` NullPointerException ` when
fix flowable . flatmap do n ' t dispose on cancel error
added connection manager timeout configuration to MultiGetRequest and ControllerStarter classes , and enhanced error handling in ServerTableSizeReader to improve connection management
updated formatting of the assignment of androidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replace NewModelTest with ModelTest in LwjglDebugStarter . java to align with the new model testing framework
replaced instances of SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher with new fetchers in EdgeSyncCursor . java to streamline
added a new test method to verify output hash calculation when cache is not writable to ensure correct behavior of output hash calculation when cache is not writable
camel - 17463 : camel - netty should not use bytebuf by default .
updated partition alteration to use qualified table names instead of old name to improve clarity and accuracy in partition alteration process
updated IllegalArgumentException to include a descriptive message to provide clearer error messages when the Vertx instance must be created with the preferNativeTransport option
add test for color type handler serialization and deserialization
rename StreamEx class to improve clarity to enhance code readability and maintainability
added hint settings for query and lock timeouts in SessionImpl . java to improve query performance by reducing unnecessary timeout settings
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a singleton instance of ` StaticLoggerBinder `
hbase - 26928 addendum fix the cloning of list in put / delete / delete operation
updated conditional logic in TaskbarManager to include new and old orientation values to ensure proper handling of orientation changes during layout adjustments
added xml unescaping to the nickname of the occupant in the chat room .
updated the longStackPut method call in StoreDirect . java and added a new test class Issue265Test . java to ensure correct handling of
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable and other classes
( chore ) camel - test - infra - flowcontrol : fix compilation error
updated conditional checks for audio and subtitle tracks in DLNAMediaInfo . java and refactored array copying in FFMpegVideo
updated NBWriteServlet and TestWriteListener constructors to accept an unlimited flag to enhance flexibility in handling unlimited write scenarios
update total difficulty in blockchainimpl , add unit test for invalid block total diff
refactor action assignment logic in DefaultPlaybackController to streamline action selection to improve readability and maintainability of the code
replaced synchronized list with CopyOnWriteArrayList for knownLibraries and modified the constructor of VerificationCacheCleaner to accept a Class < ? >
added uniform allocation calculations and modified position calculation in AllAppsView . java to improve memory management and ensure proper positioning based on dimensions
added a check for the presence of a colon in the key before proceeding to ensure that the key does not contain a colon before proceeding
added PrincipalResolver as a qualifier for principal resolution in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance security by restricting principal resolution
replaced ObjectMapper with Noggit ' s ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve compatibility with Noggit '
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve the handling of trailing characters in the StringBuilder
added methods to match patterns in PatternsMatcher and corresponding tests in PatternsMatcherTest to enhance pattern matching functionality and ensure correct behavior when matching
updated error message formatting in LoadIncrementalHFiles . java for clarity to improve readability and maintainability of error messages
fire can now fire on water potion . close # 375
adjusted the parameters for the method ` beginOrAdjustReorderPreviewAnimations ` in ` CellLayout . java ` to ensure proper animation
refactor calculation of decreasePercent and adjust conditional checks in ReceiptCapsule . java and ResourceProcessor . java to improve code readability and maintain
added checks for input unready state and debug logging in AsyncContentProducer , BlockingContentProducer , and AsyncIOServletTest to ensure proper handling
added validation for the mandatory weight field in DocumentDictionaryFactory to ensure proper parameter handling and prevent illegal argument
added support for plist variable expansion in AppleBundle and implemented a test for Info . plist variable substitution in AppleTestIntegrationTest to enhance
fix turret not be able to be shoot properly
changed the return type of ` adaptOrder ` from ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to ` Object ` and updated type casting
added a new file ` PreParseGrammarTest . java ` for testing XML schema preparsing to facilitate testing of XML schema parsing
8274889 : suppress doclint warning on non - serializable non - transient instance field in javax . swing
added FontManager imports and overridden font functionality in ExtendedEditText to enhance font management functionality in the application
add null check for currentUser in AuthorizeTag and implement a test for unauthorized requests in AuthorizeTagTests to ensure proper handling of cases where no
add warn log if user supply uri contain unsafe character .
added a setUpData method to JDBCGeometryTestSetup class to provide a way to set up data for testing purposes
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] check if the backend registry be close before restore attempt
add server . rmi . create property to enable automatic creation of rmi registry
replace string . join ( ) with stringutils . join ( ) in compactionmanager
added display metrics handling in multiple test classes and adjusted method visibility to improve resource management and enhance test coverage for qualifiers
[ java ] add cluster member id to cluster heartbeat counter .
update TestThreadMXBean to handle total thread allocated bytes based on version check to ensure compatibility with newer thread management features
updated the evaluation logic in CustomExpression to handle NaN and negative infinity correctly to ensure proper handling of NaN and negative infinity in double evaluation
updated logging statements to use parameterized messages and improved error handling in AjaxListener . java to enhance readability and provide clearer diagnostics for exceptions
added GET and POST endpoints for authentication and authorization in the AuthenticityController to enhance the authentication process by allowing users to authenticate and authorize users
added assertion to ensure next node is alive in LoweringPhase . java and improved formatting in SnippetTemplate . java to enhance code read
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
[ fix ] defaulttrackselector . compare ( ) do n ' t reorder field in compareto ( )
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of serialization processes
make sure crop box be draw correctly when the image be cropped .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the codebase
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` Widget
added content type parameter handling in MailContentHandler to ensure proper resource name is set based on content type parameters
updated the URI construction in ThumbnailsCacheManager . java to use the file ' s local ID instead of the remote path to improve clarity
added checks to mark and reset the input stream if supported to ensure proper resource management and prevent potential memory leaks
added @ Deprecated annotations to multiple classes and added deprecation warnings in SerializedProcessorTest and SerializedSubjectTest to indicate that these classes should no longer be
ambari - 20801 . allow to hide error stack on the error page ( eugene koifman )
cloudstack - 5339 : cleanup templates / accounts do n ' t fail because of failure to remove them
removed null checks for foreign calls in SPARCArithmeticLIRGenerator . java to simplify foreign call emission by eliminating unnecessary
( chore ) camel - jbpm - kie - services : add support for drools 5 . x api in decision table ( #
added ' waitingForResult ' variable to the onRequestPurchaseResponse method and wrapped the callback in a Runnable to improve code readability and ensure
[ hotfix ] [ test ] increase default timeout for unboundedsourcesystemtest
updated import statements and modified resource qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct resource qualification based on
deleted two files , MrefStat . java and MrefStat1 . java , and added new classes MrefStat and MrefStat
added ` StringUtils . isBlank ` import and modified scope handling in ` DependencyInsight . java ` to improve null safety checks and provide a default
added error handling for " no trades " and " bad status " messages in BTCETradeServiceRaw . java to improve error management
use hamcrest assertion instead of junit in tests / integration / jax - rs - core
add bitcoinuri . getpaymentrequesturl ( ) to reverse the list of payment protocol request url
planner - 383 do n ' t throw illegalargumentexception for unsupported collection type
updated the method call from ` setFolderInfo ` to ` setFolderInfo ` in ` FolderPagedView . java ` to ensure proper
fix ( jfr / jfr / jfr / jfrthreadlocal / jfrbuffernodelinkedlist ) : only release the lock
replaced a single null check with a loop for null values in BasicAbstractTuple . java to improve code readability and enforce non - null
refactor linterConfigsFile initialization and error handling in LintUtility . java to improve resource management and enhance error logging for linter configurations
added a Runnable to update backgrounds and paddings in AppsContainerView to ensure updates occur only on the main thread
updated inventory tick handling by incrementing the index in the onInventoryTick method to ensure the correct item index is used for tick events
added a new case ` OCELOT _ BABY ` to the ` PlayerEvents ` class to enable handling of OCELO
added multiple @ PublicEvolving annotations to StateTtlConfig . java to enable the configuration of state ttl settings in the application
added null handling for parameter ' x ' in PreparedStatement and Array classes to ensure proper type assignment when ' x ' is null
[ java ] clarify archive tool output for invalid recordings .
replaced ` append0 ( " \ n " ) ` with ` append0 ( ' \ n ' ) ` in StringBuilder . java to
added a new test method ` jsonSnapshot ` for JSON serialization in ` SiteSnapshotVariationsTest . java ` to ensure compatibility with JSON serialization
added a method to remove transactions and blocks from the transaction cache in BroadTest . java to improve test reliability by ensuring that transactions and
added support for enabling or disabling Lens mask in AmcrestHandler and DahuaHandler to enhance the camera ' s capability
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
refactor ChangeLogIterator constructors to accept changeSetFilters as a list of ChangeSetFilters to improve flexibility and flexibility in handling different Change
[ gr - 3770 ] do not swallow guest exception in polyglot launcher .
use system property instead of env to improve compatibility with ec2
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility across different classes
refactor SpacesVisitor to use dropParentUntil for annotation array initializers to improve code readability and maintainability by eliminating unnecessary
add servercacheoptions . copy ( boolean nearcache ) for backwards compatibility
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
changed the constant name from LIVE _ URI to PROD _ URI and improved exception handling in KucoinExchange . java to enhance
updated string concatenation syntax and modified searchPath handling in SpringResourceAccessor . java to improve code readability and simplify path replacement logic
updated unit tests for MICROWATT _ PER _ CUBICMETRE and MICROWATT _ PER _ CUB
updated vertexMask assignment to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure correct handling of vertex attributes with
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
fix ` ` no citation find ' ' error in textexentriesresolver
added a method to check if Robolectric is running in legacy mode to ensure compatibility with Robolectric ' s legacy resources mode
added a conditional check for FirebirdDatabase to return a specific DOUBLE PRECISION data type to ensure compatibility with Firebird database data types
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to ensure proper initialization of datasource and transactionManager to prevent potential NullPointerExceptions
add package - info . java to make stubs package package - private
updated test command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - code cleanup - use try - with - resources
updated TermScorer instantiation to conditionally use PostingsEnum . NONE based on scoreMode to improve flexibility in scoring behavior based on the
[ hotfix ] fix nullpointerexception in dataflowmetrics
server : fix vm deployment issue when vm be in stopped state
refactor DynamicPartitionPruner to use a new method for finding target object inspectors and improve object inspector initialization to enhance code clarity and
added a method to remove build artifacts from the ArtifactFilesystem and updated tests accordingly to ensure artifacts are properly removed from the filesystem before execution
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure correct selection of rows in the table
extract assertion . assertthrowsarraystoreexception into a helper method to improve code readability and reduce duplication .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName handling and user agent configuration in HttpClientBuilder and HttpClientConfiguration to enhance HTTP client configuration flexibility by allowing customizable user agent information
refactor session management by introducing a ` computeIfAbsent ` method and reorganizing session restoration logic to improve code readability and maintain
updated assertions in IssueTest . java to include a descriptive error message and changed results type in Reporter . java from String to Object to improve
update content type handling in ConsumeEWS . java to ensure correct content type is used when no content type is provided
fix ( activationrequest ) : send activation end event in case of permission
added ` @ Override ` annotations and corrected the sine graph calculation in ` GraphApplet . java ` to improve code clarity and ensure proper
added a method to update task views snapshot radius in RecentsView . java and updated the updateTaskViewsSnapshotRadius method in TaskView
added logging for Swagger generation and updated microservice instance revision handling to improve traceability of schema generation for 3rd party services and ensure accurate revision
changed the return type of the ` put ` methods from void to int in ` ArrayMap . java ` to provide a way to access the
updated KafkaContainerCluster to include a startup timeout and changed KafkaContainerCluster version from 5.2 . 1 to 6.2 . 1 to
http : / / issues . apache . org / activemq / browse / amq - 2382 - add retry logic for send
update header checking logic in StaticServerHttpHeadersWriter and add a case sensitivity test in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check before loading the listener class in EventListenerList . java to ensure proper access control and prevent runtime errors during class loading
added a custom adapter to display applications list and updated the onCreateView method to utilize it to improve user experience by providing a list of
updated the applyIcon method to accept a nullable Task parameter and added null checks for the iconView to improve handling of null tasks and ensure proper
replaced try - finally blocks with try - with - resources for DownloadStateCursor to ensure proper resource management and prevent potential memory leaks
fix a bug in basesqmtosqlastconverter where insert statement be not apply to all query .
added JUnit @ Test annotations to HibernateCursorItemReaderIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests , and modified on
added asynchronous polling functionality and improved error handling in ` DataInputStreamWithTimeout . java ` to enhance asynchronous processing and provide clearer diagnostics when polling
added support for the ENABLED _ TS constant in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 class to improve code organization to enhance maintainability and readability of the codebase
rename networkparameters . testnet3 ( ) to networkparameters . createoldtestnet ( ) in favor of networkparameters . testnet (
do n ' t show the first element in the property view , it show only the first one
updated onboarding preferences handling in AppsDividerView . java and added nullable annotation in ActivityContext . java to improve null safety and ensure
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and refactored the ` flushBuffer ` method in ` HdfsIndexOutput
pdfbox - 4892 : avoid a nullpointerexception if the clip path do n ' t exist
refactor localAddress assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor TemplateTransformer to use a new helper method for adding multi - value values to improve code readability and maintainability by reducing duplication
added a method to check if the operating system is Windows and modified file renaming logic to use canonical file handling to improve robustness of file renaming
replaced the ALPHABET _ STRING with a CHECK _ DIGIT _ STRING in Code39Reader . java and Code39Writer . java to
updated the logic for handling unexpected types and type casting in NodeGenFactory . java to improve type safety and ensure correctness in handling unexpected types
removed redundant stored field check in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : truncate nan in query with nan
refactor stack trace handling in LwjglCanvas . java to improve clarity and functionality of stack trace management
updated description in AbstractGCSProcessor . java for clarity to improve readability and maintainability of the code
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization by ensuring the connection is
replaced null values with " single " in directory retrieval methods in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory
refactor FaultTolerantChunkProcessor to utilize filterCount instead of size and streamline data handling to improve efficiency and maintainability of
updated tabbedMethod to include a newline character and improved file handling in T4994049 . java to enhance code readability and
replaced multiple conditional checks with a single assumption check in ConsoleReaderTest . java to improve readability and maintainability of the code
update getfeedbacksessionsaction to not show student detail for non - admin user
updated calculations for newSelection and adjusted threshold for velocity and position in AllAppsView . java to improve UI responsiveness and enhance user experience
remove threadinfo . initialize ( boolean ) and use profilerruntime . initialize ( ) instead
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog , removed encryption logic from DbConnectionDialog , and modified connection
updated variable names from ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` for consistency and clarity to improve code readability and maintain
refactor segment size calculation in DocumentsWriter . java and add a test for document indexing in TestIndexWriter . java to improve efficiency and
fix a bug in armaturemodifier that cause an error when the dvert = deformvert be not present .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future development
replace direct creation of UnsupportedOperationException with a predefined instance to avoid filling in stack trace to improve error handling by avoiding unnecessary object creation
update label height calculation to use streams for better readability to improve performance and maintainability of label rendering
updated the ` RotationTouchHelper ` constructor to accept a ` DisplayHolder ` parameter instead of using a singleton instance to improve flexibility by
refactor loop structure to improve handling of quoted strings to enhance readability and maintainability of the code
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` and modified the ` preHandle ` method to handle
added a new test method ` testSmall ` and a new test method ` testBig ` in ` ServerDatagramConnectorTest . java `
updated the substring method for COUNTRY _ CODE _ s in TestSqlEntityProcessorDelta . java to ensure correct parsing of the COUNTRY _
refactor caching logic in Cache . java to improve performance and readability of cache operations
changed variable names from ' e ' to ' ev ' and updated scopes from ' rs . getScopes ( ) ' to ' batman '
updated the ` doBefore ` method to include a ` false ` parameter in the ` newSearcher ` call and made the ` seenDoc
added a JFrame with a JScrollPane and a JButton for adding Gcode commands to the GcodeTable to facilitate user interaction
updated the connection timeout to use a configurable value instead of a hardcoded value to improve flexibility in managing web application connection timeouts
updated variable declarations and error logging in several Java files to improve type safety and clarify error messages
rename TestMediaService . java file to improve clarity and consistency in naming conventions
added a public static string named HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the Messages class to provide a
add ' btc _ ' and ' btc _ ' option to print btc currency in desktop
validate the component ' s hostname format and throw an exception if it ' s invalid .
added methods to register security key operations in AccountProxy and HttpAccount classes to enhance security key registration functionality for improved authentication handling
refactor ServerSpanThreadBinder class to improve code readability and maintainability
updated user pointer reference from ` getUserPointer ( ) ` to ` userData ( ) ` in ` BulletPhysics . java ` ,
updated the field name from " Location " to " the _ geom " and added " number " to the CSV2Shape builder to improve cl
replaced callGasWord . longValueSafe ( ) with gasCost in VM . java and removed unnecessary imports in Program . java to improve cl
refactor parameters handling in the Parameters class to improve code readability and maintainability
added ` setIgnoreNullValues ( true ) ` to the ` piePlot ` object in ` MultiplePiePlot . java ` to
refactor bundle loading logic in ResourceBundle . java for improved clarity and structure to enhance code readability and maintainability by simplifying bundle
use ' - ' instead of ' _ ' to remove underscore
allow executescriptaction . isallowedduringediting ( ) to be override by accelerateableaction . isallowedduringediting
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the authentication process has been modified
added a new test class ` TestSealedObjectNull ` to verify the behavior of ` SealedObject ` with a null cipher to ensure
updated method names from ` onOpen ` to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added support for SNOW in 1.16 . 5 and replaced isTagged checks with contains checks to ensure compatibility with the latest server versions and
added an ` id ` field to the ` CryptsyPublicTrade ` class and updated related methods to include it to enhance trade tracking by
added error handling when closing the HMS connection in HiveStreamingConnection . java to ensure proper resource management and log warnings for exceptions during connection closure
use random seed for seed generation in glowserver . setseed ( )
updated the ICON _ SIZE _ DP value and added a new device profile for Nexus 5 in DynamicGrid . java to enhance the
2 . x : fix refcount not reset if disconnect before connect
replace ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to improve
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in the FormatToken and FormatVisitor classes to enhance formatting capabilities for
added checks for file existence and file existence in SaveTask and implemented new test cases in SaveAndLoadTaskTest to ensure proper file handling and
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent operations
added support for MutableLogEvent in the add method of SmtpManager to enable serialization and deserialization of mutable log events
change PADDING constant from LengthLike to NonNegativeLengthLike to ensure proper handling of negative padding values
replaced calls to ` getUser ( headers ) ` with a simplified ` createContext ( ) ` method in multiple resource classes to simplify context creation
improve handling of jimple catch in methodirbuilder .
updated error messages in JUnitRunner and AndroidPlatformTarget to provide clearer guidance on installation of tools using the Android SDK Manager
increased the cacheSize from maxMemory / 16 to maxMemory / 8 to optimize memory usage for better performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
added error handling for KeyStore loading in ProvKeyManagerFactorySpi . java to ensure proper handling of null keys and avoid potential NullPointerExceptions
replaced hardcoded port assignment with dynamic port retrieval in UpstreamCheckUtilsTest to improve flexibility in testing by allowing dynamic port assignment
ggb - 1353 fix problem with dock panel dimension change in web
added conditional checks to set maximum shader and geometry and tessellation buffers based on OpenGL capabilities to ensure compatibility with different OpenGL versions
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t show save notification on reload
added UTF - 8 encoding handling and improved JSON serialization in ZQLJobManager to ensure consistent character encoding across different operating systems
added a check to ensure ` args . length ` is greater than zero before checking if it is an instance of ` Table ` to avoid potential
replaced hardcoded string constants with a constant from the HeaderDecoder class to improve maintainability and reduce hardcoded values
added @ Deprecated annotation to the suffix strategy option in GenerateJavaSources , Config , and JavaGeneratorMojo classes to indicate that the suffix strategy
removed debug logging statements from DerbyDatabase . java to clean up the code and improve readability
[ kie - 6892 ] fix test which randomly fail on slow ci server
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing parallel processing overhead
updated the condition for setting the " liquibase . hub . mode " property and added a warning message if it is already set to
added new constants for Java VM and OpenJ9 VM versions in Constants . java and implemented a test for versioning in TestDDRExtension
refactor font addition logging to handle CompositeFont instances and add a new DebugFonts class to improve clarity of error messages for better debugging
added HTTP _ 1 _ 1 support in NegotiatingServerConnectionFactory and updated SSLEngineResult import in ALPNNegotiationTest to ensure
added RateControl support in MaxConcurrentStreamsTest . java and set it to NO _ RATE _ CONTROL to ensure proper handling of HTTP
added a new Java file ` Test6741426 ` that implements a customizable UI with JComboBox and JTextField to facilit
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to include the exception message to improve error reporting by providing
added null checks for ` dbMgdPath ` , ` dbExtPath ` , and ` madeManagedDir ` in ` HMSHandler
added package declaration for S3CopyObjectRequest . java to organize S3CopyObjectRequest for better organization and clarity
refactor ` setupCategory ` methods to remove accentColor parameters and utilize viewThemeUtils for theming to streamline the setup process by
updated error message in TemporaryFolderUsageTest to include the file path to improve clarity in error reporting for folder paths
updated type information from ClassTypeInformation . from ( Object . class ) to ClassTypeInformation . MAP and ClassTypeInformation . LIST to improve
fix clientnetworkconfig . addaddress ( string ) when address be empty or null
8274293 : add exception for expire docusign root to verifycacerts test
[ java ] return the number of output read from the pipeline instead of void .
added a condition to check if the popup triangle is clicked and the popup is showing before setting the mode to ensure the mode is only set when
pdfbox - 4892 : fix bug in memoryttfdatastream . read ( ) when eof be detect
added two new test files , ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` , with implementations for testing final
replaced ` . map ( routes ) ` with ` . doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator . java
refactor BurningManService to check for a custom address before processing compensation requests to improve code clarity and handle potential null values
refactor StringSubject class to improve code structure to enhance maintainability and readability of the code
increased the size of the longData array from 1000000 to 1000 and added an @ Ignore annotation to the BatchValidateSignContractTest class
changed the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java `
updated query handling in RetweetActivity to replace " @ " with " from : " to ensure correct search suggestions are saved based on the provided
removed the conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary logic
added a new import and a POST endpoint for importing YubiKey accounts in the YubiKeyAccountRegistryEndpoint to enable users to submit and
changed shader and parameter names from " texture " to " tex " in multiple Java files to improve clarity and consistency in naming conventions
added null check for ` cnt ` in ` paintOnTopLoop ` and improved safe area handling in ` SideMenuBar ` and `
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future development
added null check for subName before setting the caption to avoid potential NullPointerException when subName is null
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enable
updated conditional checks and improved null handling in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
replaced the requestBlindVoteListFromNetwork method with sendRepublishRequest in VoteResultService . java to streamline the request process
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify database connection behavior to ensure proper handling of
updated string delimiters from double quotes to single quotes in SubtitleUtils and RemoteUtil classes to improve code readability and performance by using single quotes
replaced LINE _ SEPARATOR with a constant LINE _ SEPARATORS _ RE in DefaultJavaPrettyPrinter . java and updated line splitting logic in Comment
truffle : replace atomicreference with atomicreferencefieldupdater in singleimplementorsnapshot
added null checks before adding queries to the query list in SimpleFacets . java and updated test cases in SimpleFacetsTest . java to
fix ( thinghelper ) : add child to a bridge
replace calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve clarity of error reporting for
added a check to return the output file if it exists before proceeding to avoid potential errors when writing to a file
pdfbox - 3160 : avoid exception if second be miss , which be valid iso8601 but not xsd : datetime , a suggest by maciej
added functionality to retrieve a Post by its slug and assert its existence in SpringDataJPALockTest . java to enhance test coverage for the
changed the type of ` canAccessDbaRecycleBin ` from boolean to Boolean and added checks for access to ` dba _ recycle
added a static block to create a SimpleClientHttpRequestFactory with connection and read timeout settings to improve HTTP request handling by specifying connection and read timeouts
updated SourceTest . java to include assertions for file existence , name , and original path to enhance test coverage for Source class functionality
[ ci ] remove graalvm . version system property from defaulthomefinder
added access token and refresh token validity settings to the ClientAdminBootstrap class to ensure proper configuration of token and refresh token validity for the client
update Android API version retrieval logic to include version options to ensure compatibility with newer Android API versions
refactor PropertyPlaceholderHelper to remove redundant references to improve code readability and maintainability
updated the formatting of the Subject Public Key Algorithm in the Resources . java file to improve code readability and maintain consistency in formatting
solr - 12028 : fix intermittent test failure in zksolrclienttest
removed BigInteger import and added simpleTypes to MongoMappingContext to simplify type handling for BigInteger in MongoDB mapping
added a condition to check if the button text matches the string resource in HomeFragment . java to ensure that the toast is only displayed when the
added a conditional check for ` disableMc0AndNoskip ` in ` MEncoderVideo . java ` to ensure proper handling of
increased the default number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more
changed access modifiers of methods and variables in CountMin4 to protected and replaced BloomFilter with FeedbackFilter in AdaptiveWindowTiny
added sorting functionality and a new test class for external file field sorting to enhance functionality and ensure correct sorting behavior in Solr documents
updated error message from " Invalid URL " to " Connection error " in DoiFetcher . java to provide more informative error messages for connection
modified event handling in OpenRocketSaver , added source information in FlightDataBranchHandler , and updated RocketComponentSaver to
changed the visibility of the check method from private to protected to allow subclasses to access and override the check method
added handling for SynchronizeFileOperation completion in FileActivity to improve user experience by notifying when a synchronization occurs
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for better URL encoding to ensure proper handling of special characters in URLs
added a check to ensure the client property " cn1 $ infinite " is not null before proceeding to prevent potential null pointer exceptions when the
updated the initial value of the ` total ` variable from 0 to 1 and modified the calculation of ` total ` to improve clarity and correct
added a lock timeout check before updating an entry in FeedRefreshUpdater . java to ensure that the feed updates occur only when the lock is enabled
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the
refactor LatLonTree to use an array for edges instead of a list and simplify edge creation logic to improve code readability and maintainability
added IOUtils import and enhanced resource management in ZkCLI . java to ensure proper resource management and avoid potential memory leaks
replace \ n with \ x0d and \ \ x0a in bibtexparser . parsecomment ( )
added strict mode handling to command line parsing in Main . java and corresponding tests in MainTest . java to improve robustness of command line argument
fix validation of custom constraint with @ constraint ( validatedby = ' ' true | false ' ' )
camel - 14850 : camel - http4 - improve the verifier to check if a particular service work on a specified protocol . thanks
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to ensure that the test waits for
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve code structure to enhance maintainability and readability of the test cases
replace String with StringBuffer for the details variable to improve performance and reduce memory usage during string concatenation
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] report an action . abort when archive archive be not complete .
added cache key and lookup attribute handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve cache
added a new file PutfieldError . java that demonstrates the handling of IncompatibleClassChangeError to verify that a specific exception
camel - 15850 : camel - aws : fix the issue that aws address translation do n ' t return the public address
fix check for memtable throughput and operation in millions . patch by stu hood ; review by jbellis for cassandra -
replaced usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple Java
replaced the existing ` encodedLength ( ) ` method with a new implementation in ` Flyweight . java ` to streamline the method
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming conventions
fix false positive with findnullderef on integer . max _ value
[ hotfix ] [ runtime ] remove unused lock in tasklocalstatestoreimpl
updated return values in mmm Utils . java and ppp Utils . java to include " m " , " h " , and " d
added checks for DeepShortcutView instances in Utilities and FloatingIconView classes to ensure proper handling of DeepShortcutView instances during drag operations
changed the validator type from JwtClaimValidator < String > to JwtClaimValidator < Object > and updated its initialization logic to enhance type safety and
renamed methods for buying and selling quick rates in Coinmate classes to improve clarity and consistency in naming conventions
added a new CoverageConfig class and updated CoverageController to use it for loading CoverageData classes to improve coverage management by allowing dynamic class loading based
added a check to ensure EventBus is registered before registering the sticky event to prevent potential NullPointerExceptions when the event bus is not registered
added ASCII - only normalization logic in NormalizerBase . java to ensure proper handling of ASCII characters in normalization results
[ hotfix ] [ runtime ] change ismigrationallowed check to aremigrationtasksallowed check
added error handling and assertions for SQL update statistics in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL
( chore ) camel - cometd : migrate camel - cometd to junit4 for camel - test - infra
updated attributes in HtmlTag . java from ` attrs ( AttrKind . USE _ CSS , ... ) ` to ` attrs ( AttrKind . OK
added a line break to the HTML output in HtmlCoreReport . java to enhance the output formatting for better readability
updated ramBytesUsed calculation to account for null scores to ensure accurate RAM usage estimation for documents and scores
added StringHolder and StringHolderTypeAdapter classes with custom serialization and deserialization methods to facilitate the use of Gson ' s custom type
set extra data from mining parameters in MergeCoordinator to ensure proper handling of mining parameters in the merge process
added a static final ` numArgs ` map and updated the ` argsToProperties ` method to include it to enable dynamic configuration of file and
updated PathParamServerEndpointConfig . java to improve server endpoint configuration handling
refactor variable names from ' configedThreshold ' to ' configuredThreshold ' for consistency and clarity to improve code readability and maintainability
updated parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity and
( chore ) camel - test - infra - twitter : move twitter bootstrap class to their own directory
remove unused ppostag pattern from spanishtreebanklanguagepack
hhh - 15417 deprecate entityloader . load ( object id , sharedsessioncontractimplementor session , lockoptions lockoptions )
hbase - 23303 fix the deadlock in regionserverflushtableproceduremanager and regionserversnapshotmanager ( # 3558
set size ( width / height ) in p2d when width / height be zero
fix checkstyle issue in util / pool / hikaripool . java
replaced the method ` assureMatchVersion ( ) ` with a direct reference to ` Version . LATEST ` in multiple filter factory
fix proxy generation for interface method with @ client ( interface = abstract )
( chore ) camel - drl - parser : fix parsing of comma in drl file
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
throw a protocol _ error if the payload be invalid for a frame .
move publishsubscribechannel and publishsubscribechannelparser from ' channel ' to ' dispatcher ' and move ' publishsubscribechannel ' into ' dispatcher '
updated ` executionId ` type from ` String ` to ` Long ` across multiple classes to improve flexibility in handling scheduled query execution IDs
added multiple byte update operations for image dimensions in ImageProcessor . java to enhance image processing efficiency by optimizing image dimensions
removed logging of the Znode version in SolrConfig and added necessary imports in SolrConfigHandler to streamline version management and enhance code clarity
updated the delayUntil calculation in FileSyncAdapter . java from a fixed value to a dynamic value based on the current time to ensure accurate synchronization
updated the declaration of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` String ` for better type safety to improve
added URI handling for file paths and improved error logging in DefaultPackageScanClassResolver . java ; added a new test case in DefaultPackage
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] move timestampextractorutils to flink -
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` interface to provide a mechanism for retrieving principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer SDK versions
replaced the auto - suggest dialog with a simpler form dialog for custom filename input to enhance user experience by improving user experience by providing
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
updated the method signature of ` stream ` in ` MongoTemplate . java ` to use ` collectionName ` instead of ` collection . getName ( )
update zoom calculation to use a fixed value instead of a dynamic scroll amount to improve accuracy of zoom handling in the application
added similarity support to KNearestNeighborClassifier and updated related tests to enhance classification accuracy by allowing custom similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
updated the reason retrieval from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added tests for ` requestMtu ` functionality in ` ShadowBluetoothGattTest ` and implemented ` requestMtu ` in
refactor ServletInputStream creation into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in LibVosk and set its log level to WARNINGS to improve error handling and provide better
replace HashMap with ConcurrentHashMap for mProcessingChains to improve thread - safety and performance of processing chains
updated Japanese text resource files to include " all , " " grouped , " and " summary " to improve clarity and accuracy of
updated size condition from checking for 0 to checking for 1 in JDBCTypeMapping . java and modified assertions in JdbcTypeMappingTest . java to
added synchronized keyword to addPlayer and removePlayer methods and replaced direct calls to addEntityDirectly and removeEntityDirectly with streams to ensure
refactor accessibility handling in TerminalView by replacing screen reader detection logic with regex matching to improve flexibility in determining accessibility status based on
added a new display option ` SIDE _ NAVIGATION ` to the command behavior checks in ` MenuBar . java ` and modified
removed unnecessary Disposable import from PoloniexManualExample . java and added state handling in WampStreamingService . java to streamline
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and its corresponding test in UpdateSettingForEnergyLimit
updated variable names and added protocol handling in PostmanJsonBuilder . java and UrlBean . java to improve code clarity and enhance URL protocol
added getter and setter methods for the namespacePrefixRef variable in SoapJaxbDataFormat . java to allow external configuration of the namespace prefix
refactor date comparison logic in TestRange . java to use a unified isSameDay method to improve code readability and maintainability by reducing
added checks for server existence and security properties in BasicAuthIntegrationTest . java and updated ZkStateReader . java to retrieve security properties to
show correct currency code in tradeschartsviewmodel when use sticky market price
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and
replaced the variable ` from ` with ` end ` and updated related logic in ` NativeString . java ` to improve clarity and correct
added file download functionality using FileDataStorageManager to manage file state and download status
refactor RandomAccessFile usage to use a local variable and set the length of the log file to improve code readability and ensure the log length
added methods ` checkIfRegistryRunning ` and ` deleteFileIfExistsWithRetry ` to check if a registry is running and handle IOException during deletion to improve
removed unused import statements and added componentPresetDao . startLoading ( ) in Quick3dMain . java and TextureTest . java to stream
removed unused variables and added suppression warnings in multiple Java files to improve code clarity and enhance type safety in the codebase
added a null check for instances in TraceFeignContext to prevent potential NullPointerException when instances are null
phoenix - 1084 : allow set isolation level to transaction _ read _ committed or transaction _ serially _ read when transaction be
added transaction attribute handling and exception management in AbstractStepFactoryBean , ItemOrientedStep , and SkipLimitStepFactoryBean classes to improve
replaced ` CasClient ` with ` DirectCasClient ` and refactored the ` CasManagementSecurityInterceptor ` class to improve client
removed the visibility and edit functionality of the " add category " menu item in ListFragment and NavigationDrawerFragment to streamline the user interface by
rename ` cancel ` method to ` cancelMatchingOperation ` and change method name from ` observeDownloadWorkerState ` to ` observeWorkerState `
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve text size consistency and clarity in font size management
[ fix ] check that fact be valid before create a new one .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
replace return statement to create an ArrayList instance from spans to ensure that the returned span is a new ArrayList instance
refactor logging and validation logic in Liquibase . java to improve code readability and maintainability
added a method to set the revision in MicroserviceVersions and modified InstanceCacheChecker to set the revision to null to ensure the microserviceVersions
updated foreign key and index name handling in TableRetriever . java to include unique identifiers and hash code to improve clarity of foreign key and index
camel - aws2 - s3 : add uri - endpoint - override option to all aws2 component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method to BitstampAccountService
added a try - catch block around the method call to handle potential NoSuchComponentException to ensure that the method returns null when the component is not
modify push method to return a boolean value instead of void to indicate whether push be enabled or not
refactor LegacyAddressTest to read legacy addresses from a file instead of a hardcoded string to improve flexibility in validating legacy addresses by allowing
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactored push warning handling in NotificationsActivity and added closeDrawer ( ) method in DrawerActivity to improve user experience by ensuring sn
do n ' t close the channel if an exception occur during replay
updated null checks and variable names for consistency and clarity in LdapPasswordPolicyEnforcer . java to enhance code readability and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable tests related to PHOENIX - 2840
nifi - 1646 : add timezone attribute to the aboutdto to allow the user to set the timezone of the nifi instance
do n ' t split own range if they do n ' t match the local range
removed exception handling for reading ` child ` and ` bscc ` objects in ` BeanContextSupport . java ` to simplify code and improve read
remove redundant synchronized block in CircuitManagerImpl . java to improve code readability and maintainability
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 1349 : make pollablesource and pollablesink thread - safe
updated logging level from error to info for user authentication failures to improve logging clarity and provide more informative error messages
refactor ContainerOrderFocusTraversalPolicy class to improve focus traversal logic for better user experience
changed return type of ` getPointLength ( ) ` from double to int and implemented ` GeoLocus ` interface in ` GeoLocus `
formatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent for consistency to improve code readability and maintainability
refactor connection handling in SchemaCrawlerMain and add execute method in Executable to improve connection management and enhance error handling in executable execution
bump default tl version to v1.2 with a fallback for old jdks
updated exception messages in CountersManager . java for clarity to improve error reporting for counter allocation failures
modified the audio queue position handling in MediaManager . java to ensure proper stopping behavior when the current audio queue position is zero
updated debug logging statements in HttpConnection . java to include the cancelled state to improve logging clarity by providing additional context about the cancelled state
added support for the ` @ Transient ` annotation in ` JpaPersistentPropertyImpl ` and updated tests accordingly to ensure proper handling of transient fields
updated stack version assertions in UpgradeResourceProviderTest . java to reflect the correct version from 2.1 . 1 to 2.2 . 0
trufflevm . eval should return object instead of symbol .
changed the visibility of the method ` isBinaryType ` from private to public and modified debug logging statements to enhance accessibility of the method and
updated the value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java to
removed the priority parameter from the JavaProblem constructor and related methods to simplify error handling by eliminating unnecessary priority management
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler ` to standard
updated string formatting in TableWriterTest to use the system ' s line separator to ensure consistent line endings across different operating systems
refactor DebugHelper to improve code readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class and implemented its logic to ensure texture ownership is checked before proceed
added LDAP configuration properties to HiveConf . java to enhance security and LDAP configuration options
datacatalog : fix checkstyle issue in util / datacatalog / search / java / com / google / cloud / datacatalog / search .
updated input method toggle logic in DetailActivity . java to include SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY to improve user interface
add a test for converting primitive to map of integer to object in DataTableTypeRegistryTableConverterTest . java to ensure the converter correctly handles primitive
updated the size of the test file from 100 , 500 to 10 , 50 and deleted the " memFS : fsMem . mv . db
update error message in contenttypemanager to be more descriptive
made the ` dropSequences ` method abstract in ` AbstractDatabase . java ` and added ` MigrationFailedException ` handling in multiple database classes to
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
store the result of binaryField . createField ( ) in a variable ' f ' to improve variable assignment for clarity
bug fix : do n ' t show map style if the event be not a logical style
add a test for the findOne method after upsert for non - existing objects to ensure that the upsert function correctly handles non - existing objects correctly
hbase - 2645 fix findbugs warning in hbase - server
added a method to record app launch statistics and refactored broadcast intent creation to improve app launch tracking and handle null shortcut scenarios
refactor graphics handling in JavaSEPort to use Graphics2D for improved rendering performance to enhance performance and reduce memory usage during rendering operations
update instructorfeedbackresultspagedata to not send team member to other team .
fix ( inventory ) : return the player ' s inventory id if the player ' s inventory id be zero .
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure that break is only executed if the condition is met
updated return type handling in multiple parser visitor classes to ensure consistent behavior when returnType is null
modified TileMapRenderer to handle blended tiles as an array instead of a CSV string to improve flexibility in handling blended tiles
removed unused iterator classes from the Classes annotation to streamline the code for improved readability and maintainability
fix a bug in the first point of a seg _ move tool that could lead to a npe
updated lockOnSync initialization to use ' this ' instead of ' this ' and modified throttleRate assignment to improve clarity and maintain consistency in
PipeEventBus and PipeBehaviourEmzuli classes to implement new base and sub classes for event handling functionality to enhance event processing capabilities and
updated timeout value in ZkController instantiation from 1000 to TIMEOUT to allow more time for the ZkController initialization
added a test for the passcode endpoint with client parameters in TokenMvcMockTests . java to verify the functionality of the passcode endpoint with
added LengthFilter and KeepWordFilter constructors to brokenOffsetsConstructors in TestRandomChains . java to ensure compatibility with Lucene ' s handling of
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to streamline code by eliminating
fix 32 - bit int conversion issue in llvmx86 _ 64bitvastart
refactor btCollisionObjectArray and btRigidBody to utilize btCollisionObject . getInstance and btRigidBody . up
added a copyright year property and updated the OpenRocket URL in the AboutDialog to provide users with information about the project ' s copyright
add getdistributedobjects ( ) method to jetclientinstanceimpl . java ( # 11977 )
added debug print statements in FinSet . java and updated expected values in MassCalculatorTest . java to improve debugging output for better debugging and
replaced TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to improve memory management by using a more
changed exception handling from MetadataException to a more general Exception in StandaloneSchemaFetcher . java and modified the parameter name in CreateAlignedTimeSeries
add check for burningmanservice . isactivated ( ) before check for delayed payout
updated JsonLoaderTest to use a dynamic JSON string and added exception handling for " big _ integer _ t " to improve code clarity and
updated the threshold for tableSize from 1 to 0x40000000 in ObjectSet . java to ensure that the capacity is within valid range for
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure proper handling of null and zero values
removed the @ AddToRuleKey annotation from various fields in AppleTest . java to streamline code by eliminating unnecessary annotations
added exception handling for SecurityException in FileHelper . java and updated content limit logic in TextHelper . java to improve robustness by handling potential security
added tests for theme attribute resolution in ShadowThemeTest . java to ensure correct behavior of attribute resolution with multiple attributes
updated sheet size check in HSSFWorkbook and modified test cases in TestHSSFWorkbook to accommodate multiple sheet names to ensure
replace primaryColor ( ) with elementColor ( ) in ManageAccountsActivity . java to ensure the correct color is used for UI elements
updated handler wrapping logic in DefaultEventBus . java and simplified path resolver in DefaultPlatformManager . java to improve handling of null replyHandler and
added binary collation handling to MariaDbDbmsType , MySqlDbmsType , and related classes to support character set collation in SQL queries
added a new method ` whenType ` to return an ` Optional < T > ` based on the type of the tree to enhance type safety
refactor navigation handling in ItemLauncher to improve clarity and encapsulation to enhance code readability and maintainability by centralizing navigation logic
update FeedREST to return a temporary redirect instead of a successful JSON response to enhance user experience by providing a temporary redirect for the application settings
[ flink - 20536 ] [ kinesis ] check that the deserializer be serializable in flinkkinesisconsumer
camel - 14850 : fix javadoc warning in camel - jetty
added a try - finally block to ensure zkClient is closed to prevent resource leaks and prevent potential memory leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
refactor the ` read ` method in ` ProxyHandler . java ` to use a new ` read ` method to improve code readability and
replaced BufferUtil . allocate calls with ByteBuffer . allocate in ABCase1 _ 2 . java to simplify code and improve performance by using a
modified the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and updated its logic to return a boolean indicating
replaced direct order comparison with Integer . compare for improved readability to enhance code clarity and maintainability by using a consistent comparison method
added a new file ` PicOfDayAppWidget . java ` to implement app widget updates using Picasso to enable loading images from
set default value of ` _ internallbvmofferingid ` to ` 0L ` and update related logic in ` InternalLoadBalancerVMManager
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to improve code organization and ensure compatibility with the new Hive
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in future development
added user and password options for accessing the remote JMX in NodeToolCmd . java to enhance security by allowing users to connect to the remote JMX
removed duplicate instantiation of BytesRef in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated widget handling in AppsCustomizePagedView . java to include mPageViewIconCache as a parameter to improve widget management by
ggbapplet . getpngbase64 ( ) : use 3d view for 3d view
updated rotation calculations in GcodeRenderer . java to ensure rotation values are non - negative to improve rendering accuracy and prevent invalid rotation values
added a new option ` WORKSPACE ` to the ` OptionEnum ` and updated ` TerminalClient ` to set the workspace directory to enhance functionality
updated the file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure the test runs
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and enhance test reliability
updated the ` confimAccess ` method to use a ` Map < String , Object > ` instead of a ` ModelAndView ` to
updated assertions in HibernateIT to utilize assertTrueEventually for better clarity to improve test reliability by ensuring that the session is
refactor EventBusHook class to improve code structure to enhance maintainability and readability of the code
rename MultiPaintEventTest . java file to improve clarity and consistency in naming conventions
changed the variable declaration of mNewScale from final float to non - final float to ensure that the new scale is properly initialized for improved
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the code
added unique key handling in LukeRequestHandler to ensure proper validation of unique key fields in the schema
added colorDocmentFilter to strokeColor and backgroundColor in BorderEditor , modified color retrieval in EditableResources , and added roundBorderColor attribute
make binaryparserexception use compilerasserts . neverpartofcompilation ( ) .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchSchedulingtest
added logging statements in GatewayRSocket and GatewaySocketAcceptor , modified return values in PingPongApp , and improved backpressure handling
added menu item click listener to the recent chat fragment to notify the user when the action is under construction
replaced ` ButtonDropTarget ` with ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` method to return a
renamed methods from ` add ` and ` removeTail ` to ` push ` and ` pop ` across multiple classes to improve clarity and
updated API and image URLs from " https : / / test . wikimedia . org / wikimedia . org / w
refactor index management by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replace usage of Collections . sort with direct method calls for sorting collections to improve code readability and performance by eliminating unnecessary method calls
added various date and time patterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for HR - related
added a call to clear the focus on the clickedView in DetailFragment . java to ensure the clickedView is correctly displayed in the user interface
updated language selection logic in ` DescriptionsAdapter ` and modified language value handling in ` SpinnerLanguagesAdapter ` to improve user experience by ensuring
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registering global , weak , and access fields in FastGetField . java to enhance the functionality of the FastGetField class
added default value handling for UNION and NULL types in ReflectData . java and updated test assertions in TestReflect . java to ensure proper handling of
fix test which randomly fail on slow ci server
added a null check before remapping the resource class to avoid potential NullPointerException when the resource class is null
( chore ) camel - hapi - fhir : add constructor to hapi - fhir - dialect class that take databaseversion (
camel - 1645 : http producer should not send connection close header to avoid issue with connection leak
increased the socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete
added an assertion to verify that the count of tickets based on status and final _ price _ cts is greater than zero to ensure that the
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
fixed thymeleaf template parser to use getfirstelementchild ( ) instead of getfirstelement ( )
[ scb - 2290 ] fix removal of enum ( # 2293 )
updated metaPortStart and dataPortStart values , added waitingToShutDown method , and implemented waitingToShutDown in ClusterNode
change log level from warn to info for not clean cached beans to improve logging clarity and provide more informative messages
added a content type of " application / octet - stream " to WebdavEntry . java to ensure proper handling of binary data in WebDAV
added a new test class ` LazyTraceThreadPoolTaskExecutorTests ` and modified the ` getQueueSize ` method in ` LazyTraceThreadPoolTaskExecutor
fix distanceop to be more tolerant to edge case
renamed the variable ` required ` to ` requiredLabel ` in the ` AbstractUITag ` class to improve clarity by indicating the
removed the next ( ) method and added updateProgress ( ) in PurgingPartitionIterator . java to streamline progress updates for improved performance
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation to ensure polygons have at least 3 points before assignment to improve robustness by preventing array index out of bounds exceptions
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) in multiple files to simplify object mapping and improve code readability
bugfix : do n ' t try to solve a curve that do n ' t have any polynomial
updated the ` ExternalNameRecord ` to read Unicode names correctly based on multibyte flags to ensure correct handling of Unicode names for compatibility with
updated the description of the JMS destination type from ' TOPIC ' to ' QUEUE ' in AbstractJMSProcessor . java to clarify
added logic to exclude specific identity providers from login prompts in ` LoginInfoEndpoint ` to ensure that only specific identity providers are included in the
replaced ` remove ` with ` removeIf ` in ` AbstractController . java ` to ensure listeners are removed only if the listener matches the
added a spinner option to the action toggle in the PieChartActivity to enhance user experience by allowing customization of the chart ' s visibility
citrixresourcebase : fix npe while copy vhd to secondary storage
hbase - 22727 do n ' t normalize table that have a namespace have quota
removed unused imports and added a resizing method for float arrays in AndroidInput . java to improve code readability and maintainability by reducing
added a new static method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the ` @ VisibleForTesting ` annotation to enhance
ignore clientmapnearcachetest since it be always fail and block prs
fix the hopperhock be able to place item outside the world .
added authentication dialog functionality to SsoWebViewClient . java to enhance user feedback during SAML authentication
refactor termDocs handling and add deleteDoc and deleteByQuery methods in TestStressIndexing2 . java to improve clarity and functionality of
[ flink - 22559 ] [ table - planner - blink ] disable flaky upsertkafkatableitcase . test
replaced ` get ` with ` computeIfAbsent ` for ` typeList ` , ` csize ` , ` ctype ` , and ` endPos
added configuration to allow single values as an array in DefaultEntityMapper to enhance data deserialization capabilities for improved data handling
updated localization message from " Localization update : " to " BE , UK , and SL . " to clarify the current
updated SHORTCUT _ CATEGORIES to use resourceUtils for category retrieval to improve flexibility in managing application categories
( chore ) camel - feel : fix parsing of ` ` instanceof ' ' expression
nifi - 1640 : add mime . type attribute to gethttp response . fix issue with content - type header .
add a toprovenance ( ) method to the resourcehistorytable to provide a way to retrieve the provenance of a resource .
updated button labels and their click listeners in HelpActivity . java , and modified URI construction in SearchBookContentsActivity . java to improve clarity
updated NatsConfiguration . java with new configuration parameters to enhance performance and maintainability of the application
updated the method name from ` invalidateStalePartition ` to ` invalidateStalePartitions ` and modified its implementation to include ` MetastoreContext `
use circularfifobuffers instead of boundedfifobuffers in viewresultsfullvisualizer
updated icons in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter from ` ic _ group ` to ` ic _
changed method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread -
updated method names in MocksCreationTest for consistency and clarity to improve readability and maintainability of the test code
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration for the awaiter from 10 seconds to 30 seconds in multiple locations to allow more time for the awaiter to
simplified the ` publishBuildSlaveFinishedEvent ` method by removing the dependency on ` BuckEventBus ` to simplify the method signature
fix findbugs encode issue in vmwarestoragemanagerimpl . java file
test : add test for deposit workspace item without workflow
added distinct ( ) method to the classpath processing in ClassLoaderSupportImpl . java to ensure that distinct classpath files are processed correctly
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to improve clarity and consistency to enhance readability and maintainability of command - line argument processing
added checks for table existence before deleting a partition in HiveMetaStore . java to ensure that partitions are only deleted if the table is not an
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS and HIVE _ SERVER2 _ ASYNC _ EXEC _ QUEUE
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution task role and improve service and component retrieval to enhance code readability and maintainability
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current conference
add a new method to clear the flutter log tree . ( # 2296 )
updated return statements in ChannelEndPoint . java to include checks for socket state and output / input shutdown status to ensure proper handling of socket shutdown conditions
refactor SetNullableGenerator for improved nullability handling to enhance code clarity and maintainability
camel - 16463 : camel - example - reportincident should not use http : / / localhost : 9080 / cxf :
simplified import statements and refactored content type handling in NettyRoutingFilter and FormIntegrationTests to improve code readability and maintain
added Swagger annotations to multiple service classes for " hello " and " helloWithValue " to enhance API documentation by providing a more descriptive name
refactor lifecycle listener management in Lwjgl3Application and update method signature in Lwjgl3Window to improve clarity and
updated FG _ FK color from a gray color to a bright red color to improve the visual appearance of the foreground color
disable mp3 audio support by default in the sound manager
fix secondaryindexmanagertest to pass on window
pmd : add about group label to preference page .
[ hotfix ] [ test ] fix customserializationitcase to use findthrowable
modified methods in MediaFormatUtil for improved media handling to enhance performance and maintainability of media processing
added an implementation of the ` isCellEditable ` method in the ` GeneralTab ` class to ensure that the ` isCellEditable ` method
added an abstract method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message handling in ` DefaultJava
added a temporary variable ` tmpCount ` in ` VocalTractModifier ` and updated the ` vscales ` array in ` Vocal
updated import statements for BaseScalarUdfTest in TestUDFRound . java and TestGenericUDFConcat . java to ensure consistency in
implement ` hashCode ( ) ` and ` equals ( ) ` methods in ` UaaAuthenticationDetails ` class to ensure proper hashing and comparison of
testskeletoncontrolrefresh now use anim composer instead of skeletoncontrol
rename ` NodeFilter ` to ` NodeCountFilter ` and update related method names to improve clarity and consistency in naming conventions
change condition from ' less than or equal to ' to ' less than or equal to ' in NodeImpl . java to ensure that sync block
updated the state from 365 to 366 and modified the debug expression type handling in DebugExpressionParser . java to improve clarity of debug expression
refactor dependency checking to use streams for improved readability to enhance performance and maintainability of the code
renamed the method ` tmp ( ) ` to ` dst2 ( ) ` and modified the ` lerp ( ) ` method to
[ grid ] add default value to the ` ` args ' ' array in gridhubconfiguration .
updated linker argument handling in RustBinaryDescription and added linker flags in RustLinkerIntegrationTest to improve linker configuration flexibility and ensure
[ # 7018 ] fix test failure on travis and appveyor
added configuration for HIVEQUERYNAME in HiveConf and updated logging in GenericUDTFGetSplits to include it to enhance flexibility in
removed the import of ` java . io . File ` from ` TileAtlas . java ` to streamline dependencies and improve code clarity
[ java ] fix gradle daemon cancelling and escapeprocessingoutputstream cancelling .
updated the ` validateQuery ` method to include an additional ` Object ... ` parameter for improved error handling to enhance query validation by providing more
updated index version from 1 to 2 and refactored tree retrieval logic in LuceneExecutor . java to improve code clarity and maintainability
[ flink - 11 ] [ runtime ] add test for kryoserializer registration change
added null check before removing a property and updated config types in BlueprintConfigurationProcessor . java to avoid potential NullPointerException when removing properties
refactor boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for better boolean conversion to improve code readability and maintainability
added hideCustomizationDrawer ( ) method to mmm Launcher . java and ppp Launcher . java to ensure customization drawer is
refactor ` TermVectorComponent ` to use a constant for warnings and improve the handling of unique key field warnings to enhance code readability and
updated logging behavior to differentiate between optimistic types and non - optimistic types in the compile process to improve logging clarity based on the
rename Expect class to improve clarity to enhance code readability and maintainability
added UnixSocketConfigurationStrategy class and integrated it into DockerClientFactory to enhance Docker client configuration for Unix - socket connections
added JUnit 5 annotations and a flaky test method in CloseableDoSFilterTest . java to enable flaky tests in the test suite
camel - 1640 : camel - reactive - stream : improve exception when camel publish have no active subscription .
refactor ` Vectorizer ` and ` TezCompiler ` to use ` MapWork ` instead of ` MapRedTask ` for better type
updated constructor calls in StringAppender and LogDivertAppender classes to include an additional boolean parameter to enhance flexibility in logging behavior
fix a nullpointerexception in jmetertreemodel . updatecurrentnode ( )
sulong : add linkage . isweak ( ) method to the linkage class to make it easy to identify which linkage
updated class names and imports in multiple Java files to improve clarity and maintain consistency in naming conventions
add test for defaulttransactionthreadlocal . get ( ) in h2
added a validation check for invalid operation handles in HiveStatement . java to ensure that only valid operation handles are processed to avoid errors
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
simplified the response message in the UserREST class to improve readability and maintainability of the code
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the constructor to accept it to enhance functionality by allowing the
update column width calculation in mmm Sheet . java and add unit tests in mmm TestHSSFSheet . java to ensure correct column
added configPath parameter to the less command in Builtins . java to enable configuration of the command ' s path
replaced Set with Collection for tables and weakAssociations in DotWriter and GraphExecutable classes to improve flexibility in handling collections of tables and weak
updated default SSHD container image from " sshd : 1.0 . 0 " to " sshd : 1.0 . 0 "
removed an assertion from the AgentManagerImpl class to streamline the code by eliminating unnecessary checks
refactor key generation logic in DefaultGroupKeyGenerator to simplify multi - valued column handling to improve code readability and maintainability by simplifying
refactor the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and improve exception handling in ` TestMultiMMap
refactor BCSiliconRecipes . java to use a new variable for GateVariant and simplify the creation of Ingredient
rename put ( ) to putobject ( ) in favor of put ( )
simplified visibility setting for child views in CellLayout and refactored drag exit handling in Workspace to improve code readability and maintainability
updated the rewrite function in ModifyRequestBodyGatewayFilterFactory and added a new test case in ModifyRequestBodyGatewayFilterFactoryTests to improve the handling of
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring only package - private fields are accessible
replaced instances of ` logger . warn ` with ` logger . trace ` in ` LoggingHandler . java ` to improve logging granularity and reduce
updated prefix handling in WhiteBlackList . java and added a new test case in Issue348 . java to improve clarity and ensure correct
added new imports and refactored options menu handling in GalleryActivity . java to improve menu functionality and enhance user interaction with gallery options
added lazy initialization for MongoDB services in MongoDBServiceFactory to improve performance by avoiding unnecessary instantiation of services
added tests for boolean value replacement in InlineConstantMutatorTest . java to ensure proper handling of boolean values and prevent code formatting issues
updated the ` decode ` method to include a ` Blackhole ` parameter and adjusted the handling of ` d . readDouble ( ) ` and
fix : update gapic - generator - java with mock service generation fix ( # 502 )
updated ` getAllUnitStrings ` and ` unitProvider ` methods to return ` Map . Entry < String , String > ` instead of ` String
clear the witnesses database in ManagerTest . java to ensure data integrity by resetting the witnesses data
do n ' t throw prestoexception when abort
updated stack handling in NativeError . java by removing the " stack " property and replacing it with getter and setter methods to improve clarity and
removed a condition that checks if the path name starts with a dot in DrillPathFilter . java to simplify the code by eliminating
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to ` clearIndex ( ) ` in ` BasicFunctionalityTest . java ` to ensure the index is cleared before proceeding
updated the value of BOLDWEIGHT _ NORMAL from 190 to 0x190 in HSSFFont . java to correct the constant value
changed ` fThreadGroup ` to be ` volatile ` in ` FailOnTimeout . java ` and made ` fLookForStuckThread
changed the visibility modifier of the ` getValue ` and ` setValue ` methods in ` ValueResultData ` from package - private to package - private
updated hash code and equality checks in FuzzyQuery to use superclass methods to ensure correct behavior of hashCode and equals methods
removed unnecessary print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary logging
changed the return type of the ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify
updated the JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest
updated the retrieval of person attributes and modified the principal creation process in the PersonDirectoryPrincipalResolver class to improve clarity in principal resolution and enhance
changed log level from info to warn for specific log messages in OpenWebNetBridgeHandler . java to provide more informative log messages for better
updated method names from ` intHash ` and ` longHash ` to ` hash ` and ` hash ` across multiple classes to improve clarity
added a constructor to ThumbnailGenerationTask to initialize parameters to ensure that storageManager is not null and the image view reference is not null before
updated the condition in the loop to check for ` nrFound ` and ` tries ` in ` GroupSelectionQuery . java ` to ensure that
added a new file ` Bug1933922 . java ` implementing recursive compilation with ` foo ` and ` getProgram ` methods to fac
removed unnecessary parentheses in conditional statements and improved code readability to enhance code clarity and maintainability
updated character validation check from 33 to 32 in FileResolver . java to ensure valid space characters are valid for processing
added requestFocus ( ) method call in Display . java to ensure the component is focused before proceeding
add test data for new instructor without sample course
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated message handling in DetailFragment and added onPause method in MainActivity to improve user experience by providing a clear confirmation dialog when note updates are
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to validate
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
refactor process execution in SourceCompiler to use ProcessBuilder and remove JAVA _ TOOL _ OPTIONS environment variable to improve compatibility with Java tool options
updated the local host retrieval from ` InetAddress . getLocalHost ( ) ` to ` InetAddress . getByName ( " 127.0 . 0.1
refactor subsystem assignment logic in Metrics . java to use a loop to improve readability and maintainability of the code
added assumptions to DaemonLifecycleManagerTest and InstallCommandIntegrationTest for macOS platform compatibility to ensure tests are only executed on macOS environments
remove jvmciversioncheck . validateproperties and replace it with jvmciversioncheck . requireproperty
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
rename TestLargePageUseForAuxMemory . java file to improve clarity and consistency in naming conventions
updated ` BinaryParser ` , ` PlainTextParser ` , ` PlainTextParser ` , and ` ParsingExecutionContextView ` classes to use
added support for handling ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new ` MultiPartFormDataCompliance ` enum to enable
added support for JDK - 17 in GradleDistributionManager to enable compatibility with JDK - 17 and improve distribution management
refactor type handling in SnapshotControl to use a unified addType method to improve code readability and maintainability by consolidating type addition logic
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty runWith values to improve robustness by preventing null or empty values from being returned
http : / / issues . apache . org / activemq / browse / amq - 2290 - add test case to verify
renamed multiple classes and updated their imports in the project to improve clarity and maintain consistency in naming conventions
pdf417 : do n ' t fail the test if there ' s an image that ca n ' t be detect
updated variable names from ' amount ' to ' mTintAmount ' for consistency to improve code readability and maintainability
added a new file ` SumZeroFunctions . java ` to implement a GAGGR function for sum zero operations to provide functionality for aggregating
updated SQL queries in FirstValueFunctionIT . java and NthValueFunctionIT . java to remove unnecessary null checks to improve code clarity
hbase - 26969 bucketallocatorexception should use stringbuilder instead of string concatenation
added a null check before putting properties in roleObject to avoid potential NullPointerException when prop is null
added @ VisibleForTesting annotation to several fields and modified variable declarations in StatusBarTouchController . java , RecentsView . java , and
added a method to log containers with a stream option in DockerClient . java to enhance container logging functionality by allowing stream - based logging
move mvstore cache performance test into a separate test suite
updated the constant value for LONG from " L " to " J " in PrimitiveType . java to reflect the correct data type used for long
changed the method ` delegatingApplicationListener ` to be static in ` WebSecurityConfiguration . java ` to allow instantiation of ` DelegatingApplication
set the message ' s body to null in RestBindingAdvice . java to reset the message ' s body after processing
added ` FileDeletingTasklet ` and ` TaskletJobFunctionalTests ` classes to manage and validate file deletion in a batch job to
update center / orientation and scale when create a new view for plane
updated bitwise operations in BitUtil , Int2IntCounterMap , Int2IntHashMap , Int2IntHashMap , Int2IntCounterMap
updated event handling methods in AccessibilityManagerCompat and related classes to use ordinal values instead of event tags to improve clarity and consistency in event
added support for checking if the request is a video thumbnail request to improve handling of video thumbnail requests based on user - agent headers
fix bug in scrolltoerrorline ( ) when there be no problem
updated the title area addition logic in SideMenuBar to differentiate between top and bottom menu buttons to improve the responsiveness of the menu
updated Skia . java and Skia . java to include additional libraries and link the " libskia " library to ensure compatibility with the
add ` ` com . google . bitcoin . unittest ' ' to support unit testing
added error handling for missing format arguments in QueryCommand and improved test cases in QueryCommandIntegrationTest to enhance robustness by providing clearer
refactor capacity and isPositionValid variables to use length - 1 instead of capacity to improve clarity and maintainability of the code
updated ` walkRuleAndAdd ` method calls to include ` srcRule ` as a parameter and added a check for ` srcTarget ` to
[ netbeans - 4352 ] patchmodulefilemanager : allow to override module name ( # 4353 )
[ java ] remove redundant check for protocol version when check candidate term id .
updated OwnCloudClientManagerFactory to conditionally set the default policy based on SAML authentication status to enhance security by ensuring the client is always new
add miss map table resource error message to readbatch and writebatch
simplify code by use utils . close ( )
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved authentication handling to enhance security context management and simplify authentication flow
modified the ` removeActor ` method to include a ` boolean unfocus ` parameter for better control over actor removal behavior to enhance functionality by allowing
refactor configuration prompt handling in SolrCLI . java to use a variable for valid configurations to improve code readability and maintainability by using a
added logging functionality to NettyHttpServer and modified response handling in RoutingInBoundHandler to improve logging capabilities and ensure response is read only when
refactor multiple Java files to improve code structure to enhance maintainability and readability of the codebase
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates are executed on the
camel - 14850 : camel - groovy - make it easy to use groovy language in the camel context
[ mng - 5369 ] plugin dependency should not include versionless artifact ( # 5369 )
changed access modifiers of several methods and options in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils from package - private to public to allow
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
updated the handling of storage keys in HttpsMessenger . java to retrieve and print the certificate chain to enhance security by verifying the storage key
simonstewart : throw a good exception if we ca n ' t convert the response
changed the visibility of the ` updateImage ` method from private to protected in both ` ImageButton . java ` and ` ImageTextButton .
add miss patch in block . dropresources ( ) for server level .
added native methods for managing ` SpatialLocationCalculatorConfig ` in ` DataOutputQueue ` and ` depthai ` classes to facilitate
updated multiple Java files related to community detection , connected components , GSA , LabelPropagation , PageRank , SingleSourceShortestPaths , and
replaced the ` keySet ( ) . isEmpty ( ) ` method with a new ` isEmpty ( _ root ) ` method in the ` Tree
updated foreground and background method calls in AttributedStringBuilder . java to use specific parameters instead of a fixed column value to improve flexibility in color
update PeerSync to conditionally set the doFingerprint property based on the " solr . disableFingerprint " system property to ensure that fingerprinting behavior
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
refactored event emission in MongoTemplate and added test cases for UUID handling in MongoTemplateTests to improve event emission efficiency and ensure
add miss logger to collectioncontainer . addendum to fix settransactiontest
close the input stream if it ' s not null to prevent memory leaks
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling clarity
removed unnecessary whitespace in the import statement in OptionsParser . java to improve code readability and maintain consistency
update instructorfeedbackcopyactiontest . java and instructorfeedbackaddactiontest . java to fix typo
[ hotfix ] fix checkstyle violation in jobservicepipelineresult
removed the ` step ` parameter from the ` DisplayTextVirtualDatapoint ` and updated related methods in ` HmDatapoint ` and `
updated log messages in PostgreSQLReadWriteAdvisoryLocksTest to clarify lock acquisition and acquisition processes to enhance traceability and
remove duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling logic for improved performance
danielwagnerhall : fix testgettextcontent for ie
refactor Logger class to use a ThreadLocal for logger management to improve thread - safety and maintainability of logger management
updated FunctionInitializer and FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit to improve testing capabilities and align with Mockito
added type boxing and error handling for primitive types in Types . java , updated type checking in Infer . java , and introduced a new
updated task orientation handling in RecentsView and removed initialization of the Digital Wellbeing toast in TaskView to ensure proper task
replaced the method for retrieving regions from HiveRegionServerThreads with a direct call to getRegions to simplify the code and improve readability by
added logic to clone and delete the original contract repository if the new contract details exists to ensure that the original repository remains unchanged before proceeding with
replaced hardcoded TOKEN _ ISSUE _ FEE with dynamic properties retrieval in TokenIssueProcessor to ensure accurate balance calculations based on asset
refactor cache management in RealisticRenderStrategy to utilize URI - based texture caching to improve performance and reduce memory usage during rendering
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code read
added an ` isUnselectedStyle ` flag and modified the ` getStringWidth ` method in multiple classes to improve text alignment handling based on selected text
initialize ` mappings ` , ` currentActions ` , ` currentActions ` , ` score ` , ` attrs ` , and ` statsList `
removed the ` flags ` parameter from multiple method signatures in ` ShadowApplicationPackageManager ` and added a new constant ` FLAG _ PRIMARY ` in
refactor PingRequestHandler to improve request handling logic to enhance performance and maintainability of the pinging process
add ` mp4 : / / media / mp4 / sample _ with _ increasing _ timestamps . mp4 ` to ` androidtestutil
[ tradfri ] do n ' t warn on upgrade from old firmware
refactor AjaxElementLocator class to improve code structure to enhance maintainability and readability of the code
updated conditions in BoxLayout and DefaultLayout to check for " table - cell " instead of " block " to ensure proper handling of different display
refactor JsonDecoder to improve array level handling and add a new test for reordering fields in TestJsonDecoder to enhance code readability and
updated the RemovalListener implementation to use blockCacheLocation instead of notification to improve clarity and accuracy in handling removal events
ignore savepointtestbase test until it be fix
added @ Test annotations to DroolsMvelParserTest . java to enable unit tests for the DroolsMvelParser functionality
changed fields in ContextRegisterListener from non - final to final for better immutability to enhance code clarity and ensure immutability of
refactor ObjectHashSet to initialize iterator lazily and improve iterator initialization to enhance performance by avoiding unnecessary object initialization
added batchBytes management to SparkReduceRecordHandler and ReduceRecordSource , and introduced a default value in VectorizedRowBatch to improve handling of
changed the world readability mode from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings . java and UpdateUtils . java
updated log message for close ( ) and added error handling for abort ( ) in JdbcProxyGenerator . java to improve clarity of log messages
updated animation state from ` getState ( ) ` to ` mState ` and added importance for accessibility in ` Workspace . java ` to
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to improve log visibility for better debugging and monitoring
updated scope assignment in UaaTokenServices . java and added a new test in UaaTokenServicesTests . java to ensure scope length is
updated import statements and modified logger declaration in AvailableJDBCDrivers . java , and renamed TestAvailablePlugins class to AvailablePluginsTest to improve clarity
( chore ) camel - kie - api : move executablecommand from kie - api to kie - api
remove jdbctableservice from camel - itest - idempotent
added padding retrieval methods for cell layout in CellLayout . java and modified bitmap creation in Launcher . java to improve padding management for better visual
refactor candidate assignment logic in LineReaderImpl . java to handle potential empty string scenarios to improve robustness by avoiding unnecessary processing of candidate
updated ` SamlMetadataUIParserAction ` to use ` Action ` instead of ` SamlMetadataUIParserAction ` and added null check
added a method to check the number of open LDAP processes using a specified port to ensure that only relevant LDAP processes are processed with the specified port
log4j2 - 1343 : log4j2 - 1344 - add log4j - shutdown . shutdown ( )
updated URL filtering logic and logging levels in Fetcher . java and HTMLMetaProcessor . java to improve URL handling and provide clearer feedback during
updated SolrQuery to use " name : samsang " instead of " * : * " and modified the test assertion to reflect the correct
refactor TerminalServlet to use reflection for Karaf Console API instantiation to improve compatibility with newer Karaf versions and enhance flexibility in
bugfix : meshhelper . getverticescolors ( ) cause arrayindexoutofboundsexception .
do n ' t skip timestamped report subdirs when copy html report
updated method names and annotations in DataValidatorTest . java for clarity and consistency to improve code readability and maintainability by using more d
pdfbox - 4071 : remove unused private method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to throw a TemplateProcessingException when binding errors occur within the adequate context
removed a console output statement from JoglInput . java to clean up the code and improve readability
added support for allowing / disallowing private fields in FieldSupport and updated related tests to enhance field extraction functionality and improve test coverage
added a replacement of the device name in WebDataHandler . java to ensure the device name reflects the current device context
replaced direct instantiation of Lookup with a reflection - based approach using MethodHandles to improve flexibility in obtaining Lookup instances based on Java 8
added a deprecated method ` weights ` and introduced a new method ` weightsByDouble ` in ` ZParams ` to enhance functionality by allowing weight
added a Database parameter to the writeCustomHTML method across multiple writer classes to provide additional context about the database being used in the writeCustomHTML
updated BTreeMap . java to remove unnecessary casting of keys and added assertion for null values to improve code clarity and ensure correct handling of
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw specific exceptions instead of a generic Exception to improve
make it possible to disable heap zero file by default
replaced direct print statements with a call to ` Scope . getCurrentScope ( ) . getUI ( ) . sendMessage ( ) ` for better
reduced the size of the buffer from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java to optimize memory usage
added import statements for ChunkListener , ItemProcessListener , ItemReadListener , and ItemWriteListener in multiple Java files to enhance batch processing capabilities
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
updated string concatenation in SearchFiles . java and modified method calls in SortedSetDocValuesFacetCounts . java and MessageFilesParser . java to improve
updated Test7005594 . java file to improve test coverage and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class for improved clarity to enhance maintainability and readability of the code
server : fix npe in mapvirtualmachine api when vm id be not null
renamed ` mModifierDigitalTriggers ` to ` mModifierAnalogTriggers ` and introduced ` MCOptionUtils . GUIScale
updated method names and parameters in IterableSubject and IterableTest classes to improve clarity and consistency in naming conventions
camel - 17850 : camel - http - optimize to avoid arrayindexoutofboundsexception in camel - http4
added assertions to verify the count of various SQL statements in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the database queries are correctly
updated BarChartActivityMultiDataset to use a larger value formatter and modified BarLineChartBase to use a new LargeValueFormatter for impro
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' ) from platform . java
[ wasm ] fix checkstyle violation in tracelinearscan lifetimeanalysisphase
added a TODO comment for auto - generated method stub in NullAssertionValidator . java to improve code clarity by explicitly indicating that the method stub
added support for appending rule keys in DefaultRuleKeyBuilderFactory to enhance rule key generation for build rules
added directory creation for system profile and refactored test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest to
replaced the direct instantiation of ` DefaultThreadFactory ` with a method call to ` createThreadFactory ( ) ` to improve code readability
replaced the direct increment of inMessages with a method call to getMessagesIn in HttpChannelOverHTTP . java to improve code clarity and
added a " accept " attribute with a value of " image / * " in the ImageFileInputDialog class to allow users to accept images
refactor ElasticIndexWriter and TestElasticIndexWriter to streamline transport client creation and improve code readability to enhance maintainability and streamline
added detailed logging of witnesses and witnesses class in ForkController . java to improve debugging information for better debugging
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` CustomURLClassLoader ` with null pointer and empty
removed the ` getDepToGeneratedSourcesMap ` method and modified the ` findConfiguredGeneratedSourcePathsUsingDeps ` method in ` BaseI
added support for replacing wildcard characters with any character delimiters in UaaStringUtils and updated related tests to enhance wildcard handling and improve test coverage for
added validation for ` aliasToWork ` in ` Vectorizer . java ` to ensure that only one ` TableScanOperator ` aliases work with
updated MockitoJUnitRunner import from ` org . mockito . runners . MockitoJUnitRunner ` to ` org . mock
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values fails
refactored the ` getLangs ` method to return a ` Set < String > ` instead of an ` List < String > ` to
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability
hbase - 2643 add prepare ( ) method to takesnapshothandler and enable tablesnapshothandler
[ wasm ] add support for java emul : : isnull .
added a test to verify that the HTTP _ RPC endpoint behaves as modified in the Docker quickstart configuration to ensure that the HTTP RPC endpoint
added a volatile boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` , and updated version checks in ` Test
updated Javadoc visitor classes to replace ' Author ' and ' Since ' with ' Hidden ' , ' See ' , and ' SerialData ' to
camel - 3390 : fix potential npe when use two camel context with producer template
removed multiple redundant @ Override annotations from multiple security - related classes to streamline code and enhance maintainability by eliminating unnecessary overrides
added module imports and modified eval statements in Java2TypeScriptAdapter , EnumTests , and MyComplexEnumsAccess classes to enhance functionality and
fix xssfexporttoxml to use http : / / www . w3 . org / 2001 / xmlschema
added content description handling for badged items in BubbleTextView to improve user experience by providing clearer notification counts
added mouse wheel event handling in TestMouseWheelScroll . java to track and manage mouse wheel movement based on mouse wheel direction
added file closing logic for PDF documents in VisualTester and implemented a new test for positioning absolute in VisualRegressionTest to ensure proper
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
replaced usage of ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . LOCATION _ A ` and
simplified currency conversion by removing unnecessary checks for DSH , DSH , and QTM to streamline code by eliminating unnecessary
updated imports and refactored field printing logic in JsonFormat . java to improve clarity and functionality to enhance code readability and maintainability
updated JacksonXmlFormatMapper to handle array and enum types correctly to ensure correct serialization of byte arrays in XML format
refactor variable names and introduce new state constants in VirtualThread . java to improve code readability and maintainability by aligning thread state
refactor DirectoryTaxonomyWriter to use a single instance of BytesRef for category paths and improve cache management to enhance code readability and maintainability
refactor VetoableChangeSupport to improve code structure to enhance maintainability and readability of the code
adjusted the calculation for the y - coordinate in BrowserContentPane . java to correct the positioning of the content pane by subtracting the
pdfbox - 4892 : remove invalidpasswordexception from declaration , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
[ web ] inputbarhelppanel : make sure close button be visible after open menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced Thread . sleep with ThreadHelper . waitUntil in BackendInitializerHelper . java and TerminalClient . java , and added new Gcode
updated version checking logic in SwingStartup . java to include release status validation to ensure proper handling of release status during startup
dbmigration : add ` ` includegeneratedfilecomment ' ' property to allow comment of generated file .
updated usage strings to use " < player > " and " * > " instead of " < player > " and " * > " to
deleted two classes BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused thread filter implementations to streamline the
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in method naming
added a condition to check if the XmlSuite ' s PARALLEL _ CLASSES is equal to true to ensure proper handling of XML
updated logic for enabling acting master and improved null check for old address in RouteInfoManager . java to enhance code clarity and
refactor : remove static import of enums in ctmethodimpl . java ( # 1193 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across the codebase
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to use a constant separator for SHA - base64 encoding and added a test for its functionality to
updated parameter handling in ` Parameters . java ` to check for null values to improve robustness by avoiding potential NullPointerException when ` SYSTEM _ ACTION
added a new class named Person in the org . apache . maven . it0074 package to facilitate the organization and access of
remove unused argument from gossiper . start ( )
convert timeStr to uppercase before checking its index to ensure accurate comparison of time strings in the database
added assertions to verify time column , time unit , and total documents in SegmentMetadataImplTest . java and updated SegmentMetadataImpl . java to
updated color import from java . awt . Color to net . sf . openrocket . util . Color and changed the foreground color to dark
added a subscription to the disconnectEmitters object in NettyStreamingService . java to ensure proper handling of disconnect events in the streaming service
updated the method of retrieving annotation types from ` getAnnotationNamesByStereotype ( Scope . class ) ` to ` getAnnotationTypesByS
danielwagnerhall : add a test for double overflow when click on an element .
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - add support for
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the library class to streamline the code by eliminating unnecessary functionality
replaced variable ` enabledCiphers ` with ` result ` for cipher management in ` JSSESocketFactory . java ` to improve clarity
add timestamp to bigqueryutils and make it compatible with java 11
replaced manual null checks with requireNonNull method for buffer and userCredentials in Identifiers and DatabaseConnector classes to improve code readability and maintainability
rename input to inputmap in valuesresolver . coercevalueforinputobjecttype ( )
added additional boundary checks for row and column indices in FlightConfigurablePanel . java to ensure proper validation of the table row and column values
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the scroll functionality is properly displayed
[ java ] unnecessarylocalbeforereturn - fix false positive with unnecessary local before return
replaced the variable ` scriptEngineManager ` with a direct instantiation of ` ScriptEngine ` and removed null check for ` scriptEngine ` to
simplified calculation of distance in EuclideanDistanceSimilarity and updated test assertions in EuclideanDistanceSimilarityTest to improve accuracy of distance
do n ' t run backup operation on non - null sstables
updated the ` relativize ` method to accept two ` Path ` parameters and added null checks in ` MorePaths . java ` to improve
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve code clarity and ensure accurate representation of column size and decimal
updated file deletion logic to skip the current writer head file " 1 . log . tmp " to ensure that the writer head file does not end
change method name from toHexString to toJsonHex in TronJsonRpcImpl . java to improve clarity and consistency in hex string representation
rename ` ErrorHandlerController ` to ` Error403Controller ` and create new ` Error404Controller ` and ` Error404ControllerTest ` classes
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal . java ` and ` WindowsTerminal
[ netbeans - 4952 ] fix tiny . collection . toarray ( ) for java 11 +
refactor connection acquisition logic in ConnectionPool . java to improve readability and maintainability of the code
updated method and variable names from ` getDateConverter ` to ` getLdapDateConverter ` in ` PasswordPolicyConfiguration ` and ` PasswordPolicyResult
pdfbox - 4892 : avoid npe if source name do n ' t exist
updated error message formatting in JavassistUtils . java to improve clarity of error reporting for better debugging
updated exception handling in LargeStreamletTest to include new writerException and readerException fields to improve test reliability by ensuring that exceptions are
updated the logic for setting the current page in the ViewPager based on user preferences to ensure the correct number of pages is displayed based on user
added error handling for bitmap creation and image processing in AndroidImplementation . java to improve robustness by preventing potential exceptions during image processing
replaced calls to ` suppressNode ( ) ` with direct usage of ` @ SuppressSubnodes ` in ` BaseParser . java ` to
refactor FDFParser initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused test cases
added a shell command to simulate key event input in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to
added functionality to convert filenames to URLs and serialize it to JSON format in FileDumper . java to enhance the functionality of the FileDumper class by
reset resultnotified flag in profilerserver to avoid race condition
blender loader : load texture from image instead of texture
updated the ID format in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application : "
updated the version of the aNewIsbnRandomizer from " 9781797745008 " to " 978179784
updated notification sound setting to include a ringtone URI to enhance notification functionality by allowing customization of ringtone settings
added a method to report the loop count in the RootNode class to enable tracking of loop count in the call target
added log message for finalizing the cluster version in FinalizeUpgradeAction . java and updated clusterDAO merge call in ClusterImpl . java to improve
server : fix listvirtualmachines api to return regionid instead of rangeid
removed redundant call to streamManager . open ( stepExecution . getExecutionContext ( ) ) to streamManager . open ( stepExecution . getExecutionContext
added a new file ` CountedLoopProblem . java ` that generates a string representation of an absolute value based on a random integer to test
rename executecompiledmethod and executecompiledmethodvarargs to executecompiledmethod and executecompiledmethodvarargs instead of metaspacemethod
initialize pendingfailedspeculationoffset in graalhotspotvmconfig . java to avoid potential jvmcierror
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing functionality by utilizing a more descriptive
update feedbackconstantsumquestiondetails to include received point
removed call to DynamicColors . applyToActivitiesIfAvailable in BaseApplication . java to streamline color application logic for better performance
added thread dump functionality and improved error handling in CloseRace . java to enhance thread management and provide clearer error messages for better debugging
updated the return statement in IntPointField . java to return the integer value directly and added multiple assertions in TestPointFields . java to ensure
updated the ` arcSize ` variable to ` arcSizeFraction ` and adjusted its calculation in the ` MyButton ` class to improve clarity
tweak image border cutting wizard to use 640 instead of 768
rename ` setMinifySqlEnabled ` to ` shrinkWhitespacesInSql ` across multiple classes to improve clarity and consistency in SQL shrinking
refactor state transition handling in ` WorkProfileTest . java ` and ` AbstractLauncherUiTest . java ` to improve clarity and maintain
added configuration imports for CasCoreAuthenticationPrincipalConfiguration , CasCoreTicketIdGeneratorsConfiguration , CasCoreHttpConfiguration , and CasCoreTicketIdGenerator
replaced direct calls to ` raf . readLong ( ) ` with ` DataIO . readFully ( buf ) ` to improve performance by reducing
camel - 14850 : camel - http - optimize to reduce object allocation when use fluent template
refactor ClassPath creation in DeclarativeHintsParser to use a builder pattern to improve readability and maintainability of the code
add medium script scope provider for audio and voice .
added methods to retrieve and set the layer manager in AnimComposer and modified event handling in AnimEvent to improve layer management and ensure proper
added a check for an empty queue in DeferredHandler and removed the updateWallpaperOffset ( ) and showDefaultScreen ( ) methods from Workspace
added null checks and improved exception handling in MapRecordProcessor and TezProcessor classes to enhance robustness and error management during processing
replaced ` center ` and ` center2D ` with direct calls to ` center . toVector2D ( ) ` in ` Cy
replaced manual exception handling with JUnit ' s ExpectedException rules in TestBadUseCases . java to improve code readability and maintainability
added null check for subparams in QueryExecutorImpl and introduced a new test for multi - execution in StatementTest to ensure proper handling of parameters
do n ' t customize security environment if it be set to false .
added an additional parameter ` rctag = android% 20app% 20edit ` to the ` @ GET ` method in ` ReviewInterface
refactor Test class to improve code readability to enhance maintainability and facilitate future development
updated PBEKeySpec parameter from blkSize to keyLength to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document
added distance calculation and validation for large jump detection in GpsLoggingService . java to ensure accurate handling of large jump scenarios and improve accuracy checks
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 356 )
[ java ] fix memory leak in insightfilter .
simplified the addition of items to the data list by removing binary search to improve performance and readability of the code
refactor SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and remove the ThemedPreferenceActivity class to streamline theme
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertRootArcs ( ) method in FST . java to ensure proper assertion of root arcs
added an assertion to check if the security policy file exists and is a file to ensure that the security policy does not exist or is a file
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for more time for operations to complete before
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging process by eliminating unnecessary stack trace
added support for publish xmp image by http to the xmpp client .
( chore ) camel - netty : fix camel - netty - http : / / issues . apache . org / activemq
change regex pattern in BalancedClickhouseDataSource and add tests in BalancedClickhouseDataSourceTest to ensure proper parsing of URLs with invalid host
removed the system property " org . apache . jasper . compiler . disablejsr199 " from FragmentActivator . java to enable
added support for null string values in CSVRecordReader and CSVRecordReaderConfig to enable handling of null values in CSV format
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to ensure that the LiquibaseService
updated cursor handling in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to improve compatibility with Java source files
fix event . topics for item command and item state trigger handler
replace ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error handling
added deprecation for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java , and updated tests to
fix the mana tablet do n ' t show damage when it ' s in creative
added a copy of the identifier collection in the P25P2DecoderState class to ensure that the current call event ' s identifier collection is
removed unused imports of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline code by
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve cl
refactor the GeneratedCode class to improve code readability to enhance maintainability and facilitate future development
updated assertion to include the definition parameter in TypeDefinitionRegistry to provide clearer error messages when the definition cannot be null
added visibility control for the share - with - me icon in the LocalFileListAdapter to hide the share - with - me icon when the user
updated the link to Bootstrap CSS from HTTP to HTTPS in multiple files to ensure compatibility with the latest URLs for improved security
updated RouterFilter and RouterServerListFilter to enforce non - null headers and changed header loading method to use Collections . emptyMap instead of null to
enhanced assertion message in TestIndexWriterMergePolicy to include additional context to improve debugging and traceability of the assertion failure
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in future development
added a null check for the context in the CrawlerSessionManagerValve class and introduced a new test for multiple context awareness to ensure correct
added security checks to the getJspApplicationContext method to ensure proper instantiation of JspApplicationContext based on security settings
updated the calculation of ` length ` and ` axialMethod ` in ` RocketComponentConfig . java ` to use minimum and maximum values
replaced ` @ Singleton ` annotation with ` Scopes . SINGLETON ` binding in ` OpenIDAuthenticationProviderModule . java ` to improve dependency
added a call to ` thenCompose ` in the ` FileWrapper ` class to update child links to ensure that the parent updates correctly with the
refactor method signatures and parameters in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability by
increased the delay for publishing messages from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to allow more time for
add an ' isshiftalways ' system property to control whether the shift code be always override .
[ hotfix ] [ zookeeper ] improve leader election check in abstractheartbeatmonitor
updated conditional statement formatting in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer . java to check if the identity is a reference instead of its name to enhance security by
updated the ` newInstance ` method signatures to accept a boolean parameter ` noop ` instead of an ` AbstractCommandOptions ` to enhance flexibility in
added a sleep delay of 3000 milliseconds when handling IOException and InterruptedException in TestListenTCPRecord . java to ensure proper handling of IO exceptions and improve
refactor argument handling in PatchExtensionMethod . java to improve clarity and maintainability of the code
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and updated exception messages to improve performance and clarity
added support for ' apply - sequence ' and ' ignore - send - failures ' attributes in the DefaultRouterParser and AbstractChannelNameResolving
removed x509PublishUrl and x509ViewName fields from ClientKeyPublisherMapping , JwkViewResolver , and JwkKeyPublisherMapping classes
updated the logic for setting the ` readers ` variable in ` QueryComponent . java ` to ensure the correct assignment of ` subReader ` when
replaced ValueSourceParser with Double2Parser for " max " and " min " functions to improve precision in calculating the maximum and minimum values
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables from Highlighter , SpanGradientFormatter , and TokenSources classes to improve code clarity and reduce unnecessary dependencies
server : add uuid to the ' user ' table in the db
updated flowBuilderServices type to ObjectProvider and modified its usage in CompositeProviderSelectionMultifactorWebflowConfigurer to enhance flexibility in
refactor WriteJdbcPTest . java to improve connection management and naming conventions to enhance code readability and maintainability while ensuring proper database
removed conditional check for the " editor . laf " preference before setting the Look and Feel in DefaultPlatform . java to streamline the
updated references from ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` to ` stateEntity ` and ` desiredState
refactor margin calculations in FloatingTaskView . java to simplify RTL support to improve readability and maintainability of margin handling
added a condition to break if the folder is not running in RootFolder . java and updated the status line in NavigationShareTab . java to
[ gr - 3649 ] fix miss thread id in cpucallgraphbuilder . getthreadinfo .
ggb - 1889 fix problem with perspective in applet
updated HomekitImpl to implement NetworkAddressChangeListener and improved warning messages for better clarity to enhance error handling and provide more informative logging
updated lease handling in TestHDFSEventSinkOnMiniCluster to utilize NameNodeAdapter ' s leaseRenewalTime instead of
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and `
added null check for exception message in ExceptionHandlerRegistryFactory to avoid potential NullPointerException when handling exceptions with a null message
modified the ` nextID ` variable to be volatile and updated its usage in the ` getSize ` method to improve thread safety and clarify
resolve intermittent ci failure on ci server
added the HasSourcePath interface and implemented its methods in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePath
simplified the exception message construction in Arrays . java to improve code readability and maintainability
added a custom index field name to the FacetsConfig in OrdinalMappingAtomicReader and updated related test cases to enhance flexibility in
updated the ` toEpochMilli ` method to handle negative seconds and negative nanos correctly to ensure accurate conversion of seconds and nanoseconds in the `
replace direct usage of ` getBufferType ( ) ` with ` getBufferType ( ) . name ( ) ` in OGLESShaderRenderer
added functionality to manage block updates in the CopyPaste class to improve user experience by enabling or disabling certain scripts
8015369 : charbuffer . move ( int ) do not throw illegalargumentexception due to int overflow
updated methods in ChannelState , RecordConfiguration , AudioPacketWaveRecorder , and OverflowableTransferQueue to improve handling of audio packets to enhance
camel - 14850 : camel - sql - parser - add a scaletoken to the sspt parser . thanks to martin
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console creation and version command handling in Main . java and VersionCommand . java to improve code organization and encapsulation for better readability
refactor token validation logic by replacing storedToken with hash in InputStreamBinder . java and NextcloudRequest . java to improve token validation efficiency and
http : / / issues . apache . org / jira / browse / amq - 4892 - improve error handle for eofexception
added unit test for defaultgroupprovider . deletemember ( )
( chore ) camel - ftp : remove unnecessary use of new object [ ]
deleted the V2ReplicationProtocol . java file to the replication protocol implementation is no longer needed in the project
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple Java files to improve
added ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` files and renamed ` StupidFinal . java ` to `
make iterator thread - safe in directtemplatefeaturecollectionfactory
fix writeresponsehandler assertion to account for replication factor .
added null check for getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
rename ` showanchestors ` to ` showdescendants ` for clarity
added a check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing
updated change log parameter comparison from ` = = ` to ` . equals ( ) ` in ` ChangeLogParameters . java ` and added a
changed the ` loggers ` map from static to non - static in ` LogFactory . java ` to ensure that the ` loggers ` map is
update return statement to use getBasePlot ( false ) instead of a direct reference to the plot object to ensure that the method returns the base plot
updated the ` createUploadDir ` method to include an ` initialCreation ` parameter to control the logging behavior when the upload directory is not available
updated ServerGenerator , HttpTransportOverFCGI , ServerFCGIConnection , HttpTransportOverFCGI , and ServerFCGIProxyServlet to
added a check to ensure the comment length is greater than zero before proceeding to prevent potential errors when processing multi - line comments
added functionality to manage file associations for BuckFileType and UnknownFileType in the BuckModule class to ensure proper handling of file types and associations
simplified import statements and changed method return types from ToLong to ToInt in ComposedUtil . java to improve code readability and
updated error messages and introduced a new error constant for unsupported OS options in RTM command line tests to improve clarity and error handling for unsupported
reformatted code for consistency and readability in AccountsActivityTest . java to improve code maintainability and readability
refactor Player class to improve code readability to enhance maintainability and facilitate future development
added mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to ensure proper class loading for ChannelTypeUID
fix wrong index check in isguesttomockreflectivecall ( )
set ` systemContext ` to ` null ` in ` AndroidTestEnvironment ` and implement a reflection mechanism in ` ShadowFontsContract ` to
added Joda - Time library imports and modified methods in TimeGranularity , PinotDataSourceDimensionFilters , and PinotDataSourceMaxTime to
updated control flow handling in ControlFlow . java and improved null checks in Guard . java to enhance robustness and maintainability of the code
updated assertions in Assert . java to handle array size differences and improved error messages in ArrayEqualityAssertTest . java to enhance clarity of
fix checkstyle issue in util / windowclicklogic . java
corrected the bitwise operation for index calculation in MeshBuilder . java to ensure proper handling of unsigned indices correctly
nifi - 1640 : remove unused controllerserviceprovider from standardprocessscheduler
added support for processing Java plugin properties in KotlincToJarStepFactory and introduced a test for KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION and refactored page snapping
added shortcut permission checks and refreshing functionality in Launcher and DeepShortcutManager classes to ensure shortcuts are refreshed only when the correct permission is present
added case HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle history search functionality in the user interface
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robustness of core name validation
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet is hidden when a marker is selected
added error handling for Throwable in FileSyncAdapter . java to improve robustness by capturing stack trace when exceptions occur
refactored memory check logic in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve robustness by catching
updated FeedQueues . java to include a filter for heavy loading and modified feed retrieval logic to improve feed processing efficiency based on application settings and
log warn if defaultdrmsessionmanager be use on wrong thread
updated ` toUpperCase ( ) ` to use ` Locale . US ` in ` AndroidBinaryDescription ` and added ` setPackageType ( ) `
changed the MIME type of XML _ MIME from " text / xml " to " application / xml " across multiple test files to ensure compatibility with
update variable references from ` configFile ` to ` INSTANCE . confFile ` in ` Args . java ` to ensure consistency in naming conventions for
removed " sleep 5 ; exit 1 " from waitUntilReadyAndTimeout in HostPortWaitStrategyTest . java to simplify the wait behavior for
updated import statements to use LongMath instead of IntMath and modified data types for grouping calculations to improve handling of larger numbers within the aggregate
added multiple checks for headless environments in mmm Toolkit . java and ppp Toolkit . java to ensure compatibility with headless environments
added a condition to check if the current recipe matches the furnace ' s world before attempting to smelt it to ensure that only valid
provide a way to set the number of move thread in the solver log message .
fix issue with rev - include do n ' t select wrong resource with the same sp name
added a new test class ` Issue582Test ` to verify sorting and sorting functionality of a tree map in a MapDB database to ensure
[ native ] add e2e test for overflow and division by zero
refactor LoadingCache class for improved performance to enhance efficiency of caching operations
added a rule to avoid non - constructor methods with class name in NamingRulesTest . java to ensure proper handling of non - constructor methods in
danielwagnerhall : add expectedconditions . elementtobeelected ( ) and . elementtobeelected (
added a new method ` hasView ` to ` DatabaseSnapshotGenerator ` and modified exception handling in ` ViewExistsPrecondition ` to improve view
updated methods in DOMUtil . java for improved functionality to enhance performance and maintainability of the code
added translation calculations and logging functionality to TaskViewUtils and Utilities classes to enhance visual feedback during task view animations
updated the FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in both FeatureFlags . java and Rotation
added a ` walk ` method to ` TempFSTTermsReader ` and modified the handling of ` docFreq ` in ` TempTermOutputs
added SolrQueryRequest parameter to create methods across multiple factory classes to enhance request handling for Solr queries
added new triggers for handling null values for Post and Announcement in SingleTableMySQLTriggerTest . java to ensure proper handling of null values
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code readability and maintainability by encapsulating comparator
update query strings in PhoenixQueryBuilderTest . java to use double quotes for consistency to improve readability and maintainability of the test
added Spark import and invoked ` awaitInitialization ( ) ` in the ` init ( ) ` method of ` RequesterTest ` to ensure initialization
added methods to retrieve and save total storage pool and fee in DynamicPropertiesStore . java to improve storage management and error handling for invalid parameters
added NinjaProperties support to AssetsController and updated resource loading logic to improve compatibility with dev mode and enhance resource loading functionality
update MapMarksManager to use a helper method for accessing map mark keys to improve code readability and maintainability by using a consistent method for
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token handling for default value generation
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` Main ` , and ` JavacProcessingEnvironment ` to simplify
refactor code to use a local variable for the file path in JxBrowserManager . java to improve code readability and maintainability by
updated format comparison from ' = = ' to ' . equals ( ) ' and added a check for " AppVersion " in IOSImplementation
[ somfytahoma ] use thing . getuid ( ) instead of thing . getridrid ( ) . getid (
disable flaky test on github
replaced custom SSL context initialization with static properties for keystore and trust store configurations to improve flexibility and maintainability of the SSL configuration
[ java ] warn about miss value of nan in dynatraceexporterv2
removed a session by its ID from the sessionIdToSessionInfo collection to ensure the session ID is properly removed from the session information
added hostname assignment for alerts in HeartBeatHandler . java and improved log formatting in AlertReceivedListener . java to ensure proper hostname
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . kmodule
added unit tests for seekTo method in ShadowMediaPlayerTest . java and implemented the seekTo method in ShadowMediaPlayer . java to ensure
rename methods from ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and consistency in naming conventions
added border settings for AQUA _ LAF and tabCloseButton in CloseButtonTabbedPane . java to ensure proper border behavior for
updated TSPTimeStampService to set the HTTP request method and connection timeouts , modified imports in TestSignatureInfo . java , and refactored
( chore ) camel - xstream : allow xstream to be configure with a custom classloader
added error logging for diamond application in Attr . java and introduced a new DiamondRaw class in Neg12 . java to
[ hotfix ] [ table - planner ] fix checkstyle violation in reloptutil
updated validation conditions for ID and value in Http2Settings . java to ensure values are within valid range for ID and 32 - bit values
removed the file ` Issue664Test . java ` from ` MapInterfaceTest . java ` and deleted the file ` Issue664Test
added exception handling for disposed sessions in SessionsPoolTest . java to ensure that disposed sessions are not allowed to operate on a dis
added root object handling in GeoJsonWMSBuilder to ensure proper serialization of FeatureCollection objects
replaced the method ` setIndex ` with a method that sets the selected index using ` intValue ( ) ` to improve code clarity and ensure
added a method to check if the application can currently unstash and updated the logic accordingly to improve control over unstashing behavior based on user
camel - 14850 : camel - test - infra - route - coverage should only dump route with custom id
modified the ` getEventMismatchMessage ` method to accept a boolean parameter indicating whether to wait for expected events to ensure accurate event mismatch detection based on
added a new file ` HeaderFixer . java ` that implements header file processing to facilitate the processing of headers in Java files
added functionality to send and manage the first loading state in the launcher to improve user experience by providing a mechanism to notify when the first loading has
deleted the SuperJumperAndroid . java file to remove unnecessary code that is no longer needed in the project
updated the return statement in SystemTableScan . java to check if the table is distributed and modified the query structure in TestStarQueries . java
removed the KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation interface to streamline the codebase by eliminating unused interfaces
fix a bug in the loader . processidrematches ( ) method that would cause the wrong mapping to be remove .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use base ( long ) instead of base + i to ensure
added caching mechanism for data format string retrieval in HSSFCellStyle . java to improve performance by reducing unnecessary method calls
updated the query parameter in the RemoteAuthenticationEndpointTests to filter users by username to ensure that only usernames are processed in the request
changed the condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in the DeflateCompressor class
updated logging mechanism in StatsLogManager to include container information and workspace to improve logging clarity by providing more context about the launcher ' s container
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
delete deadlocktest . java ( remove deadlocktest )
bugcontentprovider : do n ' t try to refresh the viewer if a marker do n ' t exist
added a menu item to open the JavaScript editor in the browser and implemented a timeout mechanism to ensure the server is open in the browser before proceed
added a new error message for multiple times when output is specified and improved formatting for code readability to enhance error handling and provide clearer
added tests for the ` addEntryListener ` method in ` BasicTest . java ` to ensure that ` addEntryListener ` throws an `
fix coordinatearrays . reverse ( ) to handle empty or single input
removed unnecessary whitespace in the setOpen method call to improve code readability and maintain consistency in formatting
added a new boolean variable ` first ` and initialized it to false in ` TestPayloads . java ` to ensure proper initialization of the first
replaced ` mWorkspace . enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java `
added a line to set the destination of a message dispatch in NetworkRouteTest . java to ensure the message is dispatched to the correct destination
http : / / issues . apache . org / activemq / browse / amq - 2290 - fix max _ value for
fix checkstyle issue in util / nestedarithmetictest . java
refactor buffer management in HttpClientRequestImpl and improve buffer handling in HttpTest to enhance code clarity and ensure proper buffer management during HTTP requests
updated artifact name replacement logic in GetMavenDependenciesTask . java to improve clarity and correctness in artifact naming
pdfbox - 2576 : use getcosdictionary ( ) instead of getcosbase ( ) , a suggest by valerybokov
removed unnecessary print statements and corrected formatting in ReferenceUtil . java to improve code readability and maintain consistency in output formatting
refactor field visibility predicate so that it can be use in nested predicate .
added ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` parameters to manage HTTP JSON - RPC port configuration
added a type check before removing the drop target from the drag controller to ensure that the drop target is only removed when the folder is an instance
refactor stub jar generation logic to use a separate method for clarity and maintainability to improve code readability and streamline the creation of
added new features for Setup wizard , Probe Module , and Workflow helper in StartPageTopComponent . java to enhance user experience by providing guidance
fix race condition in cassandra daemon . patch by jbellis
simplified the null check for the available variable in OnlineTestCase . java to improve code readability and maintainability
changed return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to align with the new user retrieval criteria
refactor ` onIdleTimeout ` handling in ` HttpChannelState . java ` and add failure listener in ` HttpChannelTest . java `
updated CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to improve flexibility in handling asynchronous operations
updated table header regex pattern and added new test cases for one - column head and body in TablesTest . java to improve table header parsing accuracy
change return value from 32.0 f to 31.5 f to improve camera rendering accuracy
added a preference for starting on - boot settings in GpsSettingsActivity and modified return values in Utilities . java and GeneralLocationListener . java
increased the client secret size from 128 to 512 bytes in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a
updated error messages in MySQLStoredProcedureTest . java and PostgreSQLStoredProcedureTest . java to specify that enablePassingNulls is enabled to ensure
ignore scheduledmethodmetricstest due to race condition
added exception handling and improved file URI handling in SegmentGenerationAndPushTaskExecutor . java to ensure proper initialization and registration of PinotFS
added locale handling for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting based on the application ' s locale
added MetalLookAndFeel import and set it as the current look and feel in the UIManager to enhance the application ' s
refactor ` pingAtRegularIntervals ` and ` pingAtRegularIntervals ` methods to use a synchronized context for thread safety to improve thread safety
replaced ` throwable . getMessage ( ) ` with ` throwable ` in ` GlobalErrorHandler . java ` to simplify error handling by using the original
renamed method parameters from ' module ' to ' from ' in ModuleTable and PackageTable classes to improve clarity and consistency in naming con
updated exception handling to catch CmdLineException and added error logging to improve error handling and provide better debugging information
replaced ` super . equals ( ) ` with ` isEqualTo ( ) ` and marked the ` hashCode ( ) ` method as deprecated to
refactor variable declarations from ` Boolean ` to ` boolean ` for clarity and consistency in ` CustomPlaybackOverlayFragment . java ` and `
updated zoom level minimum and maximum values for map zoom controls in BasicMapViewer . java to optimize zoom control settings for improved user experience
refactor DrillRoot to use ImpersonationUtil for user and group retrieval to enhance user management functionality by integrating process user and group
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider . java ` and
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated service resolution logic to enhance service resolution flexibility and improve dependency management
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
refactored tile size changer to use new method for cache management
removed redundant calls to ` InfoLayoutHelper . addInfoRow ` and ` InfoLayoutHelper . removeAllViews ( ) ` to streamline
refactor the cleanEntriesForFeedsWithoutSubscriptions method to use a new cleanEntriesForFeedsWithoutSubscriptions method to improve code readability
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1746 : use temporaryfolder in filebasedclusternodefirewalltest to clean up file - based test
bugfix for conic through 5 point : do n ' t try to solve the conic through 5 point in ca
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor CImage methods to use imageToArray and add createFromImages method for better image handling to improve code readability and enhance image processing capabilities
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to optimize memory usage by using a more efficient binary
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple classes to clarify the purpose of
replaced manual null checks with ` java . util . Objects ` for equality comparisons across multiple classes to improve code readability and maintainability by
rename ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and introduce ` @ Nullable ` annotation in several classes to
added tests to verify the default Ninja properties in the NinjaDefaultTest class to ensure proper handling of missing and internal server errors in the
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and
updated padding and fixed list view position offsets in DetailFragment . java and ListFragment . java to improve layout responsiveness and correct list view
updated exception handling in ZkStateReader . java to use the current thread ' s interrupted status to ensure proper handling of InterruptedException and improve error
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
fix npe in listvirtualmachines api when static nat be not support in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove an extra empty screen from the workspace to improve user experience by ensuring the workspace is properly removed
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to improve font rendering flexibility based on whether the last glyph
simplified the ` createFragment ` method by removing the ` showTitle ` parameter and refactored related code in ` ChangeLogFragment
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state machine functionality for improved
refactor ConfigDescriptionProvider to improve configuration handling to enhance performance and maintainability of configuration management
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to support Windows - specific configurations and
refactor facet sorting logic to use a boolean variable for clarity to improve code readability and maintainability
updated checkstyle cache file path to use the current model ' s directory instead of a hardcoded target to improve flexibility in managing checkstyle
added logic to stop Jetty instances and improve error handling in DeleteInactiveReplicaTest . java to enhance test reliability by ensuring that Jetty
updated the ` newInstance ` method in ` FileActionsDialogFragment ` to accept a file name parameter and modified its implementation to display the file name
updated the handling of reorder direction in CellLayout . java to utilize a constant for invalid direction values to improve code readability and maintainability
updated package names and API path annotations in InnerTransferRequest and AccountAPI classes to improve clarity and ensure compatibility with the latest API structure
fix assertjobrunningeventually in jettestutil . testfailjobwithnontransientexception
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
simplified import statements and added visitIdentifier methods in FindTypes . java to enhance code readability and maintainability by using wildcard imports and
added a method to set the action text color to the primary dark color to enhance the visual appearance of the authenticator activity
added methods for finding entities by type and field in Manager , StreamSupplierComponent , AbstractManager , MockManager , MockManagerImpl , and Mock
refactor methods to replace " addTestStepsFor " prefix with " createTestStepsFor " for clarity to enhance code readability and better convey the purpose of the methods
renamed the test method from ` invalidMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests ` to
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to handle client cancellation
added ` getImplicitPreCoercionValue ( ) ` method to multiple classes and updated serialization logic in ` DefaultConstructorArgMarshaller ` to
initialize lastDisplayedUser with Optional . empty ( ) to prevent potential NullPointerException when lastDisplayedUser is null
added an implementation of the ` findAll ` method in ` QueryDslMongoRepository ` and a new test for ordered results in ` AbstractPerson
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException when stopping the consensus
planner - 1369 : do n ' t exit warm - up loop when a failure occur .
add xread ( ) and xreadgroup ( ) method to multi - key pipeline
updated method calls in LinkedBufferInput and StreamInput classes to improve clarity and functionality to enhance code readability and maintain consistency in method naming
added support for customizing web security in CasWebAppSecurityConfiguration and refactored related methods in CasWebSecurityConfigurerAdapter to enhance
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to verify the behavior of ` DBTokenStore ` in a
added a method to register content providers in ShadowContentResolver and refactored ContentProviderController to utilize this method to improve content provider registration
updated the type of the ` version ` parameter from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure
added keep - alive configuration to SingleConnectionManager to improve connection management by allowing keep - alive settings
[ java ] allow unicast sender flow control supplier to be use in the medium driver .
added null check for ` p2d . getCurrentPoint ( ) ` in ` GBasicStrokeD . java ` and ` DrawLocus
replaced the initialization of StringBuilder and added error handling for IO exceptions in multiple classes to improve error reporting and ensure proper resource management during WebSocket connections
replaced direct instantiation of FirefoxDriver with a switch statement to dynamically select the Selenium driver based on configuration to improve flexibility in selecting the
replaced JUnit assertions with AssertJ assertions in multiple test files to enhance readability and maintainability of the test code
remove trufflelanguage . getcontextreference ( ) and deprecate it .
updated exception handling in StubberImpl and added tests for StubbingWithBadThrowablesTest and UninstantiableThrowableTest to improve error
updated error handling in Actor and Group classes to improve clarity in error messages to enhance error reporting and provide clearer error messages for better debugging
added location permission handling in ` LocationPickerActivity ` and modified the ` getCenter ` method to use it to improve user experience by allowing users to
http : / / issues . apache . org / jira / browse / amq - 3877 - add a simple example to show how
added import for CookieSpecs and set cookie specification to STANDARD in GetHTTP . java to enable standard cookie handling for HTTP requests
replaced a conditional check with a method call to ` overlaps ` in the ` Intersector ` class to simplify the code and improve read
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed logging in AirspyT
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enable browsing to a specific monitoring resource via the web interface
[ hotfix ] [ k8s ] remove unused config option kubernetes . service . create - timeout
added handling for different place descriptions in NearbyListFragment to set appropriate icon resources based on their descriptions
added a null check for the package before accessing its name in DefaultPackageScanClassResolver . java to avoid potential NullPointerException when the package is null
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to demonstrate the
fix ( javadoc ) : fix nested brace detection in javadoc tag ( # 1193 )
[ java ] remove unused field from archive test .
updated method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code clarity and reduce unnecessary dependencies
updated logging format from ` % d ` to ` % f ` and added debug logging for setting playback speed to improve logging clarity and enhance
fire roomremovedevent when cluster be start
updated the property name from ' minimize ' : ' replicas ' to ' minimize ' : ' cores ' in AutoScalingHandlerTest . java to align
added key properties to TextureHelper for fliping and generating Mips to enhance texture rendering capabilities for improved visual representation
replaced ` PythonDslProjectBuildFileParser ` with ` EventReportingProjectBuildFileParser ` and introduced ` CloseRecordingProjectBuildFile
[ j2kt ] add a normalizationpass that can be use to normalize a library .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ runtime ] add @ visiblefortesting annotation to memorysegment
added @ Temporal annotation to ConsoleSessionVO class to enable timestamp - based logging for console sessions
added Hbs . java and HbsTest . java files to implement Handlebars for templates and tests to enable the use of Handlebars for
refactor chat message handling to improve readability and maintainability of the code
change iteration from keySet ( ) to values ( ) for measurement in ImportCsv . java to ensure consistent iteration over measurement keys
try to fix flaky test : waituntilalertdialogappears ( )
added a condition to return null if the number of distinct column indices is greater than or equal to 2 to optimize performance by avoiding unnecessary processing
refactor path handling in MiscUtils . java for improved clarity and functionality to enhance readability and maintainability of the code by
chore ( deps ) : update java microgenerator to 1.0 . 1 ( # 438 )
updated Jetty websocket dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and "
changed return type of identity attributes from a non - unmodifiable map to an unmodifiable map to ensure immutability of the attributes collection
bug fix for ` ` setmodified ( ) ' ' and ` ` setmodified ( ) ' ' do n ' t update editor header
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return statements in multiple classes to simplify
replaced ` getDate ( ) ` with ` getTimestamp ( ) ` in ` JdbcDataSource . java ` to retrieve the timestamp instead of the date
added a condition to check if the class name is " javax . naming . Context " in HtmlJndiTreeReport . java to ensure proper
refactor database options handling in StorageUtils . java and improve logging in Manager . java to enhance code clarity and provide more detailed logging information
changed the condition from checking for " double " to checking for " mutual " in ImporterGEXF . java to ensure proper handling
removed the FLAG _ SLIPPERY constant and replaced it with a new import for LayoutParams . FLAG _ SLIPPERY to
fix truffleconstantfieldprovider . getarraydimension ( ) to handle array .
added methods to get and set the Google Drive folder path in PreferenceHelper and updated related classes to utilize this new preference to allow users
shuffle suggestion on enter , esc , up , and 40
added @ Nullable annotation to several assertThat methods in Truth . java to indicate that the target parameter may be null to enhance type safety and
updated bitwise operations in ArrayUtil . java for improved clarity and functionality to enhance readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified the ` ClassInstrumentor ` to check if constructors can be instrumented to ensure proper
fix race condition when wait for an anticompaction during stream initiation
added a new boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` , and updated tests
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility
updated string splitting logic and added a conditional check for the number of override parts in GrblUtils . java to ensure proper handling of multiple
corrected a typo in the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmptyThrowsMultiple
added a new test method ` testDrainNotCalledAfterClose ` to ` FileSystemTest ` and modified the ` checkDrained ( )
reduced the number of lights from 4 to 8 and increased the light intensity from 10 to 3 in HybridLightTest . java to improve
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test files to streamline filesystem initialization
updated the type of the ` loadRerunFile ` method and its parameters from ` String ` to ` PathWithLines ` to improve type
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array declaration to streamline the code for better readability and maintainability
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` to ensure proper
refactor prefix index management in ` BasisLibrary ` to use a thread - local atomic integer instead of a static integer to improve thread safety
added logging configuration for HTTP connection in TestDistributedStatsComponentCardinality . java to improve debugging capabilities for HTTP connections
added ` throwIfImmutable ( ) ` calls in ` IntList . java ` to ensure immutability of elements in the list
added @ NotNull annotation to the event parameter in GrpcServerRunner . java and modified ManagedChannelBuilder instantiation in GrpcClientBuilder . java
moved the workDir method to the Graal demo package and updated its usage to use a Supplier for better flexibility to improve code read
invalidate insight function array if they do n ' t change .
added platform - specific handling for Windows file writing in GenerateManifestStep . java to ensure proper handling of line endings for XML files on Windows
bump confidence of rcn _ redundant _ nullcheck _ of _ nonnull _ value to fix rfe
added @ Nullable annotation to ` getConfigDescription ` methods in ` ConfigDescriptionRegistry ` and improved null checks in ` ThingResource ` to enhance
masterjobcontext . createcancellationexception ( ) should return runtimeexception instead of throwable
added initialization logic for a crop box in PageDrawer . java to ensure the stream is properly initialized when a specific condition is met
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to enable accessing All Apps from the system Task
refactor FragmentActivity initialization to use Robolectric for better activity management to improve code readability and maintainability by utilizing Robole
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve clarity
rename ABCase classes from ` ABCase1 ` , ` ABCase2 ` , ` ABCase3 ` , ` ABCase7 `
renamed the parameter from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for the
refactor event handler initialization in OpenRocketViewer . java to ensure sims changes occur before updating the current rocket
add a new class ChangeDependencyGroupIdAndArtifactId to implement a recipe for changing Maven dependency coordinates to enhance the flexibility and functionality of Maven
refactor file system and path initialization in IndexingJob . java and add validation in SegmentChecker . java to ensure segments are not indexed and
updated conditional check from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve code readability and reduce boilerplate in the
rename JsonExamples class to Examples and update package - info . java to improve clarity and consistency in naming conventions
added debug logging statements to the ViewExtractor class for better traceability of the extraction process
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future development
added a new Main class in the com . facebook . buck . oop _ javac package to demonstrate the usage of
synchronize access to sip provider to prevent race condition .
removed redundant continue statements from NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and updated relevant
refactor dependency resolution to use ` Supplier < ImmutableList < BuildRule > > ` instead of ` ImmutableSet . Builder < BuildRule > ` to
replaced ` remoteContainsResults . stream ( ) . count ( ) ` with ` remoteContainsResults . size ( ) ` to improve code
added charset extraction from content type in ExtractingDocumentLoader to ensure proper handling of character encoding in document metadata
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
added a check to return early if the slot is - 1 in WindowListener . java to prevent processing when an invalid slot is present
add -- ignore - transitive - repositories option to maven - execution - request
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility with newer Android versions
added null check before closing the selection object to prevent potential NullPointerException when selection is null
added a condition to break the loop if the matcher ' s start and end are the same and the current index equals the string length to ensure
added server . port = 0 to the @ IntegrationTest annotation in MvcITest . java to ensure the integration test uses a valid server port
added a new ` UDFReverse ` class and registered it in the ` FunctionRegistry ` to implement a reverse operation for string manipulation in Hive
updated context path retrieval methods in multiple classes to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity
rename Tracer . java files to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] disable flaky test for rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization and buffer clearing functionality in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during buffer operations during splits
updated forecast parameters in OpenWeatherMapOneCallHandler . java from 0 , 12 , 12 , and 8 to 60 , 60 , 48
updated test annotations and renamed variables and methods in AbstractPageOperationTemplateTest . java for clarity to improve test reliability and enhance readability
added animation and button handling for " All Apps " feature in FloatingHeaderView and RemoteTargetGluer classes to enhance user experience by
updated the ` splitAndMap ` method to ` splitAndThenFlatMap ` and modified the return type of ` parseRerunFile `
add livingwood and livingrock brick crafted item to creative tab .
updated assertions in TestRadioButtons . java to use the expected size of optItem and retrievedOptions to ensure that the expected number of options is
added support for a file size option in RCFileCat and implemented a method to retrieve the number of rows to enhance functionality by allowing users to
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
[ mxnet ] add check ndarray error message to jnautils
refactor BlobServer . java to improve code structure to enhance maintainability and readability of the code
fixed bug 1244523 - unusedprivatemethod no long report false positive for static method call from initializer .
rename lexicalScope variable to lexScope for consistency to improve code readability and maintainability
added unit test for auto - startup of sftp adapter
added getter and setter methods for level , root , and itemBoundables in Node , Quadtree , AbstractNode , and AbstractSTRtree classes
updated version parsing logic to handle minor version numbers more accurately to ensure compatibility with the latest version format
fix npe in itemregistryimpl when there be no tag for an item .
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new method ` fromDateTime ` in ` DateTime
refactor disassemble methods in CustomType and StringWrapperUserType to improve cache handling and add new test cases in ContributedUserTypeTest
updated Log4j2ConfiguratorServlet . java file to improve logging configuration handling
replaced instantiation of HiveException and AuthorizationException with direct return statements to simplify exception handling by directly returning new objects
updated CC assignment in CGoCompileStep . java and added a new test for CgoLibraryWithCxxPrebuiltDepBuiltWithWrapped
fix : add miss buildable annotation to sundr . builder
added an @ Override annotation in the Only class to ensure proper method overriding behavior for better code clarity
added a timeout of three hours in HttpConnectionParams to improve connection stability by allowing more time for HTTP connections
added new pipeline names to PerBuildStateFactoryWithConfigurableAttributes and updated usage in RawTargetNodeToTargetNodeParsePipeline to improve clarity
simonstewart : add an enable / disableall constraint to enable / disable all but trace
removed the @ Singleton annotation from ApplicationController . java to streamline the application lifecycle management by eliminating unnecessary singletons
updated username retrieval logic in ShareActivity to use OwnCloudAccount for better handling of account display names to improve robustness by ensuring the username
added batch status handling in JobLauncher and corresponding test in SimpleJobLauncherTests to ensure job execution is resumed when the job is paused
added null check for cacheConfig in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java to enhance
danielwagnerhall : do n ' t attempt to create a docker session if it do n ' t exist .
update compilationunitcontext to use the default package name
pdfbox - 2576 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
mondrian : fix compilation error in test distributedlanczosSolvercli
updated HttpServerTestBase . java for improved test coverage to enhance reliability of HTTP server functionality
refactor assertions in PortletApplicationMapTest to use keySet ( ) and contains ( ) instead of entrySet ( ) for better readability to improve
added unit tests for ` @ DynamoDbIgnoreNulls ` and implemented inner bean lists in ` NestedBeanIgnoreNulls ` to ensure correct handling
support customization of redissonautoconfiguration # redissonautoconfiguration # redissonautoconfiguration # redissonaut
fix the ` todouble ` method in the ` indicator ` class to correctly calculate the number of bar bar in the indicator
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` in ` ContainerState ` and ` ExecInContainer
update interestedInByteMessages and interestedInTextMessages assignments in NettyWebSocket . java to streamline listener detection logic for better readability and
add some more test for semgrex
added a broadcast intent to clear the pull pull notification in HomeFragment . java to enhance user experience by providing a clear - pull - unread
removed conditional logic for initializing scroller and overScroller in TouchImageView . java to streamline the code for better readability and maintain
add a flush method to the defaultprofilevalidationsupport bean , and use it in the rest of the test .
camel - 16405 : camel - core - optimize to reduce call to atomicinteger . get ( )
added FloatingActionButton functionality to manage a FAB menu in ShareActivity to enhance user experience by providing access to the main FAB menu
added support for inline date parsing in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated Swedish error messages for clarity and consistency to improve user experience by using more descriptive terminology
added checks to ensure the server is checked before binding the operations service connection to improve user experience by preventing unnecessary binding to the operations service
updated method calls in Position class to use getBeginLine ( ) and getEndColumn ( ) instead of getBeginColumn ( ) and getEndColumn ( )
added a waitFor ( ) method to ManagedThread and invoked it in CxxPreprocessAndCompileStep . java to ensure proper process termination and
added a ` requireAllRepositorySources ` property to ` PrincipalAttributesProperties ` and implemented the merging logic in ` CoreAuthenticationUtils ` to ensure
remove call to checkifloaded ( ) from defaultrecordstore . checkifloaded ( ) and update maxsizechecker . getapproximatemax
added support for enabled SSL protocols in NettyWebServer , ServerBasicConfig , ServerConfiguration , SocketConfiguration , and IdentityCipherSuiteFilter to
replaced ` AtomicBoolean ` and ` AtomicBoolean ` with ` AtomicReference ` and introduced a new ` trySet ` method to improve thread
updated key retrieval logic in QueryDslMongoRepository and added a new test for empty keys in SpringDataMongodbSerializerUnitTests to ensure
updated assertions and error messages in RoundRectBorderTest . java to improve clarity and accuracy of border equality checks
added checks for empty genesis configurations and updated Bft acceptance test parameters to enhance robustness by preventing attempts to verify an empty cluster
remove test that do n ' t work in parallel
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' length
changed condition from ' if ( windows ) ' to ' if ( ! windows ) ' in ProcessInformationsPanel . java to ensure proper handling
refactor methods in MoreCollectors to improve clarity and consistency in naming conventions to enhance code readability and maintainability by standardizing
added null checks in ` BitmexStreamingExchange ` and updated WebSocket client handling in ` BitmexStreamingService ` to improve robustness
added validation for latitude and longitude in GeoPointField . java and corresponding test case in TestGeoPointField . java to ensure GeoPointField
ambari - 19336 . user should be prompt to enter valid workflow xml file name while submit / validate ( madhan mohan reddy via pallavkul )
refactor ResponderId class to improve code structure to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to allow conditional addition of dependent tables to the document based on
added functionality to handle consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback when coordinates are not available
added caching for profile data and implemented a new endpoint for viewing profile data in the ProfileResources class to improve performance and facilitate
refactor JpaMetamodelEntityInformation to improve identifier derivation handling and property value extraction to enhance compatibility with nested entities and enhance property retrieval
added methods for bootstrapping last DDL timestamps for tables and views and indexes in UpgradeIT , ConnectionQueryServicesImpl , and UpgradeUtil to enhance
use jersey . jersey . exceptions . defaultexceptionmappers when default exception mappers be not specify
added a boolean parameter to the method call in EntryEditor . java to enable control over the behavior of the method
added an ` ownerPtr ` parameter to the ` nativeCreateNSWindow ` method and updated its usage accordingly to improve window pointer management by allowing
rename the database table from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity by using a more descriptive table name
added a new STOCK feature to the Tile class and modified the event firing logic to include it to enhance the visual appearance of the
fixed - rbuckets . set ( ) and rbuckets . read ( ) method throw illegalargumentexception
add detector under test for findunrelatedtypesingenericcontainer
refactor ` LauncherBackAnimationController ` to utilize ` BackProgressAnimator ` for improved back event handling to enhance animation efficiency and
changed the visibility of ` _ initialPageNo ` from final to non - final and added logic to update ` _ contentLimits ` based on
fix the calculation of crc16 in jedisclusterCRC16 . java and increase total ops in crc16Benchmark . java to improve performance
added a comment pattern to parse SQL change sets in FormattedSqlChangeLogParser . java and created a corresponding test in FormattedSqlChange
removed initialization of JarArchiver in MavenArchiver . java and added it in AbstractJarMojo . java to streamline the archiver
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more informative
simplified conditional checks in TSServiceImpl . java and added multiAggregationTest method in DaemonTest . java to improve code readability and
added validation for pixel format and type in GwtGL20 . java to ensure compatibility with GWT backend and improve error handling
updated method invocation in multiple classes to use ` env . invokeMethod ` instead of ` classEntity . methodMagicDebugInfo . invokeDynamic ` to
updated exception handling in InlineBytecodeGenerator to use Throwable instead of UnmodifiableClassException to provide clearer error messages when Byte Buddy cannot
[ gr - 16936 ] provide trace of class initialization trace .
fix ( broker ) : fix typo in basebrokerrequesthandler
updated cache loading mechanism in TopicRouteService to use Caffeine instead of Google ’ s CacheBuilder to improve performance and
modified the ` createDataSource ` method to accept a ` boolean ` parameter for read - only mode to enable flexibility in data source creation based
updated the regex pattern for validating source and target release in FindBuildToolFailures . java and added a fatal error message in FailureLogAnalyzerTest
updated URI construction in DetailFragment . java and added location intent check in DetailFragment . java to ensure proper handling of Google Maps and improve location
added a null check for ` getInheritedParameterContexts ( ) ` before retrieving its ID to avoid potential NullPointerException when ` getInheritedParameter
modified ClassLoader . java to enhance class loading mechanisms to improve performance and maintainability of the codebase
added origin response headers to ProxyRequestHelper and corresponding unit test to ensure correct handling of origin response headers in the proxy request processing
added a new profile setting drawer item in GpsMainActivity to enhance user experience by displaying profile settings
added a new constant for XML validation in multiple classes to allow configuration of XML validation based on servlet context
simonstewart : fix a bug in the firefox driver that do n ' t work with the firefox driver
added maxRows functionality and modified fetch size logic in IoTDBStatement to enforce a limit on the number of rows fetched and provide better error handling
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` and update logic for filtering actions to improve clarity
added event handling for node and mouse left - click events in StandardVizEventManager to enhance visualization responsiveness based on selection settings
replaced direct memory setting with a separate zeroBuffer method to improve code readability and reduce redundancy in memory management
make xorgroup accessible from terminalnodememory to avoid a classcastexception
remove getwidth ( ) and getheight ( ) which i add by mistake . they be already present on the base class
refactor SourcePathResolver to use a new helper method for obtaining relative paths and add a method to retrieve all absolute paths to improve code
fix ( dstu2 ) : correctly parse identifier in dstu2 xml
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and updated the WebSocket request URL handling to improve accessibility of the method
rename ` ` gcc - compile ' ' to ` ` gcc - compile ' ' and ` ` nwcc - compile ' ' to
added a new method ` getCxxPlatform ` to retrieve the ` CxxPlatform ` from ` HaskellBinaryDescriptionArg ` to improve
added imports for ` IndexReader ` , ` IndexReader ` , and ` Similarity ` in multiple Java files to enhance documentation clarity and
updated the ` ConcurrentLinkedStack ` to handle null values and added new test cases for stack operations to improve error handling and enhance test coverage for
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before initializing the array to avoid potential NullPointerException when mDirectories is null
updated gesture end target check in RecentsView . java to ensure overview state is disabled when first layout is not needed
added multiple package - info . java files for various Apache Lucene packages to enhance package management and improve documentation clarity
added functionality to display the visibility of the auto leveler panel to enhance user experience by providing a clearer visual representation of the visibility of the
added postOptimize callbacks to multiple update handler classes to enable post - optimization for Solr event listeners
pdfbox - 4892 : explicitly set dummy byte to 0 in deflate mode , a suggest by valerybokov
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary data checks
added a condition to check if the base is a local meta store before retrying retries to ensure retries are only performed when the metastore is
updated exception handling in HeliosSoloLogService to check for ConnectionClosedException and added null checks for hostStatus to improve robustness
refactor Subject . java to improve code structure to enhance maintainability and readability of the code
use ` concurrentreferencehashmap ` instead of ` concurrenthashmap ` in ` abstractserializationservice `
updated color distance calculations in HSSFPalette . java and added a new test method in TestHSSFPalette . java to improve accuracy
doc : generate sample code in the java microgenerator ( # 212 )
danielwagnerhall : fix elementfinding by id in android ' s xpath library .
added flags parameter to multiple methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to enhance flexibility in receiver registration by allowing
updated the mock implementation for the ` runFunc ` method in ` FFmpegTest . java ` to use ` InvocationOnMock ` to improve
updated OggInputStream to handle previous input streams and modified the loop method to improve resource management and ensure proper closure of input streams
added a constant RESPONSE _ WAS _ NULL to the AssertionResult class and updated the failureMessage assignment to use this constant to improve clarity
[ te ] fix condition to check if anomaly count be zero
refactor ` BaseActivity ` and ` DetailActivity ` to use a new ` showToast ` method for toast notifications to improve code read
updated the request creation method in TracingFeignClient to use the delegate ' s HTTP method and request template to improve flexibility in request handling
added validation for LDAP names and improved referral handling in LDAPRequest to enhance robustness and error handling during LDAP operations
refactor retain logic for RSockets in GatewayRSocket . java to use a separate retain method to improve code readability and maintainability
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality in ` ListViewTest ` to
[ hotfix ] [ test ] move checkpointfailuremanageritcase to junit5
remove unused genericitemuiprovider ( remove unused class )
add the ability to change the value of the ` ` select ' ' field in the chat selector box .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to facilitate testing of the static method of FileSystemPool
set the server connector ' s host to HTTP _ INFO . bindAddress to ensure the server correctly connects to the specified bind address
updated token validity settings for client connections based on heart mode and grant types to improve token management based on authorization and implicit grant types
added a new class CloverInstrumentationFilter to filter candidate classes based on their enclosing class hierarchy to ensure that only non - synthetic fields are
added a new device type ZHIMI _ HUMIDIFIER _ CB2 for Smartmi Evaporative Humidifier
make plausibletobreak work with cost - inf instead of blockstate
changed the access modifier of the ` setScrollRangeDelta ` method from package - private to public to allow access to the method from other packages
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari cannot manage repositories
modified the return statement to use logical OR instead of logical AND for checking missing values to simplify the logic for better readability and maintainability
added Serializable interface to RuleAdministrator class to ensure proper serialization of RuleAdministrator instances
replaced List with Set for allowedOrigins , allowedOrigins , allowedTimingOrigins , and allowedOriginPatterns in CrossOriginFilter to
updated G3D model file references in BaseG3dHudTest . java and NewModelTest . java to reflect the new model
added error handling for solidified position in the updateLatestSolidifiedBlock method to improve robustness by logging errors when solidified position is negative
hbase - 2649 fix npe in execresult when null value be pass to coprocessor
added a method to check the accessibility of a remote user and modified error handling to include null checks to enhance security by preventing potential NullPointerException
replaced the ` writeTo ` method with a new ` getStubClassBytes ` method in ` ClassMirror . java ` and introduced a new
added a internalLinkText field and updated its text based on whether the file is a folder or a file to enhance user experience by providing a
updated the assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
changed the condition from checking if the calendar ' s SATURDAY is equal to checking if it is not equal to the current day of
refactor hideInput ( ) and hideIme ( ) methods in AllAppsContainerView and LauncherAllAppsContainerView classes to improve
update test to use inmemoryeventstorageengine for test
refactor BsdFileStore to use BsdNativeDispatcher for retrieving mount point name to improve code clarity and encapsulation by encapsulating
add test case for issue # 1599 methodcallexpr resolution
added support for optional coordinates in the spawn command to enhance flexibility in spawning by allowing optional coordinates
added a constant for minimum content dimension and refactored methods to use this constant to improve code readability and maintainability by avoiding hard
make graph variable final in graalcompilertest and simplify debug scope in hotspotcryptosubstitutiontest
use mock directory to avoid test failure on window .
added failed checks to ` UpgradeCheckRegistry ` and modified the ` addColumnsToUpgradeTable ` method in ` UpgradeCatalog280 ` to
refactor Environment class to improve code structure to enhance maintainability and readability of the code
added LuceneTestCase import and BadApple annotation to RecoveryAfterSoftCommitTest to address a potential bug related to SOLR - 74
updated file system separator handling in CodenameOneImplementation . java and removed unnecessary warning in HashtableContent . java to ensure proper file system separator
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource accessors with a wildcard import and updated resourceAccessor initialization in LiquibaseEntityResolver . java to simplify import statements and
added security property ` jdk . tls . disabledAlgorithms ` to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to
updated the Immutable annotation in AbstractCxxDeps and removed the EMPTY constant in CxxLibraryDescription and CxxLibraryTest to improve immut
rename expectedDirectory and actualDirectory lists to expectedStubDirectory and actualFullDirectory , respectively , and introduce actualFullDirectory to improve clarity
removed the ` @ DoNotSub ` annotation from the ` resizeThreshold ` field in ` Int2ObjectHashMap . java ` to streamline
refactor folder name hint setting logic to improve readability and maintainability of the code
updated test cases in UaaResetPasswordServiceTests to include " uaa " parameter for client loading to ensure compatibility with the latest client configuration
changed visibility of methods ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` from public to private in ` ShadowSQLiteDatabase . java
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to account for closed state to ensure accurate representation of counter values
refactor MimetypeIconUtil to improve code readability to enhance maintainability and facilitate future development
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple classes to improve consistency and clarity in method naming
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and modified the ` UnwrapParenthes
added a ` teleport ` method to handle teleportation of ` org . bukkit . entity ` in the ` Location ` class to enable
replaced the use of Base64 encoding with Spring ' s built - in Base64Utils for modulus and exponent in the TokenKeyEndpoint to
updated imports and changed statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity by indicating the purpose of the annotation
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
refactor retweeter handling in TimeLineCursorAdapter to improve clarity and maintainability of retweeter management logic
replace HoloTextView with TextView for verified text based on user theme settings to improve flexibility in displaying verified text based on user theme settings
changed the visibility of the ` timeDiffFromServer ` variable and modified the constructor of ` AbucoinsDigest ` to improve encapsulation and
camel - 14850 : camel - mongodb - add autowired option to configure the mongo connection .
[ geot - 6892 ] support the last index for attribute mapping ( # 6893 )
log a warning if hive column statistic be corrupt when alter a partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks based on user context
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , EastAsianWidth , and EastAsianWidth classes to improve
[ geos - 8041 ] escape the contact email in the home page ( # 8042 )
fix ( modulemanagerimpl ) : do n ' t enrich reflections with subsystems in the engine module
added assertion to verify that the feature count match the expected number of feature .
added a length check before processing the command in AlgebraProcessor . java to prevent potential StringIndexOutOfBoundsException when command is empty
added conditional logging checks before logging statements in SingleNodeKafkaResumeStrategy . java to avoid potential NullPointerExceptions when logging is not enabled
replaced hardcoded ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK
added ` IgnitionEvent ` and ` IgnitionEvent ` classes , modified ` MotorMountHandler ` , ` Axial
tika - 3558 -- fix for tika - 3558 -- allow ascii name length and unicode char length to be equal to
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to indicate that the test is not deterministic on JDK 1
refactor lock file creation to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation logic
updated notification preferences from version 5.3 to version 5.3 _ 1 and added new notification types in UpdateUtils . java to ensure compatibility
added a check to return null if the username equals the FEDERATION _ USER constant to ensure proper handling of federation users in
do n ' t check parameter type for method with truffleobject .
removed unnecessary imports and disabled annotations from JakartaClientShutdownWithServerWebAppTest . java and JakartaClientShutdownWith
do n ' t log a warning if we ca n ' t find a file
refactor Collection and Map classes to improve code readability and maintainability
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize Lucene ' s Version
added logic to handle missing primary keys for OracleDatabase and AbstractDb2Database to ensure proper schema management and handling of missing primary keys in the
added MetastoreException handling to the execute and repair methods , and introduced a new test for invalid partition names to improve error handling and ensure
[ hotfix ] [ kafka ] retry kafkaproducer commit before retry
[ issue # 5013 ] remove receipthandle when send to grpc ( # 5014 )
added a service list to DockerComposeContainer and modified the DockerComposeContainer to conditionally run the command based on its presence to improve service management
fix : use collectionutil . copyset ( ) in export and contextdecorator
removed unused imports and simplified XML return logic in FeedParser . java to streamline code and improve error handling
removed a condition to check for DISABLE _ ALL _ APPS in Launcher . java and updated child layout retrieval in Workspace . java to
changed data types of energy reactive and related variables from int to double in MeterRealtimeBodyDataDTO . java to allow for more precision
added a new file ` bug4150029 . java ` to create temporary directories and implement a file chooser for the backspace keyboard
added a boolean flag ` isSparkConfigUpdated ` and methods to manage Spark configuration updates in ` HiveConf ` , ` SparkClient ` ,
added a method to retrieve long press indicators in AppIcon and AppIconMenuItem and modified Launchable and Workspace classes to utilize this method to
added checks for empty polygons in WKBWriter and updated corresponding test cases in WKBWriterTest to ensure proper handling of empty polygons and improve
refactor UnflavoredBuildTarget creation to use a builder pattern and improve interning mechanism to enhance code readability and maintainability by
added a new file MultiplyByMaxInt . java that contains a method to multiply an integer by the maximum integer value to implement and test
updated navigation indicator functionality in OCFileListFragment to improve user experience by enabling drawer indicator based on the current file state
updated package declaration for TestRAMDirectory . java and removed unused imports to streamline package structure and improve code clarity
replaced ` FixedBitSet ` with ` BitSet ` for better performance in ` Automaton . java ` and ` Operations . java `
dmn : add message type for dmn expression compilation error
updated annotations from @ ContainedBy to @ Repeatable in multiple Java files to align with the new naming conventions for better clarity and
updated the message to include the duration of the file sending process to provide more detailed information about the file duration
refactor class name retrieval and package access check in OpenMBeanAttributeInfoSupport . java to improve code clarity and ensure proper package access validation
fix race condition in quorum response resolver . patch by jbellis
updated freeSize calculation in StoreDirect . java to ensure correct size adjustment based on input values
fix swipe up on the keyboard when touch be disable .
replaced SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to enhance SSL context initialization for improved compatibility
removed the PrivilegedSocket class and simplified the socket connection initialization to streamline code by eliminating unnecessary privileged actions
comment out flaky test , will resolve later
updated finishRecentsAnimationOnTasksAppeared method to accept a Runnable parameter and modified visibility handling for splashView to improve animation control
added null check for curLatLng before adding it to the current location marker to prevent potential NullPointerExceptions when curLatLng is null
updated the client removal method to use the client ID directly instead of the client object to ensure the correct retrieval of secrets from the client details service
replaced ` @ BeforeAll ` with ` @ BeforeEach ` in ` SqlSourceBuilderTest . java ` and modified the test setup to
http : / / issues . apache . org / activemq / browse / amq - 2290 - use awaittermination in
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
updated filterConditions initialization to use Optional and added return statements in ZookeeperSyncDataService and ShenyuTrieRuleListener to improve null
[ add ] clonefields to lightcontrol so that it do n ' t have to clone the field .
updated condition for setting ` _ hideStacks ` and improved exception message formatting in ` StdErrLog . java ` to enhance code clarity
added debug logging and a new method ` getContext ( ) ` in ` HttpSessionEventPublisher ` , and implemented context validation in ` HttpSessionEventPublisher
added a semantic exception message for the CREATE CQ statement to indicate that the syntax of CREATE CQ statements have changed from version 0.14
[ hotfix ] [ iotdb ] fix typo in javadoc of flinkiottdbsink
add counter to track custom simplification when a node be delete .
updated the fileIcon drawable setting to include the context parameter to ensure the correct context is used for displaying file types in the UI
updated ` readIdentifierWithSchema ( ) ` to include schema name in ` Parser . java ` and modified test parameters in ` TestScript .
add support for bigqueryio . read ( ) with time field ( # 3746 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` , and created corresponding tests in ` ViewGroupTest
updated generic type declarations for enumeration across multiple classes to improve type safety and avoid unchecked casting warnings
updated import statements in IndexTool , IndexTool , and MetaDataClient classes to improve code organization and maintainability
added JSON value and creator constants to DocAnnotationConstants and updated enum value retrieval logic in SpringBootDocBuildTemplate to enhance annotation handling and improve
[ gr - 33434 ] fix classnotfoundexception when try to load resource from jar .
updated CUDNN _ PATCHLEVEL to CUDNN _ PATCHLEVEL in cudnn . java and modified comments in cublas . java to improve
added a FileFilter to filter out specific layout directories from the file list in ResourceLoader to improve resource loading efficiency by filtering out specific layout directories
fix classcastexception in redstone torch
[ calcite - 5369 ] add support for varbinary type in reltostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize date handling functionality in the application
updated backup error messages and error handling in the Backup . java and Captions . java files to improve clarity of error messages and enhance error
ggb - 1353 position of simple panel should be relative ( not absolute )
refactor file creation logic in ShadowParcelFileDescriptor . java to simplify the file creation process to improve code readability and maintainability by
resolved - issue batch - 1342 : securitycontextholderstrategy should use removefirst instead of offer
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
added unit tests for neutral and neutral references in IntegerEqualsCanonicalizerTest . java and modified type handling in IntegerEqualsNode . java
added a constant STRING _ ARRAY to the Type class to facilitate the use of String array types in TypeFactory
refactor keyboard hiding logic and improve logging for AllApps interactions to enhance code readability and maintainability by centralizing keyboard visibility logic
force bit density to fix network issue in blockstatecontainer .
updated assertions in TimelineMetricCacheSizingTest . java to include descriptive messages and improved cache management in TimelineMetricCacheTest
add an optimization to the gl _ max _ texture _ size in the minecraft .
[ java ] stop log recording when stop consensus module .
added a condition to reset startPosn when in transform mode to ensure proper initialization of startPosn when in transformations
add querycontext . isskipstartree ( ) instead of use startreeutils . isstartreedisabled ( )
added a flag to determine if nearby places need to be refreshed and modified refreshView and setupPlaceList methods accordingly to improve responsiveness
add factory method for maptransformer , add inverse ( ) and bimap ( )
rename EmeddedObjects and EmbeddedObjects classes to improve clarity and consistency in naming conventions
added support for handling launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget rendering capabilities by allowing dynamic retrieval of app
updated ` StageSelector ` and ` StageAction ` classes to use ` EventObject ` instead of ` ChangeListener ` to improve event handling consistency
added methods to manage calling UID and UID in ShadowBinder and implemented corresponding tests in ShadowBinderTest to enhance testing capabilities and ensure proper functionality of
refactor ExpectationFailure class to use non - AutoValue annotations and improve null handling to enhance code clarity and prevent potential null pointer exceptions
remove warn log for no support for deserializing message
simplified variable initialization for newWidth and newH in ImageReplacedElement . java to improve code readability and ensure new dimensions are
added handling for escape characters in Markdown rendering to ensure proper formatting of HTML entities and improve test coverage
refactor password handling in SharePasswordDialogFragment to improve code readability and maintainability to enhance the clarity and functionality of password sharing functionality
refactor reflection - based method invocation in IoUtil . java to utilize a new MappingMethods class to improve code readability and maintainability
removed the ' public ' modifier from method and variable declarations in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to
added new options for Slider AM keytab and its directory options in LlapOptionsProcessor . java to enhance configuration options for Slider AM
modified the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and added animation functionality to enhance user experience by
added functionality to handle binding completions in LauncherModel and updated method signatures to improve resource management and ensure correct behavior during workspace binding
updated NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsCountOperator , NodePathsCountOperator , and NodePathsCountOperator to
updated method signatures and added a new method ` setCheckValid ` in ` IssueInterface ` , and renamed ` ValidationReport ` to ` Json
added a method ` safeProviderName ` to safely retrieve the cipher provider name to improve error handling and provide clearer logging when the provider is unavailable
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging clarity by removing unnecessary warning messages
removed conditional check before appending a newline character in AggregateLifeCycle . java to streamline output formatting for improved readability
changed the access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that the test should not be implemented for covariant overrides
refactor ` curly ` method to use a dedicated ` qtype ` method instead of direct parameters to improve code readability and maintainability by redu
add reloadstrategy to allow route to be load from within the camelcontext .
added minimum and maximum space settings to the X - axis of the ScatterChart to improve visual spacing for better visual representation
removed duplicate quotes around " as INTERVAL " in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the " UTF8 " property in CheckEncodingPropertiesFile to ensure that a valid UTF8 key is present in the properties
updated print statements in TestReproduceMessage and modified annotations in LuceneTestCase for rationale to improve error handling and enhance test
added logging for long - press events on an AllApps item in StatsLogManager and ItemLongClickListener to facilitate tracking and tracking
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure that
add an option to turn on / off sector land info
[ hotfix ] [ table - planner - blink ] fix compiler warning
refactor Enum class to improve code readability to enhance maintainability and facilitate future development
added validation for nearby selection parameters in NearbySelectionConfig , NearEntityNearbyRandom , and NearEntityNearbyValue
remove temporarycache . remover _ service , use cache . expireafterwrite instead
updated visibility settings for createSQLViewContainer and createWMSLayerImportContainer in NewLayerPage . java to improve user experience by disabling
set the default value of ` Availability _ availability ` to ` UNAVAILABLE ` in ` ContextHandler . java ` to ensure that ` Availability _
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` PeerConnection ` , and ` SyncService `
chore : update sample code to set total timeout , add api client header test
changed the configuration of ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and updated the method to accept a
changed KDCOptions constants from ` public final ` to ` private static final ` and added a new class ` KdcDefaultOptions ` to
refactor writer initialization and assignment in Json . java to improve code clarity and ensure proper cleanup of the writer instance
swapped the declarations of ` mentions ` , ` mentionsQuery ` , and ` fetchFavorites ` in ` ProfilePager . java ` to
rename the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity by indicating that the
added a method ` valueFromClassConstant ` to retrieve configuration values from class constants to enhance configuration flexibility by allowing dynamic retrieval of configuration values
added logging for service initialization failures in KafkaService . java to improve error handling and debugging for service initialization failures
added " usr / share / zoneinfo / tzdata " to the RESOURCES _ TO _ ALWAYS _ ACQUIRE constant to support additional
fix for http : / / issues . apache . org / activemq / browse / amq - 2635 - add support for
added keyword indexing functionality in HTMLDocument and a corresponding test case in TestDemo to enable indexing of keywords in the index output
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional block to initialize the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that addresses are only added if they are not
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall .
refactor Builder class to improve code structure to enhance maintainability and readability of the code
change isbn2bibtex fetcher to use http : / / www . ebook . de / tools / isbn2bibtex /
[ gr - 11937 ] make sure exception be not swallow .
added null check for text before firing data changed event to prevent potential NullPointerException when text is null
add option for treebank language pack and simplified model , a suggest by valerybokov
added trimming of whitespace from the line after processing in SuffixURLFilter . java to improve input validation by trimming whitespace before processing
added a conditional check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when the player is in
ggb - 1555 popups will be remove when user click on it in text - input dialog ( on mac )
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to accept a boolean parameter to improve flexibility in handling cache configurations
removed the call to ` _ channel . close ( ) ` and adjusted the calculation of ` len ` in ` ChannelEndPoint . java ` to
added null check for keyIndex in FixAcidKeyIndex . java and refactored KeyIndexBuilder instantiation in OrcOutputFormat .
added Locale import and improved exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
add storecheckguard to writenode and fix bug in canonicalizerphase
remove dead code in bciblockmapping . isreachable ( )
improve detection of bug that do n ' t have a chance to fix
replaced instances of ` BuildTarget . copyOf ( ) ` with direct instantiation of ` BuildTarget ` in multiple files to simplify code and improve
[ hotfix ] [ table - planner - blink ] fix typo in sqlrunner javadoc
changed the data type of the date _ taken variable from String to long in InstantUploadBroadcastReceiver . java and FileStorageUtils . java to
renamed ` knownApis ` to ` knownSdks ` and introduced a new method ` knownSdks ` to improve clarity and
use confidenceprogressindicator instead of progressindicator in createofferview
updated header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes , and modified UPNPControl
fix a bug in the builder that would cause it to not be able to create a block .
added new view type constants and modified the onCreateViewHolder method to handle different view types to improve clarity and functionality of view management in
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in LinuxLibrary . java and MacOSXLibraryDL . java to
fix an off - by - one error in the grammaticalRelations class
replaced the ` canvas ` parameter with the ` image ` parameter in the ` insert ` method and introduced a new ` writePackEntry `
replaced the method ` getVisitors ( ) ` with a default implementation ` apply ( Refactor ) ` in ` RefactorModule ` to
added methods ` getChildByName ` , ` getChildByNameRecursive ` , and ` getChildrenByName ` to retrieve child elements by name to enhance functionality by
updated the Content - Charset header from " UTF - 8 " to " UTF - 8 " in HttpSolrServer and its corresponding test to ensure
updated SystemUiController and AllAppsTransitionController to use annotations for UI state management to improve code clarity and maintainability by centralizing UI
removed the private ClientConfigurationService field from IntrospectingTokenService . java to streamline the code by eliminating unused variables
updated the RuntimeException message format in HiveRecordSet . java to provide more detailed context for error handling to improve error reporting for better debugging and debugging
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` ` backup . snapshot . backup . rightafter ' ' to ` ` backup . snapshot . backup . rightafter ' ' in config
added score comparison to the merge method in TextFragment . java to ensure that the merge function does not exceed the defined score range
removed the private Digester field from Md4PasswordEncoder . java to simplify the code by eliminating unnecessary dependencies
added a validation check for the maximumUnimprovedStepCount property to ensure it is greater than or equal to 0 to prevent runtime errors
added a check to return early if currently opened editors are empty to improve performance by avoiding unnecessary processing when there are no opened editors
replaced calls to ` return ` with ` return Mockito . verify ( mock ) ` in ` BDDMockito . java ` and
replaced the context class loader retrieval method from the current thread to the PathScanner class loader to ensure compatibility with the current thread ' s class
implemented asynchronous ` sayHi2 ` method in ` CodeFirstPojoClient ` and ` CodeFirstPojoClientIntf ` , and
add logging to abstractsplitbrainprotectiontest ( # 11916 )
added null checks for ` LogoutConfigurer ` before adding the ` LogoutPageGeneratingFilter ` in ` DefaultLoginPageConfigurer ` and `
[ giac ] remove degree ( ) from giac ' s determination output
added logging functionality to DockerComposeContainer and created a new DockerComposeLogConsumerTest class to improve logging management and test coverage for DockerComposeContainer
updated the generic type parameter in the testMapping method from Class < ? > to ResultSetMapping < ? > to ensure type safety and improve type
removed unused import statements from AmbariMetaInfoTest . java to streamline code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to facilitate the creation of exceptions from a `
replace a break statement with a return statement in ConsoleActivity . java to improve the control flow of the return statement
camel - 14850 : camel - platform - http - rest - add support for buffer response body .
added methods to handle platform - specific path separators in ` MorePaths ` and updated ` CopyStep ` and ` AarWithLibsIntegration
added null check for authorizationContext parameters before processing to avoid potential NullPointerException when processing parameters
replace ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` NativeLibraries . java ` to improve error handling by providing a
updated the SDK version from " 4611349 " to " 4514284 " and added new tests for text speak and stop functionality
queuetransactionlog key fix to use itemid and queue name .
added a boolean property ` enableSqlWithoutProfile ` to ` JdbcEnvironmentProperties ` and updated its usage in ` JdbcEnvironmentRepository ` to allow
added a try - finally block around the write operation in ConnectHandler . java to ensure data is cleared after writing to server bytes
fix eclipse compiler warning in modloadingstage
updated date formatting to use calendar instead of date to improve accuracy in date representation
updated the loadValue method in CachedThreadStatesGaugeSet and modified the getThreadInfo method in ThreadStatesGaugeSet to include a stack trace depth
added a ` prevTlogOnPrecommit ` variable and a ` postCommit ` call in ` UpdateLog . java ` , and modified
updated FastAsyncWorldEdit job version from " P2 - V6 / " to " FastAsyncWorldEdit - 1.17 / "
updated file existence checks and added null check for input path in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions during
added a new method ` calculateNormalVector ` to the ` ObjUtils ` class and updated the ` TriangulationHelper ` to use this
updated the ` find ` method to include an ` identityZoneId ` parameter in the ` find ` method to enhance functionality by allowing retrieval of
rename SpanCollector . java files to improve clarity and consistency in naming conventions
added a null check for the current cursor session in the AuthorizationFilter class to ensure that the session is not null before proceeding
refactor TransactionIsolationLevel class to improve code readability and maintainability
rename methods and variables related to logical volume groups from " printLVgroups " to " printLogicalVolumegroups " to improve
added thread name setting for forwarding to the remote URL in TestSession . java to provide clearer information about the current thread ' s remote URL
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
removed the creation of an ArrayList of ComponentKey and replaced it with a direct return of a new ArrayList to simplify the code by eliminating
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance the touch controller functionality for
refactor hotseat scaling and translation handling in LauncherState and WorkspaceStateTransitionAnimation to improve clarity and functionality of hotseat
added a check for JUnitRule class name before filtering stack trace elements in DefaultStackTraceCleaner to ensure that only relevant JUnitRule classes
refactor buffer handling in MappedResizeableBuffer to use direct buffer checks instead of hasArray ( ) checks to improve performance and clarity by
refactor balance listener management in DepositListItem . java to use a dedicated variable to improve code readability and maintainability by reducing
updated color conversion logic in RealisticRenderer to handle non - null and non - sticker edge modes to ensure correct color representation based on edge
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization in multiple classes to improve robustness by preventing potential
remove patternutil # checkpattern call from gl200
updated playback time checks in FullDetailsActivity . java to improve accuracy of last playback event timing for episodes
added support for multi - word token in spanishxmltreereader
added logic to clear the " language " DC if the value is empty in InstallItem . java to ensure proper handling of empty values in the
update the override scheme based on the instance ' s secure status in ReactiveLoadBalancerClientFilter to ensure the default scheme is set to " http "
[ hotfix ] fix duplicate bytebuffer usage in defaultmessagestore
[ gr - 33434 ] make nativeimagedebuginfoprovider . fullfilepathfromclassname non - final .
refactor the comparison logic in ShadowBackupManagerTest from an anonymous class to a lambda expression to improve readability and performance of the code
update references from US to EN language support in LocaleProviderAdapter . java and LocaleDataMetaInfo . java to ensure consistency in language support checks
simplified null check for redeemData in LocalTransactionSigner . java to improve code readability and maintainability
add a minecraftforgeclient class for texture override for block render . close # 3553
added a return statement to TxCacheDB . java to ensure proper execution flow of the code
updated import statements to use the jdk . internal . org . objectweb . asm package instead of com . sun . xml . internal .
refactor FastDictionary class implementation to improve performance and readability of the code
improve handling of ' closed ' status in nio connection
updated FlightEvent parameters in FlightEventsTest . java to use fixed values instead of fixed values to improve accuracy of flight event handling and
vendored protobuf to vendored vendored grpc 1.26 . 0
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper namespace declaration is
update instructorfeedbackresultspagedata to use the new getstudentprofilepicturelink method instead of getprofilepicturelink
added shortRules list and updated defaultRules initialization in DefaultPasswordValidator . java to enhance password validation by allowing short passwords for long passwords
[ java ] add a new command class to facilitate command execution for selenium - backed selenium
added JUnit @ Test annotation to ProxyClassSerializationTest . java to enable testing of proxy class serialization functionality
updated argument syntax for thumbnail scaling and padding in DLNAMediaInfo . java to improve code readability and maintain consistency in formatting
replace speculative guard movement phase with canonicalizer phase in hotspot truffle compiler .
added checks for multiple authentication managers and disabled bean definition overriding in ` AuthenticationManagerBeanDefinitionParser ` to ensure proper handling of authentication managers and prevent
updated conditions for handling forwarded request fields in ForwardedRequestCustomizer . java and added corresponding tests in ForwardedRequestCustomizerTest . java
set the StringBuilder ' s length to 0 in ConsoleReader . java to ensure proper memory management during input handling
changed ` allowedRoles ` and ` disallowedRoles ` from private to protected in ` RolesInterceptor . java ` to allow subclasses to access and restrict
updated OpenIDE - Module - Specification - Version and project properties to reflect new versioning requirements to ensure compatibility with the latest OpenIDE - Module
hbase - 20619 make nettytlswrapsize configurable for hbase - server ( # 4369 )
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit 4 assertions and added new test cases to improve test coverage and ensure correct line length exceptions are thrown
refactor OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding based on SAML constants to enhance flexibility in protocol binding configuration for SAML authentication requests
refactor SurfaceControl transaction handling in DepthController . java to use AttachedSurfaceControl for improved performance
updated version comparison from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
hbase - 20513 use create action instead of write to create bulkload and cleanup bulkload
updated the subList method for unSeqMergeList and corrected measurementSchemas in MergeMultiChunkTask and MergeTaskTest to ensure correct index handling for
camel - 14850 : fixed the issue of genericfileconverter . convertbodyto ( inputstream . class ) do n ' t work
added a login method to the ShardManager interface and modified the DefaultShardManagerBuilder to conditionally call the login method to improve flexibility in
updated DeleteGlobalRef call in Callback . java to ensure proper deletion of global references
renamed the table " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of the
refactor response completion handling in HttpSender . java to check if the completion is marked before processing the failure to improve robustness by avoiding
added a condition to check if the user is a student before comparing giver with the response giver to ensure that the giver is only
added checks for linked profile allowance and modified profile path handling in BMPImageReader . java to improve compatibility with linked profiles and
updated the coordinates for the setSimpleCuboid method calls in ClassicPlotManager . java to correct the coordinates for location calculations in the plot
[ java ] wait for pmd file to be check in a separate thread .
refactor grid size management in StdGridFragment to utilize a new method for setting grid sizes to improve code readability and maintainability by
changed return values from false to true in ContributionsListFragment . java to reflect the correct behavior of the method
added a new test case for DISTINCT prefix selection with limit in DistinctPrefixFilterIT . java to validate the functionality of distinct prefix filtering with a descending order and
pdfbox - 4892 : add test for acrobat checkbox group property
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide a way to retrieve the last modified timestamp of a
added a condition to check for valid metadata tables in HiveIcebergStorageHandler to ensure proper handling of metadata tables in HiveIceberg
add an option to save / restore default currency in cashdepositform
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all exceptions instead of just IOException
add animation handling logic to improve content filling behavior in the view to ensure that the view animates correctly based on the presence of pending adapter updates and state of the enter
added a new public String field ` activeKeyId ` to the UaaConfiguration class to provide a way to access the active key ID for better
updated action labels and method names in SendMailActions . java for better clarity and consistency to improve code readability and maintainability by using
changed the ` isActive ` variable to be volatile in ` SocketServer . java ` to ensure thread safety when accessing the ` isActive ` variable
fix isdesc ( ) to be consistent with isasc ( ) in orderbyexpressioncontext
fix warning : use charsequence for string . tostring ( )
added a check for the " ownCloud " application name in the condition to ensure the application name matches the intended application context
hbase - 13780 default to 700 for hdfs root dir permission for secure deployment ( enis soztutar )
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange . java ` and ` J
refactor Instant class implementation to improve code readability and maintainability
added a default state format of " 2 " and changed the return type of ` getStateFormat ( ) ` from ` int ` to ` String
removed conditional logging of ticket type in CentralAuthenticationServiceImpl . java and modified type check in AbstractTicket . java to simplify logging output and
pdfbox - 4892 : ignore illegalargumentexception in pdiccbased . parse ( )
modified the condition to check if the file is a regular file before proceeding to improve code clarity and ensure proper file validation
updated PluginParameterExpressionEvaluator to include PathTranslator as a parameter and added a method to align file paths to the base directory to improve path handling
[ beam - 1642 ] move protobuf protobuf coder to extension package ( # 1643 )
updated JpaQueryParsingToken to include a boolean parameter and added a new test for handling signed numeric literals to improve query parsing functionality and ensure
updated ` generateLaunchLugFromRASAeroRailGuide ` and ` RailGuideHandler ` to include a ` parentLength `
removed the getNonceFactory method from BitmexStreamingExchange class to streamline the code by eliminating unnecessary implementation
updated logging statements in MailBinding . java to use placeholder syntax to improve readability and performance of logging messages
[ java ] set default timer interval in driverconductortest before and after .
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable loading
added a call to grabFocus on the searchField in FullTextSearchPanel . java to ensure the searchField focuses on the correct text
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
updated the assertion in StatementTest . java to use a comment for clarity to improve code readability and maintainability
updated the assertion message format in TestSolrConfigHandler . java to include the server URL to improve clarity of error reporting by including the server
replaced HttpMethod with ServerHttpRequest and ServerWebExchange in CsrfWebFilterTests to simplify HTTP request handling and improve test reliability
updated regex pattern in FilterResourcesStep . java to handle different density formats to improve accuracy of drawable matching based on the provided density
added methods to retrieve and update the UIID based on the component type in the ComponentGroup class to enhance the UIID retrieval process for better
removed densityDpi check from rotation condition in RecentsAnimationDeviceState . java to simplify rotation logic for better readability and maintainability
8015369 : c2 compilation fail with assert ( phase - > c - > phase - > c - > c - >
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix annotation to address
fixed - npe be throw if redissonexecutorservice . executeasync throw npe . # 3329
simplified the condition for determining if to update credentials in FileDownloader and FileUploader classes to improve code readability and maintainability by
refactor file scanner initialization and closing logic in Compactor . java to ensure proper resource management and avoid potential memory leaks
replaced direct calls to ` get ( iface ) ` with ` getOrDefault ( iface ) . getOrDefault ( iface , 0L ) `
added nonce parameter and assertion to verify claims for a token in TokenMvcMockTests to ensure that the token claims reflect the correct nonce for testing
refactor ChartEditor and related components for improved clarity and organization to enhance maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for the form layered pane
added a new method ` maxY ` to calculate the maximum height in ` BrowserContentPane ` to ensure proper height adjustment based on the owner '
modified the ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating whether the database is connected to
updated the DOCKER _ COMMAND variable to be public in the Platform class to allow access to the DOCKER _ COMMAND from other classes
added a null check for the input stream before reading from it in the initializeParameters method to avoid potential NullPointerException when the input file is not found
added a color parameter to the drawLeaveBehind method and updated related calls in TaskbarView , CellLayout , PreviewBackground , and Preview
show an error dialog if the flutter plugin do not work with canary version of android studio
added null check for identityProxy table name before retrieving its UUID to avoid potential NullPointerException when the table name is not provided
removed unused module persistence lists and related methods from StartArgs . java to streamline argument handling and improve code clarity
updated argument validation logic in GeminiMarketDataService . java to ensure that the last trade time must be a Date or Long to
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure uniqueness of questions in the flow scope
add a simple test case to show how to use a single role in a map realm .
removed multiple JSP files from the AuthCheckFilter to exclude specific setup settings from the project
refactor scheduled runnable execution logic in Scheduler . java and add corresponding tests in SchedulerTest . java to improve thread safety and ensure correct execution order
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to use varargs instead of arrays to
refactor XML parsing logic to handle end - of - stream condition to improve robustness by preventing potential end - of - stream errors
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issue where text
added pivot point adjustments for mArrow in DeepShortcutsContainer . java to ensure proper positioning of the arrow based on icon visibility
fix checkstyle issue in ` ` main ' ' package
refactor ` updateThumbnail ` method to include a ` refreshView ` parameter for better control over the refresh behavior to improve the handling of thumbnail
pdfbox - 4892 : fix usage message to use class . getname ( )
updated InternetAddress instantiation and improved hostname validation checks in EmailFormatSpecifier and HostnameFormatSpecifier classes to enhance error handling for invalid hostname formats and
updated references from ` this ` to ` this ` in multiple activity classes to ensure consistency in accessing the current instance of the activity context
updated the initialization of SizeBasedDocIdSet and SizeBasedDocIdIterator to use the current document ID instead of the total document ID to
updated the ` promptToOpenFile ` method to accept an additional ` filename ` parameter and modified the logic for setting the current directory based on
updated widget counts and sleep delay in AppsCustomizePagedView . java and refactored setCurrentPageToWidgets ( ) to improve
[ fix ] update bound calculation in flightconfiguration . getactiveinstances ( ) .
( chore ) camel - micrometer : use direct endpoint instead of seda endpoint
updated DateTimeFormatter to use Locale . ROOT for consistency to ensure consistent date formatting across different locales
[ ds - 3752 ] filter out hidden metadata in dspaceobjectconverter ( # 3753 )
add a test method to verify the behavior of StarTreeConfig . Builder with missing required dimensions , metrics , and collections to ensure that missing
camel - 14850 : camel - spring - allow to configure recipient list via @ fluentarg ( ` ` recipients ' ' )
refactor InlineLayoutBox to improve parent retrieval logic and enhance HoverListener to handle painting based on target painting information to enhance layout
refactor AuthenticatorActivity to use OperationsService for managing authentication methods to improve service connection management and enhance authentication method detection functionality
