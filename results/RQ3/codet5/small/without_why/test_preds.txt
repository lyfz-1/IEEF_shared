updated SocketAppender instantiation to use setRemoteHost and setRemotePort to ensure the SocketAppender uses the correct remote host and port settings
refactor prompt header handling in BasicAuthPlugin to use a HashMap for improved readability to enhance code maintainability and reduce duplication in header
updated the method call from ` RecordDescriptor . msgLengthOffset ` to ` msgLengthOffset ` in ` ManyToOneRingBuffer . java `
cloudstack - 4892 : fix nullpointerexception when vmdetailcpu or ramovercommit ratio be null
added an ` flags ` field and a ` getFlags ` method in ` ShadowPaint ` and updated ` PaintTest ` to use it to
updated the title from " Set / clear / append / rename " to " Manage field names & content " in MassSetFieldsDialog to
added a conditional check for Eclipse usage in DetectorsTest . java to improve error handling and provide clearer feedback when Eclipse is not
fix for http : / / issues . apache . org / activemq / browse / amq - 2630 - fix the bug
added a new interface ` RemoteInputListener ` and modified the ` connected ` and ` onDisconnected ` methods in ` RemoteInput ` to enable
refactor conditional statements in OrcEncodedDataReader . java to improve code readability and maintainability
added a check for the enabled state of the thing handler in HomeConnectBridgeHandler . java to ensure that only enabled thing handlers are processed
added null checks for ` bs ` before adding policies in ` AuthorizeAdminServlet . java ` to avoid potential NullPointerExceptions when ` bs ` is
updated assertions in DefaultTypeAdaptersTest , ObjectTest , and DefaultDateTypeAdapterTest to use matches for specific Java versions to ensure compatibility with
added JSON serialization for Hive context and description in TezTask . java to enhance the functionality of TezTask by providing detailed dag information
bugfix # 25216 , add getheaptime ( ) method to hprofheap . getheaptime ( )
updated ` getUploadCount ` method to use ` CommonsApplication ` and refactored ` RxJava2Tasks ` to use ` CommonsApplication
remove lock _ mode _ read _ consolidated check from MVTable . java to simplify code and improve readability
[ issue # 4892 ] fix commitlog . log ( # 4893 )
added a check to ensure the folder is marked as open before accessing its state to avoid potential null pointer exceptions when accessing folder information
added a test method for sorting PGProperty names in PGPropertyTest . java to ensure that PGProperty names are sorted in ascending order to ensure
added a new constant for the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN message in Common . java
changed the type of the ` getUninstallTarget ` method from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java
updated assertion message in RequestBuilderTest to use isIn instead of hasMessage to improve clarity of error messages for better debugging
refactor NearbyActivity to use NearbyListFragment instead of NearbyMapFragment to improve clarity and maintainability by
renamed ` status ` to ` sessionStatus ` in ` FlatProfileContainerFree ` to improve clarity by using a more descriptive variable
added a new field ` sendZeroAnomalyEmail ` and its getter and setter methods in ` EmailConfiguration ` and ` EmailReportJob `
[ hotfix ] [ kafka ] fix npe in flinkkafkaproducerbase . open ( )
added methods to retrieve user and geofence data from the database to enhance data retrieval capabilities for user and geofence users
added a constructor to BlockingResponseListener that accepts a maximum length parameter to ensure proper handling of response limits in the BlockingResponseListener
refactor mcast service implementation to use byte array instead of XByteBuffer to improve code readability and maintainability by reducing redundancy
refactor snapshot fragment sending to use a try - finally block to ensure proper resource management and prevent potential memory leaks
updated assertions in LoginSAMLAuthenticationFailureHandlerTest from " https : / / example . com " to " https : / / example . com
[ hotfix ] [ test ] fix typo in configmetadataprovidertest
updated import statements and modified the ` updateNoteReminder ` method signature in ` SnoozeActivity ` to include ` noteToUpdate `
added a new ` AcceptAllFilter ` class and refactored directory entry handling in ` Files ` , ` WindowsDirectoryStream ` , and
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future updates
do n ' t throw noclassdeffounderror if class be not find .
refactor DockerImageName and DockerImageNameTest classes to improve validation logic and error handling to enhance robustness of Docker image name validation and provide clear
updated the dialog name from " login _ failed _ username " to " login _ failed _ wrong _ credentials " in LoginActivity . java to
added ` setAutofocus ( " autofocus " ) ` method to multiple form classes to enhance user experience by preventing unintended
added a new test method ` test _ zone _ saml _ properties ` to ` SamlIDPRefreshMockMvcTests . java ` to
added checks for empty and isDigit lists in ComparableVersion . java and created a new test for mng7644 in ComparableVersionTest . java
updated method calls in Sheet . java and added padding and margin properties in UIManager . java to improve code clarity and ensure minimum width and
updated import statements in RobolectricTestRunner , ParallelUniverseTest , and ParallelUniverseTest classes to reflect the new internal package
replaced the use of ` BoundedLocalCache . class ` with ` FACTORY _ CALL ` in ` LocalCacheFactory . java `
updated the setFillPattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to correct the
added functionality to draw self - loops if enabled in the graph to enhance visualization of self - loops for better graph
rename ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across
rename ` addManaged ` method to ` manage ` in ` DropwizardAppRule . java ` to clarify the method ' s purpose
added translation to the drag handle indicator in AllAppsTransitionController . java to improve the visual appearance of the drag handle indicator during transitions
removed redundant log statements in CollectionViewer , CommunityViewer , and ItemViewer to streamline logging and improve code readability
updated the configuration message for query optimization in HiveConf . java to provide clearer guidance on how filters are pushed down in the operator tree
added a condition to check if the server is not running on OS X to ensure the build process does not fail on unsupported operating systems
added support for Jetty ' s Jetty alpn client in TestJettyOSGiAnnotationParser . java to facilitate
do n ' t retry async job if there be no lock
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
added a new @ ExcludeFromRuleKey annotation to the GenruleBuildable class to clarify that Genrule execution is not relevant to
simonstewart : fix firefox custom profile launcher on window
added a check for the existence of a fam in the colFamToDynamicColumnsMapping before adding it to the cache to ensure that the
[ hotfix ] [ runtime ] remove unnecessary @ suppresswarnings from HadoopOutputCollector and HadoopTupleUnwrappingIterator
added a condition to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and modified table creation logic to
[ 3.0 ] update studentcascade ( instructor ) to be able to delete account with the same email .
added import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest Apache POI library structure
added a check for block ' s block hardness in the LensPiston class to ensure that the obsidian block is not
added a new file LongPointerPressTest3049 . java containing a test class for network error handling to demonstrate the use
truffle : fix inlining for function inlining .
refactor null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy
simplified the indentation check in ListBlockParser and added a new test for deeplyIndentedList in SpecialInputTest to improve code read
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it in ` AbstractOptionalAssert ` to
added JUnit Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue # 1070
simonstewart : remove the global dependency from testcaselogger . savemessage
removed unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is a video format before proceeding to ensure that only video formats are processed
added security property " jdk . tls . disabledAlgorithms " to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for impro
cloudstack - 4892 : do n ' t check local storage pool for local storage ( # 4893 )
updated cache entry retrieval and logging in Driver . java and QueryResultsCache . java to improve clarity of log messages and enhance readability of
added an option to skip updating the model updates after managing dependencies to enhance control over model updates during dependency management
added tests for the ` send ` method in ` ShadowActivity ` and ` ShadowPendingIntent ` classes to ensure that the ` lastIntentSender
replaced GLCanvas with GLJPanel and added FBO ( Frame Buffer Object ) support for OpenGL to improve rendering performance and flexibility in graphics
added synchronization to ` controllerListeners ` in ` HydrawiseAccountHandler ` and ` HydrawiseControllerListener ` classes to ensure thread safety
added JUnit @ BeforeClass annotation to TestCoreAdminApis . java to ensure that EasyMock does not work with Java 9 to avoid
updated year retrieval logic in TimestampUtils and added DateTimeFormatter for local date formatting in SetObject310Test to improve accuracy of date representation and enhance
[ jabber ] fix potential npe when connect to jabber
updated the parameter name from " committed . ws _ table " to " cur _ ws _ commit _ id " in TxnHandler . java to
replaced ` ByteChunk ` with ` ByteBuffer ` for buffer management and updated buffer handling logic to improve performance and error handling for buffer overflow scenarios
added a method ` toSync ` to ` AsyncUtils ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest `
added ActionGraphBuilder to multiple compiler factory classes to support action graph building in the build process
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to ensure that hidden file inputs are
removed unnecessary try - catch blocks in SQLManager . java to streamline error handling by eliminating unnecessary stack trace printing
added a check to return the local Maven directory if the specified file does not exist to ensure that the correct Maven directory is used for the build
ggb - 1349 make sure the label be visible if it start with hIDDEN _ prefix
fix : fix npe in ctelementimpl # getmetadata ( )
replaced ` setFlags ( ) ` with ` addFlag ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` in ` Default
added a check for ` cached . isSortedById ( ) ` in ` EntityIterableBase . java ` to ensure that reordering is only
updated error message for missing method call in Reporter . java to improve clarity of error reporting for missing method calls
added a null check for backupFolder before logging its expiration log message to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that implements a test method for ` ArrayNewInstanceOfVoid ` to test
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to enhance rule key management for better rule key
added a constant for PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability by using a constant for timeout
add sampling method to prometheusmeterregistrytest , PrometheusExemplarsSample , and PrometheusMeterRegistryTest , and Prometheus
added @ Ignore annotations to multiple test classes related to MongoDB server requirements to ensure tests run with the correct MongoDB server requirements
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test for consumeuncompressed
updated the condition to check for artifical tables instead of name to improve accuracy in determining if a table is artifical
refactor file status checks in FileOutputCommitterContainer and LaunchMapper classes to improve clarity and correctness of file handling logic
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and prevent potential null pointer exceptions
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replaced direct calls to ` _ stopping ` with ` CountDownLatch ` for better readability to improve code clarity and maintainability by
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14263 : camel - defaultmessagehistory now use the current time instead of the current time
refactor exception handling in DelayedMonoPublisherTest to use lambda expressions for better readability to improve code readability and maintainability by
replace assertTrue with a fail assertion for WebSocketHandshakeException in WebsocketTest . java to improve error handling by providing a clearer failure message
updated the ` AllAppsTransitionController ` class to implement ` View . OnLayoutChangeListener ` and refactored the onLayoutChange method to
refactor logging statements in PolicyBasedAuthenticationManager . java for consistency and clarity to improve code readability and maintainability
int - 1188 add default - output - channel attribute to xpathrouter parser ( spring - integration - xml )
replaced int cacheSeconds with String cacheSeconds in MessageBundleProperties . java and updated cache duration handling in CasCoreWebConfiguration . java to
updated the " openapi : ' 3.0 - rc1 ' - rc1 ' to ' 3.0 . 0 ' in multiple
added a call to append ( buffer , true ) in ByteBufferPool . java to ensure that the buffer is properly appended to the buffer
added a method to check if alt - rt . jar is detected and implemented a warning message to ensure that tests are skipped when alt - rt
updated user deletion queries in JdbcScimUserProvisioningTests . java to replace " jo " with " upper " and " jonah
replaced ` Arrays . asList ` with ` ArrayList ` and added ` UnlockDiagnosticVMOptions ` in ` FlightRecorderProfiler . java `
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified video drop handling in ` WebcamInput
added a condition to check if the content view has the content before processing the buffer to ensure that the buffer is only processed when the content view
refactor AtmosEndpoint class for improved clarity to enhance maintainability and readability of the code
added " printf " to the targetMethodName condition in Java2TypeScriptAdapter . java to ensure proper handling of print statements in TypeScript
added a new file TestCapacityUntilGCWrapAround . java to verify that increasing metaspace capacity does not cause wrap around on 32 - bit
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
added a check for timestamped at start in the SamplingStatCalculator to ensure accurate tracking of resource timestamps during processing
added unit test for error handler advice with mock file .
do n ' t throw an exception if icc _ profile chunk number be invalid .
fix terraform rood reequip animation ( fixes # 349 )
added a check to ignore entries before registering beans in JoobyModule and SpringModule to optimize bean registration by avoiding unnecessary dependency injection
[ java ] remove context / loader rule from contextrules . addaddcreate ( )
add nameupdater . properties file to the nameupdater . properties file to ensure that the namemap entry is not already defined
[ iotdb - 4892 ] add start ( ) method to ellipsoidregionselector . start ( )
updated URLs in JavaSEPort to use HTTPS instead of HTTP to enhance security by using secure connections
[ geos - 6560 ] fix npe in getfeature . getfeature ( )
updated the null check for the grantor variable in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential NullPointerException
added GraphicsConfiguration and GraphicsConfiguration imports and modified image handling in DiagramGenerationTest . java to ensure compatibility with different graphics configurations and improve image
added a null check for sidedDelegate in FMLCommonHandler . java to ensure stability by preventing application crashes due to missing
refactor DataUtilities , ReTypeFeatureReader , and ReTypeFeatureReader classes to improve code organization and maintainability
use asserttask instead of countdownlatch in locktest . testlock ( )
added a method ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class to enhance tokenization functionality for better string
refactor error handling in CoyoteAdapter to use sendError instead of sendError to improve code clarity and maintainability by using a more d
refactor command handling in SystemHighlighter to improve command parsing logic and enhance clarity in command highlighting logic
updated VERSION and VERSION _ DATE from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and " PENDING
updated buffer position calculation in StarTreeRecordStoreCircularBufferImpl . java to include dimensionSize parameter to ensure correct buffer positioning based on
added drag - and - drop functionality to the QuickstepTestInformationHandler and SystemUiProxy classes to support drag - and - drop functionality in
[ fc - 1349 ] allow socketappender socket option to be run only on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to enhance security
updated the method of setting the description to use getLongDescription ( ) instead of getText ( ) to improve clarity by using a more descriptive
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ScimGroupMember value
added support for schema scoping in HqlQueryRenderer and updated test cases in HqlQueryRendererTests to enhance query functionality and ensure correct
corrected the spelling of " d " to " s " in the ObjectHelper . requireNonNull method to improve code readability and maintain consistency
refactor Parser class for improved readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and modified the logic for handling track selection to enhance
pdfbox - 4892 : fix typo , a suggest by valerybokov
[ hotfix ] [ table - planner - blink ] remove unused getmonotonicity method
added equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and hashing functionality in the application
added a condition to check if the assistant is notLaunchedAssistant before proceeding to ensure that the assumption is only processed when the assistant
added a new file SolarisShortDSA . java that implements a DSA key generation method for Solaris to validate the
added a method to toggle search label behavior in ListFragment to improve user experience by disabling search label functionality
cloudstack - 4892 : do n ' t attempt to create a snapshot if the volume do n ' t exist
refactor FileDetailActivity to use DetailsServiceConnection instead of ServiceConnection to improve resource management and prevent potential null pointer exceptions
refactor exception handling in HttpClientTLSTest to use AtomicReference for improved clarity to enhance code readability and maintainability by using
removed the equals method from ConjunctionScorer . java to simplify the code by eliminating unnecessary complexity
added a null check for ` v ` in ` Launcher . java ` to log a message when binding items fails to improve error handling and
add a random timeout for getraftgroupids operation ( # 11818 )
updated cache size calculations and added a timing warning in DefaultCache . java to improve cache management efficiency and provide clearer logging for cache shrinking
updated API paths from " / api / v2 " to " / api / v3 " across multiple files to reflect the new API version
added a method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the size is zero
added Optional imports and updated test cases in AsyncPageReader and TestDrillParquetReader to improve null safety and address DRILL -
updated the ` buildChannelName ` method to accept an additional ` SubscriptionType ` parameter and added validation for the ` accountSubscribe ` subscription type
disable charging animation when an item be charging on top of a mana pool .
[ java ] improve error message in cluster node restart test .
added error logging for InterruptedException in WaitForHelper . java to improve error handling and logging for better debugging
replaced conditional checks for directory creation in DefaultServletTest . java to improve test reliability by avoiding unnecessary directory creation checks
replaced direct calls to ` stylesProvider . openScreenStyle ( ) ` with ` stylesProvider . dialogStylesScss ( ) ` to
replaced String with FileResource in BaseLiquibaseTask and DBDocTask classes to use FileResource instead of String to improve type
updated the equality check in BlockWorldVector to use getX ( ) and getZ ( ) methods instead of getX ( ) to improve accuracy in determining
refactor LongConcurrentLRUMap to improve code readability and enforce immutability to enhance immutability and enforce immutability of
added regex handling for resource configuration in ReflectionProcessor . java to ensure proper parsing of string literals in resource configuration
updated cache retrieval logic in FileCredentialsCache . java and modified ccache initialization in EmptyCC . java and EmptyCC . java to improve cache
corrected the spelling of " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure
fix ( eth ) : check if there be enough peer for the fast sync downloader
fix issue with sessionloghandler . attachtocurrentthread do n ' t call attachtocurrentthread
mondrian : do n ' t expand " AreEqual [ X , Y , Z , W ] format expressions to avoid unnecessary expansion
added a condition to clear pending rendering operations when the implementation is minimized to ensure that pending rendering operations do not exceed a maximum of 2
hazelcasttestsupport : do n ' t use sleepmillis if the deadline be n ' t pass
fix writebehindwritedelaytimewindow bug ( # 11818 )
added a call to set the icon of a JLabel in GroupTreeCellRenderer to reset the icon for better UI consistency
updated test method names from ` testRedirectMatches _ strict ` to ` testRedirectMatches _ default ` and ` testRedirectMatches _ nonstrict
refactor ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test coverage for shutdown behavior to enhance code clarity and ensure proper
refactor fill rate calculation in RandomAccessStore . java for improved readability and maintainability to enhance memory management and ensure correct fill rate
refactor fields caching and error handling in Json . java to improve code readability and maintainability by encapsulating field retrieval logic
[ hotfix ] [ runtime ] move componentclosingutils to futureutils . ortimeout
cloudstack - 4892 : do n ' t crash when vm be destroy during snapshot creation
fix ipv6 range check in configurationmanagerimpl . java ( # 4566 )
updated variable names from ` userDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` for consistency to improve code readability and
increased the timeout for fetching leader retries in CollectionsAPIDistributedZkTest . java to allow more time for leader retries to
updated error message formatting to use ` Exception ` instead of ` string ` across multiple parameter classes to improve code readability and maintain consistency in error
updated drawing parameters in URLImage . java for improved rendering accuracy to ensure proper rendering of images with negative coordinates
updated the condition from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure the
refactor code to introduce a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by encapsulating
[ hotfix ] [ stream ] add exception to streamconfig
refactor Preprocess . java to use StringBuilder for tag expansion and improve character handling to enhance performance and maintainability of the code by reducing
reformatted the ` read ` method signature in ` MessagePack . java ` to improve code readability and maintainability
added a new annotation ` Mapper ` that implements a ` @ Target ` interface in the ` org . apache . ibatis . annotations `
jsonparser : do n ' t encode empty extension list if there be no fhir comment
updated artifact parsing and added null checks for metaEntry in LibraryManager . java and LibraryManager . java to ensure proper handling of artifact entries and
added alias for " node _ popup _ scripting " in ScriptingMenuEntryVisitor . java to enhance the functionality of the scripting menu
updated OverviewActionsView and RecentsView to improve visibility handling for tablet devices to enhance user experience by providing smoother transitions on
camel - 14284 : camel - jms should use classcastexception instead of uncheckedcastexception
updated method signatures in multiple Java files to improve code readability and consistency
deleted the ` AbstractDelegatedVerb ` , ` FailureContext ` , and ` FailureContext ` classes to remove obsolete code that is no longer
changed ` __ content ` and ` __ contentETag ` variables to ` __ micro ` and added a new ` MicroServlet ` class to enhance
replaced ` getAndAdd ` with ` getAndAddRequest ` in ` OnSubscribeRedo ` and added a new test for repeat and distinct
added logging functionality and improved message formatting in SpeedmentImpl . java to enhance debugging capabilities and enhance code readability
added a new file ` LoadDSpaceOAIConfig . java ` to load configuration parameters from the servlet context to facilitate the
hbase - 22387 storescanner . scan ( ) do n ' t reset the matcher row if it ' s not match
camel - 14263 : camel - spring - boot should disable jmx if need
added a constant for the CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java and modified sourcePath handling in SourceCodeDisplay . java
added YARN binary handling and app info printing in HiveConf and RemoteSparkJobMonitor classes to enhance user experience by providing app information for
added support for " maria " database name in DbConnectionManager to ensure compatibility with both MySQL and Maria database names
updated log message format in SplitLogManager . java and modified time calculation in SplitLogManager . java to improve clarity of log output and
added a new file ` ExecuteAndReturnStringTest . java ` to test network error handling in the Codename One framework to ensure proper
added a new file ` InvokespecialInterface . java ` that implements interface methods to demonstrate the use of invokespecial and
rename EvictingBoundedList class to improve clarity and consistency to enhance code readability and maintainability
use setencodingmanager ( ) instead of setencodingmanager ( ) for turncosts = true
added a null check for backgroundDisabled in SelectBox . java to ensure selection is valid and prevent invalid selection values
added a null check for the header ' s method name in RpcServer . java to ensure that a UnsupportedOperationException is thrown when the method is not
updated the calculation of hotseatCellSize and hotseatIconCenter in TaskbarViewController . java to improve layout responsiveness
refactor key comparison logic in ExpressionTree . java to use ` values . get ( " partitionColumnIndex " ) ` instead of ` substring `
add a Versioned interface to NamedTaskDecorator and update task definition to support version 4.1
updated the method call to retrieve the new index directory to ensure the correct index directory is used for replication operations
changed the ` equal ` variable from false to true in ` DisplayModeTest . java ` to ensure that the ` isDisplayModeEqual `
updated UnicodeToLatexFormatter to handle high - character Unicode characters and added a new test for formatting high - character Unicode characters to ensure proper
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 557 :
added a lastFrame map and modified the handling of window handles in WebDriverBackedSelenium . java to ensure that the correct window handle is
added clear button functionality to the StringSearchPanel , BookmarksPanel , and DataBrowser classes to enhance user experience by allowing users to clear all
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building full request URLs to improve code readability and maintainability by utilizing
replaced instances of ` new Date ( 0 ) ` with ` parseDatetime ( 1999 - 12 - 31T23 : 59 : 59
updated the ` adaptOrders ` method to include a ` reverse ` parameter and modified the order adaptation logic to enhance order adaptation by allowing
added a null check for the tree ' s vartype in PrettyPrinter . java and created a new class Java11Var . java with a test
simonstewart : remove unused import from test
updated configuration initialization to false and removed debug logging in HiveConf . java to simplify configuration handling by eliminating unnecessary logging
changed the method call from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to streamline the drawing process for better
added unit test for filesplitstreamingwithchoice
replaced ` Globals . CATALINA _ BASE _ PROP ` with ` Context . getCatalinaBase ( ) ` across multiple
added tests for the getBestDateTimePattern method in ShadowICU . java and modified the return statement in ShadowICU . java to ensure correct
added a new style for PlotSquared color codes and updated the HashMap initialization to include additional color information to enhance the visual representation of the PlotSquared
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility by allowing
tika - 2892 -- add test for timezone . getdefault ( ) in fontparsertest
added new file ` SampleApplication . java ` and modified the ` getBuildTime ` method in ` BuildInfoMojo ` and ` BuildInfo
updated the calculation of the xDist to use the absence of mScroller ' s getCurrX ( ) to ensure xDist is
deleted the GUIRWTester . java file to the functionality was deemed unnecessary or redundant
removed nullable declarations from the countPlaceholders method in multiple classes to simplify method signatures and improve code clarity
updated error message format in TestStream . java for clarity to improve readability of the message for better debugging
thymeleaf : move thymeleaf . templateparser . markup to thymeleaf . templateparser . markup .
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated test cases in ` XPathTest . java `
added @ Nullable annotation to FutureUtils . java to indicate that the method may return null values
added a warning message for dynamic invocations in OnFlyCallGraphBuilder . java to inform users that InvokeDynamic is not resolved during graph construction
updated email references from " gmail . com " to " myfakeemail @ gmail . com " and " myrealemail @ example
updated HTTP response formatting in HttpConnectionTest . java and modified URIUtil . java to improve code readability and maintainability
added a method ` getColumnDataType ` to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way
added default method to AsyncClientInterface , SyncClientInterface , and AwsClient interfaces , and updated serviceClientConfiguration methods to throw UnsupportedOperationException to provide
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
replaced ` System . currentTimeMillis ( ) ` with ` Instant . now ( ) ` and updated time handling in ` Statistics . java ` to
refactor version handling in LibMediaInfoParser to use a regex pattern for better compatibility to improve code readability and maintainability by using a
added a new method ` IdeaDependencyMethodInvocationHandler ` to create a proxy for ` IdeaDependency ` to improve proxy creation for dependency
added a new class SerialHeap and modified the heapConstructor mapping to use it to facilitate the use of the SerialHeap class for
added multiple @ SuppressWarnings ( " serial " ) annotations to the $ Gson $ Types . java file to suppress unnecessary warnings related to serialization
use mouse position instead of mouse . getposition ( ) instead of mouse . getposition ( )
updated the ` addAppropriateLikeRegexTo ` method to handle null values and added a new test for ` findByFirstNameIgnoreCase
[ hotfix ] [ table - common ] [ table - common ] add multisettypeinfo class
added the ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure
added a check for delimiters in CMapParser and modified the parsing logic in CMapParser to improve handling of delimiters and ensure proper parsing of
added operations service connection handling and service binding in ContactsBackupJob . java to improve service management and ensure proper handling of operations during backup operations
refactor constraint handling in ` ForAll ` and add new classes ` T6938454a ` and ` T6938454b `
added a new method ` isConfigHidden ( ) ` in ` AccountList . java ` and modified ` AccountID . java ` to include
added logging for inconsistent number of display states in DisplayController . java to improve debugging and traceability of display state changes
updated schema removal logic in PMetaDataImpl . java and added a test case in PMetaDataImplTest . java to ensure that the schema is
ggb - 1349 add support for ` ` loginpassive ' ' and ` ` loginpassive ' '
added a new class ` Box2DTest ` and updated ` GDXTester ` and ` Box2DTest ` to use it to
patch by jbellis ; review by brandonwilliams for cassandra - 113
updated DEFAULT _ BUFFER _ REQUEST _ TIMEOUT from milliseconds to minutes in HybridShuffleConfiguration . java to improve buffer request timeout duration for better
added default generator name and version constants to SpeechClient and SpeechSettings classes to enhance code clarity and maintainability by centralizing generator
added a help button to the OpenOfficePanel and modified the display of the help text to enhance user experience by providing quick access to the help
[ java ] use child option for TCP _ NODELAY and TCP _ NODELAY in multiple classes to ensure proper handling of
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeServiceRaw to
refactor class reference handling in ScanResultObject . java to improve clarity and efficiency to enhance code readability and maintainability by reducing
refactored error handling in DecodeServlet . java for improved readability and maintainability to enhance code clarity and maintainability while ensuring
[ datajpa - 539 ] add querydsl . toquerydslnullhandling ( ) method to querydsl .
added null check for actor in ParallelAction and SequenceAction classes to ensure proper handling of actions when the actor is null
test ( cttypetest ) : fix typo in test ( # 2296 )
added synchronization to the sfWriters lock in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and a corresponding test class ` JJ ` and ` JK ` to implement
added support for revocation of an existing agent certificate in the certificate manager to enhance security by ensuring the correct agent certificate is revoked
added a check for " 304 " responses in AbstractHttpTest and implemented a test for writing body after no body codes to ensure proper handling of
added null checks for script text and language in ScriptTransformer . java to ensure compatibility with Java 6 and above to improve error handling and provide clear
added a new connection pooling type " DBCP " and modified connection pooling logic in HiveConf and TxnHandler classes to enhance database connection
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added methods to filter and unlock file locks in FileMenuFilter and OCFileListFragment to enhance file locking functionality and improve user experience
refactor Version class to improve code organization to enhance maintainability and readability of the codebase
clear endpoint cache when update keyspace
refactor the ` waitForState ` method to use a new ` waitForState ` method to improve code readability and maintainability by reducing
updated method signatures in SkylarkDescription , SkylarkRuleContext , and SkylarkDescriptionArg to use Sky
simonstewart : move localstorage and sessionstorage interface into a new interface
fix nullpointerexception when create or replace view
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by catching all
added a null check for the query string in SpellCheckComponent . java to ensure the application handles cases where the query string is not provided
added validation for header values and improved error handling in Headers . java to ensure header values do not contain illegal characters and whitespace
updated instance size and array base offset handling in HybridLayout . java and HostedInstanceClass . java to improve clarity and accuracy in
[ net . sourceforge . pmd ] add experimental annotation for setcontainscomment ( )
hhh - 15836 - log fetch timing for join association with ` fetch = join ` and ` lazy = true ` fetchtype .
refactor NoGetOperationsFilter , NoUserOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter
added assertions to verify database and table names in TestCompactionTxnHandler and set database name and tab names in TxnHandler to ensure that the
camel - 16462 : added timergracefulshutdowntest to make it easy to test the graceful shutdown of the timer
added a check to ensure traces are only added if the block is processed before adding to the list to avoid adding duplicate traces to ensure traces are
updated ProviderManager to check for null elements and added new test cases in ProviderManagerTests to ensure proper handling of null values and improve test coverage
removed the conditional check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code for better readability and maintainability
added tests for local index filtering and modified page filter handling in multiple classes to improve test coverage and ensure correct handling of local index limits
added a check to prevent adding a collection with the same name with a different type in AlterTableStatement to ensure data integrity by preventing
updated cursor handling logic in VDUBuffer . java and vt320 . java to ensure correct positioning and positioning of the window based on
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to simplify the code by eliminating unnecessary constants
updated the VERSION _ NUMBER string in JavaVersion . java and added a new test for JavaVersion . parse in TestJavaVersion . java to
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
added a new test method ` test ( ) ` to the ` TestReceivingMessageSourceParserTests ` class to facilitate testing
added a null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties is null
updated IOException handling to include the cause of the original exception to improve error reporting by providing more context on the original exception
refactor multiple Java classes to improve clarity and consistency to enhance code readability and maintainability
added a new TxConfidenceListener instance and removed it from the TxIdTextField to streamline the code by eliminating redundancy
[ netbeans - 4892 ] add support for ` ` G1 Perm Gen ' ' in jmx support
removed unused imports and simplified return statements in NearbyController . java to streamline code and improve readability by eliminating unnecessary complexity
pdfbox - 4892 : make pdfcloningutility public , a suggest by valerybokov
added import statements for TaskInfoCompat and updated activity type checks in BaseSwipeUpHandlerV2 . java to ensure proper handling of home
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update variable names to improve clarity and consistency in naming con
updated method names from ` shouldGiveNetworkCountryIso ` to ` shouldGiveNetworkCountryIsoInLowercase ` and modified return values
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator . java to streamline the code by eliminating unnecessary
[ java ] fix typo in javadoc
simonstewart : use common utility for copy directory in firefoxprofile
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class for improved readability to enhance maintainability and facilitate future updates
replaced ` keyValue ` with ` addMultiFieldOperation ` in ` Update ` and added multiple test cases in ` MongoTemplateTests ` to
added null check for randomUUID before setting hubChangeLog ID to avoid potential NullPointerException when randomUUID is null
added hover event handling methods in InputConsumer and OverviewInputConsumerProxy classes to improve responsiveness to hover events in the user interface
updated the initialization of ` boostrapConf ` in ` CoreContainer . java ` and added a check for ` zkRun ` and `
camel - 14263 : camel - netty - shared - http : fix typo in camel - netty - http
hbase - 16400 hbase : increase client retry limit for hbase test ( # 2641 )
updated the file path resolution logic in SourceSnippetHelper . java to ensure consistent file path formatting across different operating systems
make encodedgraphcachetest more robust
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added functionality to adapt and adapt the scale of Kraken assets in the KrakenAdapters class to enhance currency tracking capabilities for the K
added a ` toString ` method to ` AnyOf ` and created a new test class ` AnyOf _ toString _ Test ` to provide a
updated the handling of email names in AlertTaskRunnerV2 . java to include dimensions to ensure that email names are correctly formatted based on the
[ beam - 8470 ] add check for non - blank measurement and database in influxdb publisher
rename ` doTransform ` methods to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming conventions
updated address filtering logic in NetUtils . java to include unique local addresses to enhance address uniqueness checks and improve code readability
refactor column name handling in DataTextFormatter to use a new method for retrieving quoted column names to improve code readability and maintainability by
added methods to set system properties and methods in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance property management capabilities and improve method
added a constructor to the UpdateRequest class to allow instantiation of UpdateRequest with a specified URL
refactor enum declaration in multiple Java files to improve code readability and maintainability
added a warning message for experimental format in DataImportHandler and ReplicationHandler to indicate that the response format is experimental in the future to inform users
updated logging message format in JpmsUtil . java to use a new method ` format ` to improve readability and maintainability of the
bug fix : add a default label font to the table .
[ hotfix ] [ network ] fix defaultbrokerheartbeatmanager # onbrokeractivemanager # onbrokerheartbeat ( )
added initial variables for mean and partition size and partition count in CqlInputFormat . java to improve code readability and maintainability by redu
simplified the conditional check in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper comparison and hashing functionality for instances of RuleTerminalNodeLeftTuple
added StageIDsRearranger handling in TezCompiler to ensure proper resolution of physical contexts based on configuration settings
update jmx name to use net instead of concurrent
refactor memory consumption logic in LotsOfOutput . java to use a variable for better readability to improve code clarity and maintainability
added import statements for Document in multiple classes and introduced a hashCode method in various classes to improve code clarity and ensure consistent hash code generation across
polish ` ` anonymous - read - only ' ' property in ldapautoconfiguration
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the visibility of the @ RunWith annotation from public to private in ExampleEchoPipelineTest . java to restrict access to the @ RunWith
added an ` finishMocking ` method to ` MockitoSession ` and updated its implementation in ` DefaultMockitoSession ` , and added
refactor dependency handling in GoTestDescription and add new test cases in GoTestIntegrationTest to improve code clarity and ensure correct functionality of
replaced ` NIOBuffer ` with ` readBuffer ` and ` writeHandler ` in ` SPDYAsyncConnection ` and ` HTTPSP
updated BlockLiquidWrapper to use getFlowingBlock instead of getStaticBlock to improve clarity and accuracy in block handling
updated ` AndroidLocationPlayServiceManager ` and ` BackgroundLocationHandler ` to use ` Uri . parse ` for the " backgroundClass " intent
[ java ] fix typo in aprendpoint . java
[ hotfix ] [ flink - core ] add support for streamingplan in cli frontend
update CraftingManager . java to use a more appropriate hash calculation and update hash calculation logic to improve accuracy of CraftingManager . java and
[ hotfix ] [ test ] fix flume - connector - kafka test failure
simplified whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern for matching pg _ temp _ . * in NeuteredLinesFilter . java to enhance filtering capabilities for temporary pg files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added conditional checks for " INTERVAL " and " NCLOB " data types in DataTypeFactory . java and ColumnSnapshotGenerator . java to
added a method to check if the WavefrontTimer isPublishingHistogram and updated metrics handling in WavefrontDistributionSummary and WavefrontMeterRegistry
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to use ` springCloudSelector
added a method ` registerListener ` to the ` ShadowSensorManager ` class to provide functionality for registering sensor events
added methods to test full method and URI in SelectChannelServerSslTest to ensure proper handling of socket exceptions during SSL connection testing
camel - 14263 : camel - ignite should not close the ignite component if it ' s not null .
updated print statements in AbstractClient . java to handle empty set cases to improve clarity of output when no line numbers are provided
pdfbox - 4892 : return false for unsupported flavorexception instead of ioexception
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure that the ` setDisplayHdrCapabilities `
added a finally block to reset classLoader in JavacInMemoryStep . java to ensure classloader is reset to avoid potential memory leaks
enhanced error messages in SemanticAnalyzer and added a new toString ( ) method in SemiJoinHint to improve debugging information and provide clearer
added a constructor to the Message class to facilitate instantiation of the Message class
added a boolean variable ` isGUIClass ` and refactored priority logic in ` SerializableIdiom . java ` to improve class handling
updated PhoenixDecimalObjectInspector constructor to accept PrimitiveTypeInfo and adjusted precision scaling logic to ensure proper handling of decimal types and improve precision
updated CompressionFilterTestServlet and CompressionServletResponseWrapper to use OutputStream instead of GZIPOutputStream and added a check for response ' s committed state to ensure
renamed ` WWWAuthenticate ` to ` authenticateHeader ` and updated related methods in ` Authenticator . java ` to improve clarity and consistency
removed conditional checks for " EJS " , " _ " , and " org \ \ omg \ \ " in DCD . java
added a method to retrieve the thread group name in ThreadLeakTest . java to improve thread management by providing a more descriptive name for
added logging functionality and improved exception handling in MethodInvocationPrivilegeEvaluator . java to enhance traceability and debugging capabilities during security checks
rename ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` in ` Dmo
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
cloudstack - 4892 : add iso volume to the storage pool if the user be a iso disk
simplified the signal handling logic in SigInt . java and updated test assertions in SigIntTest . java to improve code clarity and
replaced ` ArrayUtils . isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to utilize ` ArrayUtils . isEmpty `
updated import statements and added Spring Boot test configuration in AxonAutoConfigurationWithSpringCloudTest . java to ensure compatibility with Spring Boot features
refactor ColorRGBA class to improve clarity and consistency to enhance code readability and maintainability
[ solve ] remove deprecate planningentityselector . uninitialize ( planningentity )
added a new method ` setBuildTimeMs ` to the ` TwoLevelArtifactCacheDecorator ` and ` CachingBuildRuleBuilder ` to
refactor field handling in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) to improve type safety and ensure correct row size calculation
added null checks before adding block appearance in Wallet . java to avoid potential NullPointerExceptions when the block is null
added support for CNC currency pair in BTCEUtils and updated TickerDemo to use it to enhance trading capabilities for CNC
updated skewAllowance from 5 to 15 and modified related classes to improve flexibility in managing skew allowance based on service settings
updated sorting options in SongListActivity and Utils to use SortName instead of null to improve sorting functionality by using a more descriptive sort
removed unused imports and simplified the readBodyToBytesIfNecessary method in Utils . java to streamline code and improve readability by eliminating unnecessary
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` in multiple block classes to replace ` BaseBlock ` with ` LegacyBaseBlock
updated IcebergBranchExec to check for tag existence before retrieving snapshotId to improve error handling by throwing an exception for non - existent tags
replaced ` newArrayList ( ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java `
refactor PhotonMappingDemo to use glGetProgramResourceIndex for bounce count and frameNumber in HybridDemoSsbo
added validation for requirePasswwordChangeRequired in IdentityProviderEndpoints and improved logging for unsupported operations to enhance error handling and provide clearer
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that uninitialized fields are not initialized in constructors
refactor error handling in JdbcExecutor to include connection URL based on connection state to improve clarity in error reporting for SQL execution failures
added unit tests for the ` @ requiredBody ` method in ` SpringmvcClient . java ` to ensure that the ` @ required
updated regex patterns for user and password patterns in CredentialInjector . java and CredentialInjectorTest . java to improve pattern matching accuracy for user and password
added " Item4 " to menu items in ActionListenerCalledTwiceTest . java to support additional menu items in the application
updated test assertions in TestCoreParser . java to check if results are produced before proceeding to improve clarity of test results and avoid unnecessary
updated equality check from ` id ` to ` id ` in ` SimpleNode . java ` to ensure correct equality check for child instances
changed the access modifier of PopulatorContextStackItem from public to package - private to allow access to PopulatorContextStackItem from other packages
changed the return type of ` numDocs ` from ` int ` to ` long ` and added a test for small sample from corpus to
reformatted code in QuestManager . java for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ test ] move networkbufferpooltest to testlogger
updated the append method call in MongoSessionDataStore to use ` append ` instead of ` append ` in ` MongoSessionDataStore . java ` to
added a new MacroSubstitution annotation for CustomizedUnsafeLoadMacroNode in CompilerDirectivesSubstitutions . java to enable unsafe retrieval of long values from
updated time zone data from ARAST to EET in multiple Java files to reflect the correct time zone structure for accurate time representation
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct severity of the logging message
hhh - 14663 - handle jdbcexception in sessionimpl . getaccesstransaction ( )
added null check for suffix and improved string concatenation logic in DownloadExternalFile . java to enhance robustness by preventing potential null pointer exceptions
disable screen menu bar for macosx
[ geogebra ] add test for piecewise integration
changed access modifiers of STATE _ SCREENSHOT _ CAPTURED and switchToScreenshot methods in BaseSwipeUpHandlerV2
added a new test method ` modWhiteListPattern ` to modify ` Hive . metastore . uris ` from ` other ` to ensure
removed invalidClasses entry from EntryLoader . java to streamline code by eliminating unnecessary duplicate entries
updated the method call from ` Team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure
updated the domain parameter from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the
added nullable validation logic to ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` MissingTableChangeGenerator ` classes to
refactor multiple security token - related classes to improve code organization and maintainability to enhance maintainability and readability of the security token management
added a delete query in CustomCollectionTest . java and modified references in CompositeIdRouter . java for improved readability and consistency to enhance
added snapshot handling in ExecutablePreparedStatementBase and updated blob change log handling in PostgreSQLIntegrationTest to improve compatibility with PostgreSQL ' s snapshot management and ensure
updated conditional checks for max _ cached _ files and max _ cached _ file _ size in DefaultServlet . java to ensure proper handling of cache
added drag - and - drop functionality to the JabRefFrame class to enhance user interaction by enabling drag - and - drop functionality for
updated description creation to use Description . createTestDescription for clarity and consistency to improve code readability and maintainability by using a more d
replaced ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( myVersion ) ` and ` buildTimeString ` in ` CommandLineUtils .
changed access modifiers of methods from public to package - private in TimeUtils and TimeUtilsTest classes to allow access to these methods from other classes
updated security frame and injected invokers checks in RefectionMHTests and RefectionMHTests to ensure compatibility with newer JDK versions and
updated file extension check from " . jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with file extensions in
updated method handling in NativeImageDebugInfoProvider to use JavaName conversion for HostedMethod to ensure correct Java name generation based on method type
added Icon methods to load and set the icon in Data , Data , and DataTableTopComponent classes , and modified visibility settings in DataTableTopComponent
added a null check for the last occurrence of the name substring in CounterRequestAggregation . java to avoid potential NullPointerException when retrieving the name
updated the replacement logic in FindAndReplace . java and added a new test for dollarsignsTolerated in FindAndReplaceTest .
smack - 5222 : do n ' t need to check if the connection be an instance of the class
refactor SchemaExtractionProcessor class for improved clarity to enhance maintainability and readability of the code
added a new method ` copyDir ` to ` IO ` and refactored the ` copyContents ` method in ` SpecWebAppTest
added exception handling for unknown datum class in JacksonUtils to improve error reporting for unknown datum classes
refactor ABI handling in DefaultJavaLibraryBuilder to utilize HasJavaAbi ' s library target retrieval to improve code clarity and
simplified height adjustment logic in SelectBox . java to improve code readability and maintainability
added dbName and tableName normalization in ObjectStore . java to ensure consistent formatting of identifiers for database and table names
updated database type check and schema initialization in DbSqlSession . java to ensure correct schema is used when Oracle database is used
removed the Logout method from HomeFragment . java to simplify the response handling by eliminating unnecessary logout logic
[ hotfix ] [ test ] update mockstreamingruntimecontext to 1 ( # 1337 )
added null check for candidates in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
added a check for managed beans in ContainerLifeCycle and updated assertions in ContainerLifeCycleTest to improve clarity and correctness of bean management
rename ` ` iexecutionattributesdialect ' ' to ` ` iexecutionattributedialect ' '
added a call to clearUnsafe ( ) in AlterTest . java to ensure metadata is reset before tests are executed
added null checks for loc in CmdGetTime . java to avoid potential NullPointerExceptions when loc is null
added null checks for measurement in multiple classes and created a new exception handler in DisruptorQueue to ensure robustness by avoiding null measurement
deleted the Session2Token . java file to the functionality was no longer needed in the project
cloudstack - 4892 : do n ' t delete volume when create a new volume
added a new ` Install ` class and implemented the ` isInstantApp ` feature in ` SystemShortcut ` and ` InstantAppResolver ` to
added a new class ` NullAuthoritiesPopulator ` to ` LdapAuthenticationProvider ` and updated its usage in ` LdapAuthenticationProviderTests `
updated the method to retrieve the ` retrolambdaJarPath ` property and added a check for the existence of ` retrolambdaJar `
changed the method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to streamline the
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve performance by eliminating unnecessary
pdfbox - 4892 : do n ' t handle null result , a suggest by valerybokov
added checks for null and empty authorities in AuthorizeTag . java to ensure that an empty list is returned when no authorities are provided
refactor assertions in multiple test classes to improve clarity and consistency to enhance readability and maintainability of the test code
cloudstack - 4892 : fix typo in error message for vgpu enabled vms
updated class and method configuration handling in RobolectricTestRunner and Config classes to improve clarity and functionality of configuration merging in tests
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to utilize the new socket connector
updated partition key comparison logic in HiveAlterHandler and added test cases in TestHiveMetaStore to ensure consistency between old and new partition keys
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to facilitate easier debugging
updated the condition in SimulationStatus . java from ` isComponentActive ( ) ` to ` isComponentActive ( ) ` to ensure the
replace ` SharedBlockingCallback . Blocker ` with ` Callback . Completable ` in multiple classes to improve code readability and maintainability by
added workspace listener functionality to PreviewControllerImpl and refactored PreviewUIController to use it to improve workspace management and streamline graph building process
updated method and class name checks in ReflectionFactory and related classes to improve clarity and correctness in determining anonymous classes
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the file path format in CatalinaAcegiUserRealm . java to use ResourceLoader for improved resource loading functionality
updated logging statements for server and manager starting in AmbariServer . java to improve logging clarity and ensure proper initialization of server and manager
added null checks for forNode initialization and modify in JSONWriter . java to ensure robustness by preventing potential NullPointerExceptions
refactor the ` run ` method to accept ` FileSystem ` as a parameter and improve user authentication handling to enhance flexibility by allowing users to
added a check to ensure the backgroundManager is not attached before attaching it to avoid unnecessary attachment calls when the backgroundManager is not attached
added functionality to set the current tab in AllAppsTabbed , Launcher , and PagedView classes , and adjusted newY calculation in
added null check for the URL in BaseDataSource and created a test for the typo postgres URL in SimpleDataSourceTest to ensure that the
added JUnit imports and modified PebbleTemplateEngine instantiation in PebbleModuleTest . java to ensure compatibility with newer Java versions and
added EditNameDialog for creating a new directory in FileDisplayActivity to improve user experience by allowing users to create a new directory when the directory
added functionality to toggle bar borders in multiple chart activities to enhance user experience by allowing toggling of bar borders in the chart
updated SSL URI and host from " www . okcoin . com " to " www . okex . com " in OkCoinExchange .
refactor AcceptedForagerTest to use a new factory method for improved readability to enhance code maintainability and facilitate
replaced ` FileChannel . open ( path ) ` with ` SeekableByteChannel ` in ` Files . java ` and added a new
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve code readability and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to clarify the purpose of the ` MockHandler ` class and
refactor conditional statements in SerializationConfigurationParser . java to improve readability to enhance code clarity and maintainability
added functionality to set the watch heap limit for debug devices in QuickstepProcessInitializer to improve performance by limiting the maximum heap size for debugging
refactor counting logic in Collectors . java for improved clarity to enhance readability and maintainability of the code
[ log4j2 - 1349 ] fix npe in abstractloadbundletest
refactor exception handling in PrecompactedRow . java for improved readability to enhance code clarity and maintainability
updated the rendering intent calculation in ICC _ Profile and added a new InvalidRenderIntentTest class for invalid rendering intents to ensure correct rendering
autoconfiguration : close meterregistry on shutdown
change log level from warn to info in configurationutils . getconfigcenter ( )
added error handling for certificate generation in CertificateFactoryTest . java to ensure proper validation of certificate creation and failure scenarios
camel - 14263 : camel - simple - parser should handle ambiguous binary operator . thanks to sergey shelukhin
removed redundant calls to ` onTabUnselected ` in ` EditorActivity ` and refactored focus handling in ` IDEEditor ` to
added user . name to the error log message in AccessLogValve . java to include the user ' s name to improve error reporting by
added null check for getSubmeshnames in OgreXmlLoader and adjusted animTime calculation in SkeletonModelGpuSkinningTest and O
removed the ` throws InterruptedException ` parameter from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
mark the UpgradeResponse class as deprecated to indicate that these classes are outdated and should no longer be used
added support for generating declaration files in JSweet transpilation to allow users to specify the output directory for generated declarations during the transpilation
[ hotfix ] [ kinesis ] add test for kinesis fetch timeout
[ flink - 13535 ] [ datastream ] add html to streamingdataflowworker . timestamp ( )
increased the maximum thread count from 100000 to 1000 in the METASTORESERVERMAXTHREADS configuration to allow more time for metast
changed the return type of the onTaskSnapshotChanged method from void to boolean in RecentsModel . java to enable the method to return
replaced mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is used in the animation
added a new test method ` chainNestingAndAggregation ` to the ` ChainParserTests ` class to verify the functionality of the ` aggregator
updated loop condition to include a failure message in MarketSellAssetActuatorTest . java to improve error handling and provide clearer feedback
make polyglotcontextimpl use interactive source instead of internal source
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of null values to avoid potential NullPointerExceptions
added DisplayController import and updated WindowManagerProxy usage in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController functionality
added conditional checks for root directory in MetalFileChooserUI , SynthFileChooserUI , and MetalFileChooserUIImpl to ensure
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` getDefaultToolkit ( ) . getScreenSize ( ) ` to
changed the type of the recognise method from RecognisedObject to CaptionObject in TensorflowRESTRecogniser and TensorflowRESTCaptioner
refactor JPASQLBase to improve entity handling and add unit tests for fetch results to enhance test coverage and ensure correct functionality of query
removed redundant drag index handling in FreeformFinSetConfig . java to simplify the code and reduce unnecessary console output
update moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to ensure compatibility with the latest features and
updated error message in Runtime . java to include program . spendAllGas ( ) to ensure accurate error reporting for constant setting calls
updated error formatting in multiple classes to use a more descriptive string format to improve readability and consistency of error messages
mark the Weights class as deprecated to indicate that the class is outdated and should no longer be used
refactor unsafe plugins registration to use a separate method to improve code readability and maintainability by reducing duplication
added Hint annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and Sample classes in AndroidBinaryModularIntegrationTest
changed the default value of mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable the center
updated the method call in MigrationRequestOperation . java to ensure the correct execution flow for the migration process
renamed variable ` HOST ` to ` BASE _ URL ` across multiple classes to improve clarity and consistency in naming conventions
changed attribute types from Object to List in WSFederationClaimsReleasePolicy and added corresponding tests in WSFederationClaimsReleasePolicyTests to enhance
updated TestJdbcWithMiniLlap and LlapBaseInputFormat to use " non ascii " instead of " testtab1 " to
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing to ensure correct handling of
added functionality to start a copy mode in ConsoleActivity based on device type to improve user experience by enabling a copy mode when the device is
replaced Escaper with XML parser and refactored the writeXmlOutput method to use a new Writer instance to improve XML handling and
camel - 14284 : fix npe in camel - aggregate - add unit test for empty split
( chore ) camel - core - logging : improve exception message formatting
update package name and import statements for BasicConfigurator , ContextInitializer , and SocketMin in BasicConfigurator , ContextInitializer , and SocketMin classes to
added a condition to check if targetVN has a PHI _ NODE flag before comparing to ensure that targetVN is not equal to
added import statement for SharedStringSource in TestXSSFRichTextString . java to facilitate the use of SharedStringSource
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of a method using an environment
refactor multiple classes related to BoxAndWhiskerCalculator , BoxAndWhiskerXYDataset , and SimpleHistogramDataset to improve code
[ hotfix ] [ test ] migrate testutils to junit 5
changed NormUpdate class to static and modified equality checks in multiple classes to improve performance and correctness of field comparison logic
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict access to the instance variable for better encapsulation
refactor IfStatementTest to use a new PluginDefinition instance and streamline vertex chaining logic to improve code readability and maintainability by
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactored type adapter registration methods in TypeAdapter . java to simplify method signatures and improve code readability
updated the expected size from 12 to 13 in BundledDistributionTest . java to reflect the correct expected value for distribution tests
added a new EXIFReader class and modified ImageProcessingService to handle image metadata processing to enhance image processing capabilities and improve metadata handling
change the access modifier of the ` toStandardUnit ` method from private to NONE and update its return value in ` CloudWatchMeterRegistry ` to
[ drools - 770 ] fix npe in applypmmlmodelcommand and pmml4datafactory . newinstance ( )
improve error message when we receive a repeated CounterCurrencyTransferStartedMessage .
added a check to skip processing if the bubble bar is visible to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 23221 ] fix aarch64 backend crash when a branch target be illegalstateexception occur .
added a try - finally block around the initializeJDKLogManager method in JDKXRLogger . java and created a test for concurrent initialization
added a ` find ` method to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
updated variable names and conditions in TestSSL . java for consistency and clarity to improve code readability and maintainability
[ hotfix ] [ runtime ] fix race condition in sort merge result partition
jmsio : use long . max _ value instead of long . max _ value for read / write
updated the ` queryAllPluginHandlesByPluginId ` method to include a ` type ` parameter and modified the ` queryAllPluginHandlesBy
replaced ` start ( ) ` with ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to
added GLKViewDrawableDepthFormat , GLKViewDrawableStencilFormat , and GLKViewDrawableMultisample in IOSGraphics
refactor login test to use a new attemptLogin method to improve code readability and maintainability by reducing redundancy
added checks for unsupported real ( ) and complex ( ) methods in JniUtils . java to ensure proper error handling for unsupported real ( )
updated condition checks in SynchronizationStatistics . java to use do - while - while - while - while - while - while - while - while
refactor Implements , ShadowPicker , and ShadowPicker classes to improve code organization and maintainability
refactor HTTP / 2 HTTP / 2 configuration options in RestTransportClient and TransportClientConfig classes to improve code readability and maintainability by central
added support for dynamic array types in DynamicStruct and improved type handling in SolidityFunctionWrapper and SolidityFunctionWrapperGenerator to
added a boolean parameter to the getStringProperty method in InlineLayout . java and FontUtil . java to enable flexibility in property retrieval by allowing
added constructors to CopyStep and corresponding test cases in CopyStepTest to enhance constructor flexibility and ensure correct path handling in the CopyStep class
fixed - rsemaphore . acquire ( ) and addpermits ( ) method should be call after addPermits ( ) call . #
camel - 14263 : camel - core - fix npe in camel - core - java dsl test
added a new ` FlavorParser ` class and updated its usage in ` BuildTargetParser ` and ` BuildTargetParser ` to streamline
replace String with ByteString in WitnessScheduleStore . java to ensure compatibility with protobuf data types for witness addresses
added a check for empty resultsMeta before printing it in TestElementsAnnotatedWith . java to avoid printing empty results when resultsMeta is not provided
refactor ConcurrentLinkedQueue to improve node removal logic and introduce a new RemoveLeak class for garbage collection to enhance code clarity and
added a new parameter ` addSpecialTokens ` to the ` encode ` and ` encode ` methods in ` HuggingFaceTokenizer ` to
[ hotfix ] [ runtime ] use Collections . nCopies instead of ArrayList . nCopies
updated chunk data handling in LoadSingleTsFileNode . java to use alignedChunkData instead of pageIndex2ChunkData to ensure accurate data
added a new constant for the session storage context in BrowserSessionStorage and updated view state handling in DuoSecurityMultifactorWebflow
added a test for schema validation in TestJspDocumentParser . java to ensure that schema validation functionality works as expected
added a constructor to TypeAdapter and modified the @ Ignore annotation in ReflectionAccessTest to address deprecation warnings related to Java 17 and ensure compatibility with
truffle / repl : do n ' t throw killexception if the repl debugger be terminate .
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
modified the ` createResourcePolicy ` method signatures and added a new ` rpType ` parameter in multiple classes to simplify the method signatures and improve code
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerExceptions when _ deflaterEntry is null
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests run after each test execution
updated the MD5 compute method to use a normalization method to remove " Unknown " unicode character 65533 " to ensure consistent formatting of MD5
refactor command handling in Example . java to improve null safety and clarity to enhance code robustness by preventing potential NullPointerExceptions
fix warning due to miss @ override or miss @ params in javadoc . in basicprofilerstate and
updated JSON parsing logic in MongoTemplate and added a test for saving JSON strings in MongoTemplateTests to ensure correct serialization and deserialization of DBObject
added functionality to check for multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure correct handling of remote addresses in
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` in ` JsLibrary . java ` to improve type safety
refactor CookieManagerTest to use a static method for retrieving the host address to improve code readability and maintainability by centralizing address retrieval
refactor GlyphLayout and BitmapFontTest to improve glyph processing logic to ensure proper resource management and avoid potential memory leaks
added a method to pause or resume splits in PulsarSourceReaderBase and implemented it in PulsarPartitionSplitReaderBase
added support for the HIVESCRIPTID environment variable in HiveConf and implemented it in ScriptOperator to enable dynamic execution of script operator IDs in
refactor the ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` for improved performance and readability to enhance performance by
added a new action class ` UseSeparateStepSizeAction ` to handle the use of a step size option in the Jog plugin to
refactor FileMenuFilter to enforce immutability and improve file unlocking logic to enhance code reliability and maintainability by ensuring immut
hbase - 25836 fix npe in roundRobintableinputformat . split ( tablename , tablename , regionname )
updated HTTP request header values from " false " to " 1 " in HttpClientRequestAdapter . java and HttpClientRequestAdapterTest . java to ensure
pdfbox - 2852 : use ioutils . close ( ) instead of ioutils . close ( )
added fullscreen functionality to GwtApplication and GwtGraphics classes and updated display mode handling in GwtApplication and GwtGraphics to improve
updated WebfingerIssuerService to use URI instead of String for resource parameters to enhance flexibility in handling different URI formats
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` Dubbo ` to
replaced ` Gdx . files . internal ( ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to
updated logging levels from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to provide more detailed logging
added ` lockInterruptibly ( ) ` to multiple ` PlayerApiServlet ` , ` BrowseHandler ` , and ` PlayHandler ` to
updated package declaration from ` package ` to ` package ` in Compiler . java to improve code organization and clarity
added code exception handling for code exceptions in NullDerefAndRedundantComparisonFinder . java to ensure correct handling of code exceptions based on
replaced ` String ` with ` DefaultHttpDataSource ` in ` DashRendererBuilder . java ` and updated method signatures in ` Dash
added a configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and a method to retrieve
rename ` WritableConfig ` to ` Configuration ` across multiple files to improve clarity and consistency in naming conventions
added error handling for command operations in AutoScalingHandler to ensure proper error reporting for bad requests
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
replaced the variable ` buf ` with ` b ` in ` InflateIn _ DeflateOut . java ` to simplify the
added methods to remove cryptography restrictions from security and permissions in Utilities . java and BitsquareApp . java to ensure security restrictions are only removed
added a cancellation check for the event before performing chunk teleportation in the Entity class to ensure that the event is canceled before proceeding with the
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to verify the functionality of
added a null check for vContext before adding it to vectorization contexts to avoid potential NullPointerExceptions when vContext is null
fix ( wialon ) : set speed to 0.539957
hbase - 25815 addendum do n ' t set default _ metric _ user _ enabled _ conf to false
added a method ` isEmpty ( ) ` to ` JsonObject ` and created a test for ` isEmpty ( ) ` in ` JsonObjectTest ` to
added new fields ` mUserPresent ` , ` mVisible ` , and ` mAttached ` in ` Launcher . java ` to ensure
refactor AsyncFile , HttpClientRequest , and NetSocket classes to improve code organization and maintainability
added params parameter to the zadd method call in PipelineBase . java to enable additional parameters for the zadd operation
( chore ) camel - aws2 - dspace : fix checkstyle violation
increased the test class name from TestAsyncMessages to TestAsyncMessagesPerformance to clarify the purpose of the test class related to
added an ` getNodeOptional ` method to ` VersionedTargetGraphBuilder ` and modified ` VersionPropagatorBuilder ` and ` VersionPropagatorTest
updated EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW values from EPOCH _ SECONDS _ HIGH to EPOCH _
corrected the calculation of the header size in EscherBlipRecord . java and added a new TestOLE2Embeding . java
removed redundant assignment of row and column variables in JSONParser . java to streamline code by eliminating redundancy
replaced instances of ` JavaType . FullyQualified ` with ` Pattern ` for pattern matching in ` FindTypes ` and ` JavaType
updated DETAIL _ THUMB _ HEIGHT and DETAIL _ THUMB _ HEIGHT values in BaseItemDetailsFragment . java
added a method to remove glyph information from the cache in CStrike . java to improve memory management by ensuring glyph information is properly removed from
act - 1343 : fix terminateendeventactivitybehavior to record process instance end
camel - 16462 : camel - core - do n ' t use xmlrootelement if it ' s empty .
updated the endpoint URL from " http : / / www . apereo . org / scottb . org " to " https :
added a new flag ` defPrefs ` to the ` JabRef ` class and invoked it in ` Globals . java ` to
changed access modifiers of methods from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access these fields for better extensibility
[ danfossairunit ] remove deprecated channel for manual fan speed
replaced JUnit 5 assertions with Hamcrest assertions in TestEndpoint . java to enhance readability and maintainability of the test code
removed redundant null checks for expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to improve robustness and ensure proper comparison and hashing functionality
cloudstack - 4892 : add miss disk size parameter to uservmmanagerimpl ( # 4893 )
added PreferenceManager2 for preference handling in PredictionRowView to enhance user experience by allowing customization of predictions based on user preferences
[ geos - 6767 ] fix invalid bbox cr in feature service
added methods to validate value , position , and depth parameters in LibrustzcashParam . java to ensure parameters are non - negative
move ithrowableentity to fml cpw . mods . fml . common . registry . ithrowableentity
added x and y calculations in NodeDataImpl . java to ensure proper positioning of the NodeData instance
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor the initialization of ` declaredDepsBuildResult ` and ` returnedStderr ` to use a try - with - resources statement to ensure proper
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to handle DEEP _ SHORTC
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
changed visibility of these classes from private to protected in BooleanQuery , DisjunctionMaxQuery , and DisjunctionMaxQuery classes to allow subclasses to
added a boolean flag ` useProxyResponseCode ` to control NTLM proxy usage based on response code to ensure proper handling of NTL
[ aarch64 ] fix memory leak in aarch64move . java .
server : use capacity _ type _ memory in listupbyhostid ( ) instead of listupbyhostidtypes ( )
added a null check for maxScore in JSONResponseWriter . java and added a query in TestDistributedSearch . java to ensure that score
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to improve audio recoding accuracy
updated the calculation of newOriginX in RocketFigure . java to adjust the origin position based on the scale to ensure correct positioning
[ hotfix ] [ table - planner - blink ] fix npe in druidquerybasedinputformat
added new properties for the ` ORIGINAL _ ID ` and ` ORIGINAL _ TYPE ` in the ` CustomProperty ` class and
added a static method ` create ` to create a ` Index ` instance using a ` Map < String , Object > ` to facilit
removed the variable ` isBetweenGivenPeriod ` from the return statement to simplify the logic for determining boundary period checks
added support for union writer incompatibility in SchemaCompatibility . java and updated corresponding tests in TestSchemaCompatibility . java to enhance compatibility checks and ensure
added handling for entity paths in QueryUtils and updated related test cases in EclipseLinkNamespaceUserRepositoryTests to improve the accuracy of entity path
added synchronization to the spans list and modified return statements in TestSpanHandler . java to ensure thread safety when accessing the spans list
updated method signatures from ` Object ` to ` ? > ` across multiple text provider classes to allow for more flexible parameter types in method signatures
replaced error logging with debug logging in ViewContextImpl . java to improve error handling and provide more detailed logging for authentication failures
refactor OAuth2AccessTokenEntity class for improved clarity to enhance maintainability and readability of the code
updated error messages in SCBEngine , TestInvocationFactory , and HighwayServerInvoke classes to clarify that the service cannot process requests
added new project files for iOS data and moe resources in GdxSetup . java to enhance project structure for iOS devices
added ConcurrentMergeScheduler to MockAnalyzer in TestSearcherManager . java to enhance merge performance by utilizing ConcurrentMergeScheduler for better performance
updated condition checks in QTestUtil and modified list handling in GenericUDTFInline , and LazyBinaryArray to improve code robustness and
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ggb - 1349 fix issue with mouse click in spreadsheet key listener
added persistence and session factory services to HibernateBundleActivator and OsgiTestCase classes to improve service management and ensure proper cleanup of resources
adjust timeout calculation in HikariPool . java and HikariPool . java to account for connection timeout to ensure accurate timeout measurement for
refactor the creation of component file in VoiceCompiler to use a non - packaged resources directory to improve efficiency by reducing the number of
updated file name handling to use File . separatorChar instead of File . separatorChar to ensure consistent file path handling across different operating systems
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void ` in ` Cell . java ` to
improve error message when port be specify multiple times
added nullMask functionality to WebSocketClient and updated WebSocketConnectionD12 to use FixedMaskGen to enhance flexibility in mask generation for WebSocket connections
changed return type of the genUDTFPlan method from ` genUDTFPlan ` to ` Pair < > ` in ` gen
added statistics for bucketed preferred and non - preferred node selection in multiple classes to enhance node selection tracking for better tracking of node selection
add a new file ` Person . java ` that defines a Person class to facilitate the creation of a Person class with a name
added a boolean variable ` hasOwnerPtr ` and modified its execution logic in ` CPlatformWindow . java ` to ensure proper handling of the
added clock setup and animation handling in PlaybackOverlayFragment . java to improve user interface responsiveness and visual feedback during playback
remove unnecessary call to updatecomparatoroutputlevel ( ) in order to avoid duplication .
replaced ` IMPL ` with ` IMPL ` in ` SegmentReader . java ` and added exception handling for SecurityException and ClassNotFoundException to improve
added a Runnable to invoke the fireCellUpdatedEvent on the Event Dispatch Thread to ensure that the event dispatching is executed on the Event Dispatch
removed unused DefaultInetAddressAdapter and CollectionTypeAdapter from Gson and MiniGson classes to simplify code and improve readability by elimin
added null checks and assertion methods for Double , Long , and BooleanSeries classes in Series . java and DataFrameTest . java to ensure proper handling
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure audio
updated GeoRelationUtils and GeoUtils to use Math . max instead of Math . min for boundary checks to improve accuracy in geometric calculations and
cloudstack - 4892 : fix nullpointerexception when get diskofferingid ( ) return null
added cleanup method to hazelcasttest to ensure proper resource management and prevent memory leaks
added error handling for AES encryption tests in BlockCipherTest . java to ensure proper functionality and error reporting for unsupported encryption algorithms
added a filter to print operations logs in QFileClient . java to enhance logging functionality for better debugging
add childintroduction and parentinterface interface to introduction and introduction
added a null check for currentConnectionAddress in ProtocolProviderServiceSipImpl . java to ensure currentConnectionAddress is set to a proxySocketAddress when
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve code read
refactor ImageOutputStream handling to use try - with - resources for resource management to ensure proper resource management and avoid potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ` with direct ` Intent ` instantiation and ` startActivity ` in multiple fragments to streamline search functionality and improve code clarity by removing unnecessary application method calls
refactor ` SchemaCrawlerCommandLine ` , ` GrepOptions ` , and ` MutableIndexColumn ` classes to improve code readability and maintain
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for osgi service
added @ Autowired annotation to RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository repository
updated method signature from Exception to InterruptedException in UIServer . stop ( ) and modified logging message in TestVertxUIManual . java
add more block to cactusblock placement validation ( # 301
refactor mouse event handling in ThemeSelector to use a separate mouse event listener to improve code readability and maintainability by encapsulating mouse event
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` to extend ` AbstractMinMulticastFlowControlFields ` to
added alignment and alignment parameters to the ` editStringAt ` method in ` IOSImplementation ` and ` IOSNative ` classes to enhance
replaced exception handling with IllegalArgumentException for modelFile and multiWordRulesFile in StatTokSentAnnotator . java to improve error handling and provide
added a check for distinct queries in ClusterIntegrationTestUtils and updated query generation logic in QueryGenerator to ensure correct handling of group columns based on
[ gr - 34444 ] add method to find closely linkage for native linkage .
bug 60589 - fix javadoc warning in jsyntaxtextarea
added a null check for the children variable before processing to avoid potential NullPointerException when children is null
added token position and position fields and updated JsonLocation handling in MessagePackParser . java and MessagePackParserTest . java to enhance JSON parsing
added JUnit ` @ AfterClass ` to set the default locale in ` AbstractSolrMorphlineTestBase ` to ensure consistent locale settings during
removed unnecessary conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to streamline code by eliminating unnecessary
added a new test class MetricsReporterTest to validate metrics registration and counter functionality to ensure proper functionality and error handling of metrics in the application
camel - 16462 : camel - mock - bundle - remove unused reference from osgi service registry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for rectangle objects
[ hotfix ] [ test ] add test _ nonexistenttopic to streamkafkaptest
refactor DSAParameterGenerator to use BigInteger . ONE instead of ONE for prime strength checks to improve clarity and correctness of prime strength
added a new configuration variable ` LLAP _ DAEMON _ AM _ USE _ FQDN ` and updated related classes to utilize
fix flaky test in clientoutofmemoryhandlertest
added a method ` getCmoObjectId ` to multiple shape classes and updated related classes to use it to ensure consistent retrieval of the object ID for
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to ensure that the query correctly handles distinct
refactor multiple task classes to improve code organization to enhance maintainability and readability of the codebase
fix ( kubernetes - client ) : remove unused bindextensionadapter and unbindextensionadapter
updated subtitle display methods in DetailsDescriptionPresenter and Utils classes to improve clarity and organization of subtitle content for better user experience
updated JUnit imports from ` @ Before ` to ` @ AfterEach ` in ` TestAuthHandlerBoot ` and ` TestRSAProviderToken
added error handling to the generateSummary method in BugCollectionBugReporter and XMLBugReporter classes to improve robustness by logging exceptions when generating summary
replaced calls to ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added a new class ` WindowSessionDelegateU ` for managing display flags in ` ShadowWindowManagerGlobal ` to ensure compatibility with TIRAM
added a check for the request ' s server port before adding a scheme in UrlHelper . java to ensure that the scheme is only added when
updated conditional logic for OracleDatabase and MSSQLDatabase in AddForeignKeyConstraintGenerator . java to ensure compatibility with MSSQLDatabase when handling
hbase - 26967 fix the bug of hbase - 26967 ( # 2696 )
simonstewart : add filtereventhandler to handle side check in emzuli pipe
simonstewart : make htmlidentifier logging configurable
updated method names from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java
simonstewart : add check for thread to prevent deadlock .
updated the SQL query to use CatalogAndSchema instead of CatalogAndSchema to enhance schema retrieval flexibility by allowing customization of the schema name
updated color values in SpriteBatch , SpriteCache , LwjglDebugStarter , AlphaTest , and AlphaTest classes to
fixed - redissonconnection . toCompletableFuture ( ) . join ( ) throw npe if redissonconnection . tocompletable ( )
added base URL replacement for HTTP and HTTPS in SolrLoggerServiceImpl . java to ensure accurate retrieval of statistic year cores based on the Solr client
renamed ` launchTask ` method to ` launchTaskFromView ` and updated its usage in ` TaskActionController ` , ` TaskAdapter
updated MorfologikFilter to accept a dictionary resource and added a loadDictionaryResource method to improve flexibility in handling dictionary resources and
updated sort options from " stars " to " community _ rating " in GridFragment . java to improve clarity and consistency in sorting options
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter to ensure proper visibility handling for ListRow items
refactor switch - case statements in StressAction . java to use try - finally blocks to ensure proper resource management and prevent potential resource leak
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
updated database - related checks to use instances of ` accordingTo . isCaseSensitive ( ) ` instead of ` isCaseSensitive ( ) `
added support for java . time module in StandardJavaScriptSerializer to enable serialization of date - time data types in Jackson
replaced ` org . apache . log4j . MDC ` with ` org . apache . slf4j . MDC `
updated type handling in PhiTypeResolver from TypeBearer to TypeCast to ensure type safety and prevent potential ClassCastException during type merging
updated formatting and formatting in CoinbaseTransactionStatusDeserializer . java to improve code readability and maintain consistency
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to include ` shouldForceBuildingWithB
replaced the initialization of ` BusySpinIdleStrategy ` with a call to ` System . gc ( ) ` to ensure that the
replaced ` ContentProvider ` with ` ContentResolver ` in multiple files to improve flexibility and maintainability of file handling methods
refactor conditional statements in ReportPanel . java for improved readability and maintainability to enhance code clarity and maintainability
[ hotfix ] [ runtime ] fix nullpointerexception in testinglogicalslot
add removecallstosystemgc recipe ( fixes # 1664
removed unnecessary super ( ) calls from multiple exception classes to ensure proper initialization of the superclass
added a method to set the UIID in the ScaleImageLabel class to ensure the icon is properly set for the UI component
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity by using a more descriptive
added support for " - cp " command - line arguments in the Main . java file to enhance flexibility in specifying classpath configurations
updated the compiler option from ` options ` to ` compiler ` in the ` avutil . java ` file to ensure compatibility with the new compiler
updated initialization logic in StorageService . java to ensure proper initialization of the StorageService instance
updated Test7196045 . java file to improve test coverage and reliability
changed the density and decay values from 1.5 f to 1.0 f and changed the density and decay to 0.95 f to
added new fields for withState and state data in OidcConfiguration and updated OidcRedirectActionBuilder to utilize it to enhance session management
[ table - planner - blink ] add null check for nullable column
added file data storage support for federated sharing in UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by restricting user queries
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to provide a way to determine if document values are
refactor BufferAlignmentAgent , BufferAlignmentInterceptor , and StringWriterOutputManager classes to improve clarity of error messages and enhance code readability
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and updated test cases in ` SpecialisationGenerator ` to enhance
do n ' t associate the save data with the temporary scoreboards early in worldserver .
updated method signatures in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to use long instead of Long to improve
refactor logging statements in MManager . java to improve clarity and maintainability to enhance readability and maintainability of the code
updated the calculation of the dotProduct method in VectorUtil . java and added new test cases in TestVectorUtil . java to improve accuracy of
added a new constant for IRREVERSIBLE _ THRESHOLD in Parameter . java and implemented related methods in DynamicPropertiesStore . java and Manager
refactor locale setting logic in GpsMainActivity , MainPreferenceActivity , and MainPreferenceActivity classes to use a dedicated method to improve code
added a new boolean check for database creation status in LauncherClings and integrated it in LauncherProvider to ensure proper handling of database creation
updated error messages and improved collection iteration handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to enhance code clarity and ensure proper
added a null check for the datamodel before setting the is64Bit variable to avoid potential NullPointerExceptions when the datamodel is null
added a check for the current thread in TestIndexWriterDelete . java to prevent potential race conditions when accessing the current thread
changed the access modifier of the closeDatabase method from private to protected in BaseLiquibaseTask . java to allow subclasses to access the
updated imports and imports from ` org . jellyfin . apiclient . model . dto ` to ` org . jelly
added a loop to set XML attributes for SVG elements in BatikSVGDrawer . java to ensure that the XML document reflects the correct
refactor exception handling in ConsoleKeys . java for improved readability to enhance code clarity and maintainability
added handling for ` WaitForResult ` in ` CodenameOneActivity ` and modified ` waitingForResult ` logic in ` Codename
refactor ` HitQueue ` , ` PriorityQueue ` , and ` SpanPositionQueue ` classes to use ` Supplier < T > `
added support for loading widget descriptions in WidgetCell . java to improve user experience by displaying widget descriptions when available
added a maximum attribute count check to prevent registering an alias with a maximum registered attribute count to ensure that the attribute count does not exceed the defined
move predicatestest . java to org . hazelcast . query . impl . predicates
camel - 16462 : camel - default - header - filter - strategy should set case - insensitive header name to true . thanks to
updated inline layout logic and improved boundary handling in Breaker . java and Breaker . java to enhance code clarity and ensure proper boundary
added null checks and improved layout inflation logic in ShareUserListAdapter . java to enhance robustness by preventing potential NullPointerExceptions
refactored the ` Setup ` class to use a new ` isFromAndroidSdk ` method and modified the ` shouldInstrument ` method to
added a check for insert destination before source association in BrowserContentPane . java to ensure that the correct column count is returned when the association is
updated memory limit file path from " / sys / fs / cgroup / memory . limit _ in _ bytes " to " / sys / fs
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` EMPTY _ INSTANCE ` instead of ` EMPTY _ INSTANCE `
added a null check for the source under test in JavaTestRule . java to ensure that a human - readable exception is thrown when the source
fix for minecraft 1.9 . 4 and minecraft 1.9 . 4 upgrade to 1.10 . 2
added a check for negative atIndex in StringUtils . java to ensure atIndex is always non - negative to prevent potential errors when atIndex is
increased the timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner to allow more time for tests to
added a ` AssistContentRequester ` field to the ` TaskOverlayFactoryGo ` constructor and updated its constructor to include it to enhance the
update the method for creating a readable witness address and change the account check condition to enhance the encoding process and ensure the correct validation of witness
refactor DefaultMethodRegressionTests class for improved readability to enhance maintainability and clarity of test cases
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
updated import statements in KafkaOutboundAdapterParserTests . java to use KafkaException instead of KafkaProducerException to improve clarity and consistency in exception
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantExceptionClassesTests ` to
[ beam - 10650 ] fix error message in configbuilder
added a new ` extraProperties ` parameter to multiple ` TableConfigTunerUtils ` and ` TableConfigTunerUtils ` classes to include
added handling for in - progress segments in PinotRealtimeSegmentsManager to ensure segments are only added if the instance is not already in progress
added a condition to return null if touchable is disabled to prevent potential null pointer exceptions when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest . java ` to ensure
do n ' t throw retryablehazelcastexception if cache config be not create yet
refactor npm package installation logic to utilize ProcessUtil ' s isNodePackageInstalled method to improve code readability and maintainability by centralizing
added ManagedObject annotations to MBeanContainer and Destroyable classes to enable better management and management of MBeans in the application
added a comment to the condition in LongClickableSpan . java to improve code readability and maintainability
refactor equality checks to use ` equals ( ) ` instead of ` equals ( ) ` in ` EspMilightHubDiscoveryService
updated the condition in ` Types . java ` and added new classes T6558559a and T6558559b
updated print statements in WorldEditListener . java for clarity to improve debugging by providing more context about player position changes
camel - 14284 : camel - kafka should shutdown the consumer if the executor be shut down
removed the default implementation of examples ( ) in Schema . java to simplify the code by eliminating unnecessary parameters
refactor thread interruption handling in AgentRunner . java to improve clarity and control flow to ensure proper handling of thread interruption
removed time columns from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper cleanup of dataset data for improved data
updated conditional check for shards in FacetComponent . java to improve code readability and maintainability
replace ` linker . getParseTimeDeps ( ) ` with ` CxxPlatforms . getParseTimeDeps ( cxxPlatform ) `
added getter and setter methods for ` name ` in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` NtlmProperties
added logging statements and refactored printer handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to improve debugging information and ensure proper handling
replaced ` context . getScanRanges ( ) ` with ` context . getScanRanges ( ) ` in ` BaseQueryPlan . java
updated the filter string construction in RetryGatewayFilterFactory . java to include the route ID to improve clarity and maintainability of the code by
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
updated ` onOverviewShown ` method calls and added delay handling for visual updates to improve user experience by ensuring UI elements appear at the appropriate times
refactor conditional checks in CheckIndex . java and add a test for deleting all point documents in TestPointValues . java to improve code read
updated the publish method to include the updateLastState parameter to ensure that the state is updated correctly based on the updated last state
added a newline character for SKEWED _ STRING _ LIST _ VALUES and STRING _ LIST _ ID in MetastoreDirectSqlUtils
added a new call to ` exp . add ( 0 , null ) ` in ` SpliteratorCollisions . java ` to ensure that the
simonstewart : add textcaseSensitive method to the condition class , and add test for it .
refactor while loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
no effective change - add support for queryengine . forwardonlyfetchsize ( )
added exception handling for ClosedChannelException in HttpServerMultiplexChannelHandler . java to improve robustness by preventing operations on already closed channels
pdfbox - 4892 : fix arrayindexoutofboundsexception , a suggest by valerybokov
added support for rounded corners on Windows in QuickstepAppTransitionManagerImpl . java to ensure proper window radius calculation based on rounded corners support
refactor background and icon handling in DesktopTaskView to use View instead of ShapeDrawable to improve flexibility and maintainability of the background
refactor the initialization of properties in UpstreamCheckServiceTest . java to improve code readability and maintainability
refactor logging statements in AbstractSession and AbstractSessionManager classes to improve code readability and maintainability
replaced error logging with returning locks in ZooKeeperHiveLockManager . java to improve error handling by returning locks instead of throwing an exception
[ hotfix ] [ runtime ] fix typo in javadocs
added a boolean variable ` containsCustomData ` to check for custom data before generating the MIP map to ensure mipmap generation only occurs
updated test assertions to use ' xxxxx ' instead of ' xxxxx ' in DefaultMaskingFormatterTest . java to ensure consistency in test
added selectable functionality and methods to manage selection behavior in the List class to improve user experience by preventing touch events when the list is not selected
added a check for empty vector schema root in LlapArrowBatchRecordReader . java to ensure that only valid input vectors are processed to avoid
updated file separator handling in PolicyContext and added print statements in JettyPolicy and PolicyContext classes to improve clarity and functionality of file separator
changed the type of ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` ArrayList ` in ` FieldQuery . java `
refactor TLSRestrictions class for improved security to enhance security by restricting access to secure connections
[ hotfix ] [ kafka ] fix npe in kafkaproducer
added a new parameter ` ignorableNodeValues ` to the ` assertNodeStateProvider ` method and modified the ` assertNodeStateProvider `
added a lock file to delete the lock in RocksdbMavenPomCache . java to ensure proper resource management by deleting the lock
updated NIOServerCnxn factory initialization to use InetSocketAddress instead of a hardcoded value to ensure the client port is correctly referenced in the
added a new method ` getResponse ` in ` RestClient ` for improved error handling and logging in ` RestResponse ` to enhance connection management
updated the way segmentTarURIStrs are retrieved in IngestionUtils . java to ensure proper handling of segment tar URIs in the upload process
updated the loginStudent method to include a password parameter in AllAccessControlUiTests . java to enhance security by using a more descriptive key
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during execution
increased the number of strings from 500ms to 100ms in TestSpecialOperations . java to allow more time for string operations to complete
replaced ByteArrayInStream with ByteArrayInStream in WKBAttributeIO . java to simplify the code and improve performance by eliminating unnecessary
corrected a typo in the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and
added a method to check if a state is a direct submachine before proceeding to ensure that only direct substates are considered in the state
added support for ` ListMultimap ` and ` SetMultimap ` in ` MultimapSubject ` and corresponding tests in ` MultimapTest ` to
added JoinOperation interface to the PostJoinOperation class to enhance functionality by integrating JoinOperation functionality
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify the functionality of the PostgreSQL
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
replaced integer values with String annotations for lifeTime , idleTime , and maxWaitTime in MongoDbConnectionPoolProperties and MongoDbConnectionFactory to
use sipactivator . getMediaservice ( ) instead of null
refactor handleFilters and handleDomainChanges methods to return a boolean indicating applied filters and domain changes to improve code clarity and maintainability by
added a enabledTimeout property and updated the timeout handling logic in ShuffleHandler . java to enable or disable the timeout handler based on the enabled
replaced direct assignment of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
updated log statements in XPathBuilder , XQueryBuilder , and added debug logging statements in XPathBuilder and XQueryBuilder classes to improve logging clarity and
replaced the use of ` this . getClass ( ) . getResourceAsStream ( ) ` with ` DataResource . class ` in ` NNDataSet .
[ net . sourceforge . pmd ] add test case for escape back slash .
added a validation check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the ' atlas ' property is present
camel - 14284 : camel - support - remove property placeholders from defaultcomponent
added database closure in BlockchainTest . java and removed ReceiveSource . java in KafkaTest . java to ensure proper resource management and prevent potential
updated CoreMarkdownNodeRenderer to use a List for lines and added a method to retrieve lines from a string to improve code readability and maintain
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList . Builder ` with ` List < Object > ` in multiple SQL query classes to use ` unmodifiableList ` instead of ` ImmutableList
added a property to check for the Java VM name in OpenJDK to ensure compatibility with OpenJDK environments in the application
added a keepAlive option to the baseUrl configuration in ReactorClient . java to ensure the client starts in a clean state before proceeding
updated VertexAttribute references from " 3 " to " 0 " in MD5Renderer , ObjLoader , and ObjLoader classes to use Shader
camel - 14284 : camel - core - do n ' t try to find a property component in the registry if there be no property
refactor account existence check in UnfreezeBalanceActuator . java to improve code readability and maintainability
update the version number from 3.8 . 0 to 3.8 . 1 in the XMPPServer class to ensure compatibility with the latest release
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` in ` Types . java ` to improve code
refactor assertions in StorageGroupProcessorTest to improve clarity and consistency to enhance code readability and maintainability by reducing redundancy
added ` DumpableCollection ` to multiple classes and updated class loading logic to use ` Environment . getAll ( ) ` instead of ` ClassLoaderDump
added a new parameter ` waitbeforestart ` to the ` FFMpegVideo ` class to ensure proper handling of delays during video processing
removed the ` skipCorrupt ` parameter from multiple constructors in ` OrcEncodedDataConsumer ` and ` OrcColumnVectorProducer ` to simplify
[ hotfix ] [ test ] fix listindexoutofbounds test
added a method to compile methods in GraalCompiler and modified LIRGenerator to return a new FrameMap instance to improve code clarity and
updated test annotations in DynamoDbTicketRegistryTests , BaseAuthenticationRequestRiskCalculatorTests , and BaseAuthenticationRequestRiskCalculatorTests to
fix itemboat . gety ( ) to account for blockwater
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the method ` allowExperimentalOptions ( ) ` from the condition in ` Launcher . java ` to simplify the conditional check for experimental
added a new method ` then ` for ` Path ` and ` AssertProvider ` in ` BDDAssertions . java ` to enhance functionality
replaced ` hp . getHost ( ) ` with ` hostField . getHost ( ) ` in ` ForwardedRequestCustomizer . java `
updated logging level from debug to warn for Kubernetes config files to provide clearer feedback when the Kubernetes configuration file is not desired
added functionality to cancel and display OCFile based on upload status to improve user experience by providing user feedback during file operations
added ProviderLoader and ProviderLoaderListener classes to manage provider installation success and error events to improve the handling of crypto provider installation success and failure scenarios
updated imports and references from Span to TraceMessageHeaders in StreamEnvironmentPostProcessor and StreamEnvironmentPostProcessorTests to utilize TraceMessageHeaders for
updated SelectFromDatabaseChangeLogStatement initialization to include a computed column name to enhance the flexibility of the SelectFromDatabaseChangeLogStatement by
hhh - 14836 - postgresql do n ' t use current _ schema from sys . dummy
[ hz - 2231 ] fix nullpointerexception in partitionpermember test
added error handling and scheduler start logic in ExecutionScheduleManager and ExecutionSchedulerImpl classes to improve reliability and clarity of scheduler state management
simplified the instantiation of InlineBox in BoxBuilder . java to improve code readability and maintainability
reformatted error messages in StatisticMap . java for improved readability to enhance code clarity and maintainability
updated the return value of getStagedRectSlideEnd from 383 to 500 to reflect the current state of the staged rectangle slide
updated buttons from " Random " to " Core . bundle " in WaveInfoDialog . java and PlacementFragment . java to enhance user experience by
added a condition to check for the ownership of the plot area in the BukkitMain . java file to ensure that the plot area is
added a new test method ` setTouchExplorationEnabled ` to ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager
pdfbox - 5328 : use max glyph id instead of first code
bug 60612 - remove use of stringproperty from testelement . getpropertyasstring ( )
refactor POIFSFileSystem instantiation to use POIFS . create instead of creating a new NPOIFSFileSystem instance to improve code
added import statements for PlotArea and modified return logic in Move . java to enhance functionality to retrieve plot coordinates based on user input
updated version matching logic in TestWebHCatE2e . java to ensure compatibility with additional version formats
updated the condition from ` count < 0 ` to ` count < 1 ` in ` Filters . java ` to ensure that the count is less
camel - 14284 : camel - kafka - use camel - kafka to support camel - kafka and camel - kafka - kafka ( # 9
replaced ` util . IsolatedClassLoader ` with ` util . IsolatedClassLoader ` in ` JavacCompiler . java ` to ensure
simonstewart : do n ' t repaint the view if there be no option
camel - 14263 : camel - spring - batch - fix typo in camel - spring - batch
added a method ` isAnimationFinished ` to check if a animation is finished to enhance the animation ' s functionality by providing a way to check
updated import statements in LoginInfoEndpoint . java and added a test for custom shortcut icons with line breaks in LoginMockMvcTests . java to
added null check for otherUrl and updated refresh text formatting in TimeLineCursorAdapter . java and HomeFragment . java to improve code robustness
ggb - 1188 fix for ` ` space * ' ' in ` ` stopediting ' '
refactor ObjectHashSet class for improved performance to enhance efficiency and maintainability of the code
refactor null checks in DataUtilities . java to use Arrays . equals for null checks to improve code readability and maintainability by reducing
allow deletion of enchanted book ( mc - 12770 ) , allow for deletion of enchanted books
test ( microprofile ) : add unit test for asyncresource . get ( ) and asyncresource . put ( )
rename " target - flat - headers . hmap " to " target - user " across multiple files to clarify the purpose of the
added error handling and logging for send failures in MailService . java to improve debugging capabilities and provide clearer insights into email issues
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior
refactor FileListListAdapter to improve code structure to enhance maintainability and readability of the code
changed the type of the sharees variable from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve type
updated the position of the removeViewInLayout method in BubbleBarView . java to correct the positioning of the removeViewInLayout
updated package names from " org . eclipse . jetty . server . internal . " to " org . eclipse . jetty .
updated the parameter ` true ` from ` true ` to ` false ` in the ` S3Request ` constructor to allow for more flexible
update jfxRadioButtonSkin to update the animation if the timeline is null to ensure the animation updates correctly when the timeline is null
updated condition checks in DeweyNumber . java and added a test for zeroSplitsDeweyNumber in DeweyNumberTest .
added a static variable ` categorySetString ` and modified the return statement to replace " Category : " with " Category : " to ensure the
corrected the spelling of " Invalid close status code " to " Invalid close code 1111 " in WebSocketClientTest . java to ensure
added null check for classLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader and TestVirtualWebappClassLoaderWeaving to
removed redundant checks for mapped superclass classes in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new file TestPorterStemFilter . java to implement a test for the PorterStemFilter functionality to validate the stemming of
added a success parameter to the ` postBatchMutate ` method and modified the ` postBatchMutateIndispensably ` method to
rename ` org . springframework . core . exlore . support ` to ` org . springframework . core . explore . support
fix race condition in chatwindowmanager . leavechatroom ( )
removed unnecessary Sys . touch ( ) calls across multiple Java files to streamline code by eliminating unnecessary calls to Sys . touch ( )
added " - mardu " command to the HgCmdLineInterface and updated the untrackedFiles method in HgCmdLineInterface
camel - 14263 : camel - netty should use the endpoint ' s timer instead of the hashed wheel timer . thanks to
changed the visibility of parameters in DirectionalLight , PointLight , SpotLight , and SpotLight classes to be final to enhance immutability
replaced ` target . getWidth ( ) ` with ` target . getHeight ( ) ` in ` X11GraphicsConfig ` and ` WGL
added toString ( ) methods to DelegatingSecurityContextCallable , DelegatingSecurityContextRunnable , and corresponding tests in DelegatingSecurityContextCallableTests to provide a
added a new class ` AnnoFilterTreeSet ` and modified ` findClassesThatExtend ` and ` findAnnotatedClasses ` methods to enhance
modified the overflow logic in BytesColumnVector . java to handle integer overflow and maximize size of next smallBuffer to improve handling of integer overflow
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for testing to improve test reliability by ensuring
updated method signatures in MotifScrollPaneUI , XTextAreaPeer , and MotifScrollPaneUI to use JComponent instead of JScrollPane
ggb - 1349 add a method to check if a function be equal ( ) .
added a null check before setting the column class in SynthTableUI . java to avoid potential NullPointerException when table is null
added error handling for customChange instantiation in CustomChangeWrapper . java to improve robustness by preventing runtime exceptions when instantiation fails
refactor DistBuildConfig to use ` BuckConfig ` instead of ` ConfigPathGetter ` to improve code clarity and maintainability by
fix issue with double entry entry not be display in the dialog ( issue # 438 )
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to a known issue
changed the return type of the ` doJoin ` method from void to boolean in multiple classes to provide a boolean indicating success or failure of the
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating
updated intent flags from FLAG _ ACTIVITY _ CLEAR _ WHEN _ TASK to FLAG _ ACTIVITY _ NEW _ TASK to
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance functionality by allowing paging order checks
updated repository URL assertions from ` 0 ` to ` 2 ` in ` RepositoryConventionPluginTests . java ` to reflect the correct number of repositories
added a new ` AffiliationTask ` class to manage node affiliaries to facilitate the creation and management of node affili
replaced RequestUtil with URISyntaxException for URI normalization and added error handling for invalid URIs to improve robustness and provide clearer error messages for invalid
changed access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes
added array handling for CacheKey updates in CacheKey . java and updated test cases in CacheKeyTest . java to improve performance and ensure correct
replaced GnomeFileTypeDetector with FileTypeDetector across multiple classes to enhance file type detection capabilities across different operating systems
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
refactor ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` instead of ` VirtualSensor
added a condition to check if the context is before executing before executing the session to ensure that the session ' s context is not removed from the
rename the variable ` lch ` to ` loopback ` and update its logic in ` NetUtil . java ` to improve clarity and functionality
replaced BUF _ SIZE with DEFAULT _ BUF _ SIZE and refactored deflated data initialization in Zlib . java to
added secure validation and retrieval method checks in KeyInfoReferenceResolver , XMLSignatureInput , and TransformXPath classes to enhance security checks and improve error
added a boolean flag ` iconChangeListenerInstalled ` and updated action listener handling in ` Label . java ` to ensure ` iconChangeListener ` is only
added support for Russian language in the application
hhh - 14836 - fix incorrect conversion of duration type in sqm to sql
disable frame state verification in SubstrateGraphKit . java to improve security by preventing unauthorized state verification
added system properties and teardown methods in RobolectricTestRunnerTest . java and TestUtil . java to ensure proper cleanup and cleanup of
added support for the " org . slf4j . " system class in ViewClassLoader and created a corresponding test in ViewClassLoaderTest to
added a check for " jar " packaging in ChangePackaging . java and implemented a new test in ChangePackagingTest . java to
updated file download method in FileDownloadViaHttpGetTest and FileDownloadViaProxyTest to use withExtension ( " txt " ) instead of
added a call to clear the buffer in GLFWDemo . java to ensure that the buffer is cleared before processing new data
renamed ` defaultUnits ` to ` preferredUnits ` and updated related methods in ` JogService ` and ` JogStatusLineService
updated DatePatternConverterTest to use UTC timezone for date conversion to ensure accurate date representation based on the specified time zone
refactor return statement in Terminator . java to improve code readability and maintainability
updated error messages for file URIs and improved error handling in FileSystem , LocalFileSystem , and DistributedFileSystem classes to enhance clarity of error messages
use a timertask instead of a single thread scheduled executor for show tracking notification
http : / / issues . apache . org / jira / browse / amq - 4896 - improve test reliability
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to extend ` ConcurrentSkipListMap
added a ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , and ` StdErrLog ` classes to allow users to
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary byte cast from getDamage method calls in BukkitWorld . java to simplify code by eliminating unnecessary casting
removed redundant image cleaning logic in PanelManager . java to improve code clarity and maintainability
added new classes MMapDirectoryFactory and SimpleFSDirectoryFactory to manage different directory types in Solr to enhance the directory management capabilities in Solr by supporting memory - mapped and simple file system
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential NullPointerExceptions when ` ic ` is null
updated the variable name from ` field1 ` to ` field1 _ s ` in the query equality test to ensure the test accurately reflect
refactor ExtendedOperatingSystemMXBeanImpl class to improve code organization to enhance maintainability and readability of the code
added a method to install left and right commands in the SideMenuBar class to enhance UI functionality by allowing commands to be added to the title
added a new boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` setUpWindow ( ) ` calls in multiple activities to
added support for SybaseDatabase in DropPrimaryKeyGenerator to support additional database types in the primary key generation process
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] reset the last recording position when the leader be up to date .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to prevent premature termination of the method
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
added a method to shutdown the HTTP server in ListenHTTP . java to improve error handling and ensure graceful shutdown of the HTTP server
camel - 15836 - camel - aws2 - s3 : remove unused import
[ hotfix ] [ runtime ] remove unused parameter _ tm _ id in webmonitor
added a method to drop keys that do not exist in 2.2 . 7 version of the database to ensure data integrity by preventing duplicate
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that the
added a new private variable ` maxEnergyLimit ` and updated its usage in ` VMActuator . java ` to ensure accurate energy fee
added maxInMemorySize property and its getter / setter methods in HttpClientProperties and updated WebClientPluginConfiguration to include maxInMemorySize configuration
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
added new test classes for Cucumber and StepDefinitions to enhance testing capabilities for Cucumber and Step definitions in the project
added error handling for JSON parsing in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness and ensure
updated hex string encoding from " 656469746564 " to " 80806564697464 " in Utf8StringBuilder
added a check for parameters before appending them to the stringMap and improved parameter handling logic to enhance code robustness by preventing null pointer
camel - 14263 : camel - circuit - breaker - allow to specify maximum number of output for load balancing .
updated the maximum buffered documents configuration in TestIndexWriterExceptions . java to ensure that the test correctly verifies the maximum buffered document size
replaced calls to ` hasher . putUnencodedChars ( ) ` with ` hasher . update ( hasher ) ` in multiple files to improve
removed the ` enumValue ` and ` enumValue ` methods from the ` AsmRuntime ` class to streamline the code by elimin
feat ( biome ) : add biome tag to biome tag ( # 8798 )
use a thread pool for the image loader ( # 1193 )
changed access modifiers of ` TableConfig ` , ` Schema _ schema ` , ` TableDataManager ` , and ` HelixManager ` to
replaced " \ u0648 \ u0648 " with " \ u0623 " in multiple Java files to ensure accurate representation of
replaced ` vid . getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( varName ) ` in ` AbstractSun
camel - 16462 : camel - jbang - add -- repos option to run . java
added handling for NaN scores in CrawlDbReader . java to improve robustness by preventing processing of NaN scores
added a cleanup method in OnStartupTriggeringPolicyTest to clean up resources after each test to ensure proper resource management and prevent potential memory leak
change focus request method from requestFocus ( ) to requestFocusInWindow ( ) in FilterConditionEditor . java and add window focus listener in
[ hotfix ] [ runtime ] make checkpointscleaner thread safe
added a new file XPathWhiteSpaceTest . java that tests XML schema initialization to facilitate XML validation and schema creation for XML files
[ bonsai ] prevent rollback from override the trie log layer
refactor FilledNewArrayInstruction class for improved clarity to enhance maintainability and readability of the code
increased the timeout duration of the @ Test annotation in SimpleNetworkTest . java to allow more time for tests to complete before proceeding
updated the return statement in OCFile . java to use endsWith ( ) instead of substring to improve accuracy in determining if the parentPath ends with
added a print statement for loading the skin file in JavaSEPort . java to facilitate debugging by providing visibility into the loading failure
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to manage the
added a static final Result instance to the Result class and updated the return statement in TestStep . java to improve encapsulation and clarify
replaced ` PersistenceException ` with ` NullPointerException ` in ` TestTransactionCallback . java ` to ensure proper handling of NullPointerExceptions during database registration
fix uploadjobmultibatchoperation . getjobmultibatch ( ) ( # 11818 )
added error handling for recovery failures in MessageDatabase and JobSchedulerStoreImpl to improve error reporting and provide clearer context for recovery failures
fixed bug in summarylevel . of ( nodemodel , boolean ) . of ( nodemodel , boolean )
modified the ` DataOutput2 ` class to use ` sizeMask ` instead of ` volatile ` and modified the ` ensureAvail ` method
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
replaced the variable ` targets ` with ` endpoints ` in ` StorageProxy . java ` and adjusted the initialization of ` messages ` array to
updated parameter names in FileManager . java for consistency to improve code readability and maintainability
refactor TransformFunctionType and TransformFunctionFactory classes to use " times " instead of " plus " to improve clarity and consistency in function
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods in ` VariableElement ` and ` PackageInfo ` classes to enhance
updated RFC3280 and RFC5280 classes to replace " RFC3280 " with " RFC5280 " in multiple Java files to ensure
updated version number from 2.17 . 3 to 2.17 . 4 in Recaf and SearchAnnotationVisitor classes to reflect the latest version
refactor ListActivity , NoteAdapter , NoteAdapter , and NoteAdapter to use SparseBooleanArray instead of HashMap for selected items to improve performance
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils ' s FILE _ URL _ PREFIX and added a test for absolute resource defaults to ensure
updated PreviewPositionHelper initialization to include a Context parameter and added context handling in TaskViewSimulator , TaskThumbnailView , and TaskThumbnailView
[ java ] do n ' t publish leadership term when there be no leadership term .
[ hotfix ] [ test ] fix test failure in pmdcoveragetest
refactor ByteArrayInputStream . java to improve byte skipping logic and introduce a new Skip class for testing to enhance input stream processing accuracy and provide a
reformatted the condition for promptUpdate in UpdaterTask . java to improve code readability and maintainability
changed the visibility of MAX _ HEADERS from final to public in HeadersMessage . java and modified blockChainDownload method in Peer . java to
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to support additional JAR files in the application
fix geth rlpx ping command ( # 5917
updated GranuleDescriptor , RasterLayerResponse , GTDataStoreGranuleCatalog , GTDataStoreGranuleCatalog , and GTDataStoreG
added a condition to check if the response is already committed before sending error messages to ensure that errors are only sent when the response is already committed
updated condition checks in HttpSession . java for better readability and consistency to improve code clarity and maintainability
changed the default value of ` fadeOutFakeTaskView ` from ` true ` to ` false ` in ` HomeGestureTutorialController
add more logging for unknown component in prefabformat and prefabserializer
replaced the initialization of ` ScimGroupExternalMembershipManager ` with a direct addition of ` externalGroupSet ` to streamline group management
added a validation check for the minimum amount of 1 TRX in FreezeBalanceActuator and added a validation check in TransferActuator to
updated path splitting method in FileResolverTestBase . java to use File . separator to ensure consistent path handling across different operating systems
ggb - 1343 fix keyboard button not show when no input be available
updated GpsMainActivity to include session description and modified service intent creation in AnnotationViewFragment to enhance user experience by providing context - specific information
added a conditional check for page count in the JsoupNonVisualRegressionTest to ensure that the document ' s number of pages is
use androidnativebufferallocatorjme instead of androidbufferallocatorjme
added logic to check for flag names starting with " ! " in multiple Java files to ensure correct handling of flag names and maintain consistency in flag
added a NOPMD statement to the executeQuery method in JDBCHistoryCache . java to address potential null pointer exceptions during execution
changed the condition from " ITEM _ USE _ GRANT _ SELECT _ REPEAT " to " ITEM _ USE _ GRANT _ SELECT _
updated the loop structure and added a new test for priority elements in QueuePriorityTest . java and added a toString method in PriorityElement . java
test : remove obsolete test , no need to initialize component context
added null check for the command in Main . java and modified argument validation in Main . java to enhance robustness by preventing null command execution
updated the output stream size from 7 to 4 in multiple classes to optimize memory usage for better performance
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` to the ` ClassWriter ` and created a new class ` T8032819 ` with test cases
removed assertion for hasLength ( p . sn ) in Person . java to clean up the code and improve readability
added null check for extension in VirtualFile . java to improve robustness by preventing potential NullPointerExceptions
change return statement from return to continue in ContactRightButtonMenu . java to ensure proper flow control in the action flow
[ hotfix ] [ runtime ] fix slot sharing group assignment .
refactor screen assignment logic in InstallShortcutReceiver . java to improve code readability and maintainability
refactor socket handling in PlainSocketImpl to use a delegate socket instance to ensure proper resource management and prevent potential memory leaks
added removed items management in BookmarkListRootFragment and MediaDetailPagerFragment to manage the removal of items from the list to improve user experience
updated log message from " center of element " to " in - view center point " to clarify the purpose of the log message for
added a new file ` bug4865918 . java ` that implements a test for the scrollbar block increment to address bug 48659
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to streamline the code
updated import statements and added grouptriggers handling in QuestCommand . java to improve command functionality and provide feedback when a group does not exist
refactor file chooser to use a new method for selecting GnuCash account files to improve code organization and enhance user experience by providing
added ` @ ToString ( callSuper = true ) ` annotation to ` PartitionChangeEvent ` and ` TbApplicationEvent ` classes to enhance readability
updated the configuration URI from ` CloudService . CONFIG _ URI ` to ` CloudService . CONFIG _ URI ` and added a constant for the
removed deprecated methods for setting the scroll pane in BrowserPanel to streamline the code and improve compatibility with updated
replaced ` LwjglInput . java ` with ` Keyboard . KEY _ FORWARD _ DEL ` and updated event handling logic
added a conditional check for MIME type parts in MoreIndexingFilter to control the indexing behavior based on configuration settings
added a pattern for matching author comments in JSDoc . java to enhance the handling of comment comments in the JSDoc class
added constants CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ TABLES , and DELETE _ TOTAL _ PARTITIONS ,
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and DrillHiveMetaStoreClient to enhance
added an ` MultiValueMap < String , String > ` parameter to the ` oauth2LoginLinks ` constructor and modified the ` oauth2Login
updated month names from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar
added a condition to check if the browser is not Firefox to ensure compatibility with non - Firefox browsers in the WebAudioWrapper
added a method ` appendInterceptor ` to the ` GrpcServerBuilder ` class and modified the ` InterceptorConstants ` constructor in ` Grpc
added a default character set in the CREATE TABLE statement and updated the default charset in TestCompatibility . java to ensure compatibility with the new database schema
[ hotfix ] [ table - planner - blink ] remove redundant method call in streamingaggtemplate
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a ` hasHasFrom ` flag and updated SQL parsing logic in ` Delete ` and ` DeleteDeParser ` classes to enable conditional parsing
updated synchronization logic to handle multi - status scenarios in SynchronizeFolderOperation . java to improve clarity and functionality for handling multi - status scenarios
refactor applicable test handling by introducing a new method ` applicableListTests ` to improve code readability and maintainability by centralizing applicable
corrected the spelling of ' logLine ' in LogAnalyser . java to ensure proper formatting of log lines for better readability
( chore ) camel - integration - test : disable integration test when application credential be not provide
fixed - redissonsearch . value ( ) do n ' t include exclusive parameter
refactor CCLicenseStep to use generic types for consistency and clarity to improve code readability and maintainability
added a null check for ifcRoot ' s globalId before adding it to the guidIndex to avoid potential NullPointerException when accessing the globalId
updated equality check from ` equals ` to ` areEqual ` in ` OptionalAssert . java ` to ensure accurate comparison of values based on comparison
added a boolean flag ` hasLMB ` to manage memory allocation based on the presence of LMB to improve memory management by avoiding unnecessary
added a new file TestArrayCopyToFromObject . java that implements a test method for array copying to ensure that ArrayStoreException is correctly thrown when
replaced ` escapeAsBashString ` with ` escapeAsPythonString ` in ` BuckPythonProgram . java ` to ensure proper
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 557 :
fix craftinghelper . findfiles ( ) to return true if there be no file
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test case
added a null check for the client ' s doRequest method in TestInternalInputBuffer . java to ensure robustness by avoiding potential NullPointerExceptions
added lock management for autoload calls in Environment . java and modified fetchClass method in SplClassLoader . java to improve thread safety and prevent concurrent access
added a new method ` getServerVersionEqualOrGreater ` to ` CustomPlaybackOverlayFragment ` and updated its implementation in ` PlaybackController `
replaced instances of ` final ` with ` getCanonicalHostName ( ) ` in ` OneKDC ` and added localhost assignment in ` KDC
updated Jsr250Voter to conditionally return ACCESS _ DENAIN based on the presence of a JSR250 attribute to improve access
updated import statements in MP4Parser . java for better clarity and organization to enhance code readability and maintainability by standardizing import statements
added a new constant for HS2 _ PROXY _ USER in sessionParams and modified session handling logic to ensure proper handling of session parameters and
camel - 14263 : camel - hdfs - add snappy compression codec to camel - hdfs
added a sleep duration to the HttpClientTest class to ensure proper synchronization during test execution
fix bug # 49966 - remove cell from multi - cell array
updated width calculations in GlyphLayout . java and modified text in BitmapFontTest . java to improve rendering accuracy and clarify font wrapping behavior
updated Istio version and container paths in Fabric8IstioIT . java to ensure compatibility with the latest Istio features and
replaced ` ReportPlaybackStartAsync ` with ` ReportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java `
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 557 :
fix maploader hit eviction on initial load
updated the return statement in ResponseFlag . java to include both LENGTH _ BIT and ERROR _ BIT to ensure correct handling of error conditions in response
[ ds - 489 ] add read policy to default policy if no read policy be find .
refactor CompositeFont initialization to use ConcurrentHashMap for concurrent access to improve performance and memory efficiency when accessing CompositeFont instances
updated the calculation of prefHeight in Tree . java to ensure prefHeight does not exceed the defined height
[ drools - 1343 ] add error message for unknown variable error event in dmnfeelhelper . validate ( ) ( #
removed unused imports from multiple Java files to streamline code and improve readability by eliminating unnecessary dependencies
changed access modifier of finishRunningRecentsAnimation method from private to public in TaskAnimationManager and modified action masked in OtherActivityInputConsumer
added null checks and improved edge type handling in ElementFactoryImpl , ImporterGDF , and ImporterGDF classes to ensure robust
[ beam - 10699 ] fix nullpointerexception in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 4892 : binfiles . createsession ( ) should always be create by the sessionfactory . createsession ( ) ,
refactorclosest calculation in Teams . java to use a loop for finding the closest core to improve code readability and maintainability by
added a check for CONTENT _ LENGTH in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to ensure that the
updated Java2TypeScriptTranslator to handle String literals and added test cases for export functionality to improve type safety and ensure correctness of string literals
updated SincFilter parameters and adjusted sample sizes in multiple classes to improve performance and accommodate larger sample rates
hbase - 22941 add - allregions option to canary ( # 2293 )
[ java ] remove unused nodemodule from testcassandraconnector . java
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the cursor position is reset when necessary
added minimum size settings for CallDialog and OneToOneCallPanel in CallDialog and OneToOneCallPanel classes to ensure that frame dimensions do not
fix loss of state information during world gen
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSetup and TestSuite classes to improve test structure and
added a null check for the kerberosPrincipalEntity before removing it from the entity manager to improve robustness by preventing potential NullPointerExceptions when
updated the method call from ` true ` to ` true ` in ` AcidUtils . getTableSnapshot ( ) ` to simplify the method signature
refactor error handling in AprEndpoint . java to improve error logging to enhance robustness by catching broader exceptions and providing clearer
updated the error message in AndroidGradleBuilder . java to include the Base64 - encoded RSA public key in the build hint to provide clear
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` DLNAResource
[ drools - 720 ] add support for ` ` bot - inf . classes . ' ' and ` ` bot - inf
added a condition to check if the Runtime version is 19 in CheckIndexTest . java to ensure compatibility with newer runtime features
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method in ` AbsSwipeUpHandler ` and ` RemoteTarget
refactor LeaderLatch class implementation to improve code readability and maintainability
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to enable dynamic configuration of Zksnark parameters for
refactor transaction confidence handling in Transaction and TransactionConfidence classes to use ListenableFuture and SettableFuture for depth updates to improve concurrency management
added a ` createMediaRecorder ` method to ` CodenameOneImplementation ` , ` Location ` , and ` Media ` classes , and
changed the default value of platformName from " ios " to " ios " to ensure platformName defaults to " ios "
refactor PageEditClient class to improve code organization to enhance maintainability and readability of the code
updated type checks in Graphics2D . java for mozDash , webkitLineDash , and webkitLineDash in Graphics2D . java
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added error handling to the nextOutgoingFrame method in AbstractExtension . java to improve robustness by catching potential exceptions during frame processing
replaced the try - catch block with a privileged action in ContextHandler . java to enhance security by ensuring caller class loader retrieval is performed
added logic to update the parent of categories in FeedCategoryDAO to ensure that only relevant categories are retained in the database
added title handling for contribution types in ContributionManagerDialog . java to improve user experience by providing clearer context for contrib manager titles
added a BigDecimal field ` vwap ` to the ` Ticker ` constructor and updated its usage in the ` Ticker ` class to
updated SearchAndRecommendationsScrollController and WidgetsFullSheet to handle a no - widgets view to improve user interface responsiveness by
add tintnode to worldrendererimpl so that it can be use with tintnode .
set the primary color of the NCFirebaseMessagingService to use the primary theme color to enhance the visual appearance of the messaging service
updated ShadowUsbManagerTest . java file to improve test coverage for USB manager functionality
updated calculations in AbstractDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to use evaluationPercentage instead of trainingPercentage to improve accuracy of user preference
added a call to update the selected configuration in Rocket . java to ensure the selected configuration reflects the latest changes
added a maximum check for 1 in AndroidGraphics . java to ensure bounds are non - negative to prevent potential index out of bounds errors
replaced HashMap with LinkedHashMap for options in multiple classes to ensure predictable iteration order in the collections
replaced the usage of ` nativeClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management and
( chore ) camel - core : migrate routetest to junit 5
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` for testing WebSocket client interactions to
added a generic type set for ` RecordType ` in ` AbstractImportMetadataSourceService ` and a corresponding test in ` DSpaceServiceManager
refactor authentication comparison logic in AbstractCasWebflowEventResolver to use EqualsBuilder for improved readability to enhance code maintainability and
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
replaced occurrences of callNode . getType ( ) with callNodeType for consistency to improve code readability and maintainability by using a single variable for call node
added an ` @ Insecure ` annotation to the ` MessageBuffer ` class and updated its usage in the ` MessageBuffer ` class to enhance security
added new configuration variables for various Hive configurations in HiveConf . java to enhance configuration flexibility for various Hive configurations
replaced ` Set ` with ` HashSet ` in ` ResourceSet ` and added a null check in ` DefaultResourceSetService ` to ensure
changed ` decrefOnClose ` variable from ` decrefOnClose ` to ` decrefOnClose ` and added ` Collection < Reader
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , and Test3 classes to improve code organization and maintainability
simonstewart : fix test that fail due to bug in 2.49 http : / / bugzilla . org / show
refactor ` getFirstTypeArgument ` methods to use ` final ` instead of ` $ Gson $ Types ` to improve code clarity and ensure
rename keySet ( ) and values ( ) methods to KeySet and Values in Int2IntHashMap . java to improve clarity and consistency in
added duration field and getter / setter methods for bgColor and motion in FlipTransition . java to enhance flexibility in transition management by allowing
removed logging statement for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
update majorVersion to 9 and minorVersion 10 in ForgeVersion . java to ensure compatibility with the latest features and improvements
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` in ` StackLocator . java ` to improve logging
add javaparser version support for java16 and java16
updated padding logic for the statusView in ExpansionViewHelper . java to ensure proper padding for the statusView based on the number of replies
added a callback check and modified version check logic in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to ensure proper response handling when no version
added metadata management functionality to SeedUrl , SeedResource , and SeedResource classes to facilitate the retrieval and writing of seed metadata data
added a null check for the declaration before setting the pattern to avoid potential NullPointerException when declaration is null
refactor TestCoprocessorWhitelistMasterObserver class for improved clarity to enhance maintainability and readability of the code
ww - 4892 add package name to annotationactionvalidatormanager ( # 4892 )
replaced ` asList ` with ` Arrays . < Object > null ` in ` IterableTest . java ` and added a new test for null
added methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` MapIterableTestCase ` to use ` StreamSupport ` for
updated the return statement to clone the notifInfo object to ensure that the original notifInfo is not modified to avoid unintended modifications
do n ' t use string . equals ( key ) instead of string . equals ( key )
refactor AEADBlockCipher class for improved clarity to enhance maintainability and readability of the code
added a method ` isVariableLocal ` to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap ` , and ` variableNames
added a null check for resource ID and updated default value in RobolectricTestRunner from best to legacy to ensure proper handling of resource
added a condition to check for empty tables before setting strikethrough and underlining metrics in TrueTypeFont . java to ensure metrics
updated the SignPlugin constructor to accept a list of messageReaders as a parameter to enhance flexibility in message reader configuration during the SignPlugin instantiation
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a validation check for the remote repository in StandardMavenAuthenticationProvider . java to ensure that the remote repository is valid before proceeding with
refactor AudioNode class to improve code organization to enhance maintainability and readability of audio node functionality
added SSL context initialization and improved error logging in LinkyHandlerFactory and EnedisHttpApi classes to enhance security and provide clearer error
refactor HiveFunctionRegistry to use streams for improved readability and efficiency to enhance code maintainability and reduce boilerplate code for better
http : / / issues . apache . org / jira / browse / amq - 4896 - fix test failure
updated the ` getBuildTargetForAlias ` method to include a ` possiblyFlavoredAlias ` parameter and modified the return statement in ` B
camel - 14263 : camel - odata2 - do n ' t process odata feed if there be no entry
added a constant for EQUIVALENT _ VERSIONS and modified the return logic in MetaStoreSchemaInfo . java to improve code
cloudstack - 4892 : fix checkstyle issue in uservmmanagerimpl . expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these classes are outdated and should not be used in future development
updated ONDashClockExtension , AlarmReceiver , AlarmReceiver , AlarmReceiver , AlarmReceiver , and AlarmReceiver classes
updated GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to use " nvarchar " instead of " hamcrest " to
replaced calls to ` commit ( ) ` with ` apply ( ) ` in multiple classes to improve performance by avoiding unnecessary commit calls
added a new ` TestIdleListener ` interface to the ` StandardSession ` constructor and implemented it in ` AsyncTimeoutTest . java ` to
update testBigQueryTable to use String . format for consistency to improve readability and maintainability of the code
added background resource setting for predicted icons in HotseatPredictionController and reset the background in BubbleTextView to improve visual appearance
rename getflushafterquery to flushafterquery in mondrianproperties
[ native ] add unit test for nativeworker
updated LIMEExplanation and LIMEColumnarTest to check for all outputs before retrieving active features to improve accuracy of label retrieval based on
added a new option ` - r ` to the ` AppleSimulatorController ` and modified the ` InstallCommand ` to accept an argument
refactor LineSelection to use GenericStyledArea for position calculations to improve code readability and maintainability by reducing redundancy
added a check to ensure the lifecycle state is available before proceeding with operations to avoid potential errors when the pipeline is not available
added clipping to the outline of the QSB widget in QsbWidgetHostView to improve the visual appearance of the QSB widget
added timing checks and improved flag conversion logic in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance flag conversion accuracy and
replaced specific GL _ DEPTH _ TEST with a wildcard import in FloatingTextRenderer . java to streamline the import statements and enhance
rename target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ backend _ libffi _ LibFFI
refactor JdbcAggregationRepository to use a private propagationBehavior variable instead of a hardcoded value to improve flexibility and maintainability of the propagation
fix npe in layervalidation when there be no regularization
added exception handling for read / write operations in AbstractChecker . java to improve robustness by catching potential exceptions during connection read / write operations
changed the access modifier of the ` colorStack ` variable from static to instance to allow access to the ` colorStack ` variable from other classes
changed the parameter ` false ` from ` false ` to ` true ` in the ` getMappedStatement ` and ` hasStatement ` methods to
updated the method call to convert tradableIdentifier to lowercase in BTCEPollingMarketDataService to ensure case - insensitive depth retrieval for
updated channel state assertions from " 0.312716 , 0.322700 " to " 0.322700 " and "
remove versionedhash field from enginepayloadparameter ( # 2296 )
added a call to set trigger price and onTriggerPriceTextFieldChanged ( ) in MutableOfferView . java to ensure the trigger price text is
updated student feedback submission redirect logic to include both home page and error conditions to enhance user experience by providing appropriate feedback when a student is not registered
removed print statements for default suffix handling in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 26969 addendum fix checkstyle violation in hstore . log ( )
# 1343 - add support for change property on many bean ( # 1343 )
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific imports with wildcard imports and added a new method to handle popup menu visibility to improve code readability and ensure proper visibility management for
removed redundant null check for insert in StressProfile . java to streamline code and improve readability
replaced instances of ` asScalaIterable ( ) ` with ` collectionAsScalaIterable ( ) ` in multiple test wrapper
added null check for requests before setting matches in MockServerEventLog . java and improved logging in HttpForwardObjectCallbackActionHandler . java
added warning log for loading properties file in DefaultEnvironment . java to improve visibility into property loading failures
added a try - with - resources statement for SessionDataSet in ClientMain . java to ensure proper resource management and avoid potential memory leaks
added support for multicast network in SetOutgoingIf . java to ensure proper handling of loopback connections based on network capabilities
updated the initialization of sqlCommand to include a length parameter to ensure proper handling of command parameters
updated the latestConsumeTime and latestConsumeTimeForEnergy methods in UnDelegateResourceActuator , BandwidthProcessor , and Energy
added a constructor to ` SessionManagementConfigurer ` and updated related checks for ` invalidSessionStrategy ` to improve flexibility in handling invalid session
improve error message in ProtobufAnnotationSerializer to provide more context when a token cannot be find
added a new test class ` MapAssert _ containsKeys _ Test ` for verifying the presence of keys in the map assertions to ensure the
added a new ` JDBC4TemporaryPreparedStatementMethods ` interface and modified the ` genclass ` method calls in ` JdbcProxyGenerator ` to enhance
added a new method ` ensure ` to ` ServerWebSocketContainer ` and updated related test cases in ` DirectUpgradeTest ` to improve WebSocket container
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` for ` getLanguageFlags ` in ` CxxFlags . java ` to improve immut
pdfbox - 4892 : fix nullpointerexception in getcurrentpoint ( )
added a static final MethodHook array to the MethodHook array and replaced it with an empty array in MethodHook . java to improve memory management
added a boolean flag to control access control in MockAuthenticationManager to enhance security by allowing control over access control during authentication
updated ` afterJob ( ) ` method signatures to accept ` JobExecution ` parameter instead of multiple method signatures to enhance flexibility in job execution handling
updated file permission check in SharedLibraryLoader . java and UtfFontTest . java to ensure file operations are only performed if they can execute
feat ( timeseriesquery ) : add ` ` language = = 3 ' ' to query ( # 325 )
bug 62323 - fix bug where unmarshalling be not work
added new constant values for Battery , Annotation , Timewithoffset , and PROFILE _ NAME in the CustomUrlManager class to enhance
change the type of the applyRule method from Hashtable to Map in SearchExpression . java to improve flexibility and maintainability of the code
rename ` movedGeoWidget ` to ` movedObject ` in ` EuclidianController . java ` to improve clarity and consistency
updated JoglGraphics and ProjectiveTextureTest to use Format . RGB565 and modified texture filtering in ProjectiveTextureTest to enhance
updated the ` setResourceToDelegate ` method to return a ` File ` instead of a ` void ` to improve clarity and ensure that the
camel - 14284 : camel - properties - allow to intercept a property component from the endpoint . thanks to daniel for the
updated condition from 1 to 2 in ActionScheduler . java and updated expected attempt count assertions in TestActionScheduler . java to ensure correct behavior of
updated the variable name from " debug . log " to " / tmp / ums _ dbg . zip " if debug _ log is not
update renderdebugconfig to use renderdebugconfig instead of worldrendererimpl
replaced the call to ` pipe . gate ` with ` pipe . resetGate ( ) ` in ` BlockGenericPipe . java ` and
replaced the initialization of TestSupplementary with a try - finally block to ensure the default locale is restored after the test execution to avoid potential
updated the random color from 0.8f to 0.4f in the Team class to improve the variability of the team ' s
replaced HashSet with ArrayList for activeMatchedStates and added logging statements in SequenceMatcher . java to improve performance and enhance logging clarity during state
updated the condition to check for null and empty annotations in SoftAsserts . java to simplify the logic for determining if the annotation is null or empty
updated error messages in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance
refactor CSV file reporting in CallTreePrinter to use a new method to improve code readability and maintainability by reducing redundancy
added null checks for note and content initialization in DetailFragment . java and WidgetProvider . java to improve code robustness and prevent potential NullPointerExceptions
added a peakTasks variable and adjusted the loaded calculation logic in AssetManager . java to improve asset loading efficiency by accurately track the number of
simonstewart : disable native event on window
added new constants for score and fetch interval in Injector . java and refactored scoring logic in ScoringFilterException . java to improve code
updated import statements in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKeyTests from commons - collections to commons - collections
added a method to check if the zkController is null and created a test for share schema in CoreContainer to improve code clarity and ensure
updated size calculations to use sizeInBytes ( true ) instead of sizeInBytes ( true ) in multiple classes to ensure accurate size representation based on the
added a null check for Version1 _ 2 in VersioningTest . java to ensure that the test correctly verifies that the Version1 _ 2
updated SQL query to include type ' d ' and ' t . typnotnull ' in multiple classes to ensure that only non - null columns
[ java ] fix leadership term event when append new leadership term event .
removed the ` buildMediaType ` method from the ` WebClientPlugin ` class to simplify the code by eliminating unnecessary media type handling
replaced ` fillUsingLengthPrefix ` and ` fillAndGetIndex ` methods with ` fillAndGetIndex ` across multiple classes to improve clarity
added a check for non - compacted base transactions in AcidUtils . java and created a new test in TestCleaner . java to
updated initialization of immutableStorageScheme and qualifierEncodingScheme to use NON _ ENCODED _ QUALS instead of ONE _ CELL _
added new classes PojoProducersCustomized and RestProducersCutomized to extend PojoProducers and RestProducers in the
updated cache configuration keys from " cache " to " cache _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to improve clarity
removed duplicate registration of AesGcmProtoSerialization in AesGcmSivKeyManager . java to streamline the code by elim
added a new item stack for " slabWood " in OreDictionary . java to track the number of wooded items in the
refactor multiple session - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 - snapshot to 3.2
hhh - 15836 - fix test failure inormalizedtablephonedetableconstrainttest
updated sprite drawing logic in HelloWorld . java to correct the positioning of the sprite to ensure proper rendering of the sprite with accurate positioning
updated the loop logic in PlayerFunctions . java and added a toString ( ) method in WorldGuardListener . java to improve code readability and
added a deprecated constant LUCENE _ 8 _ 5 _ 0 to the Version class to indicate that this version should no longer be used
corrected the spelling of " selfInitiated " to " selfInitiated " in the print statement to improve code readability and maintain
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing for signed
refactor dependenciesType handling in CoNLLUOutputter and SemanticGraphCoreAnnotations to use SemanticGraphCoreAnnotations ' s DependenciesType
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods in ` ParseContext ` and ` ParseContext ` to
updated the test method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
updated array size from ` Block . blocksList . length ` to ` 256 ` in ` Configuration . java ` to accommodate larger block
update bukkitmain to use git - spigot instead of Offline player
added support for escaping SQL statements in PostgresDatabase in AbstractSQLChange . java and updated test cases in AbstractSQLChangeTest . java to
added methods to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` BagsTest ` in ` MutableBagFactoryImpl
updated title and permalink assignment logic in BuildNavAndPDFBody . java to ensure proper handling of HTML escape codes and improve error handling for file
http : / / issues . apache . org / jira / browse / amq - 4896 - fix nhcmqttconnection
refactor change set retrieval to use the root change log if it is null to improve robustness by avoiding potential null pointer exceptions
updated method calls in StaticMethodInterceptor , RocketMQGlobalPluginHandler , and PrometheusPluginBootService to use output ( ) instead of
added database drop functionality in TestHiveMetaStorePartitionSpecs . java and implemented logging in TestObjectStore . java to improve database management and
added a new parameter " order _ currency " to the parameters in the BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
updated method return type checks to use ` isVoid ( ) ` instead of ` getFullyQualifiedName ( ) . getFullyQualifiedName ( )
refactor YamlResource to use a new GET endpoint and add a listYamls method to list Yamls data to enhance functionality for
changed access modifiers of equals and hashCode methods from public to public to allow access to these methods from other classes
refactor ThreadFactory instantiation to use a lambda expression for improved readability to enhance code readability and maintainability by reducing boiler
added unit tests for adding to MongoDB templates in MongoTemplateTests . java and created PersonWithAList . java to ensure correct functionality of the
ggb - 1343 fix applet size calculation in web
added a delay for setting the toolbar visibility in DrawerActivity to ensure the toolbar is hidden after a delay to improve user experience by preventing
refactor ` unpackFirstPageReader ` and ` unpackFirstPageReader ` methods in ` SeriesReader . java ` to improve readability and
cloudstack - 4892 : do n ' t attempt to save password for vm on router .
added variables ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` in ` Response . java ` to ensure proper
added a check for warnAssignmentSideEffects in GroupDialog . java to prevent unnecessary processing when assignment side effects are disabled
refactor JSON and JSONObjectConvertor classes to improve code organization to enhance maintainability and readability of JSON conversion logic
updated the condition in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper alignment of icons based on the maximum
( chore ) camel - cas : fix resource leak in jwttokencipher signingpublickeyendpoint
updated import statements and added MIME type validation logic in Basic . java to ensure correct MIME type handling for UNIX systems and improve error reporting for file
fix for http : / / issues . apache . org / jira / browse / jcraft / browse / amq - 4892
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and removed unnecessary null checks in ` MethodHandles ` to streamline class loader
removed the ` doConnect ` method signature from the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to simplify
added a new test method for handling empty final columns in TextReader and implemented a test for empty final columns in TestCsvHeader to ensure proper
added compass gravity and margins in NearbyMapFragment . java to enhance the visual appearance of nearby map elements
added unit tests for interpolation and distance calculations in GeoPathTest . java to ensure correctness of distance calculations for different GeoPath formats
added exception handling to the ` getLeafFilterBuilderByType ` method and modified return statements in ` LeafFilterFactory ` , ` ParquetFilter
added support for setting the language of the current audio track in LibMediaInfoParser . java to ensure the current audio track uses the correct language
added a warning log for schema incrementing in MicroserviceRegisterTask . java to inform users that the schema version is less than the old version
replaced System . arraycopy calls with a new ` addAll ` method across multiple array classes to improve code readability and leverage built - in
reformatted the closing of the connection in DataSourceProxy . java to improve code readability and maintainability
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to handle null or empty client registrations to improve flexibility and
added a method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to reset the UI state to ensure that the UI state is
added handling for failed steps in JUnitReporter and updated test cases in JUnitReporterTest to ensure proper reporting of pending exceptions and improve test
add playerselector . java to make it easy to use playerselector .
added Closeable interface to Selector class to ensure proper resource management and prevent potential memory leaks
updated connection pool settings in MaxConcurrentStreamsTest . java to use MultiplexConnectionPool for improved connection management to enhance performance and resource management
added stringType ( ) methods to CoreOptions . java to ensure proper handling of string types in the application
added null checks for character and parameter in HqlQueryRenderer and updated context configuration references in EclipseLinkUserRepositoryFinderTests to improve robust
updated status checks in HttpGenerator , HttpChannel , and Response classes to use HttpStatus . NOT _ SET _ 000 instead of SC _ OK to
pdfbox - 4892 : improve code readability , a suggest by valerybokov
fix hikarcpcollectortest fail on slow ci server
refactor ParquetFormatPlugin , ParquetGroupScan , ParquetFormatPlugin , and ParquetGroupScan classes to improve file selection handling
updated the ` isSuccess ` variable to true and added error handling in ` Jsr199Javac ` to ensure proper execution of the compilation
added a new ` BaseTableModelListener ` class to handle table change events in ` DefaultSortedTableModel ` to enhance the model ' s
updated the range check from 49152 to 65535 in ServerConfig . java to ensure that the number is within a valid range to prevent potential errors
added support for DocumentsContract in AuthenticatorActivity and AccountRemovalJob classes to ensure compatibility with devices running Android KitKat and above
removed logging functionality from MainApp . java to streamline logging process for better performance
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for improved exception handling to enhance robustness by ensuring wrapped exceptions are properly
replaced the calculation of ` newSize ` with ` this . length ` in ` StringBuilder . java ` to improve code clarity and ensure proper
pdfbox - 4892 : throw illegalargumentexception instead of illegalargumentexception
added a new file TbStopWatch . java that implements a stopwatch class to facilitate the creation and management of time - related
corrected the spelling of " init " in PListStore . java to ensure proper initialization of the PListStore instance
added @ Deprecated annotations to multiple Continuation classes to indicate that these classes are outdated and should no longer be used
[ zeppelin - 4892 ] set thread context class loader for remoteinterpreterserver
[ forge ] fix nullpointerexception when use commandsourcestack . getentity ( ) .
updated minSdk references from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
updated parameter names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 1188 - add simplename ( ) method to ebeaninternal . getname ( ) ( # 1188 )
updated URL paths from " wro / all . js " to " static / all . js " and added a new WroManagerFactory class
added a new test method ` showLatestTimeseriesTest ( ) ` to ` IoTDBMetadataFetchIT ` to verify that the latest timeseries
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and clarity in the
refactor exception handling in OCSPChecker to use a conditional check for CertPathValidatorException to improve clarity and maintainability of error handling
benchmarker : add option to disable write output solution
bulk client regen : set maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815 . java ` that implements a test for slice size reopening to ensure proper functionality of slice size
added shapeless recipe to the game registry in BuildCraftTransport . java to enhance gameplay mechanics by allowing shapeless
[ mahout - 113 ] fix arrayindexoutoutofboundsexception in sequentialaccesssequentialaccessvector
added metadata handling for Shulker and PlayerSpawnListener in BukkitMain , PlayerSpawnListener , and PlayerEvents classes to
added a getDebugLogger method to DIHWriter and SolrWriter classes to provide a way to access the debug logger for debugging purposes
updated import statements and added methods for maximum directory and file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter . java
refactor UpToTagChangeSetFilter to use a single instance of UpToTagChangeSetFilter and add a check for tag matching to improve code
replaced LinkedList with ArrayList in multiple Java files to improve performance and readability by using a more suitable data structure
refactor BrokerRoutingManager class for improved clarity to enhance maintainability and readability of the code
updated volumePaint , upPaint , and upPaint values from gray to green in CandlestickRenderer . java to improve visual cl
refactor layout parameters handling in InsettableFrameLayout to improve layout parameter management to enhance flexibility and maintainability of layout parameters based on
added a ` duration ` parameter to the ` BuildTargetDurationListener ` class and updated its usage in ` BuildTargetDurationListenerTest ` to
replaced ` @ Profile ` annotations with ` @ Ignore . Assume . Assume . Assume . Assume . assumeTrue ` across multiple test files to
added a null check for the user before processing claims in OAuthConfirmationController . java to prevent potential NullPointerException when user is null
camel - 16462 : camel - test - add unit test to make it easy to run camel - test
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by using a more
api : listpublicipaddresses api : list public ip by source network id
added tests for the ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManagerTest ` and implemented it in ` ShadowPowerManager
updated the version variable from " 9.4 . z - SNAPSHOT " to " 9.4 . z - SNAPSHOT " to ensure
added unit tests for verifying invocation order in NumberOfInvocationsInOrderVerifier to ensure correct verification behavior for various invocations in the verification process
replaced debugForceEvaluation ( ) calls with debugForceEvaluation ( ) in TRegexExecNode . java to improve performance by avoiding unnecessary
added a " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to allow the application to start the profile
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer
updated log message from ` getFile ( ) ` to ` getName ( ) ` in ` CodeEditorView . java ` and added null check in
updated string formatting in ClassFileReader and added warning messages in JdepsTask to improve readability and provide clearer error messages for skipped entries
refactor Fetcher and FetcherTask classes to use LuceneStorage for link storage management to improve code organization and maintainability by centralizing
added a new parameter ` existingBubble ` to the ` populateBubble ` method and modified the ` populateBubble ` method to include
refactor exception handling in ScheduledRoutePolicy , ScheduledJob , and SimpleScheduledRoutePolicy classes to improve clarity of warning messages and provide more
updated method signatures in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to use buildRpcExtJson instead of BuildRpc
[ java ] introduce a new delay generator for multicast .
refactor Gson initialization in ClientInformationResponseView to use JsonObject for JSON serialization to improve code readability and maintainability by streamlining JSON
added a check for zero fieldAmount before setting average price in HuobiAdapters . java to avoid setting average price when the field amount is
removed the private method ` rawExecutionReports ( ) ` from the ` rawExecutionReports ( ) ` call in ` BinanceStreamingMarket
added a ` fail ` method to ` LdapTimeoutTest ` and modified conditional checks in ` ReadServerTimeoutTest ` to improve error handling and
added checks for existence before reading user dictionary files and improved logging in Mary and JPhonemiser classes to enhance robustness by
added a check to store the alias / file name if it is blank before updating the password file to ensure that the alias / file name is
added a check for already parsed segments in ParseSegment . java and implemented a method to check if a segment is already parsed to improve robustness
[ hotfix ] [ yarn ] make yarn . application - attempt - failures - validity - interval configurable
added logging for unavailable H2 drivers in GeoserverInitStartupListener to improve error handling and provide clearer logging when the H2 driver
hbase - 23231 add support for snapshot - based input format scan ( # 2323 )
added fixedHeight and fixedWidth fields to the LoginInstanceRequest class to support customizable display dimensions in the application
updated the ` update ` method to accept a ` cornerRadius ` parameter instead of a ` RectF ` parameter to enhance the functionality by allowing
updated COMMANDS _ TO _ REMOVE string to include additional descriptions and added filter settings for cross product in the job tracker to enhance clarity
http : / / issues . apache . org / jira / browse / amq - 4892 - allow retry on a connection from
add a polloperation parameter to the txnEnsureReserve method and update its usage in the queue container to allow for more flexible handling of
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to enable handling of string arrays in the matcher
updated DELETE ROWS commands to include " CLIENT SELECT " and added a new ExplainPlanTextTest class for explaining client selections to enhance
added retryable exception handling in BaseServiceException and updated test cases in BaseServiceExceptionTest to improve exception management and ensure correct behavior when handling socket exceptions
added support for rapid install types in multiple classes to enhance functionality by allowing configuration of rapid install types
updated the regex pattern in SortTest . java to include a ' - ? ' suffix to ensure that the seed pattern accurately matches a valid
refactor MultimapSubject to use a factory for iterable values and string representation to improve code readability and maintainability while ensuring proper handling of
updated return value from ` waitForLauncherObject ( " hotseat " ) . getVisibleBounds ( ) . top ( ) ` to ` y
added a boolean field ` transmux ` and updated related methods in ` Transformer ` and ` TransformerInternal ` classes to handle transmux
added a loop to localize strings in Picker . java to ensure consistent display of localized strings in the UI
camel - 234 : camel - cxf - add exception handling to camel - cxf
hhh - 10663 - postgresql81dialect do n ' t handle lock acquisition and pessimisticlock acquisition
added null check and improved query ID retrieval in TestJdbcDriver2 . java and modified HiveStatement . java to enhance error handling and ensure
[ beam - 6892 ] [ test ] add test for useunboundedpcollections in pardotest
updated the formatting of the txtFilename text in GpsSimpleViewFragment . java to improve code readability and maintain consistency in formatting
[ java ] remove unused leadershipTermId parameter from joinlogasfollower method
changed the access modifier of the ` exchange ` variable from ` getHttpExchange ( ) ` to ` this ` in ` HttpSender . java `
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated method names from ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency in
added null check for the tree before processing markers in Recipe , SearchResult , and Markers classes , and created a new MarkersTest class
changed font size types from float to double in multiple classes to improve precision and consistency in font size handling
changed the type of the email variable from ` matchSingleDoCoMoPrefixedField ` to ` emails ` in ` AddressBookDoCo
refactor exclusion handling in RawMavenResolver to use a set for group artifacts to improve clarity and maintainability of artifact creation logic
refactor currency pair initialization and error handling in DSXAdapters and DSXBaseService classes to improve code clarity and ensure proper initialization of
refactor TestBlockingIO , TestParsingTable , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] fix incremental build failure when kiemodulepom be invalid
updated the initialization of the ` copy ` variable and added a conditional check for the existence of ` sobj . has ( k ) ` to
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
do n ' t throw an unknownidentifierexception if the field be not find .
added a new annotation for CompletableFuture in DefaultNullnessAnnotations . java to enable handling of completion stages in the database
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the adjustment for freezeCheckPoint to accommodate
added internal state management for annotations in AbstractCommonPowerMockRunner and PowerMockRunner to ensure consistent annotation visibility across tests
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure compatibility with the
added indentation formatting for method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced ` LuceneTestCase ` with ` TestCase ` in ` TestSingleTokenFilter . java ` to utilize JUnit '
updated the HTML output format in HtmlProcessInformationsReport . java to ensure proper rendering of wrapped text in the output
refactor JdbcStepExecutionDao , MapStepExecutionDao , MapStepExecutionDao , and MockJobRepository classes to improve execution context management and
added a condition to check if the folder is hidden for new media folders to ensure that the child is only added when the new media folder is
added null checks for actor and added null checks for firstWidget and secondWidget in SplitPane . java to ensure proper handling of null arguments and
added handling for Parameterized types in RemoveUnusedImports . java to ensure proper handling of fully qualified type parameters in the code
updated the method call from ` getModInfos ( ) ` to ` this . getVersion ( ) ` in ` UniqueModListBuilder . java
changed logger initialization to static in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary object creation
updated the SQL string from " RLE . 81 + 12 " to " RLE . 81 + 12 " in PhysicalPlanTest . java
added a method ` isValue ` to check if a string is a value of pairs in ` AttrData ` and introduced a new test for ordinal
added locale and modifier key checks in CPlatformResponder . java and implemented utility methods in LWCToolkit . java to improve character handling
[ java ] add aeron _ publication _ connection _ timeout to testmediadriver . launch ( ) .
added a check for css , images , and favicon requests in GTVGFilter . java to ensure that only valid CSS and images are processed
added assertions to verify the installation of the apk and ensure the device is rooted to improve test reliability by verifying the installation process
# 1188 - remove oracleansisqlrowslimiter and remove oracleansisqllimitrequest
updated test cases in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java to use a more suitable MultiMap instance to improve test
updated the path for Java files in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of the Java library
added a boolean variable ` mIsDismissHapticRunning ` and modified the condition to check if it is dismissed to ensure
fix mixineventworldexplosion not work with projectile
removed unused imports and implemented getItemId method in SymbolInputAdapter . java to streamline code and improve maintainability by eliminating unnecessary dependencies
updated API endpoint parameters in Bitfinex . java and BitfinexPollingMarketDataService . java from 10 to 50 to improve flexibility in
added a check for double quotes in the result string in StaxConverterTest . java to ensure proper handling of special characters in the output
[ hotfix ] [ runtime ] add ` ` leaderlatchpath ' ' to k8s electiondriver . tostring ( )
refactor SqlSessionFactoryBean class for improved readability to enhance maintainability and facilitate future updates
[ 3.0 . 0 ] fix nullpointerexception in TripleInvoker . java ( # 8022 )
replaced error handling with a new exception throwing in PolygonRegionLoader . java to improve error handling by throwing a runtime exception instead of throwing an
added a method ` isStarted ` to check if the current deadline is in ` Deadline ` and managed it in ` RawStoreProxy ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when a channel is closed
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ runtime ] fix checkpointcoordinator . reset ( ) in region recovery
fix : add mappedcontainercomponent to entitydatajsonformat and entitydatajsonformat
[ iotdb - 4892 ] fix npe in walnode . getoldestunpinnedmemtableinfo ( ) ( #
added a test for retry the same host on callback failure in HttpTest . java to ensure proper handling of callback failure scenarios in the HTTP client
rename package - info . java to package - info . java to improve clarity and consistency in package documentation
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server escape functionality to ensure correct functionality of SQL server interactions in the application
( chore ) camel - jooby : fix npe in joobybeanrepository
replace synchronized block with util . wait for bc in JavaFXSEPort . java to improve thread safety and reduce synchronization overhead
updated package structure and import statements for ParameterFlags , AsmLibraryLoader , AsmRuntime , and Struct classes to reflect the correct package structure
replaced instances of ` CropperBehaviour ` with a new method ` createCropperBehaviour ` for image objects to improve flex
removed appName parameter from the configure method and updated its usage in InputRC and InputRCTest classes to simplify method signatures and improve clarity
add test to verify that ` ` ignore - deps ' ' option be set to ` ` false ' '
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple test files
replaced instances of ` value ` with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure that the value is
added a " MOVE " status condition to the connection status check to ensure proper handling of MOVE events in the connection logic
updated ISO8601 _ PERIOD _ MICROS and ISO8601 _ PERIOD _ MICROS date formatting in FixedDateFormat .
replaced the import of ` org . apache . curator . shaded ` with ` com . google . common . collect . Lists `
[ hotfix ] [ table - common ] fix race condition in hssubpartitionmemorydatamanager # startspilling ( )
added a check for untrusted visit permissions in the plot permission check to ensure only authorized players can access untrusted visits
added a check to return early if the service is not registered to optimize performance by avoiding unnecessary processing when the service is not registered
added a new condition to check for additional character values in BasicURLNormalizer . java and added a new test case in TestBasicURLNormalizer .
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to restrict access to these methods for better encapsulation
added a condition to compare the cipher rate in EncodingConfiguration . java to ensure consistent comparison of clock rate for encoding
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` ProjectCommand ` classes
updated the way the zero digit is set in HostLocaleProviderAdapterImpl . java and modified calID retrieval logic to improve code clarity and
added a new file ` MSwingUtilities . java ` that implements a utility class for image scaling to facilitate the use of
camel - 16462 : camel - mail - producer should use asyncproducer instead of defaultproducer to make it easy to use async
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties
added unit test for onexception handle and throw new exception
added new files ` Main . java ` , ` ScriptRenderer . java ` , and modified ` SchemaCrawlerMojo ` to use it to
added a condition to check if the input state is not __ NONE in the Request class and created a new test for query after read to ensure
added checks for width and height in BitmapFont , and modified touch focus logic in Group , SelectBox , and FlickScrollPane classes to ensure
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a new test in ` DeploymentTest ` to
added a forceIgnore parameter to the stackToString method in LexiconRecipeMappings . java to enhance flexibility in stack formatting by allowing optional
replaced a hardcoded sleep duration with a constant TIMEOUT _ AFTER _ INTERUPT value to improve code readability and maintainability by using
replaced specific imports with wildcard imports and modified conditional check in LoincHandler . java to improve code readability and maintainability
simonstewart : use class . getresource instead of class . getresource in jollydayholidays . java
added a new file ` FieldUtils . java ` that implements utility methods for retrieving accessor and setter methods to facilitate field accessibility
updated assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with holdsLock in DoubleStaticImport . java to improve
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom content in AppWidgetHostView to improve layout
added a method ` updateSettingsWithSaveLastAccount ` to ` XabberAccountManager ` and modified the ` AccountAddFragment ` to
added a new method ` setvar ` to handle variable setting in ` Commands . java ` to provide users with an option to set a variable
add passive catentity . onanimaltame ( ) method . close # 35505
added null checks and improved error handling for unsigned range values in WindowFrame . java to enhance robustness and provide clearer error messages for
pdfbox - 4892 : add test for font name in testcreatesignature
added a call to set the app ' s mode in PageListController . java to ensure the application uses the correct application mode
added support for passing Docker file paths in ImageFromDockerfile . java and created a new test class DockerfileBuildTest . java to enhance
added a null check for threadInfos [ threadId ] in ThreadInfos . java to ensure threadInfos [ threadName ] is only created if it
updated the condition from 0.00001f to Utils . FLOAT _ EPSILON in PieChartRenderer . java to improve accuracy in determining
[ hotfix ] [ runtime ] add debug log for singleinputgate and singlecheckpointbarrierhandler
added SYNONYM , ALIAS , GLOBAL _ TEMPORARY , ALL _ TABLE , and TYPED _ VIEW to Schema . java
added a minimum similarity parameter to the FuzzyQuery constructor and modified FuzzyTermEnum constructor to accept a minimum similarity parameter to enhance flexibility
replaced ` addActionsView ( ) ` method with ` setActionsView ( ) ` in ` RecentsView . java ` to
joran - 1343 : add support for the ` ` immediateflush ' ' property in the enclosing appender
added " org . springframework . boot . autoconfigure . amqp . RabbitAutoConfiguration " and " org . springframework . boot .
modified the null check in JLayer . java and added a new test class bug6875716 . java to ensure proper handling of null
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base .
refactor BciBlockMapping and GraphBuilderPhase to improve block management and encapsulation to enhance code clarity and maintainability by encapsulating
added a new method ` isLegacyRenderer ` and ` setLegacyRenderer ` to ` true ` in the ` Label ` class to enhance functionality
replaced calls to ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added a null check for mObserver in the return statement to prevent potential NullPointerException when mObserver is not initialized
modified the type of the thenComparing method in Comparator . java and added a new test class for Department in TypeTest . java to
do n ' t mention bitset in docidset . iscacheable ( ) documentation , since cachingwrapperfilter do n ' t use bitsets for cache anymore ( fix suggest by paul elschot )
updated the end time UTC setting in UserRuleAnomalyFunction . java to use the current bucket millis instead of a null value to ensure
added error handling for parsing integer values in VisualScoreTagTest . java to ensure robustness by handling potential NumberFormatException during parsing
updated the naming policy and class loader configuration in MockFactory . java and MockFactoryTest . java to improve clarity and ensure proper class loading
added a new ` OriginalFormat ` class to handle formatting and parsing of ` Object ` objects in ` ConverterWithEnumFormat . java ` to
updated date format from " yyyy / MM / " to " PATTERN _ YYYY _ MM " in FileStorageUtils . java to improve maintainability
refactor JAWTRenderer class to improve rendering performance to enhance performance and maintainability of the rendering process
camel - 14836 - camel - aws2 - lambda : remove auto - discover client from aws2 - lambda
cloudstack - 4892 : add validation for mac address in uservmmanagerimpl to ensure that a valid mac address be generate
removed the check for " Authorization " in the stringHeaderName to simplify the code by eliminating unnecessary checks
updated the method call from ` submit ` to ` execute ` in ` TraceableExecutorService . java ` to ensure proper execution of commands in the
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` AuthenticationProcessingFilter ` classes to provide
updated the randomness of the randUsePoints variable in SolrTestCaseJ4 . java to ensure that randUsePoints is only set to
replaced ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to improve clarity and consistency in method naming
updated ` formatForConsole ` method to accept ` Locale . US ` instead of ` Ansi ` across multiple files to ensure consistent formatting across
refactor GroovyParserVisitor and GroovyPrinter to use a wildcard import and streamline import statements to improve code readability and maintainability by redu
added logic to adjust insets for bottom , bottom , and right insets in the Border class to ensure proper positioning of insets based on the specified
replaced the instantiation of ` mGestureState ` with a dedicated method ` createGestureState ` to improve code readability and maintain
updated import statements and modified version formatting in LlapServiceDriver . java to use Instant and DateTimeFormatter to improve code clarity and maintainability by
refactor openblas . java and openblas _ nolapack . java files to improve code organization and maintainability
replaced ` IOUtils . closeQuietly ` with ` java . io . IOException ` in ` TorrentsStorage . java ` to ensure proper resource
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during transaction management
increased the timeout duration from 120 to 480 in waitForRecoveriesToFinish and set SO _ TIMEOUT in AbstractDistribZk
added a new file ` SearchResults . java ` that implements a new class ` SearchResults ` to handle search results to facilitate
add a null check for threadCPUTimer and refactored refresher initialization in CPUSamplerSupport . java to improve code safety
replaced the variable ` primitives ` with a temporary variable ` primitivesTemp ` in ` BytecodeNode . java ` to ensure proper initialization of
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated the feature flag from DISABLED to TEAMFOOD in FeatureFlags . java and modified the return statement in AppIcon . java to
added a new API endpoint for retrieving instance pools in InstanceResource . java to enhance functionality for managing instance pools in the application
added methods to check for early termination on document ID and prefix in TopFieldCollector . java and updated test cases in TestTopFieldCollectorE
updated InlineBytecodeGenerator to use isToString ( ) instead of isNative ( ) and added new test cases in InlineByteBuddyMock
added logging statements for compilation and preprocessing commands in CxxCompileStep and CxxPreprocessStep to improve visibility into compilation and preprocessing
fix stringutil . removecharacter ( string , char ) method to remove character from string
[ 3.0 ] fix metadata service protocol in application config ( # 8043 )
danielwagnerhall : add danielwagnerhall for danielwagnerhall
changed the type of ` values ` from ` Collection < ? > ` to ` Number [ ] ` in ` DistributionGraph . java ` to
simplified conditional statements in FormatStringChecker . java to improve code readability and maintainability
set core variable to null in ElectionContext . java to ensure proper initialization of the SolrCore instance
refactor ITestDbTxnManager class for improved readability to enhance maintainability and facilitate future updates
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added tests for the ` MapModel ` class in ` CodeFirstPojoClient ` and ` CodeFirstPojoIntf ` classes to
pdfbox - 4892 : fix a suggest by valerybokov
refactor selection option handling in ScaleDialog . java to improve code readability and maintainability by reducing boilerplate code
fix nullpointerexception in playertradesetravelbelt . updateplayerstepstatus ( player )
pdfbox - 4892 : do n ' t throw an exception if no appearance stream be create
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to ensure predictable iteration order of keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and modified method signatures in multiple classes to improve
updated libdc1394 preload from " libdc1394 - 22 " to " libusb - 139494 - 25 " to
added a conditional check for agentSupport before setting the constructor in MainMockTransformer . java and created new classes MockStaticWithPrivateCtor . java
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added a method to define aWT WM _ CLASS string for the application name in MainFrame . java to ensure the application name is correctly
updated the depth calculation logic in XRSurfaceData . java based on pixel size to ensure correct depth value is set based on the color model
added error handling for unsuccessful responses in OkHttpDataSource to improve error reporting for unsuccessful responses
added a static method ` exit ` to ` TopLogging ` and removed the ` sleep ` method from ` TopThreadGroup ` to streamline
updated the logic for determining the start index based on the regexp ' s type to ensure correct starting index is used based on the regexp ' s
planner - 468 upgrade to optaplanner 6.3 . 1
updated the assignment of the highAllocation variable from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to ensure correct
added a method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` for deleting entries without feeds to
changed the return type of the appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] use no - op idle strategy for low latency medium driver .
added status checks for not - modified responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that headers are only written when
renamed ` SpliceInstrumentListener ` to ` ToolEvalNodeFactory ` and updated related methods in ` InstrumentationPartialEvaluationTest ` to
added paintTabArea method to SynthTabbedPaneUI to ensure proper rendering of tab areas based on insets
updated ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept a ` Object ` argument for depth retrieval to improve
camel - 14263 : camel - core - add support for file separator and absolute path .
added a new method ` build ` to ` JavaProvenance ` and updated related imports in ` MavenProjectParser ` to include dependencies to enhance
added trace logging for Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and modified the condition in EqualityVisitor . java
updated loop iteration count from 100 to 200 in CloudStateUpdateTest . java to accommodate longer state updates
remove unserializablecolumnfamilyexception from hintedhandoffmanager
added a check for writable output files in NativeErrors . java to improve error handling and provide clearer feedback when the output file is not writable
added package info retrieval and error logging in LauncherModel . java to improve error handling and logging for package retrieval failures
cloudstack - 410 to 420 upgrade should throw ` ` cloudruntimeruntimeexception ' ' instead of ` ` cloudruntimeexception ' '
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to
replaced ` startsWith ( ) ` with ` regionMatches ( ) ` in ` LineReaderImpl . java ` to improve code readability and
added imports for SourcesFileResults , SourcesFileErrors , and modified data table handling in Recipe . java to improve code clarity and maintain
added functionality to dismiss all tasks in the overview in TaplTestsTaskbar to improve user experience by ensuring all tasks are dismissed
added DbUpgradeSystemVmTemplate interface and refactored DatabaseUpgradeChecker to implement DbUpgradeSystemVmTemplate interface to enhance database upgrade process by
changed the variable ' conn ' from ` final ` to ` final ` in ` LdapClient . java ` to ensure immutability of the
refactor index handling in SequenceAction . java to use a variable for better readability to improve code clarity and maintainability
patch by jbellis ; review by brandonwilliams for cassandra - 1346
added a check to skip synthetic fields in ReflectUtils to ensure proper handling of synthetic fields during reflection operations
added a new LoggerProvider class and integrated it into the Configuration and ApplicationController classes to facilitate the use of SLF4J
changed the type of ` value ` and ` port ` from ` String ` to ` Object ` in ` ServerStatusCommand . java ` to
added deprecation warning handling for multiple glue classes in SpringFactory and updated test cases in SpringFactoryTest to improve clarity of warning messages and ensure
added a deepStart method to the Startables class to facilitate deep execution of startables using a stream
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from the ` Shape ` class and its implementation to encourage the use of
make blocklasertable interface implement ilasasertargetblock instead of blockbuildcraft
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
removed the setExpireMessagesPeriod call from policyEntry in MemoryLimitTest . java to streamline the code by eliminating redundancy
updated condition checks for handlerName and handlerName in RequestHandlers . java to improve code readability and ensure handlerName is always non - null
updated servlet name retrieval to replace ' - ' with ' . ' in ProxyServlet . java to ensure proper formatting of servlet names by removing unnecessary
refactor Python path handling in ProjectBuildFileParser to use a filterKey method for better readability to improve code clarity and maintainability
updated audio format handling and frame size validation in DirectAudioDevice and Toolkit classes to improve error handling and ensure valid audio data sizes
added null check for enums before returning an empty Optional to avoid potential NullPointerExceptions when enums is null
updated log message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added a policy assignment to the WebSocketSession instance to ensure proper policy management for WebSocket connections
removed conditional checks for static field initialization in Java2TypeScriptTranslator . java to streamline the code for better readability and maintainability
updated the configuration of the webroot parameter in UserService . java to enhance flexibility by allowing dynamic configuration of the web root path
test : migrate test to junit 5 ( # 4438 )
[ netbeans - 4892 ] fix bug in monitor . isattachable ( ) .
rename method ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in naming conventions
replaced specific import statements with a wildcard import and added a method to place stop orders in VircurexTradeService to streamline
added buffer reset calls in ReduceRecordProcessor . java to ensure proper handling of buffer state during processing
added null checks for ` mOriginalForeground ` and ` mOriginalBackground ` in ` FloatingWidgetBackgroundView . java ` to prevent potential
updated condition checks in FloatingDecimal . java and added a new ToString class in ToString . java to improve code readability and facilit
added a type check for propertyType in PropertyDescriptor . java and created a new test class Test7189112 . java with a test for property
removed unnecessary maxVersion assignment in RealTimeGetComponent . java to simplify the code by eliminating unnecessary variable assignment
added a condition to set the origin based on the URI ' s security and security to ensure the origin is set correctly based on the URI '
updated task visibility and animation logic in RecentsView , TaskView , and TaskView classes to improve animation responsiveness and visual consistency
updated error messages in ORCRecordReader . java for consistency and clarity to improve code readability and maintainability by using more descriptive
updated sample files in DemoUtil . java to include new video formats for clear HLS and Basic 4x3 to enhance functionality by providing
removed unused imports and updated method references in PersistenceProvider . java to streamline code and improve readability by eliminating unnecessary dependencies
hive - 10613 : fix log for hadoop - ipc - rpc ( jesus camacho rodriguez
added diagnostic logging and a test for union and fixed fields in TestSpecificCompiler . java and created a new Position . java file to improve error
refactor WebSocket session creation logic in WebSocketEndpoint and add a new test for session closure in WebSocketIT to improve session management and ensure proper cleanup
increased delay in sec and updated method names for consistency and clarity to improve code readability and maintainability by using more descriptive
updated XWork version from " OpenSymphony " to " Apache Struts " in XmlConfigurationProvider . java and LocationAttributes . java to
added a conditional check for the stream ' s stop method in WebCamInputPanel . java to ensure that the stream is stopped only when
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` getBittrexChartDataPeriod
[ geot - 4892 ] remove unused import in gmlexample
updated the method call from ` substream ` to ` skip ` in ` TargetType58 . java ` to improve clarity and accuracy of
added a method to retrieve the identifier generator in SimpleValue and updated related tests in AbstractEntityTuplizer and AbstractEntityTupl
rename ` findfulltextaction ` to ` downloadfulltextaction ` and rename ` findfulltextaction ` to ` downloadfulltext
refactor URIRegisterExecutorSubscriber to use a list of host and port for URI registration to improve code readability and maintainability by reducing
refactor WebSocketMapping and WebSocketUpgradeFilter classes for improved clarity to enhance maintainability and readability of the WebSocket implementation
added a check for the presence of the OSDB hash before retrieving the info from the OSDB hash to avoid potential null pointer exceptions and improve
added token transfer logic in RuntimeImpl and implemented transferToken method in MUtil to enhance contract security by ensuring token values are transfer correctly
http : / / code . google . com / p / mybatis / issues / detail ? id = 3635 : do n
updated the method call from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to correct the
added validation for join results in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure proper handling of empty result sets and
updated HTTPSPDYAsyncEndPoint constructor to accept an AsyncEndPoint parameter and added getter / setter methods to improve encapsulation and provide access to
added intent extra data to various adapter classes to ensure consistent handling of tweet IDs across different adapter classes
added a new method ` disconnectWeb ( ) ` to handle the " Proxy - Authorization " status code in ` HttpURLConnection ` to ensure proper handling
replaced int _ numChildren with AtomicInteger and updated traceId generation in TraceContext . java and TraceContextTest . java to improve thread -
[ waf ] fix typo and fix typo
added an enabled flag to the @ Test annotation in ValueTypeTests . java to disable tests that are not ready for execution
[ drools - 7 ] move resourcefactoryserviceimpl to kieresources instead of resourcefactoryserviceimpl
replaced instances of ` IN ` and ` NOT _ IN ` with ` NOT _ IN ` in multiple predicate classes to improve clarity and
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling and provide clearer account display information
added null check for witnessService before validating permission validation to avoid potential NullPointerException when witnessService is null
updated the method for obtaining the expression string in JoinDesc . java to ensure the correct expression string is used for formatting
added a check to ensure item ' s javadoc is not present before setting the getJavaDoc ( ) to avoid potential null pointer exceptions when accessing the
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add new class ` RedefineInterfaceCall
replaced ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java ` to improve
[ hotfix ] [ metric ] return unregisteredmetricsgroup instead of throw unsupportedoperationexception
added a variable ` oldX ` to the ` y ` calculation in ` Polygon . java ` to ensure correct positioning of the polygon '
updated cache creation method to use Configuration type instead of null to ensure type safety and avoid unchecked cast warnings
added a check for stringConstant length in InheritanceUnsafeGetResource . java and created a new class Bug2974855 . java to
refactor ShadowCookieManager class for improved readability to enhance maintainability and facilitate future updates
added a new configuration option for storage - based drop operations in the Hive metastore authorization provider to ensure proper permission checks for managed tables during
updated condition in Stage . java and adjusted ProgressBar . draw method call in ProgressBar . java to ensure correct rendering of the progress bar based on the
truffle : use native byte order for platform capability .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the ` initWebViewLogin ` method to accept
updated the exception message from ` parameterArray . Paramter ` to ` parameter ` in ` CallableStatementHandler . java ` to improve clarity
camel - 14284 : camel - audit - events - do n ' t require date after request
rename ExponentialTimer to PreciseThroughputTimer across multiple files to improve clarity and consistency in naming conventions
added softBody removal and deletion logic in SoftBodyTest . java to ensure proper resource management and prevent potential memory leaks
changed interface visibility from package - private to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow
[ zeppelin - 3446 ] fix log message for websocket connection error
add a test to verify that we do n ' t have a non - redundant namespace
fix npe when redplasma be set to null .
added HTTP / 2 header handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated conditional checks in Remove . java for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
updated delimiter from ` line ( count ) ` to ` count2 ` in ` SimpleReport . java ` to improve clarity and correctness
removed the option ` ignoreSymbolFile ` from ` JavapTask ` and added a new class ` T6863746 ` to
renamed TickerDemo class from TickerDemo to StreamingTickerDemo and removed obsolete TickerDemo . java to clarify the purpose
refactor error handling in Runtime . java for improved clarity and structure to enhance code readability and maintainability while ensuring proper contract validation
ggb - 1343 fix for ggb - 1343 : do n ' t create input3d for applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
simonstewart : remove exception from scripttagpayloadreader . parsepayload ( )
updated the method name from ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension . java ` to
updated ` getExecutableCommand ` methods to return an ` List < String > ` instead of ` String ` across multiple rule classes to improve type
replaced instances of ` this . x ` and ` this . y ` with ` this . x ` and ` this . y `
deleted the UploadPathActivity class and updated its implementation in ComponentsModule . java to streamline the codebase by eliminating unused components
updated return statements in SimpleTextFieldsReader to handle cases where indexOptions is not DOCS _ ONLY to ensure correct handling of total and sum
fix : add implicit constructor to parentexiter ( # 1193 )
added a database parameter to the ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods in ` ColumnSnapshotGenerator . java `
refactor Database class to improve code organization to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated the iterator assignment in PointInSetQuery from ` sortedPackedPoints ` to ` sortedPackedPoints ` to ensure consistency in iterator
removed the substring method from the SchematicHandler class to simplify the code by eliminating unnecessary substring extraction
added a switch statement to handle specific collection types in AbstractCollectionAssert . java and updated test cases in CollectionAssert _ isUnmodifiable _ Test .
changed the access modifier of the Option enum from static to instance to allow access to the Option enum from other classes
added a new AlertDialog and DialogInterface for handling character remaining in Compose . java and ComposeActivity . java to enhance user experience by
replaced ` toggleKeepInSync ( ) ` with ` toggleKeepInSync ( ) ` in ` FileDetailFragment . java ` and
replaced ` DatatypeConverter . parseBase64Binary ` with ` java . util . java . util . java ` and added unit tests for
added new classes ` ControllerCounter ` , ` DBCallback ` , and ` DBCollection ` to provide functionality for managing controller and MongoDB operations
added a final modifier to the deleteTicket method in EhCacheTicketRegistry . java to enforce immutability of the ticketId parameter
added a new file ` FlywayMigrationRunner . java ` containing a new file ` FlywayMigrationRunner . java ` to implement
updated the ` isEmpty ( ) ` method calls to use ` size = 0 ` instead of ` isEmpty ( ) ` and added a new `
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
added @ Nullable annotation to the modify method in CompressionCodec and added a warning for missing ORC compression modifiers in WriterImpl and ZlibCodec
added null check for mainAttrs and improved error handling in LauncherHelper , Arrrghs , and TestHelper classes to enhance robustness
updated test class names from ` BasicErrorControllerIntegrationTest ` to ` SampleDataGemFireApplicationTests ` and ` ByteArrayRandomAccessData
[ jvmci ] fix methoddata : : _ jvmci _ ir _ size field in hotspotprofilinginfo
pdfbox - 4892 : make cellcopypolicy public , a suggest by valerybokov
added a new method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and updated its usage in ` FloatingIcon
updated the method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` formFieldValuesToCaps ` to
added landscape orientation handling in IconRecentsView . java to ensure proper layout adjustments for landscape orientation in landscape mode
deleted the AddAdapter . java file to the functionality was deemed unnecessary or redundant
added checks for empty constructor code lists in NonStaticLifter . java to ensure robustness by preventing operations on empty constructor code lists
refactor conditional checks for sorting columns in OpTraitsRulesProcFactory . java to improve code readability and maintainability
refactor the looper logic in TestLogWatcher to use a new looper method to improve code readability and maintainability by encapsulating
added a print statement to print a " < any > " in Java2TypeScriptTranslator . java to provide a clearer output of the
updated the SDK version number from 4799589 to 4913185 in the SdkConfig . java file to reflect the latest release and ensure
added a condition to set the proxy target class for the SPRING _ AOP _ PROXY _ TARGET _ CLASS environment to ensure that the
removed the singletonLock variable from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
renamed ` responseClassCallback ` and ` forwardClassCallbackWithClass ` methods to ` responseClassCallbackWithClass ` and ` forwardClass
added a boolean parameter to the ` appendToFile ` method in ` Utils ` , ` SuiteHTMLReporter ` , and ` SuiteHTML
updated MavenExecutionContextView and MavenExecutionContextView to check if settings match and modified MavenRepositoryMirror retrieval logic to improve handling of Maven settings
added a name field to BuildRuleSourcePath and updated PathSourcePath constructor to accept a name parameter to enhance the flexibility of the path
refactor service redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController to improve code readability and maintainability
replaced instances of ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser . toArray ( map < Class , Annotation > annotations ) `
replaced ` Drawable ` and ` CharSequence ` with ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` methods in `
updated the default value for OS default to include line separator to ensure consistent line endings across different operating systems
updated method names from ` isImplementingInterface ` to ` isDerivedClass ` and added assertions in ` CMUTests ` to improve cl
thymeleaf / thymeleaf / thymeleaf / basecontroller . java : sanitize input in the model
chore : update java and python dependency ( # 489 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to handle IOException and modified the ` buildFileNamesCanBeDifferentCrossCell
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated method signatures in AllAppsRecyclerView , DeepShortcutsContainer , and UserEventDispatcher to use View instead of int for containerType to
hbase - 25819 add deprecation to hbase . ipc . server . reservoir . initial . max and hbase .
[ native ] fix npe in native test
added a method to retrieve all generic parameter types in the Executable class to improve clarity and functionality of parameter type retrieval
refactor TestFSTs class for improved clarity to enhance maintainability and readability of the code
apps - 1407 fix position when user switch between latex and nonlatex caption
hbase - 16401 add initial size to increasedtoupperuppercaseregionsplitpolicy ( # 2641 )
added loading state management for the model in LauncherClings . java to ensure proper loading behavior and state management in the launcher
simplified the initialization of keys and updates in ManagedSelector . java to improve code readability and maintainability by reducing redundancy
added a ` Set < String > excludedDatasources ` field to the ` SpringDataSourceBeanPostProcessor ` class to manage the inclusion of specific
added a call to storeUndoInfo ( ) in TableValuesView . java and removed a null check for ColumnDelete in TableValuesPanel .
( chore ) camel - aws2 - kinesis : use clientconfigurationfactory instead of clientconfigurationfactory
refactor channel triggering logic in VelbusSensorHandler to use a loop for processing multiple channels to improve code readability and maintainability by
updated conditional statements in LocalCacheSelectorCode , BoundedLocalCache , and BoundedLocalCacheTest classes to disable unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT and implemented a null check in PartialPath to ensure that illegal database names are
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing
renamed ` desiredWorkspaceLeftRightRightPx ` to ` desiredWorkspaceLeftRightMarginPx ` and updated related margin calculations to improve clarity
refactor code formatting and improve readability in CharTokenizer . java to enhance code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
update xenservernetworklabel to xennetworklabel instead of xenservernetworklabel
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 7
removed the ` metricNames ` field and its getter method from ` SolrCore ` to streamline the code by eliminating unnecessary complexity
refactor URI and path handling in MavenManifestFactory . java for improved clarity to enhance code readability and maintainability by using a
replaced ` System . getProperty ( " os . name " ) . contains ( " mac " ) ` with a static final constant ` IS
refactor JdbcAggregationRepository class for improved clarity to enhance maintainability and readability of the code
added a clear and addAll methods to the slotList in the Frame class to ensure that the slotList is properly initialized and added to the other
set m _ predCount to - 1 in PredicatedNodeTest . java to set m _ predCount to - 1 to ensure proper initialization
added a method to merge configuration properties in ConfigurationSpringInitializer to enhance configuration management by allowing dynamic property merging
use slf4j . logger instead of logback . classic . logger instead of logback . classic . logger
replaced HashMap with LinkedHashMap for aliasToWork across multiple classes to ensure predictable iteration order for better data organization
added logic to retrieve the JDBC handler map based on the type type to ensure proper handling of class hierarchy in the type handler registry
added debug logging statements to HibernateItemWriter , JpaItemWriter , and FlatFileItemWriter to enhance visibility into batch processing operations for
updated the parsing of the ` value ` string in ` LocaleUtils . java ` to correctly strip the ' ; ' character from the ` value
updated Http2Handler to execute from IO in Http2ServerResponseImpl and added context handling in VertxHttp2Test to ensure proper context
refactor SXSSFEvaluationWorkbook and XSSFEvaluationWorkbook classes to use a cache for table retrieval to improve performance by reducing
updated schema text detail type from " primary key " to " BASIC " in BaseSchemaTextFormatter . java to improve clarity and accuracy
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
replaced HashSet with LinkedHashSet in SparkWork . java to ensure predictable order of elements in the roots and leaves sets
added a check to ensure the operator tree is properly cloned in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService and updated JSON file handling in JsonFileRegisteredClientService
add achievementlist . field _ 187981 _ e . clear ( ) call to statlist . field _ 187981 _
set default values for userName , productName , and driverClassName in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set
rename link share permission from read _ only to view _ only in QuickSharingPermissionsBottomSheetDialog . java and SharingMenuHelper . java
added ` readLongs ` method to ` ByteBuffersDataInput ` and ` ByteBuffersIndexInput ` classes to handle long data reading to improve
added new variables ` st _ atime ` , ` st _ atime _ sec ` , ` st _ atime _ nsec `
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements a large garbage collection for humongous
added a conditional check for the visibility of the search bar in AllAppsContainerView to ensure the search bar is hidden based on user preferences
updated the method call from ` router ( ) . get ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java `
added a null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to handle the reloading of the current display in the menu to enhance user experience by allowing quick
change log level from info to warn in SQLManager . java to improve log severity for non - existent entries
updated minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
use serviceloader instead of factoryregistry . lookupproviders instead of factoryregistry
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and avoid potential memory leaks
added a new method ` stopStatementExecutor ( ) ` to ` JdbcConnector ` and implemented logging in ` HiveViewImpl ` to ensure proper
updated feature settings in DocumentFactory , XMLSAXHandler , and ElementHandlerFactory classes to use generics for better type safety to improve code cl
updated JdbStopThreadidTest . java to use OutputAnalyzer for application exit handling to improve test reliability by ensuring the application exit is
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enhance functionality by allowing retrieval of
replaced ` runnable ` with ` entry ` in ` ExpressionThreadPoolManager ` to improve type safety and clarity in future removal logic
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with the
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to ensure proper listener registration for the buttonTable
increased the default batch size from 10 to 3 in NewSessionQueueOptions . java to increase the batch size based on available processors for
added error handling for resource manager connection establishment in TaskExecutor to improve robustness by logging failures when establishing Resource Manager connection
modified the initialization of ` classFile ` to null and added a new ` LambdaExpressionFallback ` method in ` LambdaRewriter . java ` to
updated exception message in ProgressBar . java to include minimum and maximum values to improve clarity of error messages for better debugging
updated message handling methods to include owner and message parameters in various state machine classes to enhance message processing by associating messages with specific entities and improve
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` in ` com . codename1 . db ` to provide a
refactor multiple assertion classes for improved clarity to enhance maintainability and readability of the assertion framework
# 1343 - add setbeanid method to ebeanserver and add test case
replaced ` tools / xslt / add - menu - to - site - descriptor . xsl ` with ` getAddToSiteDescriptorXsl
added a list of request matchers to the request matchers in HttpSecurity . java to enhance the flexibility of request matching by allowing multiple matchers
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for instances of ContactResource
remove coyote request and response from abstracthttp11processor # getrequest and abstracthttp11processor # getrequest
updated log messages and improved error handling in FileManager . java to enhance clarity of log messages and provide more informative error messages for
added a call to reset the mock control in TestJdbcDataSource and implemented tearDown method in TestIndexSearcher to ensure proper cleanup of
updated import statements and modified method calls in SyntaxTests . java for improved readability to enhance code clarity and maintainability by standardizing
refactor ConnectionModel and ModeledConnection classes for improved clarity to enhance maintainability and readability of the code
tika - 3357 -- use default mime type instead of temporaryresource
fmlsecuritymanager : do n ' t check if the class have a defined class context
updated variable names and variables in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintain consistency in variable naming
updated parameter names from " swap " to " rename " in TestCoreAdminApis . java and modified the rename method in CoreApiMapping
added a test method ` testJsxComment ` to ` JsLexerJsxTest ` and refactored conditional statements in ` Parser `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the application
added error handling for missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest classes to improve test reliability by
added ManagementFactory imports and validation for physical memory size in TestStringBufferAndBuilderGrowth . java to ensure that the test does not exceed
replaced instances of ` ConversionService . SHARED . convert ` with ` ConversionService ` in ` MapToLocalDateConverter . java `
added success flag to HiveMetaStoreClient to enable successful execution of the HiveMetaStore operations
updated condition to check for " * " in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java
added support for " amp . twimg . com " URLs in TimeLineCursorAdapter , TweetActivity , and TweetActivity classes to
mark AreaReference class as deprecated to indicate that this class should no longer be used and may be removed in future versions
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
added assertions for method reference kinds in MemberName . java and modified reference kind handling in MemberName . java to improve clarity of assertions and
changed the default value of SUBMIT _ KEY _ UPDATES from " false " to " true " and added synchronization around runChange to ensure
updated the condition for checking mouse events in EditNodeTextField . java to ensure proper handling of mouse events
camel - 16462 : camel - core - do not resolve @ bean : type in beanexpression . thanks to michael
refactor benchmark - related classes to improve code organization and clarity to enhance maintainability and readability of the codebase
refactor exception handling in AgentRunnerTest . java for improved readability to enhance code clarity and maintainability
added descriptions for Maven project properties in multiple classes to provide clearer guidance for users regarding Maven dependencies and plugins
refactor face handling logic in ObjLoader . java to improve readability and maintainability to enhance code clarity and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
rename ` reentrantLock ` to ` lock ` across multiple files to improve code readability and maintain consistency in naming conventions
added support for " jar " and " mavenPackaging " parameters in the getBomReference method calls to enhance functionality by allowing specification of Maven
updated the back ( ) method call to use the component ' s component reference to ensure the back ( ) method is called on the correct component
refactor certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
updated method signatures in ObjectArraySubject and StandardSubjectBuilder to use @ Nullable instead of @ Nullable annotations to enhance type safety and improve clarity
replace NutchConf . get ( ) with getConf ( ) in Fetcher . java , Generator . java , and Injector . java to
replaced the ` removeBoardsPane ( ) ` method with ` deselected ( ) ` in ` SheetAssembly . java ` and
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks for ` node . getTimeInterval ( ) ` and ` edge . setTimeInterval ( ) ` in ` ImportContainerImpl . java
updated the command name from " logLevel INFO - serverPort " to " serverPort " in MockServerContainer . java to ensure consistency in command
updated error log message formatting in FunctionRegistry . java to improve clarity of error messages for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in ` DispositionProcessor . java ` to improve clarity
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
updated file path handling in DefaultPackageScanResourceResolverTest . java for improved cross - platform compatibility to ensure compatibility across different operating systems
added a method alternativePath ( ) to the ExpectNewDemo class to provide an alternative path input stream to enhance functionality by providing an alternative path
replaced the initialization method with a call to getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure the correct
added protectionDomain parameter to BufferAlignmentAgent . java to enhance security by specifying the protection domain for buffer alignment operations
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable specific optimizations and operations on external tables to enhance performance by disabling semi - join optimizations on external tables
updated the authorization description from ` base64 ( resource _ server : shared _ secret ) ` to ` base64 ( resource _ server : shared
added a flag to hide the wallpaper in the Launcher and adjusted the scroll range in Workspace to improve user interface responsiveness by allowing
updated SybaseASADatabase and SequenceSnapshotGenerator to return true instead of false in SybaseASADatabase and modified sequence generation logic to
nifi - 1186 : fix commit / rollback in putsql . close ( )
added parent directory validation and error handling in SnapPuller . java and updated testReplicationHandler . java to ensure proper directory creation and validate
corrected the spelling of " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in the
updated the ` frame ` method to accept an additional ` output ` parameter and modified the ` frame ` method to accept a ` ByteBuf ` parameter
updated constructor parameters in OAuth2LoginConfigurer , OAuth2LoginAuthenticationFilter , and OAuth2LoginRequestRedirectFilter classes to include client registration
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated the formatInstance method to use ChronoUnit instead of a static final string to improve clarity and consistency in time representation
replaced a constant TIMEOUT _ MS with a constant RETRY _ CLOSE _ TIMEOUT _ MS and refactored the close method to improve code
hhh - 15836 - remove dependency on reflection in classloadingstrategyhelper
refactor Mockito class for improved readability to enhance maintainability and facilitate future updates
updated debug log message to include a new proto event file to clarify the purpose of the event file being logged
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to expected sample results
corrected a typo in the exception message from " then " to " greater than zero " to improve clarity of the error message for
replaced string concatenation with string concatenation for consistency in DecisionNode . java and WagonCART . java to improve code readability and
added ordered ordering of bound sheet records in XLS2CSVmra and implemented sorting functionality in BoundSheetRecord to enhance data retrieval efficiency and improve
refactor calculations for ` startThrust ` and ` endThrust ` in ` ThrustCurveMotor . java `
replaced the instantiation of InputSystemJme with a direct inputManager parameter in NiftyJmeDisplay . java to improve flexibility
refactor hash code field handling in UniverseBuilder . java to improve readability and maintainability of the code
remove deprecate block . getmesh ( )
renamed keytabPath to localKeytabPath and updated related logic in YarnTaskManagerRunner . java to improve clarity and consistency
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matchers in ` LineReaderImpl . java ` and ` LineReaderImpl .
added a writeCommitLog parameter to the pushViewReplicaUpdates method call to ensure that writeCommitLog is not modified during pushViewReplicaUpdates
refactor display contents handling in CaptureActivity and add default button ID handling in PreferencesActivity to improve code clarity and maintainability by centralizing
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to validate batching behavior to ensure that the
added a check for EntityExistsException before persisting items in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
updated CucumberOptions and RuntimeOptionsFactory to use the -- plugin instead of a deprecated format option to encourage the use of the
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary calls
simplified the back key event handling in ExtendedEditText . java to improve code readability and maintainability
updated newCapacity calculation in AbstractStringBuilder and added a new Capacity class for testing StringBuilder ' s ensureCapacity method to improve capacity management and facilit
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to enhance functionality
added endnote support to the XWPFDocument and XWPFParagraph classes , and updated related classes to handle endnote references to improve
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated test assertions in CasEventsReportEndpointTests . java
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest . java ` to verify the correct version of the
added a new class Lifecycle to handle network errors in the system to provide user feedback on network issues in the application
added logging and error handling for 404 URLs in DeviantartRipper . java to improve debugging capabilities and ensure proper handling of 404
removed unused imports from BodyTubeShapes . java and RocketFigure . java to streamline code and improve readability by eliminating
added support for retina and retina texture scaling in PJOGL . java and updated texture scaling logic in PJOGL . java to
set initial value of create params when create project ( # 1193 )
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts for writing values to improve performance and maintainability by redu
camel - 14263 : camel - defaultroute should use the originatingtype instead of a collection
removed unnecessary data handling in GoAwayTest . java to streamline the code and improve performance by eliminating unnecessary data retrieval
added property handling for FluentSetterBean in ReflectionUtils and created a new FluentSetterBean class to enhance flexibility in setting properties for Fluent beans in
replaced ` ByteStreams ` with ` HttpResponse ` in ` BlockingHttpEndpoint ` and added a new ` HttpResponse ` class to improve response handling
test : add test for filesortbyexpression and filesortbycase
replaced ` mLastAppearedTaskTarget ` with ` getLastAppearedTaskId ( ) ` in ` GestureState . java
add option to set writeimagescaleinformation ( true ) and imagepdfconformance ( false ) and setwriteimagescaleinformation ( false
added a conditional check for aggregate function name in the column addition logic to ensure correct handling of aggregate function names based on execution parameters
replaced LuceneTestCase with WithNestedTests in TestExceptionInBeforeClassHooks and TestSystemPropertiesInvariantRule to utilize With
added support for setting the x - cap server URI in the presence panel to enhance user experience by allowing dynamic configuration of the x - cap server
ww - 4892 add a ` ` strut . handle . exception ' ' property to the dispatcher
added stopEditing method to CodenameOneImplementation , Display , and AndroidImplementation classes to manage text editing behavior to improve user experience by allowing
nifi - 1344 : fix npe in controlrate when group attribute be null
updated the ` showDialog ` method to include a ` isNewComponent ` parameter and added a checkbox for the ` alwaysOpenPreset ` option to
added error handling and synchronization in ChatAnnotation . java to ensure thread safety when sending messages to the client
added a check for Windows OS type in HTMLDataFlavorTest . java to prevent the test from running on Windows to ensure compatibility with Windows
added SQL _ SERVER _ SNAPSHOT parameter to the SERIALIZABLE method in TransactionIsolationLevel . java to support SQL Server SNAPSHOT functionality
refactor the handling of newRecids in AsyncWriteEngine to use a loop for offering newRecids to improve code readability and
use java . util . zip . ZipFile instead of org . apache . tomcat . util . jrecompat
updated RegisteredServiceSimpleFormController to check for null command class before creating a new RegisteredService instance to improve robustness by preventing potential NullPointerException
change disk _ failure _ policy from best _ effort to diskfailurepolicy . ignore in config . java and cassandraDaemon . java .
changed access modifiers of methods from public to public in RipperInterface and RipStatusHandler classes to allow broader access to these methods
updated filter condition to check for " 127.0 . 0.1 " and " 127.0 . 0.1 " addresses to ensure
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to streamline the code by eliminating unnecessary functionality
added ClusterDataCache to the computePartitionAssignment method call in PinotSegmentRebalancer . java to utilize the new ClusterDataCache for
simonstewart : add auto - remove option to delete container
refactor DefaultSeleneseCommand to use assertions for input parsing and add unit tests for the DefaultSeleneseCommand class to improve code
added MultipleAttemptsRule annotation to CreateGlossaryTests . java to enable testing of multiple attempts for improved reliability
replaced direct references to ` allOfRef ` with ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver
replaced instances of ` deleted ` with ` source ` in ` EntityDeletedEvent ` and updated its usage in ` IdentityZoneEndpointsMockMvc
added GOP support handling in FormatConfiguration . java and updated media info parsing in LibMediaInfoParser . java and LibMediaInfoParser .
added a new file TestProfileReturnTypePrinting . java that tests profile return type printing to demonstrate the behavior of profile return types
added locking mechanism for config updates in ParseConfigUtils . java to ensure thread safety during configuration updates
added logic to acquire and release columns segment operators in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper resource management and prevent memory
simonstewart : remove unused @ ignore annotation from firefoxprofiletest
updated method signatures in HasAndroidDeviceDetails . java for consistency and clarity to improve code readability and maintainability
removed unnecessary import statements and added a check for null in multiple classes to streamline code and improve readability by eliminating unnecessary dependencies
[ netbeans - 4892 ] disable the disabled shadow on GTK and GTK
removed multiple @ Override annotations from CacheControlImpl . java to improve code clarity and maintainability
added a check for empty recurrence and a date in the future in ScheduledAction . java and a corresponding test in ScheduledActionTest . java to
refactor upload button handling in ShareActivity to use a menu item for menu item management to improve code readability and maintainability by centralizing
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added loadExchangeMetaData method to MeXBTExchange , RippleExchange , and MeXBTExchange classes to load exchange metadata
added a new ` WritableSerializer ` class for serialization of Writable objects in ` CrawlDbReader . java ` to enable proper serialization of Writable
remove testjaspicbasicauthenticator from testjaspicbasicauthenticator # testjaspicbasicauthenticator
updated the component name from " discovery . mdns " to " discovery . mdns " in MDNSDiscoveryService . java to ensure the
added a null check for the messageItem before scrolling the scrollToPositionWithOffset method to avoid potential NullPointerException when messageItem is null
replaced the instantiation of ForkJoinPool with a new ForkJoinWorkerThread to improve thread - safety in concurrent scenarios
removed redundant assertions in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary assertions
added methods ` restoreLocalInfoFromTableInfo ( ) ` and ` dedupWithTableInfo ( ) ` in ` PartInfo . java `
reformatted code for improved readability to enhance maintainability and adhere to coding standards
added Matrix4 transformation and scaling for the sprite in BitmapFontTest . java to improve rendering performance and visual consistency in the bitmap font rendering
added a check for built - in aggregate conditions in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that onlyBuiltInAggregate is considered
removed the ` hasPendingEcho ` field and refactored the ` markPendingEcho ` method in multiple classes to simplify the code and improve
added a method ` getUnreachableTokenOwners ` to the ` Gossiper ` class and updated its usage in ` StorageProxy `
[ geosymbolic ] do n ' t change to multiplication ( x ^ 2 , x ^ 2 , x ^ 2 , x ^
refactor content type handling in FormAuthenticator and SavedRequest classes to improve clarity and ensure consistent content type management
added null checks for localGraphicsEnvironment in XToolkit . java to ensure localGraphicsEnvironment is not null to prevent potential NullPointerExceptions
refactor RecommenderJob , AbstractJob , and RecommenderJob classes to improve code organization and maintainability
replaced instances of ` metaLock ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` in `
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` in ` IdentityProviderEndpointsMockMvcTests
updated JobHandle scheduling to use a new ExpireJob and added null check for timestamp in PointInTimeTrigger to improve job scheduling accuracy and
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ rocketmq - 4892 ] update subscription version in rebalancepushimpl ( # 4893 )
add ` ` cairo . detached . mkdir . mode ' ' property to ` ` cairo . detached . mkdir . mode ' '
[ java ] disable cluster test when there be a slow follower .
updated the default label pattern from " authors3 " to " auth " in JabRefPreferences . java to correct the label format for better
refactor CxxPlatform handling in DBinaryDescription , DLibraryDescription , and DTestDescription classes to use ImplicitDepsInferringDescription to
removed the ` initialized ` variable and refactored the ` dispose ` method in ` GoogleCloudAPI ` and ` GoogleTTSService `
camel - 16462 : camel - jbang - do n ' t delete dynamic file name if complete
added a boolean parameter ` reopenReaders ` to the ` SolrConfig ` class and modified the conditional check in ` SolrCore ` to include a
add support for the freeplane dialect in the mapwriter .
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` ResultInfo ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest `
refactor conditional checks in multiple test classes to use a lambda expression to improve code readability and reduce boilerplate
replaced ` Term ` with ` ConstantScoreQuery ` in ` IndexSearcher ` and modified the expected value in ` assertEquals ` to
removed multiple specific Java classes from ConcurrentClassLoadingTest . java to streamline the test suite for improved readability and maintainability
added a new method ` providesDirectNearbyUploadPreferences ` to retrieve shared preferences in ` CommonsApplicationModule . java ` to enhance functionality
added support for " SYSIBM " and " SYSDUMMY1 " modes in the database connection handling to enhance compatibility support for MySQL
updated logging statements and added conditional checks for instrumentation type in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfigurationTests , and SamplerAutoConfiguration
pdfbox - 4892 : add lastpid to workbookproperties , add a test for add property
[ geotiff ] fix npe in float32 _ neg _ infinity _ nodata
refactor CliDriver and SessionState to use a new executeDriver method for processing commands and files to improve code readability and maintainability by
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated its usage in ` MockRestAdapterTest ` to enhance
refactor ` selectByRuleIdSet ` method to use ` Lists . partition ` for partitioning rule IDs to improve code readability and
added a method ` addExitDescription ` to ` ExitStatus ` and refactored related code to streamline error handling by eliminating
do n ' t click if the player be n ' t in the main menu . close # 1188
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in naming conventions
removed unnecessary import of Collections and simplified range length calculation in PlotConfiguration . java to improve code clarity and reduce unnecessary dependencies
replaced ` BuildUIAlertView ` with ` UIAlertController ` and updated related methods to use ` UIAlertController ` instead of `
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil
renamed the method ` ofArray ` to ` values ` in ` Value . java ` to improve clarity by using a more descriptive
removed assertion for null message in AdvServiceTest . java to simplify the test by eliminating unnecessary assertions
refactor key handling in MappingMongoConverter to improve clarity and consistency to enhance code readability and maintainability by using a more descriptive
updated log message format in NearbyMapFragment . java for clarity to improve readability of log output for better debugging
camel - 14263 : camel - core - do n ' t use ` ` javaType ' ' instead of ` ` javaType ' '
refactor FuzzyLikeThisQuery to use MultiFields for term retrieval and add a test for non - existing fields in FuzzyLikeThis
added a boolean parameter ` tabularList ` to the ` writeApplicationsLinks ` method and modified the ` writeApplicationsLinks ` method to accept a
[ ds - 4892 ] use identifierservicefactory instead of dspace . utils . dspace . dspace . utils . dspace
replaced ` byte . length . length ` with ` bw . getLength ( ) ` in ` assignBytes ` method calls to ensure consistency in
changed the return type of the getDisplayScript method from abstract to null in LocaleNameProvider . java to ensure that the method returns null instead of
added sequence to RemoteWebDriver and updated test cases in BasicKeyboardInterfaceTest to ensure correct sequence handling and improve test coverage
pdfbox - 4892 : fix arrayindexoutofboundsexception , a suggest by valerybokov
added synchronization for active interfaces in NetworkConfigurationWatcher and implemented null checks in NetworkManagerListenerImpl to ensure thread safety and prevent potential null pointer exceptions
refactor HSSFWorkbook to use a private method for retrieving embedded objects to improve code readability and maintainability by encapsulating related logic
removed the import of Shdr from ShaderNodeLoaderDelegate . java to clean up unused dependencies and improve code clarity
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol font
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated LiveTvGuideActivity and ProgramListAdapter to use ` mCurrentGuideStart ` instead of ` Activity ` for better date handling to ensure
updated method invocation to use Whitebox ' s method instead of getDeclaredMethod in MockGateway . java and added new parent classes in MainMockTransformer
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
refactor function parsing logic by introducing a new method ` inverseOrPower ` and ` inverseOrPower ` to improve code clarity and
do n ' t use floating guard if possible .
fix classcastexception in typeframemodelingvisitor . getinstance ( )
added a new ` LocalizedString ` class and refactored ` T6758789a ` and ` T6758789
added a ` disableClasspathSearch ` property and its getter and setter methods in ` ServerConfig ` and ` DefaultContainer ` to control classpath search
replaced direct array copying with Arrays . copyOf in DataLine . java to improve performance and ensure immutability of audio format variables
updated the default value of ` retries ` from ` 2 ` to ` 2 ` in ` Reference . java ` and ` Reference . java `
added JSON handling and settings file handling in TexturePacker . java to improve user experience by providing a custom settings object
added UI views for uploaded images and updated progress text handling in AchievementsFragment . java to improve UI clarity and ensure proper text
added mock logger methods for annotation processing and processing in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and
added categoryinfo to the MwQueryPage class and created a new CategoryInfo class to facilitate retrieval of category information in the
updated assertions in AuthzAuthenticationRequest . java to use hasText for username and password to improve readability and consistency of error messages
added accessibility support for taskbar timeout in TaskbarStashController . java to enhance accessibility support for improved user experience
added a check for a ' ^ ' character in the signature parsing logic to ensure that only valid signature characters are processed to prevent runtime errors
updated access flags handling in ClassVisitorDriverFromElement and added tests for generic interface and enum stubs in StubJarTest to ensure proper handling
replaced direct assignment of ` in ` with ` Objects . requireNonNull ` in ` and added null check in ` LowpassIntervalsSource ` to
added unit tests for ` MapEntrySetIteratorLastHashNext ` and ` EntrySetIteratorLastNext ` in ` MapInterfaceTest . java
added a serialVersionUID field to TreeMap class to ensure proper serialization compatibility for the TreeMap class
updated the created time from milliseconds to seconds in ImageData . java to ensure accurate timestamp representation for image creation
added support for " grobcovf2m " locus in SingularWebService and modified locus command handling in CASTranslator
added import for EncryptionUtils and updated key deletion logic in AccountRemovalJob . java to ensure proper key management for private and public accounts
[ netty ] use ` ` keep - alive ' ' instead of ` ` keep - alive ' '
added a check for interceptorList in PostJoinMapOperation . java and a corresponding test in PostJoinMapOperationTest . java to ensure proper
hhh - 15836 - fix inlining for text and comment in standarddialect
removed the spillEnabled parameter from BaseHybridHashTable , BinaryHashTable , and LongHybridHashTable classes to simplify the constructor
refactor EnvironmentVariableHelper to use Optional for environment variable retrieval to improve code readability and handle potential null values more gracefully
ww - 4892 fix npe in defaultactionmapper when no parameter be specify
added SerializableMode import and updated imports in Mockito . java and PluginSwitch . java to enhance serialization support and improve code clarity
added handling for nullable field injection in AbstractBeanDefinition . java to ensure proper handling of nullable field values during dependency injection
refactor SQL statement parsing logic in Parser . java and add isolation level in SelectStatement in TestCompatibility . java to improve code readability and
added constants for server2 transport and thrift HTTP paths in HiveConnection . java to improve clarity and maintainability of the code
added a method ` isCacheable ( LeafReaderContext ctx ) ` to the ` GlobalOrdinalsWithScoreQuery ` class to ensure
added a new file TestStrangeControl . java containing a main method for testing StrangeControl functionality to facilitate testing of Str
updated JSON file paths in JsFile and JsLibrary to use " % s . jsfile " instead of " % s . jsfile "
added selectionStart and selectionEnd fields to ShadowEditText . java to enable dynamic selection management within the ShadowEditText class
refactor GRPCEnrichment . java to use try - with - resources for server shutdown to ensure proper resource management and prevent potential resource leak
added a path parameter to the ` use ` method in ` Jooby ` and updated test cases in ` JoobyTest
added null check for fst in FreeTextSuggester . java to ensure proper error handling when the lookup is not supported
updated newline handling in T4975569 and T6729471 classes to ensure consistent newline behavior across different operating systems
added ABI writer class loading logic in JavacInMemoryStep . java to ensure proper instantiation of ABIWriterClass based on the
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlways
added a check for the shutdown state before scheduling tasks in PullMessageService to ensure that the scheduled executor is only scheduled if the service is not
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor the retrieval of displayed column keys in ComponentPresetChooserDialog to improve code readability and maintainability by reducing redundancy
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to clean up the code and improve readability
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a method to retrieve the exported header style from arguments in CxxLibraryDescription and CxxLibraryMetadataFactory to enhance flexibility by allowing
deleted the file Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor diskDelimiter extraction logic in RandomPartitioner . java to improve clarity and efficiency to enhance code readability and maintainability by using
[ gr - 21744 ] fix npe in nativeimagegenerator and nativeimagegenerator . initializeatruntime
added a new test method ` testCreateInline ` to ` RoleBindingTest ` and modified the ` create ` method in ` RoleBindingOperations
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging during session cookie configuration
updated the calculation of the filename in HotseatFileLog to use Calendar ' s DAY _ OF _ YEAR instead of LOG _ DAYS
updated condition from ` o ` to ` v ` in ` ObservableBlockingSubscribe . java ` to correct the condition in ` ObservableBlockingSubscribe .
added error handling for invalid options in JavapTask . java and created a new T8033711 . java file to improve robust
replaced ` Collectors . collect ( ) ` with ` toList ( ) ` in multiple files to simplify code and improve performance by eliminating
changed log level from error to warn and added conditional logging based on shutdown state to improve error handling and provide more informative logging based on the
[ hotfix ] [ network ] add support for tiered storage in inputgatespecutils
replaced ` SUCCESS _ CODE ` with a method ` isNotSuccessStatus ` in multiple service classes to improve code readability and maintainability by
added GL20 configuration to Cuboc and updated LwjglApplication to use OpenGL 2.0 instead of false to enable Open
remove redundant check for return type in JimpleBody . java to simplify code for better readability and maintainability
replaced the usage of ` DefaultSourcePathResolver ` with ` AddToRuleKey ` in ` OutputMacroExpander . java ` to
update test to reflect light job status ( # 13079 )
added a newline to the file path check in MergeWordsListTask . java to ensure the file path does not contain the " \ build "
update instructorfeedbackresponsecomment and instructorfeedbackresponsecomment to use string instead of string
reformatted code for improved readability to enhance maintainability and clarity of the code
added a new file TestEscapeThroughInvoke . java containing a new class TestEscapeThroughInvoke . java to implement testing of escape - related methods
replaced stream . skip ( start ) with IOUtils . read ( byte , 0 , length ) in FilePreviewService . java to improve code
added interceptor handling in ConnectionPool and improved error logging in ConnectionPool and DataSourceProxy classes to enhance connection pool management and provide clearer error
change exception handling from Exception to Throwable in CoreContainer . java to improve error handling by catching broader range of exceptions
added methods to check if a block is found in LruBlockCache and implemented eviction status in TestLruBlockCache to improve cache management
removed unnecessary check for empty taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to allow more time for the broker
added a new interface ` CoinmateMetadataServiceRaw ` and created ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw
improve error message when use basedir - system - path . xml in the project directory
pdfbox - 4892 : avoid duplicate key in coswriter . getobject ( ) , a suggest by valerybokov
[ ptransform ] add ` ` displaydata ' ' to transform . setdisplaydata ( ) .
replaced instances of ` new DefaultSubject ` with ` assertThat ` in ` SubjectTest . java ` to improve test clarity and ensure
remove jdk . certpath . disabledAlgorithms property from ClientJSSEServerJSSE . java to streamline security configuration by eliminating
updated error messages in OptionData . java for clarity and consistency to improve code readability and maintainability
refactor module - info . java files for improved organization to enhance code clarity and maintainability
added error handling for server errors in IOSImplementation . java and modified ensureConnection method to throw IOException to improve error handling and provide clearer
updated variable name from ` sCheckingEvents ` to ` sCheckingEvents ` in ` LauncherInstrumentation . java ` and added a finally
refactor exception handling in FileSinkOperator and SortedDynPartitionOptimizer to improve error logging and resource management to enhance error handling and ensure proper resource
added diagnostics to the return statement in SchemaGenerator . java to display relevant diagnostics for debugging purposes
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to prevent duplicate resource paths in ClasspathMethodScanner to improve efficiency by avoiding redundant scanning of resource paths
updated the initialization of the test instance in TestServiceUtil . java to handle null values more gracefully to improve robustness by avoiding potential NullPointerException
added null check for HttpResponse and refactored response handling in RoutingInBoundHandler . java to improve error handling and response attribute management
[ ekey ] add sourceip in case of nat ( kubernetes deployment ) ( # 14616
[ java ] use arrow - memory instead of io . netty . buffer instead of io . netty . buffer
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks for header and body buffers in HttpConnection . java and created a new test in RFC2616BaseTest . java to ensure proper
refactor TimeoutSubscriber to use AtomicReference for upstream and requestedInitial in MultiTimeout . java to improve clarity and maintainability of the subscription
improve performance of leveledmanifest when there be no compaction
added @ Test annotation to TestOrcTimezone1 . java to enable unit testing for the OrcTimezone1 class
replaced ` contains ` method with ` findMatch ` in ` Debug . java ` and modified ` parseMetricAndTimerSystemProperties ` method
added error handling for JSONProcessingException in PinotSegmentRestletResource and updated return statements in TraceContext and TraceContextTest to improve robustness
added null check for the columnClass before retrieving the default renderer in JTable . java and created a new Test6888156 . java
added a check for the existence of the shell before adding it to the command line arguments to ensure that the shell command is only included if it
updated the method call from 10 to 1 in DatabaseCleaningService . java to adjust the deletion process for better resource management
replaced LinkedList with LinkedHashSet for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor to improve performance to enhance the efficiency of resource monitoring
added transaction disable ( ) method to BTreeMapTest . java to enable transaction management during file map operations
updated the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to improve iterator management and
added JMXHelper . unregister ( ) method to DefaultRemoteProxy . java and modified catch block in JMXHelper . java to improve error handling by
updated the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to accommodate larger data sets for
simplified the constructor call in Style . java for improved readability to enhance code clarity and maintainability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in requests
amza runner : remove dependency on json graph ( # 11938 )
simonstewart : use mouseinput . button _ left instead of vector3f . ZERO . clone ( ) .
refactor LoopRotateBadNodeBudget class for improved clarity to enhance maintainability and readability of the code
added typeInformation parameter to the convertToMongoType method and updated related classes to include type information to enhance type conversion functionality to support additional data types
ggb - 1349 add unit test for linked geo in inputbox
simonstewart : update copyright year in SendKeyToActiveElement . java and add a new test class SendKeyToActiveElement
added a new method ` getScaledInstance ` to handle negative target sizes in ` AddAndScaleMultiImage . java ` to improve image scaling
removed the extendArgumentCheck ( ) and extendWrapStore ( engine ) methods from DBMaker . java to streamline the code by elimin
on keyboard layout switch , re - query ic for shift state . issue #
removed the ` DETECTED _ ACTIVITY ` constant from multiple classes to simplify the code and improve maintainability by eliminating unnecessary dependencies
updated package imports from ` extensions ` to ` protocol . ExtensionConfig ` across multiple Java files to align with the new package structure for WebSocket protocol
removed the import of Buildable from AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments for unused start _ pc , end _ pc , and _ type _ index in multiple Java files to improve code readability and
improve error message for invalid upgrade protocol
refactor blockMode assignment logic in P11Cipher . java to improve code readability and maintainability
refactor Mockito class for improved readability to enhance maintainability and facilitate future updates
refactor permission checks in Merge . java for better clarity to improve code readability and maintainability by reducing redundancy
removed deprecate getConversationID ( ) methods in HttpContentResponse , HttpRequest , and Response classes to streamline code by eliminating obsolete
updated imports in DummyFreeTTSVoice and DummyFreeTTSVoice to use de . dfki . lt . mary . unitsel
refactor ` stripQuotes ` method to use ` PlanUtils ` instead of ` HashMap ` to improve code readability and maintainability by central
refactor rendering context handling in DLNAResource and Request classes to improve clarity and maintainability of rendering context management
updated repository handling in DefaultPluginManager to include remote artifact repositories to ensure accurate tracking of remote artifacts in the plugin management process
camel - cxf : fix resource leak in camel - cxf test
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failures
added a new File instance to the ZipFile class to facilitate the creation of a file using a specified name
added a deprecated method ` handleAll ( ) ` to ` TryType ` to indicate that the method should no longer be used in favor of
fix ( channel ) : add default constructor to channel
added stack trace logging functionality in GenericDAOImpl and implemented StackTraceUtils class in ReflectionUtils and ForumServiceImpl to enhance debugging capabilities by providing detailed
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
added a check for parentheses before unparsing in FunDefBase , ParenthesesFunDef , and ParenthesesFunDef classes to
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to include cluster _ id and cluster _ id
updated the variable name from ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` and added a
added checks for ` peeked ` in ` JsonTreeReader ` and created a test for ` nextJsonElement ` in ` JsonElementReaderTest
added an option to ConsumeAllOptionsHandler in TestCommand . java and implemented extra arguments in ExternalTestRunnerIntegrationTest . java to enhance command
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` , ` SolrIndexer ` , and ` SolrIndexer ` classes
[ flink - 20650 ] [ table - api ] add support for flink planner in streaming mode
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before tests are executed
updated Progress . java to use showPercentage instead of setRenderPercentageOnTop and modified progress handling in RSSReader . java to improve progress display
added a check to ensure the parent file exists before proceeding with further operations to avoid potential errors when the parent file does not exist
added methods to write and close POIDocument objects in IOUtils . java to ensure proper resource management and prevent potential memory leaks
added newline characters to print options and exportClassPath in JavaBuild . java to ensure consistent newline formatting across output files
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` getRootBox ` and `
updated the ` apply ` method to accept a user search query and added logging for LDAP authentication success to improve user authentication handling and provide clearer
added default port handling in NettyHttpServer , DefaultRouteBuilder , and FilteredRouter classes to enable dynamic port management for routes based on
refactor SnmpTargetHandler to utilize ThingHandlerHelper for consistency and clarity to improve code readability and maintainability by centralizing
add check for instructors with submit privileges in the list to ensure that only instructors with submit privileges are included in the list
added @ Incubating annotation to AvailableSettings . java to indicate that the feature is outdated and should no longer be used
refactor path extraction logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve path handling for
updated the string concatenation for newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity of the output
updated the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in ` Example
updated variable names from ` stripWhitespaceX ` to ` stripWhitespaceY ` in ` ImageProcessor . java ` to improve code readability and
updated the lazyWeakLock initialization to use milliseconds instead of milliseconds to improve thread management by allowing more time for concurrent access
added exactSearch parameter to MetadataIndexNode deserialization in TsFileSequenceReader . java and implemented measurementChunkMetadataListMapIteratorTest . java to
refactor method signatures to remove unnecessary parameters in CSVSaveService . java to improve code readability and maintainability
added import for Dimension and adjusted preferred size in NavigationShareTab . java to improve layout consistency by adjusting pane size based on user - defined
replaced ` startOffset ` and ` endOffset ` with ` state ` in ` BeiderMorseFilter ` and added a new ` TestBe
refactor UpnpAudioSinkReg , UpnpHandler , and UpnpEntryQueue classes to improve code organization and maintainability
fix npe in lenswarp . setcollidedat ( x , y , y , z )
added JUnit 5 imports and a new method ` toJson ` in ` JsonTest . java ` to enhance testing capabilities for JSON serialization in the
refactor MutableContextDataSupplier class for improved clarity to enhance maintainability and readability of the code
replaced ` Exception ` with ` Throwable ` in ` CoreContainer . java ` to handle a broader range of exceptions and log a warning
added a https parameter to the KubernetesMockServer constructor in KubernetesServer . java to enable secure communication in the Kubernetes server
[ gr - 11844 ] fix typo in defaultjavaloweringprovider . java
updated HTTP methods and response headers in DefaultServlet and DefaultServletTest to use POST instead of SC _ METHOD _ NOT _ ALLOW to ensure proper
tika - 2892 -- add locale - specific formatting for LAT _ LONG _ FORMAT
replaced exceptions from BAD _ REQUEST with NOT _ FOUND responses in ShowFileRequestHandler and added a test for 404 exceptions to improve error handling
added try - catch handling in ` ReflectorClassWriter ` and a corresponding test in ` ReflectorTest ` to ensure proper exception management during
added a new method ` clamp ` in ` Vector ` and implemented it in ` Vector2 ` to enhance vector manipulation capabilities by allowing clamping
added scope handling for OAuth2 access token creation in ChainedTokenGranter . java to enhance security by ensuring only valid scopes are processed
refactor BC _ instanceof class for improved clarity to enhance maintainability and readability of the code
added a Logger instance to the EditorBottomSheetBehavior class to improve logging capabilities for better debugging and monitoring
updated JUnit imports and method signatures in UaaUrlUtilsTest . java to use JUnit 5 features and improvements to enhance test
hhh - 15836 - fix npe in nativequery . add scalar ( )
added synchronized access to font information in SunLayoutEngine . java to ensure thread safety when accessing font data
replaced IntBigArray with IntArrayList and updated blockPositionByHash size calculation to improve performance and memory efficiency
replaced ` HTML _ UNIT _ JS ` with ` WindowSwitchingTest ` and updated related tests to use ` REMOTE ` instead of `
refactor BrokerRequestUtils class for improved clarity to enhance maintainability and readability of the code
refactor instance handling in InjectorBuilderImpl to use a map for improved efficiency to enhance efficiency by reducing redundant instances and ensuring unique instances
updated method calls to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuildFile ( cell , buildTarget ) ` in ` Build
added a null check for the value before setting the default value to avoid potential NullPointerException when the value is null
[ jabber ] fix connection leak in jabber jabber
changed the default value of DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to ensure the
added methods to retrieve and store data type physical variations in VectorizationContext and VectorPTFDesc classes to improve data type management and ensure
updated package names from ` com . google . zxing ` to ` com . google . zxing . client . j2se
refactor overview action handling logic in OverviewState . java to improve readability and maintainability of the code
added @ Entity annotation to BaseActivityEventEntity class to enable persistence of activity events within the application
added trace section entries in NavBarSwipeInteractionHandler , TouchInteractionService , and modified SYSTEM _ TRACE to false in TraceHelper to
added a new file ` InvalidOptions . java ` that tests the usage of ` javap < options > < classes > ` to validate the
added logging for inconsistent number of display states in DisplayController . java to improve debugging and traceability of display state changes
refactor getClientIdAndClientSecret method to use OAuth20Utils ' s getClientIdAndClientSecret method to improve code organization and maintainability by central
set unwrapServletException to true in ErrorPageErrorHandler and ErrorPageErrorHandler classes to enable unwrapping servlet exceptions during testing
added a condition to set the status of the ShortcutInfo in PackageUpdatedTask . java to ensure that the status is set to the default
camel - 14284 : camel - seda - allow to specify the size of the queue to be bounded by default . thanks to
added batchUpdateStart and batchUpdateEnd methods to Kernel and App classes to enhance functionality by allowing batch updates in the application
added HttpClient configuration to ThirdEyeApplication to enable HTTP client integration in the application
added a new Sort field and its getter and setter methods in JobInstanceFetchRequest and JobInstanceFetchRequest to enable sorting functionality for batch size
updated CryptoFacilitiesTradeService to utilize OpenOrders for canceling orders to improve order cancellation functionality by ensuring the correct currency pair is used
ggb - 1187 cancel the keyboard when the web be click .
llvm : use native function handle for memcpy ( ) .
refactor method signatures in BindLdapAuthenticationHandler and ResolverTestConfig to improve code readability and maintainability
ggb - 1346 add block tooltip flag to mode toggle menu
refactor DefaultDateTypeAdapter to utilize DateFormat for date and time styles to improve date formatting flexibility and allow customization of date formatting
updated playerSet . append method to include " ( " ) " instead of " < UID : " to improve clarity and consistency in player
added a check for empty lists in the List class to ensure proper handling of empty lists
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper exception handling for CommandException instances
updated the ` getLikeExpression ` method to accept a boolean parameter for regular expression handling to improve flexibility in expression evaluation based on user -
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to enhance the functionality of the StreamSupplierComponent
added a listener to the runChild method in LuceneTestCase . java to ensure all available locales are properly set and updated the default locale
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor ContextHandler initialization to use a separate method to improve code readability and maintainability by encapsulating context handler initialization logic
added a test method to verify the reference to the route builder in OSGiBlueprintTestSupport . java to ensure that the route builder correctly
nifi - 1344 : fix testexecutestreamcommand to check if the execution . error attribute be contain
refactor return type substitution methods in Types . java for improved clarity and consistency to enhance code readability and maintainability by reducing
added throttle type enum and updated throttling logic in TestExecutor . java to enhance flexibility in processing throttling based on character encoding settings
updated color assignment logic in ColorBleedEffect . java and added conditional logic in SpriteBatch . java to improve code clarity and
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` and modified ` Sheet ` , ` Workbook ` , and ` Sheet ` classes to implement ` Model `
camel - 14263 : camel - cxf should use cxf _ filter _ pattern instead of regex .
added a clearEntityManager parameter to JpaItemWriter and JpaItemWriterBuilder classes to enable control over the clearing of the entity manager during
added null checks for ShortcutInfo in multiple classes to prevent potential NullPointerExceptions during shortcut addition and drop operations
added a new parameter ` true ` to the ` TwoDimensionalCollectionValuedMap ` constructor in ` CoreMapNodePatternTrigger . java `
updated exchange host and exchange name from BTC - e to Wex in WexExchange . java to clarify the purpose of the
added null checks and null checks in OrcEncodedDataConsumer and EncodedTreeReaderFactory classes to ensure robustness by preventing potential NullPointerExceptions
added null check for files in SegmentInfos . java and created a test for opening the IndexReader in TestIndexReader . java to ensure robust
updated HSearchSortHelperImpl and FhirResourceDaoR4SearchWithElasticSearchIT to implement ITestDataBuilder and modified F
refactor the calculation of the percent value in DeviceHandler . java to use a variable for better readability to improve code clarity and ensure
updated limit validation logic in RangeInputStream and RangeReader classes to return - 1 instead of 1 to ensure proper handling of negative limits and prevent potential
camel - 16462 : camel - route - configurer now print duration if there be no route
[ hotfix ] [ hl ] fix incorrect calculation of position in playlist
replaced ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` with ` TestNumericRangeFilterBuilderTestCase `
[ hotfix ] [ runtime ] fix flaky test in statefuloperatortest
remove unnecessary null check for fill and stroke bitmap shaders in Area and Line classes to simplify code and improve readability by eliminating
added a method to check if a blockchain exists and updated related imports in Blockchain . java and BlockchainTest . java to improve blockchain management
trim whitespace from the group value in SQLPlusSupport . java to ensure consistent trimming of input values
set the socket ' s async flag to true in Http11AprProtocol . java to ensure that the socket is properly set asynchronous to
ggb - 1186 fix divider location in dark mode ( bug fix )
added healthcheck _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics to ControllerMeter and PinotController
removed shared avatars view from the itemView to hide the shared avatars view to improve user experience by reducing visual clutter
[ geogebra - 1341 ] remove unnecessary @ clientbundle . source ( ) from mebisresources
updated argument length checks in BurstSendReceiveUdpPing , ReceiveReceiveUdpPong , and ReceiveReceiveUdpPong to
added logging level check for command execution in LogInterceptor . java to ensure command execution is executed only on non - FINE log level
replaced ` CountDownLatch ` with ` assertWaitUntil ` in ` EventBusTracingTestBase . java ` to improve test reliability
refactor QueryParser to use Locale instead of String for locale handling to simplify code and improve readability by eliminating unnecessary locale parameter
replaced instances of ` Arrays . asList ( ) ` with ` Collections . singletonList ( ) ` in ` EntryCustomizationDialog . java `
[ jbrules - 2892 ] fix a bug in rulebaseimpl . addruleset ( ) and rulebaseimpl .
updated case name from UNAUTHORIZED to UNAUTHORIZED in OCSPResponse and added new class OCSPUnauthorized to improve code clarity and introduce
added a volatile int serverState variable and modified sleep duration in SSL . java to improve server stability by preventing multiple attempts to wait for
added open connection count functionality to the SourceCounter and its MBean classes to track the number of active connections and improve connection management in the application
add a field definition to the execute ( ) method to be able to add it to the interface type .
refactor ` createDefaultJavaPackageFinder ` methods to return ` ImmutableSet < String > ` instead of ` paths ` to improve code clarity and
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve output handling by utilizing ` PrintWriter `
[ hotfix ] [ test ] fix filesourcetextlinesitcase failure on window
added import for DataTable and implemented JavaEmbedUtils for DataTable in JRubyStepDefinition to enhance functionality for handling DataTable data types in JRuby
updated visibility settings in SearchImagesRenderer , ApacheHttpClientMediaWikiApi , and ApacheHttpClientMediaWikiApi classes to improve user interface visibility and enhance
refactor ReadSentimentDataset class for improved readability to enhance maintainability and readability of the code
updated error handling in FormulaParser to include a more descriptive error message to improve clarity of error messages for better debugging
added getter and setter methods for ` _ bindAddress ` and ` _ bindAddress ` in ` WebSocketClient ` to enhance flexibility in WebSocket
[ java ] delete aeron directory before close the clustered medium driver .
refactor width and height assignment logic in WidgetGroup . java for improved clarity and functionality to enhance code readability and maintainability by
updated sessionFixationAttribute comparison to use Boolean . valueOf for consistency to improve code readability and maintainability
refactor LALogicLinesFragment to use a switch statement for edge option handling to improve code readability and maintainability by reducing
increased sleep duration from 1 second to 1 second in ChromeBinary . java and added resetBackoff method in ChromeDriver . java to improve
added URITemplate attribute to the ClientResponseWrapper and updated its usage in TraceExchangeFilterFunction and WebClientTests to enhance request handling by allowing dynamic
updated the assignment of ` compacted ` to use ` Integer . MIN _ VALUE ` instead of ` cf ` in ` PrecompactedRow
updated the rendering intent calculation in ICC _ Profile and added a new InvalidRenderIntentTest class for invalid rendering intents to ensure correct rendering
add support for ` ` not allow ' ' in contribution question ( # 6338 )
added multiple calls to PublicMethed . waitProduceNextBlock ( blockingStubFull ) in ContractInternalTransaction003 . java to ensure proper
added SuppressFBWarnings annotation to KafkaExactlyOnceSink and removed the Serializable interface from KafkaRecord to simplify the class by eliminating unnecessary
added PGConnection import and modified connection handling in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption secret configuration in TokenAuthenticationHandler . java to provide more detailed logging for troubleshoot
remove @ deprecate from hazelcast
refactor command reporting logic in AmbariManagementControllerImpl , FinalizeKerberosServerAction , and FinalizeKerberosServerAction classes to improve
refactor NamedListCodec to improve iterator handling and write functionality to enhance data processing capabilities and improve type safety in NamedListCodec
fix nullpointerexception when assign completely lost partition
added a schema inclusion rule to the options in ApiExample . java to enhance schema management by allowing specific inclusion rules
updated the expected value from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflects the expected
added coordinate sequence validation to the linear ring creation in SDO . java and updated corresponding test cases in SDOCreateTest . java to enhance
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` in ` ConstantPool ` to retrieve base and dimension names to improve
added a new method ` setDebugEvaluationOutputForNextEval ` to multiple formula evaluator classes to provide a way to set debug evaluation output for
test : migrate test module to junit 5 ( # 4892 )
updated the profile initialization in LegacyMediaManager . java and modified the condition in PlaybackController . java to ensure that live TV playback is
added a return statement to the return statement in DynamicStyleBar . java to improve control flow by exiting the method early
added slf4j logging statements in Utils . java to facilitate debugging and monitoring of repl dump state changes
refactor ReactiveAuthorizationManager class for improved readability to enhance maintainability and facilitate future modifications
added a check for boolean types in MethodEmitter . java to ensure proper handling of boolean types in the type promotion logic
rename llvmobjectnuller and llvmbitcodefunctionnuller to llvmaddress .
refactor multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
add unit test for caffeinecachedefaultconfiguration
added a method ` calculateBoundingBox ` to calculate the bounding box of vertices based on the number of vertices to enhance the mesh ' s functionality by
added a target - hash - function to determine the hash function for computing target hashes to enhance flexibility in hash generation by allowing users to specify
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings for chart elements in ListViewMultiChartActivity and modified highlight rendering in BarChart to improve visual clarity
removed duplicate pgSgPathPlanMap entry from pgSgPathPlanMap to streamline the code by eliminating unnecessary duplication
camel - infinispan : fix test failure in camel - infinispan
refactor MavenArtifactFetcher and MavenDependencyResolver to use a thread - safe lock mechanism to improve thread safety and prevent potential race conditions during artifact
added a conditional check for GL _ ES in the fragmentShader string to ensure compatibility with OpenGL ES environments
changed the type of ` SortedSet ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and ` TestUpdateRSGroupConfiguration
added error handling for loading WebXmlConfiguration and debug logging in TagLibConfiguration . java to ensure proper loading of the JspPage class and improve
updated version handling in CustomAnalyzer and TestCustomAnalyzer to use LowerCaseFilter for testing to ensure compatibility with Lucene ' s default match version
added a test for reading package archive information in ShadowPackageManagerTest . java and implemented a method to retrieve package archive information to ensure that the
replaced direct calls to ` invoke ` with ` MethodUtil . invoke ` across multiple files to utilize ` MethodUtil ` for package access
added progress updates for project configuration and task configurations in GradleBuildService and Main classes to enhance progress tracking for project configuration and task execution
removed synchronization from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
fix hikariconfig . getinitializationfailtimeout ( ) in hikariconfig # getinitializationfailfast ( )
removed the timeOut parameter from the getResult method and added an error method to simplify the method signature and improve error handling
changed the type of ` isNative ` from ` boolean ` to ` transient ` in ` JMethodIdTable . java ` to ensure that the
updated error message formatting in CEntryPointCallStubMethod . java to improve code readability and maintain consistency
rename ` ruleenablehandler ` to ` ruleenablementactionhandler ` for clarity
refactor multiple Java files to improve code organization and readability to enhance maintainability and readability of the code
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of debug messages to enhance debugging capabilities and provide clearer
[ hotfix ] [ kafka ] fix typo in kafkadynamictablefactorytest
added null check for the registrant repository before checking its owner to improve error handling and provide clearer feedback when the repository is not found
added support for the " . OTF " extension in the font name checks to ensure compatibility with additional font formats in the application
refactor type handling in AnnotationMatcher . java for improved clarity and functionality to enhance readability and maintainability of the code
updated the error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added a conditional check before logging debug messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is not enabled
rename ` includes ` to ` excludes ` in ` SurefirePlugin . java ` for clarity to improve code readability and maintainability
added a new method ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` to ` onHomeIntent ( ) ` in ` Launcher
updated maximum bitrate from 110 to 30 in PMS . java to increase the maximum bitrate for better performance
refactored the ` getOptions ` method to use ` optionsMap . values ( ) ` instead of ` options ` to improve code readability
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure consistent formatting of the description
updated the filename path in XOMParserTest . java from " / JDK8022548 . out " to " / JDK8022548
[ besu ] use process . pid ( ) instead of process . pid ( ) instead of process . pid ( )
added getLoadedMusic and getLoadedSound methods to MusicLoader , SoundLoader , and MusicLoader classes to provide access to
removed unnecessary imports and simplified type assignment in OnBeanCondition . java to improve code clarity and reduce unnecessary dependencies
added ScreenRecord annotation to RequestPinItemTest . java to enable screen recording for debugging purposes
added null check for lrPauseButton in CPUFeature and MemoryFeature classes to ensure the lrPauseButton is only selected when it is not null
refactor account preference handling to use mAccountsPrefCategory instead of PreferenceMultiline to improve code clarity and maintainability by centralizing preference
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 557 :
replaced the initialization of StringBuilder with a conditional check for utflen before creating a new StringBuilder to ensure that the StringBuilder does not exceed the maximum
disable spring . metrics . export . statsd . enabled by default in integration test
refactor exception handling logic in InterruptedException . java to improve code readability and maintainability
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor ConnectionCheckOperation to use a boolean variable for SSL connection handling to improve code readability and maintainability by reducing redundancy
added a conditional check for ` Map ` type before converting ` value ` to ` type ` in ` ArgumentArrayMessageMapper . java ` to
add check for indexabledspaceobject & fix minor bug
added a flag set for AuthenticatorActivity in PasscodeManager . java to improve user experience by enabling reordering to FRONT when interacting
fix ( template ) : remove deprecate method in patternparameterconfigurator
changed the return type of the ` beginDraggingWidget ` method from void to boolean and added a null check for the image ' s drawable
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check before collecting components in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
add confusionmatrix to maxenttagger and maxenttagger test
do n ' t set lastsampleinerror and lastsampleok if it ' s false
added unit tests for ` getConnectedDevices ` and ` getConnectionState ` methods in ` ShadowBluetoothHeadsetTest ` and ` ShadowBl
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java to ensure
updated objectMethods to include " clone " and " hashCode " and " finalize " constants in ResultObjectProxy . java to enhance object method management
added null checks for Counters object in IntegrationTestBigLinkedList . java to ensure robustness by handling cases where Counters object is null
added a new class ` REFERRING _ OBJECTS ` and modified the reply handling logic in ` JDWP . java ` to
updated the logic for setting the registered service filter in SamlIdPServicesManagerRegisteredServiceLocator to ensure that the service matches the specified service
added a null check for the activity before invoking the runOnUiThread method to avoid potential NullPointerException when the activity is not initialized
corrected the spelling of ' logger ' to ' logger ' in multiple classes to improve code readability and maintain consistency in logging
added ` setStringType ` and ` getStringType ` methods to ` DatabaseAdaptor ` and updated access modifiers in ` JDBCSessionDataStore ` to allow
updated test assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to
refactor thread name handling in CliDriver , SessionState , and HiveSessionImpl classes to improve code readability and maintainability by centralizing
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ drools - 2200 ] add unit test for dmnruntime . evaluateall ( dmnmodel )
make sure the texture map creation finish on mac ( macos )
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing a more descriptive
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
added text and description parameter to FlutterRetargetAction , HotReloadFlutterApp , and RestartFlutterApp classes to enhance the
do n ' t use ` ` hasspreadsheetlabel ' ' rather than ` ` hasspreadsheetlabel ' '
changed the type of the BRIGHTNESS _ FACTOR constant from intValue to double to ensure accurate representation of the BRIGHTNESS _
fix bug in sscmhistoryparser . parse ( ) .
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented the ` listUsers ` method in ` HomekitAuthInfoImpl `
added checks for void return types in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new Test6723447
updated debug logging format in DynatraceExporterV2 . java and modified assertions in DynatraceExporterV2Test . java
refactor method signatures in Context and Response classes to improve code readability and maintainability
added a method to set and deserialize NBTTagCompound in MixinItemStack . java to ensure proper handling of NBTTagCompound capabilities
[ hotfix ] [ test ] fix test case in lifecycleutilstest
added validation for CreateSmartContract and modified contract creation logic in Wallet , TriggerSmartContractServlet , and TriggerSmartContractServlet to improve contract validation
added package - info . java files for the ` com . ibm . dtfj . image ` and ` com . ibm . dtf
refactor the addition logic in DocumentsWriterDeleteQueue to improve concurrency handling to ensure thread safety during the addition of nodes in the delete queue
added a check to ignore duplicate JavaFileObject instances in JavadocTool . java and modified the runTest method in T7091528 . java
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to ensure compatibility with
added support for adding a new user parameter in the LoginServerTokenEndpointFilter to enhance security by allowing multiple user parameters to be added to the
added a new constant ` C _ KEY ` in ` LanguageFactoryTest ` and modified conditional checks in ` CPPParserTokenManager ` to
replaced instances of ` LinkedBlockingQueue ` with ` MoreExecutors . newSingleThreadExecutor ` and added a new ` MoreExecutors
added HTTP cache control and expiration headers to the LoginService and FormAuthenticator classes to enhance security by preventing unauthorized access to the login page
updated error logging to include error message to improve debugging by providing more context in error messages
updated HSSFT tests to use TestAreaReference , TestRangeAddress , and TestSheetReferences classes instead of AllHSSFUtilTests
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTP2Test classes to improve code organization and maintainability
added null check for output before retrieving the class directory to avoid potential NullPointerExceptions when the output file is null
added import for ExternalResourceControlPriority and modified access controller settings in Java2DRenderer . java to enhance access control for resource resolution operations
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the application does not fail on unsupported fonts on Windows machines
modified the ` GetInternalThreads ` class to be final and refactored CPU time testing logic to improve thread management and enhance error handling during
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that comments are only considered if they are not empty to
updated assertions in ` SimDistribStateManager ` and ` TestTriggerIntegration ` to use ` 100.0 ` instead of ` 5.
replaced ` equals ( ) ` with ` equalsIgnoreCase ( ) ` in multiple classes to ensure case - insensitive comparison for file names regardless of case
removed the get method from ShadowBundle . java to simplify the code by eliminating unnecessary complexity
added date formatting and locale checks in TweetActivity . java to ensure accurate time display based on user settings
added a check to return an empty list if there are no connections to ensure that an empty list is returned when no connections are available
refactor focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
update extra class path handling in App . java to ensure proper formatting of file paths to avoid issues with special characters in file paths
make the solve method synchronized to prevent concurrentmodificationexception
added import statement for Message class in GenericMessage . java to enable dependency injection for the Message class
updated SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a join method to improve code readability and maintainability by
refactor filter selection logic in AquaFileChooserUI to improve code readability and maintainability by encapsulating filter validation logic
fix thread safety issue in p2ptransportmanager
updated the ` toFormulaString ` method in ` ArrayPtg ` to return " TRUE " instead of ` toString ` and added a test
test : migrate pgtokenizertest to junit 5 ( # 4523 )
refactor the handling of nested anonymous classes in Java2TypeScriptTranslator and add a new test for nested anonymous classes in StaticsTests to
updated the error handling in AddAutoIncrementChange to use a sequence name for auto - increment columns to ensure compatibility with PostgreSQL ' s auto -
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative values and prevent potential errors
removed unnecessary assertions in ImageParserTest . java to clean up the code and improve readability
corrected the variable name from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent
reformatted import statements for consistency and clarity to improve code readability and maintainability
[ java ] use engine _ init instead of engine _ finish in nativecryptotest
added a new ` start ` variable and modified ` fireIteration ` methods in ` InterleaveControl ` and ` GenericController ` classes to enhance
added release method for HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during recovery tests
added a check to start a new activity if the URL contains " twitter : / " to improve user experience by allowing direct access to the activity
added a awaitHostStatus method in DeploymentGroupTest . java to wait for the host status to complete before proceeding with deployment tests
updated logResult method from false to true in VisibilityController . java to reflect the intended functionality of the list labels feature
increased the maximum retry limit from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing more retries for
replaced System . out . println with System . out . println in TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapper
added fraction resource handling and corresponding unit tests in multiple classes to enhance functionality for handling fraction data in the application
removed the confirmWrite method from BasicFrame . java to simplify the code by eliminating unnecessary checks
added assertions for tagGroupId and tagArtifactId in findNewerDependencyVersion method to ensure that tagGroupId and tagArtifactId are not null
hbase - 23221 addendum addendum to namespacestatemanager . getmaxtables ( ) throw quotaexceededexception
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future updates
added a check for negative f0 in HTSVocoder . java to ensure f0 is greater than or equal to 0.0 to
removed connection catalog retrieval and added null check for foreign key column in SchemaRetriever and TableRetriever classes to improve error handling and prevent potential NullPointerExceptions
make sure we do n ' t call clearEncoders ( ) on a thread - safe map
added SharedPreferences support for empty page scenarios in Workspace . java to enhance user experience by allowing users to choose for empty page scenarios
added a warning log for deprecated cucumber - needle in NeedleFactory . java to inform users that cucumber - needle has been
updated theme handling in ShadowThemeTest and added native object retrieval in ShadowArscAssetManager and ShadowArscAssetManager to improve theme management
updated import statements and string concatenation in VerifyFast . java to improve clarity of test failure messages to enhance readability and maintainability of the
no effective change - remove @ system _ versioning _ alter _ history
updated property handling in ` CodeGenerator ` , ` Global ` , ` ScriptObject ` , and ` ScriptObject ` classes to improve type safety
added randomization to the shuffle method in TestFilterDirectoryReader . java to enhance the variability of readers in the test
updated displayName retrieval logic in UsersAndGroupsSearchProvider to handle user name based on shareWith to improve clarity and user experience by providing a
updated the path formatting in CookieRetrievingCookieGenerator to use a default value of " / " to ensure a valid path is provided to avoid
updated formatting in multiple Java files to improve code readability and maintain consistency
updated cacheName assignment to use ` config . getTotalBackupCount ( ) ` instead of ` config . getName ( ) ` to improve code clarity
updated comparison logic in ValidationResult to check if pageNumber is not equal to ve ' s pageNumber to ensure accurate validation of page number comparison based on the
added a null check for the focused widget in UIDropdown . java to prevent potential NullPointerExceptions when accessing the focused widget
reformatted method names in SoundUtil . java for consistency to improve code readability and maintainability
refactor ` getPlatformFlavorsOrDefault ` method to use ` getAppleCxxPlatformFlavorDomain ` instead of ` flavorDomain
added a test for the " show ololo " statement in ClickHouseStatementTest . java to ensure the correct SQL syntax is used for
renamed methods from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test logging behavior to ensure proper handling of NullPointerExceptions during logging operations
added a ` getData ( ) ` method to ` PathSharingContext ` and updated the ` sharedMap ` initialization in ` ScriptedProcessor `
truffle : use castexact instead of unsafe field . getobjectvolatile
added support for " NEXT VALUE FOR " in NextValExpression and updated related methods to handle multi - row values to improve flexibility in handling
improve error message for non - pre - cached resource bundle
refactor buffer management in BoundedLocalCache and add a test for clearing pending writes in BoundedLocalCacheTest to improve cache efficiency and
added ` order _ direction ` property to ` QuoineExchange ` and integrated it in ` QuoineNewMarginOrderRequest ` to
added a method ` boundInitialization ` to ` PropertyDescriptor ` and created a new class ` Test7192955 ` for testing property binding functionality
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` SetDisplayModeCallback ` in ` LwjglGraphics `
added a null check for the component form ' s buttonsAwatingRelease in the Tabs class to ensure proper cleanup of buttons when the component
updated line cell wrapping logic to use getWrapWidth ( ) instead of snappedLeftInset ( ) and snappedRightInset (
corrected the spelling of " L ' argomento del parser " to " L " in XSLTErrorResources _ it . java to
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure predictable iteration order for parameter values
replaced ` getName ( ) ` with ` String . format ( ) ` in multiple text classes to improve code readability and maintainability by
replaced direct usage of ` getNamespaceURI ` with ` getNamespace ` in ` StaxXmlPullParser . java ` to simplify the code by
added a new configuration option for nested joins in TestAll , TestLimit , and TestOuterJoins classes to enable configuration of nested joins in tests
cloudstack - 4892 : do n ' t allow admin only to be specify by root admin only
added support for JavacFileManager in SourceFileManager and updated CompletionTaskProcesor constructor to accept a cursor parameter to improve compilation
added Hive configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT , XmlIOTest , and KuduIOIT to use Hamcrest '
[ exoplayer2 ] fix nullness warning in metadatarenderer
corrected the calculation of offsetMemSize from SIZE to BYTES and added a new test for symbol file mapping in LineTcpConnectionContextTest to
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up test output and focus on relevant
deleted the ` Reflection ` class and its imports from ` jooby . internal . guice ` to ` jooby
refactor ThreadlessExecutor to improve clarity and encapsulation to enhance readability and maintainability of the code
refactor date formatting logic in DateTimeFormatter . java and add unit tests in TestDateTimeParsing . java to improve code clarity and ensure proper handling
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and update related method names to improve clarity and consistency in naming conventions
added WILDCARD case handling in ` Types . java ` and created a new class ` T7034495 . java ` to prevent cr
refactor loop structure in LotsOfEvents . java for improved readability to enhance code clarity and maintainability
refactor conditional statements in TransclusionDecideRule . java for improved readability and maintainability to enhance code clarity and maintainability
remove ` ` micronaut ' ' prefix and remove ` ` micronaut ' '
added unit tests for Area3DPtg functionality in TestBugs . java to ensure correct handling of name definitions in formula processing
updated the MindIcon constructor to include a description if the name does not contain a slash to improve clarity of the icon description when the
added a boolean parameter ` internalStateHandled ` to the ` onHomeIntent ` method in ` LauncherCallbacks ` and ` LauncherCallbacks
replaced direct calls to ` getPreferDependencyTree ( ) ` with a direct call to ` getPreferDependencyTree ( ) ` to simplify
added a new method ` showDetails ` to multiple activity classes to handle file details based on the active tab to enhance functionality by allowing users to
updated method names from ` $ apply ` to ` apply ` across multiple files to ensure consistency in method naming conventions across the codebase
minimalencoder : add randomize253state ( ) to randomize253state ( ) .
updated formatting and formatting in SourceBuilder . java for consistency and clarity to improve code readability and maintain consistency in formatting
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates correctly after data changes
removed the ` setDefaultWALSyncMode ` method from the ` ShadowSQLiteConnection ` class to streamline the code by eliminating
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct handling of
camel - 15836 - camel - aws2 - crt : remove unused method
updated the error message in doDudPasswordTest from " DEF length 110 object truncated by 28 " to " 84 " to reflect the correct
improve error message in hazelcasttestsupport
[ gr - 23343 ] fix the bug in graalcompiler . appendgoto ( ) .
geogebra - 1343 : do n ' t need to draw the image on the screen .
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit and updated YoBitMarketDataService and YoBitMarket
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to improve clarity and consistency in exception handling
added StreamReadConstraints configuration in StandardDataFlow . java to ensure proper handling of string length limits during JSON serialization
updated the method to retrieve the engine string without an empty string to ensure that an empty string is used to avoid potential null pointer exceptions when retrieving
renamed ` FullIterator ` to ` WheelIterator ` and updated imports in ` TimerWheelTest ` to improve clarity and consistency
added error handling for invalid bug patterns in BugInstance . java to improve robustness and provide clearer error messages for missing bug patterns
added a new constant WAIT _ CHUNK _ READY _ IN _ SECONDS and modified the timeout assertion in LocalChunkProviderTest . java to improve
changed the visibility of the uncomplete check lists menu item from true to false to disable the uncomplete check lists menu functionality
updated DefaultResultSetHandler to resolve discriminated result maps and added a new Contract class for discriminator functionality to improve the accuracy of result map resolution
added null checks for defaultHome and unregistration of mOtherHomeAppUpdateReceiver in OverviewComponentObserver . java to ensure proper handling of
removed the import of VertxGen annotation from PumpImpl . java to streamline code generation process by eliminating unnecessary dependencies
removed unnecessary casting of ` FileDisplayActivity ` from ` sendDownloadedFile ` method calls in ` FileDetailFragment ` and ` OCFileList
added trimming of leading and leading spaces in ConfigAttributeEditor . java and created a test for it in ConfigAttributeEditorTests . java to
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux classes to improve code organization and maintainability
[ svm ] use getunnamedmodule ( ) instead of getmodulreference ( ) .
added support for " SYSTEM TABLE " relationship in DatabaseMetaData and DatabaseMetaData classes to ensure correct identification of tables based on the presence of " pg
chore ( deps ) : deprecate agent . getagentrequest ( ) and agentproto . getagentrequest ( ) and agentproto .
updated RQST _ FIELD _ DESC from - 1 to 1 in ThriftHiveMetastore and HiveMetaStore classes to correct the
added a new module - info . java file containing module - level exports and exports to provide module - level exports and exports for better encapsulation
added flush state checks and improved fill interest logic in SslConnection . java to enhance flushing behavior and ensure proper fill state management during SSL connections
updated Log4j2LogDelegateFactory to implement LogManager and added a new NoExceptionInInitializerErrorTest class to improve logging functionality and
updated variable names and conditions in ExecutionEnvironment . java and TestHelper . java to improve clarity and functionality to enhance code readability and maintain
refactor multiple classes related to ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to support SSL configuration in PostgreSQL
added a new @ Test annotation to the TestInterProcessSemaphoreEdges class to disable the test due to failing scenarios
updated the iteration order of theme keys in EditableResources . java to ensure consistent ordering of keys before processing them
added a new file ` OSvTerminal . java ` and implemented the ` OSvTerminal ` class in ` TerminalFactory . java ` to
added support for additional file extensions in ClassType . java to ensure compatibility with additional file types in the application
replaced HashMap with TreeMap in DrillTestWrapper . java to ensure predictable iteration order for vector data processing
added a condition to check if the index is within the bounds of the names and values to ensure that the loop does not exceed the defined size
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
refactor ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermission ` methods to use ` this ` instead of ` static `
added resolution options to the ` resolveMessage ` method in ` StandardMessageResolver ` to enhance flexibility in message resolution based on template and origin
replaced Class < ? extends ClassVisitor > with Class < ? extends ClassVisitor > in AsmUtil . java to enhance type safety and
added a new interface ` LoggingAuditService ` and ` UaaAuditService ` to log user authentication success and failure messages to enhance auditing
added null checks for temperature in TadoZoneStateAdapter and improved temperature handling in AirConditioningZoneSettingsBuilder to enhance robustness
fix bean definition injection for abstract class
camel - 14263 : camel - http - add support for proxy host and port in camel - http
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to reflect the latest encoding
added a call to jdkSerialFilter in System . java to enable serialization of static properties in the application
( chore ) camel - core : improve log message for pooled mode .
replaced ` forceFinishScroller ` method with ` forceFinishScroller ( ) ` across multiple classes to simplify the method signature and improve
updated the ` ensureRealtimeClusterIsSetUp ` method to accept a ` rawRealtimeTableConfig ` parameter to enhance configuration flexibility for
added error handling methods to ValidationReport , DisallowValidator , and RefValidator classes , and updated related messages in RefValidator to improve error reporting
replaced System . arraycopy with closestProfile . inlineQsb and added new constants for inline QSB in InvariantDeviceProfile . java to
updated method signatures in SortedArrayStringMapTest to throw Exception and modified location encoding to use URLDecoder to ensure proper handling of special characters and
added a wildcard pattern to the @ Given annotation in TransformSteps . java to enhance flexibility in matching input parameters
added null checks for properties in Toolkit . java and modified fillRect method in PGraphicsJava2D . java to prevent potential NullPointerExceptions
updated timeout parameters in FaultToleranceTest . java for clarity and consistency to improve code readability and maintainability by using a configurable timeout
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
added a method to set the Docker image URL in Environments . java to enhance flexibility by allowing dynamic image configuration
[ hotfix ] [ test ] fix test failure in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
renamed the method ` createHardLink ` to ` copyFile ` and added a method to copy files to improve code clarity and maintainability
rename ` appendToDescription ( ) ` to ` getDescription ( ) ` in multiple classes to improve clarity and consistency in method naming
( chore ) camel - lstm : add a check for device ( # 2321 )
added a condition to check if the XML is a XML object before processing to avoid potential NullPointerExceptions when processing XML data
refactor NotesHelperTest and ReminderHelperTest classes to use AndroidJUnit4 instead of InstrumentationTestCase to ensure compatibility with Android
added new gas limit and parent gas limit rules to CommonConfig . java to enhance configuration flexibility by allowing additional rules to be added
changed the access modifier of setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to setup
renamed ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and updated its usage in ` XMLChangeLog
added null check for listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ flink - 23172 ] [ doc ] fix break link to task failure recovery page on configuration
added a new test method ` testIssue154 ` to validate SQL parsing and deparsing of discount data to ensure that the SQL parser correctly handles
refactor Common . java for improved readability to enhance maintainability and facilitate future updates
refactor LauncherInstrumentation to use try - with - resources for context layer handling to ensure proper resource management and prevent potential memory leaks
refactor StreamExecDeduplicate class for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ kafka ] log error when send kafka message to topic
dataes - 1346 - fix simpleelasticsearch persistence to be immutable .
mondrian : do n ' t call setcoord ( ) in geopointSys1d , geopoint3d
added scrolling functionality to the AskGestureEventsListener class to improve user interaction responsiveness during user interaction
updated the comparison logic in NGramEstimator . java to check for non - zero values before returning the result to improve accuracy of the comparison
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
added methods to retrieve folder icon properties from label state and cardinality in StatsLogCompatManager . java to enhance functionality by providing access to folder icon
updated method names from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to improve
added a new file TestSkeletonPredicates . java containing a new test class ` TestSkeletonPredicates . java ` to test the functionality of the `
refactor SelectionHighlighter to improve handler management and add equals and hashCode methods to enhance object comparison and hashing functionality for better object comparison
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmRuntime ` to use it to
camel - 19751 : disable test that do n ' t run reliably on apache ci
updated the condition in JansiWinSysTerminal to check if the console is not equal to 100 to simplify the condition for better readability
added null checks for buffer before setting parameters in BufferUtils . java to prevent potential NullPointerExceptions when buffer is null
updated the data directory path from " data / " to " File . separator " in TestSolrDiscoveryProperties . java to ensure compatibility with different
updated OS detection logic in AutoUpdaterServerProperties . java to accommodate macOS version checks to ensure compatibility with macOS environments and improve
replaced ` File ` with ` String ` for ` lockName ` in ` Lock ` class to improve clarity by using a more d
replaced ` appIcon ` with ` allApps ` in ` Overview . java ` to improve clarity by using a more descriptive
refactor ` getInvocationType ` method calls to use ` ClientDatagramEndPoint . this ` instead of ` Invocable . InvocationType
updated GET _ STEP _ EXECUTIONS string to include " order by STEP _ EXECUTION _ ID " instead of " oreder by
updated button handling in LwjglInput to ignore unknown buttons to improve input handling by ignoring unknown buttons
added test cases for submit approve and reject scenarios in TaskRestRepositoriesIT . java to ensure proper functionality and error handling for claimed tasks
replaced instances of ` Logger ` with a static final Logger instance across multiple classes to improve logging consistency and maintainability across the codebase
updated expiration time parsing in SsoAccessTokenProvider and added unit tests in SsoAccessTokenProviderTest and SsoAccessTokenProviderTest to improve expiration
[ geos - 6665 ] fix test failure on macos
added alarm suppression methods to GreetResourceMockedTest , DeleteAlarmSuppressionRequest , and OciMetricsCdiExtensionTest to
reformatted conditional statements in JFrame . java for improved readability to enhance code readability and maintainability
added a null check for the connection before executing the ANALYZE SAMPLE _ SIZE 0 statement in LibraryScanner . java to prevent potential NullPointerExceptions
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure proper initialization of metrics in the
refactor output construction logic in OCFileListFragment . java to improve readability and maintainability to enhance code clarity and maintainability by
updated configuration from " yes " to " no " in ScpServerTestSupport and modified loadKeys method to return Iterable < KeyPair > to
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the codebase
added a new test class ` ThreadFactoryTest ` to validate the functionality of the ` ThreadFactory ` class to ensure that the ` MyThread
refactored lock period retrieval and handling in DelegateResourceActuator for improved logic and modularity to enhance maintainability and accommodate dynamic property changes in lock period
added a new TicketModel instance to the EditTicketPage class to facilitate the creation of tickets in the application
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps
updated constructors in multiple assertion classes to include Class < S > parameters to enhance type safety and prevent unchecked cast warnings
updated MENU _ DELETE _ TWEET , MENU _ OPEN _ WEB , MENU _ QUOTE , and MEN
fix deadlock in jmeterthread . getinterruption ( )
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` in ` MediaCodecAudioRenderer . java ` to improve clarity
added a conditional check before offering failure in ServerHTTP2StreamEndPoint . java to ensure failure handling only occurs when the result is successful
updated error message from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and updated
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety for concurrent access to the CheckpointsCleaner class
replace Observer and Subscription with Subscriber in multiple files to update to a more modern ReactiveX API for improved
refactor error handling in ComponentPresetManager . java to improve code readability and maintainability
added a new configuration option for hive . resultset . use . unique . column . names in HiveConf . java and updated test cases in Test
mary gui : do n ' t fill example text when the voice be select .
added validation for invalid sessions in Session . java and updated test assertions in SessionHandlerTest . java to ensure that invalid sessions throw an appropriate exception
hhh - 14663 - remove exceptionhelper . getrootcause ( ) from hibernate test
increased the default value of keyPairGenerator from 256 to 255 in JceX25519Domain . java to improve security by using a more
added a codec set for always postings format in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 postings format
[ hotfix ] [ runtime ] log empty checkpointrange header if there be no header
added support for RSA / ECB / OAEPPadding algorithm in OperatorHelper . java to ensure compatibility with RSA / ECB / O
updated platform annotations from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to ensure compatibility with the latest
added logging for IOException and SecurityException in DebugSourcesResolver . java to improve error handling and provide clearer logging during URI resolution
removed unnecessary whitespace in the return statements in AbstractTest . java to improve code readability and maintain consistency in formatting
updated error handling in FileUploadUtils and modified segment file handling in ControllerConf and related tests to improve error reporting and ensure generated files are properly
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes to improve memory management and ensure consistent memory usage across buffer
change the default value of USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable the
updated date formatting logic in SimpleDateFormat and added a new test class Bug7130335 to improve date formatting accuracy and ensure correct handling of time
refactor icon count handling in AllAppsView . java for improved readability and maintainability to enhance code clarity and maintainability by
cloudstack - 4892 : do n ' t return router if no default hypervisor be available
refactor StringBuffer class for improved performance to enhance performance and maintainability of string manipulation operations
added uid assignment for rule in RuleResource . java to ensure the rule is correctly associated with the specified UID
added a null check for the listener before removing it from the registry to prevent potential NullPointerExceptions when the listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the JSON string conversion logic to
make access _ table public to allow access from other package .
updated error messages for missing resources in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity of error messages for better debugging
improve exception handling in tcptransport and xmpptransport
refactor multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
added an ` isUpgradeSuspended ` parameter to the ` AmbariManagementControllerImpl ` class and updated related logic to include the effective
updated copyright year from 2007 - 2009 to 2009 in FindsByCssSelector . java to ensure the copyright year is current and
removed the variable ` wfields ` from the ` Resolver ` class to simplify the code by eliminating unnecessary variable assignment
added a constructor to OAuthProperties to set encryption and signing key size settings to enhance security by allowing customization of encryption and signing key sizes
hbase - 25819 fix arrayindexoutofboundsexception in htabledescriptor # getcolumnfamilycount ( ) ( # 25
replaced ` AllowedResourceAliasChecker ` with a lambda expression in ` addAliasCheck ` to simplify alias checking logic by using a lambda expression
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info files to improve code organization and maintainability
[ java ] add reset ( ) method to cluster to reset the idle strategy .
updated the sequence file writing logic in ChunkedWriter . java to ensure the correct chunk ID is used during writing
added a new abstract class AbstractJobExecutor to provide a structured way to handle job execution in a batch context
replaced the return statement with a new variable ` replayFuture ` in ` RecoveryStrategy . java ` to improve clarity and functionality of the
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs in AbstractConsulClient to ensure proper handling of service IDs based on the discovery settings
replaced ` Float . floatToIntBits ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` in ` DB . java `
add option to verify runtime compilation framestates during bytecode parsing
removed redundant assignment of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code and improve readability by elimin
added a check for abstract methods in ` CallsRealMethods ` and modified ` answer ` method in ` CreatingMocksWithConstructorTest ` to
refactor ` checkPackageAccess ` method to accept ` Class ` instead of ` String ` to improve code readability and maintainability by redu
refactor ContextPathPluginTest to extend AbstractPluginDataInit and add error configuration setup in ContextPathPluginTest to enhance test coverage and ensure
renamed ` dtm ` to ` model ` in ` ContributionListPanel . java ` to improve clarity and consistency in naming conventions
added support for the ` has - touch - interaction - service ` request in ` QuickstepTestInformationHandler ` and ` TestInformationHandler `
refactor connection dialog handling in ConnectAction . java to improve readability and maintainability to enhance code clarity and maintainability while ensuring proper
updated the data types of ` showRulesResult ` and ` computeShowRules ` methods to use ` BuildTarget ` instead of ` String `
added new classes ` ArrayHelper ` , ` Comparables ` , ` NativeRegExp ` , ` Enums ` , and ` Objects ` to
added handling for home and end operations in the Less class to enhance user experience by allowing users to select and display lines from the source
removed synchronization around the plot retrieval process in PlotHandler . java to streamline the code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java for improved clarity and functionality to enhance code readability and maintainability by consolidating intent creation
modified constructor to be visible only to the package ( no longer public )
added basic constraints for certificate generation in TestUtils . java to enhance security by enforcing basic certificate constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address failures caused by using the wrong transform
replaced ` Integer . MAX _ VALUE ` with ` Integer . MAX _ VALUE ` in ` TrieDateField ` and ` TrieField `
removed the TaskbarStateHandler class and updated its implementation in BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` that implements reflection methods for checking array type fields to ensure proper handling of field access and validation
wait for hazelcast process to be destroy if the hazelcast process be not destroy
refactored ApplicationSettingsService to use @ ApplicationScoped annotation instead of @ Singleton and refactored the save method in ApplicationSettingsService to
[ java ] fix safepoint . setnewvalue ( ) to 1 instead of 0
updated threadNameField to use " Ljava / lang / String " instead of " charArray " to ensure compatibility with Java ' s string
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
added strokeObject and fontObject fields to PGraphicsJava2D . java to enhance flexibility by allowing customization of stroke objects
[ calcite - 4892 ] fix sql validation for window and groupby with dynamic star
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class and created a new ` Comment2000Atom `
added import for Messages and set the status code of the PMS frame in HTTPServer . java to provide a warning message for the PMS
replaced ` InputEvent . SHIFT _ MASK ` with ` event . getModifiersEx ( ) ` in multiple Java files to improve code cl
increased node cycles from CYCLES _ 6 to CYCLES _ 3 in AMD64CountLeadingZerosNode and AMD
( chore ) camel - http : fix npe when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and ease of understanding for future developers
added a ` clearLog ( ) ` method to ` ErrorConsoleController ` and updated the ` ErrorConsoleViewModel ` to use it to
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the controller
updated method signatures to use ` LocaleHolder ` instead of ` ConsolePlayer ` and refactored ` getCaptions ` to use ` Set
added connection pooling functionality to multiple test classes to improve resource management and performance during testing
added support for opera driver in DefaultDriverSessions . java to enable support for Opera in the application
added error dialog for download failure in ManageJournalsPanel . java to improve user feedback during file download failures
added new product definitions for LIFX White - to - Warm and LIFX White - to - Warm in LifxProduct
added async ID handling in OverseerCollectionProcessor and updated related test cases in CollectionsAPIAsyncDistributedZkTest to ensure that the
updated PGSQL _ PK _ BYTES _ LIMIT and PGSQL _ PK _ SUFFIX constants in PostgresDatabase . java and PostgresDatabase
updated LogPanel to use getRepositoryModel ( ) . HEAD instead of repositoryModel ( ) . repositoryName to ensure the correct repository reference ID is used
fix a bug in the skeletoninterboneWire so that it do n ' t break the build .
added a ` browserDestroy ` method to ` AndroidImplementation ` and refactored the ` destroy ` method in ` AndroidImplementation ` to improve
added a wait for the active collection " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test waits for a
refactor loop structure in ScreenTerminal . java and update import statements in Tmux . java to improve readability and maintainability of the
updated soft reset action logic to include controller state checks to ensure proper handling of controller states during soft resets
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder in Request . java and RequestV2 . java to ensure proper initialization of parentFolder when conditions are
bug cs - 14284 : fix the bug that the persistent flag be not set correctly .
added a close method to the FileOutputStream in AndroidImplementation . java to ensure proper resource management and prevent potential memory leaks
added error handling for HTTP client exceptions in StandardGitHubRepository . java to improve robustness by handling 403 responses gracefully
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern from " 2 , 2 , 3 " to " 3 " in Version . java to improve accuracy of regex matching for versioning
updated ToolTipManager initialization and dismiss delay settings in ExtractionModelFrame . java to improve user experience by allowing more time for tooltip actions
refactor ` ProjectCommand ` to use ` targetGraphAndTargets ` instead of ` options . getArgumentsFormattedAsBuildTargets ( ) ` to
added a test for the timezone variable in TimeTest . java to ensure correct formatting of the timezone value in the time object
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4546 : fix
updated accuracy display in GpsLoggingService to include accuracy information to improve clarity of accuracy information displayed in the application
added a new method ` isFuturesEnabled ` to ` BinanceExchange ` , ` BinanceAccountService ` , and ` BinanceTrade
update adminaccountmanagementservlet to use accountdata instead of accountlist
added a call to setAcceptQueueSize in ThriftHttpCLIService to set the maximum worker thread size for improved performance
replaced ` getClass ( ) . getName ( ) ` with a constant for the ` watchServiceEnabled ` variable to improve code readability and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4545 : jmsfactory
replaced ` parseErrorHelper ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test cases in ` Test
updated the calculation of ` duration ` in ` GCInspector . java ` to check for zero for a fast collection to ensure that ` duration `
refactor javadoc handling in NodeWithJavadoc and add a test for empty Optional in NodeWithJavadocTest to improve code clarity and ensure correct
replaced ` reserveMemory ` method with ` readReservedMemory ` and modified ` readReservedMemory ` method in ` WhiteBox ` to improve
added calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java
hbase - 10650 hbase admin : use description instead of table name ( jesus camacho rodriguez
camel - 14263 : camel - cxf should use reflectionutil . invoke ( ) instead of reflectionutil . invoke ( )
refactor YamlChangeLogSerializer to use a list instead of a BufferedWriter for writing databaseChangeLog to improve code readability and maintainability by
updated print statements in SchemaPrinter . java to include newline characters to improve output formatting for better readability
replaced the usage of ChunkLoc with C . NOT _ IN _ PLOT for regenerating roads and updated the Schem
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment . java ` to ensure consistent access to the activity context
added a name parameter to the @ GeneratedValue annotation in multiple Java files to improve clarity and consistency in naming conventions
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method in ` TimeZone . java ` to simplify the method by eliminating
updated BZip2Codec and TestBZip2Codec to include position and remaining parameters to ensure correct handling of uncompressed data and improve memory allocation
do n ' t start the console if data param show
added a new constant VALUE _ TYPE _ EMPTY in Type . java and updated Value . java to handle empty values to improve code clarity and
refactor group equality checks in GroupManager . java to use ` equals ` for better readability to improve code readability and maintainability by
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved clarity to enhance maintainability and readability of the code
added a static method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetGraph ` to facilitate the
patch by jbellis ; review by brandonwilliams for cassandra - 113
added a new ` ArtifactVersion ` class and modified the ` ModMetadata ` class to be transient to ensure proper serialization and deserialization of the `
modified the logic for setting and deleting variables in NativeArray . java to ensure proper handling of previous and deleted entries based on the presence of previous
replace storageManager . saveNewFile with a parent file retrieval method in FileUploader . java to improve file management by ensuring the correct parent file
added a new file UTF8ReaderBug . java that implements a test for supplementary character parsing to ensure proper handling of supplementary characters in
added unit test to make it easy to run a unit test
update btcusd ticker paths from " dashbtc @ depth " to " ethbtc @ depth20 " in BinanceIntegration .
added resetAllocation ( ) method to SimpleParallelizer and Wrapper classes to ensure proper resource management and prevent potential memory leaks
removed the import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies by eliminating unnecessary dependencies
added synchronization around system properties and created a new class for testing to ensure thread safety when modifying system properties
refactor ModelUtils class for improved clarity to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class for improved clarity to enhance maintainability and readability of the code
updated width and height calculations for labels in Legend . java to ensure width and height are only added when there are no labels to improve layout
added test methods for delay and abort in multiple classes to enhance testing capabilities for the servicecomb invocation process
replaced ` get ` and ` getValues ` with ` getValues ` in ` MoreLikeThis . java ` to improve performance and readability by
refactor Omnibus . java to use BuildTargetSourcePath instead of CxxLink to improve code clarity and maintainability by
added a new flag to disable versioning in CommandDownloadLatest . java to enhance user experience by providing feedback when versioning is disabled
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a new ` numberOfFiles ` field in ` Media
updated command line argument handling in AidlStep . java and GenAidlTest . java to ensure correct formatting of command - line
do n ' t delete obligation if the edge be compare by the comparison
added a comment to the FakeHttpLayer class to indicate that the test is not ready for execution
refactor error handling in EmbeddedLeaderService to revoke leadership to improve clarity and functionality of leadership management
use reactivex . frompublisher instead of reactivex . concat ( # 6695 )
replaced ` systemResources . getConfiguration ( ) ` with ` configuration . newConfiguration ( ) ` in ` ParallelUniverse . java ` and
[ hotfix ] [ doc ] add description for jobmanageroptions
rename ` updateNoWidgetsView ` and ` updateRecyclerViewVisibility ` methods to ` updateRecyclerViewVisibility ` to improve clarity and functionality
added error handling for Woodstox input and output factories in XmlUtil . java and updated test assertions in MultiVersionXmlParserTest .
refactor test setup methods in AuditAliasCommandIntegrationTest . java to improve readability and maintainability of the test code
removed logging statements for header view height in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code
camel - 14284 - camel - cxf : disable test that do n ' t work
added error handling for periodical refresh in CachedStore . java to improve robustness by logging exceptions during the update operation
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use OptionalArgsConstructor for provider management to improve code clarity and ensure
added background fill checks to HSSFCellStyle , HSSFPalette , and HSSFCellStyle , and HSSFPalette
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and facilitate future updates
refactor distributedUpdateProcessor to use a new method ` shouldBufferUpdate ` and add a new test class ` DistributedUpdateProcessorTest ` to
added a condition to check if the motor is null and the stageNr is not null to ensure robustness by preventing potential null pointer exceptions
updated command descriptions and modified item retrieval logic in WorldEdit . java to improve clarity and functionality to enhance code readability and maintainability by
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
added final modifier to the InputProcessor variable in AndroidInput . java to ensure that the processor variable cannot be reassigned after initialization
added a listener to handle write failure in WritableKeyProcessor to ensure proper handling of end of streams during write operations
added " CUBE " to the MySQLDatabase class to support CUBE database functionality
added a try - catch block around the rm method in TestReplicationHandler . java to handle potential IOException during directory removal to improve robustness by
renamed ` ExperimentalRobolectricTestRunner ` and ` TestClassRunnerForParameters ` to ` TestRunnerForApiVersion `
refactor method calls in DefaultOkHttpClientFactoryTest to use HttpClient ' s methods instead of reflection to improve code readability and maintainability by
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the os variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1353 add a default parent split pane to the draw indexed string , so that it do n ' t need to be
added a parameter ` fromCli ` to the ` jailerMain ` method and modified the ` jailerMain ` method to include
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added the " pull _ unread " preference to the shared preferences in TalonPullNotificationService to track the number of unread pull notifications
added a check for the object kind in the IsNullNode class to ensure correct handling of null and non - null values in the parent object
updated parameters in Box2DTest , Pong , OrthographicCamera , OrthographicCamera , and OrthographicCamera classes to
refactor layout management for comments and comments in ViewPostDetailFragment . java to improve code readability and maintainability by reducing redundancy
change log level from trace to warn in CLIService . java to provide more detailed logging for the background operation aborted
added debug output for method instance name and flags in JimpleBodyBuilder . java to improve visibility into method instances and ensure proper handling of abstract
ggb - 1343 fix for ie10plus and ie10plus - > ie10plus
added a new parameter ` deviceId ` and modified the ` getNotificationUsers ` method to include the ` deviceId ` parameter to enhance user notification management
updated the baseUrl from " http : / / srtm . cgiar . org / srtm / v4.1 /
updated MotifFileChooserUI to remove property changes and added a new test class bug6520101 to improve file chooser functionality and
replaced the ` handle ` method with a ` boolean ` return value across multiple UI components to ensure consistent behavior of the ` handle ` method
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to return ` Optional < BuildRule > ` instead of ` fromNullable
added visibility logic to transportSpinner based on the makingShortcut flag to improve user interface responsiveness by hiding the transportSpinner based on shortcut
added null check for attributes _ field and created new classes T7043371 and T7073477A to ensure proper handling of
modified backPressed methods to return a boolean indicating success or failure to enhance user experience by preventing unintended actions when the back button is
added support for long view index data type in QueryServices and updated MetaDataClient to utilize it to enhance flexibility in handling long view index
corrected the spelling of " v " in SDRTrunk . java to ensure consistency in the output format
updated the path handling in PrivateKeyParserTests to ensure a clean path for the privateKey path to improve test reliability by ensuring the path is properly
removed the columnPosition parameter from the diffDropColumn method calls to simplify the method signature and improve code readability
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest testing framework
hbase - 11366 add a configuration option to disable column family check in importsv .
[ java ] rename logrecordingchannel to logsubscriptionid .
replaced calls to ` startActivity ` with ` startActivitySafely ` and added voice button visibility in ` Launcher . java ` to
added a condition to return early if there is a single JSON node in PoloniexStreamingService to ensure that only one JSON node is
refactor Procedure class for improved readability to enhance maintainability and facilitate future updates
updated resource bundle handling in Toolkit . java and Window . java to include system class loader to ensure proper loading of resource bundles for different locales
[ j2kt ] fix npe in kotlin transpilation
added checks for zero count in PerSegmentSingleValuedFaceting . java and improved counting logic in PerSegmentSingleValuedFaceting . java
replaced Optional . fromNullable with Objects . firstNonNull for authorList retrieval to improve code readability and leverage built - in null -
added OSGiTest class to verify the presence of " sun . misc " and " sun . misc " dependencies in the import - Package
refactor controller service enabling logic to use a new method ` isDependentServiceEnableable ` to improve code readability and maintainability by
hbase - 10613 hbase - 10615 do n ' t clear the buffer on failure
fix ( annotation ) : fix classcastexception in ctscanner . scan ( ifelement . getThenStatement ( ) )
added hasUserData method to SimpleFeatureImpl and corresponding test cases in SimpleFeatureImplTest to provide a way to check if user data is present
removed the ` HiveException ` declaration from several methods in ` DDLPlanUtils ` , ` ExplainTask ` , and ` ExplainTask
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the ` enableLogging ` method from the ` JavaCompiler ` class to streamline logging functionality by eliminating unnecessary handlers
added a new class ` InJavaSourceSet ` to handle Java source sets in JavaIsoVisitor to enhance code analysis capabilities for Java source sets
added a new variable ` fitsFilename ` and modified the resource loading logic in ` TestGDALParser . java ` to improve flexibility and
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter using a specified
removed the useExternalStorage flag from the conditional check in DirectUpload . java to simplify the code for better readability and maintainability
added a new constant INDEXER _ NO _ COMMIT and updated IndexerMapReduce and IndexerOutputFormat to utilize it to improve
cloudstack - 4892 : allow the disk offering id to be specify whilst create volume
updated content assignment in ToHtml . java and modified assertions in BaseTestCellComment . java for clarity to improve code readability and ensure
added null checks for ` amountToAdd ` and ` amountToSubtract ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new file ` Issue382 . java ` containing a new test class ` Issue382 . java ` to handle specific error types
replaced ` RuntimeException ` with ` Integer . signum ` in ` PositionUtils . java ` to simplify code and improve readability by elimin
added visibility management for the text holder in AttachmentAdapter to improve user experience by hiding the text when a condition is met
fix ( ctimport ) : fix classcastexception in astparentconsistencychecker and jdtimportbuilder
refactor the getProfile method to use a lambda expression to improve code readability and reduce boilerplate code
added a new class ` LiquidBlock ` and modified the ` LiquidBlock ` class to extend ` BucketPickup ` and
http : / / issues . apache . org / jira / browse / amq - 2902 - skip test if exception in log be
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to reflect the correct
rename ` existingObservation ` to ` distinctObservation ` in ` DistinctErrorLog . java ` to improve clarity and consistency in
updated system property values to include TestGroup class annotations in LuceneTestCase . java and RunListenerPrintReproduceInfo . java to
renamed the method ` createLogger ` to ` getOrCreateLogger ` and refactored logger creation logic in ` SQLEditorSupport
do n ' t throw exception in graalcontext . denyaccess ( class . class )
replaced direct calls to ` getRGB ` and ` setDataElements ` with ` getDataElements ` in ` PGraphics2 . java ` to
updated verifyAndAddTransactionalProperties method to include partition information to ensure that transaction properties are correctly associated with the specified partition
added a new variable ` mLastOverlaySroll ` and modified the ` onScrollChange ` logic in ` Workspace . java ` to improve
add unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator
replaced calls to ` shouldNotReachHere ( ) ` with ` shouldNotReachHere ( ) ` in multiple classes to improve clarity
added a new test method ` spyingOnAClassRetainsState ` to ` PartialMockingRetainsStateTest ` and created a
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing and deparsing functionality
added null check for ugi before calling doAs in SecurityUtil . java to improve robustness by handling potential IOException and RuntimeExceptions during action
replaced direct calls to ` alGetError ( ) ` with a direct call to ` alGetError ( ) ` in ` OpenAL
camel - 14263 : camel - spring - boot should use resolveparameter instead of reslovestringparameter
refactor calciteLiteral calculation in RexNodeConverter to improve precision and scale handling to enhance clarity and maintainability of the code
added null checks for vendor , device , and device properties in WebAuthnMultifactorDeviceProviderAction . java to avoid potential NullPointerExceptions
updated the assertion to use Long . toString ( now ) instead of String . toString ( ) in WalletTestAccount003 . java to ensure the
replaced AxialStage with RocketComponent in BasicFrame and DesignPanel classes to simplify component selection handling and improve code clarity
added long - running - time configuration to the Args class to allow dynamic configuration of the VM ' s long running time based on user settings
updated comparison logic in FindRefComparison and added a new class Ideas _ 2012 _ 05 _ 21 with a new class Ideas _ 2012
updated imports and method signatures in HttpServerProvider , FtpClientProvider , and ScriptEngineManager classes to use ` java . util . ServiceLoader
replaced ` toString ( ) ` with ` toPlainString ( ) ` in ` XSDecimalBinding . java ` and added a new
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
updated conditional check in MissingUniqueConstraintChangeGenerator to include equality check for comparison database to ensure correct handling of unique constraints based on database equality
refactor Android properties handling in IjProjectTemplateDataPreparer to streamline the process of adding Android properties to improve code readability and
updated assertions in DuplicateCookieTest and SessionRenewTest to use await - based assertions to improve test reliability by allowing more time for requests to
added user _ args and timestamp information to the ImmutableMap builder in ChromeTraceBuildListener . java and modified test cases in ChromeTraceBuildListenerTest
svm : fix thread safety issue on jdk 11 +
updated log message format in HepPlanner . java to improve clarity and consistency in logging output
added a new file TheRockMetaDataDemo . java to print exchange metadata details to facilitate easier debugging and analysis of exchange metadata
renamed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and added a new test for strictness
removed unnecessary unparseIdentifier call from columnNamesBuilder to simplify column name handling in ColumnStatsSemanticAnalyzer
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the context free template generation in ` BlockStatement
added a check for synthetic methods in the ` InstantiateStaticClass ` class and created a new ` Property3 ` class in ` Bug1282
updated the method call from ` projectFilesystem . getPathForRelativePath ` to ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to ensure
added pending rescues and conditions handling in IkStepDefinition . java to improve resource management and error handling in the IkStepDefinition
changed the ` equals ` and ` hashCode ` methods from ` final ` to ` final ` in multiple type classes to ensure proper comparison and hashing
added a new method ` getSyncLevel ` to the ` SyncLevel ` enum and modified the ` SyncLevel ` enum to include it to
[ java ] use try - with - resources instead of try - with - resources in controlcommandstest
added a condition to check if the slice state is not RECOVERY to ensure that the recovery logic only proceeds when the state is not
[ opencv ] fix typo in opencv _ core . java
added ` sdkPath ` field and modified ` makeProcessExecutorParams ` method to accept ` ExecutionContext ` instead of ` ProcessExecutorParams `
[ hotfix ] [ runtime ] remove unnecessary lock usage in blobcleanuptask
cloudstack - 4892 : fix typo in log message
renamed PasswordEncoder and StandardPasswordEncoder classes to improve clarity and consistency in naming conventions
added conversion logic for sort and union types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
updated the proxy retrieval method to use the class loader to ensure the proxy is retrieved from the correct class loader
refactor version handling to use a method for retrieving the Nightly build version to improve code readability and maintainability by centralizing version
added OracleDatabase compatibility checks and improved string replacement logic in LoggingExecutor and JdbcExecutor classes to ensure compatibility with OracleDatabase ' s handling of
added a constant for UNKNOWN _ VALUES _ ARE _ NSP in IsNullValueAnalysisFeatures . java to enable flexible handling of null values
fix test failure on window due to port change
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values in DrawAudio . java to
added a new configuration for multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
updated method signatures in MaxRectsPacker . java for consistency and clarity to improve code readability and maintainability
[ drools - 7 ] fix typo in javadocs
added help page functionality to the PMS class and updated content update logic in LooksFrame and LooksFrame classes to enhance user experience by
added a new interface ` GeocodeProviderFactory ` and ` Constants ` in the ` GeocodeProviderFactory ` and ` Constants ` classes to
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer classes to ensure proper usage of the CharArraySet class in
refactor exception handling in OptionTest , ResourceManagerImplTest , ResourceManagerImplTest , and ResourceManagerOptionsTest classes to improve clarity
[ py4j ] do n ' t delete object in memory command if the object id be not set
updated condition checks in SegmentsInfoRequestHandler and added new SolrInputDocument instances in CollectionsAPISolrJTest to improve code clarity and ensure
updated the calculation of numPredictiveAppCols based on device type to ensure accurate app column count based on device type
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related imports in ` DrillJoinRelBase ` ,
added a new blockbuildcraft class to handle build crafts more effectively
updated layout parameters for drag targets in DeviceProfile . java to improve layout flexibility and maintainability of drag - and - drop functionality
[ hotfix ] [ yahoo ] fix typo in yahoosession
added null checks for the client in HiveMetaStore and HiveMetaStoreClient to ensure proper resource management and avoid potential null pointer exceptions
updated getDisplayScript method to use Category . DISPLAY instead of Locale . US and added a test for the display script to ensure that the display script
updated variable references from ` CORE _ NAME _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in `
replaced ThreadLocalRandom with Random in StoreDirectTest . java to improve randomness handling in tests
added a method to check if the launcher is ready before backuping keys to ensure that backup operations are only performed when the launcher is ready
enhanced exception messages in Cell . java for consistency to improve readability and maintainability of the code
( chore ) camel - resilience4j : add unit test for resilience pooled route
rename ` mBodySpace ` to ` mBarSpace ` across multiple dataset classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class for improved readability to enhance maintainability and facilitate future updates
updated FileMessageHistoryTest to use JUnit ' s TemporaryFolder and modified assertions in FileMessageHistoryTest . java to improve test reliability
added debug logging statements to Grasscutter . java to facilitate troubleshooting during development and troublesh
changed the visibility of ` highlightCnstScrQuery ` and its methods from ` this ` to ` static ` in ` SpanScorer
added a check for the workspace ' s state before exiting overview mode in Launcher . java and modified the state check in Workspace . java to
refactor multiple array assertion classes to improve code organization to enhance maintainability and readability of the test suite
added a conditional check for caching in SnippetTemplate . java to ensure notifications are only notified when the template cache is enabled
added a new constant for SCOPE _ SOLR _ CORE and updated related classes to utilize it to improve scope management and facilit
updated the ` measurement ` method to include an ` primary key ` parameter in the ` DatabaseMetaDataTest ` class to ensure that the ` measurement
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in ` PantheonCommand . java ` to
refactored session creation logic in HttpSessionContextIntegrationFilter . java to improve clarity and maintainability to enhance code readability and maintainability
added a new file TestIfWithDeadRegion . java that implements a method to test string retrieval with a dead region to demonstrate
rename ` ` englishusd ' ' to ` ` english _ usd ' ' for clarity
replaced concurrent access test with a try - finally block to ensure thread safety during concurrent access tests
added a boolean field ` staticUi ` to control the visibility of the toast bar based on user preferences to enhance user experience by allowing togg
refactor the drop method in WindowsSecurity to use a try - finally block to ensure proper resource management and prevent memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and updated related methods in ` WhitelistLogoutHandler
updated message dialog messages in MEncoderVideo and PluginTab to use localized strings instead of hardcoded strings to improve code readability and maintainability
tika - 3357 -- add test for tika - tika - ooxml and vnd . openxmlformats - off
refactor Runner , FeaturePathFeatureSupplier , FeaturePathFeatureSupplier , and FeaturePathFeatureSupplier classes to improve logging functionality and enhance type safety
camel - 16462 : camel - documentation - fix xml output for camel - eip - documentation
add a method to remove version information from the endpoint in the migration coordinator to ensure that the version information is not retained when the endpoint is removed
added debug logging for notification and playback devices in DeviceConfiguration and PortAudioAuto classes to enhance debugging capabilities and improve code readability
added WebSocketConfig class and configurable max frame payload size in ShenyuConfig and updated WebSocketPluginConfiguration to accept a configurable maximum frame size
added testsuitelistener to cache validation to ensure all invoked methods are processed during tests to improve test reliability and performance during tests
added a check for empty content length before adding it to the document to ensure that content length is only added if it is not empty to avoid
replaced synchronized block with a private method solvingTerminated ( ) in DefaultSolverJob . java to improve code readability and maintainability by
refactor time series creation logic to handle PathAlreadyExistException to improve error handling and logging for non - existent time series creation
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide access to the ` result ` variable
changed access modifiers of methods in ShadowActivityManager , ShadowMeasuredParagraph , and ShadowTypeface classes from public to protected to allow subclasses to
cloudstack - 4892 : allow the caller to specify the vm ' s vm ' s vm ' s vm ' s vm ' s
updated HttpParser to set _ valueString to an empty string instead of null and updated test cases in HttpParserTest to ensure proper handling of HTTP
replaced the method ` completeInitialization ` with a static method ` completeInitialization ` in ` J9VMInternals ` and refactored
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` in ` ShadowEnvironment `
[ jbrules - 2334 ] fix mvel type coercion in jbrules / jbrules / jbrules
removed unnecessary import of FileUtils and improved code formatting in LoggingConfig . java and DbgPacker . java to enhance code clarity and
updated log message formatting in ActionNode . java to include the exception message to improve logging clarity by providing more context about the exception
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 456 :
refactor visibility logic for shared file in FileListListAdapter . java to improve readability and maintainability of the code
updated the ` HIVEOPTSORTDYNAMICPARTITION ` configuration to use ` HIVEOPTSORTDYNAMICPARTITION ` instead of `
refactor ExecuteStatementOperation , Operation , SQLOperation , and SQLOperation classes to improve code clarity and maintainability by
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use ` Arrays . asList ` instead of ` Lists . newArrayList
fix checkstyle issue in ogrdatastoretest . testname ( )
removed the ` onErrorInStep ` method from the ` StepListenerSupport ` class to simplify the code by eliminating unnecessary error handling
refactor Wallet class for improved clarity to enhance maintainability and readability of the code
camel - 14263 : camel - netty - http should use http instead of http in camel - netty
replaced ` System . out . println ` with ` log . info ` in ` TestNonBlockingAPI . java ` to improve logging consistency
added a check to ensure the database connection list is valid before proceeding to prevent potential index out - of - bounds errors
add a new class ` MethodWithSameNameAsEnclosingClass ` that implements a rule to check if a method name matches the enclosing class to
added a new ExtendedPlatformComponent class and updated ManagementFactory to handle platform managed objects to improve management capabilities and ensure proper management of platform managed objects
updated SQL string replacement logic in BasicQueryTest . java to ensure proper handling of special characters in SQL queries
updated URL from " ExtendedOrderReturn " to " Xchange / Bleutrade / xchange / bleutrade / dto / "
refactor TextEscapeUtils class for improved readability to enhance maintainability and clarity of the code
added a filter parameter to the FilteredQuery instantiation in AbstractSpatialFieldType . java and updated related tests in TestSolr4Spatial . java to
added progress display and posting functionality for email sending in GpsLoggingService and AutoEmailHelper to improve user feedback during email sending process
replaced ArrayList with HashSet for inlinks and refactored iterator logic in multiple classes to improve performance and maintainability of the code
added synchronization around the stopScan method in TradfriDiscoveryService to ensure thread safety when removing OLder results
updated the ` isClientFilterEnabled ` parameter and modified the ` testFilterForPartition ` method to include a ` filterAtServer ` parameter
added Abandoned status to the list of statuses in the TicketModel and TicketBasePage classes to enhance the workflow workflow management by introducing a
changed the default value of columnAliasPrefix from " c " to " c " in multiple platform classes to ensure consistency in naming conventions across
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve data handling efficiency and compatibility with the
check for non - native jvm on a 64 - bit system on a 64 - bit system
refactor key comparison logic in PdfCopy . java to improve clarity and correctness to enhance readability and maintainability of the code
added a new option ` DAEMON ` to the ` RESET _ ALARM ` and added a new ` DAEMON `
added a new file FlushIndexTask . java to implement the flushing functionality of the index writer in the benchmarking process
patch by jbellis ; review by jbellis for cassandra - 113
added ' SEASONS ' flag to the expected output conditions in MediaLibraryFolder . java to enhance functionality by allowing additional output types
added a new file ` LocalSocketAddress . java ` that implements a network interface to check if IPv6 is available to ensure that the socket is
updated grid size points in GridSizeMigrationTask . java to ensure consistency in grid size calculations
replaced direct calls to ` getName ( ) ` with ` getName ( ) ` in ` SerializerPojo . java ` to simplify code by
added READ _ ONLY flag and improved transaction handling in the Context class to ensure transaction integrity and prevent operations on read - only contexts
refactor LookAndFeelCommand class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation of lastRunEnd in BlockBoxing . java to use ceiling instead of floor to improve accuracy of run end calculations
updated assertions in GracefulStopTest to include EOFException and EofException types to enhance error handling by providing more specific exception types
refactor lock management in NetJavaImpl . java to improve thread safety to enhance code readability and maintainability by reducing unnecessary locking overhead
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
added a conditional check for account asset optimization in DynamicPropertiesStore . java to ensure proper handling of account asset optimization in the application
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to zero to disable garbage collection for improved performance
added error handling for invalid contract proto retrieval in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid protocol
deleted the ExceptionTypeChecking . java file to remove unused code to streamline the codebase
updated resource retrieval and error logging in HelpContent . java to use " en / " instead of " en / " to improve user experience by
added a new file ` ProcessorInfo . java ` for processor management to provide a way to determine the number of CPUS _ ALLOWED processors
added a stylesheet option to PrintingBugReporter for HTML output generation to allow users to specify a default stylesheet for HTML output generation
fix ( logback - system ) : use default logback location instead of optional
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to utilize ServiceComponentRecoveryChangedEvent for updating cluster data to improve code clarity and
updated SleuthTagPropagationAutoConfigurationTests to check for default configuration and added new test cases for tag propagation functionality to ensure that the handler
refactor the handling of SHARED and STATIC _ PIC cases in RustCompileUtils . java to improve clarity and maintainability of
added an ` MultiValueMap < String , String > ` parameter to the ` oauth2LoginLinks ` constructor and modified the ` oauth2Login
hbase - 25850 hfilereader should seek to the first key if it do n ' t exist ( jesus camach
hhh - 14263 - add ` ` always ' ' annotation to generationtimemillis ( )
bugfix : add unit test for layer norm with nan
replaced calls to ` showShareFile ( ) ` with ` getFileOperationsHelper ( ) . showShareFile ( ) ` across multiple activities
added a new test class LiquibaseUpdateMojoExecutionTest for testing Liquibase updates to ensure correct execution of Liqu
corrected the conversion of the " proxyType " string to lowercase to ensure consistent formatting of the proxy type for consistency
add mod _ minecraftforge . getdungeonlootTries ( ) to mod _ minecraftforge . java
refactor JdbcDatabaseSnapshot to improve table retrieval logic and enhance filtering logic based on database case sensitivity
added a custom border for a container in CSSBorderTest . java to enhance the visual appearance of the component in the UI
refactor RetryAutoConfiguration to include ConditionalOnClass annotation and introduce a new RetryableStatusCodeException class to enhance configuration flexibility and provide
changed the superclass constructor from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to align with the new layout requirements for better layout
changed the variable name from ` nanoTime ( ) ` to ` currentTimeMillis ( ) ` in ` PinotHelixTaskResourceManager . java `
added error handling for input parsing in ServiceResourceProvider . java to improve robustness by providing a clearer error message when parsing invalid Add Service
refactor conditional logic in IndexDatabase . java for improved readability to enhance code clarity and maintainability
[ giac ] fix arrayindexoutofboundsexception in cagiac
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should not be used in future development
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
simonstewart : fix test failure on slow ci server
renamed the method ` encodeInternal ` to ` encodePassword ` and updated its usage in ` Md5PasswordEncoder ` to improve cl
replaced direct calls to ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to simplify
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
corrected the spelling of " MAX _ VALUE " to " MAX _ VALUE " in SSTableMetadata . java to ensure the correct
set the default size of callparticipantpanel to 200 , 60 , 60 , and 60 .
added null and empty checks for replies in multiple classes to ensure replies are only retrieved if they are not empty to optimize performance by avoiding unnecessary
added ` equals ` and ` hashCode ` methods to ` HitbtcBalance ` class and updated ` HitbtcAdaptersTest `
updated column handling in SqlCodeGenerator and added new test cases in SqlParserTest to improve query accuracy and ensure correct handling of order by clauses
replace ` s ` with ` addrs . toString ( ) ` in ` RetriesExhaustedWithDetailsException . java ` to ensure the
[ netbeans - 4892 ] fix bug in editgcodefile . open ( )
updated import statements in JsonToGrpcApplicationTests . java to reflect the new version of the HttpClient class to ensure compatibility with the latest version
pipepowerwood : use min energy instead of max energy
added a check to delete the temporary output file before deleting it to ensure that the temporary output file is deleted before proceeding with further operations
added ` id ` parameter to ` BitstampWebSocketTransaction ` and updated test cases in ` BitstampStreamingMarketDataServiceTest ` to
added expiration checks for playback values in ReplayProcessor , ReplayProcessor , and ReplaySubject classes , and corresponding tests in ReplayProcessor
corrected the spelling of " Ed " to " Ed " in the expectedCitation string to ensure the test accurately reflects the
added new SQL SQL insert statements and updated video format handling in MediaTableFiles . java to improve code readability and maintainability by centralizing
g3d _ BLACK _ AXES and g3d _ BLACK _ AXES - SHOW _ DEFINITION _ FOR _
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when accessing component properties
hbase - 16462 add caching for meta scan when startrow be null
updated the init script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes for improved performance to enhance performance and maintainability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , AccessExecutionVertex , ArchivedExecutionVertex , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check for density in IOSGraphics . java to ensure density is set correctly based on the scale value
rename ` optional ` to ` vararg ` in ` Parameter . java ` to improve clarity and consistency in naming conventions
[ hotfix ] [ runtime ] add exception to regionstatestore . info ( )
refactor assertions in TestClusterUpgradeUtils to use a lambda expression to improve code readability and reduce boilerplate code
updated logging messages in AsyncHttpConnection and modified connection handling in AsyncHttpConnection and AsyncContextTest classes to improve logging clarity and enhance async
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` class to control the visibility of the arrow in the search functionality
added lock mode handling in Database . java and removed the test method in TestRowLocks . java to ensure proper locking behavior when using VStore
truffle : skip test on linux / amd64 only on linux
added checks for Integer and IntValue types in Scalars . java to ensure proper handling of integer and integer values in value retrieval
updated the validation logic in CreateTableStatement to check for empty and multiple PRIMARY KEY specifications to improve error handling by providing clearer error messages for
added conditional backgrounds based on LMP status in CellLayout , Hotseat , and Launcher classes to enhance user interface consistency across
added exception handling for isolate query for Flutter views in VMServiceManager . java to improve error handling and provide clearer feedback when a isolate
added new header writer methods for content type and frame options in HeadersConfigurer . java to enhance header configuration flexibility for better XML processing
refactor ObjectEnumerableAssert class for improved clarity to enhance maintainability and readability of the code
simonstewart : move the test class to the router
added a type parameter to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to ensure the test accurately reflects the
added path resolution for prebuilt libraries in PythonBinaryDescription and implemented a new test for package prebuilt libraries in TestDescription to ensure proper handling
added support for the " clientAuth " property in NetServerOptionsConverter and updated clientAuth initialization in HttpServerOptions to enhance flexibility in handling
updated directory paths in HiveConf . java and MetastoreConf . java to use user - specific system names instead of user - specific directories
refactor task view removal logic in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by
increased the timeout duration of the @ Test annotation in AmqpTransformerTest . java to allow more time for tests to complete before proceed
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary operations
renamed ` controller ` to ` flowController ` across multiple classes to improve clarity and consistency in variable naming
[ hotfix ] [ table - planner - blink ] fix exception in operatortreegenerator . getexchangesumnum ( )
added ClassLoaderHandler to module - info . java to enable dependency injection for the ClassLoaderHandler
updated the solve method to accept a planning problem instead of a working solution to improve clarity and functionality of the solution management in the application
added JsonIgnore annotation to ApplicationSettings . java to disable JSON serialization for the application settings
updated the null check for throwable in PlotListener . java to ensure that throwable is not null before proceeding with further operations
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and maintainability
fix autoworkbench not work when there be no stack in the crafting list
fix ( gl200 ) : fix npe when parse gl200 text
rename timeColumnName to incomingTimeColumnName in AvroRecordToPinotRowGenerator . java to improve clarity and consistency in naming conventions
added multiple calls to HttpMethed . waitToProduceOneBlock ( httpnode ) in HttpShieldTrc20Token004 .
ww - 4898 add initializable factory to the containercontainer . setexternalcontext ( ) method .
refactor TimerObservationHandler to use a wildcard import and streamline error tag creation to improve code readability and maintainability by reducing
changed the type of SYNC _ DELTA _ RATE from float to double and modified time calculations in AdaptiveFetchSchedule . java
[ te ] log deprecate unwrapped fragment expression in template
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing the attributes map
http : / / issues . apache . org / jira / browse / amq - 4892 - copy message in amq -
added new color constants for main and dark text in ColorExtractionAlgorithm . java and updated return statements in ColorExtractionAlgorithm . java to enhance color
add a check for accessibility of the data folder in sketchbuilder to ensure that the data folder is accessible before adding it to srcFolderPathList
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified the ` appendContent ` method to include a ` include
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify session management by eliminating unnecessary instantiation
added logging for reconnection completion and error in NettyStreamingService . java to improve debugging and error handling during reconnection attempts
replaced ` Factory ` with ` Proxy ` in multiple test classes to utilize ` Proxy ` instead of ` Factory ` to ensure compatibility with
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to use ` org . eclipse .
refactor SocketExceptions and ExceptionText to use InetAddress for address handling to improve clarity and maintainability of exception message formatting
added a check to check if the view directory is under the repository directory to ensure that the view directory is within the specified repository directory to prevent
added drag over and drop handling for the tab header area in JabRefFrame . java to enhance user interaction by allowing drag - and -
- xx : + UseCompressedOops : + UseCompressedPointers and - XX : + UseCompressedOops across multiple test files
removed error logging for invalid update log states in ACTIVE or REPLAYING to streamline the synchronization process by eliminating unnecessary error logging
deleted the ConnectionHook . java file to the functionality was deemed unnecessary or redundant
removed the ` waitForInSync ` flag from multiple test classes to streamline the synchronization process by eliminating unnecessary assertions
( chore ) camel - swagger : fix typo in test
updated ApexLanguageModule to use the current external version and added a method to check for namespace guarded access to ensure compatibility with the current
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
replaced instances of ` AggregateEngine ` with ` IoTDBThreadPoolFactory ` in ` AggregateEngine ` and ` OverflowQueryEngine ` to
updated WebSocketAsyncConnection constructor to use ByteBufferPool instead of StandardByteBufferPool to improve buffer management by utilizing the connector ' s buffer pool
added a scrollToPositionWithOffset method to the UploadActivity to scroll to the correct thumbnail position based on the index to ensure proper scrolling behavior
fix ( sql ) : fix wrong column alias in sql code generation
refactor LauncherAnimUtils and LauncherStateTransitionAnimation to use ValueAnimator for animation updates to improve animation responsiveness and maintainability
added a condition to disable the default user agent if the httpClient configuration is enabled to ensure that the default user agent is not used during HTTP requests
added pubsub bub functionality to FeedRefreshUpdater and ApplicationSettings classes to ensure proper handling of pubsub requests based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the method for better encapsulation
updated the method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a check for
added a new file ` DSpaceWebapp . java ` that implements the ` AbstractDSpaceWebapp ` class to provide a utility for
added null check for leftTableAlias in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure proper handling of column aliases
updated the identity key from " Trigger " to " Trigger " in JobGenerator . java to clarify the purpose of the trigger key for
updated logging messages in Wallet . java to improve clarity and consistency to enhance error handling and provide more informative logging for transaction broadcast failures
increase timeout in basicmaptest to avoid flaky test
updated variable names from ` rcfileOptimizedWriterEnabled ` to ` rcfileWriterValidate ` in ` HiveClientConfig ` and ` TestH
added TlsClientCertPolicy enum and updated client certificate handling in GitBlitServer to improve clarity and configurability of client certificate
replaced a thread with a debug log statement in KrakenFuturesStreamingService . java to streamline the subscription process by eliminating
added support for the Sec - WebSocket - Protocol header in the ProxyWebSocketHandler to enhance WebSocket handling by allowing customizable WebSocket protocol headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to facilitate troubleshooting and debugging of
updated string formatting for dimensions in HolidayEventFormatter . java to improve readability and maintain consistency in formatting
refactor ` FinalizePrivateFieldsTest ` and ` finalize ` methods in ` FinalizePrivateFieldsTest ` , ` InnerClass ` , and
refactor UnexpectedJobExecutionException class to improve code readability to enhance maintainability and facilitate future updates
8211031 : remove un - needed qualified export to java . desktop from java . base on macos
updated DrillSidewaysQuery and DrillSidewaysScorer to check for null DocsEnum before setting maxFreq and maxCost to
added a new variable ` GeoDegeneratePath . class ` to the ` classRegsitry ` map to facilitate the
removed preFill parameter from constructors and constructors across multiple pool classes to simplify constructor signatures and improve code clarity
added a check to ensure the taskbar state is updated only when the app is in the launcher to ensure the taskbar state is updated correctly
added null check for StyleInfo in CascadeDeleteVisitor . java to prevent potential NullPointerExceptions when comparing default styles
updated GuiUtil and StatusTab classes to use ` setSize ` and ` setMaxWidth ` methods in ` GuiUtil ` and ` Status
refactor icon retrieval logic in FileTreeViewHolder . java for improved clarity and consistency to enhance code readability and maintainability by
replaced ` isEqualTo ( ) ` with ` contains ( ) ` in ` ParallelUniverseTest . java ` to use ` contains (
added synchronization to the list of suite results in XMLReporter . java to ensure thread safety when accessing the results map
[ nativeworker ] add test for native probability function in nativeworker
added ShutdownThread . deregister ( this ) to ClientContainer . java to ensure proper resource cleanup and avoid potential memory leaks
hhh - 14836 - sybase - acs15 dialect should not drop temporary table after use
simonstewart : use htmlunit . htmlunit . colors instead of htmlunit . colors
refactor SolrCore , XMLWriter , DocIterator , and QueryParser classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code structure to enhance maintainability and readability of the code
updated the hexadecimal representation of reserveSize in VirtualAllocCommitUncommitRecommit . java to include 1024KB for test to improve clarity of
do n ' t refresh source info when adgroup count be 0
added a suppression warning for UndefinedEquals in MultimapSubject . java to improve code clarity and suppress warnings for UndefinedEquals
updated value retrieval from deg _ text to unit _ hz in WaveGeneratorActivity . java to improve clarity by using a more descriptive
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
simplified the initialization of the TreeMap in TestLabelOptions . java to improve code readability and maintainability
refactor vertex format handling in VertexLighterFlat to use a static final NORMAL _ 4F constant to improve code readability and maintainability
added span tagging for message visibility in multiple interceptor classes to enhance tracing capabilities and ensure proper resource management
refactor time zone handling in ScheduledTrigger to use TimeZone . getTimeZone ( ) instead of ZoneId to improve code clarity and maintainability by
added new classes AsyncBucket , AsyncBucket , and InMemoryExtension , and updated related classes to implement AsyncBucket and InMemoryExtension to enhance
refactor argument handling in resexhausted003 . java and update class directory retrieval in TestDescription . java to improve clarity and ensure
updated variable declarations in AbstractConnector . java and added exception handling in setHost method to improve code readability and handle potential interruptions
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
updated the ` getValidWebServerPort ` method to accept an ` Optional < WebServer > ` parameter and added a check for ` Optional <
updated variable names from ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added ` SolrHttpClientFactory . setHttpClient
added a check to ensure the thread allowlist is properly cleared before proceeding to avoid potential IllegalStateException when it is not utilized
updated the method call from ` setOutputSource ( ) ` to ` setItemWriter ( ) ` in ` TransformerWriterItemProcessorTests . java `
[ drools - 5767 ] do n ' t run findgaps if it ' s not COLLECT ( # 5769
added a new test method ` slidingWindowsCombine ` to the ` CombineTest ` class to verify the behavior of the ` SlidingWindows
added a conditional check for allAppsDirty before binding all apps in LauncherModel . java to ensure app binding only occurs when all apps are
added a check for the " Running " attribute in the ManagedFileWatcherReloadStrategyTest to ensure the test accurately verifies the server ' s
refactor import statements in the Solution class for improved readability to enhance code organization and maintainability
refactor the handling of the " useScreenMenuBar " property in AquaMenuBarUI . java to utilize LWC
glow : do n ' t set location if fall distance be 0
refactor query logic in SimpleJpaRepository to improve clarity and functionality to enhance code readability and maintainability by streamlining query
updated BlockUtil . java to include additional parameters for genesis block parameters to enhance blockchain configuration by including timestamp , parentHash , nonce , and number
use safepointinsertionphase instead of loopsafepointinsertionphase
hbase - 25836 fix npe in rsgroupinfomanagerimpl . listchildrenandwatchfornewchildren ( ) ( # 2
changed access modifiers of methods from package - private to public in ArtifactResolver . java to allow access to these methods from other packages
added thread stop and dispose methods in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline classes to ensure proper resource management and
added a check to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than or equal to 1
added state management for the " logingIn " state in LoginActivity to ensure proper handling of login state during configuration changes
added null checks and improved value addition logic in Pump . java and created a new test in PumpTest . java to ensure robust
changed access modifiers of methods in HttpShardHandlerFactory , LBHttpSolrServer , and LBHttpSolrServer classes from private to protected
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added a new DefaultAuthenticationServiceSelectionStrategy
added server and handler management in TestJNDI . java to enable better handling of server communications in the JNDI server
refactor code to improve readability and ensure proper validation of column expressions in SortedDynPartitionOptimizer . java to enhance code clarity and ensure
change return value from NioEventLoop to true in FileStreamChannel . java to ensure correct handling of NIOEventLoop instances
updated the calculation of newNumNulls in StatsUtils . java to ensure newNumNulls does not exceed newNumRows to improve clarity and
camel - 16462 : camel - jbang - add support for kamelet in camel - endpointdsl
replaced ` OkHttpOAuthConsumer ` with ` OpenStreetMapAuthorizationService ` and updated token handling in ` OSMJob . java `
simonstewart : use compilationresult instead of system . out
added clientAuth property and its getter / setter methods to IoTDBRestServiceConfig and updated related classes to allow configuration of client authentication based on
refactor injection logic in PropertyAndSetterInjection and add a new test class ChildWithSameParentFieldInjectionTest to improve code clarity and
updated BloomFilter64bit and BloomUriUniqFilter to use InitializingBean instead of String constants to improve code clarity and
updated getCursorAdapter method from false to true in HomeFragment . java and added shared preferences for refresh me in TweetPager . java to
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to improve the visual appearance of the scroller
replaced ` @ SuppressWarnings ( " null " ) ` with ` jdk . nashorn . internal . runtime . events . RuntimeEvent
added a new constant ` HOST _ SYS _ PREPPED ` and a method to retrieve the state of the host level parameters across multiple
added a new parameter ` logEveryUnknownFileFormat ` to the ` includeContexts ` method and modified the ` includeContexts ` method to include
added a loop to delete the first character from the location in DefaultServlet . java to ensure that the location does not contain a slash to prevent
added properties and scores handling in the StaticPipeline class to enable configuration of entity scores and scores based on specified properties
updated filename handling and modified Whoops initialization logic in Frame . java , Utils . java , and WhoopsModule . java to enhance
mondrian : fix npe in catalogrepository . getdatastorebyname ( ) .
refactor Assert class for improved clarity to enhance maintainability and readability of the code
rename ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and add a new test class ` MultiLineJaggedText
camel - 14284 : camel - test - make twoconsumeronsametopictest more robust .
removed IMeasurementSchema and MeasurementSchema from several methods in TsFileWriteAlignedWithTSRecord , TsFileWriteWithTSRecord , and Ts
updated the loop structure and added memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure
updated logging file name from " slf4j - log4j12 - . jar " to " slf4j - reload4
updated assertions in HueBridgeHandlerOSGiTest to use waitForAssert for CONFIGURATION _ ERROR to improve test reliability by ensuring the status
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` in multiple Java
added @ Ignore annotation to the KieContainerSolverFactoryTest class to temporarily disable tests related to DROOLS - 1276
added a constructor to retrieve Avro schema from a specified file in PullRequestMergedEventsStream to enhance functionality by allowing retrieval of Avro schema from a specified
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ doc ] fix typo in taskslot . java
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` ChannelFutureListener . CLOSE ` in ` NettyWebSocket . java `
added a try - catch block around the lock release in MoveTask . java to handle potential LockException during lock release to improve robustness by
replaced Properties loading with ResourceBundle for GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve flexibility and
replaced ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY in Transaction . java to improve code readability and maintainability by
refactor class loading logic in ClassGraphClassLoader . java to improve code readability and maintainability
added test setup and teardown methods for blob storage directory in JobManagerStartupTest . java to ensure proper handling of non - existent storage directories during
chore ( deps ) : upgrade gapic - generator - java to 2.0 . 0 ( # 489 )
added a Bundle instance to the FileDisplayActivity to enhance the functionality by allowing extras to be passed to the builder
removed unnecessary break statement in ParticleEmitter . java to improve code readability and maintainability
updated cluster name values from 4 to 1 in AmbariManagementControllerImplTest . java and AmbariManagementControllerTest . java to
updated the nullable column name from " SERVICE " to " SERVICE " in TransientSessionTicketImpl . java and added error handling in JpaTicket
updated Bug4823811 . java file to improve code quality and maintainability
replaced direct calls to ` getPathRelativizer ( ) ` with a call to ` getPathRelativizer ( ) ` to
updated the ` requestFullState ` method to accept a ` boolean ` parameter and modified its usage in ` DeconzBridgeHandler ` to
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling and encapsulate attribute retrieval logic to enhance code clarity and maintainability
corrected the spelling of " @ Inject " to " @ Inject " in RequestValidationService . java to improve code clarity and maintain
added a new key for the STATS _ LOGGER _ KEY in UiThreadHelper . java to enhance user experience by allowing the visibility of the
updated method calls in FileNodeProcessor , MManagerBasicTest , and MTreeTest classes to improve code clarity and ensure proper management of
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add unit test for slurpfile ( )
added @ FunctionalInterface annotation to multiple Java classes to indicate that these classes are intended to be functional interfaces for better usability and flexibility
refactor span retrieval logic in TraceWebFluxTests to use spanWithName method to improve code readability and maintainability by centralizing span
added support for ` DateWritable ` type in ` ETypeConverter ` , ` ArrayWritableObjectInspector ` , and ` HiveSchemaConverter `
replaced string literals with Patterns . COMMA _ SEPARATOR in StyleConverter . java to improve readability and maintainability of the code
ggb - 1187 add validation for double value in input dialog
refactor column count calculation logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance code readability and ensure accurate column count
refactor assertions in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability while ensuring correct
refactor Correspondence class for improved readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java for improved clarity and organization to enhance code readability and maintainability by redu
changed the default value of curPixVal from - 1 to 0xFF000000 in XRSolidSrcPict . java and added a new
replaced the ` containsType ` method with ` listSupertypes ` in the ` BiomeDictionary ` class to improve clarity and
rename ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to clarify the purpose of the variable
added imports for TestStabilityRule and modified the Ignore annotation in TaplTestsLauncher3 . java to improve test stability tracking for
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
added a check to ensure logFileSuffix is non - empty before processing to avoid potential errors when logFileSuffix is not provided
refactor PythonBuckConfig class to improve code organization to enhance maintainability and readability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManager ` and `
feat ( meiligao ) : fix meiligao / meiligao / meiligao / meilig
added a null check for the tile before returning the power value to avoid potential NullPointerException when the tile is null
added caching functionality to the PrefFragment and IOUtils classes to improve cache management and provide user feedback during cache deletion
replaced ` com . google . api . client . util ` with ` com . google . common . base ` in multiple Java files to
updated access control logic to throw ` NotAuthorizedException ` instead of returning false to improve error handling by providing a more specific exception type
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and modified the ` Subscription ` call calls to include the `
replaced the call to refreshListOfFilesFragment with a call to getFileByPath ( operation . getRemotePath ( ) ) in FileDisplayActivity
added logging for file matching in StreamUtil . java and improved exception handling in StreamUtil . java to enhance debugging capabilities by providing clearer
updated the ` create _ table ` method to accept ` CreateTableRequest ` instead of ` EnvironmentContext ` to streamline the table creation process
added an ` aborted ` flag and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure
updated indentation checks in multiple parser classes to include indentation checks to ensure proper handling of indentation levels in various parser classes
added new classes ` NetworkWifiStatusReceiver ` , ` ChangeWifiStatusEvent ` , and ` IncreaseWifiStatusEvent `
simplified the conditional check for control frames in FrameGenerator . java to improve code readability and maintainability
added visibility management for the collapse handle in the WidgetsBottomSheet to improve user interface by hiding the collapse handle feature
added new classes ` Issue475 ` , ` XSS ` , and ` XSS ` for escaping HTML and JavaScript scripts to enhance security
added a check to return early if the unitsToScroll is zero to optimize performance by avoiding unnecessary processing when the unitsToScroll is zero
updated condition in Manager . java to check for non - single contract list instead of greater than one to ensure correct handling of contract lists based on
added methods ` add ` and ` put ` to ` JsonArray ` , ` JsonObject ` , and ` JsonObject ` classes , and corresponding test cases
added hashCode ( ) method to IPPPrintService and created a new testRaceCond class to ensure consistent hashing behavior for PrintService instances
hhh - 15836 - db2zdialect should use getversion instead of getiversion ( )
added a condition to check if the platform fee is greater than zero before proceeding to ensure that the connection is only enabled when the platform fee
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
do n ' t queue secure input buffer if encryption be enable .
removed public access modifier from several constructors in AsynchronousAntn , BulkheadAntn , and MethodInvoker classes to simplify access modifiers and improve
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the Part class
refactor JSON handling logic in JsonBuildHelper and ParamsBuildHelper to improve clarity and functionality to enhance code readability and maintainability by
added ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` and ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the ` Abstract
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation behavior based on recents
updated the parameter ` mRS ` from ` true ` to ` true ` in ` AllAppsView . java ` to ensure the render script
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor code to use a new method ` isSystemBundle ` in multiple classes to improve code readability and maintainability by centralizing the
[ hotfix ] [ spark test ] fix npe in sparkbulkload
replaced ` 0.001 ` with ` LOW _ FALSE _ POSITIVE _ RATE ` in ` KeyChainGroupTest . java
refactor configuration selection logic in Overview . java for improved clarity and maintainability to enhance code readability and ensure default configurations are
cloudstack - 4892 : fix npe in agentmanagerimpl . findattache ( hostid )
added null check before converting values to data in DefaultRecordStore . java to avoid potential NullPointerExceptions when accessing values
cloudstack - 4892 : throw discoveryexception instead of return null
updated string concatenation for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity and consistency in error messages
updated ` BaseStubbing ` and ` ConsecutiveStubbingImpl ` constructors to accept a ` Object ` parameter to enhance flexibility by allowing
replaced the method ` getMethodLine ` with a static method ` stripMethodParams ` and added a method to strip method parameters to improve method
updated version names and code from " GreatVoyage - v4.2 . 1 - 56 - gaff237ef7
outputfilter : use set instead of list for allowed command
[ geot - 4892 ] symbolmblayer should use labelcacheitem . labelcacheitem . labelcacheitem
ggb - 1343 fix for ggb - 1343 ( fix for ggb - 1343 )
updated error messages in ValidationSuite . java for consistency and clarity to improve readability and maintain consistency in error messaging
added a new ` StartingWindowListener ` class to manage the transition manager in the ` QuickstepTransitionManager ` class to improve the handling of
added a comment inherited from MBeanServerConnection in MBeanServer . java to clarify the visibility of the documentation in MBeanServer . java
added error handling for PackageAccess and PackageDefinition in CheckPackageAccess . java to improve clarity and specificity of exception messages related to package
increased the timeout from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow more time for the executor service to complete
added a null check for loggingEnabled before setting it in XRLog . java and created a new test class for logging functionality to ensure logging
added ` @ JsonIgnore ( true ) ` annotation to the ` Schema ` class to exclude certain fields from JSON serialization
increased the timeout duration from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
refactor the train method and update score calculation logic in SimpleNaiveBayesClassifier . java to improve accuracy of classification calculations and enhance
renamed CheckHelperModule to CheckHelperControllerModule and added AuditLoggerModule in CheckDatabaseHelper . java to improve clarity and organization of
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure that tableIsTransactional is set correctly when it is not
[ java ] remove recordingwriter . writefragment ( ) from replaysessiontest . java .
[ java ] fix cea subtitles with negative time .
added an alias parameter to the data points group in KairosDatastoreTest . java and implemented the getAlias method in DatastoreMetricQueryImpl .
updated currency pairs from " BTC _ CAD " to " USD " in VaultOfSatoshiBaseService . java to reflect
hhh - 15836 - fix resource leak in test
updated import statements for KafkaSender from ` ZipkinKafkaSenderConfiguration ` to ` Zipkin2 . reporter . kafka . KafkaSender `
added integration tests for Gwt binary building in TestDataHelper . java and A . java to ensure that the Gwt binary build functionality works
updated loadingCauseLabel visibility logic in BrowserContentPane and improved error handling in SQLConsole to enhance user experience by ensuring loadingCauseLabel is
updated parameter names in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enable configuration of XML security properties for improved
added new classes ` InterfaceWithDefaultMethod0 ` , ` Decoy ` , and ` Instance ` , and ` InlineDefaultMethod1 ` to
updated SQL queries to include " GLOB ( * " ) " and " GLOB ( * " ) " in SqliteFieldPredicateView
change the visibility of getDMNProfiles method from private to protected in DMNAssemblerService . java to allow subclasses to access the
fixed - redissonscript . script _ load ( ) do n ' t call writeallasync ( )
do n ' t throw an exception if the field be an array or byte or boolean .
updated debug logging statements to use verbose logging instead of debug messages to improve logging detail for better debugging insights
[ java ] release the payload before send it to the target dispatcher .
added HTTP _ JETTY _ SERVER _ HANDLERS configuration and modified thread pool size calculation to use a configurable value to improve flexibility
replaced ` idsToShortcuts ` with ` removedShortcutInfos ` and refactored shortcut management in ` LauncherModel . java `
do n ' t cast string to string in defaulthttpclientbinderregistry
removed the switch statement for navigation up in DetailFragment . java to streamline the navigation process by eliminating unnecessary cases
added a condition to check if AndroidMarket is present before processing play services to ensure that services are only included when the Android Market is
refactor TableBlockParser to handle end - of - line headers correctly to ensure proper rendering of tables with end - of - line headers
added support for bridging headers in NewNativeTargetProjectMutator and updated ProjectGenerator and AbstractAppleBundleTargetBuilder to utilize it
refactor ` PotentiallyDeadCode ` to use a HashSet for unused methods and improve source path handling to enhance code clarity and maintainability
added ` findDiamondFinder ` option to handle diamond resolution in ` Attr . java ` and created new files ` T69
[ hotfix ] [ client ] use invocation . onstartsendrequest instead of invocation . getinvocationstagetrace ( ) . startsend
removed logging statement for registering cachemetrics in SolrCacheHolder . java to clean up the code and reduce unnecessary logging
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by catching specific AuthenticationException
removed the static variable ` zero ` from the float comparison in ` Test6796786 . java ` to simplify the comparison logic for better
added a local file for the " logback . dev . xml " configuration in JoobyMojo . java and Main . java
added a new file JaasEventCheck . java that implements JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to handle Jaas authentication
replaced direct calls to ` currentPage ` and ` qsb ` with ` viewsToAnimate ` in ` QuickstepTransitionManager . java
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest .
changed the type of fetchers from HashMap to Map in ShadowSystemServiceRegistry . java to improve type safety and clarity in the code
updated log names for leader information change events in DefaultLeaderElectionService . java to improve clarity and consistency in naming conventions
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add a timeout property to the agent . script . timeout to wait for the ready command to return
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in parameter naming
corrected the spelling of " SQLUpdate " from " SQLUpdateAUP " to " SQLUpdate " across multiple files to ensure consistency
replaced ` WeakHashMap ` with ` Collections . computeIfAbsent ` in ` SpecificData . java ` to improve thread safety when accessing the schema
refactor header addition logic in StaticServerHttpHeadersWriter to improve clarity and efficiency to ensure headers are only added when the same case is
added JUnit @ Ignore annotation to LatticeDemo . java to mark the test as ignored due to file availability relies on CMU to
added a directory creation for the storage directory in TestCollector . java to ensure the test directory is created before running tests
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to improve performance by reducing unnecessary data transfer
add syntax checker for single and single type
chore ( bazel ) : move protobuf package from google protobuf to hbase
added a test for ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` in ` BeanPopulatorTest . java ` and created a
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper error handling during remote name retrieval
updated exception handling in UserAccountManagerImpl , ClientFactory , and ConnectivityServiceImpl to use Apache Commons HTTP client instead of Own
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for using AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility by allowing
updated import statements and added hostname verification logic in Connection . java to enhance security by disabling endpoint identification based on system properties
modified the ` remove ` method in ` OHLCSeries ` and added a test for the ` remove ` method in ` OHLCSeriesTests
updated method call from ` invokeUrgent ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java
refactored joint cleanup logic in World . java to improve code readability and maintainability
fix nullpointerexception in searchfilter and serverchatroomquery
[ hotfix ] [ connector - test ] move sourcereadertestbase to sourceutils
removed null checks for document and parent folders in DocumentsStorageProvider . java to streamline error handling and improve code clarity
added new classes ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` to register hooks in ` Cucumber
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
updated the ` setExoOptions ` method to include a ` allowTs ` parameter to enhance flexibility in setting video playback options based on
added a method to remove a user identifier from the identifier collection to ensure proper handling of user identifiers in the decoding process
added a new instance of ` INVISIBLE ` to the ` Color ` class and modified the ` RailButtonShapes ` class to handle visibility
updated null handling logic in CountAggregationFunction . java and added new test cases in NullHandlingIntegrationTest . java to enhance query flexibility and
initialize deep variable to - 1 in InternalTransaction . java to ensure proper state management during transaction processing
added escape for XML name in StreamInitiation . java to ensure proper handling of special characters in the name string
updated file initialization to use a configurable work directory instead of a hardcoded value to improve flexibility by allowing dynamic configuration of the work directory
added support for deprecated rules in RuleSetFactory to ensure proper handling of deprecated rules in the rule configuration
simonstewart : use codebuffer . position ( ) instead of label .
added constants for minStamp and maxStamp in TimeRange . java and created a new test for range construction in TestTimeRangeTracker . java
refactor BitDocIdSet class for improved clarity to enhance maintainability and readability of the code
refactor the ` emitMetricsJson ` method to use a new ` emitMetricsJson ` method to improve code readability and maintainability by
refactor DetailFragment , DetailFragment , GalleryActivity , and GalleryActivity classes to improve code readability and maintainability by reducing redundancy
blocktank : do n ' t fill fluid if it ' s not remote
added support for RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to ensure proper handling of legacy build rules and improve path resolution
do n ' t process the dummy pep service if the packet type be get
added a null check for the runtime variable in the intrinsicGraph condition to ensure that runtime is not null before proceeding with operations
updated condition in MetricTrackingWindmillServerStub and StreamingDataflowWorker to check for active state before calling refreshActiveWork to ensure
pdfbox - 4892 : fix a suggest by valerybokov
added constructors to LwjglApplet and modified the constructor in LwjglApplet to initialize the LwjglAppletApplication to
updated the string representation of DockerHost in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig correctly to improve robustness by
refactor LdapAuthenticationHandler to use LDAPPasswordPolicyConfiguration instead of AccountState to streamline password policy handling and improve code clarity
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a private variable ` resolveFromAttribute ` and updated the ` resolver ` method in ` AbstractLdapAuthenticationProperties ` and ` LdapUtils `
refactor Readable class to improve code readability to enhance maintainability and facilitate future updates
pdfbox - 551 : use testsupport . WITH _ FONT instead of testsupport . WITH _ FONT
updated the icon resource from share _ menu _ item to ic _ menu _ share in CaptureActivity . java to improve consistency and clarity in
updated JRE _ IS _ MINIMUM _ JAVA8 and JRE _ IS _ MINIMUM _ JAVA9 to utilize StringTokenizer for version
updated the ` getNetworkTimeout ( ) ` logic to check for ` AbstractMethodError ` and ` NoSuchMethodError ` to ensure that ` getNetwork
refactor GenericContainer class for improved clarity to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredSet and filteredList in Enclosed . java to improve code clarity and maintainability by using a more
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to ensure proper method overriding and improve
added a new variable ` png ` , ` jpg ` , and ` gif ` to the ` ChartProvider ` class to enhance the functionality
fix a bug where the file path do n ' t exist in the home directory . ( # 3553 )
simplified the return statement in JavacParser and added a new ExtraSemiTest class for testing to improve code readability and
added date handling in JpaQueryCreator , JpaQueryCreator , User , and UserRepository classes to enhance user query capabilities to support additional
refactor Test15FloatJNIArgs class for improved clarity to enhance maintainability and readability of the test code
updated version strings in plugin . java to include additional version strings to enhance clarity and organization of version strings for better user experience
updated the substring calculation in MockProcessContext . java and added a test for fake encryption and decryption in TestMockProcessContext . java to ensure
[ java ] ensure not reentrant call during callback .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
increase timeout for sslbytesservertest to avoid flaky test
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
replaced ` toImmutable ( ) ` with ` toHistoricalIndexSegment ( ) ` in ` RealtimeIndexingCoordinator ` and updated the
added a null check for exportedData before writing to the output to avoid potential NullPointerExceptions when accessing viewCaptureDataSupplier
refactor the scrolling logic in RecyclerViewFastScroller to use getScrollThumbRadius to improve code readability and maintainability by centralizing
updated BuckWSServerPortUtils and added a check for tool window instantiation in BuckEventsConsumer and BuckToolWindowFactory to improve
added a condition to check if the platform is Windows before adding the ` preventSleep ` checkbox to ensure the ` preventSleep ` option is only
updated import statements from javax . servlet . servlet . servlet . servlet . servlet . servlet . http to jakarta . servlet . http
updated window width and height calculations in QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to adjust window dimensions based on
added ` setFullScreenExclusiveModeState ` method to multiple classes to manage the full - screen mode state across different windows to improve user experience
http : / / issues . apache . org / jira / browse / amq - 4892 - add unit test for pms
added credential management functionality to DagUtils and TezTask classes to enhance security by ensuring URI URIs are correctly added for MapWork and Reduce
camel - 16462 : camel - jbang - use map . entryentry ( ) instead of keyset ( ) . get ( )
removed leading and trailing whitespace from the current thread name in SessionState . java to ensure proper formatting of thread names by removing leading and trailing spaces
updated the error message in the GpsMainActivity to clarify the reason for adding descriptions to a file to improve user understanding of
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract class ` Unused ` and a test method ` testUnusedType ` to verify the behavior of the ` Unused `
updated variable names from " hbase _ master _ host " to " hbase _ master _ hosts " in StageUtils and DummyHeartbeatConstants
deleted the EventReaderDeserializer , EventWriterSerializer , and EventReaderDeserializer to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to improve flexibility
updated the maximum delegate lock period handling in multiple classes to ensure the maximum delegate lock period is greater than or equal to 10512000 to improve
change network rate type from int to Integer in NicTO and NicProfile classes , and add a null check in ConfigurationManagerImpl to
added initialization services and overridden the applySpecification method in CmcExchange to ensure proper initialization of services and enhance exchange specification handling
added a check for the presence of the " seed . node . ip . list " configuration in the GossipLocalNode class to ensure that the
set the hazelcast . client . tpc . enabled to false and add a test to verify the configuration of the Hazelcast client tpc
updated resource paths from 2.2 . 10 - 1 to 3.18 . 2 in multiple admin application classes to ensure compatibility with the latest
refactor MutableBigInteger and ModInvTime classes to improve mathematical operations and introduce a new ModInvTime class for modular
refactor key assignment logic in NamedObjectList . java for improved clarity to enhance readability and maintainability of the code
renamed the method ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple files to improve clarity and consistency in naming con
refactor AsyncCache and Cache classes for improved performance to enhance performance and maintainability of cache operations
added import for RCFileInputFormat and registered RCFileInputFormat in SerializationUtilities . java to enable handling of RCFile input format in the
added methods to retrieve Java types and categories in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host header parsing in Request . java and updated test cases in RequestTest . java to improve robustness and ensure proper
updated ShadowTimeZoneFinder and ShadowTimeZoneFinder to use ReflectionHelpers for TimeZoneFinder and TimeZoneFinder to improve compatibility with newer Android SDK versions and enhance
[ java ] remove unused method from standardop . addoutgoingvalues ( ) and forEachoutgoingvalue ( )
changed variable names and variables from ` String ` to ` private ` in ` SegmentCoreReaders . java ` and ` SegmentReader . java `
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateDao ` , and ` TransactionCommonService ` , and `
added a check to indicate that annotation definitions are not allowed in a Buck rule with required for source ABI to ensure compliance with Buck
updated NAME constants from " greekLowerCase " to " irishLowercase " across multiple filter factories to ensure consistency in naming conventions
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
move discoverysearchrequestprocessor from backward compatibility to discoverysearchrequestprocessor since dspace 4.0
added a list to remove " America / Dawson " and " America / WhiteHorse " and " Canada / Y
updated the instantiation of SurfaceSyncGroup to include a specific name for the TaskbarController to improve clarity and specificity of the sync group
datamongo - 2392 - fix bug in gridfs template ( # 2392 )
added tests for total size and bytesSoFar in ShadowDownloadManager and modified query methods in ShadowDownloadManager to improve test coverage and ensure correct handling
refactor character insertion logic in TextField . java to improve readability and maintainability of the code
added a check to return early if the object equals the target to optimize performance by avoiding unnecessary processing
refactor afterSetStatements method to use ListIterator for better handling of block states to improve code readability and maintainability by consolidating logic
added hashCode methods to IntervalXYDelegate , IntervalXYCollection , and XYSeriesCollectionTests to ensure consistent hashing behavior for instances of IntervalXYDelegate
add cleanup method to clientqueuedisruptiontest . testqueuedisruptiontest . cleanup ( ) .
refactor ` describeLogGroups ` method calls and add a new test class ` CachingAttributeRepositoryTests ` to improve code readability and
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java `
added block production logic in HttpTestZenToken002 , WalletTestZenToken007 , and WalletTestZenToken007
added checks for non - empty subtags before canonicalizing language tags in Locale and LanguageTag classes to ensure proper handling of empty subtags and
cloudstack - 4892 : allow kvm . ssh . to . agent to be configure by kvm . ssh . to . agent
[ hotfix ] [ runtime ] fix method visibility in SchedulerWhen . java
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline dependencies by eliminating unnecessary dependencies
added a condition to check if the input string contains a " - " to ensure that only valid input is processed in the filter
updated sort column labels in BrowserContentPane . java and adjusted UISettings . s1 to dmStats in DataBrowser . java and Desktop
updated the copyOf method call in Utils . java to include a maximum number of elements to optimize memory usage and improve performance
updated the method call from ` write ` to ` htmlEncodeButNotSpace ` in ` HtmlSessionInformationsReport . java ` to ensure
use smarthome / items / instead of smarthome / items /
simplified synchronization in FastHttpDateFormat . java to improve code readability and maintainability
added thread pool management for file move operations in Hive . java to improve resource management and error handling during file movement
added a new ` trigger ` method to ` WrapTimer ` and created a new ` TimerTask ` class with a period parameter to enhance timer
added support for LOCAL _ DATE and SQL _ TIME types in TypeUtils . java and created corresponding test cases in TypeUtilsTest . java to
added a verbose option to the error logging in AbstractStatusReporter to provide more detailed error reporting based on user - defined settings
added menu toggle functionality in Header . java and ItemControls . java to ensure the menu behaves correctly when the application is unbundled
s2s vpn : throw a InvalidParameterValueException if the connection can only be esitablished between the same account ' s VPN gateway and
updated error handling logic in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error management and ensure
added logging for encrypted PDF document creation and extraction errors in PDFBoxThumbnail , PDFFilter , and PDFBoxThumbnail to enhance error handling and provide
[ 3.0 ] fix npe in curatorzookeeperclient . close ( ) ( # 8043 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the ` deleteItem ` method to include a ` id ` parameter and modified the intent handling in ` HostsList . java ` to ensure
refactor Java6Assertions and Conditions classes for consistency to improve code readability and maintainability
changed the return type of the replaceOrderBulk method from Collection to String in BitmexTradeServiceRaw and BitmexTradeServiceRaw
replaced ` enterDefault ` method with ` enterIdentNode ` and added a new ` enterFunctionNode ` method in ` Lower ` to
added a new class ` J9ConstantHelper ` and modified the ` ObjectHash ` class to utilize it for retrieving long values to improve
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to test concurrent modification exceptions in Mockito to ensure proper invocation
remove roster from the session if it do n ' t exist .
updated method names from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc `
updated the comment in FunctionObjectCreator . java for clarity to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDesers is
remove system . setProperty ( " mockserver . logLevel " , " WARN " ) from Main . java to clean up the code and reduce unnecessary
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline the test suite for better readability and maintainability
removed the JettySolrRunner creation method from AbstractSolrMorphlineZkTestBase . java to streamline the code by eliminating
replaced ` scoreMap ` with ` termScoreMap ` in ` TestGrouping . java ` to improve clarity and specificity of score
updated bitwise operations in U64 . java to use negative values instead of bitwise checks to improve performance and correctness of data comparison
updated the headline style for the MainViewModel to enhance the visual appearance and usability of the application
updated notification logic in WallpaperColorInfo to include support for dark text to ensure notifications are notified only when dark text is supported
[ hotfix ] [ checkpointing ] fix flaky checkpointrequestdecider when there be too many pending queue
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS and KEEP _ ALIVE _ TIME _
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
added testRequirements . notWindows ( ) and TestRequirements . notArm ( ) in OpenCVImageFactoryTest . java to ensure compatibility with
fix for http : / / issues . apache . org / activemq / browse / amq - 2852 - add support for
fix ( python ) : do n ' t throw exception if the return message be a throwable .
added @ Repeatable annotation to Issue . java and implemented the value ( ) method in Issue . java to enhance the annotation ' s functionality for
updated user property name from " hcat _ user " to " webhcat - user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
updated socket connection logic to use a proxy host if it is null to improve flexibility in handling socket connections based on system properties
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
removed the import of ClassUtils from ReflectionUtils . java to simplify the code by eliminating unnecessary dependencies
replaced HashSet with LinkedHashSet in SslContextFactory . java to ensure predictable iteration order while maintaining insertion order
added a static variable ` systemResource ` and a check for the existence of ` Resources . systemResourceLocation ` in ` Resources . java `
[ java ] use a constant for plaintext segment in streamingaeaddecryptingchannel and streamingaeadseekabledecryptingchannel
added a test for invalid circuit breaker fallback URI in ServerMvcIntegrationTests . java to ensure proper exception handling for invalid fallback URIs in circuit
updated SSL connection handling in AppPage . java to use SSLConnectionSocketFactory for improved security and reliability to enhance security by enabling
replaced the call to resetBytesReadCounter ( ) with a call to set setSizeLimit ( 0x7FFFFFFF ) to ensure the
added getter and setter methods for the ` preferAES ` boolean in ` ProtectionPolicy ` and ` StandardProtectionPolicy ` classes to manage the
( chore ) camel - opentelemetry : use log level instead of system . out
add a test method to testLoadBalancerInstanceOperations in ElbIntegrationTest . java to ensure correct functionality of instance registration and health checks in the
renamed the method from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity
added error handling for invalid file creation in DiacriticTest . java to improve robustness by handling potential InvalidPathException during file creation
hhh - 14663 skip test that timeouts do n ' t work on oracle 11 when use a driver other than ojdbc6
updated file handling in TextureUnpacker to check for atlas files and improved exception handling to enhance robustness by ensuring the correct atlas file is
refactor AmbariManagementControllerImpl to use Lock for concurrent access to improve concurrency handling and ensure thread safety during service management operations
refactor FilterChainProxy , DefaultFilterInvocationSecurityMetadataSource , and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 ` and modified ` HiveQueryResultSet ` to
refactor InputStreamBodyGenerator to improve input stream handling and add new test cases in ChunkingTest to enhance code clarity and ensure proper functionality
added pre - deleted database handling in ClusterSchemaManager . java to ensure proper management of pre - deleted databases in the ConsensusManager
added a null check for " chunkedWriter " in the Http1xUpgradeToH2CHandler to ensure proper handling of chunked data during
updated item ID comparison in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to improve item deletion logic and enhance user experience
refactor CSSBank , RuleFinder , RuleParser , and RuleBank classes to implement a new interface for rule management to improve code organization and
added a try - catch block around the initialization process in JcaTlsCrypto . java to handle potential exceptions and throw a TlsFatalAlert
added new files ` TestMonomorphicObjectCall . java ` and ` Object . java ` , and implemented a new ` Object . java
replaced ` removeMetaDataSource ` method calls with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop .
hbase - 16462 fix the bug of defaultmemstore . shouldSeek ( scan , store , fam ) when the column family be
[ hotfix ] [ table - common ] remove unused variable in taskmanagerconfiguration
modified the ` AlterTimeSeriesStatement ` constructor to accept a boolean parameter and modified the ` isAlterView ` state in ` AlterTimeSeries
change regex pattern from " . * " to " . * " in Condition . java and add new MatchTextConditionTest . java to enhance
added error handling for retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due
refactor parameter handling in HttpClientIntroductionAdvice . java to improve code clarity and ensure non - null values are added to
( chore ) camel - jms : use char [ ] instead of string
cloudstack - 4892 : do n ' t invalidate a session if it ' s recursive
removed the ` toSortedListWithCounts ` and ` isUniformDistribution ` methods from the ` Counter ` class to simplify the equals method and
updated the initialize method to include the original SimulationStatus parameter to enhance the initialization process by associating it with the original SimulationStatus object
[ gr - 32936 ] fix memory leak in gettimenode ( )
updated the method call from ` tree ` to ` var ` in ` PrettyPrinter . java ` to improve clarity by using a more d
added a null check for ` indexToNode [ currSize ] ` in ` LRUDictionary . java ` to ensure that ` indexToNode [
refactor DatagramSocket and DatagramChannelImpl to use a dedicated checkFiltering method to improve code readability and maintainability by encapsulating
test : migrate testquerydns to junit 5 ( # 4523 )
added a new file NutchServerInfo . java containing methods for retrieving date , configuration , and running jobs to provide a structured way to
replaced ` TokenAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
added a timestamp option to the settings column and updated the timestamp handling in CqlInserter and ThriftInserter classes to allow users
refactor DSAParameterGenerator to use BigInteger . ONE instead of ONE for prime strength checks to improve clarity and correctness of prime strength
replaced floatToIntBits and doubleToLongBits methods with Float64Array and updated return statements in NumberUtils . java and Numbers . java
updated the mask check in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations for SQL exceptions
remove setZeroIfNotFound ( false ) from method signatures in ConsumerManageProcessor and RemoteBrokerOffsetStore to clean up code and improve readability
added a new method ` addTab ` and ` insertTab ` to the ` Tabs ` class and refactored the ` createTab
replaced ` size ( ) . toArray ( new Object [ 0 ] ) ` with ` size ( ) . toArray ( new Object [ 0
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
refactor condition checks in MavenVisitor . java to improve readability and maintainability to enhance code clarity and maintainability
updated test cases and variable names in ZookeeperDataChangedListenerTest . java for consistency and clarity to improve readability and maintainability of
added a new file FormatCheckingTest . java to verify error handling for illegal class names in Java process execution
updated the line number assignment logic in CodeGenerator . java to ensure proper initialization of the last line number for method execution
added a try - catch block to handle potential exceptions during property retrieval to improve robustness by preventing application crashes due to potential exceptions
added methods to create RadioButton with icon and command parameters in RadioButton . java to enhance user interface functionality by allowing toggling of buttons
updated cache size from 100000 to 10000 in LRUCache . java and MetadataQuerierByFileImpl . java to improve cache efficiency and
int - 1346 fix the capacity attribute to be public .
added null check for symbolicName before quoting it in OsgiManagementNameStrategy . java to avoid potential NullPointerExceptions when symbolicName is null
add support for the usemode system property in the mode contribution .
added error handling for adding shutdown hook and improved logging in IOManager and YARNSessionFIFOITCase to enhance robustness by logging
renamed ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to clarify the purpose of the
added a null check for notPropagatedHeaders in AbstractMessageProducingHandler and updated selectiveHeaderPropagation logic in AbstractReplyProducingHandler
refactor CompareMode class for improved clarity to enhance maintainability and readability of the code
added HasTests interface to RustBinaryDescription , RustLibraryDescription , and RustLibraryDescription classes to enhance functionality by allowing tests to
corrected the spelling of " ic _ recent _ image _ placeholder _ 120dp " to " ic _ recent _ image _ placeholder "
refactor OnExitTest class for improved clarity to enhance maintainability and readability of the test code
added onUserPreferenceChanged method to the TaskbarManager class to ensure the taskbar is refreshed when user preferences change
added functionality to handle IBM virtual machine dump in HeapDump . java to improve compatibility and functionality for handling IBM virtual machine dumps
camel - 14284 : camel - MyBatis should close the session in case of exception .
updated driver name from FIREFOX to IE and added wdSwitchToWindow method in ExportedWebDriverFunctions to enhance compatibility with IE
updated trigger patterns in IteratorToFor . java for consistency and clarity to improve code readability and maintainability
set the application state to STATE _ UNAVAILABLE in JmxApplicationProvider . java to ensure the application correctly reflects the application ' s state
refactor position and offset calculations in ByteBufferAs , Heap , and StringCharBuffer classes to improve readability and maintainability of the code
replaced ` toUri ( ) ` with ` toUri ( ) . toString ( ) ` in ` ConditionalResolverMergeFiles . java `
updated array deletion logic in NativeArray and added setEmpty methods in ObjectArrayData , ArrayFilter , and DeletedRangeArrayData classes to improve
changed enum visibility from package - private to public for Protocol , Transport , and Transport in VirtualAuthenticatorOptions . java to allow external access to these
added a Document instance to the TestMultiPhraseQuery class and modified the assertions in TestMultiPhraseQuery . java to ensure compatibility with the latest
updated the ` assignTickets ` method to use ` getPaymentMethod ( ) ` instead of ` false ` in ` ReservationController . java `
added a ` _ onTimeoutThread ` field and modified the timeout handling logic in ` HttpChannelState . java ` to ensure thread safety during
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve logging granularity and enhance
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
updated the read method to conditionally use LOCAL _ QUORUM instead of LOCAL _ QUORUM based on the consistencyForPaxos
added support for ` Home ` model in ` HeosDiscoveryParticipant . java ` and updated ` HeosPlayerHandler . java ` to handle
added a new ` Wait ` class and updated ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDeParser ` classes to
refactor attribute handling in Neo4j to use AttributeController for setting node and edge data to improve code clarity and maintainability by
added a null check for ` from ` and ` serverName ` in the ` SessionManager ` class to ensure that both ` from ` and `
nifi - 4892 - remove rocksdb dependency from rocksdb module
updated the method to retrieve the " IS _ GRANTABLE " value from the results object to improve flexibility by allowing dynamic retrieval of the
added logging for asynchronous execution and modified URL validation logic to ensure URLs start with " javascript : " before proceeding to improve debugging capabilities and prevent
camel - 15836 - camel - cxf : fix test failure on macos
hbase - 22387 loadtesttool : do n ' t modify column if the column descriptor be null
added Disposable interface to Texture class to enable proper resource management and prevent memory leaks
updated WebappRegistrationCustomizerImpl and OSGiAppProvider to utilize WebBundleDeployerHelper instead of WebAppRegistrationHelper to
check goquorum genesis file if it be not use on mainnet
replaced IOException with Throwable in HttpInput . java to improve error handling and provide more informative error messages
added a condition to skip the " JP " country in LocaleTest . java to ensure the test correctly handles cases where the change in era
updated API operation annotations to use HostResponse . HostResponseWrapper instead of HostResponse . Wrapper to improve clarity and consistency in API documentation
updated equality checks in FilteredQuery . java to include getBoost ( ) and modified hash code calculation in FilteredQuery . java to
removed unnecessary whitespace in FileMenuFilter constructor to improve code readability and maintain consistency
ggb - 1343 add support for geogebradebug parameter in webui
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
added a check for empty entities before creating an ItemTossEvent to avoid potential NullPointerException when accessing entity data
renamed ` KeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` across multiple files to improve clarity and consistency in naming con
replaced ` Range ` with ` AbstractBounds ` in ` CompactionsTest . java ` and updated imports in ` CompactionsTest . java
added null check for the ' type ' attribute in MiniAapt . java and created a test for invalid item resources in MiniAaptTest
added SPEL expression parsing functionality to OperatorJudgeFactory and added SpELJudge functionality to enhance the Judge functionality for better expression validation
[ hotfix ] [ core ] fix checkstyle violation in localexecutionplanner
bugfix # 23211 , use lookup . getdefault ( ) instead of service . getdefault ( )
added import statement for assertEquals in ConscryptTest . java to improve code clarity and maintainability
removed unnecessary logging for attribute lookup failures in AttributeResolution9 . java to streamline code and improve readability by eliminating unnecessary logging
updated the source and target options from " 1.5 " to " 6 " in the fullOptions list to ensure compatibility with the latest source
changed access modifier of ` extractMetadataColumns ` method from private to public and added support for ` MetadataOnlyProjectionRewriter ` in ` Push
added imports and modified sorting of localized names in AboutActivity to ensure consistent display of localized names in the UI
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting the shared preferences in HomeFragment . java to ensure proper refresh behavior based on user settings
updated exception handling in AuditConfiguration to include the exception parameter to improve error reporting for better debugging
[ hotfix ] [ test ] fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic types in SchemaLoader and DynamicCompositeTypeTest to use generics to enhance type safety and improve code clarity
added a new method ` supportsTransport ` to the ` GitClientApplication ` class and modified the ` RepositoryUrlPanel ` class to handle transport
added support for long press navigation and logging in multiple input consumer classes to enhance user experience by providing clearer identification of input consumers
added null check for mavenMetadata and modified version comparison logic in ChangeParentPom . java to improve robustness by handling cases where mavenMetadata
added a check for " Large Page Support : ( \ \ w * ) " in TestLargePageUseForHeap . java to ensure
cloud _ usage : skip migration if the db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test to fail on window
added a new file ` TestObjectStreamClass . java ` and created a new test class ` ObjectStreamClass . java ` to implement and
refactor null check for data center info in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability
change log level from error to warn in OpenTracingTracer . java to improve log severity for tracing data capture failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator instances
modified the handling of the ` doquote ` variable and added new test cases in ` Test . java ` to improve clarity and correctness
added a check for resource existence in ClusterControllerImpl and a corresponding test in ClusterControllerImplTest to ensure that the requested resource does not exist
refactor AccepttoApiUtils to handle null responses more gracefully to improve error handling and provide clearer logging for API response extraction
updated buffer allocation logic in VertexBufferObject . java to ensure compatibility with Android versions below 5 and above
refactor SybaseASADatabase class for improved clarity to enhance maintainability and readability of the code
added a forceProjection flag to the HashJoinInfo class and updated related methods to include a forceProjection parameter to enhance flexibility in handling projection
added a method to retrieve the string distance in SpellChecker . java to provide access to the string distance for better functionality
added flags _ ONE _ SHOT , FLAG _ MUTABLE , FLAG _ IMMUTABLE , and createMutablePendingIntent methods to
refactor read column ID handling in HiveFileFormatUtils and HiveInputFormat classes to improve code readability and maintainability by centralizing read
replaced ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added DisplayTemporaryToast ( ) and DisplayTemporaryToast ( ) methods in SavedExperiments . java to enhance user feedback by
added a version check to ServiceInfo and a corresponding test in ServiceModuleTest to ensure that the service version is correctly set when it is null
added a new test class ` RawSerializationTest ` to validate JSON serialization of collections of primitive and parameterized objects to ensure correctness of JSON serialization
simonstewart : use sslcertgenerator instead of seleniumserver
refactor the iteration over replies in ExpansionViewHelper to use a loop to improve readability and maintainability of the code
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access to
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the functionality of the `
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future modifications
added unit tests for different array sizes in EasyRandomTest . java and refactored seed parameter tests in SeedParameterTests . java to improve
added exception handling to RebootAnswer , StopAnswer , and modified connection initialization in CitrixResourceBase to improve error handling and provide clearer
added a thread - local variable ` tryWriteAgain ` and modified the execution logic in ` SslConnection . java ` to ensure proper handling of
refactor null checks and introduce a new method ` ancestorsVisible ( ) ` in ` Actor . java ` to improve code readability and
added logging for rolling - update failures in RollingUpdateOpFactory . java to improve traceability and debugging of deployment failures
[ hotfix ] [ table - common ] add @ nullable annotation to sinkfunctionprovider
added error handling for BadCredentialsException in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve user authentication failure handling
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and facilitate future development
replaced ` OldLuceneQParserPlugin . NAME ` with ` QParserPlugin . DEFAULT _ QTYPE ` in multiple files to ensure consistent
added Locale . US to the SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent date formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and created a new test class ` LocalsCompletionTest _ template ` to
updated the ` idToken ` parameter from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java
added transaction methods to DatabaseAdapter , DatabaseAdapter , GncXmlHandler , and GNCXmlHandler classes to improve transaction management and ensure proper
replaced byte array reading with ByteArrayOutputStream for better performance to optimize memory usage and improve performance
added multiple @ Override annotations and refactored exception message handling in MessagingTemplate . java to improve code clarity and ensure proper handling of client
added a method ` isAcceptable ` to check if a source file is an instance of ` J . CompilationUnit ` to ensure compatibility with
added maximum buffered documents and RAM buffer size settings to TestIndexWriterMergePolicy to optimize memory usage for improved performance
clear the witness list and add a new test for updating witnesses in ManagerTest . java and ManagerTest . java to ensure that witnesses
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing potential NoSuchElementException during iteration
[ hotfix ] [ runtime ] remove dependency on apache log4j
added reindex functionality and improved authentication metrics in BasicAuthIntegrationTest and DaemonStream classes to enhance the reliability of authentication metrics and ensure proper
replaced HashMap with LinkedHashMap in DependencyUtil . java to ensure predictable iteration order of nodes
added error handling for internal errors in JerseySupport and updated module - info and module - info files to improve error reporting and provide
refactor header validation logic in Http2TestBase . java to improve code readability and maintainability
added key handling for " IntegerCache . high " , " IntegerCache . high " , " PageAlignDirectMemory " , and "
updated method names from ` String ` to ` CharSequence ` in ` StringSubject ` and added new test cases in ` StringTest ` to enhance
added new JVM counterTime and eventWriter methods to CheckGraalIntrinsics . java to enhance the functionality of the GraalIntrins
rename ` IntUtilsTest ` to ` PrimUtilsTest ` in ` IntUtilsTest . java ` to clarify the purpose of
updated DataSource initialization in PersistenceManagerProvider . java to use a variable for connection factory to improve code clarity and maintainability by using a variable
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to improve
replaced ByteArrayInputStream with StringReader in XmlParser and YamlParser classes to improve code readability and ensure proper resource management
added support for handling COALESCE SQL functions in RexNodeConverter and SqlFunctionConverter to enhance functionality for processing coalesce expressions in
camel - 14263 : camel - hl7 - fix unit test for hlv7dataformat
updated JavassistProxyFactoryFactory to use context class loader for proxy factory generation to ensure proper resource management and prevent potential memory leaks
refactor DefaultDateTypeAdapter constructor to accept a final parameter and ensure thread safety to improve thread safety and prevent potential null pointer exceptions
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
replaced the boolean variable ` newQuery ` with ` setURI ` in ` HttpClientRequestBase ` and updated query handling in ` HttpClientRequestBase
added a filterOldEntries ( ) method to filter old entries based on the number of entries to ensure that old entries do not exceed the defined
change log level from fatal to warn in FSHLog . java to improve log severity for better error handling
replaced the ` getValues ` and ` iterator ` methods with a ` NodeMapIterable ` class and updated the implementation of ` NodeMapIterable
updated import statements and refactored predicate initialization in DiscoveryClientRouteDefinitionLocator . java to improve code clarity and maintainability by aligning
added a null check for fields before adding Aggregates to avoid adding operations to the operations list to avoid potential NullPointerExceptions when fields are empty
do n ' t add admin list if there be no admin
replaced MultiFields with SolrIndexSearcher in multiple classes to utilize getSlowAtomicReader ( ) for term retrieval to improve performance and
replaced ` toString ( ) ` method with ` ObjectHelper . className ( bean ) ` in ` ConstantBeanHolder . java ` to improve
simplified the logic for building primitive types in GroovyParserVisitor . java to improve code readability and maintainability by eliminating unnecessary
svm : remove unnecessary hash code calculation for java . lang . string
increased the timeout value from 100ms to 300ms in SedaBlockWhenFullTest . java to allow more time for the
added a new file ` package - info . java ` for the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure readLen does not exceed buffer size to improve robustness by preventing
replaced ` common . lang . Nullable ` with ` core . lang . Nullable ` in ` HttpClientTimingInstrumentationVerificationTests . java `
updated COLUMN _ COMPONENT and COLUMN _ USER query to include userSerial in IconDB to enhance data retrieval by including user information for better user
http : / / issues . apache . org / jira / browse / amq - 4892 - fix a bug in defaultmq
added a boolean parameter ` isClassfileOnly ` and modified the ` addWhitelistedResource ` method in ` ClasspathElement ` , ` Class
cloudstack - 410to420 : add foreign key fix for baremetal _ dhcp _ devices
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to streamline the codebase by eliminating unnecessary
added onTearDown method to handle offload buffer emptying when the audio sink is stopped to ensure proper handling of offload buffer empty
refactor upstream task handling in UpstreamCacheManager to use a scheduled thread pool for improved performance to enhance thread management and control over upstream delay
refactor StreamType class for improved readability to enhance maintainability and clarity of the code
updated assertion message in Recording . java to include the expected output to improve clarity of the assertion failure message for better debugging
updated FilestorePage and RootPage to use RequiresAdminRole instead of GitBlitWebSession to enhance security by restricting access to
disable camel - elasticsearch test that fail on slow ci server
added a check for ` Lifecycle ` and ` Class < ? > ` in the ` accept ` method in ` ExpressionControlBusFactoryBean `
replaced ` leftButtonAltcoin ` and ` rightButtonFiat ` with ` buyAltcoin ` and ` sell
camel - 14263 : camel - restlet - do n ' t allow route with invalid url . thanks to michael
refactor ` createNextBlock ` methods to use ` @ Nullable ` instead of ` final ` for consistency to improve code readability and maintain
updated BTreeMapJava and JSR166Test classes to implement NotSerializableException and added serialBytes2 method to improve serialization handling and enhance
added a null check for the cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions during startup execution
refactor conditional statements in Main . java for clarity to improve readability and maintainability of the code
updated the method call from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to ensure the correct file
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a check for triggeredFromAltTab in OverviewCommandHelper . java to ensure proper resource management and prevent potential memory leaks
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to utilize BottomSheetDialog and improve UI responsiveness to enhance
added UTF - 8 encoding to the body charset parsing in RestAdapter and MimeUtilTest classes to ensure proper handling of special characters in content types
added a call to super . deinitialize ( ) in TextField . java to ensure proper initialization of the TextField instance
replaced the ` TestUtilities ` class with ` TestUtilities . serialised ` in ` LogFormatTest . java ` to streamline the
updated parsing logic in LogicalGenerator and added a new test for GroupByFill7 in GroupByFillDataSet and PhysicalPlanTest classes to improve
added negative array size validation and improved argument handling in JAXWSExceptionBase . java to enhance error handling for negative array sizes and ensure proper
test : migrate ctunresolvedimporttest to junit 5 ( # 4438 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to improve the responsiveness of the
[ hotfix ] [ test ] fix flaky test in miniclusteritcase
added a title field and its getter and setter methods in ShadowActivity and ShadowAlertDialog , and ShadowDialog classes to enhance functionality by allowing title
updated POIFSFileSystem to use POILogger instead of LogFactory to improve logging consistency and align with the new package structure
refactor alarm handling in InstarHandler to improve clarity and consistency to enhance code readability and maintainability while ensuring proper handling of alarm
increment remove operation count for local map statistic ( # 11818 )
updated enum declaration for PARAM and HEADER in Option . java and added a switch statement in Response . java to improve code readability and maintainability
added a method to find the javac location in CheckResourceKeys . java to improve the handling of Java files by ensuring the correct Java file
fix : add project name to create additional settings ( # 1193 )
added a new test file ` DeprecatedStubbingTest . java ` for testing deprecated stubbing functionality to ensure correct behavior of stubbing behavior and
updated import statement from org . eclipse . jetty . server . DispatcherType to org . eclipse . jetty . servlet . Dispatcher
grammaticalstructuretest : add additional test case for learned and learned model
use bouncycastle . jsse . fse . fips . allowRSAkeyexchange property to allow rsa key exchange
replaced ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent potential memory leaks
added ` oAuthFactory ` and ` oAuthServiceHandleId ` fields and methods to ` PubSubAPI ` , ` SDMAPI ` , and
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHAZED in TaskbarEduView . java to
added UpdateRegionLocationPlan to configPhysicalPlan and updated logging statements in ProcedureManager , ProcedureManager , and RegionMigrateProcedure to enhance functionality and
added a new file FileDialogLeakTest . java to test the behavior of FileDialog ' s finalize method to ensure proper resource management and
hbase - 25819 add miss import for testopentableincoprocessor
[ gr - 21744 ] fix uninterruptible annotation in trufflefeature . java
[ flink - 20663 ] [ protobuf ] remove unnecessary split method parameter from protobuf data processing
added a null check for the disi variable in DrillSidewaysScorer . java to ensure that the disi variable is not null
refactor MediaSource and FakeMediaSource to use a synchronized handler for source information refreshing to improve synchronization and ensure proper handling of manifest updates
added support for the JVM version in Constants . java and updated the conditional check in Helper . java to ensure compatibility with newer Java versions and improve
[ hotfix ] [ test ] fix typo in filereportertest
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to ensure the method
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing back navigation in the action bar
updated PROTOCOL _ VERSION from 5 to 6 and added user retrieval logic in RpcServlet and RpcUtils classes to enhance security by restricting access to
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to ensure compatibility with different OS architectures
updated the method call from ` startClass ` to ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code clarity
fix bug in dexbody . getlocals ( ) and add local for parameter register number .
replaced calls to ` getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java ` to ensure
[ drools - 6892 ] fix ` ` metal ' ' look and feel in commonapp .
updated the version string replacement in AppPage . java to ensure proper formatting of version strings in the application
refactor animation listener handling in LauncherAppTransitionManagerImpl . java for improved clarity and consistency to enhance code readability and maintain
updated the error message in AddressFormatException from " base58 " to " version " in DumpedPrivateKey . java to improve clarity of error
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` to ensure the
updated milestoneParameters initialization in TicketPage . java to handle open and repository parameters based on the milestone ' s state to improve clarity and functionality
updated the battery value from 640 to 80 in PipeItemsWood . java to improve the system ' s performance by reducing the
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` as a parameter to enhance cluster management by
changed the ` downgradeAllowed ` variable from ` downgradeAllowed ` to ` true ` in ` UpgradePack ` and added a new test
updated XML parsing methods to use NameType . ELEMENTSTART and ATTRIBUTENAME instead of ATTRIBUTE to ensure proper handling of attribute names in XML
added an EMULATE _ SYSTEM _ LOADLIBRARY configuration and refactored library loading logic in Library . java to improve library loading behavior
replaced ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ` in ` AppsCustomizePagedView . java `
updated file handling in DefaultPlatformManager and FatJarStarter classes to ensure proper resource management and ensure the directory exists before writing to the
updated method signatures and assertions in TestSecretKeyCredentialHandler . java for clarity and consistency to improve readability and maintainability of the test code
camel - 16462 : camel - route - builder should use springcontextaware instead of applicationcontextaware
[ hotfix ] [ doc ] fix typo in metricoptions
hbase - 25836 fix testfulllogreconstruction . testfulllogreconstruction . testfulllogreconstruction .
added a ` reuseAddress ` property to ` DatagramSocketOptions ` to allow configuration of the reuse address for DatagramSocket to enhance flex
fix ( server ) : fix server shutdown message
deleted the Locatable interface from the internal package to remove obsolete code to streamline the codebase
updated error messages in VersionInfo . java to include searchable and retrievable fields to improve clarity and accuracy of error messages for better debugging
refactor equality predicate handling in StarTreeIndexOperator . java to improve clarity and consistency to enhance code readability and maintainability by
reformatted code in HandshakeHandler . java for improved readability to enhance maintainability and clarity of the code
updated whitespace in Navigator . java for consistency to improve code readability and maintainability
updated record reader class access modifiers and added a new test class for RecordReaderFactoryTest in RecordReaderFactoryTest . java to enhance encapsulation
added case handling for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests in MongoQuery
added recursive function validation check for group by ( # 6186 )
updated MappedByteBuffer and FileChannelLinesSpliterator to utilize a AtomicInteger for buffer reference counting to improve memory management and ensure proper cleanup of buffer
refactor LDAPUtils to use a variable for better readability to improve code readability and maintainability
added a method ` schedule ( ) ` to ` CircuitBreakerImpl ` and updated the wait timeout value in ` CircuitBreakerTest ` to improve
removed unnecessary flags from the intent setting in Launcher . java to streamline the code for better readability and maintainability
updated property names from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to improve clarity and
added JUnit 5 @ Disabled annotation to the @ DisplayName annotation in TableExtRetrieverTest . java to mark the test as disabled due to
made ` addExportedCount ` and ` getExportedCount ` methods synchronized to ensure thread safety when accessing shared resources
removed unnecessary import of IntRangeUtil1 from MetricsImpl . java to streamline the code by eliminating unnecessary dependencies
updated HttpParser to handle encoded HTTP headers and added a new test for encoding headers to ensure proper handling of encoded headers and improve test coverage for
updated layout reference from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to ensure the correct layout is used for configuration
updated the print statement in SLWTTextListing . java to include the position of the SLWT document to improve clarity of
refactor ForceLeaderTest and HttpPartitionTest to use a new test class for testing Tlog replicas to improve test reliability by reducing
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
updated template file suffixes in AbstractConfigurableTemplateResolver . java and added a new boolean flag for forceTemplateMode to enhance flexibility in template file
camel - 14284 : camel - cxf - allow to specify the namespace of the payload and default cxfrs . xml soap .
reformatted the class declaration in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java and added a new test case in TestFunctions . java to improve readability and ensure accurate date representation
added validation for transactions and write IDs in GenericUDTFGetSplits . java to ensure proper configuration for transaction and write IDs in Hive
updated logging statements in JsonSerDe . java to use Collections . emptyList ( ) for empty column names and column types to improve logging clarity
added a null check for the book path before loading data and introduced a new method ` hasNoInitialImage ( ) ` in multiple classes to
updated SSTDeserializer methods and added a new test case in TestSSTDeserializer . java and TestSSTTestTest . java to improve
added a constant for the default grid column and modified the return logic in AppPreferencesImpl and ExtendedListFragment to improve code clarity and ensure
updated comparison failure messages in Platform . java to include " line contents match " and " line - break characters " to improve clarity and accuracy
added a ` waitingForKeys ` flag and updated the logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod ` , and
updated API paths from " / api / margin / v3 / accounts " to " / margin / v3 / accounts " in Okex
updated equality checks in LineUtilitiesTests . java for better accuracy to ensure accurate detection of edge cases in the test cases
added error logging for varargs and old array syntax in JavacParser . java and created new classes T6569633 . java to
[ java ] ensure defaultdrmsessionmanager be call before setplayer ( ) .
added support for handling method calls in VariableContext and created corresponding test cases in TestVariableContext to enhance functionality and ensure correct handling of method calls
added tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure correct handling of invalid compilation unit and profile string
updated buffer limit logic in Piece . java and SharingPeer . java to ensure correct buffer position handling and improve code clarity
refactor NettyRoutingFilter to accept HttpClientProperties as a parameter and add responseTimeout property to enhance flexibility in HTTP client configuration by allowing
refactor ` getNativeLinkTargetGroup ` and ` getNativeLinkTargetInput ` methods in ` CxxLibraryFactory ` and ` CxxLibrary
( chore ) camel - main : add unit test for camel - rest
added support for RexFieldAccess in ASTConverter and implemented field access conversion in RexNodeConverter to enhance the handling of field access in
replaced instances of ` QueryLogEntry . values ( ) ` with a static final variable ` QUERY _ LOG _ ENTRY _ VALUES ` to improve
also relativize request uri if host be in no - host list , in addition to the no - proxy case . ( # 3442
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and efficiency to enhance code readability and maintainability while ensuring
added reflection access checks to NativeObject , ReflectionCheckLinker , and ReflectionCheckLinker classes to enhance security by ensuring proper access control for
changed the visibility of the constructor from public to package - private in CollisionMap . java to allow access to the constructor from other classes
removed the @ NotNull annotation from the getRawInputFromTransactionInput method and added a null check for the input parameter to indicate that the input is
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by reducing
cloudstack - 4892 : remove unused region _ id from the sql statement
bug 60284 - support encryption for old xls file
add extra _ image _ build _ argument to mx _ java _ benchmarks . py
removed the conditional check for the image visibility in TimeLineCursorAdapter . java to simplify the code for better readability and maintainability
increased sleep duration from 10 seconds to 50 seconds in BatchingStateChangeUploadSchedulerTest . java to allow more time for the scheduler to
refactor external file directory creation logic in ShadowContext and add unit tests in ContextTest to improve directory management and ensure proper test coverage for external
replaced direct instantiation of ` ExceptionFactoryImpl ` with ` Class . forName ` for better error handling to improve code readability and maintainability
increased the WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to increase the wait time for better
added support for " azp " and " aud " claims in ConnectOAuth2RequestFactory and updated JWTClaimsSet to include " aud "
camel - 14284 : camel - kafka - do n ' t default to true in camel - kafka
added a new static final integer selectableItemBackground in the R . java file to facilitate the management of the selectable item background
replaced specific import statements with a wildcard import and added a method to place stop orders in GatecoinTradeService to streamline import statements and
updated event type assignment logic in TxnSetOperation . java to ensure correct event type assignment when record is null
added a new file ` ResumableRandomAccessFileListener . java ` that implements the ` ResumableRandomAccessFileListener ` interface to handle
change class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added logic to set and set the number of formatted formats in HSSFDataFormat . java and updated test assertions in TestWorkbook . java
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer in favor of kafkaproduc
updated the calculation of compressedChunkLength in CompressedInputStream . java to ensure that the length check does not exceed the maximum compressed length to prevent
added camel - data - redis : add idempotent repository to camel - data - redis
fix bug where vanilla do n ' t use metadata .
do n ' t use the default repository layout if it ' s a local repository
added checks to ensure localTaskManagerThread is only started if the task manager is initialized to improve error handling and provide clearer diagnostics when the
added error handling for deploying files in AbstractArtifactResolutionException . java to improve user experience by providing clearer guidance on deploying files
replaced calls to ` FileStorageUtils . getTemporalPath ( ) ` with ` getInternalTemporalPath ( ) ` in ` UploadFileOperation
refactor FeedEntryStatusDAO to utilize Apache Commons Collections for retrieving FeedEntryStatus objects to improve code readability and maintainability by
added executeStart and executeEnd methods in ContextImpl . java and refactored deployment options in BlockedThreadCheckerTest . java to improve
updated the ` instantiate ` method to accept a ` String ` parameter and added a null check for ` ctorArg ` in ` FormatterConverter `
update LoadContactsTask to handle different Android SDK versions to ensure compatibility with newer Android versions and improve file reading functionality
replaced direct assignment of ` setRemoteAddress ` and ` setRemoteHostname ` methods with ` setRemoteAddress ` and ` setRemoteHostname
added a null check for the shadowClass in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements to
added a check for tlsMutualAuthenticationRequired in NettySslContextFactory and ExampleNettySslContextFactory to ensure that the certificate chain is only
updated import statements and added a new test for handling SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for the consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer for external use
refactor event handling in PageChangeListener and FrameRenderer classes to improve code readability and maintainability
updated log message from " address / subject / text / text " to " SMS " in CommunicationsManager . java to clarify the
# 1342 - add draftqueryoptimise method to ebean . draftqueryoptimise ( query < t > )
added exception handling for IOException in MultipartBody . java to improve robustness by handling resource temporarily unavailable issues gracefully
fix : fix arrayindexoutofboundsexception in executablefactory and zipfolder
refactor EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes to improve code organization and maintainability
fix a bug in attachfileaction that do n ' t have a working directory
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to enhance schema crawling options for improved performance
refactor TestLoadLegacyLibrary to use J9VM ' s TestNG annotations and add a new test method for loading legacy libraries to improve
removed an exception throwing for unknown operation names in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance property management by associating properties with their properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper closure of the connection
renamed DataStreamJob class to improve clarity to enhance code readability and maintainability
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential resource leaks
camel - 14263 : camel - cxf should use classhelper . getRealclass instead of classhelper . getrealclass ( )
added a check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory to ensure compatibility with both H2 - 14 and higher protocols
refactor LambdaToMethod and ClassFileVisitor to improve clarity and functionality to enhance code readability and maintainability while ensuring proper handling of lambda
updated regex pattern in CoordinationTransformer to use ' what ' instead of ' W ' instead of ' W ' to improve accuracy of regex matching
increased the timeout for file copying from 5000 to 60000 in DL4JInceptionV3Net . java to allow for
added a call to set the phraseSlop in the QueryParser to enhance query parsing capabilities by allowing the phrase ' slop ' to be
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve responsiveness by allowing more time
updated the timeout value from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
simonstewart : add parallel scheduling for screengrabber
updated visibility logic in EditShareFragment to include ` areEditOptionsAvailable ` to ensure correct visibility behavior based on edit options availability
added a calculation for the progress value in DepthController . java to ensure that the progress value does not exceed the maximum of 1.1 f
removed the packetReceived method from ClientSession and ComponentSession classes to streamline the packet handling process and improve code clarity
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored auto - redirect handling in DelegatedAuthenticationGenerateClientsAction
updated null checks in SamlIdPEntityIdAuthenticationServiceSelectionStrategy , SamlIdPMetadataUIAction , and SamlIdP
[ pantheon ] add ` ` hidden ' ' option to pantheon command ( # 1358 )
added a doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) call to the builder to
changed the access modifier of the ` isSupported ` method from private to public in ` NegotiateAuthentication . java ` to allow external access to
removed the ` setInitScript ` method from the ` InitializingDataSourceFactoryBean ` class to streamline the initialization process by eliminating
camel - 14284 : fixed concurrency issue in queuereplymanager and temporaryqueuereplymanager
refactor AuthenticationProvider , TargetObject , and AuthenticationProvider classes to improve code organization and maintainability
added functionality to flush lines and closeMCBlock in PdfDocument . java based on tag status to improve text rendering by ensuring lines are flushed when
log4j2 - 1343 add unit test for patternselector .
simonstewart : do n ' t throw unsupportedoperationexception when run hta test with selenium rc
added a new class ` MwThankPostResponse ` and created a new ` MwThankPostResponse ` class to handle response
added a new interface ` SocketBased ` and modified the ` ChannelEndPoint ` class to implement ` SocketBased ` instead of ` ChannelEndPoint `
refactor revokingStore initialization and set maximum size in Manager . java to improve code readability and maintainability by reducing redundancy
added unit tests for the HQL collection join functionality in HQLTest . java to ensure correct handling of implicit join scenarios in query execution
updated the normalization of expected and actual strings in NonVisualRegressionTest . java to ensure consistent line endings across different operating systems
refactor IndexWriter and SegmentInfos to improve file reference handling and ensure proper resource management to enhance code clarity and prevent potential memory leaks
added @ Final annotation annotations to multiple memory methods in BaseError . java to ensure that these methods are only called once to improve code clarity
added validation for user resource percent in ConsumeUserResourcePercentActuator to ensure that percentage values are within a valid range to prevent runtime errors
added a condition to check if the old login is shown in the AuthenticatorActivity to ensure legacy login display is only shown when the user is in
rename StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
simplified the response page assignment logic in EditTeamPage . java to improve code readability and maintainability
updated debug log message in PMS . java to include exception details to improve clarity of error messages for better debugging
refactor the closing of the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
refactor conditional logic for creating a dynamic partition specification in BaseSemanticAnalyzer to improve code readability and maintainability by reducing duplication
replaced the ` allowsRoundHack ` method with ` getRoundHalfUpFactor ` and updated its implementation in ` StringTemplate ` to
added a visitDirectory method to ` JarDirectoryStep ` and a corresponding test in ` JarDirectoryStepTest ` to ensure that directory entries are
added a new file JWKSetEditor . java that implements PropertyEditorSupport for setting JWK values as text to facilitate the editing of
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to use PendingTerm instead of BytesRef to improve code cl
do n ' t use partial evaluation constant for jfr and invokeespresso
changed the default value of ` byIP ` from ` true ` to ` false ` in ` Fetcher . java ` to ensure that the
simplified conditional checks for queryTimeout in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to ensure that target
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 4892 : add initial delay for network stats update task
replaced the use of ` FINAL _ FRAME ` with a constant ` INSTANT ` in multiple animation classes to improve code readability and
updated the swipe length calculation in Background . java to improve the responsiveness of the navigation bar based on display density
added a new module - info . java file for the Jetty HTTP3 server module to provide modularization and dependencies for the HTTP3
updated JsonType to handle null values and replaced " myJsonObj " with " BIG _ JSON _ OBJ " in JsonTest . java
removed unnecessary null check for ` context ` in ` ResourceResolverBean . java ` to simplify code and improve readability
[ hotfix ] [ checkpointing ] remove unnecessary default value from executioncheckpointingoptions
updated ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` to improve type handling for inner class references in the
added a space to the command string in TimestampCheck . java to ensure proper formatting of command arguments for better readability
replaced ` FluentIterable ` with ` MoreCollectors ` in ` ChromeTraceBuildListenerTest . java ` to improve code readability and
change the default value of ` register ` from ` true ` to ` true ` and add a new constant ` REGISTER _ KEY ` to
added OTRManager functionality to handle security OTR mode changes to ensure sessions are ended when the OTR mode is disabled to improve security management
added outline size and transparency properties to the rendering process in NodeLabelRenderer to enhance the visual representation of nodes by allowing dynamic outline size and transparency
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a new flag ` true ` to the ` Win32FontManager ` class to enable the functionality of the font management system
added null check and cursor setting in TreeVisitor . java to ensure robustness by preventing potential NullPointerExceptions
add error handling policy to jdtbatchcompiler when there be no classpath
added content alignment point and text anchor properties to LabelBlock and updated related classes to utilize RectangleAnchor for better alignment control to enhance label rendering
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code organization to enhance maintainability and readability of the code
added a null check for the networkInterface before accessing its isLoopback to avoid potential NullPointerExceptions when accessing isLoopback
added Locale parameter to the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to enhance date parsing flexibility by allowing
updated the file download method to include a extension " . pdf " in the test to ensure that the download method correctly identifies files with a specific
nifi - 1344 : add output no hits property to jsonqueryelasticsearch
[ iotdb - 4892 ] fix speed calculation of serviceoffering ( # 4893 )
refactor switch statements in Election . java to use try - with - resources syntax to improve code readability and maintainability
remove uncheckrun ( ) from readfilesp and streamfilesp # drainwatcherevents ( )
refactor widget event handling logic in PageChangeListener . java to improve clarity and correctness to enhance the robustness of widget event processing and
added isWriteProtected method to Workbook , HSSFWorkbook , and related classes , and updated username length handling in HSSFWorkbook
added error handling for session unregistration in PluginMonitoringFilter . java to improve robustness by logging exceptions during session unregistration
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the message in the updateStatus method from " false " to " not reachable " in HueLightHandler . java to clarify
add fmlclienthandler . isloading ( ) method to fmlclienthandler . getloading ( ) . close # 74303 .
updated return statements to include " unit . millions " and " unit . thousands " units in UI and BlockInventoryFragment to enhance
updated MessagePackParser to handle different byte types and added a new BinKeyPojo class in MessagePackDataformatTestBase to improve type
added a new test method ` queriesWithReservedWordsAsIdentifiers ` to ` HqlQueryTransformerTests ` and ` JpqlQueryTransformer
added unit tests for Gson serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON format
added offset checks for x2 and y2 in GeometryUtils . java to ensure x2 and y2 are within the specified offset
updated SORT _ ORDER _ DIALOG _ TAG to SORTING _ ORDER _ FRAGRMENT in FileDisplayActivity and ReceiveExternalFilesActivity
do n ' t exit if there be no test plan
replaced instances of ` dbmsType ` and ` dbmsOperationHandler ` with ` Lazy < DbmsType > ` and ` db
updated argument handling logic in Parser . java to ensure argIdent is set correctly based on type and non - strict mode to improve robustness by
updated the default protocol from " SSL - HTTP / 1.1 " to " scf . getProtocol ( ) " in JettyHttpComponent
fix : set displayvolume to true to enable display volume
updated the ` version ` method to accept a boolean parameter and added a new ` VersionTest ` class to improve clarity and functionality of version
refactor condition checks in ChangeLogParameters to improve clarity and functionality to enhance code readability and ensure proper handling of global change logs
change log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for troubleshooting
hhh - 15836 - skip test for oracle dialect in setoperationtest
refactor socket timeout handling in Connection . java to improve clarity and maintainability of socket timeout management
added a condition to check if the action bar is not a popup in multiple fragments to ensure that the action bar size is only calculated when the
changed the default value of the CHA option from false to true in EspressoOptions . java and NoOpClassHierarchyOracle . java
http : / / issues . apache . org / jira / browse / amq - 4892 - add debug logging for thread context
refactor JodaTimeRangeRandomizersTest to use assertj - based assertions for better readability and maintainability to enhance test clarity
added a conditional check for the Jetty version before retrieving the xsd in WebDescriptor . java to ensure compatibility with newer Jetty versions and improve
fix ( kubernetes - api ) : fix readiness . isready ( ) for node .
replaced direct calls to ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to improve code clarity by
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC
added a null check for the caller before checking package access checks in ObjectStreamClass and ObjectStreamField to prevent potential NullPointerExceptions during package access
updated Utils . java and XLCDCommunicator . java to use private variables instead of private variables to enhance encapsulation and improve code
updated DefaultMetricsTagProvider to handle null host values and modified the sanitizeUrlTemplate method visibility to enhance code clarity and enforce immutability
updated the test suite name from " MockBrowserTest . class " to " MockBrowserTest . class " to ensure consistency in naming conventions
change default logging from Level . OFF to Level . ERROR in Launcher . java to provide a more specific error level for the application
added final modifier to fields and variables in IconNormalizer . java to ensure immutability of variables and improve code safety
added a ` firstCallPrepareDo ` property and modified the ` invokePrefixMethod ` method to handle ` firstCallPrepareDo ` boolean to
refactor showWorkspaceAndExitOverviewMode and showWorkspaceAndExitOverviewMode methods in Launcher . java to improve code readability and maintainability by
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and updated
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to allow
cloudstack - 4892 : fix nullpointerexception when remove capacity - type _ private _ ip
bugfix # 2692 , add documentation for profiler home page in async profiler
added a new class ` RequiredRefFieldModel ` for handling ref fields in ` ModelResolver ` and created a new ` RequiredRefFieldModel
rename ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreStandaloneBootstrapConfiguration ` to ` CasCoreEnvironmentBootstrapAutoConfiguration ` across multiple
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future feature management
updated string builder size and added unique identifier for large hue IDs in ConfigStore . java and CommonSetup . java to improve performance and ensure unique
added picture handling in TimeLineCursorAdapter , TimelineArrayAdapter , and TimeLineCursorAdapter to ensure proper display of images when the picture
updated error messages for major compaction on full CRUD tables in HiveConf . java to clarify compaction behavior to improve user understanding of
added a null check for the storage path before checking if mWaitingToSend is down to avoid potential NullPointerExceptions when accessing mWaitingToSend
added a checkResize ( ) method to multiple classes and adjusted logical hash bucket count calculations to ensure resizing behavior does not exceed defined limits and
refactor LDAPConnectionService class for improved readability to enhance maintainability and facilitate future updates
added @ XmlAttribute annotations to the AggregateDefinition class to indicate that these elements are outdated and should no longer be used
added debug logging statements to TouchInteractionService , RecentsAnimationDeviceState , and RecentsAnimationDeviceState to enhance debugging capabilities for
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility
updated assertions from ` hits . length ( ) ` to ` hits2 . length ( ) ` in ` TestMultiSearcher . java `
added a new file LucenePackage . java containing a new class LucenePackage to provide a centralized way to access the Lucene package
update sizeInBytes addition logic in RAMDirectory . java to ensure correct handling of sizeInBytes in addition to existing sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter , BloomKFilter , and BloomK
added a null check for the getDrawerToggle in MainActivity . java to prevent potential NullPointerException when accessing getDrawerToggle ( )
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to suppress warnings about unused code and improve
added logic to scan modules based on override classpath and classloader in Scanner . java to ensure proper handling of classpath and module scanning based on configuration
[ msbib ] fix ` ` corporate ' ' field in ` ` bib ' '
refactor CoreContainer to utilize a separate method for canceling core recoverys to improve code organization and maintainability by centralizing recovery cancellation
replaced ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` in ` bug5070081 . java ` to improve accuracy of
removed debug print statements and modified the condition for clicking the first element in the found list to improve code readability and maintainability by redu
updated error messages in PGProperty , V3PGReplicationStream , ChainedLogicalStreamBuilder , and ChainedPhysicalStreamBuilder classes to improve
added trustResolver , roleHierarchy , and permission evaluator imports and updated SecurityExpressionRoot instantiation in SecurityEvaluationContextExtension . java to enhance security expression
added a check for zero exponentSize in DHParameterGenerator to ensure exponentSize is correctly set based on prime size
refactor file usage checks to use a new method ` getUsableSpace ( String accountName ) ` to improve code readability and maintainability by
updated the ` combine ` method in ` DistinctSqlAggregation ` to use ` other . values ` instead of ` delegate . combine ` to
added a test method to verify post - login activities for a user on successful authentication to ensure that post - login activities are executed correctly on successful
replaced instances of ` cWordSpanishStrippedVerb ` with ` ExtractorSpanishStrippedVerb ` and added a path parameter
refactor CharArraySet and TestCharArraySet classes to improve code readability and maintainability by reducing redundancy
updated track count error messages and improved track type validation in MuxerWrapper . java to enhance clarity of error messages and ensure proper track
updated JsBundleGenrule and JsBundleGenruleDescriptionTest to use AndroidPackageable instead of JsBundleAndroid to improve clarity and functionality
added UTF - 8 character encoding handling and improved string processing in StringDictionary and StringDictionary classes to ensure proper handling of UTF - 8 character
updated resource references from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in
added instanceClassName field and refactored vector initialization logic in AbstractVector . java to ensure proper instantiation of Vector instances only when the class name
removed the syncMetaLeader ( ) method call from CMManager . java to streamline the code by eliminating unnecessary synchronization
improve feedback question detail for missing response
added TestLoggingExtension import and modified DiagramRendererTest to include TestLoggingExtension to enhance logging capabilities during test execution
camel - 16462 : camel - ibatis should use camelcasemapping instead of camel - 16463
added support for the VIOMI Internet electric water heater 1A ( 60L ) device in MiIoDevices . java to
updated variable names from ` getSslSessionData ( ) ` to ` SslSessionData ` in ` SecureRequestCustomizer . java ` to
added a new file CreateNewSpreadsheet . java to implement spreadsheet creation functionality for Excel sheets
renamed ` ttl ` to ` timeToLive ` and updated related methods in ` CacheProperties ` , ` RedisCacheConfiguration ` , and `
updated content URI references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in multiple classes to improve notification handling by preventing notifications
updated version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest features and
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing
added a condition to check if the character is less than or equal to 1 in DocClassUtil . java to ensure proper handling of edge cases
replaced String . format with String . format for clarity to improve code readability and maintainability
added import for Liquibase Scope and sendMessage a message when no validation errors are found to improve user feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize a new configuration method for managing WebMergedContext to improve resource loading flexibility and ensure proper context
updated scroll handling logic in Component and JavaSEPort classes to improve scroll behavior and enhance responsiveness based on scroll responsiveness
updated conditional statement in RamlType . java to improve code readability and maintainability
added a new class ` ClientStat ` and updated related methods in ` StatsService ` , ` DefaultStatsService ` , and ` StatsService
updated regex patterns in CellContentConverter to replace " $ 1 " and " $ \ n1 " with " $ \ n1 " to
updated regex patterns in SeleneseTestCase . java for improved string formatting to enhance clarity and correctness of glob matching output
[ mondrian ] fix typo in mondrianproperties . java
added stack trace printing functionality in ProcessTools . java and updated launcher permission handling in CustomLauncherTest . java to enhance debugging capabilities and ensure proper
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the test process by eliminating unnecessary
added a check for the presence of a slot for storeType before converting to storeType to ensure conversion only occurs when a slot is present
refactor initialization logic in ContainerMediaChunk and InitializationChunk classes to improve code readability and maintainability by reducing redundancy
refactor BaseLockFactoryTestCase to utilize PrintStream and OpenMode for improved string representation to enhance readability and facilitate
tika - 2852 -- allow dynamic service loader to be configure via tika - config
updated import statements and added diagnostic checks for source files in DocLint . java and DocLintTester . java to improve code clarity and
added a new boolean flag ` IMPORT _ CMD ` to the ` DataImportHandler ` and modified the ` DELTA _ IMPORT _ CMD
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest ` and modified the condition in `
removed unused import of Log in JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method in ` LauncherModel . java ` to ensure
added a new servlet " KillSwitchquitquit " to the Jetty7AppServer and created a new servlet class ` KillSwitchServlet `
refactor the handling of multiple records in LLRealtimeSegmentDataManager to use a list instead of a single element to improve code readability
added a check for the " Teredo " device name in the Tests . java file to ensure compatibility with different operating systems and avoid
add error dialog if contact not connect to the protocol provider
replaced direct registration of ` beanDefinition ` with ` BeanComponentDefinition ` in ` AuthenticationConfigBuilder . java ` to improve code readability
be 8a196351 : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
fix ( regen ) : fix date ( yymmdd ) in Meitrack and Totem protocol
changed access modifiers of getFontPath and getPlatformFontPath methods from public to protected in SunFontManager and X11FontManager classes to enhance encaps
mark EnhancedRandom class as deprecated to indicate that these classes are outdated and should not be used in new development
replaced ` ReachedMaxSizeException ` with ` ExecutionException ` in ` ClientMapStoreTest ` and ` ClientMapStoreTest ` to ensure
added a boolean flag ` keepEmptySentences ` to ` DocumentPreprocessor ` , ` MaxentTagger ` , and ` Maxent
added error handling for artifact creation failures in MavenArtifactFetcher . java to improve robustness by providing clearer error messages when artifact creation fails
replaced static imports with direct instantiation of JavaCompilerService in ReusableCompiler . java and updated related methods in JavaLanguageServer . java to
added a null check for the answer in DirectAgentAttache . java to ensure that a null answer is returned and log a warning for null
change sendEmail method to throw MessagingException instead of try - catch to improve error handling during email sending
add null check for obsidian pipe , fix # 2111
updated the ` getDateMathParser ` method to accept a ` Locale ` parameter instead of a local time zone to ensure consistent date parsing across different
added a new boolean field ` includeDecals ` and its getter and setter methods in ` StorageOptions ` and ` StorageOptionChooser ` to
added a null parameter to the generateDocumentation method in Liquibase . java and modified the method signature in LiquibaseTest .
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to utilize a for - each key for performance logging to enhance performance tracking and
updated log messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory to improve clarity and consistency in log messages
updated version check in ignoreRecordAttribute and recordReflectionTest to use MAJOR _ VERSION instead of 58. 65535 to ensure compatibility with the
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP connection and setup methods to ensure correct functionality of the ` LdapPasswordAuthentication
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler . java to improve performance by utilizing BasicStatsNoJobTask
fix nullpointerexception when reload on save ( # 1188 )
refactor VisibleAdvance class for improved clarity to enhance maintainability and readability of the code
fix ( kubernetes - client ) : handle terminal exception in sharedindexinformer . start ( )
added support for dynamic number columns in EdgeDataTable , NodeDataTable , and EdgeDataTable classes to enhance functionality to support dynamic number columns in Sparklines
added null checks for groupId , artifactId , and version in RawPom . java to ensure required parameters are not null to prevent potential NullPointerExceptions
added a null check for ` apiInfo ` in ` V2HttpCall . java ` to prevent potential NullPointerException when ` apiInfo ` is
renamed HeadersConfigurer and CacheControlHeadersWriter classes to improve clarity and consistency in naming conventions
added texture disposal functionality and logging in PhotoPanel and FlameRenderer classes to improve texture management and facilitate debugging during loading and
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 460 and
modified the condition in CSSParser to ensure proper handling of character boundaries to improve robustness by preventing out - of - bounds errors
added a boolean property ` isLookAndFeelDecorated ` to the ` UIServiceImpl ` class to control the default look and fe
removed the ' this ' keyword from the SQL query and removed the ' this ' variable in HostRoleCommandDAO . java to simplify the code
updated function names from " F2 _ UNKNOWN " to " F5 _ TRANSPONDER _ TEST _ REPLY " and " F6
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe - and - drop functionality
changed mHostDb from HostDatabase to ColorStorage in ColorsActivity . java to support color storage functionality in the application
refactor String class to improve code readability to enhance maintainability and ease of understanding for future developers
removed unused Logger imports from multiple Java files to clean up the code and improve maintainability
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve all entries from the map to enhance functionality
added assertions to ` sendcoin ` in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method behaves as expected
test : migrate CUfiltertest to junit 5 ( # 4538 )
added a constant for the path separator in JavadocReport . java to ensure consistent path handling across different operating systems
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow access to the method from other classes
added assertions for presence of fields in metamodel for properties in InheritanceTest . java and updated field retrieval in TestUtil . java to ensure
removed the conf parameter from Outlink instantiation across multiple files to simplify the code by eliminating unnecessary parameters
removed ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple classes to simplify method signatures and
added imports to useLambdaForFunctionalInterface and modified type expression handling in UseLambdaForFunctionalInterface . java to ensure unused imports are
replaced ` appendClassSelector ` with ` appendFileSet ` in ` m _ classFilesets ` to simplify the code by elimin
removed the check for the root input type in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary
added a pool parameter to the Mapping constructor and updated the MissingMappings class to include it to enhance registry management by associating it with the pool
updated variable names in Intersector . java for clarity to improve code readability and maintainability
added default methods for decoding and processing SBE versions in MessageDecoderFlyweight . java to indicate that these methods are not supported by the
refactor elasticsearch version handling in ` ElasticsearchContainerTest . java ` and add a new test method ` restClientClusterHealth ` to ensure compatibility with
use bytebuffer . wrap ( ) instead of bytebuffer . wrap ( ) in workingreceiver .
updated cluster definition to use a version ID instead of a hardcoded cluster name to improve clarity and consistency in naming conventions
camel - 14284 : remove unused setconfiguration method from camel - ftp
[ zeppelin - 4892 ] fix error message when load dependency in zeppelin
modified the local assignment logic in Gen . java and added a new NoLocalsMustBeReservedForDCEedVarsTest . java to
added a check for basic certificate constraints in ForwardBuilder . java and created BuildEEBasicConstraints . java with a new class BuildEEBasicConstraints
added database initialization logic in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions 9.5 and above
updated WebSocket configuration and added a minimum buffer size check in AbstractWebSocketConnection to ensure that the input buffer size does not exceed defined limits to prevent
lucene - 4892 : fix indexwriter . undeleteall ( ) to prevent double write
added null check for scopes in ClientRegistration and updated test cases in ClientRegistrationTests to enhance stability by preventing potential NullPointerExceptions
added null checks for orderBy in CartesianProductStream . java to prevent potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest matcherassert instead of junit
cloudstack - 4892 : do n ' t delete snapshot if the vm be delete from the same vm
updated the initialization of HiveLog4j message in HiveServer2 . java to improve logging clarity and facilitate troublesh
added a check to ensure the task list is not empty before processing to avoid potential NullPointerExceptions when no tasks are available
do n ' t send delete node if it do n ' t exist .
do n ' t create relationentity if it ' s null
added checks for empty barcode in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase classes to ensure proper error handling
replaced TreeSet with LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to ensure predictable iteration order of cipher suites
refactor control character handling in Escaper . java and update InternationalizationTest . java to improve code readability and maintainability by
changed the return type of ` providerMethodName ` and ` providerMethodParameterTypes ` from ` String ` to ` CharSequence ` in ` ProviderSql
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for the page in PagedView . java and modified scroll delta calculation in Workspace . java to
renamed variable ` synthetic ` and ` printed ` from ` synthetic ` to ` pruned ` in ` JavaTemplate . java ` to improve cl
added method . setAccessible ( true ) to WidgetInterceptor . java to enable access to the method for external use
added a condition to check if the default value is not " database . server . id " before setting the literal initializer to ensure that the default
updated the Mozilla library version in AbstractRipper . java to use Windows NT 10.0 instead of Macintosh to ensure compatibility
added a web interface item to the popup in BasicSystemUtils . java to enhance user experience by providing a direct access to the server ' s
refactor HandleGetter and HandleGetter to use a static char array for actual value handling to improve code readability and maintainability by reducing
added error handling for record building in EncryptedSlideShow . java to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ table - common ] improve debug logging for queue and head page io
added a call to loadBattlePassManager ( ) in Player . java to avoid null pointer exceptions during avatar postLoad to avoid
updated Docker image version from 1.0 . 0 to 1.1 . 0 and added additional SSH - RSA options in the PortForwardingContainer
added a new bigObject array and initialized the System . gc ( ) method in ThresholdTest . java to improve memory management and prevent potential memory
updated log level checks in StdErrLog . java and added new test cases in StdErrLogTest . java to ensure proper logging behavior and
fixed - rremoteservice . getremoteserivce ( string name ) throw npe if remoteinterface . name be not specify . #
added methods to retrieve and set the selected status of the emblem in MultiButton . java to enhance the functionality of the MultiButton by allowing
rename ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to clarify the purpose of
refactor code to improve readability to enhance maintainability and clarity of the code
refactor RedisReactiveHealthIndicator to use a reactive RedisConnection instead of a reactive connection to improve resource management and ensure proper closure
refactor theme color handling in ProgramGridCell and Utils classes to improve code readability and maintainability by centralizing theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
removed unnecessary type adapter imports from ToolingApiLauncher . java to streamline the type adapter registration process for improved clarity and maintainability
updated parameters in TestPayloadCheckQuery . java for consistency to improve code readability and maintainability
refactor print logic in ConsoleReader and add a new test for reading strings with a mask to improve clarity and ensure correct handling of mask
added user handling and user information in BaseCommand . java to improve user feedback and provide clearer command line information
test : move modulesupport and exportclassloader into api package .
[ hotfix ] [ test ] remove unused parameter from slotsharinggroup constructor
added a condition to check if the " one . util . streamex . emulateJava8 " property is not set to true to ensure
updated texture paths in DecalTest and MusicTest to use " data / sys . png " instead of " data / wheel . png
removed redundant calls to registerReceiver and unregisterReceiver in Launcher . java to improve code readability and maintainability by reducing redundancy
updated import statement from ` org . apache . ambari . server . state . Cluster ` to ` org . apache . ambari . server
added a new boolean flag ` reuseRefreshToken ` and modified introspection handling in ` ClientDetailsEntity ` and ` IntrospectionEndpoint ` classes to
replaced direct writing of session attributes with HTML encoding in HtmlSessionInformationsReport . java to enhance security by preventing XSS vulner
updated link annotations for PhraseQuery , PhrasePrefixQuery , and SpanQuery in Query . java to improve link clarity and organization of
refactor code to use ` isEmpty ( ) ` instead of ` size ( ) ` in ` CommentsInserter . java ` and `
refactor the ` NoValueOfOnStringType ` class to simplify the logic for determining string types to improve code readability and maintainability
updated method signatures to use ` Object ` instead of ` A ` across multiple classes to improve type safety and consistency across the assertion framework
updated package names from ` ThrowingFunction ` to ` ThrowingFunction ` in ` JwtPlugin . java ` and ` ThrowingFunction .
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` , ` PreferenceManager ` , and
fix ( typefactory ) : return null if there be no element in typefactory . getelements ( )
replaced direct instantiation of BitmapDrawable with Robolectric ' s constructor to improve compatibility with Robolectric ' s object creation
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to clar
updated the page indicator resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to accurately reflect the
added a volatile integer for reinvocations in BasicInvocation . java to track the number of reinvocations during backups completion
updated the calculation of topPadding in DefaultLookAndFeel . java to correctly account for the inner height of the line to ensure proper layout
added a break statement in the Recognize class to ensure proper flow control in case of fall - through behavior
added Haptic feedback based on user preferences in multiple classes to enhance user experience by providing haptic feedback when the home screen is locked
updated formula handling logic in ExcelBatchReader . java and added unit tests in TestExcelFormat . java to enhance functionality and ensure correctness of
fixed bug # 53232 - immutablefield do n ' t handle anonymous inner class
added a private string ` userAgent ` to the ` CommaFeedConfiguration ` class and modified the ` HttpGetter ` to retrieve the user agent
updated @ XmlAttribute annotation in AvroDataFormat and Base64DataFormat classes to ensure the @ XmlAttribute annotation is required for XML processing
change log level from info to debug in Utilities . java to reduce log verbosity for troubleshooting
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the checkVersion variable and added a method to retrieve the unique ID in OfflinePlayer to ensure compatibility with the latest server version and handle potential
camel - 16462 : camel - default - routes collector should check for empty include pattern . thanks to daniel for the patch
added a vertexColor property to the PShape3D class and modified the vertex color handling logic to improve flexibility in color rendering based on
added a new boolean parameter ` isPkColumnFiltered ` to the ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` classes to
removed the import of Shadow from ShadowMotionEvent . java to simplify the code by eliminating unnecessary dependencies
updated package structure and import statements for MetaRules and PythonDslProjectBuildFileParser to improve organization and clarity of project structure
refactor class handling logic in GroovyEngine . java to improve clarity and consistency to enhance code readability and maintainability
added a new ` PluginContextListener ` class to initialize and destroy Hawtio plugins to facilitate the initialization and destr
removed redundant print statements in NativeCodeGenerator . java to clean up the code and improve readability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test . java ` to ensure that the ` assert
removed redundant method calls to flattenName and pack in AutomaticDependencies . java to streamline code and improve readability by eliminating unnecessary
updated variable name from ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to clarify the purpose
added tests for setting and setting the profile in FirefoxOptions and Capabilities in MarionetteTest . java to ensure that the Firefox driver correctly
camel - 14263 : camel - jbang - allow to specify route description . thanks to daniel for the patch .
refactor JavacTreeMaker class for improved clarity to enhance maintainability and readability of the code
added a method to set the weight of the edge in ImporterCSV . java to ensure the edge has the correct weight configuration
updated QuotaManagerImpl to utilize a new method ` getCostPerHour ` for calculating the cost per month based on the current date
updated SQL queries to include adsrc and adnum and column default values in DatabaseMetaData . java and DatabaseMetaData . java to ensure compatibility with
added a null check for Binarized sentence in SentimentAnnotator . java to ensure that the parser correctly handles cases where binarized
added string concatenation for username and authorities in User . java and updated user assertions in UserTests . java to improve readability and provide clear
added null check for the message body in MethodInfo . java and modified the body extraction logic in MessageHelper . java to improve robustness by
[ hotfix ] [ runtime ] fix typo in taskdeploymentdescriptorfactory . fromexecution ( )
[ roster ] fix race condition in rosteraccess . cansubscribing ( )
added a method to retrieve the " maven . test . classpath " path in AbstractJRubyMojo . java and removed unnecessary @ Override
updated type comparison logic in MethodHandleImpl . java and added a new test for user class signature in MethodHandlesTest . java to improve type
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height checks in URLImage . java to ensure proper comparison of image dimensions
added a condition to check if the name ends with " META - INF / " and modified the logic for appending unique names to ensure that the
added background task scheduling for ` createImageToFileSystem ` and ` createImageToStorage ` methods in ` ImageDownloadService . java ` to ensure background
updated the expected number of values in StackWalkerTest . java to ensure compatibility with versions greater than 22 and above to improve test reliability and
changed the visibility of the addViewportJob method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method signatures across multiple test classes to simplify the method signature and improve code clarity
removed server restart and noSystemExit settings in TestDatabase . java to streamline server shutdown process and improve test reliability
added null checks and empty checks in NodePathsConvertOperator and SchemaQueryMergeOperator classes to improve robustness and prevent potential NullPointerExceptions
added a method to retrieve the total harvesting time in multiple transport manager classes to provide a way to retrieve the total harvesting time
updated sprite drawing parameters in ParticleEditor . java to improve visual appearance and responsiveness of the particle editor
added configuration handling for the Hadoop environment in UpgradeCatalog240 . java and updated test cases in UpgradeCatalog240Test . java to ensure proper configuration
added a transparent color to the SvgViewerFactory class to improve the visual appearance of the SvgViewer
removed the minSdk annotation from ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to streamline code by eliminating
updated the ` containsExactly ` method to accept an ` asList ` parameter and added a test for ` arrayContainsExactly ` in `
updated Bucket4jFilterFunctions to use ` capacity ` instead of ` simple ` and added a null check for the key before building the bucket
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to support external list of stopwords and add a Hashtable to improve
updated the ` Generator ` instantiation to include a ` postExecHooks ` parameter to enhance the flexibility of lineage evaluation based on query properties
added error handling for NoClassDefFoundError in REngine . java to ensure proper initialization of supported boolean value based on class definition
refactor TraceFilter to use SpanAndScope instead of Span to improve span handling and resource management to enhance code clarity and maintainability by
updated exception handling in AbstractUpdateCommandStep to use a null check for the cause before setting the exception to improve robustness by avoiding potential
replaced ` SolrServerException ` with ` getBaseURL ( ) ` in ` CommonsHttpSolrServer . java ` to include the base URL
updated the method call to setLandscape to ! ls and modified return statements in HSSFPrintSetup . java to ensure proper handling of
updated the return statement to handle null cases in JavaVoidObjectInspector . java to improve robustness by preventing potential NullPointerExceptions
added validation for argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added support for memory background location listeners in AndroidLocationPlayServiceManager to ensure proper handling of location updates when the activity is not available
removed unnecessary conditional check for primitiveType in MeshBuilder . java to simplify the condition for better readability and maintainability
trufflestring : fix arrayindexoutofboundsexception in trufflestring
added a call to setCommandList ( ) in ComboBox . java to enable command list functionality in the ComboBox
nifi - 4892 : escape alias filename with forward and back slash .
updated command line arguments in ZkCLI . java to use a local local variable for improved clarity to enhance readability and maintainability
updated comparison logic in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ( ) ` instead of
added a conditional check for remoteGrpcStatus before posting the console event to avoid unnecessary logging when the build fails due to missing dependency
refactor method signatures in XYItemRenderer and DrawingSupplier classes to improve code readability and maintainability
added a new NBTTagCompound ( ) to the tick entity in ForgeChunkManager . java to ensure that the tick entity ID is
added a method to retrieve error messages from the GLSurfaceViewAPI18 class to improve error handling by providing specific error messages for better
added a method to retrieve supported locales in FeatureRegistry and updated InfoRequestHandler to use it to improve locale handling and provide clearer error messages for
updated server URI handling in RFC2616BaseTest . java to use HTTP instead of server URI to ensure compatibility with HTTP standards and improve
added a call to addToHelperList ( ce ) in Construction . java to enhance the functionality of the Construction class
added a conditional check for the length of - 2 in GlyphLayout . java to ensure proper handling of special characters in the layout
added security permissions and refactored context class loader setting in Transport and TCPTransport classes to enhance security by enforcing context class loader management
refactor file path handling in ReceiveExternalFilesActivity to improve null checks and folder management to enhance robustness and prevent potential NullPointerExceptions
added a null check for m _ serviceLoaderClassLoader before loading the ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is
updated calculations in TubeCalc . java to correct the formula for deltap to improve the accuracy of pressure drop calculations based on fluid properties
updated node and edge column handling in TimelineControllerImpl . java to ensure correct column assignment based on node type and edge type
added a method to register extra components in BaseBrokerStarter to enable the registration of extra components for the broker admin application
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to verify the correct handling of
peergroup : use witness _ filter instead of bloom _ filter
fix an issue where the cycle of the abstract builder do n ' t change it .
[ iotdb - 4892 ] fix consensus snapshot trigger threshold ( # 6892 )
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a null check for ManagedService before unregistering JMXHelper in DefaultRemoteProxy . java to ensure JMXHelper is only registered when the service
tika - 3353 -- add support for non - Unicode entry name in zip file
added a new file TestSplitThruDivMod . java with two test cases for division operations to demonstrate the behavior of division
refactor ` lookupGenericTypeImpl ` and ` lookupGenericSuperclasses ` methods in ` TemplateRegistry . java ` to improve type resolution logic for
increased the initial capacity of the ByteArrayOutputStream instance from 512 to 1028 to optimize memory usage for improved performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to clarify that certain symbols are not yet available
modify byte array handling in TransferCompletionHandler to accommodate larger data transfers to improve performance by reducing the number of byte transfer operations
replaced ` windowLostFocus ` and ` windowGainedFocus ` with ` windowDeactivated ` in multiple menu classes to improve clarity
added a null check for the source node before throwing a semantic exception to improve error handling by ensuring the source node is valid before proceeding
added scaling functionality to the aabb in SkeletonRenderer . java to ensure accurate rendering of skeletal mesh elements based on the specified scale
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide a consistent way to retrieve the Solr
added ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application
removed the method ` getAccount ( ) ` from the ` UserListItem ` class to streamline the code by eliminating unnecessary complexity
added a test for installing a PackageInfo and updated package name assignment logic in ShadowPackageManager to ensure proper handling of package and activity information
refactor AvailableSettings class for improved clarity to enhance maintainability and readability of the code
added TransactionCapsule and implemented initialization and finalize methods in TransactionTrace . java to enhance transaction management capabilities within the application
add a configurable shuffle member list property to client property ( # 11938 )
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
replaced ` fetchSize ` with ` ThreadLocal ` in multiple classes to improve performance and ensure thread safety during data retrieval
pdfbox - 4892 : fix typo , a suggest by valerybokov
removed unused import of ExecutionContext from TaskletStep . java to clean up the code and improve readability
added a default value of " " to the title string in Lwjgl3WindowConfiguration . java to ensure a default value is used
fix asynchttpclientcall # body should not be null in response body
add a new interface ` embeddedserverinstance ` in ` io . micronaut . runtime . server . io . micronaut
use jabrefframe . registermacevents instead of jabrefframe . registermacevents
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related references to improve cl
added a return statement to the ` toEnum ` method in ` HandlerLibrary . java ` to ensure that the method returns the correct enum type
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to final to ensure that the ` hideUnprivilegedObjects `
updated logging level from info to fine in ThreadedAcousticScorer . java and modified file handling in AudioDataSourcesTest .
added a conditional check to save GiphyAndroid11 video URL in IOUtils . java to ensure compatibility with Android Q and later versions in the
fix activiti test : fix null value in service task
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent for better readability to improve code clarity and reduce boilerplate logic
hbase - 16462 remove unused dataoutputoutputstream from hbaseobjectwritablefor96migration
updated the value of " hive . stats . column . autogather " in TestAcidOnTez . java to ensure consistency in data
change log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity during development
added a method to retrieve the default provider name for AndroidOpenSSL and JSSE _ PROVIDER _ NAME in multiple classes to ensure compatibility with
added imports for Captor and Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance functionality by processing Capt
added checks for onlyRun and testMethodNames in TestSuiteBuilder . java to ensure that onlyRun and testMethodNames are validated before proceed
updated import statements and modified prefix validation logic in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure proper handling
fix import of graphhopper via osm
simonstewart : use default client config for handlesession .
changed the visibility of the ` mHideSysUiScrim ` variable from ` final ` to ` final ` and added a method to
modified the enqueue method signature and added cancellation handling in OkHttpCall and OkHttpCall classes to improve code clarity and ensure proper cancellation of
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe - and - drop functionality
updated RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance functionality by leveraging
updated DeferredAttr . java to include IF and added a new class ImplicitLambdaConsideredForApplicabilityTest . java to enhance functionality
add test boxingvalueof ( ) and testboxedanddevirtualizedtypes ( ) for j2kt
added unit tests for ` applyQualifiers ` and ` setDimensions ` methods in ` DeviceConfigTest ` and ` DeviceConfig ` classes to
replaced IOException and RuntimeException with RuntimeException in ExternalViewReaderTest and adjusted timestamp initialization in PinotDataTypeTest and PluginClassLoader to improve error handling
updated icon resource from ` logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to align the icon
added content text setting to errorBuilder in FileUploader . java to improve user experience by providing clearer error messages
refactor ConcurrentHashMap class for improved performance to enhance performance and reduce contention in concurrent scenarios
added methods to adapt user trades and trade data from AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeService
added a new parameter ` true ` to the ` claimPlot ` method in ` Claim ` , ` Delete ` , and ` SetBlockFast
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 557 : add support for
added support for handling VARBINARY types in BlobType . java to ensure proper handling of VARBINARY data types in the database
refactor cookie version handling in SetCookieSupport . java for improved readability to enhance maintainability and clarity of cookie version checks
added synchronization to the LibFFIContext class to ensure thread safety when accessing shared resources
replaced ` Vertx ` with ` ContextInternal ` in ` InboundBuffer ` and added thread check in ` InboundBufferTest `
updated the ` waited ` variable and added a new ` deadServerNoTimeout ` method in ` LdapTimeoutTest ` and ` LdapTimeout
updated usage message from ` UniocdeData . txt ` to ` UnicodeData . txt ` in ` CharacterName . java ` to
camel - 14284 - camel - cxf : set the operation name to " inout header " in camel - cxf
refactor multiple UI components to improve code organization to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and updated BoosterSet return value in BoosterSet to ensure proper handling of Bo
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 557 :
updated constants from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` across multiple classes to
removed the throw statement for the Compile stub invoked in JEP 359 support to simplify error handling by returning false instead of throwing an internal error
updated logging statements in TestIPCUtil . java to use a static final Log instance to improve code clarity and maintainability by centralizing
removed chunkedTransfer parameter from the request handling in NettyRoutingFilter . java to simplify the code and improve readability by eliminating unnecessary
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper resource management and prevent memory leaks
added a polling period to the VerificationAfterDelayImpl constructor and modified the VerificationAfterDelayImpl constructor to include a polling period to enhance error handling
added a compaction flag to Hive authorization configuration and modified conditional checks in SemanticAnalyzer and QueryCompactor classes to ensure proper handling of compaction states during
[ zeppelin - 3446 ] add jar file to dockerinterpreterprocess
hbase - 26969 addendum fix checkstyle violation in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
removed redundant calcXBounds method in BarLineChartBase , CombinedChartRenderer , and Renderer classes to streamline the calculation process by elimin
added try - finally block around reader . parse and reader . setContentHandler and reader . setErrorHandler in SimpleSAX . java to
added buffer release logic in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified the ` Java17TypeSignatureBuilderTest ` class to
added null and closed check before closing the ResultSet in JdbcExecutor . java to prevent potential NullPointerExceptions and ensure proper resource management
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to reflect the latest driver features and
fixed bug 137045 - usestringbufferlength : do n ' t check if there be no literal
removed error logging from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary error logging
updated the createDb method to return a connection object instead of a void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 11935 add option to control the maximum number of off peak compaction for hstore ( daniel dai )
added handling for " address " in BitstampDepositAddress and created a new DepositAddressJSONTest class for JSON unmarshalling to
replace IllegalStateException with response . abort in BufferingResponseListener . java to ensure the response is aborted when the buffer capacity exceeds
updated the path conversion from ` linkInDeletedDirectories ` to ` toAbsolutePath ( ) ` in ` ProjectView . java ` to ensure
replaced ` Event ` with ` MetricsEvent ` and updated related methods in ` DefaultMetricsRegistry ` to enhance event handling capabilities and improve thread
added support for multicast NetworkInterface in OptionsTest . java to ensure compatibility with network interfaces that support multicast functionality
added a loop to check for valid CheckSums in ChangeSet . java to improve code readability and maintainability by reducing redundancy
added a clone method to the BufferedChecksumIndexInput class to ensure that the clone method does not throw an unsupportedoperationexception
updated the calculation logic in Circle . java to use radius - based calculations to ensure that the radius is within the defined radius
added a check for the ownlink band identifier before setting mFrequencyBand in P25Channel . java and modified the return statement in P25
renamed tapSquareSize and tapRectangle variables to tapRectangleWidth and inTapRectangle in GestureDetector . java to improve clarity and
changed the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false in CFMetaData . java to disable replication on writing
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` and updated the ` Util ` class to include it to
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and corresponding tests in ` TraceCallableTests `
refactor FileActivity and FileDisplayActivity to improve error handling and message retrieval in FileActivity to enhance user experience by providing clearer feedback and
added a new method ` quiche _ conn _ stream _ writable ` to ` ForeignIncubatorQuicheConnection ` , and
added a new parameter ` true ` to the ` JavascriptContext ` class to enable the functionality of the ` JavascriptContext ` class
removed padding from the TableCell constructor parameters in BaseTextFormattingHelper and TableCell classes to improve code readability and maintain consistency in formatting
added a new file TracingAutoConfiguration . java to enable automatic tracing functionality in the Cloud Foundry application
added a new variable ` Para ` to the ` start ` and ` secondP ` in ` Submissions . java ` to enhance the
updated the ` getPrunedQueryableSegments ` method to accept a ` List < IndexSegment > ` parameter and modified the return logic to
refactor VertxBufferTest class for improved readability to enhance maintainability and facilitate future updates
refactor date extraction logic in MessageSubmissionChunk . java and add unit tests in AllHSMFTTests . java to improve code clarity and
changed the visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to include ` WriteResult ` and ` ActionOperation ` to
[ hotfix ] [ runtime ] fix npe in jobcoordinationservice
refactor ` bitsToHumanReadable ` method to use ` mimeType2HUmanReadable ` instead of ` bitsToHumanReadable ` to
refactor merge policy handling in TestUpgradeIndexMergePolicy and add a new test method for no pathological merges to improve code clarity and
added a check to skip processing if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error log message to include a reference to the documentation for CPU binaries cannot be run on a CPU to address performance issues related to CPU
updated the ` loadSettingModels ` method to accept an ` InputStream ` parameter for the ` contextInitialized ` method to enhance flexibility by allowing
added null checks for incoming fields and terms in FilterLeafReader to ensure robustness by preventing NullPointerExceptions during object initialization
add key size support to jcecrmfencryptorbuilder and add test for key size
updated IOException handling in NetSocketReader and SoftEndOfStreamException classes to use a more descriptive exception message to improve clarity of error reporting
removed multiple @ Inject annotations from multiple Java files to streamline dependency injection for improved code maintainability
updated the expected size from 9 to 10 in BundledDistributionTest . java and added database user assertions in PostgreSQLTest . java to ensure correct
[ hotfix ] [ stream ] add pipeline . name configuration option to streamexecutionenvironment
refactor scale calculation in OverviewState to use DeviceProfile ' s getCellLayoutHeight ( ) instead of workspacePageHeight ( ) for different
refactor IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and update temperature and ra
replaced ` getZone ( ) ` with ` getName ( ) ` in ` DataUpdateManager . java ` and updated method signatures in ` Storage
[ j2kt ] fix compilationunitbuilder . isqualified ( ) .
fix xhamster ripper for w / w / w / w / w / xhamster ripper
refactor loop to use an ArrayList for entity retrieval to improve performance by avoiding unnecessary iteration over entities
hhh - 15836 - oracle dialect do n ' t generate table name if schema be empty .
fix ( console ) : fix ` ` pathpart . endsWith ( ' ' ) ' ' ( # 4396 )
added a new parameter ` numberOfAllFiles ` and modified the ` FileMenuFilter ` constructor to accept an integer for the number of files to
[ java ] change termwindowlength to termlengthmask in networkpublication
refactor GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and facilitate future updates
added logic to increment the inPortalTicks based on creative status to ensure that the inPortalTicks value is correctly managed based on creative status
added compression functionality to the ClusterMonitorTileSkin class and updated spacing calculations in ClusterMonitorTileSkin . java to enhance visual clarity and ensure
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , and TransactionalSetCodecTemplate classes to improve code organization and maintainability
updated the calculation of lengthBits to use long type instead of int to ensure compatibility with larger data sizes and prevent potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify the condition for renderer presence
volume api : skip disk offering change when use custom service offering
replaced wildcard imports with a new LimitOrder class in HitbtcAdapters . java to improve code clarity and maintainability by using
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to clarify the purpose
updated the service name from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify
refactor name assignment in ConfigCategory . java for clarity to improve code readability and maintainability
updated the condition to check for preciseExchangeAmount in ParticipateAssetIssueActuator . java to ensure that preciseExchangeAmount does not exceed
added a condition to check for a maximum number of iterations before breaking the loop to ensure that the loop does not exceed the defined limit to prevent
added a new test method ` testHDF4 ( ) ` to ` HDFParserTest . java ` to ensure compatibility with Java 1.
added a new constant CALCITE _ 6092 _ FIXED and modified the cast logic in SqlOperatorTest to handle invalid TIME values to
reformatted the conditional statement in IDEEditor . java to improve code readability and maintainability
added methods to quiet close all AutoCloseable instances in CloseHelper . java to improve resource management by allowing multiple closeables to be processed
updated the parameter name from ` posBtn ` to ` common _ yes ` in ` RemoveFileDialogFragment . java ` to improve clarity
added a null check for srcWidth , dstWidth , and dstHeight in the drawImage method call to avoid potential NullPointerExceptions when both dimensions are
replaced ` ReflectionHelpers . callInstanceMethod ` with ` ReflectionHelpers . invokeInstanceMethod ` in ` UnsafeAccess . java ` to improve
updated regex pattern for hostname matching in GUIUtil . java and added new test cases in GUIUtilTest . java to improve regex accuracy and ensure
updated the handling of row conflicts in CachedRowSetWriter . java to improve clarity and consistency to enhance code readability and maintainability by
fix nullpointerexception when use pubspec . yaml ( # 1343 )
added a conditional check for reference equality in ReferenceMemory . java to ensure proper handling of reference instances when the reference is the same instance
added seed file injection logic and improved error handling in the Injector class to enhance the reliability of input path injection and provide clearer error
added a condition to hide the original view if it is a ItemInfo tag to ensure that the original view is not hidden when it is not
updated maxNodes and maxTrips calculations in DefaultLoopPolicies . java to ensure maxNodes is non - negative to prevent potential index out of
added logging for unsupported texture coordinate types in CombinedTexture and modified UVCoordinatesGenerator to check for supported texture coordinates to improve error handling and provide
added null checks for barcodeFile deletion and improved error handling in EncodeActivity , DecodedBitStreamParser , and MatrixUtil classes to enhance
added seek and close methods to TracingConsumer and TracingProducer classes to ensure proper resource management and avoid potential memory leaks
updated the substring logic in HandleDAOImpl . java to correctly handle the old prefix length to ensure compatibility with the new prefix length requirements
replaced the addition of a collection to the convertedValsList list to simplify the code and improve performance by eliminating unnecessary addition
added a deprecated constructor to AbstractTimer to indicate that the constructor should no longer be used in favor of a new one
added a warning message for Universal Gcode Sender version " nightly " to inform users when the Universal Gcode Sender is a night
updated the ` getResponsesSortedByRecipient ` method to include a ` sortByTeam ` parameter and modified the ` getResponsesSortedByRecipient `
updated return statement in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to cl
replaced ` CacheApplication ` class with ` CacheData ` in multiple files to streamline the codebase by consolidating related components into a single
replaced calls to ` getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java . vm ` to
refactor StatisticsServlet class for improved performance to enhance performance and maintainability of the application
updated RuntimeEnvironment to check for Android SDK version before updating configuration to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` StackManager
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions when accessing oldIndexName
added " com . sun . org . apache . xml . resolver . helpers . " and " com . sun . org . apache . xml
rename method ` save ` to ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming conventions
added logic to handle LoopExitNode instances in GraphUtil . java to ensure proper input processing for loop exit nodes
replaced instances of ` RecyclerView ` with ` WidgetsRecyclerView ` in ` SearchAndRecommendationsScrollController . java ` to
added a check to ensure the terminal is not supported before proceeding to avoid potential errors when the terminal is not available
updated ` CloudExitableDirectoryReaderTest ` and ` LBHttpSolrClient ` to use ` Integer ` instead of ` Long ` and
updated session validation checks in AbstractSessionCache and added session attribute handling in RemoveSessionTest to ensure that session data is valid before flushing on response
added a null check for columnNames before joining references in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when columnNames is null
replaced Vector with ArrayList for buttons and added action listeners in ButtonGroup . java to improve flexibility and allow for more flexible handling of
refactor UserManagerCompat and UserManagerCompatVN classes to extend UserManagerCompatVM and UserManagerCompatVNMr1 to
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , and HibernateDatabase classes to ensure compatibility with different database versions
updated ActionGraphCache to include a maximum mismatch rule count and improved error messages to enhance the clarity of mismatch information and provide clearer
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide detailed information about database operations in the Hive query plan
refactor RankingTopComponent and RankingUIModel to utilize setChartVisible and setSelectedEdgeRanking methods to improve
added handling for DisconnectMessage in HandshakeHandler and updated logging statements in NodeImpl to improve clarity and accuracy of disconnect message logging
added a new test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` and implemented a ` DELETE _ STORAGE _ GROUP
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated type validation logic to include a check for unknown variable types and improved error handling for missing types to enhance type validation accuracy and provide clear
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to facilitate testing by
refactor CountersManager constructor to use a wildcard import and update metadata buffer validation to improve code readability and maintainability by reducing complexity
refactor ` toString ( ) ` method implementations in ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to improve
added a null check for joinKeys in JoinDesc . java to ensure that the joinKeys array is not modified when it is not null
updated WebAuthnConfiguration to use a custom principal resolver for authentication handlers to enhance flexibility by allowing customizable principal resolution
added a new parameter ` searchPaths ` to the ` addSettingsFromFile ` method and modified the ` XcconfigParser ` method to accept
changed ` binarizedTrees ` , ` leafLists ` , and ` rootStates ` fields to final in ` Oracle . java ` to
[ hotfix ] [ checkpointing ] disable unaligned checkpoint when rescaling of unaligned checkpoint be complete
fix unsupportedoperationvisitor to throw unsupportedoperationvisitor if order _ by and map _ value _ CONSTRUCTOR be false
make compiletheworld test log configurable
loosen lambda capture restriction - allow lambdatest36
added support for MySQL databases in CreateTableGenerator . java to ensure correct handling of timestamp columns in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper resource management and avoid potential memory leaks
added a conditional check for stageNr in SimulationListHandler . java to set the motor ' s Ejection delay based on the stage number
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated its usage in ` SpringApplicationTests ` to improve
refactor TransactionUtil2 class for improved transaction handling to enhance performance and maintainability of transaction operations
updated ` validateIssuerClaim ` method to accept ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to improve flexibility
added null check for collection in ClusterState . java and modified return statement in ClusterState . java to improve robustness by handling potential null references
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn and AbstractRelationalDbmsHandler classes to enable configuration of foreign database and schema names for
[ java ] throw a clusterexception for unsuccessful leadership bid .
replaced static import of ShadowOf with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to
added error handling for null or empty root in FileSelection . java and refactored root selection logic in TestBugFixes . java to
[ 1.20 . 1 ] deprecate oninventorytick ( ) in iforitem and iforitemstack . oninventorytick (
add war resource support to ioutil . getwarresource ( )
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when the launcher is not initialized
updated widget binding logic in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and Launcher classes to improve widget
[ ecobee ] add new device capability for ecobee device ( # 10363 )
fix bug in operationsetserverdatasourcefacebookimpl . getprofilepage ( ) . getprofilepage ( ) .
added " AAPT " and " AAPT2 " environment variables in Genrule . java and updated test cases in GenruleTest . java
only dump access table if trufflecompileroptions . truffleinstrumentBranches be true .
added a null check before disposing the message in Validator . java to avoid potential NullPointerException when the message is null
added ` @ Getter ` annotation and modified ` init ` method visibility in ` TronStoreWithRevoking ` and ` TransactionCache
updated log warning messages in CoreContainer . java to clarify that log watching is not yet implemented for log4j and should be disabled
replaced printStackTrace ( ) calls with fail ( ) for cloning failures in CategoryPlotTests . java to improve error handling and provide clearer
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation . java and added a new class SmallByteArrayOutputStream . java for writing byte
use intmap instead of hashmap for vertexbuffer . getattribtype ( ) instead of string .
updated the JDBC connection configuration to use shutdown instead of territory to ensure proper resource management and avoid potential memory leaks
updated handling of null values for " FirstExchangeCompletedTimestamp " and " LastExchangeCompletedTimestamp " in RouteInfo . java to improve robustness
updated default language handling in TestHtmlTag and added new test cases in TestUseOption and C1 classes to improve code clarity and ensure
added a condition to check if the result is incomplete before proceeding to ensure proper handling of incomplete results and prevent potential errors
updated command - line arguments and improved time column name handling in HybridClusterIntegrationTestCommandLineRunner . java to enhance clarity and ensure
updated output format handling to use " svg . html " instead of " svg . html " to ensure correct file extensions are used based on output
updated condition in DeviceProfile . java to check if QSB is disabled to ensure proper handling of layout margins when QSB is not enabled
added ` equals ` and ` hashCode ` methods to ` AnimationList ` , ` SceneKey ` , and ` GltfModelKey `
added a ` _ date ` field to the ` AbstractGenerator ` and modified the ` HttpGenerator ` and ` HttpConnection ` classes to set
replaced ` Adler32 ` with ` CRC32 ` in ` Store . java ` to use ` CRC32 ` instead of ` Ad
cloudstack - 4892 : set default xen . heartbeat . interval to null to avoid npe
added a new constant ` ZERO _ AREA _ FIN ` in ` FinSetCalc ` and modified condition checks in ` FinSetCalc `
refactor ElasticsearchIO to use databind serialization for DocumentMetadata to improve performance and compatibility with newer Jackson versions
hhh - 14836 - add support for date _ trunc function in h2 and oracle dialect
added a check for the " Memory Pool not found " error in MetricUtils . java and updated error handling in MetricUtilsTest . java to
added a boolean variable ` useJavaScript ` and modified return statements in ` UserTests ` , ` FileAccess ` , and ` FileTreeNode `
updated error messages in ValidationTask . java for clarity and consistency to improve readability and maintainability of the code
updated BACKFILL path from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java to
updated return statements in PrecompiledContracts . java to use new DataWord instances instead of new DataWord instances to ensure correct data retrieval based on
refactor badges handling in AllAppsContainerView to use child views instead of adapter items to improve code clarity and ensure proper handling of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService and ServletContextHandlerTest for clarity to improve code readability and maintainability
removed conditional check for custom drawing identifier in Cling . java to streamline code logic for better readability and maintainability
truffle : remove assertion for lookupmodule in trufflejdkservices
added JUnit @ Ignore annotation to ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` method to mark tests as ignored
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTradesDemo , and ItBitTradesDemo to
do n ' t need to check if the value be present in the invocation context .
changed ` Utils ` , ` ApplicationUtils ` , ` Whois ` , and ` Whois ` classes to be ` final ` and `
add try - with - resources to prevent resource leak
replaced instances of ` getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java . util . Hashtable
added tableNameWithType parameter to the log warning message in RetentionManager . java to include the table name to improve logging clarity by providing
added trimming to the fragmentList size check to ensure that leading or trailing whitespace does not cause errors during execution
updated the method call from ` path . toFile ( ) ` to ` modFile . getFilePath ( ) ` in ` ResourcePackResourcePack .
refactor node and edge handling in PartitionToolbar . java for improved clarity and functionality to enhance code readability and maintainability by redu
refactor condition checks in RecentsView . java for improved readability to enhance code clarity and prevent potential null pointer exceptions
replaced Map < String , String > with BMIViewObject in CalculatorRestEndpoint and CalculatorServiceImpl classes to enhance functionality by
simplified the comparison logic in QueryCommand . java to improve code readability and maintainability
fix damage when damage be haybale
updated environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , NewElfDump , and NewElfDump to
add plugin - configuration option to allow custom plugin property ( # 1343 )
updated condition in HashJoinBatch to check if hashTable is not empty to ensure proper handling of empty hashTable scenarios
added validation for seconds in Timestamp . java and updated test cases in TimestampTest . java and TimestampTest . java to enhance timestamp validation and ensure
[ java ] use archivecontext instead of archivecontext in cluster service agent .
added a condition to check if the compilation condition is met before verifying the invoker type in LambdaForm . java to ensure that the method type
added new test methods for image handling in multiple test classes to enhance testing capabilities for image - related functionalities
refactor TogglableFlag and related classes to improve default value handling and property change listener functionality to enhance code clarity and ensure default
updated logging statements in DockerClientFactory to use parameterized parameters to improve logging clarity and enhance readability of error messages
added a check to return early if the platform is not Android to optimize performance by avoiding unnecessary processing on non - Android platforms
updated assertions in RoutesTest to use Hamcrest assertions for better readability to enhance readability and maintainability of the test code
added new interfaces ` BytePredicate ` , ` FloatPredicate ` , ` FloatToLongFunction ` , and ` ShortToLongFunction ` to provide functional
updated getSubsColor method to return a string instead of an integer value and added logging for subtitle limits in multiple video and video formats to improve
added a condition to check if the future is complete before deregistering it to avoid potential NullPointerExceptions when the future is incomplete
replaced the call to ` flush ( ) ` with ` output ( null , nop ) ` in ` AbstractWebSocketConnection . java ` to
added a check for the " redirected " flag in LoginActivity and SignupActivity to ensure that the activity is only started when " redirected "
added a new ` ShadowCheckedTextView ` class and implemented it in ` Robolectric ` to enable testing of ` CheckedTextView
added Serializable interface to ParserState and modified access modifiers in AccessorProperty and Property classes to ensure serialization compatibility and prevent serialization of these fields
added support for " identrustdstx3 [ jdk ] " in VerifyCACerts . java to enhance security by enabling
removed redundant calls to context . TEMPDIR _ CONFIGURED and context . TEMPDIR _ CONFIGURED in WebInfConfiguration . java to
added import for StringUtils and updated the nick initialization in Occupant . java and added a test in MultiUserChatTest . java to
refactor QuicSession and related classes to simplify connection handling and improve readability to enhance code clarity and maintainability by reducing unnecessary
replaced instances of ` writer . setMergeScheduler ` with ` writer . getConfig ( ) ` in ` CreateIndexTask . java ` to
refactor ICU4JImpl and TextPosition classes to improve readability and maintainability to enhance code clarity and maintainability by reducing
added handling for ComputedDateValue and NumericValue in AddDefaultValueChange . java and AbstractDatabase . java to enhance functionality for handling date and
refactor NbtScoreboardIoService class to improve code organization to enhance maintainability and readability of the code
( chore ) camel - aws2 - saml : do n ' t throw an exception if the service provider metadata be already exist
changed the visibility of the printer variable from private to protected and added a new method ` createPrinter ( ) ` in ` GraphPrinterDumpHandler
added BigDecimal import and updated average price calculation in HuobiAdapters . java to ensure accurate calculation of field cash and average price in order
updated projection operation to use target field instead of name in projections and modified field handling in TypeBasedAggregationOperationContext and TypeBasedAggregationOperation
added a check to prevent duplicate player entries in the FakePlayer class to ensure that only one player is added to the correct viewers are processed
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve code readability and maintainability by centralizing state management
refactor SPDYClient to use AsyncSPDYConnection and ISession for connection management to improve code clarity and maintainability by
[ 3.0 ] fix nullpointerexception in protostuffobjectoutput . writeObject ( null )
pdfbox - 4892 : fix a suggest by valerybokov
refactor BarrowmanCalculator class for improved clarity to enhance maintainability and readability of the code
added a condition to return early if no axes are present in the DrawAxis class to optimize rendering by avoiding unnecessary processing when no axes are
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap in Texture . java to improve code clarity and maintainability by
updated method call from ` returnToWorkspace ( ) ` to ` returnToWorkspace ( wi ) ` in XmlWorkflowServiceImpl . java to
refactor CustomUrlJob to support HTTPS connections with a custom SSL context and hostname verifier to enhance security by allowing connections to HTTPS URLs while bypassing standard SSL verification
added a method to retrieve the getRealUsedClockRateString ( ) method in multiple classes to improve clarity and consistency in handling clock rate strings
refactor TextureAtlas class to improve code organization to enhance maintainability and readability of the code
updated method names from getProductNameForBuildTargetNode to getModuleName and added a method to set the module name in AppleLibraryBuilder to
[ hotfix ] [ test ] fix race condition in testslot
# 1343 - add test for findids with inheritance
replaced the usage of ` closeFrame ` with ` rbuf ` in ` WebSocketServletRFCTest . java ` to improve readability
[ wasm ] fix nullpointerexception in functionnode . referencestack ( )
added a ` ttl ` parameter to the ` ClickHouseLogCollectClient ` and updated the query execution to include a default value to enhance
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure correct serialization
replaced instances of ` QueuedThreadPool ` with ` Handler ` in ` DeploymentExceptionTest . java ` to utilize the latest Jetty
added error handling for initialization of Fresco and NearbyController in CommonsApplication and NearbyController to improve robustness by
added a null and empty check for objectName in PostgresDatabase . java to ensure that objectName is not null or empty before processing to avoid potential
replaced string concatenation with string concatenation for error messages to improve clarity of error reporting for file access issues
[ hotfix ] [ table - planner - blink ] [ table - planner - blink - blink - table - planner -
updated variable names and added null checks for subject name in KeyTool . java and Resources . java to improve code clarity and enhance error handling
mark the RuntimeOptions class as deprecated since 23.0 to indicate that the class is outdated and may be removed in future versions
replace byte buffer encoding with byte conversion method for string conversion to improve code readability and leverage built - in character encoding
added a new interface ` PermissionEvaluator ` for managing permission checks in the security expression to facilitate the management of security permissions within the
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader . java ` and modified prompt handling in `
added a condition to check if the server is not in onlineServers to ensure that the server is not in the online list before proceeding
updated exception types from SIGN _ ERROR to BLOCK _ SIGN _ ERROR across multiple files to improve clarity and consistency in exception handling related to block
refactor ExpandWar . java to improve URL connection handling and streamline file management to enhance reliability and maintainability of the code by ensuring
improve error handling in fullnettyclientresponse . decode ( )
changed the position of the wrapper from center to centerAbsolute to ensure proper alignment of the spinner in the UI
[ flink - 20660 ] [ network ] fix memory segment leak in networkbufferpool . recycle ( )
replaced manual MBeanServer initialization with a static variable newMbeanServer in TestJmxIntegration . java to improve code readability and maintain
replaced JUnit runner with JUnit ' s RetryTestRule for improved test reliability to enhance test reliability by allowing retries on
modified the autoCommit check in CallTask and QueryStateMachine classes to use transactionManager ' s required transaction ID instead of a boolean to ensure
updated import statements in CsvFieldType , CsvTable , and CsvTableScan classes , and added a new package - info . java file to improve
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove unused ProcessingTimeCallback from streamtasktimertest
refactor URI handling in Request . java and add a test for the CONNECT method in RequestTest . java to improve code clarity and ensure
updated the ` lastSeenVersionCode ` variable to use ` WhatsNewActivity ` and added a method to retrieve legacy available storage points to
added methods for managing session availability and unavailability in SessionManager to improve session management functionality and ensure proper priority management for client sessions
added a new package to scan " liquibase . pro " in ServiceLocator . java to enable scanning of Liquibase packages in
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` MainApp ` and ` SyncedFolderProvider `
added a new parameter ` args ` to the ` loadWithNewGlobal ` method and modified the ` loadWithNewGlobal ` method to accept
refactor relative path handling in FastPathResolver . java for improved clarity and consistency to enhance code readability and maintainability by redu
replaced ` length ( ) ` with ` toIntExact ( ) ` in ` HiveClientModule . java ` to ensure accurate size calculations for
rename method ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizationDepth ` across multiple classes to improve clarity and consistency in
added support for " LAG " functions in UnsupportedOperatorsVisitor and implemented a test forLeadParams in TestWindowFrame to ensure unsupported operations are
clear the headers from proxyRequest in AbstractProxyServlet . java to ensure the proxy request headers are reset before processing
added a check to skip the SA attach test in CompressedClassSpaceSizeInJmapHeap . java to ensure that the test does not
added null checks for bgColor in GraphicsDevice . java and created TranslucentWindow . java in GraphicsDevice . java , and created a
refactor UserInfoActivity to handle cases where user information is not available to improve user experience by providing clear feedback when no information is available
added custom field serialization support for Precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers cannot be used on different machine
[ hotfix ] [ connectors / kafka ] [ table - planner - blink ] add support for append mode property
added a new test class ` MultipleOutputsIntegrationTest ` for testing multiple output group scenarios to ensure that named output groups and output groups are correctly
updated content comparison logic in FileSettings . java to handle old content correctly to ensure proper formatting of settings when changing values
[ stateless ] fix nullpointerexception in statelessvalidationcontext and statelessflow
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for improved performance
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve exception handling in modelloader . loaditem ( )
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
added a conditional check for graphics type before retrieving the current pixel scale in PSurfaceJOGL . java to ensure proper scaling behavior for 2 -
refactor RussianLowerCaseFilter class for improved clarity to enhance maintainability and readability of the code
removed unused server and client properties from CsvBulkLoadToolIT and QueryUtil classes to streamline configuration handling and improve code clarity
replaced ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` displayName ` to ensure consistent file path handling across different
littleendien : add support for seeking wav file in wavloader
added a boolean parameter ` repeatFirstLineIndent ` to the ` ColumnText ` class and updated the ` setIndent ` method to accept a
changed the type of the equals method from ` Oid ` to ` Object ` in ` Oid . java ` to ensure proper type casting and avoid
simplified the initialization of metrics and health checks in HikariPool . java to improve code readability and maintainability by reducing
use controlflowanchored instead of controlflowanchornode instead of controlflowanchornode
added a call to set focus painted to false in WindowsPlacesBar . java to improve user interface responsiveness by preventing unint
added a check for UniqueConstraint and ForeignKey type in DatabaseSnapshot . java to ensure proper handling of specific object types in the database snapshot logic
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated ` AccountAPI ` to
[ 3.0 ] add dc . title to group rest if it contain a dc . title mdv
refactor GapInsertionDetector to return a new HypothesisUtterance object instead of throwing an error if there are no
add unit test for camel - ruby script engine .
updated thread count from background to database update threads in FeedRefreshUpdater . java and added getter and setter methods in ApplicationSettings . java to improve
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the
updated the System class name from " Ljava / lang / System " to " Ljava / lang / System " to ensure compatibility with the
hhh - 13644 - fix nullpointerexception in procedurecallimpl . getresultstream ( )
added a null check for the API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added new classes BinaryFrameGenerator and TextFrameGenerator for WebSocket frame generation to enhance WebSocket functionality by supporting binary and text frames
refactor WebDriverWait instantiation to use a new method ` WebDriverWait ` to improve code readability and maintainability by reducing redundancy
replaced randomDouble ( ) calls with randomDouble ( ) calls in RandomGeo3dShapeGenerator . java to improve randomness and ensure
added a static method ` keepAlive ( ClassLoader loader ) ` to the ` ResourceBundle ` class to manage resource loading delays effectively
changed the return value from false to true in SQLiteDatabase . java to ensure the method correctly indicates a successful operation
added a new constant for the ` isUtilConcurrentSig ` in the ` FindJSR166LockMonitorenter ` class to
added MkdirStep to multiple classes to ensure the correct directory structure is used for file operations
updated error handling in MeshLeveler . java to include additional error messages to improve clarity and debugging by providing more context in exception messages
[ drools - 4892 ] skip kie - pmml dependency from classpath ( # 4892 )
corrected the spelling of ` locationMode ` and ` thermalStatus ` from ` locationMode ` to ` thermalStatus ` to
updated the temporary directory creation logic in MountableFile . java to use a constant for macOS to improve code readability and maintainability by
added a boolean flag ` USE _ MEMORY _ MAPPED _ BUFFERS ` to ` PrjFileReader ` and ` CatalogManager `
added a null check for the model ' s organization in PluginManager . java to ensure that Plugis is required to have an organization in
updated copyright year in SepPostingsWriterImpl . java to clarify the copyright notice for users
deleted the TerminateWebSessionListener . java file to the functionality was deemed unnecessary or redundant
updated the method to use the system property " java . class . path " instead of " " to ensure the child process executes with the correct
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java `
added a new test method ` dontChangeJavadoc ( ) ` to ` AddLicenseHeaderTest . java ` to address issue # 3198
changed the LAUNCHER3 _ PHYSICS flag from false to true to enable the launcher feature for improved user experience
added a ` noPrint ` element to the ` HtmlThreadInformationsReport ` class to enhance the visual presentation of thread information reporting
updated LUCENE _ MAIN _ VERSION from 3.1 to 4.0 and changed TEST _ VERSION _ CURRENT from LUCEN
added ` symbolicator ` and ` task ` fields to ` BsdDebuggerLocal ` and modified platform detection logic in ` PlatformInfo ` to
use weakreference to avoid memory leak
log message when connection reset by peer
[ java ] use commonconfiguration . admin _ directory _ name for client conductor .
added a break statement in TouchImageView . java to ensure proper flow control in case of fall - through behavior
chore : update gapic - generator - java to 2.0 . 0 ( # 217 )
simplified the flush ( ) method in FeedableBodyGenerator . java to simplify the SSL handshake process by eliminating unnecessary checks
added conditional checks for variable variance in TypeUtils . java to ensure correct handling of generic type variables in type calculations
replaced NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush . putIfAbsent to improve thread safety and performance in memory management
added null check for tree . errs before calling memberEnter and modified error count logic in multiple classes to improve error handling and provide clearer error
changed the browser default value from NO _ BACKGROUND to NONE in BugInfoView . java to ensure the browser is visible when no background is available
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
added checks for negative bounds in IntegerStamp . java and created corresponding tests in IntegerStampTest . java and IntegerStampTest . java to ensure
refactor ITextUserAgent to use a readStream method for reading input streams to improve code readability and maintainability by centralizing input stream
refactor CaseStmtToken to improve variable handling and variable definition in expression generation to enhance variable variable management and improve code clarity
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by handling potential InvalidKeyException or UnsupportedOperationException during handshake
updated variable names from " AdditionalDependencies " to " psapi . lib " in WinGammaPlatformVC10 . java to improve code readability
updated string concatenation for comment and newline in StringUtilsTest . java to ensure consistent line endings across different operating systems
added encoding and output encoding settings in TemplateEngineFreemarker and updated script formatting in ApplicationController to ensure proper handling of special characters
pdfbox - 4892 : use byte [ ] instead of byte [ ] for good readability
do n ' t use static field for hold _ samples and type in sample senderfactory .
added a null check for the testngEmailableReporter property before adding it to the EmailableReporter to avoid potential NullPointerExceptions when the system
added a ` quoted ` flag to the ` CommandLineBuilder ` class and updated the test cases in ` CommandLineBuilderTest ` to ensure proper handling
changed access modifiers of interfaces from public to package - private in several classes to allow access to these interfaces from other packages
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to enable dynamic number of reduce tasks based on fetchers
fix ( generator ) : fix nullpointerexception in schemageneratorhelper
updated the file version from 505365 to 532077 in SaveService . java to reflect the latest version of the application
added support for " GL _ RGBA32F " and " GL _ ARB _ texture _ float " extensions in FloatTextureData . java
make fileserver . write ( ) and fileserver . closefile ( ) more robust .
added a null check for outputDirectory and jarStream before setting the output directory to avoid potential NullPointerExceptions when outputDirectory is null
updated the ` getFuture ` method to use ` PerfStatsCollector ` and added a measure for the sqlite metric to improve performance tracking of
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java ` and
[ geos - 6757 ] add a new enum for resourceerrorhandling to provide a way to handle resource - related error
modified buffer position calculation in RAMInputStream and added EOFException handling in TestRAMDirectory and BaseIndexFileFormatTestCase to ensure correct buffer position
updated error messages in DefaultServlet and JspServlet to include request URI and request URI to improve error reporting by providing more context for missing resources and
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and added AccessControlContext class for permission testing to enhance security
updated CHECK _ EVERY _ N value from 10000 to 0xFFFF and added logging for HardRefCache clearing functionality to improve memory management and
hbase - 25836 fix testsplittransaction . openhregion ( )
added null check for ` currentSelectionArea ` in ` CompatibilityEngine . java ` to prevent potential NullPointerException when ` currentSelectionArea `
added a new test method ` testJaasDemo ` to the ` DemoModulesTests ` class to verify the functionality of the ` J
updated folder creation logic to include spanX and spanY in CellLayout . java to ensure folder creation only occurs when spanX and spanY
refactor CacheOffHeap class for improved performance to optimize memory usage for better performance
add a check to prevent the database from being re - opened when a table depends on another ID to ensure that the database is not supported and
updated TiledLoader to check for row index within currLayerHeight and added logging for ignored XML gid values to improve error handling and provide clear
fix thread safety issue in inmemorytilecache . setworkingset ( )
added a new Java class ` Solution ` to implement a solution for determining the minimum and maximum steps starting stone to demonstrate the
added a new interface ` AddressChecker ` and refactored the ` TrackerRequestProcessor ` to utilize it to check if an IP
remove redundant call to rendertype . getTranslucentmovingblock ( ) in ForgeHooksClient and MultiLayerModel to streamline
[ ui ] remove tag from config entry ( # 3396 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in multiple classes to ensure consistency in data type representation across
added a null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents is null
refactor ` isSingle ` method to use a new ` isSingle ` method to improve code readability and maintainability by reducing duplication
added a ` failFast ` parameter to the ` DockerClient ` method and improved logging in multiple classes to enhance flexibility in Docker client
added ` resourcesMode ` parameter to ` AndroidMetadata ` and modified ` AndroidMetadata ` constructor to accept a ` String ` parameter to enhance metadata
replaced DateUtils . truncate with Calendar . getInstance ( ) and modified date handling in HistoricProcessInstanceQueryImpl . java to improve date
updated the method call from ` importProject ( projectFile ) ` to ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting and user feedback during command execution
modified TreeMap . java to adjust import statements and class references to enhance clarity and functionality of tree operations
added methods to manage asynchronous stack trace functionality in the application to enhance debugging capabilities for improved error handling
added a method to set the glow color for focused and pressed outlines in BubbleTextView and Folder classes to enable customization of
updated the style class settings for links and desc in LinkedFilesEditor . java to ensure consistent styling of file - row - text in the
updated return type from " java . lang . Short " to " java . lang . short " in AbstractJdbc2ResultSetMetaData . java and
removed unnecessary try - finally block for file writing in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code by elimin
added null check for _ info before determining upgrading status to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to allow instantiation of ShadowLocation with a specified provider
updated maxRAM calculation for deviceRam in LauncherPreferenceJavaFragment . java to ensure maxRAM does not exceed available limits for
update localmapstatsprovider to use proxyservice . getdistributedobjectnames ( )
added logging functionality to FileProfileActivator to enhance debugging capabilities by providing detailed logging information
updated the parameter name from " noname1234 " to " invalid _ " in the addToBody method to clarify the purpose of the
replaced ` Collectors . toList ( ) ` with ` Collectors . toSet ( ) ` in ` GuildImpl . java ` to ensure consistency
updated return value from - 1 to 1 in ExpandableUploadListAdapter . java to accommodate a maximum number of uploads to improve upload
added unit tests for the ` delete ` method in ` DashboardUserMapperTest . java ` to ensure correctness of the ` delete ` functionality
[ 3.0 ] update instructorfeedbackresultspagedata to use primaryparticipantindex instead of recipientidentifier
llvm : add support for auto - deref handle in llvmstorenode
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the ` bufferSize ` variable
added usage help to the Terasology command and removed the printUsageAndExit method from the command line to improve user experience by providing guidance
refactor action bar title setting logic in DrawerActivity . java for improved readability and maintainability to enhance code clarity and ensure
refactor CommandLineParserTest class for improved clarity to enhance maintainability and readability of the test code
added constants and interpolation for animations in QuickstepAtomicAnimationFactory , PortraitStatesTouchController , and PortraitStatesTouchController to
updated method call from ` Character : : toUpperCase ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to
removed the ` setFrame ` method and ` release ` class from the ` CWrapper ` class to streamline the code by eliminating
added a check for constant values in the Check . java file and created a new ValueTest . java file to ensure proper handling of constant values
refactor MontgomeryMultiplyTest , MontgomeryMultiplyTest , and TestSquareToLen classes to improve code organization
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null check
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string formatting in UploadBuild . java to improve clarity and consistency to enhance readability of error messages for better debugging
updated bounds calculations in DeviceProfile . java to account for the search bar ' s position to ensure proper layout alignment with the search bar ' s
simonstewart : do n ' t try to connect to pulseaudioindexception if idle timeout be 0
replaced direct calls to ` getLauncher ( ) ` with ` getLaunch ( ) ` in ` OverviewCommandHelper . java `
added a method to retrieve the source group in the AppleSource class to ensure that the getSourceGroup ( ) method returns the presence of the
increased the timeout duration from 22ms to 32ms in TestSimTriggerIntegration . java to improve the responsiveness of the trigger
updated RunLengthEncodedBlock parameters from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to ensure
added null checks for ` bestSoFar ` in ` AbstractNodeCostSearch . java ` and modified the return logic in ` AbstractNodeCostSearch
added a condition to skip processing specific component types in ResourceEditorView . java to ensure compatibility with additional component types in the application
replaced UiThreadHelper with LauncherModel in DragView and FloatingIconView to utilize LauncherModel instead of UiThreadHelper
added a null check for commitPoint in ReplicationHandler to ensure commitPoint is initialized before use to avoid potential null pointer exceptions
added unit tests for ` getImiForSlot ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManager ` to
refactor debug methods in SimpleHostRoutingFilter to improve code readability and facilitate debugging of HTTP requests
added destory ( ) methods to multiple IndexSegment classes to ensure proper resource management and closure of resources to prevent memory leaks
[ issue # 4896 ] fix test failure in normalmessagesendandRecvit ( # 4896 )
replaced ` Charset . forName ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer . java ` to improve code readability
hbase - 23278 bulkload should crash if multi - file be not find ( jesus camacho rodrigue
added a nullable field for the commission parameter in DefaultWithdrawFundsParams and updated its usage in RippleWithdrawFundsParams
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
added multiple catch blocks for SolrServerException , IOException , and KeeperException in LoadSolrBuilder , and SolrLocator classes to improve error handling by
added error handling for abstract method invocations in Java2TypeScriptTranslator . java to ensure proper handling of method parameters and prevent unintended method
added StacklessLogging for file session management in TestFileSessions . java to improve traceability of file session storage operations
added serialization support and improved type handling in SqlDataType and entities to enhance data integrity by ensuring proper serialization and deserialization of character entities
renamed SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added a check for null and empty claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling cases where the claim
updated import statements and modified constructor parameters in HiveFilterSetOpTransposeRule to use HiveRelFactories instead of FilterFactory to improve compatibility with
refactor type hint handling in UpdateMapper and add unit tests for null values in UpdateMapperUnitTests to improve code clarity and ensure correct
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest and CoreAdminRequest classes to improve code clarity and
initialized ` transformers ` and ` locators ` lists in ` ModDirTransformerDiscoverer . java ` to ensure ` transformers ` and ` loc
updated string concatenation in AbstractQuerydslProcessor . java for clarity to improve readability of error messages for better debugging
refactor pegraphdecoder to use getcallstack ( ) instead of getcallerbytecodeposition ( )
rename ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in naming con
camel - 16462 : camel - mailmessage should use objecthelper . getIdentityhash ( ) instead of objecthelper . dumpmessage
http : / / issues . apache . org / jira / browse / amq - 4896 - fix npe in amq
updated getIdentifierName ( ) to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure the identifier name is correctly associated with the property
added a new file ` WaveGeneratorActivity . java ` and modified ` InstrumentsFragment . java ` to use it in ` InstrumentsFragment
added logging for missing sheets and improved null checks in KeyedProperties . java and SheetOverlaysManager . java to enhance error handling and
fix ( kubernetes - client - dsl ) : add test for execwatch and log
added a new test method ` testNoWriter ` to ` TestReplicationHandler ` to detect no index and create a new one to ensure that
added a call to dispatchMethodKernelOkra in GraalKernelTester . java to ensure proper handling of method calls during method execution
updated the ` DefaultDnsClient ` and ` DefaultMxRecord ` classes to use ` Comparable < MxRecord > ` instead of ` Object
refactor thread creation in XToolkit to use a privileged action for improved readability to enhance code clarity and maintainability by
added validation and dropdown setting for Linux6 in SelectBox . java and UITest . java to ensure the SelectBox is validated and set
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing detailed stack trace information
updated the ` createState ` method to include a ` SplitState ` parameter and modified state creation logic to include a parentSplit parameter to enhance
changed the ` connectionState ` variable from ` int ` to ` volatile int ` in ` SSLSocketImpl . java ` to ensure thread safety
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a new endpoint ID in EnableIntegrationTests . java to
refactor MemoryStack and MemoryUtil methods for better memory allocation handling to improve memory allocation efficiency and maintain consistency in memory operations
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error reporting
[ java ] fix nullpointerexception in unusedmodifierrule . java
refactor logging statements to use method references instead of lambda expressions to improve code readability and reduce boilerplate code
added ssl parameter name to Parameterized . Parameters in AbstractHttpClientServerTest . java to provide more detailed SSL configuration for HTTP client tests
refactor exception handling in TransformationHelper . java for improved clarity and error logging to enhance code robustness and provide clearer error messages
updated variable name from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to
updated equality check in Point . java to use Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by utilizing
added null check for outputRoot in FileProcessor . java to prevent potential NullPointerException when outputRoot is null
pdfbox - 2852 : add annotationfilter interface for interactive annotation
refactor StackTraceCleaner class for improved clarity to enhance maintainability and readability of the code
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is set based on file extension
hhh - 14836 - skip test for oracle and sql server in select expression
updated the upgrade method to include slotSize parameter and added null checks for stats in ForkController . java to improve clarity and ensure proper handling
added ` getStats ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` AtomicLong ` , and ` DocBuilder
[ scb - 2338 ] add long polling option to kie client ( # 2338 )
refactor scrolling logic in PagedView , BaseOverview , and LauncherInstrumentation classes to improve code readability and maintainability while ensuring
updated UnlocksDialog initialization in PausedDialog . java and added a button in PausedDialog . java to improve clarity and functionality of
added a call to clear the drop list in PlayerEventListener . java to ensure a clean state for player events
added a constant ` DEFAULT _ PARAM ` to the ` StreamResult ` class to provide a default value for the input source parameter
changed exception type from MalformedURLException to IOException in the testNormalizeOrder method to ensure proper exception handling for malformed requests
updated printBoth method to include chunk type and added a buffer flip in LocalTsFileInput . java to ensure correct output formatting based on chunk
added exclusion of Swift headers in UmbrellaHeader and updated test assertions in ProjectGeneratorTest to enhance security by preventing exposure of Swift
reformatted the onHttpHeaderError method signature in GrizzlyAsyncHttpProvider . java to improve code readability and consistency
added encode ( ) method to RequestPlugin . java to ensure proper handling of special characters in request processing
updated SQL expression handling in RolapNativeSql and RolapNativeTopCount classes to support DB2 compatibility to ensure correct expression formatting for DB
added validation for null or blank password in LdapAuthenticationProviderImpl and created a new TestLdapAuthenticationProviderImpl class for testing LDAP authentication to ensure
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a conditional check to clear complexWriters in ProjectRecordBatch . java to ensure that complexWriters are cleared when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serialization warnings related to these classes
changed the visibility of the ClassGraphClassLoader class from public to public and modified the condition in ClassGraphClassLoader . java to enhance class loading logic
added a check for " _ errors " in the ErrorResponseException class and modified the return statement in the return statement to improve error handling and ensure
added a constructor to EventSourcingRepository that accepts aggregateFactory , aggregateFactory , and snapshotTriggerDefinition , and repositoryProvider to facil
refactor binary node handling in Attr . java to improve code readability and maintainability
updated text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of current and search text to improve robustness
added standby mode support to NuvoConnector . java and updated command handling logic in NuvoHandler . java to improve command management and ensure
tmi - tiff : use tiffBaseline . PLANARCONFIG _ CHUNKY instead of tiffextension . PLANARCONFIG
added a call to is . close ( ) in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
add averageutil class to make it easy to use it
added SigInt and SigIntBarrier classes to implement thread - safe execution of tasks in concurrent environments
refactor graph handling in ExporterGEXF to use a hierarchical graph model to improve compatibility with hierarchical graph data handling
updated TCTLSeparatedProtocol to use Text instead of byte array and replaced byte array with ByteBuffer and Text objects to improve performance and
[ 3.0 ] add support for rubric response with invalid index
updated the condition to check for ORIGINAL _ CASE in CatalogComparator . java to ensure compatibility with both DB2 and SchemaAndCatalogCase
refactor BrowserMobProxyTest to improve test setup and teardown methods to enhance clarity and maintainability of the test setup and teardown processes
updated the formatting of criticalErrors in ModelRepositoryImpl . java to use Integer . toString ( ) instead of MessageFormat to improve code readability and
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
refactor internalbytearray and trufflestring classes to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in outedgesfunction
refactor Java6AbstractBDDSoftAssertions , Java6AbstractStandardStandardSoftAssertions , and Java6JUnitSoftAssertions
deleted the ` ClassA \ 314 \ 201 . java ` file and added a new ` DiacriticTest . java ` class
[ java ] fix race condition in cluster membership test .
added reactor reader handling and modified condition checks in DefaultMaven . java and DefaultGraphBuilder . java to improve error handling and ensure projects are
updated SSL scheme check in ServiceRegistryConfig and added dynamic configuration checks in TestServiceRegistryConfig to ensure proper handling of HTTPS schemes and improve test
refactor Mockito class for improved readability to enhance maintainability and facilitate future updates
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to ` ServletHolder ` and refactored the servlet initialization logic to improve thread safety and
added logging functionality and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve monitoring and monitoring of server time changes
added support for the " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets For JavaServer Pages ( tm )
added a null check for the component form before deregistering animations to ensure that the component form is not null to avoid potential NullPointerExceptions when the
updated ` ShadowBitmapFactory ` and ` ShadowCanvas ` to accept ` BitmapFactory . Options ` as parameters to enhance bitmap processing capabilities and improve
[ java ] use configuration . number _ of _ messages instead of configuration . number _ of _ messages .
added click handling and linkification methods in TimelineArrayAdapter to improve user interaction by allowing click events to enhance user interaction by allowing text links
added " text " parameter to the unmodifiable data types in PostgresDatabase and modified condition checks in NumberType and ColumnSnapshotGenerator to ensure compatibility
fix entryprocessorbouncingnodestest ( # 3683 )
updated method names from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
added null check for thingRegistry before adding the result in CreateBridgeServlet . java and improved error handling in CreateBridgeServletTest . java
replaced direct calls to ` curi ` with ` cs ` in ` PreconditionEnforcer . java ` and ` CrawlServer . java
added null checks for getDisplayName ( ) in multiple classes to ensure robustness by preventing potential NullPointerExceptions
updated SpriteBatch constructor to accept a ShaderProgram parameter instead of creating a new one to enhance flexibility in shader management by allowing custom
added " - c synchronous _ commit = on " options in TestUtil . java to enable synchronous commit functionality in the application
added type coercion functionality to the SortedSetTypeCoercer class and updated the fillSortedSet method to throw coercion exceptions for
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing clearer
updated the condition in URLPathEncoder to include a minimum value of 256 to ensure that the character is within a valid range to prevent potential errors
updated the port assignment and modified the registration of fragment storage in UserContext . java to ensure the correct port is used and improve code clarity
updated the test method to return an empty map instead of an empty map to ensure proper handling of empty clusters in the HostResourceProviderTest
[ hotfix ] [ yarn ] remove logging from yarnentrypointutils . loadconfiguration ( )
refactored the initialization and style initialization logic in SIPCommFrame . java to improve code readability and maintainability by consolidating initialization
deleted the ShadowHtml class and updated its implementation in RobolectricBase . java and HtmlTest . java to streamline the code by
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
refactor logger initialization to use h3 and quic logger for improved logging clarity to enhance code readability and maintainability by using
modified the visibility of the ` addListeners ` method in ` MockSettingsImpl ` and added a new test in ` MockSettingsImplTest `
refactor StateHandleStore class for improved readability to enhance maintainability and facilitate future updates
updated import statements from ` org . eclipse . jetty . util . Constraint ` to ` org . eclipse . jetty . http
improve error message when edit a student with no section
add try - with - resources to avoid resource leak
( chore ) camel - 1145 : fix port not available in test
added ` BuildTarget ` and ` BuildTarget ` parameters to ` JarBuildStepsFactory ` and ` JarBuildStepsFactory ` classes to enhance
corrected the spelling of " validating - cerficates " to " validating - cerficates " in the error message to
cloudstack - 4892 : remove the getpagesizeval method from listcapacitycmd # getpagesizeval ( )
added a case for CLOSED in IteratingCallback . java to ensure proper handling of closed callbacks in the iteration process
added a new boolean field ` isAuthorized ` and updated its assignment logic in ` AccessControlContext ` to ensure that the access control context is correctly
updated event sending logic in OSGiDeployer to handle non - AbstractOSGiApp instances to improve robustness by ensuring proper handling
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type is set for different
refactor argument types and assumption handling in OptimizedCallTarget . java to improve clarity and functionality to enhance code readability and maintainability
added a new file CubocDesktop . java and refactored ImmediateModeRenderer20 in Map . java and MapRenderer . java
updated file resource paths in PolicyMonitorTest . java to use ` File ` instead of ` MavenTestingUtils . getTestResourceDir ( ) `
added a call to removeAllFiles ( ) in TrashbinActivity to ensure all files are removed from the trashbin list
updated the method call from ` org . eclipse . jdi . bootstrap . virtualMachineManager ( ) ` to ` com . sun .
truffle : add checkglobalnode to check global variable storage
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified the ` dispatchUserEvent ` method to accept an additional
updated the maximum burn amount calculation to use a constant MAX _ BURN _ TARGET _ LOWER _ FLOOR instead of a hardcoded
refactor UniqueConstraintSnapshotGeneratorSnowflake to use a wildcard import and streamline import statements to improve code readability and maintainability by
refactor item assignment logic in DMLTransformer . java to handle empty insert statements to improve clarity and correctness of SQL selection based on
updated import statements in ServiceValidateControllerTests . java for improved readability and consistency to enhance code clarity and maintainability by using wildcard
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a method to hide the default name when the function
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic type parameters in multiple classes to use generics to enhance type safety and improve code clarity
make sure we do n ' t sendHolepunchpacket if it be a callpeerjabberimpl
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest . java ` to validate the functionality of ` PGobject `
updated PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY instead of BAD _ REQUEST and modified response handling in PasswordResetEndpoints . java to ensure
replaced direct element retrieval with a direct document element retrieval to improve code readability and maintainability by directly accessing the document element
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
replaced ` timeInSec ` with ` timeMillis ` in ` Isochrone ` and ` prevTimeMillis ` in ` SPT
fix the lightRelay to be able to bind to the lightRelay . close # 3353
added a new ` Chainer ` class and updated related methods in ` CollectionSubject ` , ` MySubject ` , and ` contains ` to
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated the recordedTime variable to include a value of 619315200000L to ensure accurate tracking of the recorded time
added a condition to resize the status if the terminal type starts with the Windows terminal type to ensure the status is only updated when the terminal is
added a conditional check before setting host versions in UpdateDesiredStackAction . java and updated repository version state settings in RepositoryVersionState . java to
updated file paths in IntegrationTestCase , JsSourcesErrorTest , and JsInteropRestrictionsCheckerTest to use a constant for JRE _
replaced HashSet with LinkedHashSet in multiple Java files to ensure predictable iteration order and improve code readability
removed exception handling in OperationServiceImpl . java to simplify the code by eliminating unnecessary try - catch block
reformatted the method call in KnativeEnvironment . java to improve code readability and maintain consistency
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to clarify the purpose of the executor
added a call to ` connect ( ) ` in ` CloudSolrClient ` and a corresponding test in ` TestCloudSolrClientConnections ` to
fix race condition when add / remove binding to debuggersession
added methods to clear and clear files and cache in Robolectric tests to improve test reliability and maintainability by centralizing directory management
added LinkedHashSet , LinkedHashSet , and TreeMap imports in SecureXStream . java and updated test cases in XStreamPersisterTest . java to enhance functionality
[ drools - 5892 ] add a kie module model to internalkiebuilder ( # 5892 )
added logic to check if the nearmland is a Farmland and updated the condition for drying the SoilDryFlag
added a default method ` getLocalIp ( ) ` in ` FinishedSpan . java ` to provide a default implementation for the ` getLocalIp `
updated serialization methods in JdbcStepExecutionDao and added a new test for storing integer values in AbstractStepExecutionDaoTests to ensure correct handling of
updated bitwise operations in AbstractDictionary , BigramDictionary , and WordDictionary classes to improve code readability and maintainability
updated resource paths in Python and tensorflow classes to include " python37 " and added preload resource to ensure compatibility with additional Python environments and improve resource
refactor PluginTab to use a new refresh method and update the JTable to improve code organization and enhance the refresh functionality for better user experience
change log level from info to warn in DefaultHistory . java to improve log severity for better debugging and monitoring
cloudstack - 4892 : fix npe in vmwarestorageprocessor when the vm do n ' t exist
camel - 14284 : camel - sftp - allow sshd to be stop by default . thanks to krisztian
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
updated GpsSettingsActivity , Session , and HttpUrlLogger to use GetBuildSerial ( ) instead of Build . SERIAL to ensure compatibility
refactor SwapGBuffers class for improved performance to enhance performance and maintainability of the code
added null checks for spatial in AnimControl . java to ensure proper management of spatial controls when the spatial object is null
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and modified ` ShadowRanking ` to use ` Rank
[ java ] do n ' t add segment to archive if it do n ' t already exist .
updated the variable name from ` configDir ` to ` initParams ` in ` CarrotClusteringEngine ` and ` CarrotClustering
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to handle potential
updated method names from ` buildStdArgs ( ) ` to ` buildStdArgs ( ) ` and updated ASM _ API _ VERSION from
added a TasteException to throw a TasteException for missing column vector from map files to improve error handling by providing clearer feedback when
added ClientInfo to SurrogateAuthenticationEventListenerTests to include client information to enhance test coverage by including client - specific information
added a new variable ` isUserView ` to the ` CardPresenter ` class to reset the user view state to ensure the user view is not
replaced direct calls to ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJava
log4j2 - 1349 add metricservice . getconstructbatchHistogram ( ) to logdispatcherthreadmetrics
added a new module - info . java file for the SQLite connector to define module exports and exports for improved encapsulation and modularization
added a delay for a delay in StreamResetTest . java to ensure proper synchronization during stream reset operations
removed conditional check for " api " in the permissionsManager initialization to simplify the code for better readability and maintainability
refactor DateParser and TestDateParser classes for consistency to improve code readability and maintainability
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to provide a way to calculate the depth of the
replaced System . arraycopy with Arrays . copyOfRange for data handling to improve code readability and maintainability by using a defined minimum size
refactor ExecutionGraph class for improved readability to enhance maintainability and facilitate future updates
removed the swipe layout and reveal listener from NotificationActivity and NotificationRenderer classes to simplify the code by eliminating unnecessary swipe functionality
updated exception handling logic to return " none " instead of " none " in DefaultExceptionConverter . java and updated test cases in LoggingTest .
fix nullpointerexception in glowcontainer # setlock ( )
replaced reflection - based method handle retrieval with reflection - based method retrieval to improve code readability and maintainability by using reflection for reflection
changed the type of ` uniqueResult ( ) ` from ` int ` to ` Integer ` in ` MathTest . java ` to ensure compatibility
updated string concatenation for metrics and datasets in BaseEmailContentFormatter . java to improve clarity and consistency in subject representation
added layout logic and visibility handling for layoutProvidedPanel and propertySheet to improve the user interface component ' s behavior by dynamically adjusting visibility based on the layout
added null check for location in ServerCallable . java to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for key parameters in BasicChecker . java to ensure that a valid key parameters are provided to avoid runtime exceptions
added a method ` shouldIgnore ` to check for ignored media types in ` MediaTypeRequestMatcher ` to improve code readability and maintainability by
updated logging messages to include task ID and task number in LlapBaseInputFormat . java to improve clarity of log messages and ensure correct
added a property to the Spring Boot test to allow bean definition overriding to enhance test flexibility by allowing bean definition overriding
added null check before closing the indexReader in DeleteDuplicates . java to prevent potential NullPointerException when indexReader is not initialized
refactor package declarations for BTCMarketsStreamingMarketDataService and BTCMarketsStreamingExchange classes to simplify package structure and improve
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify the rendering of non -
added a new file ` CompatibilityTest . java ` to test property file loading and verification of XML properties to ensure that XML properties are
added new classes ` PushUtils ` , ` SecurityUtils ` , and ` PushUtils ` to provide utility methods for push registration and security management
[ flink - 20650 ] [ table ] fix the number of replica in tablerebalancer
updated version numbers from " 2.6 . 1 " to " 2.7 . 0 " in ExoPlayerLibraryInfo . java to
log4j2 - 1343 fix test that fail on window
added timeout handling in AjpAprProcessor . java to prevent socket timeout issues during read operations
added default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
updated method signatures to include anomalyFunctionSpecMap and fetchScalingFactors in multiple classes to enhance functionality by allowing retrieval of scaling factors instead of
added a command to wait for broadcast idle in LauncherInstrumentation . java to ensure proper handling of broadcast idle events during execution
added unit tests for fontTagWithAttributes and linkTagWithAttributes in ResourcesTest . java and updated the span calculation in ResStringPool .
update guistatscomponent . java to use the new version of src _ work .
add permission handling for phone calls in Launcher . java and introduce a constant for API level check in Utilities . java to ensure proper permission management for dialing and enhance compatibility with newer Android versions
updated SimulationPanel , PlotDialog , PlotDialog , and BasicEventSimulationEngine classes to include FlightData parameter to enhance user experience by
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoEncodingUtils , and GeoPointInPolygonQuery , and GeoEncodingUtils to
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to check if the Docker client is available to
removed the static final String VPX from CodecTypes . java to streamline the code by eliminating unnecessary static final constant
added coordinatorAddress option to DistBuildFactory and modified AbstractDistBuildRunCommand to specify the remote coordinator address to enhance flexibility in connecting to
added a new method ` match ` in ` FsUtils ` and refactored timer methods in ` WrapTimer ` to improve path matching functionality
added a check to ensure labelValues are only added when the value is greater than zero to prevent adding empty labels to the labelValues
ggb - 1186 fix nullpointerexception when check if result be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline the test suite by eliminating unnecessary tests
added materialization time setting in ObjectStore and created a test for updating creation metadata in TestObjectStore to ensure that the materialization time is
added error handling for missing native dependencies in VoskSTTService . java to improve robustness by logging warnings for missing native dependencies
fix bug where we do n ' t have a way property on the send queue
updated the return statement in GlyphView . java to check for both both BadBreakWeight and GoodBreakWeight to improve clarity and correctness
refactor sync handling in RCFile . java to improve performance and readability to enhance performance and maintainability by reducing redundant synchronization checks
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 13
refactor data handling in ToePool to use LinkedList for processing steps and processors to improve clarity and maintainability of the code
replaced the method ` setToSortedDataFlavorArray ` with ` setToSortedDataFlavorArray ` in ` ClipboardTransferable
hbase - 22873 add - infoport to testhbase - testhbase - testhbase - testhbase -
added a check to return false when the end of the regex is reached to ensure that the scanner does not attempt to process the end of the
added checks for enabled metrics and timers in Debug . java to ensure that metrics and timers are only processed if they are present to avoid potential errors
added null check for ` multiUserChat . getNickname ( ) ` in ` ChatRoomJabberImpl . java ` to prevent
start rev 109 , fix loadimage ( ` ` ' ' ) weirdness
refactor refresh token creation logic in DefaultOAuth2ProviderTokenService to improve code readability and maintainability by encapsulating refresh token creation logic
updated error message formatting in BuckConfig . java to improve readability of error messages for better debugging
[ hotfix ] [ yarn ] remove deadlock from yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` in ` ShadowNativeImageReaderSurfaceImage . java ` to manage hardware buffer
updated the SSL URI configuration in BTCChinaExchange . java to ensure secure communication for the BTCChina exchange
pmd : do n ' t write output to a file if the project do n ' t exist
added new classes OauthController and Oauth2PluginTest for testing OAuth2 plugin functionality to enhance testing capabilities for OAuth2 plugin functionality
refactor SemgrexPattern class for improved clarity to enhance maintainability and readability of the code
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` , ` StreamEx ` , and ` EntryStream `
updated error message in RestCodec . java and added exception handling in ExceptionToProducerResponseConverters . java to improve clarity of error messages and
updated the ` shouldComeFromThisClassLoader ` condition in ` RobolectricTestRunner ` and ` RobolectricClassLoader `
added a condition to check if the sdp is not already present in the transmittableAudioEncodings check to ensure that audio encoding is only processed
updated the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator ` and added a
added new methods for checking GML31 and MLS32 in NormalizedMultiValuesTest . java to ensure compatibility with the new ge
added a volatile boolean variable ` wasInvoked ` and updated related test cases in ` UaaHttpRequestUtilsTest ` and ` UaaHttpRequestUtils
added a condition to check if the processor is configured before expanding the regex mapping and updated return statements in RowProcessor , RowProcessor , and Binary
updated the CustomSeekProvider class to use a constant SEEK _ LENGTH and refactored the splitIntoThirtyParts method to improve clarity
added new classes ` XLCDCommunicator ` , ` GrblCommunicator ` , and ` FirmwareUtils ` to
( chore ) camel - kie - api : use kie - api - kmodule . xsd instead of kie - api -
added a retry mechanism to check if messages are empty before proceeding with further operations to ensure that the retry logic correctly verifies if the transaction message
refactor WorkerProcessPoolTest to use a custom join method for thread state management to improve code readability and maintainability by reducing complexity
updated equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to improve object comparison and
func ( freezev2 ) : decrease energy cost for new
added exception handling to the command method and updated configuration settings in DownloadPlugins . java to improve error handling and ensure configuration integrity during command execution
deleted the SpringTransactionHooks . java file to remove unused code to streamline the codebase
refactor AbstractClassAssert class for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` to test the functionality of the ` GetUninitializedStringValueTarg `
added support for provided dependencies in AndroidLibraryDescription and updated related test cases in GraphEnhancementQueryEnvironment to enhance dependency resolution and ensure correct
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable users to synchronize keyboard
replaced the initialization of ` sSavedBugreport ` with a static variable ` sSavedBugreport ` in ` FailureWatcher . java `
added a new constant CINEPACK in FormatConfiguration . java and updated format assignment in LibMediaInfoParser . java to support Cinepack
added camera bobbing support and modified animation positioning in GOD mode to enhance gameplay experience by allowing customizable bobbing behavior
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter . java file to remove unused file to streamline the codebase
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to prevent unnecessary processing when restoreFromSeed and restore
added logging for missing title by IMDb ID in MediaTableTVSeries . java to improve debugging and traceability when the title is not found
added a method to retrieve the method invocation based on the existence of a method in HasTypes . java to ensure that the method invocation is only
updated array size checks from 6 * 3 to NUM _ VALUES in AmbientCubemap . java to improve code readability and maintain
[ netbeans - 4892 ] display profiler dialog when the current mode be not configure properly
added checks for zero - length values in GenericUDFMask and GenericUDFMaskShowFirstN , and GenericUDFMaskShowFirst
refactor BoundedOverheadBlockStoreTest , DerbyBlockStoreTest , DerbyBlockStoreTest , and DerbyBlockStoreTest
added a new method ` isItemStackDamageable ( ) ` and ` getHasSubtypes ( ) ` to ` ItemStack
fix mc - 167447 line width not be set to 1.0
set the browser . startup . page to zero in FirefoxProfile . java and set it to 1 in FirefoxDriverTest . java to ensure the
added a condition to check for HTTP connection method in Http1xClientConnection . java to ensure proper handling of HTTP requests based on the connection
updated the task name from " compile " to " process - classes " in JoobyMojo . java to clarify the
replaced the connection manager ' s shutdown method with a call to closeIdleConnections in HTTPHC4Impl . java to improve connection management by
added a condition to check if the aggregate function suffix is not present in AmbariMetaInfo . java to avoid unnecessary processing of aggregate functions
added a method to set fullscreen parameters in TaskOverlayFactory and updated its usage in TaskView to improve flexibility in handling fullscreen parameters
added a new Java class ` Solution ` that calculates the number of occurrences of a random number based on a given number to provide a solution for
set the ` ch1 ` variable to null in ` ClusteredAgentManagerImpl . java ` to ensure that the ` ch1 ` variable
rename MutisignOperationerGodicTest . java file to improve clarity and consistency in naming conventions
added exception handling for NoSuchElementException in StaxEventItemReader . java and created a test for restartAtEndOfFile in StaxEventItemReader
replaced specific imports with a wildcard import and added null check for resourceName in ShadowTextView and TestAttributeSet classes to improve code readability
updated import statements from ` com . nimbusds . jose . json ` to ` net . minidev . json ` to
added support for " AIX " family in OS . java and updated OS mapping in PKCS11Test . java to ensure compatibility with AIX
cloudstack - 4892 : use router . id instead of getprivateipaddress ( ) to avoid call getprivateip ( )
added a method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a convenient way to invoke without blocking with result
deleted the PresenceMessageComboTests . java file to the test class is no longer needed for the current implementation
updated calculations to use Math . round instead of int for taskPercent in PortraitPagedViewHandler . java to ensure consistent rounding behavior
updated method calls in TestClusterDumper . java for consistency and clarity to improve code readability and maintainability
updated alignment calculation and added null check for rowCache in KeyValue . java to improve memory allocation and prevent potential NullPointerExceptions
camel - 14284 : camel - core - do n ' t throw a runtimeexception if a service can not be add . thanks
added import for ConditionalTask and implemented task dispatching in SparkCrossProductCheck . java to enable processing of conditional tasks in the Spark cross product
refactor action handling in Launcher and LauncherModel classes to improve code readability and maintainability
updated conditional logic in LoginInfoEndpoint . java and added unit tests in LoginInfoEndpointTests . java to ensure correct handling of JSON responses and
added a new method ` toDescriptiveString ` to display the region ' s state and server time to improve clarity and debugging by providing
added ` result ` field to ` HuobiAccountInfo ` and updated related methods in ` HuobiAccountServiceRaw ` to enhance
added a new test method ` addPeriodColumnMariaDb ` to ` AddColumnStatement ` and a corresponding test in ` AddColumnGenerator
[ flink - 24936 ] [ connectors / beam ] update portablepipelineoptions . java to use the latest java runtime version
updated VersionChangeLogs . java for Android 7.1 - you now have Launcher shortcuts and a few changes to the dictionary loading mechanism to
changed the visibility of the NUM _ MILLIS _ IN _ DAY constant from private to public to allow access to the NUM _ MILLIS _
removed system . out . println statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use conductor agent invoker instead of invoke aeron client .
updated type validation logic in Attr . java and added a new NoWarnOnImplicitParams class for testing implicit parameters to ensure proper handling of implicit
refactor menu item visibility and visibility methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by centralizing menu
added new constants for BTC _ deposit and BTC _ deposit in BTCETransHistoryResult . java to enhance functionality by
replaced ArrayList with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of status codes
added @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should no longer be used
added a condition to check for unsequence time larger than sequence time in LastQueryExecutor and created a new test in IoTDBLastIT to
corrected the spelling of " \ r \ n " to " \ r \ n " in the request string to ensure proper formatting of
added a static method to set the system property " org . slf4j . simpleLogger . log . org . apache . http .
added a safe area setting to the title bar in Sheet . java to enhance user experience by ensuring the title bar adapts to the title
updated the loop to iterate over the last TimeSeriesChunkMetaData list instead of iterating over the first TimeSeriesChunkMetaData to improve performance by avoiding unnecessary
added a new SQL statement for SQL parsing and deparsing in AlterTest . java to ensure SQL statements are correctly parsed and deparsing for
changed the access modifier of the copyState method from package - private to public to allow external access to the method from other classes
fixed - redissonexecutorservice . executeCallable ( ) throw npe if taskexecutorservice . executeCallable ( ) return asyncfuture . #
added a new constant for the suffix file name and updated the file handling logic in the FileSystemSplit class to improve code readability and maintainability
[ hotfix ] [ table - common ] fix typo in javadocs
reformatted conditional statements in CompareFunctionsProcessor . java for improved readability to enhance code clarity and maintainability
updated the ` reduceScopeForLimitedSpace ` method to accept a ` expectedSize ` parameter and improved logging messages to enhance clarity
added ` toString ( IndexReader ir ) ` method to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector
added checks for state callbacks in AbsSwipeUpHandler and unregistered task stack listener in TaskAnimationManager to ensure proper handling of state callbacks and
refactor lock timestamp handling in AppPreferences and PreferenceManager classes to improve code clarity and maintainability by centralizing lock timestamp management
refactor artist retrieval in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage in NCFirebaseMessagingService . java to prevent potential NullPointerException when remoteMessage is null
added null checks for splitInfo and splitFlowFiles in SplitText . java and updated test cases in TestSplitText . java to enhance robust
added handling for Windows - specific key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increased the default CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure that the remote folder is ignored when the result
added animation functionality to the Slider class to enhance the slider ' s responsiveness and control over animation behavior
updated assertions in LineSeparatorProcessorTest . java for consistency to improve code readability and maintainability
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to accommodate larger texture sizes
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest ` and modified the condition in `
camel - 14284 : fix npe in camel - hazelcast and camel - hazelcast - queue consumer and camel - hazelcast -
added a new TextFeedbackTest class and created a new test class for testing text feedback functionality to facilitate testing of text feedback functionality
replaced ` Math . round ` with ` Float . compare ` in ` DefaultSolrHighlighter . java ` to improve accuracy of score comparison
updated case values for DENSITY _ 560 and DENSITY _ 4K in AddAndScaleMultiImage and ResourceEditorApp to
added a method to retrieve the array class element offset in HotSpotReplacementsUtil and modified the loadHub method in ArrayCopySnippets to
[ log4j2 - 1349 ] log4j2 - 1349 log4j2 - 1349
added support for remote SCM support in multiple classes to enable or disable remote SCM support for improved performance in the application
[ mieleappliance ] fix npe in onofftype . from ( )
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to improve clarity and
changed the variable name from ` log ` to ` LOG ` in ` LocalZookeeper . java ` to improve clarity and consistency in logging
added unit tests for ProjectGenerationEvent handling in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGeneration events
ggb - 1343 add support for preview _ points in selectionmanager
refactor JavaCompiler to improve code structure to enhance maintainability and readability of the code
increase the amount of data written per server to reduce the amount of data written per server
refactor multiple Java files related to DumpHeap , TimSortStackSize2 , and DeadlockDetectionTest to improve code organization and maintainability
added " -- gc - sections " and " nocopyreloc " options to the ldflags list in NdkCxxPlatform
updated fallback URI handling in SpringCloudCircuitBreakerFilterFactory to use ServerWebExchangeUtils for expanded fallback URIs to improve flexibility in fallback URI
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
added null check for URI and modified conditional checks in ReadOnlySharedStringsTable . java to improve robustness by preventing potential NullPointerExceptions
added a method to retrieve the account net by a specified query address in HttpMethed . java and a corresponding test in HttpTestAccount
added a null check for availTextWidth in SwingUtilities2 . java and modified GTKLookAndFeel initialization in Test66351
refactor FlatteningIterator initialization and improve clarity in FileResourceIterator and FlatteningIterator classes to enhance code readability and maintainability by
replace HTML elements with HTML formatting in NotificationUtils . java to ensure proper HTML formatting for title and body in notifications
refactor SecurityCenterSettingsServiceClient and package - info files to improve code organization and maintainability
update instructorfeedbackeditquestionsuitest to be able to delete an existing question
updated row validation logic in HSSFSheet . java and BaseTestSheet . java to include firstRow and lastRowNum checks in Base
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being logged
[ java ] use clustersession . state . init instead of pendingsession . state . init .
refactor hashCode methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to improve
added a condition to flush the quic session if the connection is remotely closed to ensure proper resource management and prevent potential memory leaks
renamed the interface ` SplitReader ` to ` AutoCloseable ` and removed the ` close ` method from ` SplitReader ` to enhance
added a deepCopy ( ) method to GsonBuilder to streamline the object creation process by eliminating unnecessary object creation
replace null return statements with a static final NOT _ FOUND constant in LLScanner and LLSourceBuilder to improve code clarity and maintainability
refactor file opening and closing logic in RestClientRequestImpl . java for improved readability to enhance code clarity and maintainability by
removed unnecessary whitespace in the dispatchStatusString method call to improve code readability and maintain consistency
replaced ` MockFactory . class ` with ` SearchingClassLoader ` and added a new class ` SearchingClassLoader ` to improve class loading
added a new test class ` TestRefreshFlagBug ` to test the refresh flag functionality to ensure that the refresh flag behaves as expected
added LEFT _ SEMI _ JOIN condition to the condition in ConstantPropagateProcFactory . java to support additional join types in the processing logic
refactor HTTP response handling in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 instead of boolean to improve code readability and
updated array length offset calculations to use arrayOopDescLengthOffset instead of arrayLengthOffset to ensure correct offset calculations for performance optimization
http : / / issues . apache . org / jira / browse / amq - 4892 - add default policy to broker test
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a condition to check if the application context is running before stopping it to prevent potential NullPointerExceptions when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout in the drawItem method to allow the method to return a GlyphLayout
refactor metrics handling in SpringmvcClient to use MetricsPublisher for better metrics management to improve code clarity and maintainability by centralizing
updated account age date handling in AccountAgeWitnessService . java to ensure consistency in date representation and improve code readability
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability
added a new ` ResourceUrlProviderExposingInterceptor ` bean and updated the ` CasWebflowContextConfiguration ` and ` DefaultLogoutWebflow
add dexreturninliner . v ( ) to dexbody and dexpler . v ( ) . transform ( jBody
fix enrichedruledto and ruleresource # getconfiguration ( ) to return property instead of rule . getconfiguration ( ) ( #
updated directory checking logic in PathResource . java and updated test cases in AliasCheckerSymlinkTest . java to ensure correct handling of symlink directories and
[ hotfix ] [ table - common ] remove sqldialect from executionentry
updated ` rDotJavaPackages ` and ` rDotJavaPackages ` to ` Supplier < ImmutableSet < String > > ` and ` hasR
add a new test class ` ASTPackageDeclarationTest ` for the ` ASTPackageDeclaration ` class to ensure the correctness of the package name
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor . java to enable configuration of the minimum cross compaction unseq file level
[ hotfix ] [ runtime ] move ` org . apache . resourcemanager . active ` to ` org . apache . resourcemanager . active
changed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` in ` TestScanWildcard
replaced the URI creation method with a try - catch block for URISyntaxException and added a new test class for parsing feature files with spaces in the
updated variable names and added thumbnail handling in ExpandableUploadListAdapter . java for better clarity and functionality to enhance code readability and ensure
refactor configuration merging logic in RobolectricTestRunner and add new test cases in RobolectricTestRunnerTest to improve test
replaced direct instantiation of ` blocks ` and ` items ` lists with ` Iterables . filter ` in ` ModelLoader . java ` to improve
refactor methods in ` AbstractDataChangedListener ` , ` WebsocketDataChangedListener ` , and ` WebsocketDataChangedListener ` classes
updated JSONPojoConvertor to handle enum types and improved color handling in JSONPojoConvertorTest to enhance type safety and ensure
added a deprecation check for ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` -- view
replaced ` String ` with ` byte [ ] ` for payload handling in ` GWTRequestWrapper . java ` to improve performance and memory usage
updated GyroControl to implement OrientationEventListener and added orientation correction handling to improve responsiveness of sensor events based on device orientation
updated BIOME _ LIST _ SIZE from 256 to length in BiomeGenBase . getBiomeGenArray ( ) . length to
changed variable names from ` println ` to ` print ` in ` GetInterfaceTest . java ` to improve clarity and consistency in variable naming
do n ' t use jdtcompiler . getenvironment ( ) instead of jdtcompiler . getenvironment ( )
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a way
added a boolean flag ` preload ` to the ` MMapDirectoryFactory ` class to control the default value of ` preload ` based on user
added custom chart metrics for worlds , economy , and mysql components in BukkitPlatform . java to enhance monitoring capabilities for
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future updates
added aspect ratio and default card image initialization in CardPresenter . java to enhance the visual appearance of the default card image in the application
[ java ] add login page url to authenticationcountselector and loginredirect .
updated VectorHashKeyWrapper to handle empty values and adjusted array cloning logic to ensure cloning only occurs when there are valid decimal values to avoid
added test cases for the " testSystemNanoTimeJit " method in TimeChangeTest . java to facilitate testing of system
added trimming of whitespace in MultiPartFilter and updated MultipartFilterTest to handle null input gracefully to improve robustness by preventing potential NullPointerException
add experience drop event to entitylivingbase . close # 4893
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use @ text / offline . config - error - unknown - apikey and
[ beam - 13434 ] remove unsupportedoperatorvisitor from beamqueryplanner . validate ( )
updated GraphEnhancementQueryEnvironment and GenruleDescriptionIntegrationTest to include RdepsFunction functionality to enhance dependency management and improve test coverage for
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added functionality to scale the entire rocket based on component types to ensure that the selection option only applies to the entire rocket based on the
replaced ` Arrays . toString ( ) ` with ` Bytes . toString ( ) ` in ` UpdateableResultTest . java ` to simplify
refactor time boundary attachment logic in BaseBrokerRequestHandler to improve handling of hybrid table names and streamline query attachment logic to enhance code clarity
simplified the addition of socket references in AjpAprProcessor and Http11AprProcessor to improve code readability and maintainability
updated EightmusesRipper to use ' / comix / picture ' instead of ' comix / comix / picture '
replaced ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to improve code readability
added a condition to check for phone orientation in QuickstepLauncher to ensure proper layout behavior based on device orientation
updated assertions in PartTreeJpaQueryIntegrationTests to unwrap QueryImpl instances to ensure compatibility with the latest Hibernate API changes
replaced the method ` readMatchingLines ` with a new ` readMatchingLines ` method in ` SubSystem . java ` to improve error
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure proper handling of stream methods during query execution
added a null check for the entity parameter in PhysicsProcess . java to prevent potential NullPointerExceptions during entity processing
added a test for entry processor that clears the map when value attributes are indexed in EntryProcessorTest . java to ensure that the entry processor correctly
add jitsi - conference - room to call sip and add jitsi - conference - room header to the jitsi
updated color assignment in Utils . java and modified HTMLMessage initialization in UtilsTest . java to improve color handling and ensure proper text formatting in the
fix ( core ) : disable empty string in menu menu ( # 11818 )
updated the path for the link tree in Aapt2Link . java from " link - tree " to " % s / link - tree
replaced instances of ` new ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and ` ThriftOverHttp
ggb - 2203 clearselectedgeos ( ) and updateselectedgeos ( true , false , true ) , and updateselected
added exception handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error handling and provide clearer context
added ` isCanceled ( ) ` method to ` BehaviorCall ` , ` Calls ` , and ` OkHttpCall ` classes , and updated
replaced the ` isAnnotationPresent ` method with ` default ` in multiple classes to simplify the method signature for better readability and maintainability
added a default method ` removeAllWidgets ` in ` UILayout . java ` to indicate that the ` removeAllWidgets ` method is not yet
[ hotfix ] [ test ] fix test failure in yarn test
opensslcipher : use maxoutputsizeforfinal instead of getoutputsizeforfinal ( )
added logic to manage high - res content content in Fire TV Stick playback to enhance user experience by allowing transcoding of high - res
[ beam - 8470 ] fix readsourcetranslatorbatch and readsourcetranslatormockbatch to not use appliedptransform
replaced Date with wildcard import and modified preference handling in GpsLoggingService . java to improve code readability and maintainability by using a
updated the ` putString ` method to accept a ` byte [ ] ` instead of a boolean array and added support for legacy EastAsian
added import for BaseItemDragListener and updated item initialization logic in FolderIcon . java to enhance drag - and - drop functionality for better user
added a new method ` createEmptyArtifact ` to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , and ` SignavioConnector
camel - 14284 - camel - rabbitmq : fix typo and fix typo .
removed conditional checks for afterAug1 and afterAug1 in VideoViewerActivity . java to simplify the condition for better readability and
camel - 15836 - camel - sftp : fix file path in sftp operation
increased the timeout for mock endpoint verification in BaseWeatherConsumerTest . java to improve test reliability by allowing more time for mock
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to clarify the purpose
added support for LARGE _ FERN in BlockDoublePlant and BlockType classes to enhance functionality by allowing more flexible handling of
changed focus behavior from setFocusable to setRequestFocusEnabled in TranscodingTab . java to enable request focus functionality for the tree
cloudstack - 4892 : throw exception instead of exception in vmmanagerimpl . java
added a new method ` acceptLicense ( ) ` to ` DB2TestSystem ` and modified conditional checks in ` DockerDatabaseWrapper ` to
added a method to set the UnitGroup in DoubleModel and refactored unit handling in GeneralOptimizationDialog and GeneralOptimizationPlotDialog
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionalities using ZMW
added a check to set the number of samples in the PBRLighting class to ensure that the PBRLighting class uses the correct
updated test variable names from " job . step " to " step " in StepWithSimpleTaskJobParserTests . java to improve clarity
changed variable ' cred ' and ' service ' from final to final in CentralAuthenticationServiceImplTests . java to ensure immutability of
fix a syntax error in expressionnode . ggbabs ( )
added multiple ` addServiceOutput ( ) ` calls to the ` addServiceOutput ( ) ` method in ` DDLSemanticAnalyzer .
[ drools - 1342 ] fix type coercion for biginteger value type ( # 1343 )
added a new property " org . eclipse . jdt . " to hide the jdt used by jetty in WebAppContext . java
replace super . useAuthCache ( ) with super . useAuthCache ( ) in NegotiateAuthentication . java to simplify authentication logic by
pdfbox - 4892 : use capitalize instead of capitalize , a suggest by valerybokov
camel - 14284 : add directconsumernotavailableexception to make it easy to send to non - existing direct endpoint
added a null check for the zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is not initialized
corrected a typo in the step name from " Initializing mods Phase 2 " to " Initializing mods Phase 2 " to ensure the
replaced calls to ` mVibrator . vibrate ` with ` runOnUiHelperThread ` in ` AllSetActivity
added a call to updateLastRemoteStreamId ( streamId ) in HTTP2Session . java to ensure the last remote stream ID is correctly updated
fix linux permission ( issue # 343 ) , plus other tweak to make linux less
[ java ] rename termwindowsize and nextoffsetposition to sentposition .
refactor : remove static import from ctannotationimpl . java ( # 2262 )
refactor ExoPlayer class for improved clarity to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve performance by leveraging
added a new method ` newPrintStream ` to handle character encoding in ` System . java ` to improve flexibility by allowing customizable output
updated the vibrate method from 1 to 25 in TouchableMovementMethod . java to increase the vibrate for improved movement
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
refactor constructors in WebSocketClient for improved readability to enhance code clarity and maintainability
simonstewart : move i18n test to selenium - server
replaced ` handleIllegalArgumentException ` and ` handleIncompatibleClassChangeError ` with ` handleLoadConstantException ` in ` BytecodeParser . java
added a call to context . restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure that the authentication system state is properly
added a new class LowercaseComparator to sort features based on case - insensitive comparison to ensure consistent ordering of features based on case sensitivity
refactor JavadocTool to use a separate method for parsing multiple Java files to improve code readability and maintainability by reducing duplication
simonstewart : disable test that fail if the option be not in a multi - select
added a check for the length of keys in HighestKvno . java to ensure that the expected number of keys matches the expected length
added a try - catch block around retrieving attributes in HDF5BatchReader to handle potential HdfException when retrieving attributes to improve robustness by
[ beam - 10615 ] use writeresult instead of pDone for in ( ) method .
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` @ ApiImplicitParam ` annotation in ` ProcessGroupResource
added a new file TestMultiANewArray . java to verify the functionality of writing multiple Java classes to ensure proper handling of multi - dimensional
server : disable secondary storage for vm per zone on management server
refactor SyncBlockChainMsgHandler to use headID instead of headID for improved clarity to enhance code readability and maintainability
added a theme setting for PreviewViewer in PreviewTabView . java to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent memory leaks
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and modified the connector ' s idle timeout configuration in ServerConnectorTimeoutTest .
add property to dcoref . dictlist , dcoref . dictpmi , dcoref . signatures
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser ` and added a new method ` read
updated type parameters in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code clarity and maintain consistency in
change log level from warn to debug in DistributedQueue . java to reduce log verbosity for better debugging insights
refactor color extraction logic to use a dedicated method for retrieving and retrieving hotseat Pallete to improve code readability and maintainability
updated import statements and added methods for setting default data table entries and cells in TypeRegistry to enhance functionality by allowing customization of data table entries
removed assertion for newAvailableShared in AtomicRemainder . java to streamline code by eliminating unnecessary assertion
chore ( regen ) : update license year to reflect new language standard
removed the ` projectGenerated ` field and its getter method from the ` WorkspaceAndProjectGenerator ` class to simplify the code by eliminating
replaced ` contains ` method with ` contains ` in ` DriverUtils . java ` to improve code readability and maintainability
added a new method ` postContactForm ` in ` Routes . java ` and modified ` ApplicationController . java ` to implement a ` Contact
guacamole - 134 : use simpleobjectpermissionset instead of permission for simpleuser .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release of the IconCache
[ hotfix ] fix typo in setmode method
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasAliasLikeAndActive ` across multiple classes to
replaced manual closing of per - document consumers with IOUtils . closeSafely for better resource management to improve code readability and maintainability by
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper . java to show the menu when the overflow button is clicked to improve user
updated method names from " is null " to " is a non - null reference " across multiple classes to improve clarity and accuracy of error
ggb - 1193 help button should update line height if heuristic be true
test : move protobufferutilitytest to core . util
update divider position and width calculation in JabRefFrame . java to improve UI responsiveness by adjusting divider position and width based on
improve handling of crossref in auxdb
[ geos - 6767 ] fix classcastexception in geoserverfeaturesource and geoserverfeaturestore
renamed ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the list
do n ' t update contact avatar if the contact contact be not find .
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test for cleaning up audit log table post parameters by position in AuditLogTest . java to ensure proper cleanup of audit log table parameters
changed the type of the ` inject ` method from ` Class < T > ` to ` Object ` in ` ComponentContext . java ` to
added regex patterns for comment lines starting with ' # ' and updated parsing logic in ACLFileParser . java to improve flexibility in handling comment
updated the ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` classes to include ` FileSystemPlugin ` and ` DynamicDr
added a new HashMap for ancestor dimension values in StarTreeImpl and TestStarTreeNodeImpl classes to enhance the handling of ancestor dimensions in the
added user unlock check before dumping plugins in TouchInteractionService and refactored closeOpenViews method in Launcher to improve user experience by
updated the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure the condition accurately reflects the
refactor conditional checks for certificate validation in PKIXValidator . java to improve code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
[ task 2728 ] change the project name start with shenyu - integration - test to shenyu - integrated - test ( # 2747 )
cloudstack - 4892 : remove unnecessary ` ` skipprojectnetworks ' ' parameter from network service ( # 4892 )
replaced ` remove ` with ` get ` for retrieving ` shape . type ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java `
added methods to store and store undo information for properties in App . java to enhance user experience by allowing dynamic modification of undo information
added privileged actions to the property retrieval in XRCompositeManager to enhance security by ensuring the property is accessed within a privileged context
refactor StreamCloseTest to use awaitility and wait for the size of streams to improve test reliability by allowing more time for streams to
removed the ` doAfterFlush ( ) ` method and updated the initialization of ` perFields ` in multiple classes to improve code clarity and
updated ConfigurationMetadataGenerator and AbstractJpaProperties to filter non - deprecated errors based on deprecation level to improve error handling by filtering out non -
refactor capacity and mask variables in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap classes to improve clarity
updated the number of threads in HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf . java
added trace logging for message sending errors and improved exception handling in ParallelNioSender . java to enhance debugging capabilities and error tracking during message
added a null check for the context in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when the context is null
[ gr - 33544 ] fix native image class loader to be use in the build server .
updated method signatures in SwitchUserAuthorityChanger and SwitchUserProcessingFilter to return a List instead of void to improve type safety and clarity
refactor JaxrsIntegrationTest and JaxrsSpringIntegrationTest classes to extend SpringBootTestBase to improve test organization and facilit
replaced ` isJdbc41Compliant ` method with ` setQueryTimeout ` and added ` IS _ JDBC4 ` and ` setQueryTimeout `
added DataProvider annotations for various test cases in XslSubstringTest . java to enhance test coverage for various XML and supplementary character scenarios
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter .
added support for sequence next value function in MariaDB and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB and
updated formatting in multiple Java files to improve code readability and maintain consistency across the codebase
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize the new ` TableDataManagerProvider `
added support for both ` jsse . enableMFLExtension ` and ` jsse . enableMFLNExtension ` in ` SSLExtension
refactor ObjectHashSet and ObjectHashSetIntegerTest classes to improve iterator initialization and add unit tests for string representation to enhance code clarity and ensure
updated characterRemaining calculation in Compose . java and TweetFragment . java to correctly account for the length of the shortened URL to ensure
added a new constant DATAPOINT _ TTL and refactored data point write handling in CassandraDatastore and WriteBuffer classes to enhance data
updated ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and improved error messages to enhance user experience
added a method to retrieve terraing at a cell in TerrainGrid . java to enable retrieval of terraing at a specific cell
added default value handling in ` Pretty . java ` and created a new class ` T6665791 . java ` for Java annotation processing
added error handling for missing QuestEncryptionKeys . json file in ResourceLoader . java to improve robustness by logging a clear error message when
added a condition to check if push is not supported in the HTTP channel to ensure that push support is only performed when the channel is not push
refactor PointValue class for improved clarity to enhance maintainability and readability of the code
removed the sign method from BlockUtil . java to streamline the signature process by eliminating unnecessary data signing
modified the return statement in FileSystemView and added security checks in Win32ShellFolder2 and Win32ShellFolder2 classes to enhance security by
updated row height calculation and added a new method ` copyLastRow ` in ` ColumnText ` and ` PdfPRow ` classes to improve
updated undoTrash and undoArchive variables to use SparseArray for note management to improve memory efficiency and efficiency in managing undo notes
[ 3.0 . 0 ] update uploadbackupdata to save feedback question and comment
removed null check for data in getTransferData method to improve error handling by throwing an exception for non - null transfer data
no effective change - remove unused pstmtdelegate class
replaced ` Padding ` with ` Rect ` in ` AppWidgetResizeFrame ` and ` Launcher ` classes to utilize ` App
added support for consStringFilter in NashornBeansLinker . java to enhance support for consString filtering in link requests
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` CountDownLatch ` to ` goAwayLatch ` in ` IdleTimeoutTest . java ` to clarify the purpose of
replaced calls to ` assertThat ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest .
replaced ` ThreadLocal ` with ` Workbook ` across multiple files to simplify the code by eliminating unnecessary object creation
added a method to check if a method is supported in ContactSecurityVoter to ensure that only valid MethodInvocation objects are processed to prevent runtime
removed unused imports from DataLoader . java to clean up the code and improve readability
added a new method ` rowsAffected ` to ` AbstractUpdateCommandStep ` , ` UpdateCountCommandStep ` , and ` UpdateToTag
ggb - 1188 scaler . setmarginleft and scaler . setmargintop do n ' t work on window .
updated foregroundFPS and backgroundFPS values in JglfwApplicationConfiguration . java to set default values to 60 to improve performance by redu
added assertions to track and release objects in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced the use of ` DefaultWebSocketFrame ` with ` WebSocketFrame . Listener . CLOSE ` in ` DefaultHttpServer . java ` to
replaced instances of TestApplicationEventListener with TestApplicationEventListener1 and TestApplicationEventListener2 in StateMachineErrorTests and added a new interceptor for
refactor SettingsActivity to use a dedicated method for setting the list background color to improve code readability and maintainability by centralizing the background
( chore ) camel - rom : fix npe in rmethinghandler ( # 10663 )
added a new method ` accumulate ` in ` JavaUserDefinedAggFunctions ` to calculate the sum and count based on a given weight to enhance
updated formatting in Put . java and ReplicationSink . java to improve code readability and maintain consistency
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` and replaced ` VALID _ CACHE _ SET ` with ` REG
added a static method ` reset ( ) ` to the ` GameThread ` class to reset the ` gameThread ` to ensure the ` game
added a login method to the DigestAuthenticator class to ensure that the realm is valid before proceeding with the login process
refactor parameter handling in SavedRequestAwareWrapper and SavedRequestAwareWrapperTests to improve clarity and functionality to enhance parameter management and
updated InfoStatus messages to use ` lc ` instead of ` hiddenSingleton ` in ` BasicConfigurator ` , ` ConfigurationAction ` , and `
[ hotfix ] fix race condition in commitlog and haservice
added a check for Android O and implemented a method to check if the image view is not available to ensure compatibility with Android O and enhance user
updated schema info level from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with the latest SchemaInfoLevel requirements
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` and updated closing method in ` VizModel .
updated UTF - 8 character encoding handling in TestPayloads . java and adjusted term string construction in TestPayloads . java to improve compatibility and
fix for mc - 103516 ( # 10358 )
removed the " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " from the list to streamline the adapter configuration
[ drools - 1342 ] [ drools - 1342 ] add a test for multi - accumulate ( ) function ( #
refactor case statements in NowSearchTerm and SearchTermBuilder to improve code readability and maintainability
pdfbox - 4071 : remove public modifier , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy and WSFederationRelyingPartyAttributeWriter to use SpringExpressionLanguageValueResolver for endpoint URL resolution to enhance
added a protected method ` newResponseBuilder ` to the ` SearchHandler ` class to facilitate the creation of the ` ResponseBuilder
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events in the AsyncBackgroundTaskManager
added a null check for mReferenceDrawable before invoking computePreviewDrawingParams to prevent potential NullPointerException when mReferenceDrawable is null
refactor token and filter handling in LukeRequestHandler to use CharFilterFactory instead of SimpleOrderedMap to improve code readability and maintain
replaced ` IllegalArgumentException ` with ` ParamChecks . nullNotPermitted ` in ` AbstractCategoryItemRenderer . java ` to improve code readability
added verbosity parameter to ` createSubContext ` and modified ` createSubContext ` method to accept a ` Verbosity ` parameter to enhance flex
added a null check and case - insensitive schema assignment in DbSqlSession . java to ensure compatibility with Oracle database types in the application
logmanager . getcontext ( false ) should use logmanager . getcontext ( false ) instead of logmanager . getcontext ( false
added a new file TestShrinkToOneRegion . java that contains a main method for garbage collection to demonstrate the behavior of garbage collection
replaced ` Splitter ` with ` Splitter ` for parsing custom packages to improve code readability and leverage Google ' s built -
updated context handling in AnalyzingInfixSuggester and added tests for binary context in AnalyzingInfixSuggesterTest
updated the handling of the localAttachment variable in PushsaferMessageBuilder . java to improve clarity and correctness of the encoded string representation
[ zeppelin - 2271 ] remove unused method in modelexplorer
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
removed the ' final ' modifier from the function calls in multiple test classes to simplify the code by eliminating unnecessary ' final ' modifier
updated the ` evaluate ` method to accept a ` Double ` parameter and added rounding functionality to enhance the flexibility of the evaluate method by allowing
refactor configuration handling in GraalJSScriptEngineFactory to use ConfigParser for injection settings to improve readability and maintainability of the code
changed class visibility from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
rename permission . no _ permission _ event to deny . no _ enter instead of permission . no _ permission _ event
added session parameter to the getAdditional method in ConditionAndOr and related classes to enhance functionality by allowing session - specific handling of Comparison instances
replaced ` LongProducer ( ) ` with ` NumericDocValuesField ` in ` BaseNormsFormatTestCase . java ` to improve
added box and circle transformations in Box2DCharacterControllerTest . java and updated friction handling in Box2DCharacterControllerTest .
added tests for memory size adjustments in FLIGHT _ RECORDER _ OPTIONS and updated memory size handling in TestBadOptionValues . java
removed unnecessary
added a method to extract the target package name from a manifest file to enhance the instrumentation test ' s flexibility by allowing users to specify the
refactor DocHelper class for improved readability to enhance maintainability and facilitate future updates
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an array to ensure that the initialization of the acceptableThrowawayItems list
updated type casting for method calls in Test6987555 . java to ensure proper type casting to avoid unchecked cast warnings
reformatted code for improved readability and maintainability to enhance maintainability and clarity of the code
refactor Inflection class for improved clarity to enhance maintainability and readability of the code
added methods to retrieve and set the locale in EvaluationContext to enhance functionality by allowing locale management in the EvaluationContext
removed the import of Plugin from SummaryPrinter . java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to ensure proper flow control in case of fall - through behavior
updated import statements and added query object retrieval in MongoQueryCreator . java to improve code readability and maintainability by using a more descriptive
ww - 4893 add user - defined loggerfactory property to xwork . loggerfactory
updated method names from ` adminAddPeerFailsWhenP2PDisabled ` to ` adminAddPeerHasNoEffectWhenP2PDisabled
updated bean names from " livenessStateProbeIndicator " to " readinessStateHealthIndicator " across multiple classes to improve clarity and consistency
added concurrent access to the local pstores in LocalPStoreProvider . java to ensure thread - safe concurrent access to the PStore instances
changed the access modifier of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
renamed ` Provider ` to ` ServiceProvider ` and updated related methods accordingly to improve clarity and consistency in service provider handling
truffle : do n ' t throw illegalargumentexception if the receiver . obj be null .
added toolchain creation checks in AbstractCell , ToolchainProvider , and DefaultToolchainProvider , and corresponding tests in DaemonLifecycleManagerTest to
fix race condition in polyglotengineimpl . removecontext ( )
replaced ` indexOf ` with ` contains ` for ` fail ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintain
updated linker flag handling in PrebuiltCxxLibraryDescription and related tests to ensure correct usage of shared libraries in the build process
replaced ` onConfigurationChangedInternal ` method with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recent
updated generic type declarations for listener types in multiple classes to improve type safety and eliminate unchecked warnings
added a hashAsString ( ) method to the array in AbstractBlockChain . java to include the header ' s hash as a string to ensure
[ issue # 2663 ] fix isspacefull print file path not exist log when deploy on dledger mode
removed unnecessary try - with - resources statement in MicrometerMetricManager . java to streamline the code by eliminating unnecessary resource
http : / / issues . apache . org / jira / browse / amq - 4892 - add more detailed message count and
added multiple @ Deprecated annotations in AbstractJPASubQuery , JPACommonQuery , and JPAQueryBase classes to mark these classes as
added a method to check for system UI objects in AbstractLauncherUiTest . java to enhance functionality for handling system UI events in the launcher
changed the access modifier of ` logger ` and ` sessionIds ` from static to final in ` SessionRegistryImpl . java ` to allow for
added a check for empty cookieJar in InMemoryCookieStore and implemented a failure check in NullUriCookieTest to ensure proper handling of empty
[ bonsai ] add debug log to bonsai world state archive
changed the return type of ` getText ` methods from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexible text
added an @ NotYetImplemented annotation to the AlertsTest class to indicate that the test is not yet implemented due to a specific bug
added a try - catch block around the connection return logic in SocketConnector . java to ensure proper handling of IOException during connection return
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to clarify the
added synchronization to the heartbeatExecutorService in DbTxnManager . java to ensure thread safety when accessing shared resources
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce a new ` wrapWithTracingAnd
added a method ` updateFirstLineShowing ( ) ` to ` TextArea ` to address drag - selecting text out of the TextArea
added file system properties for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure consistent directory structure across different operating systems
refactor graphics configuration retrieval logic in Component . java to improve null safety and clarity to enhance code readability and maintainability by reducing
tika - 2852 -- add support for legacy oom in legacy mode
refactor pipeline processing logic in Pipeline . java to improve clarity and maintainability to enhance code maintainability and reduce duplication in processing logic
refactor command - line argument handling in PrintTagList . java to improve clarity and functionality to enhance user experience by providing clearer output
updated the method to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` in ` InsertDeParser . java ` and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4955 : fix test
[ java ] use awaitLeaderMemberId ( ) instead of awaitLeaderMemberId ( ) in startfromtruncatedrecordinglogtest
modified the calculation of the outer variable in LineBorder . java and updated its usage in Test4252164 . java to improve precision in
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to improve robustness by preventing null or empty
added a new statement for updating and resetting the " DEPLOYMENT _ ID " column in StandardChangeLogHistoryService . java and modified the
pdfbox - 4071 : use interactive form instead of printfields
removed the ` false ` parameter from the ` canUseIndex ` method calls in ` AlterTableAddConstraint . java ` to simplify the
camel - 14284 : camel - quickfixj - add support for provisional engine in camel - quickfixj
added a boolean field ` displayZoomControls ` and modified ` setMixedContentMode ` methods in ` RoboWebSettings . java ` to
added corporea _ block and corporea _ slab and corporea _ brick , and corporea _ slab
refactor ConnectionFactory class for improved clarity to enhance maintainability and readability of the code
added a method to disable menu items in GpsMainActivity to enhance user experience by providing a visual indication when menu items are disabled
updated message resource from " headline _ server _ search " to " filter _ list " in ExtendedListFragment . java to improve clarity
hhh - 15836 - fix test failure in entitytests
updated MotorMountConfigurationPanel to use autoResizeMode and modified instantiation in MotorConfigurationPanel to improve table resizing behavior and
updated the line separator from ` System . lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` in ` String
added getter and setter methods for creator and subject properties in POIXMLProperties and updated test cases in TestPOIXMLProperties to enhance property
replaced the call to ` super . doStop ( ) ` with ` super . doStop ( ) ` in HandlerWrapper . java to
[ java ] check if cncfile . exists ( ) be non - negative .
renamed ` NonMarkedFoo ` to ` FooCommand ` and updated related methods in ` UnsatisfiedTypeBounds . java ` to
added methods to check for JMOD files in ClassFileSourceImpl . java to ensure compatibility with modern Java files and improve class path handling
added nullability annotations to ` canonicalizer ` in ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBack
updated tokenRequest initialization to include request parameters in Saml2TokenGranterTest and UserTokenGranterTest to enhance token request
corrected the variable name from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor . java to ensure correct retrieval of values from the
added sync method to ZooKeeperAssign and ZooKeeperWatcher classes to enable synchronous operations for a specified path
added check for no current context in GlUtil . java to ensure proper error handling when no context is available
[ drools - 770 ] add test for ruleflowgroupdeactivate ( ) in executionflowcontroltest
added a return statement to the HystrixDashboardConfiguration class to ensure proper termination of the method execution
removed unnecessary exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve code cl
add cleanup method to clientqueuedisruptiontest . testqueuedisruptiontest . cleanup ( ) .
refactor : replace signatureprinter with defaultjavaprettyprinter . tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated import statements for GeoPointField , GeoPointInBBoxQuery , and GeoPointPrefixTermsEnum to improve code clarity and maintainability
added a new class FakeBuildable to provide a mock implementation of the Buildable class to facilitate testing by providing a mock implementation
fix nullpointerexception when there be no item in the list
rename ` path ` to ` timeseries ` in ` TSParser . java ` and update test cases in ` SQLParserTest . java ` to
added a check to return 0 if the v is less than EPSILON to ensure that the value does not exceed the specified threshold to prevent potential
replace calls to ` getBucket ( ) ` with ` _ storage . newBuilder ( ) ` in ` GcsPinotFS . java ` to
added a finally block for VertxUtils . blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure
added methods to create and drop the history view in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance functionality for managing
updated the cluster engine check from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test verifies the correct clustering engine
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to indicate that the test needs to be rewritten to ensure the test is
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new ` ParserStateObjectInputStream `
updated objectQuotingStrategy initialization in ChangeSet and DatabaseChangeLog classes to ensure proper handling of null values to improve robustness by avoiding potential
replaced ` parse ` method with ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve readability and
deleted the CsrfControllerAdvice . java file to the functionality was deemed unnecessary or redundant
added a method to quote the endorsed directory paths in AntCompiler . java to ensure proper handling of special characters in the endorsed
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to enhance user experience by providing smoother transitions when the drag
updated the calculation of Long values from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added handling for UNC path prefixes in WindowsPathParser and updated PathOps tests in PathOps to ensure compatibility with both absolute and UNC
refactor multicast socket creation in Promiscuous . java to simplify code and improve readability
replaced writer . close ( ) with writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leak
updated the return statement to clone the nBits array to ensure that nBits is not modified externally
changed the visibility of the deriveCollectorName method from private to protected in the ProfilerCollector class and added a custom name test in TestProfilerCollector
datamongo - 2043 - omits type hint when write simple type
added performance measurement for proxy factory creation in ProxyMaker . java to enhance monitoring of proxy factory creation time
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include ConnectException as a parameter to improve error reporting by providing more context in exception messages
refactor widget reinflation logic in Launcher and Workspace classes to improve code organization and maintainability by centralizing widget reinfl
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion functionality to ensure that the file dialog behaves as expected
simonstewart : do n ' t process display message if auto flush be true
improve the instructor student list page ui test to show the picture
added methods and methods handling in TestIgnorance . java to improve test isolation by excluding specific test methods from environment variables
removed the pointer parameter from the fling method signature in ScrollPane . java to simplify the method signature and improve readability
added null check for pageable in QueryDslJpaRepository and created a test for it in QueryDslJpaRepositoryTests to
added a method ` computeMemorySize ` to ` MemoryManager ` and corresponding tests in ` MemoryManagerTest ` to enhance memory allocation functionality and
camel - 14263 : camel - publish - jmspublisher should not trigger shutdown of the connection factory
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ table - common ] do n ' t clear previous batch in streamingaggtemplate
refactor plugin error handling by introducing a static method ` pluginErrorMessage ` to improve code readability and maintainability by centralizing error messages
added a new method ` stream ( TableIdentifier < ENTITY > tableId , ... ) ` to the ` StreamSupplierComponent ` class to enhance
updated logging messages and improved file renaming logic in MediaMonitor . java to enhance clarity of log messages and provide more informative error messages
refactor ` InjectorProxy ` and ` StandardInjectorProxy ` to use ` newInstance ` instead of ` setAccessable ` and ` newInstance `
[ hotfix ] [ stream ] remove unused close ( ) method from streamingcreatefunction
added unit tests for parsing and parsing SQL statements in multiple test classes to ensure correct parsing and handling of unsupported statements in SQL statements
replace return null with an ImmutableList . of ( ) in AppleTest . java to ensure the method returns an empty list instead of null
added Quality Distribution and Inc in NamedSetTest . java to test CruiseControl functionality to ensure comprehensive testing of the
added connection state checks and improved websocket connection handling in DeconzBridgeHandler . java and WebSocketConnection . java to enhance connection management and
removed null references from session attributes in AbstractProcessingFilter . java to simplify session management by eliminating unnecessary null checks
hbase - 25836 fix testregionreplicationreplicationendpoint . testregionreplicatetable ( ) failure on slow ci server ( #
added PMS configuration setup in FormatRecognitionTest . java to ensure the PMS configuration is properly set before running tests
cloudstack - 4892 : do n ' t attempt to create ova data disk template if template format be oVA ( # 4
replaced Spring BootTest with JUnit4 in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit4 testing framework
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated SQL statements to use ` val1 ` instead of ` val1 ` and modified column names in ` AppendOnlySchemaIT . java `
added a check to throw a CorruptIndexException for document count mismatches in SegmentReader . java to ensure data integrity by preventing corrupt
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 523 .
updated the length of the FilamentFactory from 1.0 to 0.9 for staves w / no starting barline to ensure
changed the ` handleFileUploads ` variable from ` true ` to ` true ` in ` VertxPlatformHttpServerConfiguration ` and added a
added a test for the ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` method in ` CsrfFilter ` to
removed the static class ` Fields ` from ` HotSpotObjectConstantImpl ` to simplify the code and improve readability by eliminating
replaced ` add ` method with ` addFrequency ` in multiple spell - checking classes to improve clarity and consistency in naming conventions across
added a new variable ` now ` and modified the ` withWatermark ` method call in ` FileIO . java ` to improve code readability
http : / / issues . apache . org / jira / browse / amq - 4892 - fix copy of cte statement
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of ResultSetMetaData in SQL queries
updated the library output format in JsLibrary . java to include the project root path to improve clarity of the output by including the root directory
updated the value of the slider model from 180 to Math . PI in RailButtonConfig . java to ensure the slider adapts correctly
updated drawEncloser method from 8f to 9f and added Timers . run ( 2f ) in Saves . java to
added support for expression language in KerberosProperties . java to enhance support for expression language in the application
removed null checks for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to simplify code and improve readability by eliminating
updated setupViews method to accept a ScrimView parameter instead of a Launcher instance to improve the handling of scrim views during
[ state . backend . changelog . periodic - materialize ] add configuration option to enable periodic materialization
added ` getValue ( ) ` and ` setValue ( ) ` methods to ` ProtocolParameter ` and implemented attribute handling in ` ParamTagHandler `
added a new test method ` testChunkingWithHead ` to verify the behavior of ` ChunkingServlet ` with head headers to ensure that
added bumped status handling and modified parseDetails method to check if details contain " Bumped : YES " or " Bum
added Content - Type header to SwitchToPostInterceptor and updated SearchRequestUnitTest to include " application / x - www - form - urlencode
refactor EmbeddedClientConnector class for improved clarity to enhance maintainability and readability of the code
added logging to warn about ignored fetch size settings in PhoenixResultSet to improve debugging and transparency regarding unsupported SQL feature
added initialization of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
updated the variable name from ` _ numRowsIndexed ` to ` _ numRowsConsumed ` in ` LLRealtimeSegmentDataManager . java ` to
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 16462 remove unused prefixtreecodec from hbase - prefix - tree
added a boolean flag ` inflationFailed ` and modified ` root ` variable in ` DesignerActivity ` and ` AttrInfo ` classes to
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
make the loweringphase abstract so that it can be use a schedule phase .
updated error message from download _ folder _ failed _ content to sync _ folder _ failed _ content in ErrorMessageAdapter . java to clarify
updated Makefiles to support newline characters and added new test cases in MakefilesTest . java to enhance compatibility with line breaks and improve test coverage
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask .
updated the refresh flag setting in SimpleBatchNode . java to use RF _ TRANSFORM instead of super . setTransformRefresh to ensure proper
disable safepoints when invokecfunctionpointer be uninterruptible .
refactor window size handling in LwjglWindow . java to use GLFWFramebufferSizeCallback for framebuffer size changes to improve
updated the calculation of ` translationX ` in ` LauncherAppTransitionManagerImpl . java ` to use ` mRecentsTransX `
renamed ` NodeLiteralNode ` and ` NodeLiteralNode ` classes to ` NullLiteralNode ` and updated related methods to improve clarity
added file length calculation and assertions in CompoundFileWriter and modified setLength method in FSDirectory and IndexOutput classes to ensure accurate file length handling and
updated AndroidNdkScriptGenerator and AntScriptGenerator to use Mpg123Test instead of SpriteBatchShaderTest and SoundTouchTest
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey in camel - aws2 - s3
added permission handling in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to improve permission validation
refactor ZookeeperClientServerRegisterRepository to improve handling of register URIs and streamline path processing to enhance code clarity and maintainability by
rename ` makeDeepStubs ` to ` deepStub ` and update related methods in ` ReturnsDeepStubs ` to improve clarity and
updated byte array creation logic to handle cases where the call value is empty to ensure proper handling of cases where the call value is empty
updated debug log message format in BibEntry . java to improve readability of log messages for better debugging
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and updated the ` PBE _ ALGO ` constant
rename ` length ` to ` inputLength ` and introduce a new method ` isValidOffset ` for offset validation to improve code clarity and
added validation for invalid job parameters in CommandLineJobRunner to ensure that invalid parameters are properly handled and provide clearer error messaging
updated message content comparison from " \ r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure
reformatted case statements in ExtendedConnectionDataSourceProxy . java to improve code readability and maintain consistency
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve concurrency handling and maintainability of sequence ID retrieval
added a new file ` Test . java ` that implements a static method ` sum ( ) ` to demonstrate the use of a
changed access modifiers of fields in ShadowWifiManagerTest , WifiUsabilityStatsEntryBuilder , and WifiUsabilityStatsEntryBuilder
added a new Java file ` Solution . class ` implementing sorting and acending functionality to demonstrate the use of sorting and acending
refactor column familyStores and endpointStateMap initialization in Table . java and Gossiper . java to improve concurrency handling and ensure proper
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and maintainability to enhance code readability and maintainability
refactor SyncFutureCache class implementation to improve code readability and maintainability
updated the DEFAULT _ DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and
[ java ] add support for string literal in uselessstringvalueofrule .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` to verify the behavior of the
added a default value for target max type shard size and updated HollowProducer constructor to accept it to enhance flexibility in handling larger shard sizes
added new version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBackwards
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated database location handling in TestSemanticAnalysis . java and DDLTask . java to improve clarity in test mode and ensure correct database description
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure that the database change log table is cleared when necessary
updated RestClient , CallPath , CallPath , and CallPathProviderTest classes to enhance version handling and improve path comparison logic
updated exception messages and added closed state checks in PhoenixDriver . java to improve clarity of error handling and ensure proper resource management
replaced ` null ` with ` UnsupportedOperationException ( ) ` in multiple Java files to throw an ` UnsupportedOperationException ( ) ` instead of ` NullPointerException (
added a new test class ` FolderPickerActivityIT ` and implemented screenshot functionality in ` ConflictsResolveActivityIT ` , ` FolderPickerActivity
[ gr - 23343 ] fix npe in nativeimagegenerator and compilequeue .
added a check for length in ` StringHelper ` and created a test for the ` removeLeadingAndEndingQuotes ` method in ` StringHelperTest `
refactor type handling in JpaQueryCreator and add a new method ` findByLastnameNotContaining ` in UserRepository to improve clarity
added a conditional check for authentication duration and modified branch ID assignment logic in SipSecurityManager . java to ensure proper handling of authentication duration and avoid
added a dispatch method to the P25MessageFramer class to ensure proper handling of P25 messages during processing
added null checks for the ` handler ` variable before calling ` checkClosed ( ) ` in ` WebSocketImpl . java ` and created a test
[ ds - 4892 ] add context . restoreauthsystemstate ( ) for indexeventconsumer and discoveryit
updated widget padding values in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView classes to ensure consistent padding values for widget
added methods to hide all apps in TaskbarUIController and modified closeOverlay method in BaseActivityInterface to improve user experience by ensuring all apps
removed synchronization from the launch method in CrawlJob . java to simplify the launch method by eliminating unnecessary synchronization
updated calculations for zoom level in JavaSEPort . java to ensure accurate positioning of the canvas based on zoom level
refactor notification handling to use ` startForeground ` instead of ` notify ` in ` UploadService . java ` to improve code clarity and
added a test for static final method in ExcessivePublicCountTest . java to ensure proper handling of static final int values
hbase - 25836 set retry number to 3 in testhbaseservicetesthbaseservicehandler . testhbase
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance
added error handling for FileNotFoundException in ResourceUtils . java and updated logging level in AbstractCipherExecutor . java to improve robustness by catching potential
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` to retrieve tickers
refactor enumConstants handling in EntityEntry . java to improve type safety and encapsulation to enhance code clarity and maintainability by ensuring proper
refactor ` registerSession ` and ` unregisterSession ` methods to accept ` Object endpointInstance ` instead of ` Class ` to improve flexibility
added ' [ ' , ' ] ' to the char array in FileUtils . java to ensure proper handling of special characters in the input string
added a ` Resource ` field and updated related methods in ` ResourceService ` , ` Resource ` , and ` DefaultServlet ` , and `
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before tests are executed
updated the method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with the new parameter strategy
updated database type check in CreateSequenceGenerator . java from PostgresDatabase to CockroachDatabase to ensure compatibility with Cockroach
removed the check for ` isEnum ` in ` ObjectStreamClass . java ` to simplify the name comparison logic for better readability
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new class SymbolNotFoundError . java to improve error handling by
added logic to handle pseudo - field cases in BinaryResponseWriter to ensure correct document creation based on return fields
added support for PING , PONG , and PONG in WebSocketImplBase and created a test for WebSocket pause functionality to ensure proper handling
corrected the whitespace in the NON _ IDENT _ ESCAPES string in RegExpScanner . java to improve code readability and maintain consistency
refactor DnsResolverProvider to use wildcard imports and update related tests to enhance cache management and improve test coverage for server selection behavior
added a conditional check for MessagingTracing class in TraceMessagingAutoConfiguration to ensure compatibility with Spring ' s tracing framework
mondrian : use quote char instead of quote char when use db2
updated import statements in multiple Java files to ensure consistency and correctness in the codebase
added a conditional check for closing tag in XMLLightweightParser to ensure proper handling of closing tags in XML parsing
changed the visibility of TouchCharInput from GONE to GONE to improve user interface responsiveness during touch input operations
added a null check for the current user before comparing the ID to avoid potential NullPointerExceptions when accessing the user ID
added a check for non - negative index before setting the slot and member in JSObjectLinker . java to ensure proper handling of non -
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use a dedicated setSuffix method to improve flexibility and maintain
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and updated related methods in RocketFigure3d . java and GuiceStartup .
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and ` TraceContextOrSamplingFlags ` to
added PendingIntent import for PendingIntent in FileDownloader and FileUploader classes to ensure proper handling of PendingIntent updates during notification updates
replaced the ` nextOrd ` method with a dedicated ` set ( ) ` method in ` Lucene80DocValuesProducer ` to improve
refactor DateTimeFormatter class for improved readability to enhance maintainability and facilitate future updates
removed unnecessary class loading for " Shell . shellFolderManager " in desktopProperties to streamline the code for better readability and maintainability
added null and empty checks for ` administratorCredentials ` in ` KerberosOperationHandler ` to ensure that ` administratorCredentials ` is not null or
added a constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN for tablet and two panel devices in BaseWidgetSheet
fix ( gl ) : do n ' t render the sketch window color
refactor Hashing class for improved performance to enhance performance and maintainability of the hashing algorithm
updated the accept method to accept a folder name instead of a file to improve clarity by using a more descriptive parameter name
updated the ` addToListIfNeeded ` method to include a ` StringRes ` parameter and added a new ` iconContentDescription ` parameter to enhance
removed redundant null check for type in JavaType . java to streamline code by eliminating unnecessary null checks
increase ACTIVITY _ START _ DELAY from 500 to 800 in Launcher . java to improve user experience by allowing more time
added a constant for the WEBAPP _ HOME file in SolrJettyTestBase and updated path handling in JettyWebappTest to improve
removed unnecessary diameter assignment and refactored selection logic in ThrustCurveMotorSelectionPanel . java to streamline the code and ensure
added import for BufferUtil and cleared the buffer in ByteBufferPool . java to ensure the buffer is cleared before further operations
fix # 233 alarm trigger create via rest api ( # 233 )
replaced " authorization . ldap . groupBase " and " authorization . ldap . groupMembershipAttr " with " authentication . ldap . groupMembership
added deleteExchange ( " x " ) and queueDelete ( " q " ) in DurableOnTransient . java to ensure proper cleanup of
[ hotfix ] [ test ] use get ( ) instead of get ( ) in bulkslotproviderimpltest
added a listener to handle connection failures in PingService and ServerInfoService to improve error handling for server connection failures
refactor CompositeHandlerAdapter class to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code organization to enhance maintainability and readability of the codebase
added exception handling for lookup execution in SulongLibrary . java to improve robustness by preventing application crashes due to illegal state exceptions
updated Spring Security version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improvements
updated ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and modified related methods to use ` AtomicReference ` to improve
added a check for non - empty annotations before processing annotations in JavacParser . java and created a new test class TestAnnotatedAnon
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure proper access control for internal classes in the package
changed the strict variable from false to true in StaxEventItemReader . java to enable strict functionality by default
added an ` isExhausted ` flag and modified the ` readPartition ` method to include an ` isExhausted ` array to
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a check for the x - Y coordinate before returning theHSB type to ensure that the logic correctly handles cases where the x - Y
refactor ` getFolderCreationRadius ` and ` getFolderCreationRadius ` methods to use a target cell for improved clarity and functionality to enhance
added import for FileDisplayActivity and removed unnecessary showLoadingDialog calls in FileOperationsHelper and OCFileListFragment to streamline loading dialog display
added null check for uigestureFile before loading logs in IdeSnapshot . java to avoid potential NullPointerExceptions when uigestureFile is not
updated ` FieldNamingPolicyTest . java ` to use ` Locale . getDefault ( ) ` instead of ` toUpperCase ( ) ` to ensure consistent
added listener setting in XmlSuite . java to enhance the functionality of listener management in the XML suite
added a new method ` loadWithNewGlobal ` to the ` Global ` class and modified the ` Context ` class to include a new global
added ` fromJsonString ` method to ` StarTreeIndexSpec ` and modified tests in ` TableConfigTest ` to enhance JSON parsing capabilities
added import statement for ObjectPostProcessorConfiguration and updated security configuration classes to utilize ObjectPostProcessorConfiguration for improved configuration handling
updated string replacement methods in AndroidFileHandle , GwtFileHandle , and FileHandle classes to use a single quote instead of single quotes to
[ drools - 1342 ] fix nullpointerexception in inoperator . insert ( )
added import for FieldCache and purgeFieldCache in TestDistributedSearch . java to avoid FC insanity during segment deletion
add unit test for boundary message event on subprocess multi instance
add a method to resolve a static method in the jimple programmanager . resolveinterfaceorvirtualcall ( ) method .
http : / / issues . apache . org / activemq / browse / amq - 4892 - allow for a hash bucket
added constants for NETSCAPE _ SLOT _ ID , PRIVATE _ SLOT _ ID , and FIPS _ SLOT
added a new ` add ` method to ` Layout ` and modified the ` GdxRenderer ` class to accept a ` Alignment ` parameter to
[ hotfix ] [ test ] mark unalignedcheckpointitcase as ignored
added imports for midi sound functionalities in JDK13Services . java to ensure proper handling of data lines in the application
added a check for the existence of the keyword before adding it to the reference to ensure that the keyword is only added if it does not already
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4545 : add a
added methods to retrieve start count and weight in SegToken and updated the findInTable method in WordDictionary to improve token management and ensure
escape telegraf ( # 644 )
[ java ] add udp port to memberimpl . setudpport ( ) and memberserialization .
renamed ` OperatorMulticast ` to ` OperationMulticast ` in ` OperatorMulticast ` and ` OperatorMulticast ` to improve cl
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message sending to complete
added a try - finally block around the assertion in VertxTestBase . java to ensure proper resource management and avoid potential memory leaks
added a synchronized method to destroy the cached event registry in SessionFactoryServiceRegistryImpl to ensure proper resource management and prevent memory leaks
simonstewart : fix test that fail on window
fix ( pytorch ) : fix pytorch - pytorch - pytorch - pytorch
added task stack listener to clear the force invisible flag in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to improve
pdfbox - 4071 : allow date pattern to be profiling , a suggest by valerybokov
camel - 14284 - camel - cxf : fix npe in camel - cxf
refactor animation handling logic into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for playTime calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime is only set for non - debug
added a conditional check for BailoutOnException in C1XCompilation . java and updated C1XOptions . java to include a
changed signup and passwd paths from " / create _ account " to " / forgot _ password " and updated assertions in IdentityZoneConfiguration
[ hotfix ] [ runtime ] rename ` previousexecutiongraphAllocations ` to ` reservedAllocations ` in ` SlotProfile . java `
renamed the variable ` onlyFormat ` to ` format ` and updated its usage in ` TimeConverter . java ` to improve clarity and
added nodatacontainer property to the GeoTiffReader and a corresponding test in GeoTiffReaderTest to ensure that the NoDataContainer
llvm : do n ' t print error message if there be no source
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java `
replaced ` blockUntilConnected ( ) ` with ` CountDownLatch ` in ` TestPathChildrenCache . java ` to ensure proper handling
added null checks for the ` getNullableResult ` method in ` ArrayTypeHandler ` to handle potential null values to ensure robustness by preventing
replaced the RegexpTunnel class with reflection - based prefix retrieval in JakartaRegexpCapabilities . java to improve flexibility by allowing dynamic
updated the application selection method to use ` Application . class ` instead of ` null ` to ensure compatibility with the latest API changes
[ drools - 1342 ] fix npe on mutable global .
replaced ` Preconditions . checkNotNull ` with ` TransactionUtil . validAssetName ` and ` validAssetDescription ` methods in ` AssetIssueAct
copypaste : do n ' t add the parent algorithm if it be a textfield
updated action label from " actionShowToastWithIconLabel " to " actionShowToastDesc " and updated status messages in multiple classes
replace setSeedNodes ( ) and setActiveNodes ( ) with addAll ( ) in TronNetService . java to streamline node configuration
updated assertions in BaseTokenStreamTestCase to include additional context and added failure handling in BaseTokenStreamTestCase to improve debugging information and ensure
log4j2 - 1343 : log4j2 - 1343 log4j2 - 1344 log4j
added methods to perform item click and findIndexOfItemContainingText in ShadowAdapterView and ShadowListView to improve functionality and error handling for item
pdfbox - 4892 : improve code readability , a suggest by valerybokov
added a null check for loopScope and implemented the afterMethodScope method in GraphDecoder and PEGraphDecoder to ensure proper handling of method scope
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and added a new test class for security contexts to improve code clarity
added a new test method to change the service name in ZipkinSpanReporter to ensure that the service name changes to the automatically provided service name
added logging statements to JavaInMemoryFileManager , JavaInMemoryFileManager , and JavacToJarStepFactory classes to enhance visibility
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
test fix : increase timeout in try -
added a cache capacity parameter to the ` of ` methods in ` ConfluentSchemaRegistryDeserializerProvider ` and ` ConfluentSchemaRegistry
rename ` remind ` to ` checkatStartup ` in ` UpdateInfoDialog . java ` to clarify the purpose of the checkbox
added methods to retrieve boolean values from multiple methods in NodeGenerator . java to enhance the flexibility and usability of the NodeGenerator by allowing
hhh - 15836 - camel - cascading - action : fix a bug in hibernate 5 . x
added methods for retrieving and setting proto properties in ScriptObject . java to enhance object extensibility checks for better object management
updated default read mode from " heap " to " mmap " in CommonConstants . java and added logging in ImmutableSegmentLoader . java to ensure
added imports for ByteArrayTemplate and implemented it in ArrayTemplateBuilder . java to enable handling of byte data types in the ArrayTemplateBuilder
added Hipchat and CasSamlSPHipchatConfiguration classes to manage Hipchat properties in SamlServiceProviderProperties to enable integration with
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` in ` CommandRegistry . java `
added context handling for uncovered HTTP methods in ConstraintSecurityHandler . java to improve logging clarity and traceability for uncovered HTTP
camel - 14263 : camel - aws2 - sftp - allow login to be set to true
camel - 7999 : camel - activemq - do n ' t create transaction manager if there be no transaction manager
cloudstack - 4892 : fix typo in vmwareresource . java ( # 4892 )
refactor Timers class for improved clarity to enhance maintainability and readability of the code
updated imports and variable names from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP in DefaultDefectReporter . java to improve cl
removed deprecated methods from UAX29URLEmailTokenizer and its constructor in TestUAX29URLEmailTokenizer to streamline the codebase
removed the ` Map < Object , Object > ` parameter from the ` ScriptObject ` class and updated assertions in ` ContextTest ` to simplify
refactor EventBusMetrics class for improved event handling to enhance performance and maintainability of event bus metrics
danielwagnerhall : use eperson . getlanguage ( ) instead of eperson . getlanguage ( )
updated JaversTransactionalDecorator to implement InitializingBean and added a method to ensure schema is properly initialized after properties are set
removed null check for pgTypeName in TypeInfoCache . java to simplify code by eliminating unnecessary null check
added import for Server and updated server setting in ScopedHandlerTest . java to ensure proper handling of multiple server instances in the test
fix calltimeoutexception in wait - notify phase
updated the condition in RestLoginProcessingFilter to check if the login request is empty to ensure that the login request is valid before proceeding with
updated permissionNode comparison from ` Objects . equals ` to ` String . equals ` in ` CommandMap . java ` to ensure proper handling of
renamed ` encoding ` to ` sourceCharset ` and added ` setCharacterEncoding ` method in ` AbstractCompiler ` and ` ICompiler `
changed postLogin data type from byte [ ] to String in HostBean and adjusted related methods accordingly to simplify data handling by using string instead of
refactor GeneralOptimizationDialog to use final variables for better readability and maintainability to improve code clarity and ensure immutability of
camel - 14284 : camel - jbang - enable / disable context reload functionality in camel - main - configuration - spring - boot
updated console logging settings in CommonTestUtils . java for improved clarity and consistency to enhance readability and maintainability of log output
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for content type support before invoking the invokeSafely method in RequestBody . java and created a test for it in RequestBody
added a condition to check if the embedded settings are enabled before proceeding with the server to ensure that the embedded settings are only enabled when the
move player movement to the player if it ' s default .
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted the logic for determining the length of the upstream list
fix for bug # 186 negative timestamps do not work . change the gsonparser to allow zero and negative timestamps in the query .
updated parameter names for " gcmsort " , " gcmdir " , and " desc " in ApacheHttpClientMediaWikiApi . java
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionTransactionCoordinator ( ) ` across multiple classes to improve clarity and
replaced ` ReentrantLock ` with ` PipeTaskCoordinatorLock ` and added a new class ` PipeTaskCoordinatorLock ` to improve
added a conditional check for preinstrumentedJars in DefaultSdkProvider . java based on system property to enhance flexibility in version resolution based
updated conditional check from ` ! isSilent ` to ` ! isSilent ` in ` ExecDriver . java ` to ensure proper handling of silent
added validation for default and required fields in IndexSchema . java and created corresponding test cases in BadIndexSchemaTest . java to ensure proper error
simplified the repair logic in StorageProxy . java to improve code readability and maintainability
replaced ImmutableSortedSet with Iterables in PrebuiltCxxLibrary . java and added a new test in PrebuiltCxxLibraryDescriptionTest
added a boolean flag ` isSKIDSensitive ` and ` isSNSensitive ` to the ` AdaptableX509CertSelector ` and `
log4j2 - 1343 use abstractappender . parseInt instead of string . parseInt
added @ Deprecated annotation to GuiScreenEvent . java to indicate that the GuiScreenEvent class is outdated and should no longer be used
added methods to add and remove new categories from the categoryEditSearchRecyclerViewAdapter to ensure that only relevant categories are added and removed from the
# 163 - ebean - ebean - ebean - ebean - ebean - ebean - ebean - ebean -
added iteration over properties for RocketComponent instances in RocketComponent . java to ensure proper handling of overridden components in the RocketComponent class
replaced ` doCompile ` method with ` post ` in ` JavaCompilerService ` and added error handling in ` JavaDiagnosticProvider ` to
replaced the ` doCompute ` method with a ` Supplier < V > ` in the ` MultiThreadedBuildRuleResolver ` class to
added a mutex to the ` WanReplicationServiceImpl ` class and refactored the ` StripedExecutor ` initialization to improve thread safety
added null checks and improved path creation logic in Partition . java and DDLSemanticAnalyzer . java to enhance robustness by preventing
refactor code to use lambda expressions for better readability to improve code readability and reduce boilerplate code
added a new file ` FilesTest . java ` to validate file deletion functionality and error handling in ` Files . java ` to ensure that the
removed unnecessary try - catch blocks from ServerSocketAdaptor and SocketAdaptor classes to simplify code by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList with addWorkingDir method for adding files to improve clarity and functionality of working directory management
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` in ` ItemInfo .
changed the visibility modifier of the GeneratedEntityDecorator class from public to private to restrict access to the class for better encapsulation
updated the documentation for the java - Durl variable in SimplePostTool . java to improve clarity and consistency in the documentation
ggb - 1193 add test for max / min / symbolic toggle
refactor client container initialization and shutdown logic in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainerProvider to improve error handling
updated the condition to check for the presence of a type in the type check to ensure that the type is not null before proceeding with the
close web application context after each test to prevent memory leak
added search functionality to the RemoteBrowseHandler class to enhance user experience by allowing dynamic search functionality in the application
added visibility setting for the neutral button in SetupEncryptionDialogFragment to improve user experience by allowing the neutral button to be visible
hhh - 15836 - itemdao . countitems should return countitems instead of countnotarchiveditemscount
updated string concatenation syntax in DDLTask . java for consistency to improve readability and maintainability of the code
added logging functionality for OAuth2 error handling in CheckTokenEndpoint . java to improve error reporting and debugging capabilities
refactor multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
updated the ` identityZoneEndpointsIntegrationTests ` and ` JdbcIdentityZoneProvisioningTests ` to use ` HttpEntity ` instead of ` RestTemplate
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltip text in SQLConsole . java and SQLConsole .
added support for run single test method with JUnit 5 in ActionProviderImpl . java to ensure compatibility with JUnit 5 for single test methods
replaced ` HumanReadableException ` with ` IOException ` in ` WorkerShellStep . java ` to improve error handling by providing more specific
[ hotfix ] [ table - common ] rename @ publicevolving to @ experimental
[ hotfix ] [ doc ] fix typo in streamcepstrumsource
modify index handling in List . java to ensure index does not exceed the defined size to prevent potential ArrayIndexOutOfBoundsException when accessing items
replaced ` OrExpression ` with ` Parenthesis ` in ` CloneHelperTest . java ` to ensure the test accurately verifies the
added a confirmation option to the DebugPaste class and modified the permission assignment in DebugPaste . java to enhance user experience by allowing confirmation
replaced calls to ` get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling and provide clearer
simplified the focus logic in DrawEquationWeb and added a newCreationMode check in RadioButtonTreeItem to improve code readability
replaced ` AbstractDescriptionArg ` with ` CommonDescriptionArg ` and updated import statements in ` GoBinaryDescription . java ` to utilize
updated the environment variable retrieval logic in Jooby . java to ensure the application environment is loaded from the classpath if it exists to improve
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and added a new ` SecondDummyRetryListener
use decimal instead of decimal ( # 498 ) ( # 498 )
added final fields to the email and author fields in the Contribution class to improve code clarity and ensure immutability of the email and
modified the loop to loop through a while loop to ensure that the output does not exceed the specified length to improve performance by avoiding unnecessary string
refactor element assignment logic in Subject . java to ensure proper handling of LinkedList instances to avoid potential NullPointerExceptions
updated exception messages in StaxEventItemReader and added getURL method in StaxEventItemReaderTests to improve clarity of error messages for
replaced geometry and techOrig with a new PointLight array and updated the simpleUpdate method in TestMultiRenderTarget . java to improve performance
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to improve robustness by handling cases where the current client cannot be
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration is added
added BigInteger and DSAParameterSpec instances to KeyStoreManager . java to enhance security by supporting additional parameters for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set the engine version of the persisted process definition in BpmnDeployer and BpmnDeployerTest to ensure the process definition uses the correct
simonstewart : fix runtime . references . strict , space . gobbling , space . gobbling , space .
updated thread handling logic in CEntryPointSnippets . java and VMThreads . java to improve thread attachment verification to enhance thread management and ensure
updated GenericUDFMapValues . java to handle null maps and added a new TestGenericUDFMapValues . java file to improve robust
corrected the spelling of " interceptors " to " handlerInterceptors " in the EndpointWebMvcAutoConfigurationTests . java file to ensure consistency
added configuration properties for oil well generation and spouts in BCEnergyConfig . java and updated OilGenerator . java to enable
added a check for the existence of the " . clean - me " directory in ImportContext and updated file existence checks in JobQueue to ensure
refactor exception handling in MemoryRealm to use a dynamic resource retrieval to improve flexibility and maintainability of the code
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
updated EXTID constants in ZipConstants . java and added import for ZipConstants64 . java in ZipEntry . java to ensure compatibility with the latest
refactor newFileSystem methods to use a dedicated ensureFile method for better error handling to improve robustness and maintainability of the code by ensuring
updated the width of the condition panel in IfControllerPanel . java to improve layout consistency by using a more descriptive variable name
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added JSON serialization annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to enable JSON serialization for API endpoints and
do n ' t delete the db entry if the file deletion fails
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
[ java ] correct the offset of the response message in AbstractAjpProcessor . java to ensure correct positioning of the response message
do n ' t stop the admin console server if there be an error
refactor WebSocketImplBase to remove unnecessary synchronization to improve thread safety and ensure proper cleanup of handlers
added configuration properties for device ID transformation methods and ID table log files in IoTDBDescriptor . java to enhance configuration flexibility for managing device ID
updated DOCS _ PER _ TYPE from 2000 to 100 and added a new DelayingSearchComponent class to improve directory readability and introduce
updated the condition for checking the ` mockTsp ` in ` TestSignatureInfo . java ` to ensure that the ` mockTsp `
refactor Script initialization in Transaction and TransactionTest classes to use the witnessScript instead of the script code to improve code clarity and maintainability
updated the expression in IndexSchema . java from " / schema / types / fieldtype " to " / schema / types / fieldType " to
updated Completers . java to include NullCompleter in valueCompleters . java and added a new OptionCompleterTest . java
[ s3 ] fix npe in s3utils . listobjects ( )
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger source peer IDs
added a new method ` UploadFile ` to handle file preparation in ` FtpHelper . java ` to improve file handling and error logging for
updated the reply button ' s alpha value from 5.5 f to 1.0 f to improve the visual appearance of the reply button
added mocking for ` AccessLogContext ` and modified expected timestamp formatting in ` AccessLogSupportTest . java ` to improve test clarity
updated the file path in MaryCacheTest from " testfiles - deleteme " to " tmp / testfiles - deleteme " to
simplified the initialization of subscribers in SettingImpl . java to simplify the code and improve readability by eliminating unnecessary null checks
added a null check for the marshaller parameter in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to improve error handling by throwing an IllegalArgumentException when
replaced printstacktrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by using a more
added a condition to check if the asset directory is not in dev mode and created a test for static directory class path in dev mode to ensure
[ hotfix ] [ rocksdb ] add write option to rocksdbkeyedstatebackend
updated DEFAULT _ FORMAT from " value - tag - index " to " value - index " in CoreLabel . java to correct the formatting of
fix dijkstrabi hint in mainactivity
[ besu ] set native native flag to true ( # 1188 )
renamed ` DuclsSandboxTest ` to ` SandboxTest ` and updated its usage in ` DuclsSandboxTest ` to
camel - 16462 : camel - cxf should use exchange . exception instead of log a warning
changed the access modifier of the forwardPropagateTree method from package - private to public to allow access to the method from other classes
updated the parameter for the count ( ) query in JDBCExample . java to include 20ms as a parameter to ensure that the count ( )
improve error message when interpolate file location for profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom functionality to ShareActivity to enhance user interaction by allowing back navigation in the app
added a check to skip processing for deprecated fields in Json . java to ensure proper handling of deprecated fields in JSON processing
added animations for displaying and hiding the send layout in LauncherFragment to enhance user experience by providing visual feedback during layout transitions
updated method name from " readTokenStorageFile " to " readTokenStorageFile " in ` Utils . java ` to improve code readability
added Progressable parameter to multiple writer and output stream creation methods to enable progress tracking during file operations
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider . java
remove contribution from the panel by contribution and update panel ordering and colors to improve contribution management and visual consistency
rename ` @ component ` to ` @ component ` in ` BareMetalTemplateAdapter ` and rename ` @ Component ` to ` Hypervisor
added a check to set the user ' s directory if the path is empty to ensure the application uses the correct user ' s directory when the
updated the calculation of the sample rate in DefaultAudioSink . java to use a default value of 48000 instead of a default value to ensure
log4j2 - 1349 fix log4j2 - 1349 ( log4j2 - 1349 )
updated VerificationInOrderWithCallsTest . java file to improve test coverage and reliability
corrected the variable name from ` setFromAxis ` to ` setFromAxis ` in ` Quaternion . java ` to ensure the correct axis is
updated the constant name for COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to align with the
add a test for the ` connect ` listener in ` TestFrameworkBackground . java ` to ensure that the ` firstListener ` state is correctly
bugfix # 5355 - add documentation for union and section type
refactor conditional checks for one - handed mode support in RecentsAnimationDeviceState . java to improve code readability and maintainability by
added onDetachedFromWindow method to manage AppsCustomizeAsyncTask cancellation to ensure proper resource management and prevent potential memory leaks
added a dictionary parameter to MorfologikAnalyzer and updated MorfologikFilter to accept a dictionary resource to enhance flexibility
replaced ` count = 3 ` with ` thrown ` in ` ResultSetTest . java ` to streamline exception handling by eliminating unnecessary
updated the initialization project message from " debug " to " " in GradleBuildService . java to clarify the purpose of the
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and ` preventedByLocking `
refactor tooltip text handling in ComponentTreeRenderer to use a new applyToolTipText method to improve code readability and maintainability by reducing
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server
added null check for deviantart username and password in DeviantartRipper . java to improve robustness by preventing null
refactor Google package signing and primary key retrieval in PackageUtils . java to improve code readability and maintainability by reducing redundancy
replaced the method call to `SolutionBusiness ` with ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtle
added a method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to improve event handling for window
added email description to the template in EntityGroupKeyContentFormatter and updated the detection description in TestEntityGroupKeyEmailContentFormatter to enhance the
replaced the call to ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added validation in LocaleTest . java to ensure correct language code retrieval and improve error handling for invalid
refactor ChangeLogParser usage and encapsulate UpdateVisitor creation in a separate method to improve code readability and maintainability by centralizing the
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when the screen is pinned
added ` mNoDataText ` and ` mNoDataTextDescription ` fields and updated rendering logic in ` Chart . java ` to improve
added synchronization around cookie checks in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when accessing shared resources
refactor chunk handling logic in NettyResponse . java and NettyResponseTest . java to improve code readability and maintainability by encaps
updated test cases for HTTP scheme in Http2TestBase , TestHttp2Section _ 8 _ 1 , and TestHttp2Section _ 8
fixed - redissonlocalcachedmap . getkeyset ( ) and getentryset ( ) do n ' t return value if store mode
camel - 14263 : camel - jpa should use component . getcomponent ( ) instead of component . getcomponent ( ) .
updated the assignment of jumpSpeed from fallSpeed to jumpSpeed in PhysicsCharacter and PhysicsCharacter classes to ensure consistency in the
added a null check for reparsedFunction in the parser condition to ensure proper handling of syntax extensions when reparsedFunction is null
updated logging statements in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by standardizing logging
added deprecated methods for retrieving old segment paths in FileUploadDownloadClient to signal that these methods are outdated and should no longer be used
updated the method call from ` findOne ( ) ` to ` filter ` in ` MongoDbTailTrackingManager . java ` to ensure the correct
added a method to assert predicate failures in LanguageTestSupport and updated JuelLanguageTest to use it to ensure that the predicate functions correctly with
added a method to bound the alpha value in RecentsView . java to ensure that the alpha value is within the specified range to prevent
updated the version string replacement in ManifestReversion . java to ensure correct formatting of the import package attribute
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized the JavaSnippetRepository to ensure the JavaSnippetRepository is properly initialized before use
updated loop structure in StarTreeRecordStoreCircularBufferImpl . java to use a loop for processing time buckets to improve code readability and
updated the URL from " code . google . com / p / chromedriver / downloads / list " to " http : / / chrom
camel - 9088 : use prepared statement and close them . thanks to james lindstorff for the patch
updated import statements from sun . syndication . feed . syndication . java to rome . feed . rome . feed .
added handling for " Content - Length " headers in TransferCompletionHandler and updated NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap to
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor ` enableSuppression ` and ` writableStackTrace ` from ` EnhancedRuntimeException ` to simplify the constructor by eliminating unnecessary
[ log4j2 - 1349 ] make socketappendertest more robust .
camel - 14263 : camel - event - admin - builder should use eventadminbuilder instead of eventadminendpointbuilder
removed unnecessary ` NoSuchMethodException ` and ` Exception ` annotations from ` compare ` methods in ` ByteArray . java ` to simplify exception handling and improve code
added a method to disable input proxy handling in RecentsAnimationWrapper . java to improve user experience by preventing unintended interactions during
added JUnit @ Ignore annotation to RestletDomainServiceTest . java to temporarily disable the test due to issue CAMEL - 677
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify method signature and improve code readability
updated module - info . java file to reflect the new module path structure in the module - info . java file to improve organization and clarity
added getter methods for source directories in JavaLanguageServer and JavaServerConfiguration classes to enhance code readability and provide access to source directories for better
removed the ` MENU _ OPEN _ WEB ` setting and removed the ` menu _ mute _ hashtags ` case from the
corrected spelling of " nodeIsAncestorOf " and " nodeIsDescendantOf " to " nodeIsNotDescendantOf " across multiple files
fix worldeditplayer . getposition ( ) return negative value
added PathNotExistException to selfCheckDataTypes and modified the selfCheckDataTypes method to include PathNotExistException to improve error handling for file
updated formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ table - common ] move mailboxexecutor to abstractstreamoperatorfactory
hbase - 16462 add test for unauthorized table state in meta
updated method calls from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated BlockJUnit4ClassRunner to retrieve the Java class class from the test class to ensure compatibility with the current class ' s Java class
[ drools - 1342 ] fix kie watcher when delete an item ( # 1343 )
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by adjusting
[ hotfix ] [ core ] add parent - first logging pattern to coreoptions
replaced direct calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to
added a call to forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for better performance
hhh - 15836 - fix test failure in session . close ( )
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
removed stack trace printing from exception checks in SchemaValidatorTask . java to simplify error handling by eliminating unnecessary stack trace printing
replaced ` UncheckedIOException ` with ` ignore ` in ` Contents . java ` to improve error handling by ignoring specific IO exceptions
replaced ` Activity ` with ` AppCompatActivity ` in ` GeneratePubkeyActivity . java ` to ensure compatibility with newer Android features and
ruby flavor : do n ' t emit last term if silent = true
updated logging level from warning to debug and added null checks for username and password to improve logging granularity and prevent potential NullPointerExceptions
[ java ] remove useofcaches from nio2endpoint . setusecaches ( boolean ) .
refactor CasGeoLocationConfiguration to use a Resource instead of MaxmindProperties to improve flexibility and avoid potential null pointer exceptions
update instructorfeedbackresultspageuitest to use new helper view instead of helper view
added a scan parameter to the ` useEncodedQualifierListOptimization ` method in ` BaseResultIterators ` and ` EncodedColumnsUtil `
changed access modifiers of methods from public to public in ApprovalStore and ApprovalsControllerService classes to allow broader access to these
added a new flag ` mStartedDownload ` to track if the download process is started to ensure that the download progress is canceled when the download
updated method names from ` getOpenView ( ) ` to ` getAnyView ( ) ` in ` TaskbarDragLayerController . java `
updated the project version from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to
replaced ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code readability and
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
add null check for centerGeo in ProverBotanasMethod . java to prevent potential NullPointerException when centerGeo is null
remove espressohome option from espressoproperties and remove it from espressoproperties
doc ( ct ) : fix typo in javadoc ( # 269 )
changed the visibility of the ` DeleteSessionAction ` class from protected to final and refactored the session management logic to enhance encapsulation and
rename ` InvalidDocumentStoreApiUageException ` and ` InvalidDocumentStoreApiUsageException ` to ` InvalidDocumentStoreApiUageException
updated JoinQParserPlugin , SolrIndexSearcher , TestJoin , and SolrIndexSearcher classes to ensure proper handling of empty results and
added a file parameter to the triggerMediaScan method call in FileDownloader . java to enhance media scanning functionality by associating the file with
removed conditional checks for verbosity in TestRunning . java to simplify the code and improve readability by eliminating unnecessary conditional checks
added custom G - code settings to the MainWindow class to enhance user interaction by allowing custom G - code settings
pdfbox - 4892 : use java . io . BufferedWriter instead of java . io
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added SolrTestCaseJ4 . ignoreException ( " unset . sys . property " ) and resetExceptionIgnores ( ) in Test
added a method to remove and hide the fragment and action bar in GpsMainActivity to improve user experience by ensuring the fragment is properly removed
updated the order of spanishTokens and spanishTokens2 in TokenizerAnnotatorITest . java to ensure proper handling of special characters in
replaced instances of ` asByteRange ( ) ` with ` Byte ` for ` Range . Byte ` and ` RemoteRawHandler ` to
updated the file name from ` shapeoko . txt ` to ` line _ skip _ test . gcode ` and modified the rendering logic
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
updated method name from ` then ` to ` containsAllEntriesOf ` in ` Assertions _ sync _ with _ InstanceOfAssertFactories _
added a condition to close the exchange client if the output stage is incomplete to ensure proper resource management and prevent potential memory leaks
fix ( jabref ) : use jabrefpreferences instead of bibdatabasecontext . getfiledirectory ( )
removed the import of SolrClient from ChaosMonkey . java to eliminate unused dependencies and improve code clarity
added null check for fas before creating a new JdbcConfigService instance to avoid potential NullPointerExceptions when fas is null
reformatted code in NestedRepositoryTreePanel . java for improved readability to enhance maintainability and clarity of the code structure
changed the constructor visibility of ExtensionTypeHeader from package - private to public and added validation for the extension type to allow instantiation of ExtensionTypeHeader
pdfbox - 4892 : throw ioexception instead of ioexception
corrected the spelling of " deleteOnShutdown " and " pushOnShutdown " to " pushOnShutdown " in PrometheusProperties .
[ flink - 20613 ] [ statemanagertest ] add error handling for reactive state machine trigger
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` to ` BuckConfigTest . java ` to
added a default button to the signin button in InitialAccountRegistrationFrame . java to enhance user interaction by allowing the signin button to be
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN configuration in HiveConf . java and updated Tez
updated error logging to include the exception parameter to improve error reporting for better debugging
updated package name from ` org . axonframework . util . reflection ` to ` org . axonframework . util ` in multiple files
added a static method ` listableCollector ` in ` OidcIdTokenClaimCollector ` and created corresponding tests in ` OidcTestsSuite
removed the ` center ` variable from multiple classes to streamline the code by eliminating unnecessary duplication
remove unnecessary null check for pcollection in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory class for improved SSL handling to enhance security and performance of SSL connections
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations instead of 5000 for maxExpectations and maxLogEntries to ensure tests reflect the
updated return value from " access _ confirmation " to " access _ confirmation _ error " to clarify the purpose of the return value
added a new class ConsumerClassLoaderFilter and updated ReferenceConfigTest to use it to ensure the correct context class loader is used in the cluster filter
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
rename ` setRolloverIcon ` and ` setRolloverPressedIcon ` to ` setRolloverPressedIcon ` in ` FontImage .
refactor grid translation handling in TaskViewUtils and TaskViewSimulator classes to improve code clarity and maintainability by centralizing grid translation
refactor Assertions class for improved clarity to enhance maintainability and readability of the code
added null checks for currentDateTimeFunction in multiple database classes to ensure that the function is returned when it is not null to avoid potential NullPointerExceptions
added a method ` anonymousPath ` to the ` IOUtils ` class and updated logging messages in ` Log4jUtils ` to improve path handling
updated the ` call ` method to include a ` contentDescription ` parameter in ` DigitalWellBeingToast ` and ` Task
increased the timeout duration for metaAvailable in CatalogTracker . java to allow more time for metaAvailable to complete before proceeding with the
refactor LineNumberTagAggregator and TestDominance classes for improved clarity to enhance maintainability and readability of the code
fix ( core ) : return null instead of null
hhh - 14836 - add integration test for fetch post and detail projection
added a method to remove extra empty screen and adjusted startSearchPageIndex based on the presence of workspace screens to improve user experience by
updated baseDerivedRefs initialization and added null check in IndexedValueMap to improve memory allocation and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart , GooglePieChart , and GooglePieChart classes to ensure proper formatting of special characters in chart
refactor the handling of batches in SendingAccountor . java to improve error handling and provide clearer logging for interrupted interruptions
added a position field and a method to set its value in WALPrettyPrinter to enable users to set the position of the printer in a file
fix testnettytransceiverwhenfailsconnect fail to connect
refactor SimpleReport to sort event lists before generating reports and add a test for event sorting to improve the accuracy of report generation by ensuring events
added a test method to verify CSV line handling with escaped quotes in CSVFileLogger to ensure correct formatting of CSV lines containing double quotes in CSV
[ coref ] move coref . scorer to coref . data and coref . useconstituencytree and coref
do n ' t send a message if the recipient be not remote
removed @ JniImpl annotation from VM . java to streamline code by eliminating unnecessary annotations
updated variable names from " http . plugin . check . blocking " to " http . plugin . check . robots " and " http . plugin
added a condition to check if the video HDR format is " dolbyvision " in FFMpegVideo . java and removed unnecessary
updated package names from " other _ package " to " other _ package2 " in AstTests . java to ensure compatibility with the new package
update worldborder . setdiameter to handle percentage less than 0.99 and add unit tests for worldborder . setdiameter
hbase - 25815 addendum addendum addendum addendum
added error handling for login events in AppWFull . java to improve error management by ensuring only valid login events are processed
updated the ` markDataResourceOnline ` method to use ` generateInstanceConfigs ` instead of ` new ArrayList < InstanceConfig > ` to improve
changed FieldAttributes class from final to public to allow access to FieldAttributes from other packages
added a new test method ` testReadErroneousMavenProjectContainsReference ` to ` ProjectBuilderTest . java ` to ensure that
simplified the condition for comparing oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor ` getControllerId ` methods to use ` getConfigId ` instead of ` getControllerId ` across multiple files to improve code readability and
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and prevent potential memory
removed the check for ` service . isGenerateRefreshToken ( ) ` in ` OidcConsentApprovalViewResolver . java ` to simplify the logic
removed system . out . println statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced ` extractor ` with ` NoopGetter ` in ` BaggagePropagation . java ` and added a new ` Getter `
refactor ConditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree ' s child count is greater than zero to ensure that the tree ' s child count does not exceed
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated log messages from " CN1 " to " CN1 " and added intent result listener functionality to enhance clarity of log messages and improve
updated return statements in ShadowICU . java and added date picker functionality in ShadowICUTest . java to improve code clarity and ensure
removed the ` mKM ` dependency and simplified the condition in ` TouchInteractionService . java ` to simplify the code and improve readability
cloudstack - 4892 : avoid npe if diskofferingid be null
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` to utilize ` AsynchronousFile
refactor SigInt , SigIntTest , SigIntTest , SigIntTest , and SigIntTest classes to improve code readability and
ggb - 1193 move update by bounding box resize method to preparetext ( )
updated return value from - 1 to 0 in Asset . java to correct the return value for better functionality
replaced ` SIZE ` with ` ITEMS ` in ` ScrambledZipfianGenerator ` and updated ` Scramb
added a refresh listener to the UploadListFragment class to ensure the UI updates correctly when the fragment is refreshed
refactor BibDatabaseContext to use Path instead of File for file handling to improve type safety and consistency in file handling
replaced instances of ` items [ ] ` with ` get ( ) ` in ` ParticleEffect . java ` and added a dispose method
refactor service and engine handling in Tomcat . java to improve clarity and efficiency to enhance code readability and maintainability by redu
updated error messages in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a condition to return early if the playback state is not PLAYING to prevent further processing when the playback state is not playing
updated the retrieval of ServiceComponentDesiredStateEntity from ` findByPK ` to ` findById ` in ` DeleteServiceTest . java ` to ensure
refactor Java2TypeScriptTranslator and add a new InnerClassFieldClash class for testing inner class field clashes to improve code read
added support for optional logging filter and follow redirect filter in DockerClientFactory and DockerClientProfile classes to enable customizable logging behavior based on user
replaced ` awtLock ( ) ` with ` awtUnlock ( ) ` in ` XToolkit . java ` to ensure thread safety during
hhh - 10183 - use sqlserver2008dialect instead of db2dialect
added exception handling for input stream closure in verifyZipHeader method to ensure proper resource management and prevent potential memory leaks
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` for testing ` NO _ MORE _ ORDS ` in ` SingletonSortedSet
updated error messages in CGIHandler and added a new JavaVM callback handler in JavaVM to improve clarity of error messages and introduce
added support for additional line numbers in LineReaderImpl . java to enhance compatibility with additional line formats
changed the return type of ` hashCodes ` from ` List < String > ` to ` Set < String > ` across multiple classes to ensure
added a check for empty mesh vertices in OGLESShaderRenderer . java to avoid processing when no mesh is available
added verification error handling in IncorectBindingPuzzleFixedTest and modified verification logic in IncorectBindingPuzzleFixedTest to improve
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the correct
remove unused import of node in typesystem . java
refactor JsonObject class for improved readability to enhance maintainability and facilitate future updates
added a check for ` _ maxIdleTime ` to ensure that ` _ maxIdleTime ` is greater than or equal to ` _ max
fix plant can not be sneak in farmlandblock . canustainplant ( ) method . close # 3
added support for multi - tenant table creation in QueryDatabaseMetaDataIT . java and updated SQL queries in ConnectionQueryServicesImpl . java to enhance
updated date formatting in HttpCookie to use Locale . US and added a new class B6791927 for cookie expiration validation to ensure consistent
added null checks for the ` db ` variable in the ` DbHelper ` class to ensure proper resource management and prevent potential memory leaks
increased the timeout value from 1 to 5 in BatchMessageListenerContainerIntegrationTests from 1 to 5 to allow more time for processing messages
[ gr - 21744 ] add trace to economyallocationstage for tracing .
fix issue with save key binding in source tab ( # 3560 )
added a default line separator to the ObjectMapper initialization in DrillTest . java to ensure consistent line endings across different operating systems
updated name replacement logic in NativeEnvironmentRepository . java to handle Windows paths to ensure consistent path handling across different operating systems
added a PostConstruct annotation and refactored the Application field in multiple test classes to streamline service management and improve code clarity
[ java ] remove recordlog . validateexistinglog ( ) method from recordinglog .
replaced GroupName with ErrorGroupName in ITSystemTest . java to improve clarity by using a more descriptive variable name
added a sleep mechanism for memory usage in TestFuzzOptimizations . java to ensure accurate memory usage reporting during testing
refactor camera manager to use a private boolean variable for reverse image retrieval to improve code readability and maintainability by reducing redundancy
updated string comparison to use ` equals ( " META - INF " ) ` instead of ` equals ( " META - INF / " ) `
refactor terserserutil to use a predicate for exclusion and field name inclusion to improve code clarity and maintainability by centralizing
updated JUnit imports and method signatures in AuthenticationSuccessListenerTests . java to use JUnit 5 features and improvements to enhance test structure
refactor settypes to use a new array list instead of a new array list to simplify code and improve performance by eliminating unnecessary array
refactor TypeUtil class for improved clarity to enhance maintainability and readability of the code
added LocalDateTime to the triggerTime variable in AbstractAlertNotifyHandler . java to ensure the triggerTime variable reflects the default time zone for better
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` to handle abstract method errors to improve error handling for
camel - 16462 : camel - core - allow simple language expression to start with ` ` ? ' ' or ` ` [ ' '
remove unnecessary check for empty toExplore in AbstractParser . java to streamline the code by eliminating unnecessary checks
camel - 14263 : camel - jclouds should use iohelper . copy instead of iohelper . copy in jcloudspayload
camel - 14284 : camel - jbang - remove unnecessary @ ignore annotation in camelconsultest
added a check for ACC _ STRICT access flags in the Check . java file and created a new CheckACC _ STRICT _
[ java ] use aeron . context . drivertimeoutms ( 2 _ 000 ) instead of aeron . connect ( )
added a new file ` FileExtensions . java ` implementing a new file ` FileExtensions . java ` to define file extensions for source and header
replaced the ` ThreadLocalDateFormat ` class with a new ` ISO8601CanonicalDateFormat ` and updated the ` ThreadLocalDateFormat ` class to
removed deprecated options from VMDeprecatedOptions . java to streamline the codebase by eliminating unnecessary options
added display name property and updated custom properties in DelegatedClientIdentityProviderConfiguration and its tests to enhance client configuration flexibility by allowing custom display names
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more specific exception for termination scenarios
removed unnecessary whitespace in the return statement in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
added connection consumption logic and improved connection handling in HttpBindServlet , HttpConnection , and HttpSession classes to enhance connection management and error handling during
add a null check for the parent parameter in the return statement to prevent potential NullPointerException when parent is null
removed the KeyCrypterException from the catch block in WalletTool . java to streamline error handling by eliminating unnecessary exceptions
mark AsyncCompletionService as deprecated to indicate that the service should no longer be used and may be removed in future versions
updated HyphenationTree to adjust the length and original length in the return statement to ensure accurate representation of the length of the Hyphenation
added a sleep duration in IQRegisterHandler . java to ensure proper timing for operations to complete before proceeding with further operations
move resource . getresource ( ) to javax . swing . resource . resource . java and add resource . getresource ( ) .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to clarify the purpose
added a new flag ` providersChanged ` to the ` ConfigurationManager ` class to ensure that ` providersChanged ` is set to false to prevent
added a method to handle quoted identifiers in the SemanticAnalyzer to ensure proper handling of quoted identifiers in queries
added a null check for the ' name ' entry in FileSystemFontProvider . java to handle cases where the ' name ' entry is missing to
updated type parameters and variable declarations in SolrResourceLoader . java to improve type safety and clarity in the code
updated the boundary condition in Window . java to include a check for the parent actor before returning the hit to ensure that the hit object is not
added a null check for the appManifest before setting the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use Serializable instead of DefaultPrettyPrinter to improve serialization handling and ensure proper serialization of configuration
added a userName field and its getter / setter methods in Driver and SQLOperation classes to enable retrieval and retrieval of the user ' s
added methods to set transformer files , URLs , and input streams in the XsltBuilder class to enhance flexibility by allowing dynamic configuration of XSLT
updated ContainerRunnerImpl and TaskRunnerCallable classes to utilize DefaultHadoopShim for improved configuration management to enhance compatibility with the Hadoop
updated file size calculation in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve accuracy of file size handling and
added null check for the request ' s context before logging access in CoyoteAdapter . java to prevent potential NullPointerExceptions during request processing
updated logging statements in ThroughputLogger . java and modified message formatting in ThroughputLoggerTest . java to improve logging clarity and
updated VM version check in CompilerConfigFileWarning , ConfigFileWarning , and ConfigFileWarning classes to use Platform . isDebugBuild instead of System . getProperty to
[ hotfix ] [ metric ] move meterstatisticsmanager . statisticsoperationmap to meterstatististenerator . statisticsmodel
updated logback configuration file resolution logic in FrameworkLauncherExtended . java to improve flexibility by allowing dynamic configuration file resolution
added nullability annotations to multiple cookie value manager classes to enhance code robustness by ensuring non - null values are handled correctly
replaced BASH _ ESCAPER with SHELL _ ESCAPER across multiple files to ensure compatibility with Windows - specific command
refactor waitUntilReadyAndSucceed and waitUntilReadyAndTimeout methods to use try - with - resources for better resource management to
changed the class name from TestLucene50FieldInfoFormat from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the
removed unnecessary braces in RelativeDateFormatTests . java to improve code readability and maintainability
added a new method ` generateShieldAddress ` to the ` RpcApiService ` class to facilitate the generation of the Sh
changed the return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` across multiple terminal classes to simplify the
updated regex patterns in TestStabilityRule . java to use a wildcard expression instead of a hardcoded value to improve code readability and maintain
added a check for multi - valued fields in DefaultSolrHighlighter . java and updated highlighting test in HighlighterTest . java to ensure
updated the ` tryToLogin ` method to accept a ` Uri ` parameter and added credentials to the ` tryToLogin ` method to enhance
refactored entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to improve entity management and enhance gameplay
camel - 14263 : camel - jms should use the same name for the destination name , not the name of the destination name .
updated the method call from ` wrapCollection ( parameter ) ` to ` update ( statement , parameter ) ` in ` DefaultSqlSession . java
added logging for IllegalCurrencyException in BTCEAdapters . java to improve error handling and logging for unknown currencies
refactor subscription handling in DurableConduitBridge to use candidateSubName instead of localId to improve clarity and maintainability of
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated the ` startController ` method to accept an ` useTenantIsolation ` parameter and added new methods for creating and creating a broker tenant to
simplified the return statement in HasSettings . java to simplify the code and improve readability
added a condition to check if the size of attrs is greater than or equal to 4096 to ensure that the size check is not greater than or
added new methods ` getProjectJdkName ( ) ` , ` getProjectJdkType ( ) ` , ` getProjectLanguageLevel ( ) `
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to ensure consistency in the
added a new test method ` testResolveAclsForScottWithUserDetails ` to ` GrantedAuthorityEffectiveAclsResolverTests
fix javaparser . symbolsolver . reflectionmodel # solvemethodintypesolver # solvemethodintypesolver # solvemethodin
added a constant ` numberOfButtons ` and ` MAX _ BUTTONS _ SUPPORT ` in ` XToolkit . java ` to ensure the
updated import statement from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary . Asserts .
refactor MessagePack and MessagePackFactory classes to use a new factory class for creating MessagePacker instances to improve code organization and facil
feat ( biome ) : add ' is _ desert ' and ' is _ cave ' tag to biome tag ( #
rename ` present ( ) ` to ` draw ( ) ` across multiple screen classes to improve clarity and consistency in method naming
added a condition to check if the component is horizontal before setting the layout in ComponentGroup . java to ensure layout updates only occur when the component
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( identifier ) . matches ( ) ` with ` matcher .
replaced ` instanceof ` check with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput ` to simplify the
[ java ] close the commit position counter if it be close .
# 1394 - add usersite class and recordidclass for insert query ( # 1394 )
added error handling for malformed URLs in HttpConverterRegistrar . java to improve robustness and provide clearer error messages for malformed URLs
cloudstack - 4892 : do n ' t ignore storage capacity for storage - allocated and storage - allocated
replaced ` openInput ( ) ` with ` fileLength ( ) ` in ` NRTCachingDirectory . java ` to improve file handling
replaced ` beginCompile ( ) ` and ` endCompile ( ) ` methods with ` generateClass ( ) ` and ` generateClass (
refactor UISettings class declaration and synchronization to ensure thread safety when accessing the UISettings class
added native text input handling and modified method visibility in TextField . java to allow access to fireDataChanged from other classes
improve error message in spannerio . retryonabortedconcurrenttransaction ( ) and spannerio . retryonaborted
no effective change - code cleanup - improve readability
changed the type of array from double to short in ObjectInputStream and added a new CloneArray class for cloning functionality to ensure correct data type handling
updated nonce retrieval and logging logic in OIDCAuthenticationFilter . java to improve clarity and maintainability of nonce validation logic
added a condition to return true for relation fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added server logging functionality to the capabilities table and updated the display name retrieval method to improve user experience by providing a clearer and more descriptive
inverted the condition for menu item selection to improve clarity to ensures proper tinting of menu items only when they are not currently selected
updated test failure handling in SolrRequestParserTest . java to use Assume . assumeNoException for network connection validation to improve test reliability by
added a check for empty symbol events before proceeding with processing to avoid unnecessary processing when no symbol events are present
added new test cases for additional data types in StringHelperTest . java to enhance test coverage for additional data types
added a warning message for empty data providers in the Parameters class to provide feedback when an empty data provider is returned as an empty array or iterator
camel - 14263 : camel - jbang - use emptylist instead of emptylist in camel - core
update freeplane 1.9 . 0 and freeplane 1.9 . 8 to freeplane 1.9 . 0
updated the method call from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to correct the
added a new file AutoFtpActivity . java and implemented FTP action handling in FtpHelper . java to facilitate FTP testing
refactor token type handling in BaseSemanticAnalyzer to improve clarity and handle StringLiteral types more effectively to enhance code readability and maintain
added getter and setter methods for imageX , imageY , and component state in various classes to enhance functionality for managing component state in the UI
added a new class ` RemoteExecutionEnabled ` to handle remote execution status in ` BuildableSerializerTest ` to provide a mechanism for enabling
pdfbox - 4071 : fix typo , a suggest by valerybokov
updated file reading and reading methods in ImportCsv and PublicBAOS classes to use UTF - 8 encoding to ensure proper handling of character encoding and
added a new method ` assertWorkingScoreFromScratch ` to verify that the working score is not stale to ensure that the score is
updated SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin " to
added SLF4J logging for various DatagramPacketDecoder , DatagramPacketDecoder , and DatagramPacketEncoder classes to enhance debugging capabilities
updated synchronization logic in SynchronizeFolderOperation and FileDisplayActivity to improve directory removal logic and enhance user experience by providing feedback when the current folder
added assertions to verify the presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is present and the transaction
updated the test method name from ` constructSchemaBlackList ` to ` deleteTimeseries ` in ` SchemaRegionBasicTest . java ` to
added null check for sampleMimeType in MediaCodecRenderer to ensure proper exception handling when sampleMimeType is not provided
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource
updated the @ AllArgsConstructor constructor to include JSONCreator mode to ensure proper serialization of properties in JSON processing
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that creating an index is only created on a view
added a new file ` Website . java ` implementing a new class ` Website . java ` and updated ` PopulatorImplTest .
added JUnit setup method to BSFormatterTest to ensure consistent locale settings for tests
[ coremod ] log a warning for badly downloaded jar file
replaced ` containsString ` with ` equalToIgnoringCase ` in ` MultiPartParsingTest . java ` to improve readability and consistency
added a check for single parameters in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analysis process
added a volatile boolean variable ` createdVertx ` and modified the conditional check to check if ` vertx ` is created to ensure that the
updated the ` writeAttributes ` method to accept a ` NodeModel ` instance instead of ` null ` to ensure that the ` node ` is
updated log message formatting in SynchronizeFolderOperation . java and FileDisplayActivity . java to improve code readability and prevent potential NullPointerExceptions
added a new property ` ignoredReadStatus ` to ` Entries ` and updated related methods in ` CategoryREST ` , ` FeedREST ` ,
replaced MavenTestingUtils . getTargetPath ( ) with MavenPaths . findTestResourceDir ( ) in multiple files to ensure compatibility with the
refactored data validation logic in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to improve data validation and enhance code clarity
updated the condition in GwtMusic to check if the sound is playing state is not active to ensure that playback state is only considered when
added a new permission for SUDO _ AREA in MainCommand . java and updated the permission check in Captions . java to include a
updated ServerRequestPlanVisitor and QueryRunnerTestBase to use a new method for updating query options to improve code readability and maintainability by
replaced calls to ` toUri ( ) . equals ( ) ` with ` path . getFileName ( ) . toString ( ) ` in multiple
updated assertions in ResourcesTest to use dynamic values for " pureEmoji " , " label4 " , " label3 " , and "
changed the NMTWaitForDataMerge method from boolean to void and added a new NMTMallocWithPseudoStack method to enhance functionality and
[ hotfix ] [ core ] fix typo in eitherserializer snapshot
updated default values for ` DEFAULT _ ROTATE _ SERVERS ` and ` DEFAULT _ NDOTS _ RESOLV _ OPTION `
added a call to the superclass ` __ associate ` method in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplate
pdfbox - 4892 : fix nullpointerexception in nonterminalfield . tostring ( )
updated namespace file paths from " liquibase / parser / core / xml / " to " www . liquibase . org
truffle - api : move common mime type locator to test package
updated repository version states from INIT to NOT _ REQUIRED in ServiceComponentDesiredStateEntity and ServiceImpl classes to ensure that the repository version is not
updated the compare method to include schema comparisons in GenerateChangeLogTask . java to enhance schema comparison capabilities for better schema validation
updated import statements in TestBackwardAnoamlyFunctionUtils . java to use TestNG annotations instead of JUnit to ensure compatibility with the
added a new test class ` ProgressiveJPEGTest ` for testing progressive JPEG rendering to facilitate testing of progressive image rendering
updated material loading logic in MaterialLoader . java to set alpha values and set default values for material properties to ensure proper handling of material properties and
fix native - image build on x86 .
added a null check before setting the size of text in Label . java to avoid potential NullPointerException when text is empty
updated the calculation of readVarInt ( ) to use % 1 _ 000 _ 000 instead of % 1 _ 000 _ 000 to ensure correct
added private constructor to PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern for utility methods
refactor length assignment logic in RocketPanel . java to use curConfig . getLength ( ) instead of curConfig . getBounds ( ) to
removed unnecessary cast for MockDirectoryWrapper in setEnableVirusScanner method to simplify code by eliminating unnecessary type casting
updated CSV file path in componentPresetDao from " . * csv " to " ( ? i ) . * csv " to ensure compatibility with
added a condition to announce for accessibility in TaskbarStashController and modified temporary object array handling in FloatingIconView to improve access
replaced instances of ` Args . getInstance ( ) . getMyKey ( ) . getNodeId ( ) ` with ` RefreshTask . getNode
pmd : add support for target both jdk 1.3 and jdk 1.5
replaced PowerMockito with MockitoJUnitRunner and introduced MockitoJUnitRunner in QuotaResponseBuilderImplTest . java to
added PrintStream and System . out , and System . err in TestSchemaToolCatalogOps . java to facilitate logging and error handling
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related methods to include it to
updated MongoQueryMethod to accept RepositoryMetadata as a parameter to enhance query resolution by associating entities with specific metadata
simonstewart : use entityresolver2 wrapper instead of entityresolver2
removed unused imports from MetaDataEndpointImpl . java to streamline code and improve readability by eliminating unnecessary dependencies
increased ALLOWED _ REED _ DEADLOCKS from 5 to 10 and added a retry interval for the deadlock count to
updated variable names and modified line offset calculation in LineChartActivity , LineChartActivity1 , and LineChartActivity1 classes to improve code cl
added functionality to check for non - ascii characters in the FsUtils class to ensure proper handling of non - ascii characters in file system names
rename selenide . in ( ) to selenide . using ( ) for clarity .
do n ' t add exception to the result if there be no exception to process plugin .
updated return values in ProxyConnectionManager and ServerTrafficCounter to use double values instead of double values to ensure accurate calculation of byte values for accurate
( chore ) camel - test - infra - google - cloud - vision : use file . exists instead of file .
updated connection record methods to return null instead of " STUB " and added remote host retrieval in AuthenticatedUser to improve connection handling and provide
added admin button to the request in CommunityListServlet to enhance security by restricting access to admin users
replaced instances of ThreadPoolExecutor with AtomicInteger for longCompactionThreadCounter and shortCompactionThreadCounter to improve thread - safety and tracking of
updated package name retrieval from ` getApplication ( ) . getPackageName ( ) ` to ` getResourcePackageName ( resource . resource . wallpapers )
added a method to filter players in plot visible in Near . java to enhance player visibility control by allowing players to be displayed in the plot
refactor AndroidManifest , ResName , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved clarity to enhance maintainability and readability of the code
replaced ` com . sun . management . internal . OperatingSystemImpl ` with a constant ` OPERATING _ SYSTEM _ IMPL ` to
corrected the spelling of " ReferencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test for
removed unnecessary checks for encryption key and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary checks
added @ Stability annotation for LOCAL and PLATFORM _ POSTSUBMIT in WorkProfileTest . java to indicate that the test is stable
added a condition to skip processing if bucketing version is not set to ensure that processing occurs only when the bucketing version is not set
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added new classes ` LockFreeBucket _ FinalFields
print thread pool stats to system . out .
updated the method call from ` getMaxBitrate ( ) ` to ` getUserPreferences ( ) ` in ` ExternalPlayerActivity ` and ` Play
refactor ZipkinHttpSpanExtractor to improve span handling logic and add a new test for sampling SPAN _ FLAGS in TraceFilterTests to
add abstract method to getuseraccount ( ) to make it abstract
refactor : remove reflectionutil . getmethod ( ) in dartservercompletioncontributor . java ( # 4893 )
added a call to fs . setProject ( p ) in LauncherUtils . java to ensure the correct project is used for file operations
updated JsBundle and JsLibraryBuilder to use ProjectFilesystem instead of BuildTarget to enhance flexibility by allowing root paths to be passed to the
refactor EnvelopeStyle , DatabindingFactory , DatabindingFactory , and MessageContext classes to improve code organization and maintainability
refactor MetricsDSLContext class for improved clarity to enhance maintainability and readability of the code
replaced the interface ` VersionConfig ` with ` ImmutableSet ` and simplified the ` VersionBuckConfig ` class to improve immutability and
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException to
changed the visibility of the validateTypes method from package - private to public to allow access to validateTypes from other classes
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added SLF4J logging functionality to SimulationStatus class to enhance logging capabilities for better debugging and monitoring
updated the VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 in Splash . java to improve the visual appearance of the
added a runnable block for adding notifications in the UserInterfaceComponentImpl class to ensure notifications are added on the Event Dispatch Thread to improve responsiveness
added a new method ` when ( mock . foo ( ) ) ` to the ` ReturnsElementsOf ` class to enhance the functionality of the
updated error message for drop partitions in ErrorMsg . java to clarify that drop partitions are only allowed for non - string partition columns
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the functionality of ` LineFile
added a method to retrieve the version code in MainApp and updated feature item checks in FeatureList , WhatsNewActivity , and Whats
camel - 16462 : camel - core - do not throw ambiguous method invocation exception if method parameter be not specify .
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added buffer ownership management to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent potential memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by providing a clearer
refactor JerseyClientConfiguration class for improved clarity to enhance maintainability and readability of the code
int - 1346 remove unused import of characterstreamreadingmessagesource and characterstreamwritingmessagehandler from console inboundchanneladapterparser
updated print statements in InstanceOfPatternMatchTest . java and removed redundant type casting in TypeUtils . java to improve code readability and maintain
added methods to decrement the last column and row count in StringDict and Table classes to ensure proper handling of empty strings in the Table class
fixed - container . createcommand ( ) should be call on autocloseable
change log level from info to error in MediaInfo . java and update test cases in RendererConfigurationTest . java and RendererConfigurationTest . java
added schemapattern option to the configuration in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration flexibility by allowing users to
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in sslsession
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 implementation to improve performance to optimize data processing efficiency
llvm : fix a bug in llvm global container . get ( ) and set ( ) .
added IPHONE to the @ Ignore annotation in JavascriptEnabledDriverTest . java to ensure compatibility with IPHONE and improve test coverage
refactor FlowBuilder , FlowJobBuilderTests , and FlowJobBuilderTests classes to improve code organization and maintainability
renamed ` resName ` to ` resId ` and updated related classes to improve clarity and consistency in naming conventions
refactor DockerContextClientConfig to utilize a new method ` resolveContextTLSFile ` for retrieving the Docker certificate path to improve flexibility in
refactored test setup method in SimpleReactiveElasticsearchRepositoryTests . java to improve clarity and consistency in naming conventions
refactor type variable capture logic in Attr . java and add a new class T6450290 . java with generics and same variables to
added logging level configuration and setter methods in LoggingFlags and LoggingOptions classes to allow customizable logging levels for improved flexibility in logging configuration
added logging statements to the ` deleteItemsFromDatabase ` method and modified the ` deleteItemsFromDatabase ` method to accept an ` Collection `
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` FileDisplayActivity ` to
add a new method ` forEachOperation ` and ` hasMatching ` to the ` MutationOperationGroup ` class to facilitate the use
updated the calculation of numPredictiveAppCols based on device type to ensure accurate app column count based on device type
updated the initialization of the value string to use UTF - 8 encoding to ensure proper handling of character encoding in string content
added new classes ` RequestMatchers ` and ` RequestMatchersTests ` to handle multiple request matchers to enhance matcher functionality and ensure correctness through unit
simonstewart : remove unnecessary check for applet
updated position calculations in ProgressBar . java to account for bgBottomHeight and bgRightWidth to improve layout accuracy by accounting for bottom and right
[ native ] use external _ functions . json instead of src / test / resources / external _ functions . json
added a native method ` permuteArgs ` to the ` BruteArgumentMoverHandle ` class to ensure immutability of extra
added a condition to check if the state handler is invalidated before proceeding to ensure that the gesture handling only occurs when the handler is invalidated
refactor layout calculations in CellLayout and Workspace classes to improve layout handling for landscape and portrait orientations to enhance layout responsiveness
added a check for " / robots . txt " file in HttpRobotRulesParser . java to ensure that only relevant robots . txt files are
updated import statements and added a static resource annotation in JBrowseModule , CallHierarchyTopComponent , and CallHierarchyTopComponent to improve code cl
updated widget subscription methods from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to improve clarity
added a null check for the zero value in UDFOPDivide . java and created a new TestUDFOPDivide .
refactor code formatting and improve readability to enhance maintainability and clarity of the job execution logic
updated bean definitions for " filterProcessesUrl " and " logoutRequestMatcher " in FormLoginBeanDefinitionParser , LogoutBeanDefinitionParser , and
added onDestroy method to ShareActivity and ContributionsActivity classes to ensure proper resource cleanup and prevent memory leaks during activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve code clarity
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to ensure proper handling of request timeouts in Raft server configuration
changed logging level from error to debug in TsFileResourceManager . java and refactored exception handling in ResourceManagerTest . java to improve
updated model source setting to set system properties in MavenModuleLoader . java to enhance configuration flexibility by allowing system properties to be set
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMeter
added model registration to the animatedtorch class to allow customization of the animatedtorch model
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a specified directory in UtilsForTest . java and updated related imports in TestHiveTest . java
added a new link for Muting Users in the FeaturesActivity to provide access to users in the application
added a property ` jdk . reflect . useDirectMethodHandle ` to ` System . java ` to disable direct method handle usage in the
hbase - 25836 splitonleadingvarcharcolumnspolicy should use steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 20650 ] [ yarn ] add support for empty plugins base on lib / plugins
updated method calls from ` getPronunciations ` to ` getWord ` in ` BuildTranscriptHMM ` and ` Trainer
updated JSON string formatting in JsonUtilsTest . java to ensure consistency with JSON standards and improve readability
added tweet ID extra handling in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure consistent tracking of tweet IDs across
added a warning log statement to indicate that the listener is termination due to lost ring buffer data related to reliable topics
add a new class ` NoClassesFoundToAnalyzeException ` and a new class ` NoClassesFoundToAnalyzeException ` to improve error handling
updated import statement for Key and PublicKey in KeyFetcher . java to ensure compatibility with the latest security standards
added a new boolean variable ` isIncompatible ` to the ` DLNAResource ` class to ensure proper initialization of the ` isIncompatible `
added AccountCreateContract import and modified the createAccount method signature in RpcApiService . java to enhance account creation functionality by integrating AccountCreate
pdfbox - 4892 : avoid arrayindexoutofboundsexception when there be no range
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure in amq
changed the default value of ` enableOffHeapFormat ` from false to true and modified the default star tree format version from ` off _ heap
updated title handling in FeedUpdateService to ensure a minimum of 2048 characters before setting the title to improve title formatting and prevent potential issues with larger
refactor JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for preview panel management to improve code readability and maintainability
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for better debugging
added a null check for the reusable bitmap before decoding to avoid potential NullPointerExceptions when reusable bitmap is not initialized
added a new method ` getLayoutParams ( ) ` to the ` FakeView ` class to provide access to the ` layoutParams ` variable
added a check to throw an IllegalStateException when the cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : improve code readability , a suggest by valerybokov
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` and its getter and setter methods to the ` Message ` class to provide access and setter methods for the
added a new utility class ` ExceptionMapperUtils ` and ` WebApplicationExceptionMapper ` , and refactored ` GenericExceptionMapper ` to use
changed the class visibility of AbstractExecutor from package - private to public to allow access to AbstractExecutor from other packages
[ isochrone ] add query with legacy parameter to routeresource
changed visibility of test classes from public to public in multiple test classes to allow access to these test classes from other packages
refactor CSRF setting logic into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF setting logic
refactor EclipseLoaderPatcherTransplants . java to include a bootstrap check for the shadow class name to improve code clarity and
[ drools - 1342 ] allow rule sheet to disable numeric rule ( # 2343 )
updated logging level from info to debug in HiveConf . java to improve performance by reducing log verbosity when debug mode is not enabled
added null checks for axes , buttons , and polled controllers in Lwjgl3ControllerManager and Lwjgl3ControllerManager
updated import statements from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory `
added a null check for the host before saving the port forward in PortForwardListActivity to avoid potential NullPointerExceptions when the host is null
added a new property ` shouldSnapshotData ` to ` GlobalConfiguration ` and its getter / setter methods in ` GlobalConfiguration ` , ` Data
added a null check for the file name before scheduling a job in SyncedFolderObserver . java to avoid potential null pointer exceptions and improve job
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
updated conditions in StatusBarTouchController and OtherActivityInputConsumer to use swipeWithinQuickSwitchRange instead of swipeWithinQuickSwitchRange to improve
updated the VectorReader interface and removed unused imports from multiple classes to streamline the code and improve readability by eliminating unnecessary dependencies
replaced ArgumentMatchers with Mockito ' s Matchers in multiple test files to ensure compatibility with the latest Mockito library features
updated method calls to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` across multiple files to improve clarity and consistency in
updated ` completeMapAndTransformRow ` and ` CompositeTransformer ` to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to
added a null check for the ` extractor ` variable before returning it to avoid potential null pointer exceptions when ` extractor ` is not initialized
cloudstack - 4892 : use domain . secondary _ storage instead of resource . max _ project _ secondary _ storage for account and domain
fix potion shift event in inventoryeffectrenderer . close # 3550
added a deprecated constant for the " cold _ reads _ to _ omit " in SizeTieredCompactionStrategyOptions . java to indicate that
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure proper resource management and prevent potential memory
[ issue # 4892 ] fix popmessageprocessor to not retry ( # 4893 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
added JUnit Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
renamed ` EventLoopGroup ` to ` NettyDriverSettingsBuilderCustomizer ` and updated its usage in ` MongoReactiveAutoConfiguration
added session . setUpgradeRequest ( request ) and session . getUpgradeResponse ( ) methods in UpgradeConnection and JettyTrackingSocket classes to
added a timeout property to the AndroidImplementation class to allow customizable connection timeout settings
refactor user and team access permissions handling in GitblitClient and RepositoriesPanel classes to improve code clarity and maintainability by consolidating
added a new test method ` testQuotedCastExpression ` in ` SelectTest . java ` to verify SQL parsing and deparsing of quoted expressions
updated assertions in Misc . java to conditionally check if the file is writable or executable based on the presence of the root directory to ensure
added logging for thread group and thread per group in FixedThreadExecutor . java and refactored executor selection logic in FixedThreadExecutor . java
added null checks for " field " in AbstractChangeGenerator . java to prevent potential NullPointerException when " field " is null
updated imports and method names from ` CasEventListener ` to ` InitializingBean ` in multiple configuration classes to improve clarity and consistency in the
refactor animation end handling to a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added a close method to the DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` that implements a native method for retrieving system properties to facilitate testing of system
refactor BeanDefinitionInjectProcessor to use annotationMetadata and isDeclared fields for better clarity to improve code readability and maintainability by redu
jme3 - cameranode , cameranode , lightnode , cameracontrol , cameranode , cameracontrol , cameracontrol , cameracontrol
refactor PopupNotificationPanel to use SwingUtilities . getWindowAncestor for better resource management to improve code readability and maintainability by reducing
replaced ` NoInstanceException ` with ` InferenceException ` for better exception handling to improve clarity and specificity of exception handling related
added a method to retrieve the feature value in the FeatureField class to provide access to the feature value for external use
change the type of the ` after ` method from ` int ` to ` long ` in ` VerificationAfterDelay ` to accommodate larger
added ` OnBuild ` and ` ExecutionDriver ` properties in ` ContainerConfig ` , ` Info ` , and ` ExecutionDriver ` classes to
added conditional logic to set icon based on the target type and adjusted positioning logic in Toolbar . java and FlowLayout . java to ensure
added functionality to enable position increments in StopFilter to enhance filtering capabilities based on user preference
added an ` InternetAddress ` variable to the ` EmailsTest ` and ` SystemErrorEmailReportTest ` classes to improve code clarity
set mTryShareAgain to false in FileActivity . java to disable sharing functionality in the activity
added functionality to determine tty version in JansiNativePty . java based on system properties to enhance compatibility with different Java versions and ensure
refactor BandwidthProcessor to use bytesSize instead of a single variable for clarity to improve code readability and maintainability by reducing
replaced direct calls to ` then ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java
replaced hardcoded URLs with a constant API base URL in EaseeBindingConstants . java to improve maintainability and readability of the
increased sleep duration from 2 second to 3 second in KafkaIOIT . java to allow more time for the kafka container to start up
replaced direct calls to ` Matchers . anyOf ( ) ` with ` is ( itemName ) ` in ` SearchResultMatcher . java `
added SSL certificate trust handling in OkHttp . java to enhance security by preventing unauthorized access to SSL connections
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to use buttonView instead of View . OnLong
added a new file ` HyperlinkFormula . java ` and updated field length handling in StringPtg . java and StringPtg . java
added null checks for stdout and stderr in ShellStep . java to ensure that the workingDirectory is not null before escaping to avoid potential NullPointerExceptions
increased the timeout duration from 1000ms to 2000ms in AsyncAppenderTest . java to allow more time for asynchronous logging operations to complete
refactor ` escapeDatabaseObject ` methods to accept ` Object < ? extends DatabaseObject > objectType ` instead of ` String ` to simplify the
added a boolean variable ` inputChanged ` and modified the condition in ` MaterialRenameDialog . java ` to check if the material title changes to
added a test for setting the display state in ShadowDisplayTest . java and implemented a method to set the display state in ShadowDisplay . java
[ geos - 6770 ] add directinvocationservice interface to make it easy to invoke operation on a dispatcher .
gwtkeycodes . key _ x , gwtkeycodes . key _ y , gwtkeycodes . key _ x ,
updated SQL query conditions in PgDatabaseMetaData . java to include minimum server version checks to ensure compatibility with PostgreSQL versions below 9.0 and above
added @ Nullable annotation to the message variable in QueueChannel . java to ensure that the message variable cannot be null to avoid potential NullPointerExceptions
updated method signatures and variable names in FileUtils . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added logic to handle Jenkins nodes and updated remote collector initialization based on application name to improve monitoring capabilities and ensure correct application context is used for the
added a method to resolve " disabled " and " defaults - disabled " attributes in HeadersBeanDefinitionParser and updated related tests in HttpHeadersConfigTests
refactor EOFException handling in ProtobufLogReader . java to improve clarity and consistency to enhance code readability and maintainability while ensuring proper logging
added a call to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer and implemented the destroy method in Nac
camel - mybatis : fix switch / cases indentation see camel - 14540
updated GoAwayGenerator and GoAwayBodyParser to use SPDY . V3 instead of SPDY . V2 to
refactor AuditEvent initialization and add assertions in AuditEventTests . java to improve code readability and ensure proper JSON output formatting
updated the return statement in Interpolation . java to return 0 instead of a value to ensure proper handling of floating - point errors and prevent potential
fix ` ` defaults / ' ' error in world edit .
replaced direct assignment of ` getAbsolutePath ( ) ` with a variable ` dx ` in ` DxStep . java ` to improve code read
added assertions for PointRangeQuery instances in TestPointQueries . java to ensure correct equality comparison for PointRangeQuery instances
hbase - 25819 testhfilecleaner should use mck _ archived _ directory instead of hfile _ archived _ directory
added a check for file name comparison before setting the file label in ReceiveFileConversationComponent to ensure the correct file label is displayed based on the
removed the throw statement from JedisClusterCommand . java to streamline error handling by eliminating unnecessary exceptions
[ hotfix ] [ table - common ] set chainingstrategy to ALWAYS in rowtimeminibatchassgineroperator
updated the ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap
refactor QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , QMapWriteBenchmark , and QMapReadSequentialKeyBenchmark
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added checks for empty fields and refactored identifiers handling in GroovyEngine . java to improve code robustness and maintainability by ensuring identifiers are
set drawable to false in the AlgoDependentNumber class to improve visual appearance by removing unnecessary drawable effects
added TCP keepalive configuration options in HiveConf and updated TServerSocket initialization in HiveServer to enhance server socket management by allowing configurable keepalive behavior
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` and added a new method ` isRenameEmptyFiles `
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use a lambda expression for time conversion to improve code readability and reduce boilerplate code
cloudstack - 4892 : remove unnecessary success variable from createvpccmdbyadmin
updated windowAlpha calculation to use ` Math . max ` instead of ` interpolatedProgress ` in ` WindowTransformSwipeHandler . java ` and
updated the error message from 3.2 to 4.0 schema in SecurityNamespaceHandler . java to clarify the usage of Spring Security
refactor ProtoOfProtosSubject , MapWithProtoValuesSubject , and MultimapWithProtoValuesSubject classes to improve code organization and maintain
( chore ) camel - disruptor : make these fields final in disruptorprovider
added a new file ` TestConfigureUDF . java ` to test the configuration of a UDF to facilitate testing of the Hive
updated regex pattern matching in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to improve accuracy of regex matching and enhance
replaced ` logger . debug ` calls with ` logger . info ` and ` logger . warn ` methods in ` LOG . java ` to
replaced ` updatePurgedShards ` and ` deletePurgedShards ` with ` deletePurgedShards ` across multiple classes to standardize
added JavaLanguageHandler for " 17 " and " 17 - preview " features in JavaLanguageModule . java and LanguageVersionTest . java to
[ log4j2 - 1349 ] wait for asynchronous compression job to finish in case of timeout .
added a null check for lastLocationAccess in VolatileReadNode . java to ensure that lastLocationAccess is not null before proceeding with
added a method ` getSteps ( ) ` to the ` SimpleJob ` class and modified the ` getStep ( String stepName ) ` method
removed duplicate fromBase58 and toBase58 fields from TronJsonRpc . java and TronJsonRpcImpl . java to streamline
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability
[ micrometer ] fix timing issue in longtasktimer
[ hotfix ] [ euphoria - euphoria - core ] do n ' t use hashpartitioner for
refactor color value handling to use CharSequence instead of String for better type safety to improve code readability and maintainability by using CharSequence instead of
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and add a method to retrieve the database version file to improve clarity and
added a constant MAX _ TWEETS _ IN _ CONVERSATION in ExpansionViewHelper . java to limit the number of twe
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map refresh
added a test for persisting byte size correctly forFullyAckedDeletedTailPages in the queue to ensure correct handling of deleted tail pages in
[ fix ] glowserver . getimplementationtitle ( ) should return the class instead of the class
replaced the ` grow ` method with a new ` grow ` method in ` DataIO . java ` to improve code readability and maintain
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the current file name for external
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure that the fragment is marked as read for loading
added ClassNotFoundException to the ` instrumentJar ` method and modified the handling of ` NegativeArraySizeException ` to improve error handling and provide clearer
added a method to check for partition ownership in HashAggTemplate . java to prevent OutOfMemoryException when attempting to choose a partition to flush
changed the variable ' dsName ' from ` getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` to
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure supportedNameFormats are not added to the supportedNameFormats list
added redirection and error handling for password change in ChangePasswordPage . java to ensure proper handling of password changes and improve user experience
updated formatting in Deadlock2 . java to improve code readability and maintain consistency
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to the test was deemed unnecessary or redundant
added validation for filter start and end dates in RRD4jPersistenceService . java to ensure that filter start and end dates are valid before
added a null check for numVectors in GenericUDAFComputeStats . java to prevent potential NullPointerExceptions during execution
test : migrate executablereftest to junit 5 ( # 4438 )
added null checks for ` view ` and ` glassPane ` in ` JLayer ` and created a new class ` bug69944
camel - 16462 : added support for wiretap expression in camel - core . xml .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
add ` ` planner . enable _ topn ' ' option to ` ` planner . enable _ topn ' '
[ java ] remove unnecessary ` ` aerondirectoryname ' ' from test .
fixed - redissonconnection . isqueued ( ) and setqueued ( ) do n ' t call redisconnection . setqueued ( ) .
updated HiveConf to use a temporary URL for default configuration variables and refactored the getConfVarURL method to improve resource management and streamline
updated the model creation method to use criteria . getDevice ( ) instead of Device . defaultDevice ( ) to ensure compatibility with the criteria ' s
added menu inflation for onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to enhance user experience by providing quick access
refactor CertificateValidator class for improved clarity to enhance maintainability and readability of certificate validation logic
updated homeDir initialization to include the " hawtio . dirname " property to ensure the correct directory path is used for the haw
added a check for empty comments and a single space return in the Space class to ensure proper handling of empty comments and improve code clarity
changed variable ` mClosed ` to ` volatile ` in multiple dictionary classes to ensure visibility of ` mClosed ` and ` mActualDictionary `
removed stack trace printing from ContextHandler . java to simplify error handling by eliminating unnecessary stack trace printing
move custom item drop test to integration . regression
added a boolean parameter ` ifNotExists ` to the ` DDLTask ` and updated related classes to handle partition existence checks to enhance functionality by allowing
modified the read logic in NfsSecondaryStorageResource . java to improve data reading efficiency and ensure proper handling of input data
[ java ] remove unnecessary call to controlrequeststreamid ( ) .
added support for spatial operator in CapabilitiesTransformer and implemented tests for supported spatial operators in WFSTestSupport to enhance functionality and ensure compatibility with
added LuceneTestCase import and annotation to BasicDistributedZkTest . java to indicate a known issue related to SOLR - 2
modified the condition in Http11InputBuffer to include a check for the last valid length and adjusted the parsing request line phase logic to ensure proper
[ java ] set the default value of isIngressExclusive from true to false in AeronCluster . java to ensure that the cluster is
hbase - 10613 hbase storage handler should not use hbase . offheapcache . ioengine and hfile . block .
updated the ` currentRecordNumberInFile ( ) ` method and added a method to track the number of running records to improve clarity and
added a loop to filter out year items from merged items in CategorizationFragment . java to improve filtering of year data by excluding specific year
updated drawColor calls to use ` Mode . CLEAR ` instead of ` 0x00000000 ` across multiple files to ensure consistent color rendering
added a check for OpenGL ES 2.0 render method in Mesh . java to ensure compatibility with OpenGL ES 2.0 for rendering
ww - 4892 set actioncontext to null in backgroundprocess
added a new method ` getUnescapedName ` to ` BaseSemanticAnalyzer ` , ` SemanticAnalyzer ` , and ` SemanticAnalyzer ` classes
added connection timeout configuration to TestConnections and modified count variable in StubConnection to improve connection management and ensure immutability of the count variable
added unit tests for the approx _ percentile function in TestHiveAggregationQueries . java to ensure that the approx _ percentile function correctly accounts for
updated the DEFAULT _ IDLE _ TIMEOUT constant and refactored idle timeout handling in WebSocketChannel to improve clarity and consistency in timeout management
updated the method for obtaining shared shares to use the user ' s platform account to ensure sharing functionality aligns with the current user ' s
refactor Inet6Address to use generics instead of Enumeration for better type safety to enhance code readability and maintainability by using generic types
refactor PlaybackControlView to use setButtonEnabled and setButtonEnabled methods instead of disableView to improve code readability and maintainability
updated the method name from ` session . isPresent ( this ) ` to ` session . id ( ) ` in ` Token . java ` to
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
make useexceptionprobability default to ___ _ instead of true
updated the color handling in PredictedAppIcon to differentiate between themed and non - themed icons to improve visual consistency
guacamole - 523 : remove unnecessary dependency on password - encryption - service
updated aliases from " center " to " centre " in Middle . java to support both " center " and " centre " aliases
added dependency injection for DirectUpload in CommonsApplicationComponent and modified DirectUpload class visibility to public to allow external access to the DirectUpload class
added space properties for left and right axis in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to improve layout consistency and
added ` HasJavaAbi . CLASS _ ABI _ FLAVOR ` to the ` AndroidLibraryDescription ` and ` JavaLibrary
added operation event status type parameter to OnlineHubService and modified service list initialization in CompositeLogService to ensure proper handling of operation event status
( dalvik ) add empty annotation tag for parameter without
camel - 14284 : camel - jms - do n ' t throw exception on teardown
updated the variable name from " - cp " to " - cp " in the ProcessBuilder to improve clarity and maintainability of the code
updated path construction for resource paths in PackageResourceLoader . java to ensure correct path formatting for Android resources
[ hotfix ] [ table - common ] fix classcastexception in dataset # minby ( int )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
replaced the method ` shouldHaveMessage ` with ` escapePercent ` in ` ShouldHaveMessage ` and added a new test for escaping percent
fixed - jcache . geturi ( ) should return cache . geturi ( ) instead of cache . geturi ( ) . # 3
reduce log level when activiti task be claimed
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
fix entitypropertiespacket to use base value instead of value
fix ( sound ) : check if handler be initialize before play sound
increased the timeout duration from 500 milliseconds to 5 seconds in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest to allow more
change the logging level from info to debug in LightThingHandler . java to improve logging granularity for better troubleshooting
add db . properties file to asyncjobmanagerimpl . returnitem ( long queueitemid )
updated the ` smartNullPointerException ` method to accept a ` Object ` parameter and improved error message formatting to enhance clarity of error messages
changed the type of ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to improve type safety and
refactor multiple module - info . java files for consistency to improve code readability and maintainability
added a check for empty physical column names in OrcPageSourceFactory and created a test for the empty file in TestHiveFileFormats
added a method to mix the input and amp in the Engine class to enable playback functionality for the input stream
refactor JComponent and SynthTextPaneUI classes for improved clarity to enhance maintainability and readability of the code
updated test cases in FinderPatternFinder , QRCodeBlackBox1TestCase , QRCodeBlackBox2TestCase , and QRCodeBlack
simplified the condition for checking the presence of leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
renamed the method ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and refactored
added $ x and $ x to the search criteria in SelenideElementProxy . java to enhance search functionality by allowing multiple search criteria
updated the calculation of the sample rate in DefaultAudioSink . java to use a default value of 48000 instead of a default value to ensure
refactor XSSFName class to use getFormula ( ) instead of getReference ( ) and setStringValue ( ) methods to improve code
updated the target value from 60000 to 90000 in HighDimensionsTest . java to improve the accuracy of the target value based on scaling factors
[ geot - 4892 ] fix bug in simpletypeGT and gmlparser ( # 4893 )
added a new test class ClassPathXmlJobRegistryContextTests to verify the functionality of the ClassPathXmlJobRegistryContext to ensure that the
changed the data type of ` mHistoricTimes ` from float to long in ` MotionPauseDetector . java ` to accommodate larger
camel - 12320 - camel - restlet : fix camel - 12320 - camel - restlet
camel - 14284 - camel - log : remove unused method
refactor the ` submitTraceEvent ` method to use a dedicated method ` writeChromeTraceMetadataEvent ` to improve code readability and maintain
added checks for order status before adding to limitOrders to ensure only relevant orders are added to the limit orders are added to the limitOrders list
added pixel offset calculations and validation in LCMSImageLayout and LCMSImageLayout classes to improve image layout accuracy and ensure correct handling of pixel
ruby : use jrubytimestamp . newrubytimestamp ( ) instead of jrubytimestamp . gettimestamp ( )
added a check to return a resource if the path ends with a slash in ContextHandler . java and a corresponding test in WebAppContextTest .
updated the name handle from " TypeErrorThrower " to " TypeErrorThrower _ GETTER " in ScriptFunctionImpl . java to correct the
replaced variable ` amt ` with ` scrollAmount ` for better readability to improve code clarity and maintainability by using more descriptive
added a null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure that guardsStage is
test ( sniper ) : migrate sniper to jupiter api ( # 4892 )
refactor URLOutputStream initialization to use try - with - resources for resource management to ensure proper resource management and avoid potential memory leaks
added @ Entity annotation to Mail . java to enable entity management for the Mail class
updated the default value of ` includeTablespace ` from ` false ` to ` true ` in ` Main . java ` to allow users to
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to internal buffers for external use
added a boolean flag ` hasReadNonEmptyFile ` and a new test for ` JsonDirectoryWithEmptyFile ` in ` ScanBatch ` to
updated failure handling in StringSubject to include custom name checks and improved test assertions in StringTest to enhance clarity of failure messages and ensure
added a regex pattern for the LIB _ PATTERN in LibUtils . java to ensure accurate validation of CUDA names in the code
replaced ` ClassNotFoundException ` with ` Exception ` and ` Error ` in ` JrtJavaBasePackages . java ` and ` PackageHelper .
added safe mode check and error handling in MasterFileSystem and Bytes classes to ensure that the file system is in safe mode before proceeding with operations
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error messages for
mng - 4892 : remove unused method from defaultplugincache
refactor contact status update logic into a separate method ` updateContactStatus ` to improve code readability and maintainability
refactored requestdetails . withresourceandparams to use mockito ' s mockito ' mockito '
added a new file AccountInfoFetchIntegration . java to retrieve account information from BTCEExchange and PollingAccountService to facilit
added mouseWheel methods to VDUInput and vt320 classes to enable mouse wheel functionality in the terminal view
updated library path handling in Natives . java to ensure correct library path is set based on input requirements
# 344 - remove deprecate annotation @ columnhstore ... migrate to @
fix ( glowplayer ) : set skin flag to 10 , BYTE , HumanEntity
simonstewart : fix test that fail on window
fix nullpointerexception in mapservice . getmember ( ) .
replaced System . getProperty ( " os . version " ) with AccessController for retrieving the OS version to enhance security by using privileged actions for
added a constant for the " freemarker . suffix " file and updated its usage in TemplateEngineFreemarker . java
updated value calculation in SelectMessageQueueByHash . java and added order IDs in SelectMessageQueueByHashTest . java to ensure correct handling
add animation callback for hide - hdragger and hidden - hdragger
replaced ` bindConditionally ` with ` bind ` for caret handling in ` StyledTextAreaVisual . java ` to improve code
refactor ` PrebuiltAppleFrameworkDescription ` , ` CxxGenruleDescription ` , and ` CxxGenruleDescription ` to
replaced SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and PartTreeJpaQueryExecution classes to align with the new parameter
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities . java and a corresponding test in DataUtilitiesTest . java to ensure proper handling of default values
updated SSL engine creation to use a host name based on client authentication to ensure correct SSL engine is created based on client authentication requirements
updated assertions in TestFSTableDescriptors . java to use assertTrue instead of assertEquals for cachehits to improve clarity and correctness
added a new method ` wdDeleteCookie ` to ` ExportedWebDriverFunctions ` and refactored cookie deletion logic in ` InternetExplorer
added a new boolean field ` mHasEndedLauncherTransition ` and modified controller recreation logic in ` AbsSwipeUpHandler ` and `
updated HTML formatting in HTMLWriter to use utf - 8 character encoding to ensure proper handling of special characters in the HTML content
refactor IndexReader class to improve code organization to enhance maintainability and readability of the code
updated the maximum stats key prefix length and improved path separator handling in multiple classes to enhance performance and ensure consistent path formatting across different operating systems
updated the arrowButton assignment in BasicComboBoxUI . java and added a new class bug6337518 . java with a new test class
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future feature additions
refactor UserInfoActivity class to improve code readability to enhance maintainability and facilitate future updates
replaced ` context . sendBroadcast ` with ` notifyChange ` in multiple service classes to utilize ` HomeContentProvider ` for notification notifications
refactor BubbleTextView and Launcher classes to manage the state of the pressed or focused background to improve the responsiveness of the
updated the ` getFallbackResponse ` method to accept a ` Throwable ` parameter to enhance error handling by providing additional context in the fallback response retrieval
changed the condition from ` env . _ compile _ only ` to ` env . _ dest _ dir ` in ` DumpBytecode . java
added null checks for CHANNEL _ TAG _ INDEX and ENTITY _ TAG _ INDEX in ChannelUri . java to ensure robustness by preventing potential
updated regex regex specification in RegexpUtil . java and added new test cases in TestSqlPatterns . java to enhance regex functionality and improve test coverage
added a constant for the ACTION _ BAR _ TITLE in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action
updated PythonDslProjectBuildFileParser to use ` Iterables . getLast ( ) ` instead of ` Iterables . getOnlyElement ( ) `
updated the scheduling duration from " * " to " 0 " in CleaningService . java to allow for a longer scheduled period to improve the
updated TransactionalValidationListener to handle partitioned tables and improved table path validation to enhance the validation process for partitions in the Hive metastore
refactor ReplicationHandler and SnapPuller classes to improve code readability and maintainability
changed the data type of generatedKey from int to long in ShadowSQLiteDatabase . java and added SQL execution tests in SQLiteDatabaseTest .
refactor variable name from ' proxy ' to ' proxy ' in SimpleReferenceCache . java to improve code readability and maintainability
updated test failure messages to include " failed to inline " in multiple test files to ensure accurate matching of test failures related to inline operations
updated keepAlive timeout parameters and added null check for endpoint in WebClientFactoryImpl . java to improve connection stability and prevent potential null pointer exceptions
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
replaced Exception handling with Throwable in Dispatcher . java and refactored DispatcherTest . java to use try - with - resources for resource management
camel - 14263 : camel - defaultcxfbinding should not use cxf _ message dataformat .
added a case for ' ~ ' in ClientUtils . java to handle a specific case for the ' ~ ' character in ClientUtils . java
camel - 14284 : camel - slack should use java . time . delay instead of long .
fix block drop . close # 3550
updated layout parameters in TranscodingTab . java for improved layout spacing to enhance layout consistency and readability of the code
added a new file ` bug8057791 . java ` that implements a UIManager look and feel to test the rendering of a
refactor flag assignment logic in LambdaToMethod and add a new class LambdaInterfaceStaticField with a static field to improve code clarity and
simonstewart : re - enable websocket api when engine api add eth subscription
added a null check for the variable ' to ' in ComposeActivity . java to prevent potential NullPointerException when ' to ' is not initialized
updated ParquetFixedWidthDictionaryReaders to handle dictionary value reading and added a new test for bigInt with a dictionary to improve functionality and ensure
refactor calculations in PortraitPagedViewHandler to use dp . isLandscape instead of dp . availableHeightPx to improve layout
added a new annotation ` Log ` and an ` LogInterceptor ` class to implement logging functionality in the Spring Cloud AOP framework
updated string concatenation in QueuedThreadPool . java for improved readability to enhance clarity of trace output when trace is empty
updated CacheGenerator and CacheProvider classes to use ` Implementation ` instead of ` ReferenceType ` and ` Collection < T > ` for cache implementation
added totalFrameSize ( ) parameter to the createReferenceMap method in FrameMap . java to ensure the reference map accurately reflects the
refactor TypesafeConfigurator class for improved clarity to enhance maintainability and readability of the code
camel - 16462 : camel - karaf - add unit test for camel - graphql
updated the main method name from ` main ` to ` bug1 ` and ` bug2 ` in ` RFE2891944 .
updated URL encoding handling in HttpClientIntroductionAdvice . java to improve code readability and maintainability
replaced ` unsupportedPlatformTool ` with ` UnsupportedPlatformTool : : new ` in ` CommandAlias . java ` to improve clarity and
updated loopCount from double to int in RecoveryStrategy . java to improve type safety and clarity in logging messages
added ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way to
refactor KieAddressManagerTest , AddressManagerTest , and AbstractAddressManager classes to use reflection for field access to improve type safety and
updated column specifications and layout parameters in VLCVideo . java to ensure consistent spacing and improve layout consistency
fix a typo in the code and fix a typo .
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated MavenCli and MBoot classes to use " / . m2 " instead of " / . m2 / user . xml " and
added a buffer binding method in VertexBufferObjectWithVAO . java to enable dynamic rendering of array buffers for improved performance
refactor ServerHttpSecurity class for improved readability to enhance maintainability and facilitate future updates
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP configuration flexibility by allowing custom HTTP headers
add userpasswordnotvalidexception to error response when password be not valid
deleted the NoOpConfigPathGetter . java file to the functionality was deemed unnecessary or redundant
replaced Codec . base16Decode with Bytes . fromHexString in EngineAuthService . java to improve code readability and maintainability by using
updated FloatUtil to use CSSName instead of CascadedStyle and added null checks for float properties to improve code clarity and ensure proper
optaplanner - 1343 : add import to optaplanner - core . api . domain . solution . planningentity
refactor ` getDefaultHeaders ` method to return a MultiMap instead of a new instance of ` CaseInsensitiveHeaders ` to improve encapsulation and
rename ` enc ` to ` charset ` in multiple classes to improve clarity and consistency in naming conventions
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use ` compareTo ` instead of ` compareTo ` to improve code readability
replace error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for debugging purposes
updated import statements for NamedAuthenticationHandler , UsernamePasswordCredentials , and UsernamePasswordCredentials in LegacyAuthenticationHandlerAdapter . java to ensure compatibility with the
changed the visibility of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check to prevent invalid filters from being removed from the network to enhance security by preventing invalid filters from being removed from the network
pdfbox - 4892 : remove unnecessary wrap method , a suggest by valerybokov
replaced ` DataOutputStream ` with ` BufferedOutputStream ` in ` MinimalLockingWriteAheadLog . java ` and added a try - finally block
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest class for improved clarity to enhance maintainability and readability of the code
nutch - 2696 remove unused import in sharecontrollerw . java
added a check for ` sourceTask ` before retrieving counters in ` CounterStatsAggregator ` to prevent potential ` NullPointerException ` when ` sourceTask `
updated the null check for the readListener variable in HttpInput . java to ensure that the readListener is not null to avoid potential NullPointerExceptions
refactor color setting logic in AppearancePanel to utilize ColorSelectionModel for better event handling to improve code readability and maintainability by
changed the parameter type of the constructor from false to hidden in TaskHelper . java to allow the constructor to specify the type of the argument for
http : / / issues . apache . org / jira / browse / amq - 4896 - fix test failure in amq
pdfbox - 4071 : fix resource leak in ccittg3 . tif ( )
added import statement for DefaultParameterHandler in BoundSql , SqlSource , and LanguageDriver classes to enable the use of DefaultParameterHandler in the
added a check for the maximum spill depth before setting the interval interval in LinearScanWalker . java to ensure that the interval interval does not
add micronaut ast builder to make it easy to compile a micronaut script
refactor PgResultSet and PgStatement to use a separate closeInternally method for improved resource management to enhance code readability and maintainability
changed the initialization of serviceAdvisorType from null to PYTHON to ensure compatibility with the new service advisor type
replaced instances of ` resolver ` with ` threadResolver ` in ` GenericDatumReader . java ` to improve thread - safety and ensure proper
changed the return type of ` Path ` from ` Collection < ? extends Subpath > ` to ` List < ? extends Subpath >
replaced instances of new byte [ 512 ] with a random byte array in SendCoinShieldTest . java to improve test reliability by
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class with locale - specific parameters to enhance functionality for
removed redundant whitespace in CodeGenerator . java to improve code readability and maintainability
removed the ` 1 ` parameter from the ` scroll ` method calls across multiple classes to simplify the method signature and improve code readability
changed the visibility of the pointer variable from private to public and added reset methods in FlatRecordReader . java to allow external access to the pointer
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
refactor cast expression handling in CastExpression . java to improve type safety and clarity to enhance code readability and maintainability by reducing
replaced ArrayList with a boolean variable ' acceptsAll ' for better clarity and functionality to improve code readability and maintainability by using a
added a new boolean parameter ` false ` to the ` TaskView ` class to control the behavior of the task view
added ` isAutoIncrement ( ) ` method to ` CreateTableChange ` and implemented its implementation in ` LiquibaseDataType ` to enable
improve error message when command fail due to internal server error
updated import statements and added VM options in LocalManagementTest . java and LocalManagementTest . java to utilize JDK ' s test library
replaced ` toSimulate . add ( currentStatus ) ` with ` toSimulate . push ( boosterStatus ) ` in `
added support for binding an AJP connector in GitBlitServer and updated Build to download from RUNTIME and COMPILETIME to enhance
added type coercion checks for compound types in TransTypes . java and created Intersection03 . java with assertions in Intersection03 .
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread in WToolkit . java to ensure the toolkitThread is only started if it is
[ gr - 23343 ] optimize the compression of the bundle in parallel .
show the surface on window ( fixes # 1193 )
updated the temporary directory name from " RecordTransformationTest " to " getClass ( ) . getName ( ) " in AbstractRecordExtractorTest . java
added ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` constants and updated service addition logic in multiple classes to enhance configuration flex
added a ` service ` property to the ` GoogleCloudFirestoreTicketDocument ` and modified the ` GoogleCloudFirestoreTicketRegistry ` to
refactor Generate class to improve code readability to enhance maintainability and facilitate future updates
updated JsonFunctions to accept nullable parameters and added unit tests for JSON format to ensure correct handling of null values in JSON format
added a new boolean flag ` DOTS _ ONLY ` and updated related logic in ` BadgeRenderer ` , ` IconPalette ` , and
changed the visibility of the ` getConfiguration ` method from ` final ` to ` final ` in ` FreemarkerManager . java `
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest ` to ensure that the ` setExcludedPackageName
updated device Udid retrieval logic in AppleTest . java and added SDKName handling in IdbRunTestsStep . java to ensure compatibility
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use ProduceProcessorManager and improved error handling to enhance error logging clarity and ensure proper
added a null check before binding the root script in AllAppsView . java to ensure proper initialization of UI components during initialization
added a boolean variable ` TEXT _ BURN ` and modified the line count check in ` Utilities . java ` to conditionally set shadow layer
added JUnit teardown methods to TestColumnAccess , TestReadEntityDirect , and TestColumnAccess classes to ensure proper cleanup of database and view
added a method to retrieve the parser based on the specified name in SecurityNamespaceHandler to enhance functionality by allowing dynamic retrieval of the parser based on
updated conditional statements in BoundedLocalCache . java and added a fastpath method in BoundedLocalCacheTest . java to improve code clarity
updated WebSocketConnection interface to extend WebSocketConnection and added complete and flush methods in RawConnection and WebSocketAsyncConnection classes to improve WebSocket connection handling and
added multiple tests for the ` all _ assertions ` method in ` SoftAssertionsPerfTest ` to ensure that the ` assertAll ( )
added a new constant for TEST _ FAILURES _ EXIT _ CODE in PythonRunTestsStep . java and modified the execute method in ProjectWorkspace
added a conditional check for markupEnabled in GlyphLayout . java to ensure that text wrapping is only applied when markupEnabled is enabled to enhance the
refactor score handling in TestBooleanRewrites to use a Map and Set for better readability to improve code clarity and maintainability by
updated the method to retrieve the superclass of the class instead of the enclosing class to ensure correct class hierarchy is used for anonymous classes
refactor flush ( ) method in UpdateManager , Player , and PlayerSocketConnection classes to simplify connection handling and improve code clarity
added a boolean flag ` mStarted ` and refactored listener removal logic in ` Launcher ` and ` LauncherAnimUtils ` to
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
refactor import statements in ReplicaAssigner . java to use wildcard imports for better readability to improve code readability and maintainability by redu
updated the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to ensure the media info parser is valid
added a method to check if the AROUND _ TYPE annotation is acceptable in BeanDefinitionInjectProcessor . java to ensure proper handling of interceptor
added permission verification logic in FolderPermissionBase . java to ensure that permissions are correctly identified and verified during directory operations
added a new method ` dueToRegistrationStateChanged ` to the ` handleProviderRegistered ` method and updated the ` handleProviderRegistered ` method
updated the color calculation in PastelColor . java to use a configurable color base to improve color variability and ensure consistent color representation
refactor ScriptEngineFactory class to improve code readability to enhance maintainability and facilitate future updates
refactor HolographicViewHelper to use a new method for creating original and outline bitmaps to improve code readability and maintainability
refactor request method handling in CloudClient to use HttpMethod . fromString for improved clarity to enhance code readability and maintainability by redu
improve multiwordpreprocessor . gettag ( ) to accept containing phrase
remove unused import of java . io . IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added conditional logic to retrieve the output format class based on the class name to improve flexibility in class loading based on HivePassThroughOutputFormat
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
modified the boundary check in DOMBuilder . java to ensure proper validation of input length to prevent potential index out of bounds errors
refactor hgraph assignment logic in ClusteringCoefficient . java and update message retrieval in EigenvectorCentrality . java to improve
camel - 15836 - camel - aws2 - translate : add verification error message if the service be not support in the specified region
added a new file ` TestClass ` implementing ` InterfaceWithStaticAndDefaultMethods ` and created a new class ` PublicStaticInterfaceMethodHandling
camel - 16462 : camel - defaultkeyselector should use camelcontextaware instead of camelcontextaware
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor KeyManagerFactory , TrustManagerFactory , and CertPathValidator classes to improve code organization and maintainability
updated JGIT _ VERSION from 201106090707 - r to 201109151100 and modified JGIT _ VERSION
refactor client key assignment in HttpClientIntroductionAdvice to use clientKey instead of clientId to improve clarity and maintainability of
int - 1188 add transformerparser and unit test for it
updated BACK _ FACTOR and REWIND _ TIME constants and modified duration checks in ResumeObj . java to improve clarity and correctness
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` , ` JavaSEPort ` , and
updated usage string formatting and improved command usage handling in DocumentationPrinter . java to enhance clarity and correctness of command usage output
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in attribute
refactor setSeqFiles and setUnseqFiles methods in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles
removed redundant @ Override annotations from Observation . java to improve code clarity and maintainability
updated the logic for updating the projet ruleset in ProjectPropertiesModelImpl . java to ensure consistent behavior when updating the projet ruleset based on preferences
fix race condition in abstractsootfieldref . getfieldunsafe ( )
fix npe in elasticmeterregistry ( # 1193 )
updated IController and TinyGController classes to use IController instead of AbstractController to enhance controller functionality and support unit management in the application
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering behavior for large horizontal rules
replaced System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
refactor multiple Java classes for consistency and clarity to improve code readability and maintainability
added a check for negative frameLength in LogInspector . java to ensure that frameLength is greater than or equal to zero to prevent potential errors
updated return statements in IntFloatMap , IntIntMap , and IntIntMap classes to return default values instead of zero to ensure consistent behavior
refactor icon setting and setting logic in ImageDownloadService . java to ensure UI updates occur on the Event Dispatch Thread to improve responsiveness
added null check for registered in HandlerRegistration . java to improve robustness by preventing potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from the ` AttributeNode ` , ` DocumentNode ` , and ` HtmlNode ` classes to
added null check for results in RedisDistributedMapCacheClientService . java to prevent potential NullPointerException when results are null
added logging statements for MobFileCache enabled and disabled state in MobFileCache . java to improve visibility into cache configuration and ensure proper
refactor ColConvCCMTest class for improved clarity to enhance maintainability and readability of the code
refactor code to use variable variables for allowCovariantReturns and syntheticNameChar to improve code readability and maintainability by reducing red
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
camel - 14284 : camel - core - do n ' t throw exception if file consumer do n ' t have a consumer
added an EventQueue . invokeLater to the EventQueue . invokeLater method in bug6638195 . java to ensure that the event
updated the method call from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
simplified steering value assignments in multiple classes to improve code readability and maintainability
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to utilize ` MessageDigest ` for
refactor JdbcSerDe to use LocalDateTime and LocalDateTime for date handling to improve code clarity and maintainability by utilizing local date and time
updated version from 2 to 3 and refactored metadata handling in ParseData . java to improve compatibility with newer versions of the application
updated FlywayAutoConfiguration and FlywayAutoConfigurationTests to use ConditionalOnPostProcessor for JPA dependency management to enhance flexibility
added sorted ( ) method to ClassesImpl . java to improve data organization and accessibility of class elements
added a method to retrieve the current stable state in LauncherStateManager and introduced a waitForLauncherCondition method in AbstractLauncherUiTest to improve
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor ` TestCloseScope0 . java ` to use ` memoryOrResourceScope ` instead of ` Class . forName ` for improved
increased the timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for connections to complete before proceeding
updated CaptchaChannelProcessorTests . java file to improve test coverage for Captcha channel processing functionality
added a condition to update the owner collection in the MetadataImport class to ensure that the item ' s own collection is correctly updated based on the
added retry mechanism to save registry cache file after a retry attempt to improve reliability by limiting the number of attempts to store cache files
updated the variable name from ` mergeDirectory ` to ` directory ` in ` TrackingCFSDir ` to improve clarity by using a
pmd : add miss for / / for ( string , list < string > ) and for ( string , list < string > )
added validation for bucket partitioned Iceberg tables in HiveIcebergStorageHandler and IcebergTableUtil to ensure that insert operations
updated assertions in BootstrapTests to reflect the correct number of keys and added a check for legacy SAML keys to ensure tests accurately reflect the availability
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java `
refactor getAddressVector method to use a variable for the addressees instead of a synchronized variable to improve code readability and maintainability by
added WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT to the CommentsParser class to enhance
added exception handling for lock release failures in multiple classes to improve error management and provide clearer feedback on lock release failures
updated package declaration from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` in ` DataSourceInitializer . java
refactor ` SpelExpressionTransformer ` and ` OperatorNode ` classes to check for unary operators before processing to improve efficiency by avoiding unnecessary
added TypeValidation import and modified ByteBuddy instantiation in MockBytecodeGenerator . java to disable type validation to enhance flexibility in bytecode generation
refactor ` JavacRoundEnvironment ` and ` AnnotationSetScanner ` to use ` TypeElement ` instead of ` DeclaredType ` to
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and modified lock timeout in MySQL
refactor ` setSystemProperties ` method to use ` applyToSystemProperties ( ) ` for setting system properties to improve null safety and avoid potential
refactor HTTP redirect handling in ServiceApiRequest . java to use URLDecoder for improved error handling to enhance code reliability and maintainability by
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and MicroserviceFactory to enhance configuration flexibility
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to static and modified database deletion logic in BaseAndroidTestCase . java and GeocodeHelperTest . java to
updated return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread count from the current account
added a new test method ` testVirtualThreadPoolPreview ` and modified the ` testVirtualThreadPool ` method in ` DistributionTests . java ` to
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and updated the Wallet class to handle limits to improve order management
added null check for the user before retrieving user settings in HomePage . java to prevent potential NullPointerExceptions when accessing user settings
updated the method to retrieve the absolute file path in LocalFileSystem and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure
added constants for maximum width and height and adjusted bounds setting in ComponentBuilders . java to improve code readability and ensure bounds are within defined limits
updated CommonsHttpSolrServer to use SLF4J logging and added a deprecated method for setting connection manager timeout to improve logging clarity
added exception handling for document creation in PrintController . java to improve error reporting for document creation failures
refactor file handling in CrateType and RustBinaryIntegrationTest to use a map for improved readability to enhance code maintainability
added checks for empty strings and a method to check for numeric values in SpellChecker to ensure correct handling of numbers with separators in spell checking
updated the MESSAGE constant from " HelloWorld . message " to " HelloWorld . message " to correct the spelling of the message
added methods to retrieve and show file actions from the OCFileListFragment in FileDisplayActivity to improve user experience by providing quick access to file
set the daemon flag to false in ReplicationHandler and added error handling in SnapPuller to ensure graceful shutdown of the puller and improve
removed unnecessary whitespace in the update method call to improve code readability and maintain consistency
changed the constructor parameter from ` this ` to ` theMaterials ` in the ` StreamerLoader ` constructor and added a loop to remove
updated DependencyBank . java to include " Core Library for LibGDX " , " Controller / Gamepad API " , " Controller / Game
added recycling of recycling views based on available height and icon sizes in AppsContainerRecyclerView to improve performance by optimizing
added a new test method ` testBuildingBinariesSeparately ` to the ` AndroidBinaryCrossCellIntegrationTest ` class to ensure that the
make sure we do n ' t crash if there be no waypoint
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating ParsedNode and
added null value filtering functionality in FilterOperatorUtils and corresponding test cases in TestCaseTest to enhance filtering capabilities and ensure correct behavior of range and
added validation checks for bootstrapMethodRef parameters in JDynamicInvokeExpr . java to ensure correct handling of bootstrap method arguments to prevent runtime errors
updated the localhost address from " localhost : 9000 " to " localhost : 9000 / myservice " in JmsHttpJmsTest . java
added a call to clear the getFormatters ( ) method in CucumberInstrumentation . java to ensure proper handling of runtime options during instrumentation
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService ` and added
added a condition to adjust workspace label position based on icon size and text size to ensure that workspace labels are only hidden when necessary
updated assertions in ReplicationFactorTest to use a new method for clarity to improve readability and maintainability of the test code
llvm : do n ' t initialize context if pre - initialization be call during pre - initialization
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to clean up
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced instances of ` Integer . valueOf ( ) ` with ` parseInt ( ) ` in ` VisualScoreTagTest . java ` to improve
updated error messages and improved file traversal logic in Copy . java to enhance clarity of error messages and ensure proper handling of file operations
refactor segment name parsing logic to use a new method ` isLowLevelConsumerSegmentSegmentName ` to improve code readability and maintainability
added methods to start activities and startActivityForResult in ShadowFragment and corresponding tests in FragmentTest to enhance functionality and ensure proper exception handling for
updated the time calculation in DueDateBusinessCalendar to use the current time instead of the current time to ensure accurate date representation based on the
add x86 _ 64 - none - linux - none - linux - android to target cpu type
added ` deleteAllFiles ` method to ` FileDataStorageManager ` , ` ManageAccountsActivity ` , and ` FileStorageUtils ` classes to
updated command - line argument formatting in SchemaCrawlerCommandLine . java to improve readability and consistency of command line output
added a new method ` createSuiteDescription ` to ` Description ` and modified the ` equals ` method in ` Description ` to use it to
replaced ` MultiFormatReader ` with ` MultiFormatReader ` for decoding barcodes to simplify code and improve readability by eliminating
removed the ` sources ` parameter from the ` BuckTarget ` constructor and updated its usage in ` BuckRunner ` , ` TargetsList
add unit tests for range pasting and replay functionality in GWCZoomContextFinderTest . java to ensure correct behavior of range replay functionality
added a constant for dependency tracking in JRubyScriptEngineConfiguration and modified dependency tracking activation logic in JRubyScriptEngineFactory to enhance dependency tracking
updated method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the correct
do n ' t add table and keyspace if it already exist
refactor image handling in WelcomeWindow to use a cached image instead of a hardcoded image to improve performance and maintainability by reducing
updated tuner configuration handling and error logging in multiple classes to ensure proper tuner resubmits and improve error logging during tuner res
added HasTests interface to ShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enhance functionality by allowing tests to
added a condition to include the " db : hsqldb " string in TestFilter . java to ensure compatibility with PostgreSQL database connections
fix a bug in javabinloader . java that do n ' t work on window .
truffle : do n ' t call materializeHostException when there be no stack trace
refactor service loading logic in GraalServices . java and add exportJVMCITo method in CompilerConfigurationFactory . java to improve code
added a new test method to verify duplicate command handler resolution in the AggregateAnnotationCommandHandlerTest to ensure proper handling of duplicate commands in the command
[ flink - 20865 ] [ stream ] enable fine - grained resource management in batch jobs
fix fish hook to be able to draw a fish . close # 3560
camel - 14284 - camel - aws2 - sftp : fix typo in camel - ftp
rename ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in the GangliaReporter class to clarify the purpose of the
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when no items are available
added a condition to check for the absence of the REPORTER _ BEAN _ NAME bean to ensure proper configuration in the absence of a custom reporter bean
replaced StringBuffer with StringBuilder for better performance and flexibility to improve performance and maintainability of the code
added a new method ` omitHeader ` to multiple classes to control the removal of header values based on the " OMIT _ HEADER " parameter
corrected the method call from ` _ id ` to ` getPropertyNumber ( ) ` in ` EscherProperty . java ` and added a
updated method call from ` getBuildRuleType ` to ` getBuildRuleType ` to ensure consistency in method naming conventions
replaced direct calls to ` Scene . v ( ) . remove ( m ) ` with a local variable ` scene . modifyHierarchy ( )
added null checks for trade ID and delayed payoutTxId items in TradeDataValidation . java to enhance robustness by preventing potential NullPointerException
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified method signatures in ` DatabaseSchemaCrawler ` , ` TableRetriever
wallet : set the confidence type to not _ SEEN _ IN _ CHAIN in sendtx . getconfidence ( ) .
refactor HttpClientIntroductionAdvice to handle body and header annotations more robustly to improve code clarity and ensure proper handling of
fix : do n ' t process conditions in craftinghelper . processconditions ( )
hbase - 10650 hregion . close ( ) do n ' t throw exception if open region fail
refactor condition checks in Credential . java for improved readability to enhance code clarity and maintainability by reducing redundancy
[ java ] do n ' t check if the subscription have an image .
replaced the ` destroy ` method with ` destroyForcibly ` and refactored error handling in ` TestJvmProcess . java `
added ` isOracle ( ) ` to the condition in ` TestDefaults . java ` to ensure compatibility with Oracle database operations
camel - 14263 : camel - mail - make sure we do n ' t try to connect to the mail store if the store be
added token handling logic in Parser . java to throw ParseCancellationException if there are more tokens in the query that have not be consumed to
Translate2LanguageEnum . java : add GEORGIAN , GREEK , GREEK , and GUJARATI
added a method ` getDataFileName ( ) ` to ` Model ` and modified the ` Voice ` class to check for specific data file names to
added ` setEmailDomain ` methods to ` LdapIdentityProviderDefinition ` , ` IdentityProviderDefinition ` , and ` IdentityProviderEndpointsMockMvcTests
added request read and connect timeout constants and methods in Configuration class to provide configurable timeout settings for request
added a condition to check if myDeferredConcepts and myConceptLinksToSaveLater are not empty before executing the processDeferredConcepts (
added RedisCategory import and category annotations in RedisServiceRegistryTests . java to categorize tests related to Redis functionality
updated the ` noNPEWhenUsedFromDeprecatedUses ` method to include a typePattern parameter and modified the method signature in ` FindDeprecated
updated paintComponent method call in WaterfallPanel . java to ensure proper rendering of components in the layout
removed unused imports from multiple configuration classes to clean up the code and improve readability
updated event signature and event name handling in ContractEventTriggerCapsule and LogEventWrapper classes to include a full event signature and event name to
updated filter logic to check if the file name ends with " _ " sessionId instead of checking if it does not already exist to ensure compatibility with
updated the drawing logic in MapView to use the background color instead of clearing the rectangle to improve visual consistency by using the background color
refactor code structure to improve readability to enhance maintainability and clarity of the code structure
removed debug print statements from multiple Java files to clean up the code and improve readability
added a check for NaN score in TestFieldCacheSort . java to ensure that tests are only executed when score values are non - NaN
added a copyOf method to the oldKeys set in DeviceState . java to ensure oldKeys is immutable and avoid potential null pointer exceptions
added checks for zero - time values in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper handling of
rename ` offererMultiSigPubKey ` to ` offererBtcPubKey ` and ` takerBtcPubKey ` in ` Contract .
updated generic type parameters in FunctionAllGroupHeadsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector classes to use generics
[ drools - 6641 ] fix the bug of edit session model in ksession6
updated HiveMetaStoreClient instantiation to use the current configuration object to ensure compatibility with the current configuration
added a check for modalness in TaskView . java to prevent further processing when modalness changes
added a new test method ` createFromProfileLevel ` in ` ShadowMediaCodecListTest ` and implemented native settings in ` ShadowMediaCodecList
fix issue # 5460 when enter key be wrong ( # 5460 )
added validation for width and height in SunVolatileImage and modified data creation logic in X11SurfaceDataProxy and XRPMBlit
updated the separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure correct formatting of the
updated AsyncStressTest and StressTest classes to use AtomicInteger for thread - safe access to improve thread - safety and performance in concurrent scenarios
added configuration checks for Beta Flavour and updated UI components in AchievementsFragment and LeaderboardFragment to improve user experience by
added access and description properties to the SearchMethodVisitor class to enhance the search functionality by providing access and description information
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to ensure proper
refactor duration setting logic in DLNAResource . java to improve code readability and maintainability
updated XML element names from " batch - config " to " stream - config " in ResequenceDefinition and StreamResequencerConfig to
refactor transaction management by introducing ` acquireTxn ( ) ` and ` acquireTxn ( ) ` methods in ` TableReader ` to improve
flume - 1343 : use ssl . keymanager . algorithm instead of keymanager . type
replaced JavaIsoVisitor with TreeVisitor in PrimitiveWrapperClassConstructorToValueOf . java and updated getSingleSourceApplicableTest method to use Applic
added a condition to exit the exit ( ) method in Blockmania . java to ensure the exit ( ) method is called only when the
change accessspecifier . package _ private from package _ private to NONE in multiple Java files to ensure consistency and clarity in access handling
updated method names and error handling in Check . java and added new class T6199153 . java to improve clarity of error reporting and
updated strip retrieval logic in OrcInputFormat . java to ensure correct retrieval of stripe statistics from ORCReader
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URL format from " http : / / " to " https : / / " in MyhentaicomicsRipper .
added a version option to display the current jar version to enhance user experience by providing quick access to the current version
fix a bug in the applet export list ( fixes # 399 )
updated rotation preference handling based on keyboard availability in ConsoleActivity and enhanced input connection capabilities in TerminalView to improve user experience by providing more appropriate default values based on the device
updated the type of the hq variable from HitQueue to ScoreDoc in ParallelMultiSearcher . java to improve type safety and eliminate
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 14284 : camel - jbang - expose the ` ` headersmapfactory ' ' attribute in the managedcamelcontext mbean .
updated formatting in JavaCompiler . java and Diagnostic . java files to improve code readability and maintain consistency
int - 1348 jmsgateway now implement initializemessageconverter and add a new parser for the outbound - gateway parser
updated variable index from 1 to 2 in ArrayFunctions . java to correct the expected index in the expectation logic
refactor script engine initialization and error handling in AbstractScriptProcessor and InvokeScriptedProcessor classes to improve code robustness and enhance error logging for
added PostgreSQL PGStatement support to the proxy creation process in PooledConnectionImpl and added a test for prepared statement handling in ConnectionPoolTest to
add refresh size estimates to flushMemTables and flushMemTables and flushMemTablesAndRefreshSizeEstimates method to improve memory management by ensuring
change log level from error to warn in AtomicRemainder . java to provide more detailed logging for fragment limit issues
patch by jbellis ; review by brandonwilliams for cassandra - 1343
fixed - rblockingdeque . toseconds ( ) throw npe if timeout be 0 . # 3365
updated string formatting in JobInspectCommand . java for consistency to improve code readability and maintainability
refactor Engine class to improve code organization to enhance maintainability and readability of the code
replaced ` Stream . of ( ) ` with ` entrySet ( ) ` in ` ChildHolder . java ` to improve readability and maintain
[ issue # 4892 ] add session credential to acl client ( # 4893 )
updated condition from ` numIndexDims = = 1 ` to ` numDataDims = 1 ` in ` BKDWriter . java `
replaced printStackTrace ( ) with log . warn ( ) and added null check in NotebookServer . java to improve error handling and prevent potential
pdfbox - 4892 : use lt instead of funn , a suggest by valerybokov
changed method visibility from public to package - private in NodeIdAccessor . java to allow access to these methods from other classes
cloudstack - 4892 : fix error message when attach volume to vm before create snapshot
changed access modifiers of methods from public to package - private in ItemWriter . java to allow access to these methods from other classes
added a test parameter to the ThingImpl constructor in RoombaHandlerTest . java to facilitate testing of the Roomba functionality
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to utilize ` RAMDirectory ` instead of
added a check for the height of mDrawTextRectBuffer before setting the line height to ensure that the buffer height does not exceed the defined
refactor WalletAppKit class for improved clarity to enhance maintainability and readability of the code
simonstewart : remove hat _ js _ rashorn from oqlengineimpl
fix a bug in chattransportselectorbox . remove ( ) .
added methods ` resolve ` and ` replaceTokens ` in ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
added null checks for bsqBlockChainExplorer in PreferencesPayload . java to ensure proper handling of null values and avoid potential NullPointerExceptions
added ` getAttribute ` and ` removeAttribute ` methods to ` StandardSession ` and ` Session ` classes to manage and retrieve session attributes more efficiently
added assertions to verify the presence of plain and along properties in the database JSON list to ensure the correct bean names and alongside the
updated averages initialization from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure averages has the correct initial page
refactor BatchCommandLineLauncher class for improved clarity to enhance maintainability and readability of the code
added ` DataSource ` and ` JdbcTransactionManager ` methods to ` BatchMetricsApplication ` to enable integration with HSQL database in batch metrics
rename ` UnauthenticatedHttpService ` to ` HttpService ` in the GlowrootLogHttpService class to improve clarity and consistency in
pdfbox - 4892 : use the non - stroke java composite instead of the non - stroke java composite
removed unnecessary synchronization and added synchronization in DocumentsWriter and IndexWriterPerThread classes to improve thread safety and ensure proper refresh of the index writer
added getter and setter methods for multipleChoiceOptions , validationConstraint , and validation constraints in UiBinding . java to enhance property retrieval functionality for better
updated various instances of ' setReflectively ' to use more direct parameters and improved method signatures to enhance code clarity and correctness by avoiding unnecessary string conversions and reflecting actual types
added a fullSave flag and modified error logging in Save . java to ensure that the stored tree updates only when necessary to improve user experience by
updated the ` setCondition ` method to accept a ` Pattern ` parameter and modified the ` setCondition ` method to accept a ` seenPatterns
updated generic type parameters in KrakenAdaptersTest . java for consistency and clarity to improve code readability and maintainability
removed the import of CharTermAttribute from tokenStream in DefaultIndexingChain . java to streamline the code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the code
added a check for the dataEncoding in VectorizedPrimitiveColumnReader . java to ensure that unsupported data encoding is properly handled and prevent runtime errors
updated logging statements in HttpSolrCall . java to improve clarity and consistency to enhance readability and maintainability of the code
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy resources
fix defaultentityqueryrepository . getmaxlevel ( ) to prevent infinite recursion
refactor error message handling in HubChangeExecListener to include a check for the changelog ID before logging to improve clarity of communication failure messages
added a new Hashtable for barcode decoding in AbstractBlackBoxTestCase . java to enhance test coverage for barcode decoding functionality
updated ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` in ` CxxPreprocessAndCompileStep
replaced the variable ` maxEvents ` with ` query . setRange ( 0 , maxEvents ) ` in ` ObjectStore . java `
removed unnecessary checks for @ Validated annotation in ValidatedLocalValidatorFactoryBean . java to streamline validation logic by eliminating unnecessary logging
refactor entity deletion logic in EntityAwareWorldProvider . java to ensure temporaryBlockEntities is reset before processing to improve efficiency by avoiding unnecessary
removed redundant type checks in IntrinsifyArrayCopyPhase . java to streamline the code for better readability and maintainability
removed unused logging statements from TestCoyoteAdapter . java to streamline code by eliminating unnecessary logging dependencies
refactor ` WantedAnywhereAfterFollowingInteraction ` to use ` Location ( ) ` instead of ` getCause ( ) ` to
added null checks for ownerAddress and keyAddress in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure contract integrity by validating
replaced ` CommandComparator ` with ` TreeMap ` for sorting commands in ` ScriptLauncher . java ` to improve performance and maintainability of command
chore ( deps ) : upgrade cloud platform to 3.3 . 0 and update doc
refactor metadata property setting in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated AsmLoader instantiation to use interfaceClass ' s getClassLoader to ensure proper class loading by using the interface class loader
pdfbox - 4892 : avoid npe if rlineto do n ' t have the initial point
updated print statements in Java2TypeScriptTranslator . java to include " declare " and " export " based on the ` isDefinitionScope `
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to handle input streams to ensure proper handling of input streams during HTTP requests
updated input listener types in HelloInput . java to improve clarity and consistency to enhance code readability and maintainability by standardizing listener registration
added a null check for the lhs variable in AbstractSqmPath . java to avoid potential NullPointerExceptions when accessing the root path
updated package structure for CreateFolderTest , DeleteFolderTest , and RenameFileTest to improve organization and clarity of test files
refactor image creation logic in AwtCanvas . java to handle byte indexed images to improve performance by avoiding unnecessary image processing when the
[ gr - 11348 ] add native image location qualifier to libgraal .
remove dataflowportabilityapi unsupported class from pardotest
replaced ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl .
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class for improved clarity to enhance maintainability and readability of the code
added a warning log for maximum maximum size configuration in EvictionChecker . java to inform users that the max size configuration is not allowed in the
corrected the spelling of " LST " to " LST " in multiple Java files to correct the spelling of " LST
refactor scoring logic in ThreadedAcousticScorer . java for improved readability and efficiency to enhance code clarity and
replace throwing an exception with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLenium
added a new default method ` makeString ` across multiple ` RichIterable ` classes and implemented lock handling in ` RichIterableTestCase
replaced ` Ordered . HIGHEST _ PRECEDENCE ` with a constant DEFAULT _ ORDER in ` OidcServicesManagerRegisteredService
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related tests to enhance the
refactor Deflater class for improved readability to enhance maintainability and reduce complexity of the code
added exception handling for IOException in Font . java to ensure proper resource management and avoid potential resource leaks
added a null and empty check for content in VersionTypeBinding . java to ensure that a default version is returned when no content is provided
removed the ` result ` variable from the ` onPostExecute ` method and updated its usage in ` NearbyListFragment . java `
change content type check to be case - insensitive to ensure consistent content type handling regardless of case sensitivity
[ bouncycastle - crypto ] make opensh private key format public
updated the ` updateItemLocationsInDatabaseBatch ( ) ` method to accept a boolean parameter and modified the ` updateItemLocationsInDatabaseBatch
replaced specific Hibernate annotations with a wildcard import in InheritanceCacheTest . java to improve code readability and maintainability by reducing
updated import statements in ConnectOAuth2RequestFactory and added a method to retrieve user approval requests in TofuUserApprovalHandler to ensure compatibility
fixflux naming convention not apply to tag value ( # 645 )
do n ' t print a string in case of invalid resolution
updated the key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the new cookie handling requirements
added a static method ` classMetadataUnsupported ` to ` Platform ` , ` Platform ` , and ` Platform ` classes , and ` Platform ` classes
added functionality to set and set the clear all button in OverviewActionsView and RecentsView to enhance user experience by allowing users to
updated the ` desiredRepoVersion ` variable to be final and added a check for existing ` ClusterVersionEntity ` to ensure immutability of
deleted the MemoryLeakTest . java file to remove unused test class to streamline the codebase
updated the return statement in ServletTester to use the local host address instead of the local port to ensure the correct port is returned based on
added a check for MVDWAPI in ServerListener . java and modified the BAN _ DELETER flag in Settings . java to
hazelcasttestsupport : add assertclustersizeeventually ( int expected size , Collection < HazelcastInstance > ) method to assert cluster size
added a SingletonHolder class to manage FFIProvider instantiation based on JNA configuration to improve flexibility and control over FFI provider instantiation based
tika - 2635 -- add a test for hierarchical w file list
added null checks for ` objectToSave ` and ` collectionName ` in ` MongoTemplate ` and updated related test cases in ` MongoTemplateTests
updated Position initialization logic to use NODE _ LIST instead of 0 for direct input and successor count to ensure correct positioning behavior based on the
added a ` accTradeValue ` field and its getter method in ` BithumbTicker ` and updated ` BithumbTradeServiceRaw
updated logging statements in RealtimeSegmentDataManager and AvroUtils to improve logging clarity and consistency to enhance code readability and maintainability by
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to ensure thread -
refactor multiple dictionary - related classes for consistency and clarity to improve code maintainability and readability across the dictionary - related classes
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
( chore ) camel - sv : fix test failure on slow ci server
updated condition in DelegationService to check if the cycle is less than the current cycle to ensure proper handling of edge cases for account capsule
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore . java and updated test assertions in CodeStoreEndpointsTests . java
added a check for UniqueConstraint in StandardObjectChangeFilter to ensure correct matching of unique constraints in the database
refactor description handling in MediaDetailFragment to use a HashSet for language codes to improve performance and maintainability of language code handling
added exception handling for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve robustness by logging specific exceptions during runtime
api : add support for reference filter in listimagecmd
camel - 14284 : camel - jms - remove the bridgeerrorhandler property from the endpoint builder
added checks for " # ifndef " and " # endif " in OpExclusionUtils . java to ensure proper handling of exclusion operations
added a return statement to the DatabaseCommand class to ensure that the method returns false for successful execution
updated the initialization of Politician objects in HonestPoliticianExample . java to include additional parameters to enhance clarity
replaced null check with StringUtils . isNotBlank for initFile in BeanShellInterpreter . java to improve code readability and maintainability by using a
camel - 14284 : camel - restlet should use the default port instead of a hardcoded value .
removed unused imports from SchematicFormat . java to clean up the code and improve readability
added system property " hive . query . max . length " to " 100Mb " and modified overridden configurations in SessionState . java to
changed visibility of userName and security manager variables from public to private and modified related methods in WebServer and WebServer classes to enhance encapsulation and
rename ` writeHdfs ` to ` kafkaSink ` across multiple files to improve clarity and consistency in naming conventions
updated the condition in HiveConf to check for " spark . app . name " instead of " spark . app . name " in HiveS
refactor variable names from ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve code readability and
simonstewart : add maximisewindow to the webdriverservlet to allow the window to be maximize
updated methods to retrieve the main cell Buck out directory and added a method to retrieve the main cell Buck out path to improve clarity
removed assertion for " entity expansions " message in TestXMLEntityExpansion . java to simplify error handling by eliminating unnecessary
updated offset and length values from ` ibuffer . get ( ) ` to ` & 0x7FFFFFFF ` in ` TrueTypeFont
added a customizable assertion to the DirectMethodHandle class to ensure that the form ' s customized is not null to prevent potential null pointer exceptions
updated coordinate handling logic in LineChartRenderer . java for improved clarity and consistency to enhance code readability and maintainability by using a
refactor flavor validation logic in AndroidBinaryDescription to use a loop for better readability to improve code clarity and maintainability by reducing
corrected the variable name from ` offset ` to ` i ` in ` LwjglGL11 . java ` to ensure the correct
added new files ` Property . java ` and ` TestClassResolutionFail . java ` , and created ` PropertySuper . java ` to implement
add a conditional check to ensure that the shutdown hook is only removed if the group property is enabled to ensure that the shutdown hook is only removed
updated the class name from " FilterChainProxy " to " FilterChjainProxy " in FilterChainProxy . java to improve clarity
replaced ` Collections . sort ` with ` Arrays . sort ` in ` PercentileAggregationFunction . java ` to improve performance and readability
added a check for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable initialization in QueryTypeAnalyser to ensure
replaced the instantiation of ` MutableColumnDataType ` with a default value of ` null ` in ` DatabaseInfoRetriever . java ` and added
updated link formatting in multiple Java files to improve code readability and maintain consistency across the codebase
replaced instances of ` instance ` with ` instance ` for ` ObjectEqualEvaluator ` and ` BooleanNotEqualEvaluator ` across multiple files to
updated terminology from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to ensure
added a method to play sound effects in AllAppsView to enable or disable sound effects for the CLICK event to improve user experience by allowing
changed the exception type from Exception to IOException in the main method to improve error handling by providing a more specific exception type
added setGranularityEnabled ( true ) method to leftAxis in BarChartActivitySinus . java to enable the granularity of the left axis
refactor version comparison logic in GdxSetup . java to use a new method ` compareVersions ` to improve code readability and maintainability
updated file path handling in ContextHandlerGetResourceTest . java to use MavenTestingUtils for OS alias support to improve test reliability by ensuring
added close ( ) method to multiple connection classes to ensure proper resource management and avoid potential memory leaks
refactor awaitAppend method to use LinkedBlockingQueue for event handling in SocketRemoteTest , MockAppender , and SocketServerFunctionalTest to
[ beam - 4142 ] add a check to ensure the resource be a directory
removed unused imports from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
removed redundant call to handleHandle in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the codebase
simplified the condition for checking down hit target in OtherActivityTouchConsumer . java to improve code readability and maintainability
refactor NavbarButtonsViewController to use Configuration for UI mode handling to improve code readability and maintainability by reducing complexity
change abort message from ` abort ` to ` throw ` in ` PolyBenchLauncher . java ` to improve error handling by throwing an exception
refactor short extraction logic in ClassWriter . java for clarity and efficiency to improve code readability and maintainability by reducing redundancy
added BlockFormattingContext parameter to ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java ` to enhance layout rendering
added error output handling for the launched process in WorkerProcess . java and updated WorkerShellStep . java to improve robustness and provide clearer
added null checks and improved error handling in CheckedListReplaceAll . java to enhance robustness by preventing NullPointerExceptions during operator replacement
added a new boolean variable ` _ testFill ` and a new test method ` testWriteOnConnect ` in ` SslConnectionTest . java
added listener registration for device configuration changes in DeviceFlag . java and modified FeatureFlags . java to be final to enhance encapsulation and ensure default
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue 2.2 . 0 gh
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
update instructorfeedbackeditpage to use focus ( ) instead of focus ( )
refactored synchronization logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
replace System . err . println with System . out . println in ChangeableUrls . java to streamline output formatting for better readability
added a randomAccessRows parameter to the SparseRowMatrix constructor and modified the constructor to accept a randomAccessRows parameter to enhance flexibility in
cloudstack - 4892 : do n ' t persist usage event if the poolid be null
updated the input stream initialization to use a path based on the Hive configuration for the HIVE _ PLAN job to ensure correct path is used
[ beam - 6892 ] remove unused import of guava . v26 _ 0 _ jre
fix memorycallgraphbuilder . registermemorycctprovider ( ) to memorycallgraphbuilder .
[ java ] fix npe in multi - user chat protocol .
added file writing validation and dirty state management in Save . java to ensure that only valid files can write to maintain data integrity and prevent data loss
added FolderSyncActivity and FolderSyncActivity to manage folder synchronization functionality in the DrawerActivity to enhance user experience by providing quick access to folder
[ hotfix ] [ test ] remove unnecessary try - finally block in sequentialchannelstatereaderimpltest
spanishtreenormalizer : fix spanish tree normalization .
replaced ` reader . pointValue ( ) ` with ` heapPointWriter . getPackedValueSlice ( i ) ` in ` SimpleText
added LocaleRandomizer class and its corresponding test in InternalRandomizerRegistry and InternalRandomizerRegistry to facilitate random value generation for
added unit tests for MIME type checks in TestMimeTypes . java to ensure correct handling of font metadata types in the application
[ netbeans - 4892 ] upgrade to 1.9 . 0 ( # 4892 )
refactor code structure in TCPTransport . java for improved readability to enhance maintainability and clarity of the code structure
change the default read timeout from 0 to 0 in Http2AsyncParser . java to ensure that the read timeout is always zero to avoid potential
updated the default value of WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to accommodate
corrected the spelling of ' previous ' in the SQL error message to ensure the correct column name is used for restricted queries
added date handling functionality in ThirdEyeJiraClient . java to enable proper parsing of date data in the issue builder
refactor ` generatePriority ` method to use ` PriorityGenerator ` instead of ` PriorityGenerator ` to improve code readability and maintainability by
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE for scalar replacement logic in ClassTransformer . java to ensure scalar replacement behavior
updated sort order values from BUCKET _ DISPLAY _ NAME to DATE _ TAKEN in projectionTest and folderSortOrder assignments to ensure consistency in
updated rectangle calculations in TexturePacker2 . java to correctly account for image dimensions to ensure correct rendering of texture elements
refactor JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder to improve code clarity and
added shutdown methods to validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added a new annotation for RawJsonRequestBody in JaxrsSwaggerGeneratorContext and created a new class ` RawJsonRequestBodyAnnotationProcessor ` to
added a new method ` newTarget ` to create a new ` Target ` instance using ` TargetExtension ` to facilitate the creation
replaced the instantiation of ListBeanContainer with a new ArrayList in BeanContainer . java and added a new test class in AllUtilTestsSuite
hbase - 25836 fix testmetricsregionserver . testmetricsregionserver . blockcachecounthitpercent ( ) in hbase -
camel - 16462 : camel - cachedoutputstream should close the temporary cache file when the exchange be complete .
fix teltonikethread : set deviceid in teltoniketracker ( fix # 1193 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` in ` HybridProjectBuildFileParser . java `
added a new method ` visitAssignop ` in ` Attr . java ` and created a new test class ` FailOver15 . java `
added account handling functionality to the FirstRunActivity and BaseActivity classes to control account management behavior based on user settings
simplified import statements and refactored polygon search logic in IsochroneResource . java to improve code readability and maintainability
added a path parameter to the DrillViewTable constructor and updated related classes to include a path parameter to enhance flexibility in view management and
added default configuration options for the PooledByteBufAllocator in PooledByteAllocatorL . java to enhance flexibility and configurability of
changed the type of array from double to short in ObjectInputStream and added a new CloneArray class for cloning functionality to ensure correct data type handling
added configuration for LLAP IO thread pool size and updated executor initialization in LlapIoImpl to allow dynamic adjustment of thread pool size based on
added conditional checks for Java versions 8 and 11 in SecurityServicesFeature . java to ensure compatibility with newer Java versions for SSL logging functionality
updated bounds checks for latitude and longitude range in LatLonGrid . java and added a new test for polygon growing functionality in TestLatLon
simonstewart : add a new method ` invisibilityOfElementWithText ` and ` refreshed ` to ` ExpectedConditions `
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its visibility to include an ` isInsertOverwrite `
added a test for the ` getOuterClass ` method in ` ReflectorTest . java ` to ensure that the ` getOuterClass `
added a new configuration option " auto _ generate _ android _ facet _ sources " to the configuration to enable automatic generation of Android facet sources in
refactor message handling in HubChangeExecListener to improve clarity and consistency to enhance code readability and maintainability by using a consistent message
added properties field and getter and setter methods in Link . java and corresponding test cases in QuickLinksConfigurationModuleTest . java to ensure properties are
updated the ` @ EqualsAndHashCode ` annotation in ` InitialConfig ` and added a ` toString ` method in ` YamlConfigFileDTO ` to
updated generic type parameters in AwaitableServerClientCallConfiguration to use ` ReqT ` instead of ` ReqT ` to improve type safety
updated the ` forName ` method to accept a ` caller ` parameter and modified the ` forName ` method to accept a ` caller ` parameter to
updated import statements and method calls in RequestItemRepositoryIT . java for consistency and clarity to improve code readability and maintainability by using
replaced ThreadPoolExecutor and LinkedBlockingQueue with their extended versions ThreadPoolExecutorEx and LinkedBlockingQueueEx to enhance functionality and customization of thread management and
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor TimeStepdefs and HumanTimeConverter to use Calendar instead of HumanTime to enhance date handling capabilities and improve clarity in
updated the pattern for " spark _ isolated " , " spark _ recessive " , and " spark _ recessive " in Mod
updated the proxy creation to use the URI directly from the ExchangeSpecification to improve clarity and reduce dependency on the ExchangeSpecification object in service
removed unnecessary print statements in RecordGenerator . java to streamline code and improve readability
[ java ] increase auto - commit timeout for kafka consumer
updated lock handling in Liquibase , LoggingExecutor , and StandardLockService classes to ensure proper resource management and enable database change log locking
updated @ SuppressWarnings ( " unchecked " ) and @ SuppressWarnings ( " rawtypes " ) annotations in AbstractAuthorizeTag . java and AuthorizeTagCustom
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety during concurrent access to database operations
camel - 14284 : camel - spring - boot - auto - configuration - maven - plugin - do n ' t allow nested property to
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` getVirtExMarketDataService . java ` to ensure
camel - 14263 : camel - message - helper - test should use camel - support - dump instead of camel - support
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
added synchronization around date and number formatting in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
updated height scale setting from 256 to 256 in FractalHeightMapGrid . java to ensure consistent scaling behavior for the height map
updated equality check in SecurityConfig to use assertNotSame instead of assertEquals to improve clarity and correctness of string comparison logic
changed the default value of dumpPartitionId from " dump - partition - id " to " dump - partition - id " to ensure that the
added test cases for UTXO output handling in UTXOSetTest . java to enhance test coverage for UTXO functionality and ensure
[ java ] use ` java . rule . internal . isexplicitunusedvarname ` instead of ` hasexplicitignorablename `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test case to verify that job parameters override previous restart parameters are correctly applied in JsrJobOperator to ensure correct behavior of job restart
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to ` Database
refactor principal creation logic in JaasAuthenticationHandler . java to improve code readability and maintainability by reducing redundancy
refactor core closing logic in SolrCores . java to utilize a custom thread pool for improved resource management to enhance code readability and
added null check and visibility logic for mActionsView in RecentsView . java to ensure actionsView is only hidden when fullscreenProgress
refactor parameters handling in RunIdIncrementer to use a variable for better readability to improve code clarity and prevent potential null pointer exceptions
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added tests for the ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure the correctness of the ` getMatchedDevices
[ 3.0 ] do n ' t throw exception when invoke metric event ( # 8043 )
added a new ` EigenvectorCentralityBuilder ` class and created a new ` EigenvectorCentralityBuilder `
updated registry creation methods to use a random port instead of a hardcoded value to improve flexibility and maintainability of the registry initialization
refactor geometry data generation to use UnsignedBytes for type and vertex colors to improve performance and maintainability of geometry data handling
updated the Amplifier setting from 2 to 0 in BlockEntityBeacon . java to ensure the Amplifier is set correctly based on
refactor TubeCalc class for improved clarity to enhance maintainability and readability of the code
servicehttpclientfactory : disable health check if it ' s enabled
change the type of ` groups ` from ` List < Class < ? > > ` to ` List < Class < ? > > ` to
added a new key and timeout annotations for the Selection in Nimbus L and F to address issues related to bug 8057791 and
bugfix # 322 - allow speedment applications to exit via main method completion ( # 322 )
simonstewart : fix checkstyle issue inLexicon . java
added reflection access check for type in JavaAdapterFactory to ensure proper access control during reflection operations
add lazy session creation to test to avoid intermittent failure
updated initIOContext method to accept RecordReader as a parameter to enhance flexibility in handling record readers within the Hive input format
deleted ` ClassLoaderHolder ` , ` LoaderManager ` , and ` VerticleManager ` classes to remove unused classes and streamline the codebase
added a configurationChanged method to FileStore , JavaLanguageServer , and ScanClassPath classes to improve file access control and ensure proper handling of filesystem
added error handling for session callback registration and unregistering in PackageInstallerCompatVL . java to improve robustness by preventing application crashes
updated index paths from " src / test / org / apache / lucene / index / index . cfs " to " index . noc
[ hotfix ] [ k8s ] fix npe when create a rpc service
added a retry setting for mapreduce . map . maxattempts in TestExportSnapshot . java to set maximum map attempts based on the retry flag
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class SslConnectionTest for verifying SSL connection behavior to ensure proper handling of closed SSL connections in the application
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed to
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure that date serialization functionality works correctly for different locales and
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging for SQL generation and modified conditional logic in PutDatabaseRecord . java to improve traceability of SQL generation process and ensure correct key
updated the loop condition in TableOutput . java to correct the width calculation to ensure the loop does not exceed the defined maximum limit
pdfbox - 4892 : avoid possible npe , a suggest by valerybokov
updated the priority logic in FormatStringChecker . java to use NORMAL _ PRIORITY instead of NORMAL _ PRIORITY to ensure correct priority handling for format string
[ java ] ignore non - final loop variable in a for - each statement .
updated PDFExporter and PDFExporterTest to use Java . gexf instead of Les Miserables to enhance PDF export functionality and improve
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping and retrieval of role attributes in the LDAP user details mapper
add ldap . read . timeout configuration to the ldapcontextcontext . getreadtimeout ( ) method
refactor TestDescription and related classes for consistency to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple hash map classes to improve clarity and understanding of allocation
added a condition to check if the state handler is invalidated before proceeding to ensure that the gesture handling only occurs when the handler is invalidated
updated calculations for maximum distance and rotation settings in Workspace . java to improve UI responsiveness during folder creation
updated property name checks and assertions in OciConfigConfigSource . java to use ConfigProviderResolver instead of ConfigProvider to improve clarity and
refactor Testjsig class for improved readability to enhance maintainability and facilitate future development
refactor mana calculations in multiple classes to use getCount ( ) instead of getCount ( ) for consistency to improve code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings related to the class
refactor tsFile validation logic in DataRegion . java to improve clarity and error handling to enhance code readability and ensure proper cleanup of
added new files ` Switch21 . java ` and ` Switch19 . java ` to implement pattern matching and null handling for switch - related cases
updated error message from " reason : actual argument java . lang . String cannot be converted to " java . lang . ComparableType " to cl
added xmlStandalone flag to StreamHelper and created a new test class TestStreamHelper for XML processing to ensure compliance with XML standards and
updated validation logic in Int2ObjectCache . java and added equals method in Int2ObjectCache . java to ensure total capacity does not exceed
removed unnecessary sorting of SecurityFilterChains in WebSecurityConfiguration and added a new test for order - on - bean definitions in WebSecurityConfigurationTests
updated the order type parameter from TimeInForce . GTC to TimeInForce . GTC in BinanceTradeService . java to ensure
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update default value handling in FloatRangeRandomizer to improve flexibility and ensure
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure compatibility
camel - 14284 : camel - jms should return the documentation and parameter json schema if the component be an activemq component .
added error handling for NoSuchFieldError in ` SourceUtils . java ` and created a new test class ` SourceUtilsTest . java ` to
refactor LeafFilterFactory to use a separate method for obtaining the LeafFilterPredicateLeafBuilder to improve code readability and maintainability by
added a condition to check if the original artifact name starts with a prefix before processing to ensure that the original artifact name does not start with the
refactor certificate handling in HttpsSegmentFetcher to use a loop for reading certificates to improve code readability and facilitate easier debugging
updated the return type of the getDefaultBooleanValue method from boolean to String and added a new DnsFallback class for testing to improve type safety and
ww - 4892 fix error message in defaulttheme
change ` success ` to ` url ` in ` DepositAddress . java ` and update JSON properties in ` DepositAddress .
refactor the drop method in WindowsSecurity to use a try - finally block to ensure proper resource management and prevent memory leaks
removed " address " from scope parameters in CommonOAuth2Provider . java and updated test assertions in CommonOAuth2ProviderTests . java to simplify
refactor ManagedSelector to use a new Start class for managing the started state to improve code readability and maintainability by encapsulating the start
added a new constant for Hue and saturation values in WLedBindingConstants and updated request handling in WLedHandler to improve code clarity
replaced the ` isValidCaller ` method with a ` Set < String > ` in the ` VectorizationProvider ` class to improve code read
added a new method ` caseJSRInst ` in ` InstSwitch . java ` to handle JSRInst instances in ` InstSwitch .
added a transactionmanager to the ` SubscriptionActivatingSubscriber ` constructor and updated imports in ` BaseSubscriptionInterceptor ` and ` SubscriptionActivatingSubscriber
refactor data deletion logic in DBMSProcessor . java for improved clarity and error handling to enhance code readability and maintainability by
added elevation setting for contact view in Lollipop and above to ensure compatibility with devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` in ` J . java ` to improve clarity and consistency in naming conventions
added privileged actions to file reading and writing operations in SandboxFileManager . java to ensure that operations are performed on a privileged context
refactor GroovyParserVisitor and GroovyPrinter to handle binary operator types more effectively to improve code readability and maintainability while ensuring proper handling of
updated warning message to use class name instead of message to improve clarity of warning messages for better debugging
refactor character handling in RecordInputStream , UnicodeString , and UnicodeString classes to ensure correct conversion of byte values to short to improve accuracy in
added a new test method to download a file with Norway characters in the name to ensure that the download functionality correctly handles file names with
replaced RuntimeException with CancellationException in AsyncResource . java and added functionality in FingerprintScannerSample . java to improve error handling and provide clear
added a null check before handleCache calls in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is null
added a new test method for removing an object from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the ` remove `
updated copyright year in multiple Java files to reflect the correct copyright year to ensure compliance with copyright standards and improve code clarity
( chore ) camel - coder : fix typo in error message
refactor scrolling logic in RecentsView and PagedView classes to improve clarity and maintainability of the scrolling logic in Recent
refactor HiveIcebergMetaHook to use a static final map for composite hms table properties to improve code readability and maintainability
added a method to check if an address already in use in multiple classes to improve clarity and maintainability of the code by centralizing address
added a new argument " - cp " to the argument list in TestNestmateAttr . java to enable configuration of the test class
updated the verbose schema type from VERBOSE to verbose _ schema in Grep . java to improve logging clarity by using a more descriptive schema
updated import statements and added multiple @ Override annotations in multiple classes to ensure proper method overriding and improve code clarity
# 1188 - add nested _ use _ savepoint property to transactionmanager . setnestedusesavepoint ( )
replaced ` int ` with ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated its usage in ` MemIntQ
[ java ] remove the backoff idle strategy from the conductor idle strategy .
refactor ` HttpClientIntroductionAdvice ` to use a new ` handleBlockingCall ` method for better readability to improve code
added configuration for the HDP version in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP version in the application
added reload functionality to the JavacProcessingEnvironment class and modified the close method in JavacProcessingEnvironment . java to improve service loading
added DeepCloner class and modified ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize DeepCloner for
added binding for WebServer . JETTY _ SHOW _ STACKTRACE in ResourceBase . java to facilitate debugging by allowing the
added a check to return null for OBJECT type in NativeObject . java to ensure proper handling of object types in the code
replaced sun . jvm . hotspot . types . OopField with sun . jvm . hotspot . types . OopField and
added public key support for RSAPublicKey and ECPublicKey in JwkKeyListView and updated JsonWebKeyEndpoint to use it to
[ gr - 21744 ] fix npe in nativeimageheap when useonlywritablebootimageheap . value ( )
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for unsupported MBean implementations
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
renamed the method ` Validator ` to ` validator ` and added ` getOwnerAddress ` across multiple actuator classes to standardize naming conventions and implement address retrieval
http : / / issues . apache . org / jira / browse / amq - 4896 - add a main class for main
added handling for minimum and maximum values in BinaryClient . java to ensure that minimum and maximum values are correctly converted to byte arrays when they are
refactor ProtobufAnnotationSerializer to use a builder pattern for index and empty indices to improve code readability and maintainability by reducing redundancy
[ java ] remove the correlationId from the async command id set .
added saveConflict method calls to FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are only applied when the file
refactor ` ExecutionContext ` and ` AbstractTransactionalResourceItemWriter ` to use generic types for ` Map < Object , Object > `
replaced instances of ` StrUtils ` with ` Lucene ' s common utility for file splitting in multiple filter factories to streamline code by
added support for remarks reporting and mysql driver in DatabaseFactory . java to ensure compatibility with Oracle and MySQL databases in the application
added a handler parameter to the MethodInterceptor instantiation in SignedSupportingClassProxyFactory . java and updated warnings in PartialMockingWithConstructorUsing
updated time calculations in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date to improve accuracy of time tracking and enhance
replaced instances of ` new EnvironmentInstance ( ) ` with ` wrapClassLoader ( ) ` in ` ExecutionContext ` and ` LocalExecutor `
added UI thread handling for buffer changes in TerminalView and adjusted buffer height calculations in TerminalTextViewOverlay to improve user experience by ensuring proper buffer
[ hotfix ] [ config ] fix npe in config dispatcher . processconfigfile ( )
refactor freezing logic in OperationActions . java and OperationRegistry . java for TVM freeze V2 to ensure proper handling of static
added insecure configuration options to TlsConfig and updated trust manager creation logic in TlsUtils to enhance security by allowing the trust manager to be
refactor searchSubPackages method to use a variable for source path and add a new class T7091528 to improve code readability
replaced ` nodeColumns ` with ` edgeColumns ` in ` ExporterGDF . java ` and added a new ` EdgeIdColumn
added a cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the entity is only persisted when necessary
replaced ` getMessageId ( ) . hashCode ( ) ` with ` Arrays . equals ( ) ` in ` Message . java ` to improve
updated ISO - 8859 - 1 header from " ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
[ hotfix ] [ rocksdb ] remove unused method in rocksdbserializationcompositekeybuilder
added a method to retrieve static permissions in ProtectionDomain and updated subjectPd assignment logic in SubjectDomainCombiner to enhance security checks by
fix npe in floating flower recipe ( fixes # 1193 )
added a loop to read the last parse index and modified the parsing logic in Parser . java to improve the handling of parse indices and ensure proper
added a method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailsFragment ` and modified error handling in ` UploadMediaPresenter ` to
added a new file ` Issue596 . java ` and a test for handling unhandled requests in ` HttpHandlerImpl . java ` to ensure
updated bitwise operations in NodeBitMap . java to use long literals to ensure correctness in bitwise operations
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
replaced the ` gitBashConfigValue ` and ` gitBashConfigValue ` with ` useStdin ` and updated related logic
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito to improve readability and maintainability of the test code
replaced the declaration of ` enclosingType ` with a direct call to ` wrapped . getEnclosingType ( ) ` in ` AnalysisType .
updated method names from ` getProperties ( ) ` to ` entries ( ) ` and ` getConcatSuffix ( ) ` across multiple files to
replaced the default value setting from 0 to 0 in PutAllCallable . java to simplify the code by eliminating unnecessary duration specification
[ rocketmq - 4892 ] fix npe when consumer be not empty or not ( # 4893 )
[ java ] add source identity to the driver conductor so that it can be generate .
added a new file TopTabAction . java that implements a Presenter interface to provide a standardized way to access the toolbar in the desktop
camel - 16462 : camel - dynamic - router - add support for all match mode . thanks to franz for the patch
refactor AggregateItemReaderTests to use JUnit ' s JUnit annotations instead of TestCase classes to improve test readability and maintainability
changed the type parameter type of the Procedure constructor from ` Object ` to ` T < T > ` in ` AbstractObjectValueTypeMap . java
updated imports and added functionality for managing Wikidata edits in AchievementsActivity , AchievementsActivity , OkHttpJson
added a check to ensure the length of the input value is within a valid range to prevent runtime errors and ensure that the input length does not
added a new ` BugAccumulator ` instance and updated the handling of absolute values in ` DumbMethods . java ` to improve error reporting and
refactor CategoryDataset , IntervalCategoryDataset , and SlidingCategoryDataset classes to improve code organization and maintainability
updated InvalidTopologyTemplateException to include additional error messages for invalid credential types to improve debugging by providing clearer error messages for invalid credential types
updated random number generation logic in TestVectorUtil . java to ensure consistent random number generation for vector elements
changed the return type of the ` compareBy ` method from ` int ` to ` long ` in ` DateUtil . java ` to improve
added SSL property handling in TestUtil . java and implemented SSL property retrieval in PGPropertyTest . java to enhance SSL configuration flexibility and ensure
added functionality to download filesPotentially Harmful Windows and Mac files in FileDownloadToFolderTest and FileDownloadViaProxyTest to ensure
added null check before setting flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
updated DLNAResource to include a check for transcoding configuration to ensure proper handling of renderer - specific settings before
updated DataTable and TableDiffer classes to handle empty lists to improve robustness and prevent potential NullPointerExceptions when comparing tables with empty lists
added a new constant ` CustomIgnoreTag ` to remove the ` iter ` from the ` section ` if it starts with ` CustomIgnoreTag
camel - 16462 : camel - jdbc - optimisticlocking should not throw an exception instead of throw a runtimeexception .
fix @ configurationproperties in beandefinitioninjectprocessor and add parentconfigproperties class
updated PreferencesActivity to extend LimitlessIDEActivity and added padding handling in PreferencesActivity to improve layout responsiveness and ensure proper padding adjustments
deleted the ClusterNodeInfo . java file to the class is no longer needed for the current implementation
updated return value from true to true in ShieldedTransferActuator . java to ensure correct functionality of the transfer process
added debug output for the ciphersuite selection in ServerHandshaker . java to facilitate debugging by providing insights into the handshake
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle multiple templates more effectively to improve user experience by
added a ` nodeLabelMap ` field and modified the ` ImportContainerImpl ` class to handle duplicate node IDs with labels to improve handling of
added a new file R2303044ListSelection . java that implements a list selection test for a specific item to demonstrate
[ java ] throw a control protocol exception if the client be already in use .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to verify the functionality of ` StepScopePlaceholderIntegrationTests ` to ensure that the
updated row count handling in StatsRulesProcFactory . java to improve clarity and efficiency in row count computation
added path URL formatting and updated filtering logic in SpringBootDocBuildTemplate . java and DocUtil . java to improve path handling and ensure proper
replaced instances of ` logger ` with ` logger ` and replaced ` Hashtable ` with ` Hashtable ` for improved readability to enhance im
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` in ` DistBuildSlaveExecutor . java ` to improve
improve error message when json parse fails
added a conditional check for debug mode before logging the log message in WidgetsModel . java to avoid unnecessary logging during production
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of numTerms in SimilarityBase and added a new test for discount overlaps in TestSimilarityBase to ensure correct calculation
added a check for null methods in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to ensure that send calls are only performed on
added exit and quit properties to Global . java and removed the " quit " method from ScriptingFunctions . java to streamline exit handling and
refactor LoanBrokerSharkDetectorDemo to use ConfigurableApplicationContext instead of ConfigurableApplicationContext to improve code readability and maintainability by reducing
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in method naming
refactor cookie handling in VmwareContext . java to use CookieJar for improved null safety to enhance robustness by ensuring cookies are
updated assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
increased the buffer size for bigintegerToBytes calls in ECKey . java to accommodate larger data sets for improved performance
updated the property name from " fml . disabledMods " to " fml . modStates " in the Loader . java file to
refactor account selection logic into a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by reducing duplication
updated IOException message in CollectSink . java to include hostIp and port to improve error reporting for client connection issues
added a check for empty simulation results in ValidatorContractController and created a corresponding test in ValidatorContractControllerTest to ensure that an exception is thrown
updated JSON reading logic in TexturePackerFileProcessor to handle empty settings file to improve robustness by avoiding potential null pointer exceptions
added a null check for the datasource property in PooledConnection . java to ensure proper handling of null datasource properties in the connection pool
fix testrefprocsanity . testrefprocsanity fail on slow machine
added null checks for currentConsole before writing bytes to avoid potential NullPointerExceptions when currentConsole is not initialized
set credential refresh delay to 100ms in KinesisConfigUtil . java to improve user experience by allowing more time for credential updates
refactor AlertDialog . Builder to use a dedicated method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
updated the method signatures in T4501661 . java to include a pack parameter to enhance functionality by allowing the argument to be passed to
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
added a wildcard import and refactored dependency resolution logic in PluginBundleManager . java to improve code readability and maintainability by reducing
added a HashSet for ZipFileInputStreams and modified the releaseInflater method to include a copy of ZipFileInputStreams to ensure proper resource management and
rename BarcodeFormat constants from DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in naming con
added methods to run active and idle based on key ranges in SequenceGeneratorSource . java to ensure proper handling of active and idle states in the
updated method names from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServer . java ` and
replaced ` @ Override ` with ` @ FindAny ( ) ` in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to stream
added support for " ppc64le " architecture in Bits . java and ByteArrayAccess . java to support additional PPC64 architecture in the
updated error message in RoboMonitoringInstrumentation . java to include a reference to the repository for details to provide users with a reference to the
increased timeout durations from ` MINUTES ` to ` Long . MAX _ VALUE ` in the ` waitWithDeadline ` method calls to
replaced instances of ` Date ` with ` Instant ` for date formatting in ` DateUtilTest . java ` to improve code readability and
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message when YouTube Player does not work on Lollipop to inform users that YouTube Player does not work on L
added validation for unterminated dollar quotes , literal , and block comments in ` Parser ` and ` StatementTest ` classes to ensure proper error
added a null check for mVibrator before checking if it has Vibrator to prevent potential NullPointerExceptions when accessing mV
updated table border and cell padding in DotRenderer . java and modified arrowhead assignment logic in DotRenderer . java to improve layout consistency and enhance
added a new method ` ENCODED _ CONF ` to check for encoded parameters in ` HiveConf ` and updated ` SetProcessor ` to
pdfbox - 4892 : catch stringindexoutofboundsexception a suggest by valerybokov
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future feature additions
fix # 3903 ( # 3903 )
replaced BitmapLruCache with NetworkedCacheableImageView and added loadImage method in NetworkedCacheableImageView to improve image
removed unnecessary parameters from LauncherAnimUtils in multiple classes to simplify the code and improve readability by eliminating unnecessary parameters
added a new constant ` gdxControllersVersion ` in ` DependencyBank . java ` and updated references in ` DependencyBank . java ` to
refactor LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated DataSourceHealthIndicator to use DataAccessUtils for column count validation to ensure correct result set column count is used during query execution
[ ds - 4892 ] add no - cache header to authentication response ( # 4893 )
updated warning message formatting to use Locale . ENGLISH to ensure consistent formatting of leader information across different locales
modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility by allowing custom query analysis
updated copyright year in multiple Java files to reflect the correct copyright year to ensure the code reflects the correct copyright year
removed unnecessary line breaks in MainTest . java to improve code readability and maintainability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added a new return statement for VoidColumnVector in VectorizedBatchUtil . java to ensure proper handling of VoidColumnVector instances during processing
replaced the method call to ` req . getName ( ) ` with ` req . getName ( ) ` in ` StatementGenerator . java `
simplified the type matching logic in AbstractConfig . java to improve code readability and maintainability
[ java ] add sessionheaderencoder . offer ( ) method to sessiondecorator .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` and `
added a new annotation ` NoBootstrap ` and refactored the ` BootstrapInserter ` class to check for bootstrap annotations to ensure that
hbase - 25850 tabledescriptorchecker should use tabledescriptorbuilder . max _ filesize and tabledescriptorbuilder . flushsize instead of
updated variable names from ` maxCommits ` to ` requestedCommits ` in ` BranchGraphServlet . java ` to improve clarity and consistency in
added InvocationTargetException to main and run methods in bug6794831 . java to ensure proper handling of method invocation in the main method
added a constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine ` to
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
updated the method call from ` markAsDone ( future , channel ) ` to ` markAsDone ( future , channel ) ` to ensure
added TezConfiguration import and modified TezConfiguration initialization in TezConfigurationFactory . java to ensure TezConfiguration is properly initialized before use
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check for the recentSounds array in OpenALAudio . java and implemented a forget method in OpenALSound . java to
updated state invalidation logic in SimpleBasePlayer and added a new test for discontinuity in SimpleBasePlayerTest to ensure proper handling of
added decimal formatting for number tick units in NumberAxis . java to improve readability and maintainability of the code
refactor ` TargetGraphAndBuildTargets . builder ( ) ` to return ` TargetGraphAndBuildTargets . of ( ) ` instead of
removed the ` IndexFileNameFilter ` class and updated the ` IndexWriter ` and ` SegmentInfo ` classes to simplify the code by elimin
simonstitched _ { name } . png file to disappear if the entire entity ' s collision bounding box be in the
added compression level parameter to ApkBuilder and SignedJarBuilder classes to allow customization of compression levels during the build process
added a test method to include static fields in a stub jar to ensure that static fields are included in the stub jar
added support for BYTES data type in MetricFieldSpec and updated related logic in MetricFieldSpec and PercentileTDigestQueriesTest to enhance data
updated string formatting and formatting in multiple test classes to improve readability and consistency in error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and ` K
added cache management functionality to SpringDataJPAJoinFetchPaginationTest , ForumService , and ForumService to enhance performance and resource management
updated filename retrieval to use locale - specific properties to ensure consistent filename naming across different locales based on the user ' s locale
added null post body handling in SimpleHttp and updated test cases in TestHttpPlugin to ensure proper handling of null post bodies and improve test coverage
added okhttp dispatcher to shutdown the executor service in ClientSideSlb to ensure proper resource management and avoid potential memory leaks
update texture positioning logic in TextureRegion . java based on clipping status to ensure correct rendering of textures based on the clipping direction
improve error message for unknown property in defaultdiscoveryservice
added a null check for contextPath in MetricsPublisher . java to ensure contextPath is set to " NA " when contextPath is null to avoid potential NullPointerException
[ drools - 6892 ] fix npe in kiecontainerimpl and projectclassloader . reinittypes ( )
added validation for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and initialized it in SerializationHeader . java to
added a method to check for precompiled headers in AppleDescriptions and updated AbstractCxxSourceRuleFactory to improve handling of precompiled headers
added a new ` AccWeakReference < T > ` class and modified the ` ImageWatched ` class to use a privileged context
changed method visibility from package - private to private in ObjectMap and OrderedSet classes to enhance encapsulation and improve code clarity
updated isDirect assignment from false to false in VertexBufferObject . java to ensure that the isDirect state reflects the current state of the
removed redundant code in MaryClient . java to streamline code by eliminating redundancy
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 in multiple classes to enable method chaining
pdfbox - 5764 : fix a bug in randomaccessreadbuffer . read ( )
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated border spacing calculations based on container type and folder type in CellLayout . java and DeviceProfile . java to improve layout responsiveness for
refactor valueNumeric initialization to use a new ` ValueNumeric ` class for improved readability and maintainability to enhance code maintainability and
added a condition to check if the response is a deferred authentication before proceeding to ensure that the authentication is only allowed when a deferred response is
updated command - line argument parsing from " -- module - startd - ini = " to " -- add - to - start " to improve
added a new constant ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified the handling of ` partitionValue ` in ` DynamicPartition
[ hotfix ] [ stream ] fix nullpointerexception in streamingjobgraphgenerator
updated return statements in DefaultArtifact . java for consistency and clarity to improve readability and maintainability of the code
camel - 14284 : added kafka consumer rebalance test to ensure that offset state be call twice .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when dependencies cannot be found
changed the property from GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistration
doc ( cryptokey ) : fix typo in documentation ( # 438 )
updated expected message count from 125 to 25 * concurrencyLevel in LumberjackMultiThreadTest . java to improve test reliability by allowing
added a check for player ' s dead state before accessing health checks in GlowPlayer and PlayerUpdateHandler to ensure health checks are only performed
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
apikey and secretkey should be specify with apikey and apisecretkey
refactor switch - case statements to use a conditional check for MfaProviderType instead of switch - case statements to improve code readability and
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the code
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper error reporting when attempting to drop tables with specific materialized view definitions
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to clarify the purpose of
added a new class ` RoboExecutorService ` in the ` RoboExecutorService ` package to indicate that ` RoboExecutorService ` is no longer
added conditional checks for group addition and sorting in GroupTreeView . java to ensure proper handling of groups in the menu based on the root state
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` for clarity to improve code readability and
updated the Java process builder creation and verification for dynamic number of GCThreads in TestDynamicNumberOfGCThreads . java to ensure
changed the return type of ` getHostFlavors ` and ` getAllPossibleHostFlavors ` methods from ` ImmutableFlavor ` to
updated SQL syntax in CreateTable and CreateTableDeParser to use PlainSelect for creating operations and table options to enhance flexibility in SQL generation
updated the background drawable assignment in ChatViewerFragment to set alpha to 64 to improve the visual appearance of the chat background in the UI
test : migrate ctiteratortest to junit 5 ( # 4892 )
added token clearing functionality to multiple tokenizer classes to ensure proper handling of token data in the application
add a new test class ` ASTInitializerTest ` to dont crash on block statement in ` pmd . pmd . ast `
added error handling for missing configurationurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to ensure that state machines cannot be configured with a
added import statement for TestLocators in WebDriverSeleniumTestSuite and added TestLocators import in WebDriverSeleniumTestSuite to enhance test
updated the conversion logic for Double , BigDecimal , and BigDecimal types in StringConverter and added a new test for float conversion in StringConverterTest to
simplified the return statement in AggregateLifecycle . java to improve code readability and maintainability
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure
removed the check for the ' ~ ' character in the FencedCodeBlockParser class to simplify the code by eliminating unnecessary processing
added socket timeout configuration to ConnectionFactoryImpl and ConnectionFactoryImpl classes to enable configurable socket timeout values for socket read operations
added sleep and propagate exceptions in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during test execution
added UTF - 8 encoding to the BufferedReader in HttpUtils . java to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability to enhance maintainability and facilitate future updates
refactor AsyncFileImpl constructor to accept URI and Path as a parameter and add a new AsyncFileImplTest class to improve error handling and
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the CucumberEngineExecutionContext is
cloudstack - 4892 : fix npe in NuageVspManagerImpl . java when there be no physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity
updated Java version constants from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with the latest Java versioning standards
fix a bug in the compiler ( fixes bug # 185 )
provide way to clear all header closing #
replaced Vector with List for handling input and output file names to improve flexibility in handling input and output file names
changed the default grid column from 4.0 f to 3f in AppPreferencesImpl . java to improve the visual appearance of the application
added a condition to check for view creation in CalcitePlanner . java to ensure that views are created only when not already defined
refactor date pattern handling in TestHS2HttpServer . java to improve clarity and consistency to enhance code readability and maintainability
added error handling when accessing the Object object in GraphPrinter . java to improve robustness by preventing application crashes due to potential exceptions
updated driver variable from IE to FIREFOX and added a new method for access pages with an insecure SSL certificate to ensure compatibility with the
updated ByteBlockPool to use Math . addExact for byteOffset and added a test forTooManyAllocs in TestByteBlockPool to
updated the initialization of ` firstEncoder ` and ` secondEncoder ` fields to use ` Locale . ENGLISH ` to ensure consistent formatting across different locales
added exception handling for unexpected exceptions in TcpTransport . java to ensure proper synchronization and handling of unexpected exceptions
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings related to the class
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated imports in ` OcamlDebugLauncher ` to simplify
added a dialog to save and discard changes in the JabRefFrame to improve user experience by providing clearer guidance on changes
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and updated error logging in OAuth20AccessTokenEndpointController to enhance
added a method ` chk ( index , 1 ) ` to the ` chk ( index , 1 ) ` method in ` DrillBuf
hive - 25836 : add a method to init tablemapperjob to allow to specify the input format in the job
updated the method call from ` append ` to ` append ` in ` AbstractJRubyMojo . java ` to streamline the code
improve error message when access to internal language be not find .
added deprecation warning and modified reserveCommitDuration handling in ReplicationHandler . java to ensure compatibility with Solr 7.1 and provide clearer error messages
rename ` cacheVariableName ` to ` cacheForeignKey ` in multiple files to improve clarity and consistency in naming conventions
changed the type of ` handles ` and ` keyBytes ` from ` long [ ] ` to ` Object [ ] ` in ` generateECKeyPair
added suspend method to Restarting and updated test cases in RestartingTest to enhance the handling of job cancellation and improve test coverage for restarting
removed the instance variable from the RotationTouchHelper constructor and updated its usage in RecentsAnimationDeviceState . java to simplify the constructor
refactor UniFiControllerCache to use flatMap for port table handling to improve code readability and reduce boilerplate code
changed the type of ` lwp _ id ` from ` int ` to ` long ` and added a new method ` getThreadForIdentifierAddress
do n ' t add an old offer in the list with the same id in the same offer .
[ java ] use ssl _ protocol _ 1 _ 3 instead of ssl _ protocol _ 1 _ 3 in testclientcerttls13
updated mock handling in MockitoMethodInvocationControl and SystemClassUserCases to use doReturn instead of thenReturn to improve flexibility in mock
replaced instances of ` NotLoadedException ( ) ` with ` PartialDatabaseObject ` in multiple files to simplify exception handling by eliminating
added extra file handling in FileDisplayActivity to ensure proper handling of OCFile data in the activity
added error handling for RuntimeException and improved file management in StoreDirect and StoreWAL classes to ensure proper resource management and avoid potential memory leak
added screenshot task retrieval in AbsSwipeUpHandler and removed redundant stopSwipePipToHome method calls to streamline the swipe - to
added a ` hidden ` flag to the ` CommandArgumentDefinition ` class and its getter / setter methods in ` LiquibaseCommandLine `
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure compatibility with the latest Kafka protocol
[ geos - 6761 ] fix classcastexception in styleinfo and styleinfo
added permission checks and improved intent handling in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being
added getId ( int id ) methods to TideMapLoader , TmxMapLoader , and AnimatedTiledMapTile classes to enable
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBC connection to use Version . V _ 0 _ 13 instead of Version . V _ 0 _ 13 to ensure compatibility with the latest version
added properties and properties for schemas and includeSchema in LiquibaseGenerateChangeLogMojo . java to enhance the configuration options for schema
replaced ` putIfAbsent ` with ` put ` for ` registryCache ` in ` JmxRegistry . java ` to simplify cache management by using
benchmarker : log single benchmark runner exception instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore ` to allow subclasses to access the method
fix fileselectorfragment to use absolute path instead of absolute path .
added new test methods for handling large and slow response content in FastCGIProxyServletTest . java to enhance test coverage for different response scenarios
added an intent to start the ReadInteractionsService in MarkReadService . java to enhance the service ' s functionality for reading interactions
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when the
added a default port number for the SMTP server in the configuration to ensure a default port is used when the configuration is not provided
added retry mechanism for reloading SSL factory renewal in TlsUtils . java to improve reliability by preventing premature delays during
updated date format from " yyyy - MM - dd ' T ' HH : mm : ss ' Z ' to " yyyy - MM - dd
updated the error message in ` SpyingOnRealObjectsTest . java ` to provide clearer context about the visibility of private classes in the
added a method to check if the line ends on a NL tag in InlineBoxing and modified line handling logic in LineBox and VisualReg
updated filePathString initialization to handle null parent cases to improve robustness by avoiding potential NullPointerExceptions
removed the import of DocCollection from TopicStream . java to streamline dependencies and improve code clarity
replaced manual creation of ` ServletInputStream ` with a helper method and added a test for handling Windows - 1250 encoded multipart data to improve code maintainability and ensure proper handling of different character encodings in multipart
added a property " management . endpoints . web . exposure . include = * " to the AbstractCasEndpointTests class to enhance test configuration
added a validation check for the current graph in StatisticsControllerImpl . java to ensure the current graph is a dynamic graph to prevent runtime errors
[ micronaut ] add eagerinitfactory for @ scopeone annotation ( # 3550 )
added support for suppressExceptions in JsonPathExpression and updated related classes to enhance flexibility in handling exceptions during JSON path processing
removed duplicate calls to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline code by
updated command - line arguments in CLHSDB and HSDB in CLHSDB and HSDB to improve clarity and consistency in
refactored the configuration of FaultTolerantChunkProvider and removed redundant item listener registration in SimpleStepFactoryBean to streamline the code
[ beam - 10660 ] remove deprecate write . java and remove deprecate
updated ` ShadowAccessibilityManagerTest ` to use ` getSystemService ( AccessibilityManager ) ` instead of ` getAccessibilityManager ` to ensure
add group _ display _ id for usage statistics ( # 1188 )
replaced ` SourcePathResolver ` with ` SourcePathResolver ` across multiple files to simplify the class hierarchy and improve code clarity
refactor ` PostgreSQLEnumDataTypeHelper ` to use a new class ` PostgreSQLEnumDataTypeHelper ` to improve code organization and encapsulate enum value
updated the path in LogFileTests from " logpath / spring . log " to " logpath / spring . log " to ensure compatibility
updated variable names from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to clarify the
added error handling for unsupported operations in HiveMetaStoreClient to improve robustness by throwing an exception when attempting to drop index tables
added a conditional check for visibility in RecentsView . java to ensure scrolling behavior is only applied when the visibility is not visible
added a condition to set a specific highlighter for non - Windows operating systems to ensure proper syntax highlighting for non - Windows environments
added a method to add a optional local variable annotation in BugInstance . java and updated CrossSiteScripting . java to use it to enhance
replaced ` getRawPath ( ) . toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` filePathStrings
updated the method call from ` removeCaptureListener ( ) ` to ` removeCaptureListener ( list . stageListener ) ` to ensure the correct
changed the flag ` _ metaDataComplete ` from true to false in ` MetaData . java ` to ensure that the ` _ metaDataComplete ` is
modified the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for task removal in ` Recent
updated JsBundleGenrule to include " PLATFORM " and " RELEASE " properties in JsBundleGenrule . java and added corresponding
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test case
added tests for crlf new lines in comments and Javadoc in AddImportTest . java and modified AutodetectGeneralFormatStyle . java
added hubMode configuration to AbstractLiquibaseChangeLogMojo and overridden it in AbstractLiquibaseMojo to enable dynamic
removed unnecessary null check for item in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify the code and improve readability
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
refactor the way the setIndexerThreadPool method is invoked in LuceneTestCase . java to improve code readability and maintainability by redu
updated the format of the address string in GameCanvasImplementation . java to improve readability and maintainability of the code
refactor MapJobExecutionDao to use a new method ` copy ` for storing job executions to improve code clarity and maintainability by encapsulating
added a new test class ` DownloadTest . java ` to test the functionality of the ` Gdx ` application to verify the functionality of the
updated language normalization in multiple Java files to ensure consistent language handling across different formats
updated exception messages in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and accuracy of exception handling
added null check for selectedVersion before accessing its child elements in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple AntPathRequest matchers to the SecurityConfig class to enhance security configuration options for better user experience
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a check for the concrete class name before processing bean definitions in BeanDefinitionInjectProcessor . java to ensure that bean definitions are only processed for
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
[ openwebnet ] fix typo in openwebnet _ energyhandler and openwebnet _ thermoregulationhandler ( #
simplified socket event processing logic in AprEndpoint . java to improve code readability and maintainability
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
updated the getTranslation method to include rotation and scaling checks in DefaultRenderableSorter . java and Matrix4 . java to improve accuracy of translation calculations
added a new test method ` registerWrapperHandlerBeforePrimitive ` to the ` TypeHandlerRegistryTest ` class to address issue # 165 and
added logic to convert alternate color space images in PDSeparation . java to RGB images based on alternate color space to enhance image processing capabilities
updated API URL constants from ` CommonsApplication ` to ` BuildConfig ` across multiple files to improve flexibility and maintainability by using a
camel - 10663 : camel - main - add health check to make it easy to configure health check
added a null check for the block position before accessing its properties in EntityThornChakram . java to prevent potential NullPointerExceptions when accessing
added a new test method for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure correct functionality of
updated the ` FileFloatSource ` and ` TestFunctionQuery ` to use ` readerContext . docBase ` instead of ` offset ` to
removed the ID from the fields list in MongoRecordReader . java to clean up unused fields and improve code clarity
added disconnection methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes , and updated connection handling in Wifi
added validation for " AUTO _ INCREMENT " in ` Parser . java ` and created a new test in ` TestCompatibility . java ` to
added existing shared index informers to SharedIndexInformerFactory and updated test cases in SharedInformerFactoryTest to improve resource management and ensure compatibility with
cloudstack - 4892 : fix npe in templatemanagerimpl . savedetails ( )
updated ShadowBitmapFactory to use RobolectricBufferedImage instead of RobolectricBufferedImage to improve image handling and ensure proper initialization
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the codebase and encourage the use of updated constants
[ jbrules - 2892 ] move the data file to the examples / broker / examples / broker . drl file
corrected the spelling of " legendRight " to " legendTop " and " legendBottom " in PieChart . java to ensure
added a check to return early if the world transform is zero to optimize performance by avoiding unnecessary processing when the world transform is zero
added a new file ` MaryScriptCreator . java ` that implements a file for script generation to facilitate the management of script
nifi - 7353 : fix npe in httpservlet when the remote host be not specify .
refactor compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leak
corrected the spelling of " xlink : href " to " xlink : href " in ComponentDescription . java to ensure consistency in
camel - 15836 - camel - aws2 - s3 - stream - upload - timeout - checker - aws2 - s3 -
hbase - 25815 addendum addendum addendum
add null check for span in Slf4jSpanLogger and updated exception logging in DefaultTracer to enhance robustness by preventing potential NullPointerException
updated the addition of active options to trim leading or trailing whitespace to ensure that the active option is not leading or trailing whitespace
added functionality to enable or disable the wallpaper depth effect in DepthController . java to enhance wallpaper zoom behavior based on user - defined depth
removed assertion for success count in OverseerTest . java to simplify the test by eliminating unnecessary assertions
removed the ` getKernelVersion ( ) ` method and simplified the return value in ` LinuxFileStore . java ` to streamline the code
refactor ExecConstants class for improved clarity to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better user experience
added ScanUtil ' s setScanAttributeForPaging method to TableSnapshotResultIterator and updated related classes to utilize it to enhance scan
added a conditional check for ` lowRange ` before setting it to ensure that the ` lowRange ` value is within acceptable range to prevent potential
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and added debugCacheSize method in WriteCache to
cloudstack - 4892 : fix zoneid not be set in host response ( # 4892 )
[ zeppelin - 4892 ] fix json encoding in livy interpreter
replace filesystems . get ( zfpath ) with filesystems . remove ( zfpath , zfs ) in ZipFileSystemProvider . java to
rename ` obj ` to ` json ` in ` HttpRequestBuilder . java ` to improve clarity by using a more descriptive variable name
increased the wait duration from 2 seconds to 3 seconds in SoftAutoCommitTest . java to allow more time for the hard commit to
added exception handling for listener calls in SelenideLogger . java and updated test cases in SelenideLoggerTest . java to improve error
refactor multiple Dial - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated logging statements in SyncQueue . java to improve clarity and consistency to enhance code readability and maintainability
update ryuk version from 0.4 . 0 to 0.5 . 1 in RyukContainer . java to ensure compatibility with the
updated BootClassLoaderHook to use getAdditionalBootstrapPaths ( ) instead of getBootstrapPaths ( ) and added a new TestHook class for testing to
refactor path resolution in FMLClientLaunchProvider . java for improved clarity to enhance code readability and maintainability by reducing
[ hotfix ] [ yarn ] remove yarnclient from yarnitcase
fix localmapstatsprovider . getstatsofnodataIncludedmaps ( ) and add statsofnodataIncludedmaps ( ) method
deleted the AllTests . java file to the test class was deemed unnecessary or redundant
added Unicode character constants for non - breaking characters and zero - width characters in AbstractWordConverter . java to ensure proper handling of Unicode characters in
added a new test class ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest to verify that large stack trace invocations do not starve memory
updated method call from ` getResultMappingsForRowKey ( nestedResultMap ) ` to ` getResultMappingsForRowKey ( nestedResultMap )
added eventHandled flag to UIText . java to enable event processing for better user interaction
deleted the Controller . java file and updated Weldby . java to use WeldModule instead of Weldby to streamline the codebase
ruby flavor : do n ' t monitor capture group in empty check
added a protected variable ` liquibaseProLicenseKey ` and updated its usage in ` AbstractLiquibaseMojo ` to
mondrian : move setmemberreader ( ) to getmeasurehierarchymemberreader ( ) .
add option to generate debug info for track node source position
mondrian : fix documentation of formula for sparsesegmentcountthreshold
added friend paths handling in Kotlin compilation and Kotlin - related classes to enhance the integration with Kotlin ' s source path
added aliases for " BATK " , BRAHMI , BRAHMI , and MANDAIC " , and updated
refactor ExecutionCommand comparison to use equality checks for command equality to improve readability and maintainability of the execution command comparison logic
refactor Mockito class for improved readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated CSSParser to handle percentage values and improved error handling in CSSParser . java to enhance robustness and provide clearer error messages for
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ( ) ` to ` LocalIndexIT . java ` to ensure
replaced InstrumentationRegistry with ApplicationProvider in BaseAndroidTestCase and updated test assertions in BackupHelperTest and LanguageHelperTest to improve test
updated message messages in multiple activities to use localized strings instead of localized strings to improve user experience by providing clearer and more informative messages
updated condition checks in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java and RendererUtilitiesTests . java to improve
refactor KrakenStreamingAdapters to use ArrayNode instead of Iterator for improved type safety to enhance code readability and maintainability by
added a try - catch block around SQL execution in FileContentProvider . java to handle potential SQLiteException during upgrade from 24 - > 30 to
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
update ConvertJoinMapJoin to use onlineDataSize instead of data size calculations to improve accuracy of data size calculations for join operations
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource retrieval for the ` selectableItemBackground ` attribute to
added a ` assertAuthentication ` parameter to the ` SecurityMockMvcResultMatchers ` class and corresponding tests in ` SecurityMockMvcResultMatchersTests
vpc : setVpcid ( null ) return null instead of long
[ flink - 10955 ] [ test ] disable flink savepoint test on version 1.11
updated variable declarations from ` @ Cue . TextSizeType ` to ` @ Cue . TextSizeType ` across multiple files to ensure
updated loop iteration order and condition checks in Actor . java to ensure that actions are only processed if the index is within the valid range to prevent
updated the BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange to ensure compatibility with the Bitmex exchange implementation
add unit test for virtual metadata in relationshiprestrepositoryit
added null check for spatial in LodControl . java to prevent potential NullPointerExceptions when spatial is null
updated conditionals in ConditionalTokenFilter and FixedShingleFilter classes to ensure consistent behavior of token filtering across different filter implementations
refactor UnsafeStoreNode to use a single instance of UnsafeStoreNode and storeFieldNode to improve code readability and maintainability by redu
replace super . putAddress with io . putAddress in BoundedMemoryIO . java to improve code clarity and maintainability by using a
added a assertion to verify if the CAS event repository is empty to ensure that the CAS event repository is not empty before proceeding with further operations
removed the ' final ' keyword from the AuthenticationAttrProcessor class to clean up the code and improve readability
added null checks for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
added a method to set the typeface in CodenameOneTextPaint that throws an exception if the typeface cannot be set to ensure
added ` open ` methods to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFSFactoryTest `
removed the ` fail ` method from the ` WebDriverRunner ` class to indicate that the method should no longer be used and may be removed in
removed the size check from the else condition in SolrRequestParsers . java to simplify the condition for better readability and maintainability
replaced instances of ` resultObject . getValue ( ) ` with ` this . useConstructorMappings ` in ` DefaultResultSetHandler . java `
updated SQL schema reference in CreateTableGeneratorTest to include a quote to ensure compatibility with SQL syntax requirements
added filter mode handling in VectorizationContext to conditionally return null based on the filter mode to ensure correct handling of filter expressions based on the
updated the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . inheritConfig ` to improve type
updated the method call from ` getCatalogName ( ) ` to ` modifyDataTypeStatement ` in ` ModifyDataTypeChange . java ` to simplify
updated cluster name retrieval methods to use constants instead of hardcoded values to improve code readability and maintainability by centralizing cluster name management
refactor peer connection handling and logging in PeerGroup . java and ClientConnectionManager . java to improve error handling and provide more informative logging
added style assignment logic for various style types in Nano . java to ensure correct styling is applied based on specified styles
fix classcastexception in schematicreader and spongeschematicreader . fixup ( ) .
updated return statement from ` String ` to ` NoToStringOnStringType . java ` in ` NoToStringOnStringType . java ` to
replaced " - Xmx64m " with " - Xmx32m " in TestThreadFailure . java to ensure compatibility with the
replaced ` int ` with ` FailureContext ` in ` Invoker ` and added retry functionality in ` TestMethodWithDataProviderMethodWorker `
updated return value from ` tokens [ 0 ] ` to ` bandwidth [ ] ` in ` BucketStateIEEE754 . java ` to
added new methods ` selectPopUp ` , ` deselectPopUp ` , and ` captureNetworkTraffic ` in ` WebDriverBackedSel
refactor ` doPrintEntry ` method to use ` KeyUtil . getKeySize ( ) ` instead of ` boolean ` for better readability
[ hotfix ] [ test ] fix typo in taskasynccalltest
added validation checks for dialog and frame attributes in multiple classes to ensure proper state management and prevent illegal state exceptions for invalid components
changed the ` state ` field from private to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the ` state `
updated RedisObjectFactory to use RedisStandaloneConfiguration for sentinel and standalone configurations to enhance security by enforcing password management for Redis connections
add lastseendelaymessage property to the chatroomjabberimpl . java
added a new callback . NOOP to the notifyContent method call in ResponseNotifier . java to ensure that the callback is no longer called when
refactor share operation creation to utilize OperationsService for improved service management to enhance code modularity and maintainability by centralizing share operation
refactor Value and Property checks in BeanDefinitionInjectProcessor . java and add Jakarta Inject annotation in FieldPropertyInject . java to
fix issue where the plot do n ' t work on plop _ bedroCK .
added a check for NullPointerException in SmackIntegrationTestFramework to ensure proper handling of NullPointerExceptions during integration tests
added a boolean parameter to the ` readDirectory ` method in ` EXIFReader ` and modified related logic to include a ` readLinked `
added support for ENABLED _ LS mode in VersionTargetGraphMode and modified the executor assignment logic in VersionedTargetGraphCache to enhance dependency management for
added checks for video format in DLNAResource . java to ensure proper handling of video formats during parsing
refactor AutoMlClient and AutoMlClient classes to improve code organization and maintainability
added a method to load LwjglNativesLoader and modified the load method in LwjglNativesLoader to enable loading
added escaping support for CSV encapsulators in CSVRequestHandler to enhance security by allowing special characters in CSV encapsulators
updated grant type validation logic in ClientRegistrations and updated test cases in ClientRegistrationsTests to ensure correct handling of OAuth2 grant types and
updated exception handling to include the original cause and added a new method ` initCausePlumbing ` in ` SuppressedExceptions ` to improve error
added a new SQL query and updated iterator parameters in DerivedTableIT . java and ClientAggregatePlan . java to enhance data retrieval capabilities and
added support for RSquare calculation in RegressionEvaluator and corresponding test in StreamExpressionTest to ensure correct behavior of RSquare calculation in the
added request header handling to ThreadContextMDCServletFilter to enhance security by ensuring all relevant headers are included in the request
refactor ` SparkPlanGenerator ` to use ` MapWork ` instead of ` MapWork ` to improve code readability and maintainability by
refactor image retrieval logic in PdfJndiReport and add a new method to retrieve folder and country images in PdfSessionInformationsReport to
updated caching behavior in JwtIssuerReactiveAuthenticationManagerResolver and added unit tests in JwtIssuerAuthenticationManagerResolverTests to improve cache performance and ensure
updated resource access check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
added a boolean parameter to the ` get ` method in ` LLVMInteropType ` and updated its usage in ` CxxMethodsTest
removed unnecessary sleep duration from AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delays
added a new file KernCrash . java that implements a frame that displays a Kerning Crash text to demonstrate
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper failure handling during the test execution
added a method to retrieve network interface IP addresses based on a boolean flag to enhance functionality by allowing optional prefixing of network interfaces
[ zaxxer ] fix memory leak in the housekeeperpool
updated condition in GroupTransferService to use getSlaveAddress instead of clientAddress to ensure correct handling of slave offsets for autoSwitchHAConnection
refactor Assert class for improved clarity to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to verify the functionality of the ` MapDB ` class to ensure correct functionality of the
changed the type of ` results ` from ` CategoryItem ` to ` String ` in ` CategorizationFragment . java ` and added error
added checks for today and birth year before validating max age validation in ValidatorTest . java to ensure correct validation of max age validation based on date
added GrblLookups for alarm and error codes in GrblController . java to enhance error handling by processing specific error responses
updated the method to return a string for all apps home button label when nScreens is zero to improve user experience by providing a clear
removed the ` count ` parameter from the ` getTrades ` method signature in multiple classes to simplify the method signature by eliminating unnecessary
updated return values and improved spacing in ConsoleReader and MemoryHistory classes to enhance code readability and maintain consistency in formatting
removed the " . jdk " prefix from the file path in JavaBuild . java to simplify the path construction for better readability
replaced ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to improve code readability and
updated JFCModel constructor to accept a Consumer parameter for logging warnings to enhance logging capabilities by providing detailed warning messages
added a check for tolerance in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent illegal argument exceptions
added methods to create and drop views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance view management functionality and
added support for testing stability float , double , and doubles in NaNTest . java to ensure that tests do not run on unsupported
added a new class ` DesktopTaskbarUIController ` and implemented it in ` TaskbarManager ` to handle PC - related features in
updated ModItemAdapter and ModpackApi classes to implement TaskCountListener and update install button state accordingly to improve task management and ensure UI updates
refactor Files class to improve code organization to enhance maintainability and readability of the code
updated method signatures and variable declarations in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to improve code clarity and maintainability by
updated DomainAwareServicesManager interface to extend ServicesManager and removed the @ FunctionalInterface annotation to simplify the interface hierarchy and improve code clarity
add debug log to resourcepackloader . generatepackinfo ( )
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added grow ( ) and growY ( ) methods to Cell class to enhance functionality for better cell management
refactor bindings handling in DefaultInputHandler to use a generic Map < KeyStroke , ActionListener > instead of a Map to improve type safety and
http : / / issues . apache . org / jira / browse / amq - 4892 - handle potential exceptions during message receive
replaced ` longs ` and ` bytes ` with ` byte [ ] ` in ` MetricsMemoryTester . java ` and added memory
deleted the JobParametersPrototype . java file to the functionality was deemed unnecessary or redundant
added a securityEnabled parameter to the MappingsTable class and updated its usage in TableResolverImpl and TableResolverImpl to enhance security configuration handling
rename the case ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ EXPORTED _
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable the DUMP _
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` codecName ` to improve cl
[ java ] remove unnecessary conditional check in networkpublication
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` in ` BaseFormatter . java ` to ensure that
do n ' t use ssl when use ssl = false
added DOMOutputOptions to the buildDOMSubtree method in DOMConverter . java to enhance error handling by allowing XHTML output options
refactor Assert class for improved clarity to enhance maintainability and readability of the code
added a new parameter ` retain ` to the ` Event ` class and modified the ` send ` method to include topic and retained information to enhance
added a new test case name to the EventSerializationTest class to include a test case name to enhance test coverage by including the test case name
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix typo in function name
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
refactor SSL session timeout handling in AbstractSessionContext . java to improve concurrency management and error handling to enhance thread safety and maintainability of SSL
updated string formatting in AppModule and Watcher classes to improve readability and consistency to enhance code readability and maintainability
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to ensure compatibility with the latest SQL dialect standards
change log level from debug to trace in FirmwareUpdateService . java to provide more granular logging for firmware update handler availability
added unit tests for retrieving null dates and timestamps in GetObjectTest . java to ensure correct handling of null values in SQL queries
refactor string handling in StringSubject and subject classes to improve clarity and consistency in string representation to enhance code readability and maintainability by
added tests for multiple repository permissions in UserModelTest . java to ensure correct permission handling for multiple repositories in the git repository
added a new file Test7088020 . java that implements a static method invocation using MethodHandles to demonstrate the use of
replaced the method ` matchAudienceRestriction ` with a ` Set < String > ` for retrieving audience URIs to improve clarity and efficiency in
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code readability and maintainability by redu
replaced ` _ stderr ` with ` _ stderr ` in ` StdErrLog . java ` and added null checks for ` _ stderr `
added a new warning ` SEPARATION _ ORDER ` to the ` BasicEventSimulationEngine ` class to track the number of active stages in
updated the parameter name from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the correct table configuration is used for
updated the logic for executing the metric aggregation table in PhoenixHBaseAccessor and added a new property for normalization in UpgradeCatalog240
refactor SavepointV2 , FileStateHandle , and SavepointV2 classes to improve code organization and maintainability
added BluetoothClass functionality to ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of BluetoothClass functionality in BluetoothDevice
rename ` contains ` method to ` containsProfile ` across multiple files to improve clarity and consistency in method naming
[ feel ] fix npe in sumfunction . sum ( )
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to
updated coreNodeName assignment to use getCoreName ( ) instead of getNodeName ( ) to ensure consistent retrieval of core name from node properties
replaced multiple calls to ` updateRecentChats ( ) ` with ` updateBackpressure ( ) ` in ` ChatActivity . java `
renamed TaggerParserPosTagCompatibilityITest . java to improve clarity and consistency in naming conventions
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress code cs warnings related to
added a condition to check if the element type matches the lastBaseTag condition and created a new class T7005671 with generic types to
updated triangle calculations in DelaunayTriangulator and added a seed for DelaunayTriangulatorTest in Lwj
added @ Override annotation in multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern for clarity to improve readability and maintainability of the test code
refactor state management in StackOverflowCheckImpl to improve clarity and functionality to enhance code readability and maintainability by using more descriptive
added ShadowSQLiteDatabase and ShadowContentValues methods to multiple Robolectric classes to enhance testing capabilities for SQLite database and content values
replaced calls to ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas .
replaced ` bytesPerDim ` with ` ArrayUtil . bytearraycomparator ` in ` BKDWriter . java ` to utilize `
updated Locale . java to include script parameter and refactored default locale retrieval logic to improve flexibility and ensure default values are initialized correctly when
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha in PredictionRowView . java to accurately reflect the
corrected a typo in the log warning message regarding ConfigMap PropertySources to improve clarity and accuracy of logging
updated imports and method calls in DefaultConfigurationTestSuite . java and TokenRevocationEndpointTest . java to use UaaJunitSuiteRunner to
added trimming of whitespace in ` _ mimeTypes ` , ` _ excludedAgents ` , ` _ excludedPaths ` , and ` _ excludedPaths
updated the variable name from " WRITER " to " WRITER " in Response . java to ensure consistency in variable naming conventions
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the latest
replaced ` LooperExecutor ` with ` FutureTask ` in ` ViewCapture . java ` and modified ` captureViewPropertiesBg ` method
added support for retrieving styles in MaryGenericFeatureProcessors , Voice , InfoRequestHandler , and MaryHttpServer classes to enhance style retrieval functionality
added a check for the existence of the parent folder before creating it in GitBlit . java to ensure that the creation of a folder does
updated the bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " in the logging message
camel - 16462 : camel - jbpm - do n ' t use camel - jbpm - workitemhandler in camel - work
pdfbox - 4892 : remove unused static import , a suggest by valerybokov
updated classes to replace ` WorkModeToggleContainer ` and ` WorkFooterContainer ` with ` WorkFooterContainer ` to improve clarity and functionality
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor defaultjavaprettyprinter to use super type instead of reference reference
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder . java and modified replacement logic in StringQuery . java to improve clarity of error messages and
replaced ` evictionCounter ` with ` AtomicLong ` in ` ConcurrentLRUCache ` and updated related methods in ` FastLRUCache
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
remove unnecessary local host check for the intended destination to simplify the code and improve readability
added RuntimeEnvironment import and set data root and source root in MainFrame . java to ensure the application uses the correct database and source paths for
added a new method ` MarkedClientEnabled ` and ` MarkedServerEnabled ` to ` AdminClientBootstrapConfiguration ` and ` AdminServer
refactor TableEnvironment class to improve code organization to enhance maintainability and readability of the code
updated statement timeout handling in MapperBuilderAssistant and MappedStatement classes to improve performance by reducing unnecessary timeout settings
updated parameter names from ` hangingTscTimeout ` to ` options . getHangingTscTimeout ( ) ` across multiple transpilation
added GeoLocationRequest and GeoLocationResponse imports to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocation objects in the authentication plan
updated error messages in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl `
tika - 2852 -- add a test to verify that a excel document be not a hpsf
[ ggb - 1342 ] fix race condition in ggb script
added checks for channel input stream availability in TcpNioConnection . java to ensure proper handling of input stream availability before proceeding with operations
added validation for ` actual ` and ` expected ` values in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated the visibility logic in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR and
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 1343 fix for mow - 1343 , fix for mow - 1343
camel - 14284 : fix typo in errorOccuredinonexceptionroute javadoc
update astro discovery job to use fixed delay instead ofFixedRate to improve responsiveness and reduce log verbosity
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added @ Ignore annotation to JmsJdbcXALoadTest , JmsJdbcXATest , and JmsJdbcXATest classes to temporarily disable
updated import statements in GuiceFactoryTest . java for improved clarity to enhance code readability and maintainability by using more descriptive
added support for system features in RobolectricPackageManager and corresponding tests in RobolectricPackageManagerTest to enhance functionality by allowing
added a new constant ` PROP _ PATH _ POSTFIX ` and refactored the path property extraction logic in ` RCAFrameworkLoader `
[ hotfix ] [ runtime ] remove unnecessary logging of cancellation watch dog
added a null and empty check for enumerationValues in RADProperty . java to prevent potential NullPointerExceptions when enumerationValues is empty
refactor inline box handling in BoxBuilder and InlineBoxing classes to improve clarity and functionality to enhance code readability and maintainability by
added a new method ` collectAndSendTelemetryDataAsynch ` to ` collectAndSendTelemetryDataAsynch ` and modified the
updated database type handling in UpgradeCatalog260 . java to ensure correct column alteration based on the database type
updated error messages in BaseTableDataManager . java to include available space and write - permissions for index and temp resources directory to improve clarity
refactor DatasetUtilities class for improved readability to enhance maintainability and facilitate future updates
added a method to append the selector ID in the key to enhance the clarity of the key representation for better debugging
updated debug log message format in GouraudShadingContext . java for clarity to improve readability and maintain consistency in debug output
updated alpha constants and added functionality for managing taskbar visibility in the StashedHandleViewController and TaskbarDragLayerController classes to enhance the
removed multiple ECDH entries from KeyExchange . java to streamline the code by eliminating redundancy
added a check for ` JdbcConnection ` before executing the ` version ( ) ` query in ` CockroachDatabase . java ` to
fix test that fail on window
added methods to retrieve the media recording MIME type in CodenameOneImplementation , Display , and ImageIO classes to provide access to the media
make useshaders ( ) public , not confighandler . useshaders ( )
updated the " OR " condition in DruidAdapterIT . java to include " C = 13500 " instead of " C = 65
reformatted the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
pdfbox - 4892 : disable external - general - entity and - doctype - decl in xml parser , a suggest by valeryb
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a mechanism for retrieving client registration identifiers
updated the condition in UrlHelper to loop through the result string to improve readability and maintainability of the code
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class ` VarargsAndWildcard
refactor border handling by introducing a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encapsulating
change log level from info to debug in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance
updated the ` attachProjectToConnection ` method to accept ` HubRegisterResponse ` as a parameter to enhance functionality by allowing the registration process to
replaced direct calls to ` byte . toUnsignedInt ` with ` Byte . toUnsignedInt ` across multiple files to improve clarity and
updated the method call from ` getBytes ( ) ` to ` getBytes ( ) ` in ` OpenTracingTransactionProducer . java ` to ensure consistent
changed the default value of CachingBuildEngine from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to improve caching efficiency by
changed rangePannable from true to false in CategoryPlot . java to disable range pannability for better user experience
updated the handling of main and work mode switch conditions in AllAppsContainerView . java to ensure proper view management based on the current active page
changed access modifiers of ` glCaps ` , ` renderer ` , and ` FPSAnimator ` variables in ` Visualizer2TopComponent .
added exception handling for CancellationException in FunctionTest . java to improve robustness by gracefully handling cancellation exceptions
changed access modifiers of constructors in JarFileResource and JarResource classes from package - private to protected to allow subclasses to access these constructors for better
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to sleep for unseqMerging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseqMerging
updated currency assertions from AUD to BTC in BTCMarketsAdaptersTest . java to align with the latest trading standards
added @ Table annotation and modified test method names in HibernateDTOProjectionTest , JPADTOProjectionTest , and JPADTOProjectionTest
refactor Unicode class to improve code readability to enhance maintainability and facilitate future feature additions
updated ` installAutoInstance ` method to accept ` Service ` instead of ` ViewEntity ` and added logic to update Hive LLAP settings based
updated the method call from ` onComplete ( ) ` to ` onComplete ( ) ` in ` SendHeadersFirstPublisher . java ` to ensure proper
simplify aws module to use builder instead of getnull ( )
added handling for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error reporting for unsupported value types in RangePredicateEvaluatorFactory
renamed ` inner ` to ` javacProcessingEnvironment ` and updated method calls in ` TreeBackedProcessorWrapper . java ` to improve
removed unnecessary print statements for annotations in ParameterInfo . java to clean up the code and reduce unnecessary console output
added ac3 support and updated playback state handling in PlaybackController and VideoManager to enhance video processing capabilities and improve video processing efficiency
added a new map for the " value " value in the HTTP response to provide a JSON response with a null value for the response
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address potential issues with Commons DBCP and
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and implemented SQL query execution in ` DataNodeTemplate
refactor RTimerTree class for improved readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
fix issue # 358 by adjust gapX calculation in Letters . java and add a new test class TestIssue358 . java to
updated the initialization of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` in ` ClientConnector . java ` to improve clarity of thread
refactor ViewResultsFullVisualizer to use JScrollPane and JSplitPane fields instead of JScrollPane to improve UI layout management and enhance user
added descriptions for phone numbers in ScimUserEndpointDocs . java to enhance clarity and usability of user information in ScimUserEndpoint
added private constructors to DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance encapsulation and prevent instantiation of these classes
added null checks for responseMap and HTTP responseMap in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer diagnostics
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
added a check for ` DEFAULT _ PARALLEL ` in the ` parallel ` condition in ` XmlSuite . java ` to ensure that
test / java / util / log4j / testvmswaremanagertest / testvmswaremanagertest / testvm
added support for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to ensure proper handling of SCARD _ E
added SuppressSysoutChecks annotation to Test2BTerms . java to enhance test reliability by suppressing unnecessary output during execution
camel - 16462 : camel - bindy - bindy - bindy - bindy - bindy - bindy - bindy
change default value of ` useOwner ` and ` useTimeStamp ` from ` TRUE ` to ` FALSE ` in ` JabRefPreferences .
rename ` Runnable ` to ` ThrowingRunnable ` in ` runAndCheckException ` methods to improve clarity and consistency in exception handling
added null checks for viaString and viaContext and pathFromSeed in CrawlURI . java to improve robustness by preventing potential NullPointerException
camel - 14284 - camel - aws - sdb : fix camel - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval in Liquibase
increased the validity value from 7 to 90 in ProxyControl . java to allow for more flexibility in certificate validity settings
updated ThreadHandler to use smoothDelta and lastDeltaUpdate variables and adjusted delta calculation logic to improve performance and accuracy of frame calculations
added null checks for paginator in HttpBatchReader and updated HttpUrl parsing logic in HttpBatchReader , HttpScanBatchCreator , and TestPagination
added null check for CompactionInfo client in Worker . java and created a test for FindNextCompactRequest in TestWorker . java to ensure
updated fragment state saving logic in ShadowFragmentActivity and added unit tests in FragmentActivityTest to ensure proper handling of fragment state changes during state changes
reformatted code in BatchResourceFactoryBean . java for consistency to improve code readability and maintainability
added a test for parsing Android color references in ColorResourceLoaderTest . java to ensure correct parsing of Android color references in the ColorResourceLoader
added error handling for NoResultException in AbstractJPAQuery and created a new test for null results in AbstractStandardTest to improve robustness
refactor Community initialization to use a single owner variable instead of a hardcoded value to improve code readability and maintainability by reducing
updated depthEffect retrieval to use LawnchairApp instead of LawnchairApp to ensure compatibility with the Lawnchair application
removed unused import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
refactor updateTotalEnergyAverageUsage method to use the witness controller ' s head slot instead of the current time to simplify the method signature
added null checks for extensions and improved string representation in ExtensionStack . java to enhance robustness and provide clearer output when extensions are null
2 . x : fix inner error handling in rxjava3 . flatmap ( # 6022 )
added connection timeout configuration to MultiGetRequest and ControllerStarter classes to improve connection management and enhance error handling for timeout scenarios
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
rename ` NewModelTest ` to ` ModelTest ` in ` LwjglDebugStarter . java ` to clarify the
replaced multiple instances of ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` with ` SystemResourcesEdgeEventFetcher `
updated cache upload logic in CachingBuildEngine and added a test for output hash calculation in CachingBuildEngineTest to ensure correct behavior when
camel - 14284 : camel - netty - add support for bytebuffer in camel - netty
updated the method call from ` getOldName ( ) ` to ` getWarehouse . getQualifiedName ( ) ` in ` DDLTask . java `
improve error message when vertx instance be create with prefernativetransport option set to true to create domain sockets
fix ( core ) : move enumtypehandlerserializertest to typehandling . coretypes
refactor StreamEx class for improved readability to enhance maintainability and ease of understanding for future developers
updated query hint settings in SessionImpl . java to improve timeout handling for better performance
added a new file ` StaticLoggerBinder . java ` that implements the ` LoggerFactoryBinder ` interface to provide a centralized way to access
replaced duplicate calls to ` familyMap . put ( list ) ` with ` familyMap . put ( list ) ` in multiple classes to
added logic to check for new and old window orientation in TaskbarManager . java to ensure proper handling of window dimensions based on new and old
added import for Apache Commons Lang and modified the parsing of the occupant Nick to unescape XML to ensure proper handling of special characters in
updated the ` longStackPut ` method to remove the ` recid ` parameter and added a new test class ` Issue265Test ` to
added @ SuppressWarnings ( " SelfAssignment " ) and @ SuppressWarnings ( " BadShiftAmount " ) annotations to multiple Java files to suppress warnings related
[ jbrules - 2892 ] fix test failure in executionflowcontroltest . java
updated condition checks in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
updated the ` NBWriteServlet ` constructor and modified the ` TestWriteListener ` constructor to accept an ` unlimited ` boolean parameter to enhance
update total difficulty update method in BlockchainImpl . java and add a new test for invalid blocks in ImportLightTest . java to ensure
simplified the action assignment logic in DefaultPlaybackController . java to streamline the code for better readability and maintainability
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method signatures in SecurityServicesFeature . java to improve thread
added a null check for mUniformAlloc in AllAppsView . java and updated position calculation in AllAppsView . java to improve robustness
added a check for the presence of a colon in the key in HttpURLConnection . java to ensure proper handling of the presence of a colon in the
added PrincipalResolver annotation to the AuthenticationMetaDataPopulator in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve compatibility with Noggit ' s JSON library and enhance
added a method to remove trailing slashes from the StringBuilder to ensure proper handling of trailing slashes in the StringBuilder
added methods to handle empty patterns in PatternsMatcher to improve pattern matching functionality and ensure correctness through unit tests
updated error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of the error message
added potion event handling for WATER in BlockFire . java to improve gameplay mechanics by properly handling potion events in the
updated the formatting of the method call in CellLayout . java to improve code readability and maintain consistency in formatting
updated calculation of decreasePercent in ContractStateCapsule . java and modified usage calculation in ResourceProcessor . java to improve accuracy of decreasePercent calculation
refactor AsyncContentProducer and BlockingContentProducer to improve readiness checks and logging for readiness to enhance debugging capabilities and ensure proper handling of
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField parameter is not mandatory to prevent runtime
refactor AppleBundle to use Info . plist variable substitution for binary and product names to improve code clarity and maintainability by centralizing
fix turret bullets and damage ( # 1193 )
replaced direct calls to ` adaptOrder ` with ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` in ` KucoinAdapters . java
added a new file ` PreParseGrammarTest . java ` to test XML schema parsing functionality to verify the functionality of the XMLGrammarPreparser
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotation to multiple Java files to suppress warnings related to the " doclint :
added FontManager import and overridden font overrides in ExtendedEditText . java to enhance font management functionality in the user interface
added null check for user before returning an empty list in AuthorizeTag . java and created a test for unauthorized access in AuthorizeTagTests .
camel - 14263 : camel - cxf - add check for unsafe character in uri . thanks to franz for the patch
added a override method to set up data in JDBCGeometryTestSetup . java to ensure proper initialization of geometry data during test setup
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] do n ' t stop restore attempt for already cancelled task
add server . rmi . create property to the remotejmeterengineimpl
replaced String . join ( " , " , " ) with StringUtils . join ( anticompactRanges , " , " ) to
added display metrics to ParallelUniverse , ParallelUniverse , ShadowApplication , ResTableTest , and ResBundleTest classes to ensure accurate display
[ java ] add memberid to cluster and service heartbeat counter .
added version check for total thread allocation bytes in TestThreadMXBean . java to ensure compatibility with versions below 21 and above
updated the return statement in CustomExpression . java to handle NaN values and improved hash code generation to ensure proper handling of edge cases and prevent
updated debug logging statements and improved exception handling in AjaxListener . java to enhance logging clarity and ensure proper continuation state management
added " / authenticate " and " / authorized " routes in AuthenticityController . java and created corresponding tests in AuthenticityController .
added assertions to ensure nextNode is alive and removed redundant checks in SnippetTemplate . java to ensure proper state management and prevent potential null pointer exceptions
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
refactor comparison logic in DefaultTrackSelector for improved readability to enhance code clarity and maintainability by reducing redundancy
refactor RuntimeSerialization class to improve serialization efficiency to enhance performance and maintainability of the code
ggb - 1193 fix for image crop when crop be enable .
refactor UnitOfWorkFactory class for improved clarity to enhance maintainability and readability of the code
added a new property ` allAppsCellWidthPx ` to the ` DeviceProfile ` class and updated the cell size calculation in ` WidgetCell
tika - 3353 -- fix for tika - 3353 - add content - type parameter to mailcontenthandler
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of remote path to improve clarity and accuracy of file identification in the
added support for marking and resetting the input stream in Source . java to ensure proper handling of input streams when markSupported
added multiple @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
added a configuration property to control the visibility of error stack traces in the error page to enhance user experience by allowing users to control the visibility of
cloudstack - 4892 : log a warning when account deletion fails
removed unnecessary null checks for fremCall and dremCall in SPARCArithmeticLIRGenerator . java to streamline foreign call
[ drools - 5.0 ] add support for legacy drools - 5.x api
added a ` waitingForResult ` flag and modified the ` onRequestPurchaseResponse ` method in ` CodenameOneActivity . java `
increased DEFAULT _ TIMEOUT _ MILLIS from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for
updated import statements and modified parent style qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct resource name qualification
deleted multiple files related to MrefStat and MrefStat1 classes to streamline the codebase by eliminating unused components
updated scope handling in DependencyInsight and DependencyInsight classes to include a blank check for scope to ensure that the scope is not blank before
refactor error handling in BTCETradeServiceRaw to use constants for better readability and maintainability to improve code clarity and maintain
replaced JUnit 5 assertions with Hamcrest assertions in multiple test files to enhance readability and maintainability of the test code
added methods to retrieve payment request URLs in BitcoinURI and corresponding test cases in BitcoinURITest to enhance functionality and ensure correctness of payment
planner - 383 fix type argument in abstractfrompropertyvaluerangedescriptor
removed redundant call to setFolderInfo ( ) in FolderPagedView . java to streamline code by eliminating redundancy
do n ' t allocate jfr buffer if the lock owner can not release the lock .
refactor null value handling in BasicAbstractTuple to use a lambda expression for improved readability to enhance code clarity and maintainability by
refactor LintUtility to use InputResource for loading and loading Lint configurations to improve error handling and resource management for linter configuration loading
replaced ` updateBackgrounds ( ) ` with ` updatePaddings ( ) ` in ` AppsContainerView . java ` to
updated inventory patch parameters and positioning logic in Inventory . java to reflect the correct positioning of the player ' s selected inventory
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY events
added multiple @ PublicEvolving annotations to StateTtlConfig . java to improve performance by reducing unnecessary vol generation
added null checks for prepared statements in PreparedStatement and Array classes to ensure proper handling of null values in PreparedStatement operations
[ hotfix ] [ table - planner - blink ] add describe - all to archivetool . describe ( recordings )
replaced ` append0 ( " \ n " ) ` with ` append0 ( ' \ n ' ) ` in ` StringBuilder . java
added a new test method ` jsonSnapshot ` to handle JSON serialization in ` SiteSnapshotVariationsTest . java ` to ensure proper serialization and
updated import statements and added a new method ` removeTheTxAndBlock ` in ` BroadTest . java ` to improve test organization and
added support for enabling and disabling the PRIVACY _ MODE channel in AmcrestHandler and DahuaHandler to enable
removed NoSuchBuildTargetException from method signatures in BuckConfig and BuildRuleFactoryParams to simplify method signatures by eliminating unnecessary exception handling
refactor ChangeLogIterator constructor to accept a List < ChangeSetFilter > instead of a List < ChangeSetFilter > to improve flexibility
do n ' t print stack trace when a guest exception occur .
[ ec2 ] use system property instead of environment variable in ec2utils . getenvorsystemproperty
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for the class
refactor space handling in SpacesVisitor to use dropParentUntil for better readability to improve code clarity and maintainability by reducing
# 1343 - add copy ( boolean nearcache ) method to ebean . cache . copy ( true )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to indicate that the border is not visible on floated
changed the type of ` ProjectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` Project
replaced LIVE _ URI with PROD _ URI in KucoinExchange . java to improve clarity by using a more descriptive
refactor resource path handling in SpringResourceAccessor . java to improve clarity and consistency to enhance code readability and maintainability by standardizing
updated test cases in SmartHomeUnitsTest and added new test cases for microgramPerCubicMeter and MicrowattPerSquareCent
updated vertexMask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure vertexMask accurately reflects
deleted the Tls12SocketFactory . java file to the implementation is no longer needed for the current implementation
fix typo in texparserresult # getnewentry ( ) ( # 6394 )
added a check for the Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resource
added a check for FirebirdDatabase in DoubleType . java to return a specific database data type if it is an instance of FirebirdDatabase
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer . java ` to avoid potential NullPointerExceptions when `
add a new package - info . java file for unittest stubs to provide package - level documentation for the project
updated ping command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - use try - with - resources in ebeanserver _ savealltest . java
updated the initialization of TermScorer to conditionally set scoreMode to NONE based on scoreMode to ensure correct scoring behavior based on score mode
updated metricUpdates initialization to use a firstNonNull method for better null handling to improve code clarity and prevent potential NullPointerExceptions
cloudstack - 4892 : fix npe in uservmdaoimpl ( # 4892 )
refactor ObjectInspector retrieval and converter logic in DynamicPartitionPruner . java to improve code clarity and maintainability by centralizing target object
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` to facilitate the
added logic to set the row selection interval based on the selected row in ThrustCurveMotorSelectionPanel . java to ensure the table
replaced ` assertThrows ` with ` assertThrowsArrayStoreException ` and added a new method ` assertThrowsArrayStoreException ` to improve clarity
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added ` environmentName ` parameter and updated ` HttpClientBuilder ` and ` HttpClientConfiguration ` to use it to enhance flexibility in user agent management
refactor MemorySessionStore to use a computeIfAbsent method for session creation and modification to improve code readability and maintainability by encapsulating session
updated assertion messages in IssueTest . java and modified results collection in Reporter . java to improve clarity of test results and ensure distinct test instances
updated the initialization of ByteArrayDataSource to handle null content type to improve robustness by avoiding potential null pointer exceptions when the content type is not
move activationrequestdeny event to character system so that it can be send to character system .
added @ SuppressWarnings ( " serial " ) annotation and updated drawing logic in GraphApplet . java to improve code clarity and ensure proper rendering of
updated the ` updateTaskViewsSnapshotRadius ` method in ` RecentsView ` and ` TaskView ` classes to ensure the snapshot radius
added logging for swagger generation in StaticMicroserviceVersions . java to improve visibility into schema generation process for better debugging and monitoring
changed the return type of put methods from void to int in ArrayMap . java to enable method chaining for better usability
[ hotfix ] [ kafka ] fix kafka container startup timeout
http : / / issues . apache . org / jira / browse / amq - 4892 - retry message in defaultmqpush
refactor header addition logic in StaticServerHttpHeadersWriter to handle cases where multiple headers are added to improve header management by avoiding duplicate entries
added package access check for EventListener class loading in EventListenerList . java to enhance security by ensuring proper package access verification
added a custom adapter for the application list in the ApplicationsFragment and created a CustomAdapter class to enhance the application ' s functionality by allowing
updated the ` applyIcon ` method to include both ` iconView ` and ` task ` parameters in ` KeyboardQuickSwitchTaskView . java
refactor DownloadTracker , DownloadManager , and DownloadStateCursor to use try - with - resources for resource management to ensure proper closure of resources
[ scb - 1342 ] fix the bug in basesqmtosqlastastconverter ( # 2343 )
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursor
added a new ` Poller ` class and modified the handling of interruptions in ` DataInputStreamWithTimeout ` to improve responsiveness and
added ENABLED _ TS support in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
refactor UpgradeCatalog150 . java for improved clarity to enhance maintainability and readability of the code
rename ` networkparameters . testnet3 ` to ` networkparameters . oldtestnet ` in multiple files to improve clarity and consistency in
do n ' t update the object panel if there be only one geos element
updated OnboardingPrefs handling in AppsDividerView . java and added nullable annotation in ActivityContext . java to improve null safety and
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling in HdfsDirectory . java to improve performance and error handling during resource
pdfbox - 4892 : do n ' t set clip if there be no clipping path
simplified the local address assignment logic in SocketChannelImpl . java to simplify the code and improve readability by eliminating unnecessary synchronization
refactor row addition logic in TemplateTransformer and add a test for multi - value transformation in TestTemplateTransformer to improve code readability and ensure
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
replaced character array with a constant CHECK _ DIGIT _ STRING in Code39Reader and Code39Writer classes to improve code readability and
refactor conditional checks for executed types in NodeGenFactory . java to improve clarity and correctness of type handling in type generation
refactor stored field writing logic in IndexingChain . java to improve code readability and maintainability
fix intervalutils . parsefloorpartialtimestamp ( ) to truncate nanoseconds
removed unnecessary conditional check for postedRunnableStacktraces in LwjglCanvas . java to streamline code by eliminating unnecessary conditional
updated description in AbstractGCSProcessor . java for clarity to improve readability and maintainability of the documentation
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve test reliability by ensuring proper
updated directory initialization to use " single " instead of " null " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java
replaced ` size ( ) ` with ` filterCount ( ) ` in ` FaultTolerantChunkProcessor ` and updated related methods to
updated method visibility from ` FileWithTabs . java ` to ` \ t ` in ` FileWithTabs . java ` and refactored
replaced direct calls to ` assumeTrue ( ) ` with a direct call to ` assumeTrue ( ) ` in ` ConsoleReaderTest .
simplified conditional statements in GetFeedbackSessionsAction . java to improve code readability and maintainability
updated the calculation of newSelection in AllAppsView . java to correct the selection logic to ensure correct selection behavior in the application
bugfix # 25215 , do n ' t notify client on result availability
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java and modified connection handling in DbConnectionDialog . java
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` and updated method calls to use ` String . valueOf ` instead of `
refactor segment size calculation in DocumentsWriter and add a test for noDocsIndex in TestIndexWriter to improve accuracy of segment size calculation
added validation for dvert in ArmatureModifier . java to ensure dvert is not null before fetching its data to avoid potential null pointer
refactor FileDisplayActivity class to improve code organization to enhance maintainability and readability of the code
avoid filling in stack trace in applyspecialization
replaced the calculation of ` getLabelBounds ( ) . getHeight ( ) ` with ` getLineHeight ( ) ` in ` LabelPainter . java
updated RotationTouchHelper constructor to accept a DisplayHolder parameter instead of a static instance to improve flexibility by allowing the display holder to be
refactor string handling logic in AVA . java to improve clarity and maintainability to enhance code readability and ensure correct handling of quoted
updated the return value of ` Long . valueOf ( s , 16 ) ` to ` IdConversion . convertToLong ( s ) ` and added
added a new test method ` testSmall ` and modified the ` testBig ` method in ` ServerDatagramConnectorTest . java ` to
updated the method call from ` substring ( ) ` to ` substring ( ) [ 1 ] ` in ` TestSqlEntityProcessorDelta . java
refactor Cache class to improve cache management to enhance performance and maintainability of cache operations
updated variable names and scope assignment in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
updated the ` doBefore ` method signature and modified the indexing logic in ` TestUnifiedHighlighterTermVec . java ` to improve code
added a new test method ` addDataButton ` to ` GcodeTable ` to facilitate the functionality of the ` GcodeCommand
updated WEBAPP _ CONNECT _ TIMEOUT to use cfg . getConnectTimeout ( ) instead of WEBAPP _ CONNECT _ TIMEOUT to improve flexibility
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
refactor TestMediaService class for improved clarity to enhance maintainability and readability of the code
added a static constant for HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to facilit
add a new file ` MarketsPrintTool . java ` that implements the ` MarketsPrintTool . java ` class to print currency information
added hostname compliance validation and improved error handling in EndpointAddressInterceptor . java to ensure component names do not contain alphanumeric characters and dash characters
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` , ` HttpAccount ` , and `
refactor ServerSpanThreadBinder class for improved clarity to enhance maintainability and readability of the code
updated user pointer reference from ' userPointer ' to ' userData ' in BulletPhysics . java and BlockItemSystem . java to
corrected the spelling of " Location " to " the _ geom " and " number " in the Csv2Shape . java file to
updated gas cost parameter from callGasWord to gasCost in VM . java and removed unused imports in Program . java to streamline gas cost
refactor Parameters class for improved clarity to enhance maintainability and readability of the code
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ensure piePlot does not ignore null values
refactor bundle loading logic in ResourceBundle . java to improve clarity and efficiency to enhance code readability and maintainability by streamlining the
pdfbox - 4071 : fix typo , a suggest by valerybokov
[ freeplane ] do n ' t allow on - editing for freeplane and execute script
added a userModified flag to the LoginSamlAuthenticationProvider class to ensure the user is modified after authentication
added a new file TestSealedObjectNull . java that tests the behavior of SealedObject with null encryption to ensure that the null encryption
renamed the method ` onOpen ` to ` setResponse ` and replaced it with ` succeeded ` in ` ConnectPromise ` and ` WebSocketClient
added a static final Set for SNOW and updated tag checks in BlockEventListener . java to ensure compatibility with server version 1.16 . 5
added trade ID tracking and updated trade handling in CryptsyAdapters , CryptsyPublicTrade , and CryptsyPublicTrade classes to
added error handling for closing the synchronized MSC connection in HiveStreamingConnection to ensure proper resource management and avoid potential memory leaks
use random seed instead of system . currenttimemillis ( ) in case of invalid seed string
added new device profiles " Nexus 5 " to the device profiles list to enhance layout management for the Nexus device
2 . x : fix race condition in refcount . disconnectif ( ) ( # 6693 )
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve code clarity and maintainability by utilizing ReflectUtil
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in FormatToken and updated format token handling in FormatVisitor and TokenFormatter to
added checks for non - empty files and modified file existence checks in SaveTask . java and added new test cases in SaveAndLoadTaskTest
made several methods synchronized in MLogWriter . java to ensure thread safety during concurrent access to these methods
added support for MutableLogEvent in SmtpManager . java to enable serialization of Log4jLogEvent objects for enhanced logging functionality
changed the PADDING initialization from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure padding is non - negative for better
refactor ` createContext ( ) ` calls to ` createContext ( ) ` in multiple resource classes to streamline context creation by elimin
refactored exception handling logic in WorldBuilder and SootWorldBuilder to improve clarity and efficiency to enhance code readability and maintainability
updated test method calls in JUnitRunner . java and AndroidPlatformTarget . java to ensure compatibility with different operating systems and provide clearer error
change cache size from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a check for start in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory . java to ensure proper handling of
added error handling for keystore loading in ProvKeyManagerFactorySpi . java to ensure that a null KeyStore is used to avoid potential NullPointerExceptions when
updated the serverSocket initialization to use a local port instead of a hardcoded value to improve test reliability by allowing the server socket to be
ggb - 1343 fix for drag - and - drop - in - drag - and - drop
added conditional checks for OpenGL ARB compute , geometry , and tessellation shaders in GLRenderer . java to ensure compatibility
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
do n ' t save all notification if the project do n ' t exist ( # 4396 )
replaced InputStreamReader with IOUtils for encoding in ZQLJobManager to improve code readability and maintainability by centralizing character encoding handling
added a condition to check if args length is greater than zero before checking if it is an instance of Table to ensure that the argument is not
replaced hardcoded header names with a static final constant in FakeOSSOHeaderDecoder . java to improve code readability and maintainability
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should no longer be used in new development
removed debug log statements from DerbyDatabase . java to clean up the code and improve readability
ksession . fireallrules ( ) do n ' t call fireallrules ( ) if there be no object
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing unnecessary parallel operations
added a check for the existence of the Liquibase . hub . mode in HubUpdater . java to ensure that the Liquib
added constants for IBM J9 and Eclipse OpenJ9 VM versions in Constants . java and corresponding test cases in TestDDRExtension
updated logging messages in FontFamily . java and added a new DebugFonts . java file in FontFamily . java to improve clarity of
added HTTP version check in ALPNNegotiationTest and NegotiatingServerConnectionFactory to ensure compatibility with the latest HTTP version handling in the
added RateControl import and updated HTTP / 2 rate control settings in SettingsBodyParser and MaxConcurrentStreamsTest to enhance HTTP / 2 rate control
added a new file Test6741426 . java that implements a JTextField to paint a JTextField using NimbusLookAndFe
updated the error message in the CSRF token assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to improve clarity of error
added null checks for dbMGDPath and dbExtPath in HMSHandler . java to prevent potential NullPointerExceptions when accessing shared resources
added a package declaration for S3CopyObjectRequest in S3CopyObjectRequest . java to organize S3CopyObjectRequest . java
refactor setup methods to use viewThemeUtils for consistency to improve code readability and maintainability by using viewThemeUtils for theme management
updated error message in TemporaryFolderUsageTest to include " fileAtRoot " instead of " / temp1 " to improve clarity of error
replaced ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . OBJECT `
fix clientnetworkconfig . addaddress ( string , null ) to address ( null , null )
added a new property " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate validation for the
avoid to increment ` event . out ` conter for dropped event ( # 13593 )
added a condition to check if the menu is not visible before setting the mode in ModeToggleMenu . java to ensure the menu only displays when
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to verify the behavior of GC . finalizer
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
refactor address retrieval logic in BurningManService to handle custom addresses more effectively to improve clarity and maintainability of the compensation
refactor StringSubject class for improved readability to enhance maintainability and ease of understanding for future developers
added JUnit Ignore annotation to longData initialization in BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
renamed the method ` setMaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query replacement logic in RetweetActivity . java to replace " from : " with " @ " in SaveRecentQuery . java to ensure
removed conditional check for rebalance in SimulatorDiscoverer . java to streamline code by eliminating unnecessary conditional checks
added JSON serialization support for YubiKeyAccount in YubiKeyAccountRegistryEndpoint and corresponding tests in YubiKeyAccountRegistryEndpointTests to
updated shader program names from " post " and " ssao " to " tex " across multiple files to improve clarity and consistency in shader
added null checks for the ` cnt ` variable in ` PaintOnTopLoop ` and modified ` SideMenuBar ` and ` Toolbar `
refactor AbiWriterProtocol class for improved clarity to enhance maintainability and readability of the code
added a null check for subName before setting the caption in HierarchyBase . java to ensure caption is only set when subName is null
updated data flag from IMMOBILE to GRAVITY in EntityItem . java to enhance user experience by allowing gravity
added a null check for sim before accessing its properties in CustomExpression . java to prevent potential NullPointerExceptions when processing custom expressions
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ( ) ` to
added a new test method ` testCase4 ` to ` PostgresTest . java ` to validate the functionality of the ` countdown `
updated substring logic in SubtitleUtils . java and RemoteUtil . java to use a more descriptive variable name to improve code readability and
refactor line separator handling in DefaultJavaPrettyPrinter to use a constant for consistency to improve maintainability and readability of the code
truffle : use a volatile referencefieldupdater for singleimplementor snapshot
added null check for excludeSet before adding queries to the query list to avoid potential NullPointerExceptions when excludeing main queries
fix ( bridge ) : do n ' t add child thing to bridge ( # 3550 )
replaced ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` in ` Ktab . java `
added a check to return a file if it exists in ANGLELoader . java to ensure that the output file exists before proceeding with
added date parsing logic for date strings in DateConverter . java and a corresponding test in DateConverterTest . java to ensure proper handling of date
added a query method to retrieve a Post using a specific slug parameter in SpringDataJPALockTest and updated SpringDataJPALockTest
updated the ` canAccessDbaRecycleBin ` variable to ` canAccessDbaRecycleBin ` and improved error handling to
added a static factory for SimpleClientHttpRequestFactory in ClientRegistrations . java to enable dynamic connection and read timeout settings for HTTP requests
added assertions for file existence and name checks in SourceTest . java and Source . java to improve test coverage and ensure correctness of source file
removed the " graalvm . version " property from DefaultHomeFinder . java and updated its usage in GraalVMLocator . java to
added validity checks for access and refresh tokens in ClientAdminBootstrap . java to ensure proper handling of token validity for client connections
updated the return statement to use ` Options . v ( ) . android _ api _ version ( ) ` when ` androidAPIVersion ` is
replaced ` this . valueSeparator ` with ` this . valueSeparator ` in ` PropertyPlaceholderHelper . java ` to improve code readability
updated string formatting in Resources . java for clarity to improve readability and maintainability of the code
updated ZkSolrClientTest to track and manage the maximum number of collections in a concurrent environment to improve test reliability by ensuring collections are
added BigInteger class to simpleTypes in MongoMappingContext . java to enable handling of BigInteger data types in MongoDB mapping
added a condition to check if the button text is equal to the button text to enhance user experience by preventing toast notifications when the button text
added a condition to check if MEncoderNoOutOfSync is disabled in MEncoderVideo . java to ensure proper handling of MEncoder without unnecessary
change the default event loop count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more than 15 event loop
changed access modifiers of ` CountMin4 ` , ` CountMin4 ` , and ` IncrementiveWindowTinyLfuPolicy ` ,
added a method to retrieve the file float source in ExternalFileField and created a new test class ExternalFileFieldSortTest to enhance functionality for
updated error message from " Invalid URL " to " Connection error " in FetcherException to improve clarity of error reporting for better debugging
added source ID handling in OpenRocketSaver , RocketComponentSaver , and FlightDataBranchHandler classes to enhance event identification
changed the visibility of the check method from private to protected to allow subclasses to access and override the check method
added support for synchronization file operations in FileActivity to enhance user experience by notifying users when a file cannot be transferred
updated the URI generation logic in ThumbnailsCacheManager . java to use URLEncoder for file paths to ensure proper URL encoding for preview images and
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the client
updated the calculation of the total value in IntHashSet . java to correct the calculation of the value to ensure the total value accurately reflects
added a conditional check for locked before updating the entry in FeedRefreshUpdater to improve error handling and provide clearer logging for lock timeouts
refactor ACE handling logic in SolarisAclFileAttributeView . java and Misc . java to improve code readability and
replaced ArrayList with Edge array and refactored edge creation logic in LatLonTree . java to improve performance and readability of the code
added IOUtils import and improved resource management in ZkCLI . java to ensure proper resource cleanup and avoid potential memory leaks
fix a bug in the bibtex parser that do n ' t have a newline .
added strict mode handling and corresponding tests in Main . java and MainTest . java to ensure proper parsing of properties based on the " strict "
fix defaultvalidator . alwaysinvalidconstraint ( ) and customconstraintsvalidatorfactory . alwaysinvalidconstraint ( ) .
camel - 14284 : camel - http should use http4 instead of http
added a new method ` waitForThingsToLevelOut ( 30000 ) ` to the ` TestCloudPivotFacet ` class to provide a
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
updated ApplicationTest . java file to improve test coverage for application functionality
replaced string concatenation with StringBuffer for string concatenation to improve performance and readability of the code
replaced ` Type . find ` with ` RoboType ` across multiple files to standardize the usage of ` RoboType ` across
[ java ] return action . ABORT when dispatch complete .
added checks for ' cacheKey ' and ' cacheLookup ' in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor .
added a new file PutfieldError . java that demonstrates handling of incompatible class change errors to demonstrate the behavior of
updated the ` triggerConnect ` method to use ` addressTranslator . translate ( address ) ` instead of ` Collections . emptyList ( ) ` to
patch by jbellis ; review by jbellis for cassandra - 113
replaced instances of ` emptyList ( ) ` with ` Space . SINGLE _ SPACE ` in multiple Java files to improve code readability and maintain
updated the method call from ` encodedLength ( ) ` to ` encodedLength ( ) ` in ` Flyweight . java ` to ensure
refactor TestMethodResultMapBuilder class for improved clarity to enhance maintainability and readability of the code
added handling for Java . lang . Integer method in FindNullDeref . java to ensure proper handling of NumberFormatException , IllegalArgumentException , and RuntimeException
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return values in ` Utils . java ` to return zero and 1 instead of just , minutes , hours , and days to ensure consistent formatting
added type checks for DeepShortcutView and adjusted drawable assignment logic in FloatingIconView and FloatingIconView to ensure proper handling of deep
updated JwtClaimValidator to use ` Predicate < Object > ` instead of ` String ` and added a test for issuer URL matching to improve flex
updated method names from ` buyQuickRate ` to ` getSellQuickRate ` in multiple classes to improve clarity and consistency in naming con
[ net . sourceforge . cobertura . coveragedata . projectdata ] add coverageconfiguration .
added a check to ensure the event bus is not registered before registering the sticky to avoid potential NullPointerExceptions when the component is not registered
added asciiOnly flag to the normalize method in NormalizerBase . java to control the normalization behavior based on the length of a string to ensure
[ hotfix ] [ runtime ] fix check for migration permission in jobcoordinationservice
added error handling for SQL execution in SpillableGroupByIT and modified test cases in NoOpStatsCollectorIT to improve robustness of update
camel - 15836 : camel - cometd - producer - test should use junit4 instead of contexttestsupport
updated HTML attributes in HtmlTag . java to include a width OK in 4. 01 to ensure compatibility with the latest CSS features and prevent issues with
added a newline to the HTML output in HtmlCoreReport . java to improve HTML structure for better readability
updated the calculation of ramBytesUsed to include a null check for scores before calculating its size to ensure robustness by avoiding potential NullPointerExceptions
added a new ` StringHolder ` class and updated ` CustomTypeAdaptersTest . java ` to handle custom JSON serialization and deserialization of ` String
added a method to set extra data from mining parameters in MergeCoordinator and created a test for extra data handling in MergeCoordinatorTest to ensure
added a static final map for " parseFile " and " outFile " arguments in DependencyParser . java to allow dynamic configuration of the number of arguments
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
updated threshold handling in DefaultMigrationAddressComparator and added a new migration delay constant in MigrationRuleListener and MigrationRuleListener to improve code clarity
renamed the parameter ` part ` to ` partOrList ` in multiple classes to improve clarity and consistency in parameter naming
updated resource path from " responsive " to " twitterbootstrap " in TwitterBootstrapUtils . java to ensure correct loading of resources in the application
spanishtreebanklanguagepack : remove unused basiccategory ( ) method
hhh - 15836 - deprecate entityloader . loadbyuniquekey ( ) and entityloader . loadbyuniquekey ( )
hbase - 25820 regionserverflushtableproceduremanager and regionserversnapshotmanager do n ' t remove cancelled element from taskpool
added a check for zero width and height in PGraphicsJava2D . java to ensure proper sizing behavior when no dimensions are provided
make hikaribrary . fillpool ( ) more consistent with hikaribrary .
removed the ` assureMatchVersion ( ) ` method from multiple filter factories and added a null check for ` luceneMatchVersion ` to
[ micronaut ] add default method client for executable method . fix # 3353 ( # 3354 )
added a condition to check if the input is a COMMA character before matching the input to ensure that the match logic only executes when the input is
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a check for invalid payload length in WsFrameBase . java to ensure that the payload length is valid before proceeding with further operations
int - 1181 move publishsubscribingchannelparser to dispatcher instead of channel
hive - 25836 : optimize bootstrap dump to use long instead of string ( sergey shelukhin , review by
added digest updates for width and height in ImageProcessor . java to ensure proper processing of image dimensions in the digest
removed logging of the overlay version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to improve logging clarity and ensure
updated delayUntil calculation in FileSyncAdapter . java to increase synchronization delay based on current time to avoid too many automatic synchronizations to improve synchronization
updated the variable name from " afterConversionTime " to " afterConversionTime " in SegmentV1V2ToV3FormatConverterTest
refactor ` addPathToMTree ` method calls to use ` Path ` instead of ` fullPath ` to improve code readability and maintainability
updated URL handling in DefaultPackageScanClassResolver and added new test cases in DefaultPackageScanClassResolverTest to improve URL resolution accuracy and ensure
[ flink - 20650 ] [ table - planner - blink ] [ table - planner - blink ] add timestampextractorutils
added a new file ` SpringSecurityAuthenticationSource . java ` implementing the ` SpringSecurityAuthenticationSource ` class to provide access to authentication properties for
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest Android
replaced Dialogs . autoSuggestDialog with SimpleFormDialog for suggesting a custom filename to improve user experience by reducing unnecessary dialog
added a new test method ` testNewput ` in ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure
removed the collection name parameter from the stream method signature in MongoTemplate . java to simplify the method signature and improve code readability
updated zoom factor calculation and improved rounding logic in MapOverviewImageMouseHandler . java to ensure consistent zoom behavior across different screen sizes
added similarity functionality to KNearestNeighborClassifier and updated related classes to use LMDirichletSimilarity to enhance the classification algorithm ' s
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query initialization and improve code clarity
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity
updated package - info . java files for improved documentation clarity to enhance code readability and maintainability
added mtu request functionality to ShadowBluetoothGattTest and ShadowBluetoothGatt to enable testing of mtu changes in Bluetooth
refactor servlet input stream creation into a separate method ` createServletOutputStream ` to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide clearer logging for unsatisfied
replaced HashMap with ConcurrentHashMap in ChannelProcessingManager to improve thread safety for concurrent access
corrected a typo in the error message from " u309 " to " u309 " to improve clarity and accuracy of
corrected the spelling of " size " and " size " in JDBCTypeMapping . java and JDBCTypeMappingTest . java to ensure
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player operations
refactor accessibility handling in TerminalView to utilize regex patterns for better performance to improve code readability and maintainability by leveraging
updated commandBehavior and behavior conditions to include side navigation case to ensure consistent handling of side navigation commands in the menu system
replaced Disposable with Disposable in PoloniexManualExample . java and added disconnect handling in WampStreamingService . java to
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and improved error messaging in UpdateSettingForEnergy
renamed ` url1 ` to ` javaUrl ` and added ` protocol ` property in ` UrlBean ` to improve clarity and functionality
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to enable access and modification of the namespace prefix reference
added a constant for ONE _ MINUTE _ MILLIS and refactored date comparison logic in TestRange . java to improve code readability and
added JettySolrRunner checks and security status verification in BasicAuthIntegrationTest . java and ZkStateReader . java to ensure proper authentication
added a ` PriceFeed ` parameter to the constructor of ` TradesChartsViewModel ` to set currency code based on user preferences to
updated configuration handling in PhoenixHBaseLoaderIT , PhoenixHBaseStorerIT , and Phoenix
refactor variable names and logic in NativeString . java for clarity and consistency to improve code readability and maintainability by using more d
added a storage manager for file downloads in FileDownloader . java to enable file download functionality for improved user experience
updated the file channel initialization in MappedRawLog . java to use a randomAccessFile and set the length of the log length to ensure the file
added a method ` checkIfRegistryRunning ` to check if a registry is running and a retry mechanism in ` FileUtils ` to improve error handling and
removed unused imports and added startLoading method in Quick3dMain and TextureTest classes to streamline the loading process and improve code clarity
added @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " javadoc " ) annotations in multiple Java files to suppress unchecked warnings and improve
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 4484 allow transaction isolation level to be set to transaction _ READ _ COMMITTED or TRANSACTION _ SERIALIZABLE
added transaction attribute handling and exception handling in multiple classes to improve transaction management and error handling during processing
replaced ` CasClient ` with ` DirectCasClient ` and refactored the security interceptor implementation in ` CasManagementSecurityInterceptor `
added functionality to manage the addition of a category in the ListFragment and added a new navigation drawer in NavigationDrawerFragment to improve user experience by
rename method ` cancel ` to ` cancelMatchingOperation ` and update method names from ` observeDownloadWorkerState ` to ` observeWorkerState `
pdfbox - 4892 : avoid possible classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge to use TypedValue . COMPLEX _ UNIT _ PX instead of font size Dp
added validation check before setting the variable ' tmpFact ' in ConstantAnalysis . java to ensure that the fact is valid before processing to avoid potential
refactor DistBuildTargetGraphCodec , ConvertingPipeline , and VisibilityPatternParser classes to improve code organization and maintainability
replaced the return statement with a new ArrayList instance to ensure that the returned list is immutable and avoids potential null pointer exceptions
removed unnecessary lock service usage and simplified method calls in Liquibase . java to streamline code and improve readability by eliminating
added a method to set the ` revision ` in ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` to set it to null to
added formatting for foreign key and index names in TableRetriever . java to improve readability of foreign key and index names for better debugging
camel - 15836 - camel - aws2 - s3 : add unit test for minimal configuration
removed the import of TradeHistoryParamCurrencyPair and added a new method ` getBitstampUserTransactions ` in ` BitstampAccountServiceRaw
added exception handling for retrieving the component instance in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
change the return type of the push method from void to boolean in multiple classes to enable or disable push functionality based on remote settings
refactor LegacyAddressTest to use BufferedReader for parsing and comparison data to improve readability and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor push notification setup and content handling in NotificationsActivity and NotificationsActivity to improve code readability and maintainability by encapsulating push
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4545 : close channel
updated variable names and methods in LdapPasswordPolicyEnforcer . java for consistency and clarity to improve code readability and maintain consistency in naming con
refactor DefaultAnnotationEngine and Stubber classes for consistency to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 1344 : add timezone support to about datatransfer to nifi - web - api - infra - about
updated the condition for splitting the boundaries in Splitter . java and StorageService . java to improve code clarity and ensure boundaries are only processed
removed exception handling for IOException and ClassNotFoundException in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary try - catch
removed unnecessary synchronization around the ` activeCircuits ` collection in ` CircuitManagerImpl ` and ` ConnectionCacheImpl ` classes to streamline the
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
[ hotfix ] [ runtime ] fix classcastexception in eventdrivensourcerunner
replaced error logging with info logging in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
ggb - 1193 fix for geogebra function freehand function .
updated the parameter name from ' source ' to ' source ' in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve clarity and
refactor connection handling in SchemaCrawlerMain and introduce a execute method in Executable to improve resource management and ensure proper closure of the database connection
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3494 : add support
corrected the spelling of " counter " in IllegalStateException messages to improve clarity and consistency in error reporting
updated audio stop logic in MediaManager . java and adjusted audio index calculation in MediaManager . java to improve audio handling logic and ensure correct index
removed conditional check for debug logging in HttpConnection . java to simplify logging output for better readability and performance
added a ` isTransient ` method to ` JpaPersistentPropertyImpl ` and a corresponding unit test in ` JpaPersistentPropertyImplUnit
updated assertions in UpgradeResourceProviderTest to compare " HDP - 2.2 . 0 " to " HDP - 2.2 .
trufflevm : use get ( ) instead of symbol . get ( ) instead of symbol . get ( )
changed access modifier of ` isBinaryType ` method from private to public in ` SampleResult . java ` and updated logging statements in ` Proxy
updated the configuration key from TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE to TEZ _ D
[ jdt ] remove unused findproblem ( ) method from jdt editor
changed the default value of ` DEFAULT _ OFFHEAP ` from ` DEFAULT _ OFFHEAP ` to ` DEFAULT ` in multiple classes to
updated line separator handling in TableWriterTest . java to use a dynamic line separator to improve flexibility and maintainability of the test code
refactor DebugHelper class for improved debugging to enhance debugging capabilities and performance
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and its implementation to prevent unnecessary processing when the texture is already owns
added LDAP authentication properties in HiveConf . java to enhance LDAP support in the application
chore ( deps ) : upgrade datacatalog - java to 1.3 . 0 and update documentation
refactor input method handling in DetailActivity to improve readability and maintainability of the code
added a new test method ` convert _ to _ map _ of _ primitive _ to _ object ` to the ` DataTableTypeRegistryTableConverter
increased the size of the file system and modified the size calculation in TestFileSystem . java to improve memory management and accommodate larger
updated error message formatting in ContentTypeManager . java for clarity to improve readability and maintainability of the error message
added a new abstract method ` dropSequences ` to multiple database classes to ensure proper handling of migration errors during database operations
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
change variable name from ' f ' to ' f ' in the createField method call to improve code clarity and maintainability by using a
bug fix : graph icon be not show on the root node if it ' s active .
added a test for findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject method in MongoTemplateTests . java to ensure that the findOne method
hbase - 22387 fix a bug in hfileblockindex , hfileblockindex , hfileblockindex , and hfile
added ` recordLaunch ` method to ` Launcher ` and ` Stats ` classes , and modified intent handling in ` Launcher ` , and
added drawing and disposal functionality for the graphics in JavaSEPort . java to ensure proper resource management and prevent memory leaks
update instructorfeedbackresultspagedata to use bundle . getteammembersfromroster ( ) instead of getteammembersfromroster
added a check for zero ID in the Inventory class and created a test for ID generation in the Inventory class to ensure that zero inventory IDs are
added a condition to check if the configuration is found before proceeding to avoid potential errors when the configuration is not found
added a new parameter ` returnType ` and ` returnTypeAnnotations ` to the ` ReloadableJavaParserVisitor ` and ` JavaPrinter ` classes to
updated TileMapRenderer and TiledLoader to handle null blended tiles to improve robustness by avoiding potential NullPointerExceptions when loading tiles
removed unused ` sunClasses ` and ` value ` from the ` @ Classes ` annotation in ` Probe . java ` to streamline the
fix arrayindexoutofboundsexception in geotools2d . getafa ( area )
refactor lockOnSync assignment and update throttleRate assignment in Throttler . java to improve clarity and maintainability of the code
pipe : fix eventbus . modifyspeed ( ) and pipeBehaviouremzuli . modifyspeed ( ) .
updated the initialization of ZkController in ZkControllerTest . java to simplify the initialization of ZkController
added a new test method ` passcode _ with _ client _ parameters ` to the ` TokenMvcMockTests ` class to verify the correct
added imports for LengthFilter and LengthFilter and LengthFilter , and LengthFilter in TestRandomChains . java to ensure proper handling of broken offsets
remove unused import of org . junit . Ignore in RandomPlaneTest . java to clean up the code and reduce unnecessary dependencies
llvm : use int . tosignedlong instead of int . puti1 and int . geti64 in llvm :
replaced the native method ` btCollisionObject ` with ` btCollisionObject . getInstance ( ) ` in ` btCollisionObject
added a new constant ` BUILD _ COPYRIGHT ` and updated copyright year handling in ` AboutDialog ` and ` AboutDialog ` to
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl # getdistributedobjects ( # 2
updated component and inertia values in FinSet . java and MassCalculatorTest . java to improve clarity of component and inertia values
updated variable names from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve clarity and consistency
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and updated method signature in CreateAlignedTimeSeriesPlan . java to
burningman : do n ' t allow deposit and delayed payout tx to be activate
updated JSON parsing in JsonLoaderTest to use a JSON object instead of a hardcoded string to improve code clarity and ensure proper exception handling
updated the capacity check from 1 to 0x40000000 in ObjectSet . java to accommodate larger table sizes to ensure that the required
updated import statements and added null check for dataScale in ColumnSnapshotGenerator . java to improve code clarity and prevent potential NullPointerExceptions
removed @ AddToRuleKey annotations from the ` xctool ` and ` xctoolStutterTimeout ` fields in ` Apple
added security exception handling and improved content limit calculation in FileHelper and TextHelper classes to enhance robustness and prevent potential security issues during query
added a new constant ` StyleWithMultipleAttributes ` in ` R . java ` and modified test cases in ` ShadowThemeTest . java `
updated sheet name check in HSSFWorkbook and added new sheet creation methods in TestHSSFWorkbook to ensure correct handling of sheet names
changed the method from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is used for the account account
added a null check for replyHandler in DefaultEventBus and updated path resolution in DefaultPlatformManager to improve robustness by preventing potential NullPointerException
added support for " COLLATE " collation in MariaDbmsType and DbmsType classes to support database collation functionality in the database
added a default method ` whenType ` to the ` Tree ` class that returns an ` Optional ` instance based on type checking to enable safer type retrieval and reduce the risk of ClassCastException when working with tree structures
refactor user view destination handling in ItemLauncher . java to improve code readability and maintainability by centralizing user view destination logic
updated response handling in FeedREST to use temporaryRedirect instead of OK to improve user experience by providing a redirect response for public URLs
[ hotfix ] [ kinesis ] add serialization check for non - serializable deserializer
( chore ) camel - johnzon : fix typo in javadoc
added a try - finally block to ensure proper resource management and avoid potential memory leaks during leader election tests
renamed ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify the purpose
added a protected method ` read ` to the ` ProxyHandler ` class to improve code readability and maintainability by centralizing the read method
replaced BufferUtil . allocate with ByteBuffer . allocate in ABCase1 _ 2 . java to streamline buffer allocation process by eliminating
updated the ` prepareStreamsToUpload ` method to return a boolean instead of throwing an exception for unknown actions to improve code clarity and ensure
updated order comparison logic in AbstractConfigLoader and TestMicroserviceConfigLoader to use Integer . MAX _ VALUE instead of Integer . MAX _ VALUE
added a new class PicOfDayAppWidget to handle pic - of - day app widgets to enhance the application ' s functionality by integrating
cloudstack - 4892 : fix invalid offering uuid for internallbvm service offering
replaced ` RelOptUtil . splitJoinCondition ` with ` HiveRelOptUtil . splitHiveJoinCondition ` and refactored
added @ Deprecated annotations to multiple classes to signal that these classes are outdated and should not be used in new development
added user and password options for remote JMX access in NodeToolCmd . java to enhance security by allowing users to access remote JMX
removed unnecessary initialization of BytesRef in Stemmer . java to streamline the code and improve readability
updated the logic for handling multiple widgets in AppsCustomizePagedView . java to ensure proper icon caching based on the number of widgets
do n ' t show euclidian3d view if there be a 3d view
updated the rotation positioning logic in GcodeRenderer . java to ensure the rotation ' s y coordinate is within a valid range to prevent potential
added support for setting the workspace directory in DAEMON and updated TerminalClient to set the workspace directory to enhance user control over the workspace
updated file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure the test uses the
updated ScimUtilsTest to use JUnit 5 ' s PollutionPreventionExtension and added JUnit 5 assertions to enhance test reliability
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAttribute ` to improve
updated assertions in HibernateIT to use assertTrueEventually for clearing cache hit counts to improve test reliability by ensuring cache hit counts
refactor EventBusHook class for improved event handling to enhance code readability and maintainability
refactor MultiPaintEventTest class for improved readability to enhance maintainability and facilitate future updates
changed the variable ` mNewScale ` from ` final ` to ` final ` in ` WorkspaceStateTransitionAnimation . java ` to ensure the
updated synchronization logic in SyncFactory . java to improve performance and reliability of synchronization operations
added uniqueKey field handling in LukeRequestHandler to ensure uniqueKey is only added when the field is the same as the uniqueKey
added support for round border color in the border editor and updated color handling in EditableResources and EditableResources classes to allow customization of
add nopartofcompilation ( ) method to binaryparser .
[ hotfix ] [ test ] rename ` SlotPoolImpl ` to ` SlotPool ` in ` DefaultSchedulerBatchSchedulingTest . java `
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified return values in PingPong
added Toolbar . OnMenuItemClickListener to RecentChatFragment and modified RecentChatFragment to implement Toolbar functionality to enhance user experience by
renamed ` InfoDropTarget ` to ` UninstallDropTarget ` and updated related methods in ` InfoDropTarget ` , ` Uninstall
replaced ` getTail ( ) ` with ` peek ( ) ` in multiple classes to improve clarity and consistency in scope management
updated API URL and EVENTLOG _ WIKI constants from " testwiki " to " commons . wikimedia . org "
refactor index management by introducing a new method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability
replaced calls to ` Collections . sort ` with ` Collections . sort ` across multiple classes to streamline sorting logic by eliminating unnecessary
added support for DateTimePatterns in FormatData _ hr _ HR . java to enhance date and time representation in the application
added a call to clear the focus of the clickedView in DetailFragment . java to ensure the UI reflects the current view ' s focus
replaced notifyDataSetChanged ( ) with setSelection ( position ) and modified language selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to
updated time zone names from " WSST " to " WSDT " across multiple files to ensure accurate representation of time zone in the application
added native methods to register global , weak , and access fields via handle in FastGetField . java to improve field access handling and ensure proper
added null handling for UNION and NullNode types in ReflectData . java and updated test cases in TestReflect . java to ensure default values are
increased the timeout value from 300 to 1000 in the SedaBlockWhenFullTest . java file to allow more time for the
added null check before remapping RClass in ResourceMerger . java to avoid potential NullPointerException when resourcePath . getRClass ( ) is null
added constructors to HapiFhirDerbyDialect , HapiFhirMariaDBDialect , HapiFhirMySQL
camel - 14284 : camel - http - add a connection close header to the endpoint . thanks to franz for the patch
increased the timeout duration from 6 seconds to 12 seconds in BasicDistributedZkTest . java to allow more time for distributed operations
added a test to verify the count of tickets based on final _ price _ cts and final _ price _ cts to ensure that the
refactor Parser class for improved readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
use getchildren ( ) instead of getfirstelementchild ( ) . getchildren ( )
planner - 1343 add an enum to the look - up manager if the object be an enum .
updated metaPortStart and dataPortStart values in ClusterEnvBase . java and added waitingToShutDown method in ClusterNode . java
changed log level from warn to info in ELContextCleaner . java to provide more detailed logging for bean deletion issues
added a default content type for " application / octet - stream " in WebdavEntry . java to ensure the correct content type is used for
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a new test class ` LazyTraceThreadPoolTask
added distance comparison logic to skip distance calculations in DistanceOp . java to ensure the distance algorithm does not exceed the specified minimum distance
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity by using a more descriptive
replaced the ` next ( ) ` method with ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to streamline
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated the ` VectorUtil ` to use it
added methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation to ensure polygons contain at least 3 points to prevent IllegalArgumentException and ensure localVertices is initialized correctly
replaced instances of ` new ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to utilize
added a null check for the coeff variable in GeoImplicitCurve . java to avoid potential NullPointerException when coeff is null
updated the handling of Unicode names in ExternalNameRecord and added a new test for bug 47384 to improve handling of Unicode names and ensure
updated the description for JMS Destination type in AbstractJMSProcessor . java to correct the spelling of ' QUEUE ' or ' TOPIC '
added a boolean flag to exclude the " username " and " password " prompts in LoginInfoEndpoint . java and implemented tests in LoginInfo
replaced ` remove ` method with ` removeIf ` for listener removal to improve code readability and maintainability by using a lambda expression
added a switch statement for the actionToggleSpin in PieChartActivity to enable the spin functionality for the chart to enhance user experience by
fix citrixresourcebase . copy _ vhd _ to _ secondarystorage return null
hbase - 16462 fix npe in hmaster . getstate ( )
updated import statements and added resize method in AndroidInput . java to improve code clarity and maintainability by consolidating resize logic into a dedicated
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the ` @ VisibleForTesting ` annotation to enhance functionality
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to indicate that the test is always failing and blocking PRs to ensure
fix positioning of entity item in subtileHopperhock .
added a dialog for authentication in the SsoWebViewClient to enhance user experience by providing a clearer authentication process
refactor TestStressIndexing2 to improve document deletion and deletion logic to enhance test reliability and maintainability by ensuring correct handling of document
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkaproducitcase
replaced instances of ` get ( j ) ` with ` computeIfAbsent ( j ) ` in ` ResTable . java ` to improve efficiency
added DeserializationFeature to accept single values as arrays in DefaultEntityMapper to enhance data serialization efficiency by allowing single values as arrays
updated Localization update messages in VersionChangeLogs . java to include additional localization options to enhance clarity of localization information for better user experience
[ netbeans - 4892 ] add cl . app . categories to configurationlogic
refactor visitExpressionInstanceOf method to accept RelExpressionInstanceOfContext instead of ExpressionInstanceNode to improve clarity and functionality of expression handling
nifi - 1344 : add content - type attribute to gethttp to allow flowfile to be store by the http content - type
updated the ` toProvenance ` method to use ` historyEntry . toProvenance ( ) ` instead of creating a new ` ResourceHistory
renamed ` exitButton ` to ` doneButton ` and added a ` searchable ` option in ` SearchBookContentsActivity ` to improve cl
refactor NatsConfiguration class for improved clarity to enhance maintainability and readability of the code
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` parameter and modified the ` invalidateStalePartitions
make viewresultsfullvisualizer more robust to reduce memory usage
replaced ` ic _ group ` with ` ic _ chat _ bubble ` in multiple adapter classes to reflect the new chat functionality instead of a
replaced direct calls to ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java
updated method names from ` shouldCreateMock ` to ` _ create _ mock _ when _ constructor _ is _ private ` and ` should _
added a constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and modified the generateDetectionConfig method visibility in YamlDetectionConfigTranslator to
increased the timeout from 10 seconds to 30 seconds in awaiter calls to allow more time for the phaser to complete before proceeding
removed the ` BuildSlaveFinishedStatusEvent ` class and updated ` DistBuildRunCommand ` and ` DistBuildSlaveEventBusListener ` to
cloudstack - 4892 : make vmware template uuid string utf - 8
added a test method to deposit workspace items without a workflow test to ensure proper depositing of workspace items without a workflow test
added distinct method to classpathFile handling in ClassLoaderSupportImpl . java to ensure unique classpath files are processed
removed the isBoxedPrimitive method from Unbox . java to streamline the code by eliminating unnecessary complexity
refactor argument handling in SpecificCompilerTool and add a test for ordering of flags in TestSpecificCompilerTool to improve code clarity and ensure
added a null check for the external table before deleting the partition path in HiveMetaStore . java and updated test cases in TestHiveMeta
hive - 11818 : add more info to the error message ( jesus camacho rodriguez , review
added a try - catch block around the dismissDialog method in Launcher . java to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use TaskWrapper for service and component identifiers instead of hardcoded strings to improve code readability and maintainability by
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to track the current configuration information
fix ( log ) : call clearentries ( ) in the log tree ( # 3353 )
integrate behavior of be [ in | out ] putshutdown ( ) with volatile flag and previous implementation .
refactor SetNullableGenerator class for improved clarity to enhance maintainability and readability of the code
( chore ) camel - report - incident : add support for servlet transport
refactor NettyRoutingFilter to use a wildcard import and simplify content type handling in FormIntegrationTests to improve code readability and maintainability
added a new ` hello ` method to multiple service classes and updated the ` ClassUtils ` to include a ` bodyParamName ` parameter to enhance API
replaced ` lifecycleListeners ` with ` LifecycleListener ` in ` Lwjgl3Application ` and updated the ` update ` method to
updated the FG _ FK color from 90 to 200 to improve the visibility of the FG _ FK color in the user interface
disable mp3 audio format in soundmanager
simonstewart : use systemkeyspace . getbuiltindexes instead of systemkeyspace . getbuiltindexes
pmd : add version information to pmd plugin .
[ hotfix ] [ test ] fix npe in customserializationitcase
refactor MediaFormatUtil class to improve code organization to enhance maintainability and readability of the code
added a method to check if a cell is editable in the GeneralTab class to provide a default implementation of the isCellEditable method
added a new method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and ` UnusedDependenciesFinderFactory ` to
added a static static int tmpCount and updated the value of vscales in VocalTractModifier and VocalTractScalingProcessor to
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat to ensure consistent usage of BaseScalarUdfTest across multiple files
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for UaaAuthenticationDetails instances
update testSkeletoncontrolrefresh to use jme3 - animComposer instead of jme3 - anim
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods accordingly to improve clarity and consistency in naming conventions
updated the condition to check if the synchronization block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure that
updated debugging state from 365 to 366 and removed redundant string literals in DebugExpressionParser . java to improve clarity and maintainability of the
updated the condition to check for transitive dependencies in ExcludeDependency . java and Pom . java to improve dependency resolution by ensuring only transitive dependencies are
updated method names from ` tmp ( ) ` to ` dst2 ( v ) ` in ` Vector . java ` to improve clarity and
added a default value of ` args ` in ` GridHubConfiguration . java ` to avoid null pointer exceptions when ` args ` is not initialized
updated RustBinaryDescription and RustLinkerIntegrationTest to include linkerFlags as an immutable list to enhance flexibility in linker argument management
[ 3.0 ] fix test failure on travis and appveyor
added DAGName handling in TaskExecutorService and updated logging statements in GenericUDTFGetSplits to include externalDagName to improve cl
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
[ netbeans - 4892 ] use atomicboolean in escapeprocessingoutputstream and gradledaemonexecutor
updated the ` validateQuery ` method to include an additional argument parameter to enhance error handling by providing more detailed context during validation failures
updated the index version from 1 to 2 and refactored the repository retrieval logic in LuceneExecutor . java to reflect the new version and
[ hotfix ] [ runtime ] add unit test for kryoserializerregistrations
added null check before removing configuration properties in BlueprintConfigurationProcessor and updated test cases for " dummy2 - site " in BlueprintConfigurationProcessorTest to
refactor Boolean handling in MetaStoreDirectSql . java to utilize Apache Commons BooleanUtils to improve code readability and maintainability by
added a call to hideCustomizationDrawer ( ) in Launcher . java to improve user experience by hiding the customization drawer
updated term vector handling to include a new constant TV _ KEY _ WARNINGS and improved null checks in TermVectorComponent . java to
added logging for optimistic types and updated log statements in Compiler . java to improve performance by reducing unnecessary logging when optimistic types are enabled
refactor Expect class for improved readability to enhance maintainability and clarity of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy class to enable unix socket access for Docker operations
added JUnit 5 test annotations to CloseableDoSFilterTest , CloseableDoSFilterTest , and CloseableDoSFilterTest classes to improve
camel - 16462 : camel - reactive - streams do n ' t have a stream with no active subscription .
updated Vectorizer and TezCompiler classes to utilize TezTask instead of MapRedTask to improve type safety and compatibility with Tez
added a new parameter ` true ` to ` StringAppender ` and ` LogDivertAppender ` constructors in ` StringAppender ` and ` Log
add a null check for the guiPackage before updating it to avoid potential NullPointerException when the guiPackage is null
llvm : fix linkage . getencodedvalue ( ) and linkage . isweak ( ) method .
refactor XShareAuto , XCheckJSig , and XCheckJSig classes to improve code organization and maintainability
# 1188 - add unit test for defaulttransactionthreadlocal . get ( )
added a check for invalid OperationHandle and improved error logging in HiveStatement . java to enhance error handling and provide clearer diagnostics for invalid
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 15836 - camel - aws - secrets - manager : add unit test for minimal configuration
refactor SimpleTree class for improved clarity to enhance maintainability and readability of the code
updated error message formatting in UserREST . java to improve readability of error messages for better debugging
added a boolean parameter to the ` fromContent ` method and modified the ` fromContent ` method to include a ` subTree ` parameter to
updated column width calculation in Sheet . java and added unit tests for HSSFWorkbook . java to ensure correct column width calculations for Excel sheets
added configPath parameter to the Command . less method in Builtins . java to enhance command configuration flexibility by allowing dynamic configuration path
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
updated the SSHD image from " @ sha256 : 1.0 . 0 " to " @ sha256 : 1.0 . 0
do n ' t check the hostid value in agentmanagerimpl # checkhostid ( )
refactor the handling of multi - valued columns in DefaultGroupKeyGenerator to improve clarity and functionality to enhance code readability and maintainability
refactor test methods for seeking and error handling in TestMultiMMap . java to improve clarity and accuracy of error handling in the
updated BCSiliconRecipes . java to use a builder pattern for the IngredientStack to improve code readability and
fix typo in graphhopperconfigmixin . put ( string key , object value )
updated visibility logic in CellLayout and refactored drag exit handling in DragController and Workspace classes to improve code readability and maintainability by
updated the modify request body handling in ModifyRequestBodyGatewayFilterFactory and added a new test for upstreamRequestBodyIsEmpty in ModifyRequestBodyGatewayFilterFactory
updated visibility checks in ConstructorFinder , FieldFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance security by ensuring only
change log level from warn to trace in LoggingHandler . java to improve logging granularity and reduce log verbosity
refactor prefix handling in WhiteBlackList . java and add a new Issue348 . java file for issue # 348 . java to
added functionality to handle gallery images in GalleryActivity to enhance user experience by providing quick access to the gallery image
refactor MongoDBServiceFactory to use a static instance variable and improve service initialization to ensure a single instance of MongoDBService is created only when necessary
added unit tests for the ` preventCodeFormattingMakingFinal ` method in ` InlineConstantMutatorTest ` to ensure correct behavior of code formatting
replaced the ` decode ` method with a ` Blackhole ` parameter in ` RecordTest . java ` to enhance functionality by introducing a
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
[ knx ] fix npe in dptunit and dptunit handler ( # 8048 )
removed the call to dbManager . getWitnesses ( ) . clear ( ) in ManagerTest . java to ensure that witnesses are reset
do n ' t throw prestoexception when abort ( )
refactor stack handling in NativeError . java to improve clarity and functionality to enhance code readability and maintainability by centralizing stack management
removed conditional check for path names starting with " . " in DrillPathFilter . java to streamline the code by eliminating unnecessary
rename ` onboard ` to ` autoLoadPinotMetricsService ` in ` ThirdEyeAnomalyApplication ` and ` Third
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before each test execution
increased the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to adjust the border
changed ` fThreadGroup ` to be ` volatile ` and modified the ` lookForStuckThread ` method in ` Timeout ` and `
changed the visibility of the ` getValue ` and ` setValue ` methods from ` final ` to ` final ` in ` ValueResultData ` to
updated hash code calculation in FuzzyQuery . java to use superclass ' s hashCode ( ) and modified equality check in FuzzyQuery . java
removed debug print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed method signatures from ` SharedRandomAccessFile ` to ` void ` in ` SharedOpenFilesCache . java ` to improve method usability by
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest . java
updated the ` retrievePersonAttributes ` method to use ` buildResolvedPrincipal ` instead of ` context . getPrincipalFactory ( ) . createPrincipal
change log level from info to warn in OpenWebNetBridgeHandler . java to provide more granular logging for connection issues
replaced ` longHash ` and ` intHash ` methods with ` hash ` in multiple hash classes to standardize hash calculations for improved
added a constructor to ThumbnailGenerationTask that accepts a FileDataStorageManager and account to ensure that a valid ThumbnailGenerationTask is created
updated the condition in GroupSelectionQuery to check for a maximum number of attempts before stopping the loop to ensure that the loop does not exceed the
added a new file Bug1933922 . java containing a main method for recursive compilation to demonstrate the use of recursive compilation
refactor comparison logic in multiple series and tokenizer classes to improve code readability and maintainability
updated the character range from 33 to 32 in FileResolver . java to ensure that control characters 0 - 31 and 32 are properly valid to prevent
added a call to requestFocus ( ) in the Display class to improve user experience by ensuring the focus is properly requested
update instructor home page test to work with new instructor
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor action handling in DetailFragment and MainActivity to improve clarity and functionality to enhance user experience by providing feedback when a confirmation message is
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced Runtime . getRuntime ( ) . exec with ProcessBuilder and removed JAVA _ TOOL _ OPTIONS in SourceCompiler . java to improve process
updated the IP address in HintedHandOffTest to use " 127.0 . 0.1 " instead of " localHost "
refactor controller and subsystem assignment logic in Metrics . java to improve code readability and maintainability by reducing redundancy
added assumption checks for Apple platforms in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
fix jdk - 8010101 ( jdk - 80101 ) : add miss check for java . specification . version property
refactor Mockito class for improved readability to enhance maintainability and facilitate future updates
updated TestLargePageUseForAuxMemory . java file to improve performance and maintainability of the test cases
updated BinaryParser and PlainTextParser to use the context parameter and added charset handling in ParsingExecutionContextView to ensure compatibility with the current context
added a new ` MultiPartFormDataCompliance ` enum and its getter / setter methods in ` HttpConfiguration ` , ` HttpConfiguration ` , and
added GradleVersion . VERSION ( " 7.2 " ) to the GradleDistributionManager class to support compatibility with JDK 17
refactor type handling in DatabaseSnapshot and SnapshotControl classes to improve code readability and maintainability by centralizing type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
modified the return statement to handle cases where runWith is null or empty to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4896 - add a test to verify that
refactor multiple Shadow classes for improved code organization to enhance maintainability and readability of the codebase
pdfbox - 4892 : do n ' t set luminances [ x + right + right + left + right + ] ,
replaced direct calls to ` mTintAmount ` with ` mTintAmount ` in ` TaskView . java ` to improve code clarity
added a new file ` SumZeroAggr . java ` for handling sum zero functions in the Drill framework to facilitate the
updated SQL syntax in FirstValueFunctionIT and NthValueFunctionIT to remove unnecessary whitespace to improve code readability and maintain consistency
hbase - 25815 addendum addendum to getallocationfailwarningmessage ( )
added a null check for propName before adding it to the roleObject to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotations and improved task removal logic in StatusBarTouchController and RecentsView classes to enhance testability and ensure
added logContainerStream method to DockerClient and modified loggingContainer method to include a stream parameter to ensure that streams are open indefinitely
add a new test class TestMVStoreCachePerformance for testing MVStore cache performance to ensure performance testing of MVStore cache functionality
updated the LONG value from " L " to " J " in PrimitiveType . java to ensure consistency in data type representation
changed the access modifier of the delegatingApplicationListener method from public to static to allow the method to be called without an instance of the class
camel - 14284 : camel - rest - do n ' t set body to null in camel - rest
added new files ` FileDeletingTasklet ` , ` TaskletJobFunctionalTests ` , and ` TaskletJobFunctionalTests `
update size keep drawables in companion and update center and orientation regarding view
refactor byte manipulation logic in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap to improve code
updated the ` sendStateEventToTest ` method to accept an additional ` stateOrdinal ` parameter to enhance event tracking by associating events with
added support for video thumbnail requests in MediaMonitor and RequestHandler classes to ensure proper handling of video thumbnail requests based on user agent
updated error handling and highlighting logic in ErrorCheckerService . java to improve user experience by ensuring proper text highlighting and highlighting based on
added conditional logic to set the title area based on the " menuButtonTopBool " and " menuButtonBottomBool " theme to ensure proper
added preload for libskia in Skia . java and updated link references in Skia . java to enhance functionality by allowing dynamic loading of
added a constant for ID _ UNITTESTNET in NetworkParameters . java and implemented unitTests method in NetworkParameters . java to facilit
added error handling for invalid format arguments in QueryCommand and updated test cases in QueryCommandIntegrationTest to improve user feedback when no format arguments are
removed capacity and mask variables from capacity and length variables in IntIterator . java to simplify variable assignments and improve code clarity
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified the ` walkRuleAndAdd ` method to
[ netbeans - 4892 ] fix binary for source output in patchmodulefilemanager ( # 4893 )
simplified the condition for candidateTermId comparison in Election . java to improve code readability and maintainability
update OwnCloudClientManagerFactory default policy based on SAML authentication status to ensure correct authentication policy is applied based on SAML authentication status
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that mappedTableResource is not null to avoid potential NullPointerExceptions
refactored close method to use utility . close ( ) instead of try - with - resources to improve code readability and maintainability
refactor anonymous authentication handling in AnonymousAuthenticationFilter to use a deferred context for improved clarity to enhance code readability and maintainability by
updated the ` removeActor ` method to accept an ` unfocus ` parameter and modified the ` removeActor ` method to accept an additional parameter
refactor cloudConfig initialization to use a valid variable for clarity to improve code readability and maintainability by reducing duplication
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 454 : add log level
refactor DatumAliases , AbstractParser , Formattable , Formattable , and Parser classes to improve code organization and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependenciesPanel . java
camel - 16462 : camel - groovy - allow to load script from a cache . thanks to daniel for the patch .
replaced ArrayList with HashSet for resolved artifacts in DefaultPluginManager . java to simplify code and improve performance by eliminating unnecessary list creation
[ hotfix ] [ cli ] make ` ` args ' ' public
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed storageAlias initialization and certificate chain retrieval in HttpsMessenger . java to simplify code and improve readability by eliminating unnecessary logging
added error handling for converting response to a string in HttpCommandExecutor . java to improve robustness by providing a clearer error message when conversion
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the
fix # 6240 ( # 6240 ) ( # 6240 )
added native methods for SpatialLocationCalculatorConfig in DataOutputQueue and depthai classes to enable retrieval and retrieval of spatial and front spatial location calculations
refactor multiple Java files related to CommunityDetection , GSAConnectedComponents , and PageRank to improve code organization and maintainability
refactor the ` isEmpty ` method in ` TreeTrie ` to use a dedicated ` isEmpty ` method to improve code readability and maintainability
updated method calls from ` col ` to ` r ` and ` background ` in ` AttributedStringBuilder . java ` to enhance functionality by allowing
updated PeerSync to conditionally disable fingerprint based on system property to ensure fingerprinting is only applied when the " solr . disableFingerprint " property
changed the access modifier of the ` moveFunds ` method from private to public to allow external access to the ` moveFunds ` method
refactor MongoTemplate to simplify event handling and add application listener to improve code clarity and ensure proper application context management during event processing
fix settransactiontest # testhazelcastinstancefactory # init ( ) and # testhazelcastinstance # destroy ( )
tika - 3353 -- close input stream if it do n ' t exist .
updated error handling from ` ApiBag . ExceptionWithErrObject ` to ` ApiException ` in ` TestCollectionAPIs . java ` to improve
refactor configuration initialization in OptionsParser . java to improve code readability and maintainability
[ 3.0 . 0 ] fix typo in instructorfeedbackaddactiontest . java
changed ` throws Exception ` to ` final ` in ` ExternalWorkerService ` and ` JobServicePipelineResult ` classes to enforce immutability
removed the ` step ` parameter from ` HmDatapoint ` and updated its usage in ` HmDatapoint ` and ` Hom
updated logging statements in PostgreSQLReadWriteAdvisoryLocksTest . java to reflect changes in lock acquisition and write operations to improve clarity
removed redundant calls to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline code by eliminating redundancy
simon ) : fix this lameness test
replaced instances of ` Deque < Boolean > openStack with ` ThreadLocal < Logger > loggerTL ` for better thread safety to improve
replaced ` @ VisibleForTesting ` with ` @ VisibleForTesting ` in ` FunctionInitializer ` and updated imports in ` FunctionInitializerTest ` to
added boxedTypeOrType method in Types and updated Infer classes to handle primitive types to improve type handling and ensure correct type boxing
updated FocusedTaskView initialization and orientation state handling in RecentsView . java and TaskView . java to ensure proper orientation state management
hbase - 25836 fix testflushfromclient . testflushfromclient . testflushfromclient # getregions ( ) ( #
added logic to delete contract details and storage keys in TransactionExecutor . java to ensure proper handling of contract details during transaction execution
updated balance calculations in TokenIssueProcessor and Program classes to use dynamic properties instead of hardcoded values to ensure accurate balance calculations based on dynamic properties
refactor texture cache management in RealisticRenderStrategy to improve cache management and resource cleanup to enhance performance by reducing redundant cache operations
refactor Blit . java to streamline child creation and add a new Bug7049339 . java file to improve code cl
added functionality to manage unselected styles and updated string width calculations in Label and DefaultLookAndFeel classes to improve text width handling and ensure
updated the initialization of ` ArrayList ` instances to use a dynamic size of ` 3 ` instead of creating new instances to improve memory allocation efficiency and
removed unused flags parameter from multiple method signatures in ShadowApplicationPackageManager and ShadowUserManager classes to simplify method signatures and improve code clarity
refactor PingRequestHandler class for improved clarity to enhance maintainability and readability of the code
add mp4 _ asset _ with _ increasing _ timestamps . mp4 in AndroidTestUtil and remove unused imports in TransformationTest to streamline
[ tradfri ] do n ' t log warning if old firmware be not available
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated layout conditions in BoxLayout and DefaultLayout classes to include " table - cell " to ensure proper layout behavior for different display types
updated JsonDecoder to handle repeated JSON fields and added a new test for reordering fields in TestJsonDecoder to improve JSON decoding accuracy and ensure
updated the listener initialization to include a removalCause parameter to enhance the listener ' s functionality by providing additional context for the removal cause
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for the parser functionality
changed variable declarations for publisher , appName , host , and port from non - final to final to enforce immutability and clarify intention that these values should not change after initialization
modified the ` ObjectHashSet ` constructor and added a caching mechanism for the ` iterator ` in ` ObjectHashSet ` to improve flexibility by allowing
added a constant for batch byte handling in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to improve code readability
updated context constants from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to ensure proper
added logging for " abort " state in JdbcProxyGenerator and improved error handling in JdbcProxyGenerator to enhance debugging capabilities and provide clearer
updated workspace animation importance logic in Workspace . java to enhance accessibility support for different state states
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity and improve performance
updated the variable name from ` substring ` to ` substring ` in ` UaaTokenServices . java ` and added a new test for scope
updated import statements and added ` toString ( ) ` method in ` AvailableJDBCDrivers ` and ` TestAvailablePlugins ` classes to improve clarity
add a new interface ExecutableCommand to facilitate the execution of a specific command in the kie - api package
camel - 16462 : remove idempotent service from jms to jms test
added padding methods to CellLayout and modified bitmap scaling logic in Launcher to improve layout responsiveness by adjusting padding based on cell dimensions
added a condition to check if the input string is empty before collecting cands to avoid potential errors when the input string is empty
updated ` SamlMetadataUIParserAction ` and ` SamlMetadataUIParserActionTests ` to use ` Action ` instead of ` S
added a method to check for LDAP ports in LdapMockMvcTests to ensure proper handling of LDAP ports during tests
[ log4j2 - 1349 ] [ log4j2 - 1349 ] fix log4j2 - 1
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve URL filtering and logging clarity to enhance error handling and
updated SolrQuery to use " name : samsang " instead of " homer " in TestSpellCheckResponse . java to ensure
added support for old and new console API in TerminalServlet and adjusted threadIOHolder initialization to ensure compatibility with Karaf Console API and improve
update getVerticesColors method to include " mloopcol " and " mcol " based on mesh compatibility to enhance encapsulation and ensure correct
added a filter to exclude timestamped reports directories in HTMLReportGenerator and updated test cases in HTMLReportGeneratorTest to enhance report generation by excluding
refactored test methods in DataValidatorTest . java for improved readability and consistency to enhance code maintainability and facilitate
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null checks for bindStatus in FieldUtils and FieldUtils to ensure proper error handling for form binding errors in adequate context
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a method to allow extraction private fields in FieldSupport and updated related test cases in FieldSupport _ fieldValues _ Test to enhance flexibility in
replaced " { name } " with " { device . getName ( ) } " in WebDataHandler . java to ensure the device name
add java 14 + support for default
added a new method ` weightsByDouble ` to the ` ZParams ` class and updated its usage in ` SortedSetCommandsTest ` to enhance
added a Database parameter to the ` writeCustomHTML ` method across multiple writer classes to enhance functionality by integrating database - specific functionality
added assertions and updated key retrieval logic in BTreeMap . java to ensure correct handling of null values and improve key retrieval logic
refactor exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw ContractExeException instead of Exception to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 465 : add support for
removed unnecessary logging statements and simplified UI messages in Main . java and Main . java to improve code readability and maintainability by centralizing UI
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and modified HortonworksEncodedSchemaReferenceWriter to
added import statements for ` ChunkListener ` and ` OnRead ` , ` AfterJob ` , and ` OnWrite ` classes to enhance batch
refactor ` getDesiredConfigMap ` and ` getDesiredConfigMap ` methods to improve code readability and maintainability while ensuring proper handling
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to use liveDocs instead of liveDocs to improve cl
updated Test7005594 . java file to improve test coverage and reliability
updated error message formatting in ResourcesValidationProcess . java to improve readability and consistency of error messages
refactor TopKRollupPhaseOneJob class to improve code readability to enhance maintainability and facilitate future updates
cloudstack - 4892 : do n ' t throw npe if ip4address be null .
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and updated related imports to utilize ` MCOptionUtils
refactor ` iteratesOverSequence ` and ` iteratesOver2 ` methods to use ` Iterable < T > ` instead of ` Object ` to
camel - 14263 : camel - http - do n ' t apply filter to external header in camel - http
added unit tests for SQL query creation in ActivityHistorySQLServerStoredProcedureTest . java to ensure correctness of SQL query results in JPA
refactor BarChartActivityMultiDataset and BarLineChartBase to use LargeValueFormatter for better value formatting to improve code readability and
refactor character handling in CommentsParser to use a constant for INNOCUOS _ CHAR to improve code readability and maintainability by central
removed @ SuppressWarnings ( " argument . type . incompatible " ) from Platform . java to eliminate compiler warnings related to argument type incompatible
corrected the spelling of " Before Register allocation " in TraceLinearScanLifetimeAnalysisPhase . java to ensure consistent formatting and improve readability
added a comment to the method stub in NullAssertionValidator . java to clarify the purpose of the method for better understanding
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the build process
added system profile directory creation and refactored test setup and teardown methods in PmsConfiguration and DLNAMediaInfoTest classes to
replaced the use of ` DefaultThreadFactory ` with ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory ` to
replaced ` inMessages ` with ` receiver . getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP
added a " accept " attribute to the image file input dialog to ensure proper handling of image files in the input dialog
replaced instances of ` NodeBuilder ` with ` PreBuiltTransportClient ` and updated imports in ` ElasticIndexWriter ` and ` TestElastic
added detailed logging for witnesses and class names in ForkController . java to improve debugging and traceability of witness - related operations
added a new file ` NullPointerAndEmptyArrayTest . java ` to test the behavior of ` CustomURLClassLoader ` with null values to
added a method to find generated source paths using dependencies in BaseIjModuleRule and removed the test class in AbstractIjProjectConfig to
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` to the ` UaaStringUtils ` class and updated pattern construction logic
added validation checks for aliasToWork and TableScanOperator instances in Vectorizer . java to ensure proper handling of aliases in the map work
replaced Mockito runners with JUnit ' s MockitoJUnitRunner and updated exception handling in WeatherQueryTest . java to
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting fails
replaced specific import statements with a wildcard import and refactored language retrieval logic in RemoteUtil . java to improve code readability and maintain
reformatted import statements in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintain consistency in import statements
hbase - 16462 fix snapshotmanager # prepare ( ) to prevent lock on snapshot creation
[ j2kt ] use runtimemethods . createplatformisnull ( reference ) instead of methodcall
added a test for updating the HTTP _ RPC endpoint in DockerQuickstartTest . java to ensure that the explorer correctly reflects the modified HTTP
added suspension logic to manage thread suspension to ensure proper thread management and prevent illegal state exceptions during thread suspension
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden and Serial data types instead of Author to improve clarity and functionality of Javadoc
camel - 16462 : camel - spring - produce and camel - spring - remoting should check if camelcontext be non - null
removed multiple @ Override annotations from multiple security - related classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests to enhance module import functionality and improve test coverage for static
updated the language variable from XMLConstants to " http : / / www . w3 . org / 2001 / XMLSchema " to ensure
added logic to set content descriptions based on badges in BubbleTextView to enhance user experience by providing a clearer display of badged
added MouseWheelListener for mouse wheel movement in TestMouseWheelScroll . java to enable proper handling of wheel movement in the scroll pane
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
updated currency pair names from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
replaced instances of ` VacuumEnvironment . Location ` with ` VacuumEnvironment . LOCATION _ A ` and ` V
simplified currency assignment logic in BitfinexAdapters . java to improve code readability and maintainability
replaced ` Sets ` with ` ImmutableSet ` and refactored field handling in ` JsonFormat . java ` to improve code clarity and
added conditional checks for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of enum types in JSON output
updated variable names and logic in VirtualThread . java for clarity and consistency to improve code readability and maintainability by standardizing variable names
updated ` DirectoryTaxonomyWriter ` and ` TestDirectoryTaxonomyWriter ` to use ` catTerm ` instead of ` NoOpCache ` to improve
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
corrected the calculation of the vertical position in BrowserContentPane . java to ensure correct vertical positioning in the content pane
pdfbox - 4892 : remove unnecessary ` ` invalidpasswordexception ' ' , a suggest by valerybokov
added unit tests for setShortSupportMessage and setLongSupportMessage methods in ShadowDevicePolicyManagerTest . java to ensure proper exception handling for
ggb - 1187 help button should be close if the menu be open .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated sleep duration in BackendInitializerHelper and adjusted controller state checks in TerminalClient , and added new test cases in GcodeParserUtilsTest to
updated the condition to check if the release status is OLDER before setting the last update in SwingStartup . java to improve handling of release
added support for ` includeGeneratedFileComment ` property in ` DbMigrationConfig ` , ` DbMigration ` , and ` MigrationXmlWriter `
updated command usage strings to include a wildcard character in multiple Java files to enhance command usability by allowing more flexible usage instructions
deleted several classes BadHdfsThreadsFilter , BadZookeeperThreadsFilter , and BadHdfsThreadsFilter to streamline the codebase by elim
updated method names from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes in XML processing
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in routeinfo
refactor : use modelelementcontainerdefaultcapacities instead of static import
added serialVersionUID fields to multiple Java classes to ensure compatibility during serialization and deserialization processes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a ` CONST _ SEPARATOR ` parameter and added a test for the ` shaBase64 `
refactor parameter handling in Parameters . java and add null check in TestAction . java to improve code clarity and prevent potential NullPointerExceptions
added a new file ` Person . java ` implementing a new class ` Person ` with a name field to facilitate the management of
patch by jbellis ; review by brandonwilliams for cassandra - 113
changed the method call from ` indexOf ( i ) ` to ` indexOf ( i ) ` in ` AbstractClient . java ` to ensure consistency
added assertions to validate metadata properties in SegmentMetadataImplTest and SegmentMetadataImpl classes to ensure correct retrieval and retrieval of time and time units in
replaced java . awt . Color with net . sf . openrocket . util . Color in SimulationPlotPanel . java to ensure
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
no effective change - code cleanup - fix typo
simonstewart : add a test to verify that double overflow page be click on an element .
added a try - catch block around the dismissDialog method in Launcher . java to handle potential exceptions during dialog dismissal
added a custom jndi location configuration to the JTA transaction manager to enhance flexibility by allowing dynamic JNDI resolution based on system properties
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to streamline the library functionality by eliminating unnecessary code
rename variable ` enabledCiphers ` to ` result ` in ` JSSESocketFactory . java ` to improve clarity and consistency in variable
[ beam - 10663 ] fix bigqueryutils . gettimestamp ( ) to use java . time . temporal
replaced ` IllegalArgumentException ` with ` requireNonNull ` for buffer and user credentials in ` Identifiers . java ` and ` DatabaseConnector . java `
use inputmap . getOrdefault ( ) instead of input . get ( )
added validation for row and column range in FlightConfigurablePanel . java to ensure that the column index does not exceed the table ' s row
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] fix nullpointerexception in unecessarylocalbeforereturnrule
replaced the instantiation of ScriptEngineManager with a single instance of ScriptEngine to simplify the code and improve readability by eliminating unnecessary
updated correlation calculations in EuclideanDistanceSimilarity and its test cases in EuclideanDistanceSimilarityTest to improve accuracy and clarity of correlation
simonstewart : avoid npe if sstables be null
updated the ` relativize ` method to include both ` baseDir ` and ` Path ` parameters in ` MorePaths ` and ` MorePaths
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for column size and decimal
added a filter to skip the current writer head file 1 . log . tmp in DeadLetterQueueWriterTest . java to improve test efficiency by
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
rename ErrorHandlerController to Error403Controller and rename ErrorHandlerController to Error403Controller to improve clarity and consistency in naming conventions
replaced calls to ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in multiple Java
[ netbeans - 4892 ] fix camel - tiny to work with java 11 +
refactor connection acquisition logic in ConnectionPool . java to use an iterator for better readability to improve code readability and maintainability by
renamed ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to clarify the purpose of the
pdfbox - 4892 : check for id _ tree instead of null , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve readability of error messages for better debugging
added readerException and writerException fields to LargeStreamletTest . java and updated thread join duration to improve exception handling clarity and ensure
updated the page setting logic in HomeFragment to include extra pages based on user preferences to enhance user experience by allowing dynamic adjustment of extra pages based
added a try - catch block for handling broken Gaussian images in AndroidImplementation . java to improve robustness by preventing crashes due to image
added @ SuppressSubnodes annotation and modified return statements in BaseParser . java and ImplicitActionsConverter . java to improve code clarity and ensure
refactor FDFParser instantiation to use try - with - resources for resource management to ensure proper resource management and avoid potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java that is no longer needed in the project
added a shell command for input key event 82 in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java to
added JSON serialization for filenameToUrl in FileDumper . java to facilitate the writing of the output file to a JSON format for
bugfix # 252849 - reset profiler server result notified
refactor texture loading and feature loading methods in TextureHelper . java to improve clarity and functionality to enhance code readability and maintainability by
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of
updated the " 97817977458 " to " 9781797845005 " in RandomizersTest . java to reflect
updated the sound setting logic in AlarmReceiver to use a string for the notification ringtone to improve flexibility by allowing dynamic configuration of
added a method ` reportLoopCount ` to handle LoopCountReceiver instances to improve control over loop count reporting in the root node
added a condition to set the stack version for the cluster in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to
fix regionid not find in portableipdaoimpl # getregionid ( )
removed redundant calls to streamManager . open ( ) in ItemOrientedStep . java to streamline the code by eliminating unnecessary
added a new file CountedLoopProblem . java that implements a random number generation algorithm to demonstrate the use of a random number
simplify method signature for executecompiledmethod and hotspotinstalledcode .
[ gr - 11344 ] fix the bug in graalhotspotvmconfig . setpendingfailedspeculationoffset ( string , int
refactor KafkaStreamsTracing and ITKafkaStreamsTracing classes to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing functionality and
added ` toStringArray ` method to ` FeedbackConstantSumQuestionDetails ` and updated test cases in ` FeedbackSessionsLogicTest ` to
removed DynamicColors . applyToActivitiesIfAvailable call from BaseApplication . java to streamline the process by eliminating unnecessary dynamic colors
added a method to dump all stack traces and modified thread management in CloseRace . java to improve debugging capabilities by providing insights into thread
updated return value from ` val ` to ` intValue ( ) ` in ` IntPointField . java ` and added tests in ` TestPoint
updated arcSize and arcSizeFraction from ` int ` to ` double ` and modified height calculation in ` MyButton . java ` to improve
updated the ratio width from 720 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` across multiple files to improve clarity and consistency in naming conventions
removed the ` waitForLauncherCondition ` method and updated its implementation in ` AbstractLauncherUiTest ` , ` WorkProfileTest ` , and `
added imports for CasCoreHttpConfiguration in multiple test files to ensure consistency and clarity in configuration management across test classes
replaced direct calls to raf . readLong ( ) with DataIO . readFully ( ) for reading single byte arrays to improve performance by reducing
camel - 16462 : camel - http - do n ' t log http response code if debug level be true
refactor class path creation logic in DeclarativeHintsParser . java to improve clarity and structure to enhance code readability and maintainability
autodetect script scope for audio , voice , and audio ( # 4892 )
added methods to retrieve and set the layer manager in AnimComposer , AnimEvent , and AnimEvent classes to enhance layer management functionality
added a check for empty queue and updated the default screen in DeferredHandler . java and removed the updateWallpaperOffset method from Workspace . java
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve error handling and provide clear
refactor center and center2D handling in CylinderRegion . java to improve clarity and consistency to enhance code readability and maintain
refactor TestBadUseCases to use JUnit ' s ExpectedException for better exception handling to improve test clarity and maintainability by using
modified the ` sendOneQuery ` method to handle ` NO _ PARAMETERS ` and added a test for multi - execute functionality in ` Statement
do n ' t customize the security environment if the model be n ' t customized
updated the Rctag parameter from " android% 20app% 20edit " to " android% 20app% 20edit " in the
refactor Test . java for improved readability to enhance maintainability and facilitate future updates
updated PBEKeySpec constructor to use keyLength instead of blkSize to ensure correct key generation based on key length
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to enhance functionality by allowing section definition writing
added distance calculation and validation for location accuracy in GpsLoggingService . java to improve accuracy checks and prevent excessive jump detection in GPS logging
removed unnecessary print statements in TableCellLayout and TableLayout2 classes to clean up the code and improve readability
refactor DataLabelingServiceClient and package - info files to improve code organization and maintainability
updated the ` InsightFilter ` class to use ` Reference < Object > ` instead of ` boolean ` for rootNameFn and sourceFilter
removed redundant binarySearch calls for data and added elements in AllAppsList . java to streamline code and improve readability by eliminating unnecessary
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed unused ` ThemedPreferenceActivity ` class to streamline
updated the variable name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertRootArcs ( ) method call from ` assertRootArcs ( ) ` to ` assertRootArcs ( ) ` to
added a assertion to check if the security policy exists or is a file to ensure that the security policy is valid before proceeding with operations
camel - 14284 : camel - olingo2 - allow to override the olingo2component . getconfiguration ( )
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the recovery process to complete
updated logging statement from ` e ` to ` e ` in ` MongoPersistentEntityIndexResolver . java ` to improve logging clarity by explicitly
add support for send image by http
camel - 14263 : camel - netty - fix npe in camel - netty
updated the URL template pattern in BalancedClickhouseDataSource . java and added tests for URL splitting in BalancedClickhouseDataSourceTest . java
remove compiler . disablejsr199 from fragmentactivator . java
added support for handling null values in CSVRecordReader and corresponding tests in CSVRecordReaderConfig to enable flexible handling of null values in CSV
added LiquibaseService annotation to multiple connection classes to skip LiquibaseService skipping during Liquibase service execution
updated the method signature of ` addImportedStaticFieldNames ` to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to ensure correct
add command and state topic to item command trigger ( # 4892 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to ensure proper
updated case names from " zkCredientialsProvider " to " zkCredentialsProvider " and updated its usage in SolrXmlConfig . java
[ mana ] fix mana tablet to not show creative
set the identifier collection of the current call event in P25P2DecoderState . java to ensure the correct identifier collection is used for processing
removed unused imports from TestRandomChains . java to clean up the code and improve readability
updated the method name from " deriveKeyWithScrypt -% d " to " deriveKeyWithScrypt " to improve clarity and
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
corrected a typo in the assertion message in TypeDefinitionRegistry . java to ensure that the definition is not null to improve clarity and
added visibility management for the share with me icon in LocalFileListAdapter . java to improve user interface by hiding the share with me icon when
updated CSS stylesheet links to use HTTPS instead of HTTP to enhance security by restricting stylesheet access to HTTPS
updated ` RouterFilter ` and ` RouterServerListFilter ` to use ` Collections . emptyMap ( ) ` instead of ` null ` to improve
updated assertions in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context in assertion messages
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new development
added a null check for the context in CrawlerSessionManagerValve and created a test for multiple contexts in TestCrawlerSessionManagerValve to
updated the ` getJspApplicationContext ` method to use a privileged action based on the ` Constants . IS _ SECURITY _ ENABLED ` flag to ensure
refactor length calculation logic in RocketComponentConfig to use minimum and maximum bounds for boundary calculations to improve accuracy of component length calculations and ensure
replaced ` @ Singleton ` with ` @ Singleton ` in ` NonceService ` and updated the bind method in ` OpenIDAuthenticationProviderModule `
added a call to updateChildLinks in FileWrapper . java to ensure child links are updated correctly in the parent context
updated method signatures and parameters in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability by using
increased the timeout value from 100 to 500 in RetrievalBlockingMessageStoreTests . java to improve test reliability by allowing more time
do n ' t override shift code if it ' s always override .
[ hotfix ] [ runtime ] fix deadlock in nodeclustercoordinator . isleader ( )
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition to check if the identity is a reference instead of a non - null name to ensure that only non - non - null
added a ` noop ` parameter to multiple factory methods in ` AbstractCommandRunner ` , ` InstanceArtifactCacheFactory ` , and ` LoggingArtifact
added a sleep duration to the catch block in TestListenTCPRecord . java to allow more time for TCP connection to complete before proceeding with
modified the assignment of methodCall ' s arguments in PatchExtensionMethod . java to ensure original arguments are correctly assigned to the original arguments
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` in ` RawNativeLibraries
added support for " apply - sequence " and " ignore - send - failures " attribute in DefaultRouterParser and implemented sequence handling in AbstractChannel
removed the ` x509PublishUrl ` and ` x509ViewName ` fields from ` ClientKeyPublisherMapping ` and ` JwkViewResolver
refactor reader assignment logic in QueryComponent . java to improve clarity and maintainability of the code
replaced ` ValueSourceParser ` with ` Double2Parser ` for max and min values in ` ValueSourceParser . java ` to enhance
simplified the return statement for focusable and grabs pointer events in Container . java to improve code readability and maintainability
removed unnecessary exception handling in Highlighter and SpanGradientFormatter classes to streamline code and improve readability
cloudstack - 4892 : fix cloudstack - 4893 to use uuid instead of firstname
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ` ObjectProvider < FlowBuilderServices > ` instead of
updated SQL command parameters and refactored connection handling in WriteJdbcPTest . java to improve connection management and enhance code clarity
removed conditional checks for the " editor . laf " preference in DefaultPlatform . java to simplify the code for better readability and maintainability
replaced calls to ` getDesiredStateEntity ( ) ` with ` desiredStateEntity ( ) ` in ` ServiceComponentHostImpl .
simplified the calculation of dX and left margin in FloatingTaskView . java to improve code readability and maintainability by redu
added a condition to check if the folder is running and updated the status line in NavigationShareTab . java to improve user experience by providing clear
simplified thread ID assignment in CPUCallGraphBuilder . java to improve code readability and maintainability
added a defToolbar parameter to the Perspective constructor and updated the GuiManagerD and GuiManagerD to use it to improve
updated HomekitImpl to implement NetworkAddressChangeListener and added NetworkAddressChangeListener interface to enhance network address handling and improve logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of leaseManager to
replaced ` SourcePath ` with ` Optional . absent ( ) ` for prefixHeader and linkStyle in ` CxxLibraryDescription . java
added null check for error messages in ExceptionHandlerRegistryFactory and created a test for fatal IO exceptions in ExceptionHandlerRegistryTest to improve error handling
changed the ` nextID ` variable from ` int ` to ` volatile int ` and updated its usage in ` DirectoryTaxonomyWriter . java `
http : / / issues . apache . org / jira / browse / amq - 4896 - fix test failure in amq
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` SourcePath ` classes to implement `
replaced StringBuffer with a direct call to ` from ` to ` in ` Arrays . java ` to simplify error handling by eliminating unnecessary
added a custom index field name to facetFields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance
updated the calculation logic for seconds and nanos in Instant . java and added a new test case in TestInstant . java to ensure correct handling of
replaced direct calls to ` getAttribute ( ) ` with ` getAttribute ( ) . name ( ) ` in ` OGLESShaderRenderer
added a boolean variable ` scriptsBlocked ` to the ` CopyPaste ` class to control the visibility of script updates based on the app '
added a new file TestCMoveLimitType . java containing a new file TestCMoveLimitType . java to implement functionality for handling character
added a ` contains ` method to ` ChannelState ` and modified audio packet processing logic in ` RecordConfiguration ` and ` AudioPacketWaveRecorder
camel - 14263 : fix syntax error in parser and sspt parser
updated the vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem
refactor color handling in Main . java and add version command handling in VersionCommand . java to improve code readability and maintainability by central
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to use EncryptionUtils for improved clarity to enhance code maintainability and
added error handling for EOFException in Http11InputBuffer . java to improve robustness by providing a clearer error message when nRead is negative
add unit tests for group member deletion in DefaultGroupProviderTest . java to ensure correct behavior of group deletion functionality
removed unnecessary object [ ] declarations from several Java files to simplify code and improve readability
deleted the V2ReplicationProtocol . java file to the protocol is no longer needed in the current project
replaced instances of ` BuildRule ` with ` SourcePath ` in multiple Java library classes to improve type safety and clarity in handling source
added new demo classes ` ConstructorArgsDemo ` and ` StupidFinal ` , ` FinalDemo ` , and ` StrictDemo ` to
[ geot - 6283 ] close template iterator in directtemplatefeaturecollectionfactory . close ( )
updated assertion condition in WriteResponseHandler to include a maximum response count to ensure that the response count is within the expected range of 2
added null check for item ' s index number in ItemRowAdapter . java to prevent potential NullPointerException when accessing item ' s date created
rename ` showAnchestors ` to ` showAncestors ` across multiple classes to improve clarity and consistency in naming conventions
added a check to return early if the app ' s width exceeds 12 to optimize performance by avoiding unnecessary processing when the width is below 12
updated equality check in ChangeLogParameters and added a new test for parameter value equality in ChangeLogParametersTest to ensure correct comparison of changeLog
changed the visibility of the loggers map from static to final to ensure the loggers map cannot be reassigned after initialization
updated the return statement to use the base plot method to ensure the method returns the correct base plot instance
added a initialCreation parameter to the createUploadDir method in FileUploadHandler and RestServerEndpoint classes to control the creation of uploads based on
added a boolean parameter ` sendStatus200 ` to multiple server classes to allow control over HTTP status responses during server creation
added a condition to check if the comment length is greater than zero to ensure that comments are only processed if the comment length is greater than zero
added imports and updated file type handling in BuckModule . java to ensure associations are removed when the default file type is not a Buck
replaced specific imports from ` ToLong ` to ` ComposedToInt ` in ` ComposedUtil . java ` to streamline import statements
updated error message handling in RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionOnUnsupportedCPU to improve clarity of error
updated formatting and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a method to mock the ChannelTypeUID class in AbstractModbusOSGiTest . java to facilitate testing of Channel
fix arrayindexoutofboundsexception in polyglotexceptionimpl . java
added a reset method for FontsContract in AndroidTestEnvironment and implemented a FontsContractReflector interface in ShadowFontsContract to ensure
added a method to convert time values in TimeGranularity and modified time query formatting in PinotDataSourceMaxTime to improve accuracy of time representation
added null checks for exit flow and continue flow in ControlFlow . java and improved type handling in Guard . java to enhance robustness and
updated assertion methods in Assert . java and ArrayEqualityAssertTest . java to ensure arrays do not have the same size to improve error handling and
added default cases for item type and stack size calculations in WindowClickLogic . java to ensure proper handling of default cases and improve code clarity
updated the index calculation logic in MeshBuilder . java to ensure correct calculation of indices based on offset
nifi - 4892 : remove unused controllerserviceprovider from standardprocessscheduler
added imports for ResolvedJavacPluginProperties and updated apClassPaths handling in KotlincToJarStepFactory . java to enhance
updated RESCROLL _ DELAY value from 750 to PAGE _ SNAP _ ANIMATION _ DURATION and simplified navigation logic in Pag
added a new method ` refreshShortcutsIfRequired ( ) ` and modified ` LauncherModel ` and ` DeepShortcutManager ` classes to
added case HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support search navigation functionality in the application
added null check for core name in CoreAdminHandler and updated error handling in CoreAdminHandlerTest to improve robustness and provide clearer error
added marker selection functionality in NearbyMapFragment to improve user experience by disabling bottom sheet details when a marker is closed
added exception handling for throwable logging in FileSyncAdapter . java to improve error reporting for better debugging
refactor testMemoryAwareness to use OutputAnalyzer for better error handling to improve readability and maintainability of the test code
updated the logic for filtering feeds based on application settings to ensure feeds are only processed when heavy load is enabled to improve performance by avoiding
[ java ] ensure defaultdrmsessionmanager be call before setplayer ( ) .
updated ` AndroidBinaryDescription ` to use ` Locale . US ` instead of ` toUpperCase ( ) ` in ` AndroidBinaryDescription ` and added
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure the application uses the correct XML
replaced instances of ` INSTANCE . confFile ` with ` INSTANCE . confFile ` in ` Args . java ` to ensure consistent usage of
updated the timeout duration from " sleep 5 " to " exit 1 " in HostPortWaitStrategyTest . java to improve test reliability by
replaced ` IntMath ` with ` LongMath ` in ` HiveExpandDistinctAggregatesRule . java ` to accommodate larger group counts
added headless handling to GraphicsEnvironment in Toolkit . java to ensure proper handling of graphical errors when the graphical environment is headless
updated furnace matching logic in ExoflameFurnaceHandler . java to check if the currentRecipe matches the furn
added a new parameter ` moveThreadCountDescription ` to the ` DefaultSolver ` and ` DefaultSolverFactory ` classes to provide more detailed logging
updated path splitting method to use getResourceType forResourceType and added a new test for search with RevInclude in FhirResourceDaoR4Search
added a new test class ` Issue582Test ` to test the functionality of ` Fun . Pair < String , Integer > ` with
[ native ] add unit test for decimal overflow
refactor LoadingCache class for improved performance to enhance cache management efficiency
added a new rule " AvoidNonConstructorMethodsWithClassName " to the rules list to ensure proper handling of non - constructor methods with class names
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by handling StaleElementReferenceException during element selection
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator to improve error handling and view existence checks to enhance code clarity and maintainability by
refactor DOMUtil class for improved readability to enhance maintainability and facilitate future updates
added translation calculations in TaskViewUtils and a new logMatrix method in Utilities to improve animation accuracy and facilitate debugging of matrix values
changed the flag ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a method to walk FST Arcs in TempFSTTermsReader and modified document frequency handling in TempTermOutputs to improve efficiency and
added SolrQueryRequest parameter to multiple augmenters and factory classes to include SolrQueryRequest in the creation process
added SQL trigger tests for handling null values in Post and Announcement types in SingleTableMySQLTriggerTest . java to ensure proper handling of
refactor comparator handling in FieldValueHitQueue and TopFieldCollector classes to use a dedicated setComparator method to improve code readability and maintain
updated SQL query prefix formatting to include quotes in SQL queries to ensure compatibility with SQL syntax and improve query accuracy
added Spark . awaitInitialization ( ) method to the init method in RequesterTest . java to ensure Spark is properly initialized before proceeding with
added constants for total storage pool , limit , and total storage fee in DynamicPropertiesStore . java to improve code readability and maintainability by
added a new ` NinjaProperties ` parameter and modified the ` AssetsController ` class to include a ` ninjaProperties ` parameter to enhance
updated key check from ` getPosition ( ) ` to ` getMapMarkKey ( mapMark . getPosition ( ) ) ` in ` MapMarksManager
added TokenRewriteStream parameter to multiple method signatures in BaseSemanticAnalyzer , DDLSemanticAnalyzer , and DDLSemanticAnalyzer to
removed ` throws IOException ` from multiple method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes
updated the variable name from ` fileName ` to ` fullPath ` in ` JxBrowserManager . java ` and added error handling in ` FileUtils
added a condition to retrieve the AppVersion property and modified the image format comparison in IOSImplementation . java to improve code clarity and ensure
[ somfytaahoma ] fix the issue where thing . getridgeuid ( ) do n ' t exist . ( #
added JUnit 5 @ DisabledIfSystemProperty annotation to AlbertoAggregatorTest to disable flaky tests on GitHub to improve test reliability
refactor OpenWireConnectionTimeoutTest to use static final constants for trust store types and password to improve code readability and maintainability by redu
renamed ` warnThenDebugLogger ` to ` stackTraceWarnThenDebugLogger ` and added ` nanGaugeWarnThenDebugLogger ` to improve
added a call to remove the session ID from the session info to ensure that the session ID is properly removed from the session info
added hostname setting for alerts in HeartBeatHandler and updated AlertReceivedListener in AlertReceivedListener to ensure that the hostname is set when
simplified the return statement for buffer flushing in ChannelEndPoint . java to improve code readability and maintainability
updated the resource path from " org / kie / api / kmodule . xsd " to " org / kie / api / k
added a new test method ` seekTo ` in ` ShadowMediaPlayerTest ` and modified seekTo method in ` ShadowMediaPlayer ` to
rename ` createTask ` method to ` createThrowingTask ` across multiple executor classes to improve clarity and consistency in naming conventions
added a conditional check for AQUA _ LAF in CloseButtonTabbedPane to enhance the visual appearance of the tab close button
updated request method and charset settings in TSPTimeStampService . java and refactored test class imports in TestSignatureInfo . java to improve
added a new method ` createXStream ` to accept a ` ClassLoader ` and modified the ` setupDefaultSecurity ` method in ` XStream
added error handling for non - generic diamond types in Attr . java and created a new diamondRaw class in Neg12
[ hotfix ] [ table - planner - blink ] fix typo in reloptutil
updated conditions for setting arguments in Http2Settings . java to ensure that only valid unsigned 16 - bit values are accepted to avoid potential errors
deleted the file ` MapInterfaceTest . java ` that is no longer needed in the project
[ hotfix ] [ test ] clean up session pool test
added endObject ( ) method to ` jsonWriter . object ( ) ` in ` GeoJsonWMSBuilder . java ` to ensure proper
replaced the method ` setIndex ` with ` intValue ( ) ` in ` PopupMenuButton . java ` to simplify the code by directly
added a method ` canCurrentlyUnstash ( ) ` to check if the app ' s MANUAL state is active to ensure that the
camel - 14263 : camel - core - do n ' t use customid for camel route coverage helper .
updated getEventMismatchMessage method to accept a boolean parameter for waiting expectations to improve flexibility in event mismatch handling based on the wait duration
added a new file ` HeaderFixer . java ` implementing a file for processing header files to facilitate the processing of header files
added a new constant ` FIRST _ LOAD _ COMPLETE ` and ` ACTION _ FIRST _ LOAD _ COMPLETE ` in ` Launcher ` and `
deleted the SuperJumperAndroid . java file to the functionality provided by AndroidApplication is no longer needed
updated the return value from true to isDistributed ( ) in SystemTableScan . java and added a new query in TestStarQueries .
removed unused interfaces KeyValuesProviderAware and ObservationConventionAware to streamline code by eliminating redundancy
add miss item to the processidrematches ( ) method and remove it from the list
replaced the calculation of ` base ( long ) i * scale ` with ` base ( long ) i * scale ` in multiple array classes
added caching logic for the last date and format format in HSSFCellStyle . java to improve performance by reducing redundant calculations for the
updated the username filtering in the response from " / Users " to " filter " in RemoteAuthenticationEndpointTests . java to enhance user filtering by
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
added container information to the getStatsLogManager logging in Launcher . java to enhance the logging functionality by including the current workspace and page information
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test class to streamline the codebase
added null checks for newInput and improved marker handling in multiple classes to enhance robustness by preventing potential null pointer exceptions and improving
added a new JMenuItem ` openInBrowserItem ` and modified the server opening logic in ` JavaScriptEditor ` and ` JavaScriptServer ` to
added OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES error messages and modified method signatures in SemanticAnalyzer . java and SemanticAnalyzer . java to
added an EqualPredicate parameter to the addEntryListener method in BasicTest . java to ensure that the addEntryListener method behaves as expected
fix ( geom ) : fix arrayindexoutofboundsexception in coordinatearray . reverse ( )
updated the method call from ` setOpen ( ! isOpen ( ) ` to ` setOpen ( ! isOpen ( ) ) ` in ` Tool
added a new variable ` first ` to the ` TestPayloads ` class to initialize the ` first ` variable to ensure that the ` first
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to simplify the
set the destination to the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message dispatching
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the method returns the
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` pendingChunks . writerIndex ( ) ` with ` pendingChunks . writerIndex ( ) ` in ` HttpClientRequestImpl . java
updated the formatting of the artifact string in GetMavenDependenciesTask . java to improve code readability and maintain consistency in formatting
pdfbox - 4892 : avoid possible npe , a suggest by valerybokov
removed unnecessary debug print statements in ReferenceUtil . java to streamline code by eliminating unnecessary console output
add ` VisibleFieldPredicateEnvironment ` and ` VisibleFieldPredicate ` to the ` FieldVisibilitySchemaTransformation ` and ` VisibleFieldPredicate ` classes
added support for the ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` configuration in multiple classes to enable
added a check for the type of the folder before removing the drop target to prevent potential ClassCastException when the folder is not a DropTarget
refactor stubJar creation logic in StubJarTest . java to improve clarity and maintainability to enhance code readability and maintainability by
added new features for setup wizard , test limit switches , and workflow helper in StartPageTopComponent . java to enhance user experience by providing clear
refactor scheduleWithFixedDelay method call in CassandraDaemon . java to improve code readability and maintainability by reducing redundancy
removed unnecessary casting of ` Boolean ` to ` Boolean ` in ` OnlineTestCase . java ` to simplify code and improve readability
updated return attribute from ' NONE ' to ' ALL _ USER ' in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in ServerTest . java to improve code clarity and ensure
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enhance performance by allowing non - blocking operations
updated TABLE _ HEADER _ SEPARATOR regex to use a constant for column names instead of a hardcoded string to improve code readability and maintainability
updated the return value from 32.0 f to 31.5 f in Camera . java to reflect the new camera functionality
added a preference to disable the start on - boot setup in GpsSettingsActivity and updated return values in Utilities to improve user experience by allowing
updated the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger secret values for impro
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a boolean parameter name to clarify that null parameters are not
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to a race condition
added exception handling for PinotFS initialization in SegmentGenerationAndPushTaskExecutor . java to ensure proper initialization and initialization of PinotFS instances
added locale check for date formatting in TimeLineCursorAdapter , TimelineArrayAdapter , and TimeLineCursorAdapter to ensure correct date formatting based
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the UI
refactor ping task management in Bot . java to use a thread - safe pool to ensure proper resource management and prevent potential memory leaks
updated the error message parameter from ` getMessage ( ) ` to ` throwable . getMessage ( ) ` in ` GlobalErrorHandler . java ` to ensure
updated method names from ` module ` to ` from ` across multiple classes to improve clarity and consistency in naming conventions
added exception handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced super . equals ( ) with equals ( ) and hashCode ( ) in Subject . java and added deprecated methods in Subject . java to
updated method calls and formatting in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintain consistency in formatting
updated zoom level settings from 10 to 24 in BasicMapViewer . java to ensure consistent zoom behavior for the map view
refactor admin user and group retrieval logic in DrillRoot . java to use ImpersonationUtil for process user and group names to improve
refactor permission checks in UnixFileSystemProvider , WindowsFileSystemProvider , and CheckPermissions classes to use ` sm . checkPermission ` instead of ` AccessController
added ArgumentExtractor to DelegatedClientAuthenticationAction and updated related classes to use WebUtils for argument extraction to enhance service resolution flexibility by allowing
changed the defaultGroup variable from private to final in NacosServerRegisterRepository . java to ensure immutability of the defaultGroup variable
fix tilesizechanger . destroy ( ) and createtilecachemanager . destroy ( ) .
removed redundant call to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline code and improve readability by elimin
removed the ` cleanEntriesForFeedsWithoutSubscriptions ( ) ` method from ` DatabaseCleaningService ` to simplify the method signature and improve
replaced CoreAuthenticationTestUtils . getAuthentication ( ) with auth in ImmutableAssertionTests . java to streamline authentication process by eliminating unnecessary
nifi - 1344 : fix filebasedclusternodefirewalltest fail on window
simonstewart : do n ' t use mathematical instead of mathematical
reformatted code for improved readability in RandomAccessReader . java to enhance code readability and maintainability
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations in Fields . java and MockitoBeforeTestNGMethod . java to
refactor CImage class to use a new method ` imageToArray ` for better array handling to improve code readability and maintainability by central
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to clarify the purpose of
replaced ` Boolean . equals ( ) ` with ` Objects . equals ( ) ` in multiple Java files to use ` Objects . equals (
refactor resolveClassFromCanonicalName method to resolveClassFromBinaryName and add nullability annotations to improve clarity and enforce non - null
added verification for default JSON properties in NinjaDefaultTest . java to ensure proper handling of invalid and non - existent JSON properties
renamed method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated cell width calculations in ` DeviceProfile ` and
updated timestampsViewPaddingBottom calculation and adjusted listViewPositionOffset in DetailFragment . java and ListFragment . java to improve layout spacing and ensure
replaced ` Exception ` with ` InterruptedException ` in ` ZkStateReader . java ` and updated exception handling in ` ZkStateReader
added null checks for fields in HttpFields . java and created a new test for empty headers in RequestTest . java to ensure robust handling of
cloudstack - 4892 : add check for staticnat service in the specified network id
added resetHeaderScrollingState ( ) and resetFabVisible ( false ) calls in OCFileListFragment . java to ensure header scrolling
added a method to remove extra empty screen from the workspace to ensure the workspace is removed when no extra screen is available
added a ` fixedWidth ` flag to handle glyph advances based on ` fixedWidth ` to improve glyph rendering flexibility by allowing dynamic adjustment
refactor the ` createFragment ` method to use ` createArgs ` instead of a boolean parameter to improve code readability and maintainability by
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state management capabilities within the state machine framework
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase and StorageBasedMetastoreTest
added a boolean variable for counting sorted by count in FacetComponent . java and updated test cases in TestDistributedSearch . java to improve code
updated properties handling in CheckstyleReport . java to use the build directory instead of the target directory to ensure the cache file path reflects the
added logic to stop the Jetty server based on active slices in DeleteInactiveReplicaTest . java to improve test reliability by ensuring the J
added a new parameter ` fileName ` to the ` FileActionsDialogFragment ` constructor and modified the ` newInstance ` method to accept a file name
added a constant INVALID _ DIRECTION for invalid direction assignments in CellLayout . java to improve clarity and maintainability of direction handling logic
updated API paths from ` payAccountId ` and ` recAccountId ` to ` currency ` in ` InnerTransferRequest ` and ` AccountAPI `
[ hz - 2231 ] fix test failure due to job execution id not be find
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . solon . admin . client ` package
replaced specific imports with a wildcard import and added a new visitIdentifier method in FindTypes . java to streamline import statements and enhance type
added action color setting for primary dark theme in AuthenticatorActivity to enhance visual consistency with primary dark theme
added a new method ` find ` to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManagerImpl ` , and ` Mock
rename method ` addTestStepsForHooks ` to ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks ` to
rename method ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` HandlerMethodUtils ` and ` MethodInvokingMessage
added a new method ` cancelClient ` to ` SparkClientImpl ` and implemented a ` cancelClient ` method in ` RpcServer ` to
added ` getImplicitPreCoercionValue ( ) ` methods to ` SkylarkParamInfo ` , ` ParamInfo ` ,
set lastDisplayedUser to Optional . empty ( ) in FileDisplayActivity . java to ensure lastDisplayedUser is set to an empty
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated its implementation in ` QueryDslMongoRepository ` to
added null checks before stopping instances in DataNode . java to avoid potential NullPointerExceptions during stop operations
do n ' t exit the warm - up loop in case of a failure
feature : add xread ( ) method to multi - key pipeline ( # 4246 )
refactor LinkedBufferInput and StreamInput classes to improve clarity and consistency to enhance code readability and maintainability
added a new ` CASWebSecurityCustomizer ` bean and modified the ` configureHttpSecurity ` method in ` CasWebAppSecurityConfiguration `
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and created a new test class ` TestJdbcWithDBToken
added a new method ` registerProviderInternal ` to ` ShadowContentResolver ` and modified ` ContentProviderController ` to handle ` ProviderInfo `
replaced ` Version ` with ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the latest versioning standards
added keep - alive configuration to SingleConnectionManager to enhance connection management by allowing keep - alive settings
[ java ] rename ` unicastSenderFlowControl ` to ` unicastFlowControlSupplier ` and ` multicastSenderFlowControlSupplier ` to
added null check for current point in DrawLocus . java and modified the condition in GBasicStrokeD . java to improve robustness by
added exception handling for IOException in ChannelEndPoint and modified flush logic in WebSocketConnectionD13 and WebSocketGeneratorD13Test classes to improve robustness
simonstewart : use selenium . take . screenshot instead of firefox .
replaced ` assertEquals ` with ` assertj . assertj . assertThat ` in multiple test files to use ` assertj . assert
remove deprecate method in trufflelanguage . getcontextreference ( )
modified the handling of exceptions in StubberImpl and added new test classes for handling bad exceptions in Mockito to improve error management and ensure proper
updated exception messages in Actor . java and Group . java to improve clarity and consistency in error handling
refactor location permission handling in LocationPickerActivity and ContributionController to utilize LocationPermissionsHelper for location access to improve user experience by providing
http : / / issues . apache . org / activemq / browse / amq - 4892 - add a new example for
added import for CookieSpecs and set a default cookie specification in GetHTTP . java to ensure proper handling of HTTP requests by using a standard cookie
modify intersection logic to use r1 . overlaps ( r2 ) instead of r1 . overlaps ( r2 ) to improve accuracy of intersection
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio processing in Airspy
added a monitoring URL parameter to the ScrollingPanel constructor and updated related classes to include a monitoring URL to enhance the ScrollingPanel to support
removed the SERVICE _ CREATE _ TIMEOUT configuration option from KubernetesConfigOptions . java to simplify the configuration by eliminating unnecessary timeout settings
added a switch statement for handling place descriptions in NearbyListFragment and NearbyPlaces to improve user interface by providing appropriate icons based
added a null check for the package before accessing its name in DefaultPackageScanClassResolver . java to prevent potential NullPointerException when the package is not
added a new file PrintInlining . java containing a main method to demonstrate the usage of the PrintInlining class
fix ( javadoc ) : fix parsing of nested brace in javadoc tag ( # 4892 )
[ java ] remove unused variable from archivetest
updated EdgeDataTableModel to use edges and meta edges instead of edges to ensure accurate representation of edges and meta edges in the model
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration classes to clean up the code and improve readability
updated logging format in VideoManager . java for clarity to improve readability and maintainability of the code
do n ' t send room removal event when clustering be start
updated the delimiter from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to improve clarity and consistency in naming conventions
added setFlipY ( true ) and setGenerateMips ( true ) methods to texture keys in TextureHelper . java to enhance texture rendering
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` in multiple files to improve
added a new class ` LibraryNormalizationPass ` to handle library normalization passes in the J2cl transpilation process to facilitate
replaced ` nextResponseBodyConverter ` method calls with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a test for delegates
[ hotfix ] [ runtime ] fix null pointer exception in memorymanager
consolesessionv2 : add @ temporal ( value = timestamp ) to consolesessionVO . java
added new files ` Hbs . java ` and ` HbsTest . java ` for template handling in the ` io . joob
refactor visibility handling for HintMessage and IncomingMessage in ChatMessageAdapter . java to improve code readability and maintainability by encapsulating
fix ( csv ) : use values ( ) instead of keySet ( ) in importcsv
simonstewart : add ability to wait for dialog appears
added a check to return null if there are multiple distinct column indices in ReduceSinkDeDuplication . java to prevent potential errors when processing
replaced URL handling with URI handling and improved error logging in MiscUtils . java to enhance robustness and provide clearer error messages
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the artifact name from " websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to
replaced ` Collectors . toUnmodifiableMap ` with ` Collections . unmodifiableMap ` in ` SAMLAuthenticatedUser . java ` to enhance im
fix a bug where the save program do n ' t exist .
replaced instances of ` new Double ` with ` new Float ` in multiple Java files to simplify code by eliminating unnecessary object creation
updated the method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure the correct timestamp is used for data
added a check for the " javax . naming . Context " class in HtmlJndiTreeReport . java to ensure proper handling of Context instances
updated database options handling in StorageUtils . java and added database name in Manager . java to improve database configuration flexibility and enhance logging clarity
changed edge type from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual edge
removed the static final int flag _ SLIPPERY from StatusBarTouchController . java to simplify the code by eliminating unnecessary
truffle : fix array dimension calculation in truffleconstantfieldprovider
added preference handling for Google Drive folder path in multiple classes to enhance user experience by allowing customization of the Google Drive folder path
ggb - 1193 shuffle suggestion for radio button , make it easy to shuffle suggestions .
added @ Nullable annotations to multiple method signatures in Truth . java to enhance flexibility in method signatures by allowing nullable values
updated bitwise operations in ArrayUtil . java for improved readability to enhance performance and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified instrumenting logic in ` ClassInstrumentor ` to ensure that the constructor can be instrument
added a new ` waitingForAnticompaction ` map and updated ` StreamInManager ` , ` StreamInitiateVerbHandler ` , and
added support for the ` isKeyguardSecure ` property in ` ShadowKeyguardManager ` and updated related tests in ` ShadowKeyguardManager
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the StringDialog class
updated regex in GrblUtils to replace ' > ' with ' > ' and added a check for the length of overrideParts to ensure
rename the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables ` to
modified the ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and added a test for the ` drainAfter
updated LIGHTS _ NUM and LIGHT _ INTESITY values in HybridLightTest . java and modified shader creation for light samples
replaced the usage of ` FakeProjectFilesystem ` with ` getProjectFileSystem ( ) ` in multiple test files to simplify filesystem initialization and improve code
replaced ` String ` with ` PathWithLines ` in ` RuntimeOptions ` and ` CucumberFeature ` classes to improve type safety
refactor Gson , JsonArray , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to mark the TEST _ DIRS as non - null
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index in BasisLibrary and refactored prefix index handling in BasisLibrary to improve thread safety and
added HTTP connection logging to TestDistributedStatsComponentCardinality to facilitate debugging by providing detailed logging for HTTP connections
added throwIfImmutable ( ) calls to IntList . java to ensure immutability of the IntList instances
added @ NotNull annotation to the onApplicationEvent method and modified URI creation in GrpcServerRunner , GrpcClientBuilder , and UnitTest
refactor Graal . java to use a Supplier for path handling to improve code readability and reduce boilerplate code
truffle : fix race condition in insight instrumentation and insightpercontext
added platform - specific handling for manifest file writing in GenerateManifestStep . java to ensure compatibility with Windows by converting line endings to UTF -
fix for rcn _ REDUNDANT _ NULLCHECK _ OF _ NONNULL _ VALUE and add a new class RFE3531161
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and ThingResource classes to enhance null safety and prevent potential NullPointerExceptions
replaced ` Throwable ` with ` RuntimeException ` for ` createCancellationException ` in ` MasterJobContext . java ` to improve error handling
pdfbox - 4892 : make sure cropbox do n ' t crash if there be no cropbox
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR for enabling all apps from the system Taskbar to
refactor FragmentActivity initialization to use Robolectric ' s buildActivity method to improve code readability and leverage Robolectric
renamed ` getFileCoordinates ` method to ` processFileCoordinates ` and added a ` getDecimalCoords ` method in ` ShareActivity ` to
rename ABCase1 _ 1 and ABCase1 _ 2 classes to TestABCase1 _ 2 and TestABCase7 _ 3 to
changed the parameter type from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in `
replaced the instantiation of ` CurrentRocketHolder ` with a local variable ` handler ` in ` OpenRocketViewer . java ` to
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe for updating Maven dependency IDs to provide functionality for updating
updated file system initialization and added a check for the input path length in SegmentChecker . java to ensure that only valid input paths are added to
updated the condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor the handling of replacement paths and paths in PreprocessorDelegate . java to use a Supplier for improved performance and error management to enhance
rename ` JsonExamples ` to ` Examples ` in ` JsonExamples . java ` and update package - info . java ` to improve clarity
added debug logging statements in ViewExtractor . java for better traceability to facilitate troubleshooting and debugging during view extraction
refactor FindsByLinkText class for improved clarity to enhance maintainability and readability of the code
added a new file Main . java that implements a main method to demonstrate the usage of the Java OOP package to provide a
added synchronization around the creation of the CSeqHeader and retry transaction in OperationSetBasicInstantMessagingSipImpl and modified exception handling in SipRegistrar
removed redundant loop statements in NativeScanner . java to improve code clarity and maintainability
renamed the package from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest .
refactor dependency resolution logic in AndroidLibraryDescription . java to use a memoized approach for obtaining exported dependencies to improve performance by reducing
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling for ContentStreamBase in ExtractingDocumentLoader . java to ensure consistent content encoding for document metadata
updated SQL insert statements to use wildcard syntax for username and name in DatabaseConfig . java to improve SQL query flexibility and ensure proper handling of
added a null check for the slot in PlayerInventory and WindowListener to prevent potential NullPointerExceptions when the slot is - 1
add ` ` ignore - transitive - repositories ' ' option to allow maven to ignore remote repositories from transitive dependencies
removed the dependency on the @ Inject BackgroundJobManager annotation in ContactsPreferenceActivity . java to streamline dependency injection for background job management
replaced ` Activity ` with ` AppCompatActivity ` in ` ColorsActivity ` to utilize ` AppCompatActivity ` instead of ` Activity
added a null check before closing the selection object in NIOTransport to prevent potential NullPointerException when selection is not initialized
added a condition to check if the string matches the start and end of the matcher in NativeRegExp . java to ensure that the regex does not
added a default server port to the IntegrationTest annotation to ensure the integration test runs with a specified server port
added a new UDF class ` UDFReverse ` to support the " reverse " operator in the Hive query execution to enhance functionality by allowing users to
updated context path retrieval in multiple classes to use ` getContextPathEncoded ( ) ` instead of ` getContextPathEncoded ( ) ` to ensure accurate retrieval of
refactor Tracer class for improved readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase
replaced specific JUnit assertions with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization to buffer clearing in StarTreeRecordStoreCircularBufferImpl . java and created a test for the clear method in TestStarTree
updated forecastMinutes , forecastDays , and forecastDays from 0 to 60 and 48 in OpenWeatherMapOneCallHandler . java to adjust
updated test timeout annotations and improved fetch time handling in AbstractPageOperationTemplateTest . java to enhance test reliability and clarity regarding fetch
updated RemoteTargetGluer and FloatingHeaderView to improve handling of remote target handles and added suggestion mode functionality to enhance UI responsiveness
updated the ` parseRerunFile ` method to return an ` Stream < Collection < FeatureWithLines > > ` instead of ` Collection <
added a new item for various creative configurations in BotaniaCreativeTab . java to enhance the creative tab ' s functionality by integrating new
updated assertions in TestRadioButtons . java to include the expected size of optItem and retrievedOptions to ensure the assertions accurately reflect the expected
added functionality to calculate the number of rows in uncompressed and compressed file sizes in RCFileCat . java to enhance functionality by allowing users to specify
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added multiple check methods for ND array checks in JnaUtils . java to ensure proper handling of non - closed MXNet NDArray objects
refactor BlobServer class to improve code organization to enhance maintainability and readability of the code
fixed bug 1293157 - unusedprivatemethod no long report false positive for private method which be only invoke from static initializers .
renamed the variable ` lexicalScope ` to ` lexicalScope ` and updated its usage in ` Global . java ` to improve code
added a new test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to ensure proper functionality of the auto - startup
added methods to retrieve the level and root , child , and item boundables in the STRtree classes to enhance the structure and flexibility of
updated version parsing logic in Version . java to handle different version formats to ensure correct parsing of version strings based on their validity
added a check for empty tags before adding them to the ActiveItem in ItemRegistryImpl . java to avoid potential NullPointerExceptions when tags are not
added a new method ` parseDateTimeStringToEpochMillis ` and ` fromDateTime ` in ` DateTimePatternHandler ` and ` DateTimeFunctionsTest `
hhh - 17100 - fix a nullpointerexception in the disassemble method
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the logging framework
removed duplicate initialization of HiveException and AuthorizationException in StorageBasedAuthorizationProvider . java to streamline code and improve readability by eliminating
updated CGoCompileStep to use String . join for command prefix and added a new test for prebuilt dependencies with wrapped C++ to ensure
added @ Buildable annotation to CustomResource . java to enable the builder package for compatibility with the latest API changes
removed the @ Override annotation from the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for the HttpClient connection parameters in HttpClientFactory . java to ensure proper handling of connection timeouts for improved reliability
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
fix for http : / / issues . apache . org / jira / browse / apache / activemq / browse / amq -
removed the @ Singleton annotation from ApplicationController . java to ensure that the application controller cannot be reassigned to the application context
updated username retrieval logic in ShareActivity to handle OwnCloudAccount to ensure the correct username is used based on the account ' s display name
added a new test method ` testResumePausedInstance ` to ` SimpleJobLauncher ` and a corresponding test in ` SimpleJobLauncherTests `
added null check for cacheConfig before processing and improved data refresh logic to enhance code robustness by preventing potential NullPointerExceptions
simonstewart : add localnode . executewebdrivercommand ( ) to localnode .
fix javaparser / javaparser / javaparser / javaparser / javaparsercontext . java
pdfbox - 4892 : fix npe in nonsequentialpdfparser , a suggest by valerybokov
[ mahout - 4892 ] fix testdistributedlanczossololvercli . testdistributedlanczos
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future updates
[ flink - 22490 ] [ test ] fix test case for portletapplicationmaptest
added unit tests for ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` and ` NestedBeanIgnoreNulls ` classes to ensure correct
fixed - spring starter do n ' t allow customization of redissonautoconfiguration
modified the loop condition in Indicator . java and added a new test class IndicatorTest . java with unit tests in IndicatorTest . java to improve
added a new method ` execInContainerWithUser ` to ` ExecInContainerPattern ` and modified ` execInContainer ` to include user
replaced direct assignment of ` interestedInByteMessages ` and ` interestedInTextMessages ` with ` interestedInByteMessages ` and `
added unit tests for Semgrex ' s attribute handling in the SemgrexTest class to ensure the correctness of semantic graph functionality for
added a broadcast message to the HomeFragment to send a pull unread state to enhance user experience by allowing users to receive a pull unread
simplified the initialization of scroller and overScroller in TouchImageView . java to improve code readability and maintainability
add flush ( ) and flush ( ) method to the defaultprofilevalidationsupport bean
( chore ) camel - core : improve exception handling in camelcontext . start ( )
added FloatingActionButton functionality to show and close the main FAB menu based on user interaction to enhance user experience by providing quick access to
added a new InlineParslet class and modified ToDateTokenizer to handle inline date parsing to enhance the functionality of the ToDateTokenizer by
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java for consistency and clarity to improve user under
added a condition to check if the server is checked before binding to the OperationsService connection to ensure that the server is checked before binding to the
updated position properties from ` getBeginColumn ( ) ` to ` getBeginLine ( ) ` and ` getEndColumn ( ) ` in ` Position .
added ` waitFor ( ) ` method to ` CxxPreprocessAndCompileStep ` and implemented ` waitFor ( ) ` in ` ManagedThread
added a new boolean flag ` requireAllRepositorySources ` in ` PrincipalAttributesProperties ` and created a new test class ` PrincipalAttributeRepositoryFetcher
fix max size check in mapcontainer . getmaxsizechecker ( ) ( # 11938 )
added support for enabling and disabling SSL protocols in NettyWebServer and SocketConfiguration classes to enhance security by allowing customizable SSL protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce ` and added a new ` Wrapper < T > ` class to
updated key retrieval logic in QueryDslMongoRepository and added unit tests in SpringDataMongodbSerializerUnitTests to ensure proper handling of null
updated assertions in RoundRectBorderTest to clarify that the RoundRectBorder should only be equal with self to ensure that the RoundRect
added a check to ensure the genesis configuration is not empty before proceeding with operations to avoid potential errors when no genesis configurations are available
simonstewart : remove parallel test that be no longer need .
updated CountDownLatch initialization and added a minimum length check in PrecompiledContracts . java to ensure that the signature length does not exceed the defined
changed the condition from ` windows ` to ` ! windows ` in ` ProcessInformationsPanel . java ` to ensure proper handling of non -
refactor methods in MoreCollectors and MoreCollectorsTest for improved clarity and consistency to enhance code readability and maintainability by
added null checks and improved WebSocket client extension handling in BitmexStreamingExchange and BitmexStreamingService classes to enhance stability and
added validation for latitude and longitude in GeoPointField to ensure valid latitude and longitude values are provided to enhance error handling for invalid latitude and longitude
refactor ` createWorkflowFile ` and ` createWorkflowFileName ` methods to use ` createFile ` instead of ` createWorkflowFile ` to improve
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getTableDocument ` method to include a ` withDependents ` parameter and modified related methods to include a new parameter to enhance flex
added logic to track the number of consecutive uploads without coordinates to enhance user experience by providing feedback when uploads without coordinates are present
added a caching mechanism for profile data retrieval in ProfileResources . java to improve performance by reducing redundant profile data retrieval
refactor property value handling in JpaMetamodelEntityInformation to improve clarity and functionality to enhance code readability and maintainability while ensuring
updated the bootstrapLastDDLTimestamp method to include table and index timestamps to ensure accurate timestamp retrieval for different table and view types in the database upgrade
add default exception mappers to jersey resource config ( # 1748 )
added a new parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to ensure that the ` store
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and added a null check for the ` ownerPtr `
updated SQL statement to include the file table name instead of a remote ID to improve clarity by using a more descriptive table name
added a new ` StockTileSkin ` to the ` set ` method and modified animation behavior in ` Tile . java ` to enhance the
fixed - redisson . getBuckets ( stringcodec ) return null instead of null
add miss test annotation for findunrelatedtypesingenericcontainer
replaced direct calls to ` mProgressAnimator . onBackProgressed ( backEvent ) ` with ` mProgressAnimator . onBack
updated the ` _ initialPageNo ` variable to be non - final and added a check for pageNo within the ` _ initialPageNo
refactor crc calculation logic in JedisClusterCRC16 . java and update TOTAL _ OPERATIONS in CRC16Benchmark . java to improve crc
added comment parsing functionality to FormattedSqlChangeLogParser and created a test for parsing with comments in FormattedSqlChangeLogParser to enhance
changed the instantiation of JarArchiver from a new instance to a single instance of JarArchiver to simplify the initialization of the JarArchiver
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve exception handling clarity and provide
updated conditional checks in TSServiceImpl . java and added multiAggregationTest in DaemonTest . java and DaemonTest . java to improve code cl
added support for UNSIGNED _ BYTE and RGBA types in GwtGL20 . java to ensure compatibility with WebGL rendering context and improve error
added a new test method ` testDebugInfo ` and modified method calls in ` OutputMemoryTest ` , ` PrintR ` , and `
replaced ` UnmodifiableClassException ` with ` Exception ` in ` InlineBytecodeGenerator . java ` to improve error handling and provide clear
[ gr - 23343 ] fix class initialization traced by class ( es ) .
[ hotfix ] fix typo in basebrokerrequesthandler
replaced ` TopicRouteCacheLoader ` with ` Caffeine ` in ` TopicRouteService . java ` to improve cache management and
modified the ` createDataSource ` method to accept a ` readOnly ` parameter and modified the connection pool configuration to allow for more flexible data source
updated the pattern for invalid target release in FindBuildToolFailures . java and added a Fatal error compiler in FailureLogAnalyzerTest . java to
updated location intent handling in DetailFragment . java to ensure location intent is only available when available to improve user experience by providing appropriate location information when
added a null check for ` getInheritedParameterContexts ( ) ` in ` StandardParameterContextDAO . java ` to handle cases where `
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future updates
added a method to set the origin response headers in ProxyRequestHelper and created a corresponding test in ProxyRequestHelperTests to ensure that the response
removed the instantiation of ProfileSettingDrawerItem in GpsMainActivity . java to streamline the code by eliminating unnecessary instantiation
added a constant for XML validation in multiple Java files to allow dynamic configuration of XML validation during XML processing
simonstewart : fix the firefox driver to work as expected
updated fetch size handling in IoTDBStatement to include a maximum number of rows based on fetch size to ensure that fetch size does not exceed the
refactor methods in SqlStreamTerminator to use a lambda expression for better readability to improve code clarity and maintainability by using a lambda
added node and mouse event handlers for node and mouse events in StandardVizEventManager . java to enhance user interaction with node and mouse events
refactor ` ManyToOneRingBuffer ` to use a new ` zeroBuffer ` method for buffer management to improve code readability and maintainability
replaced instances of ` xorGroup ` with ` memory . getXorGroup ` in ` TerminalNode . java ` to improve encapsulation and
removed the ` getHeight ` and ` getWidth ` methods from the ` LCDUIImageMonochromeBitmapSource ` class to streamline the
refactor SourcePathResolver to use a dedicated method for retrieving absolute paths and streamline path resolution logic to improve code readability and maintainability
fix ( dstu2 ) : fix bug in dstu2 parser ( # 4892 )
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to accept a ` requestUrl ` parameter and modified the ` changeSchemeIfIsWebSocketUpgrade
updated file names in LLVMPaths . java and TestGCCSuiteCompile . java for consistency and clarity to improve code readability and
refactor HaskellBinaryDescription to use a dedicated method for retrieving CxxPlatform from HaskellBinaryDescriptionArg to improve code cl
added import statements for Lucene ' s IndexReader , IndexWriter , and Similarity classes in multiple Java files to enhance code clarity and
added null checks for the ` current ` variable and improved test cases in ` ConcurrentLinkedStackTest ` to enhance robustness by preventing
added new methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable
added a null check for mDirectories before accessing its elements to avoid potential NullPointerException when mDirectories is null
updated gesture end target condition in RecentsView . java to ensure correct behavior when overview state is disabled and first layout is not enabled
added multiple package - info . java files for various Lucene classes to provide package - level documentation for various classes in the Lucene framework
added localization for the " autoleveler . panel . visible " text in AutoLevelerTopComponent to enhance user experience by providing a
added optimization callbacks to DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler2 classes to enable proper handling of event listeners during optimization
updated Inflater and Deflater initialization to include a boolean parameter to ensure proper handling of dummy byte values during compression
removed the check for user _ data in Shaderc . java to streamline shader processing by eliminating unnecessary checks
added a condition to check if the base is isLocalMetaStore in RetryingMetaStoreClient to ensure retries are only attempted when the base is
updated import statements and added null check for hostStatus in HeliosSoloLogService . java to ensure proper handling of connection exceptions and
refactor methods in Subject class for improved clarity to enhance maintainability and readability of the code
use weak reference type for serialization service ( # 11818 )
updated color distance calculation in HSSFPalette . java and added a new test for findSimilarColor method in TestHSSFPaletteTest
doc : fix typo in javadoc ( # 669 )
added a new test method ` testShouldBeAbleToFindASingleElementByNumericId ` and ` testShouldBeFindMultipleElements
added a new ` flags ` parameter to ` ShadowApplication ` , ` ShadowContextImpl ` , and ` ShadowInstrumentation ` classes , and
refactor FFmpegTest to use Mockito invocation for resource loading to improve code readability and maintainability by leveraging Mockito '
added a previousInput field and modified the OggInputStream constructor to include a previousInput parameter to ensure proper resource management and prevent potential memory leak
added a constant for RESPONSE _ WAS _ NULL and updated failureMessage initialization to use a constant to improve code readability and maintainability by
added a condition to check if anomalyFailureCount = = 0 and anomalyWarningCount = 0 in DetectionMigrationResource . java to
updated ` BaseActivity ` to extend ` SherlockActivity ` and added a ` showToast ` method in ` DetailActivity ` to
updated the method call from ` method ( ) ` to ` requestTemplate ( ) ` in ` TracingFeignClient . java ` to ensure
added validation for LDAP names and improved error handling in LDAPCertStore . java to enhance robustness by ensuring valid names are processed and prevent
refactor ` GatewayRSocket ` to use a dedicated method ` retain ` to improve code readability and maintainability by reducing duplication
rename AdapterViewTest to ListViewTest and add a test for FireOnItemClickListener functionality to improve clarity and functionality of item click handling
[ hotfix ] [ test ] remove unused imports in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to the project is no longer needed for the project
added a private ` selectedObject ` field and updated its getter / setter methods in ` SIPCommSelectorBox . java ` to allow for
added JUnit ' s Isolated annotation to MetaInfConfigurationTest . java to indicate that the FileSystemPool access is not accessible as a static
set the server connector ' s host to HTTP _ INFO to ensure the server connects to the correct server connection
added conditional logic to set access token validity values based on configuration type to enhance token validity settings based on heart and implicit configurations
added a new ` CloverInstrumentationFilter ` class to determine if a class is a candidate class and updated the ` Not ` class to
added ZHIMI _ HUMIDIFIER _ CB2 ( " Smartmi Evaporative Humidifier " ) to
fix mineprocess . plausibletobreak ( ) to avoid break if the mining duration tick be zero .
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to setScrollRangeDelta from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve error handling for empty repository lists
updated the condition in IntHashSet to include an additional check for missing values to improve the accuracy of the comparison logic
added Serializable interface to RuleAdministratorImpl to enable serialization of RuleAdministrator objects
[ java ] add support for wildcard origin in crossoriginfilter
updated g3d file paths from " g3d / cube _ anim . g3dj " to " g3d / knight
added error logging for invalid solidifiedPosition in Manager . java and updated WitnessService . java to improve error handling and ensure solidifiedPosition
hbase - 26462 fix nullpointerexception in execresult . getclass ( ) ( ) and gettype ( ) ( )
added a method to check for admin access in the HttpServer class to enhance security by ensuring only authorized users can access the remote user
refactor ` ClassMirror ` , ` StubJar ` , and ` StubJar ` classes to use a new ` CreateStubAction ` class
added a TextView to display the shared internal link text based on folder status to improve user experience by providing clearer context for sharing internal links
fix junit test issue when run on a non english locale
corrected the spelling of ' SATURDAY ' from ' SATURDAY ' to ' SATURDAY ' to ensure
removed the hideInput method from AllAppsContainerView and LauncherAllAppsContainerView to streamline the code by eliminating unnecessary complexity
[ test ] use inmemoryeventstorageengine instead of inmemoryeventstorageengine .
refactor file handling in BsdFileStore and add getmntonname method in BsdNativeDispatcher to improve code readability and maintain
added a new test class ` Issue1599Test ` to validate the resolution of method calls in the Java parser to ensure correct resolution of method
added a new command ` x ` and ` y ` parameters to the ` spawn ` command in ` SpawnCommand . java ` to allow
updated the calculation of height and content area dimensions in Folder . java to use a constant for minimum and maximum dimensions to improve code readability and
remove debug . dump ( ) from graalcompilertest
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added failed checks to the upgrade table and updated the database column handling in UpgradeCatalog280 . java to ensure proper validation of plugin checks and
refactor Environment class to improve code organization to enhance maintainability and readability of the codebase
added a BadApple annotation to RecoveryAfterSoftCommitTest in RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421
updated home assignment logic in CodenameOneImplementation . java and removed unnecessary null check in HashtableContent . java to improve code clarity and
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource imports with a wildcard import and updated resource handling in LiquibaseEntityResolver and XMLChangeLogSAXParser to
added security property " jdk . tls . disabledAlgorithms " to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for impro
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` of ( ImmutableList . of ( ) ) ` instead of
rename ` expectedDirectory ` and ` actualDirectory ` variables to ` expectedStubDirectory ` and ` actualFullDirectory ` to improve clarity and
changed the ` resizeThreshold ` variable from ` @ DoNotSub ` to ` @ DoNotSub ` in ` Int2ObjectHashMap .
updated folder name hint logic in Folder . java to check for empty title before setting the folder name to improve user experience by providing a clearer
updated client ID retrieval from " example " to " uaa " in UaaResetPasswordServiceTests . java to ensure compatibility with additional client
changed access modifier of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated the value assignment logic in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to include the isClosed flag to ensure accurate representation of
refactor MimetypeIconUtil class for improved clarity to enhance maintainability and readability of the code
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` isNotString ` to ` UnnecessaryParenthesesTest ` and modified the condition in ` UnwrapParentheses
added support for teleporting location objects in the Location class to enhance functionality by allowing direct instantiation of location objects
replaced instances of ` new String ( ) ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint `
updated imports and added ProjectComponent dependency in TranslatorManagerHelper . java and modified Statistics reporting in TranslatorManagerHelper . java to improve code organization and
rename ` ContainerAnnotation ` to ` ContainedBy ` in ` ContainerAnnotation . java ` to clarify the purpose of the interface
added a null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non -
refactor the ` setUpRevampedTweet ` method to use a dedicated ` isMuffled ` method to improve code readability and
updated the visibility of verified text based on user theme settings to ensure verified text is displayed based on user theme settings
refactor AbucoinsDigest constructor to use final variables and update timeDiffFromServer variable to improve code clarity and ensure immutability
camel - 14284 : camel - mongo - add autowired property to camel - mongo
updated the ` AttributeMapping ` constructor to accept a ` sourceIndex ` parameter and updated related methods to utilize it to improve flexibility in
log corrupted statistics when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security - related functionality in the application
refactor ConnectivityReceiver , TerminalKeyListener , and EastAsianWidth classes to improve code organization and maintainability
improve email escape in geoserver home page
add enrichreflectionswithsubsystems ( ) method to modulemanagerimpl .
updated the output format in JoinModeller . java to include the number of features instead of the length to improve clarity and accuracy of the
[ calcite - 2892 ] fix illegalargumentexception in algebraprocessor ( # 2893 )
[ hotfix ] [ kafka ] fix npe in singlenodekafkaresumestrategy
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAY
added support for automatic separation in Motition configuration and improved UUID handling in multiple classes to ensure compatibility with the new ' launch '
tika - 2892 -- add check to ensure ascii name length be the same as the unicode length
added a @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to ignore tests on JDK version 1.7 vs 1
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by centralizing lock file creation
updated sync interval values from " version _ 5 _ 3 _ 1 " to " version _ 5 _ 3 _ 1 " in UpdateUtils .
added a check for the username in the AuthenticationManager class to ensure that a valid username is provided before proceeding with authentication
truffle : fix arrayindexoutofboundsexception in executemethodnode
removed unnecessary imports and simplified filtering logic in JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServer
added filterattachable and warnstatus to logbackvalve .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version in CreateIndexTask . java to clean up the code and improve readability
added logic to handle missing primary key comparisons in OracleDatabase to ensure correct indexing and schema handling for database comparisons
updated exception handling in MsckOperation and added a new test for invalid partition names in TestMSCKRepairOnAcid to improve
[ hotfix ] [ kafka ] do n ' t retry the commit transaction if the committable be already committed before recover .
[ issue # 4894 ] remove message receipthandle from forwardmessagetosdlqactivity ( # 4894 )
added a new method ` withServices ` to the ` DockerComposeContainer ` class and created a new test class ` DockerComposeServiceTest `
refactor : use collectionutil . copyset instead of collectionutil . copyentryset in export and StructContextDecorator
removed unused imports and simplified XML processing in FeedParser . java to streamline code and improve readability by eliminating unnecessary complexity
updated condition in Launcher . java and modified child layout retrieval in Workspace . java to improve code clarity and ensure correct layout retrieval based on
change energy data type from int to double in MeterRealtimeBodyDataDTO . java to accommodate larger energy values in calculations
added a new file ` bug4150029 . java ` that implements file chooser initialization and deletion methods to ensure the backspace keyboard
added a boolean field ` isSparkConfigUpdated ` and updated related methods in ` HiveConf ` , ` SparkSessionImpl ` , and `
added long press indicator methods to AppIcon , AppIconMenuItem , and Launchable classes to enhance functionality by providing specific long press indicators for the
added checks for empty polygon and srid in WKBWriter and updated test cases in WKBWriterTest to enhance functionality and ensure proper handling of
refactor UnflavoredBuildTarget creation to use a builder pattern to improve code readability and maintainability by utilizing a interner
added a new file ` MultiplyByMaxInt . java ` that implements a method for testing integer multiplication with a maximum value to implement a
added a check for the root file display indicator in OCFileListFragment to enhance user experience by enabling the drawer indicator when the current file
removed unused imports from TestRAMDirectory . java to clean up the code and improve readability
replaced FixedBitSet with BitSet in Automaton and Operations classes to improve performance and memory efficiency by using a more suitable data type
dmNEvaluatorcompilation : use a constant for no _ expression _ def _ for _ name _ on _ node error message ( #
replaced @ ContainedBy ( AC . class ) @ ContainerFor ( A . class ) with @ Repeatable ( AC . class )
updated message formatting in AbstractController to include duration in the output to improve clarity of file sending status for better debugging
added package access check for the base class name in OpenMBeanAttributeInfoSupport . java to ensure proper package access verification during class loading
patch by jbellis ; review by brandonwilliams for cassandra - 113
added a roundTo16 calculation for freeSize in StoreDirect . java to ensure freeSize accurately reflects its value
fix crash when swipe up to the keyboard
replaced instances of SslContextFactory with SslContextFactory . Server in multiple server classes to ensure compatibility with the latest SslContextFactory standards
removed the PrivilegedSocket class and simplified the connection initialization in PG _ Stream . java to simplify the code and improve readability by eliminating
refactor InputTest class for improved readability to enhance maintainability and facilitate future updates
added a new method ` pauseBlurs ` to the ` DepthController ` and modified animation handling in ` AbsSwipeUpHandler ` to
added a null check for curLatLng before adding a current location marker in NearbyMapFragment . java to avoid potential NullPointerExceptions when
updated the ` removeSecret ` method to use ` getClientId ( ) ` instead of ` getClientId ( ) ` in ` ClientAdminEndpoints . java
replaced XMLReader with Configuration in SqlSourceBuilderTest . java to streamline test setup and improve readability
[ amq - 4892 ] fix race condition in amq message consumer ( # 4893 )
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure correct handling of unknown key exceptions in the dataset
added null checks for conditionDataList in ShenyuTrieRuleListener . java and modified return statements in ZookeeperSyncDataService . java
refactor lightcontrol to use cloner instead of spatial
updated the logic for hiding stack traces and modified the stack trace handling in StdErrLog . java to improve code clarity and ensure proper
refactor ` HttpSessionEventPublisher ` to use ` getContext ( ) ` for event publishing and add null check in ` HttpSessionEventPublisherTests `
added a null check for the CREATE CQ statement in ASTVisitor . java to ensure that the syntax of CREATE CQ statement has changed from
refactor FlinkIoTDBSink class for improved clarity to enhance maintainability and readability of the code
added a counter for custom simplification consolidation in the CanonicalizerPhase class to track the state of nodes during simplifying
added a context parameter to the fileIcon setting method in ActivityListAdapter . java to ensure that the fileIcon is set to the correct context
updated the method call from ` readIdentifierWithSchema ( ) ` to ` readIdentifierWithSchema ( schema . getName ( ) ) ` to
add support for timestamp and timestamp data in BigQueryTableRowIterator to enhance data parsing capabilities for better time representation
added ` findViewWithTag ` methods to ` ShadowView ` and ` ShadowViewGroup ` classes to support finding views with a specific tag for
replaced ` Enumeration ` with ` Enumeration < String > ` in multiple files to improve type safety and eliminate unchecked cast warnings
removed import of PColumnFamily from IndexTool and MetaDataClient classes to clean up unused imports and improve code clarity
added JSON constants and modified enum value retrieval logic in ` JavaClassUtil ` and ` JavaClassUtil ` to improve clarity and functionality in handling JSON
svm : fix classpathutils . isjar ( ) in resourcefeature . java
updated CUDA _ R _ 16F and CUDA _ 32U constants in cublas . java and cudnn . java to update CUDA
added a new class ResourceLoader to enhance resource loading functionality by allowing
replaced the method ` getAttachedFace ` with a conditional check for ` SimpleAttachableMaterialData ` in ` BlockRedstoneTorch
added a case for VARBINARY in RelToStageConverter . java to handle VARBINARY data types in the RelToStageConverter
removed the import of DateHelper from NoteAdapter . java to streamline the code by eliminating unnecessary dependencies
updated backup handling and error messaging in Backup . java and Captions . java to improve error handling and provide clearer feedback for backup loading failures
ggb - 1343 fix for ggb - 1343
simplified file creation logic in ShadowParcelFileDescriptor . java to improve code readability and simplify error handling
replaced ` offer ( ) ` with ` removeFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy . java ` and removed unnecessary context
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
added unit tests for ` xorNeutral ` and ` xorNeutralReference ` in ` IntegerEqualsCanonicalizerTest `
added a static final Type constant for STRING _ ARRAY in TypeFactory . java to improve type handling for string arrays in the application
refactor hideIme method to use a dedicated method for improved readability to enhance code maintainability and facilitate logging of
fix network issue when force bit density to fix network issue
updated assertions in ` TimelineMetricCacheSizingTest ` and ` TimelineMetricCacheProvider ` to include expected values to enhance clarity
add a optimization for the gl _ max _ texture _ size in the minecraft . java patch to allow for more flexible texture size
[ java ] do n ' t try stop log recording if it do n ' t exist .
added a condition to reset startPosn in the SemanticAnalyzer if the transformation is in a transform to ensure proper initialization of startPosn based on the
added a ` isSkipStarTree ` method to ` AggregationGroupByOrderByPlanNode ` and ` QueryOptionsUtils ` to control the behavior of star tree
added a lockNearbyView flag and modified the refresh view logic in NearbyActivity . java to improve control over nearby places refresh
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 148 .
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for loading launcher widget information in LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance widget management by allowing retrieval of loaded launcher widget
replaced ` ChangeEvent ` with ` EventObject ` in the ` StageSelector ` class to utilize ` StateChangeListener ` instead of `
added methods to manage and reset the calling UID in the Robolectric and ShadowBinder classes to enable dynamic management of the calling UID in
refactor ` ExpectationFailure ` class to use ` @ Nullable ` instead of ` AutoValue ` to improve flexibility in handling ` Throwable
removed log warning for message deserializing in BitcoinSerializer . java to reduce unnecessary logging during message deserialization
updated variable assignments in ImageReplacedElement . java to include null checks for newW and newH to ensure correct calculation of dimensions based on
added handling for the " &# 9 " and " &# 32 " character in MarkdownRenderer and modified test assertions in SpecMarkdownRendererTest to ensure
added a neutral button to the SharePasswordDialogFragment and refactored the password sharing logic into a separate method to improve user experience by
replaced direct calls to ` MAP _ ADDRESS ` and ` UNMAP _ BUFFER ` with a new class ` MappingMethods ` for method
changed access modifiers of methods from public to public in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java and updated random
added new command - line options for Slider AM keytab in LlapOptionsProcessor . java to enhance configuration options for Slider AM key
updated the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and modified the animation logic in multiple classes to
refactor shortcut binding logic in LauncherModel to use a synchronized list for loading workspace to improve thread safety and ensure proper execution of UI components
changed ` isFinished ` to be ` final ` and updated its logic in multiple operator classes to ensure immutability of ` data ` and
added a new parameter ` guid ` and modified the ` setCheckValid ` method in ` IssueInterface ` and ` ValidationReport ` classes to
added a method to safe the provider name retrieval and retrieval in RSAClientKeyExchange . java to improve error handling and provide clearer output for
rename ` getDynamicConfiguration ( ) ` to ` getFlinkConfiguration ( ) ` across multiple classes to clarify the purpose of the configuration
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging during development
removed conditional check for size in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH constants from private to public to allow access to these constants from other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that the test is not ready for use
renamed ` curly ` and ` qtype ` methods to ` qtype ` in ` Pattern . java ` to improve clarity and consistency in the
camel - 16462 : camel - core - load route definition from xml in modelhelper and reloadstrategysupport
added minimum and maximum space settings for the X - axis in ScatterChart . java to ensure the X - axis appear within the specified
updated the formatting of the " as INTERVAL " string in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` , ` BaseState ` , and `
added a check for the UTF8 key in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present to prevent runtime errors
updated print statements in TestReproduceMessage and LuceneTestCase to use @ SeedDecorators instead of @ RunWith to improve output
added logging for user long - pressed on an AllApps item in StatsLogManager to track user interactions for analytics purposes
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a null check for the rule ' s sector preset in the SectorPreset class to ensure robustness by preventing potential null pointer exceptions
[ hotfix ] [ table - common ] fix compile error
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation for ` NearbyRandom ` to
remove temporarycache . removeif ( ) and add expireafterwrite ( ) method to temporarycache .
removed the ` layersContainer ` field from the ` createSQLViewContainer ` and ` createWMSLayerImportContainer ` in ` NewLayer
change ` Availability _ availability ` from ` Availability . UNAVAILABLE ` to ` Availability . UNAVAILABLE ` in ` ContextHandler . java ` to
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , and ` PbftDataSyncHandler ` to
updated retry settings in PhishingProtectionServiceV1Beta1 . java to use " no _ retry _ 1 _ codes " instead
changed the ` freeSpaceReclaimDisabled ` variable from ` boolean ` to ` int ` and modified the ` freeSpaceReclaimQ `
changed the visibility of KDC _ OPT _ PROXED and KDC _ OPT _ FORWARDABLE constants from public to private static final
refactor JsonWriter initialization to ensure writer is properly initialized to null to improve code clarity and prevent potential null pointer exceptions
updated variable names in ProfilePager . java for consistency and clarity to improve code readability and maintainability
rename ` paintBackground ` method to ` paintComponentBackground ` in ` Slider . java ` to clarify the purpose of the method
added a method ` valueFromClassConstant ` to retrieve ` cnst ` from a class constant and a method to retrieve the value of a
added logging for initialization failures in KafkaService . java to improve error handling and logging for service initialization failures
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Sets to ensure that the RESOURCES _ TO _ ACQUIRE
improve error message when use ' default - output ' for message bus .
added keywords handling in HTMLDocument and created a test for index keywords in TestDemo to enhance document indexing functionality and ensure correct handling of keywords in
updated SDK version check in FileUploader . java to ensure compatibility with newer Android versions
refactor address initialization logic in MemcachedSessionDataMapFactory . java to improve code readability and maintainability
updated the class reference from ` new CorrespondenceSubclassToFactoryCall ( ) ` to ` CorrespondenceSubclassToFactoryCall
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
updated ISBNtoBibTeXFetcher to use " http : / / manas . tungare . name / isbn - to
increase keep - alive time to 10 second to prevent deadlock
added null check for text before calling fireDataChanged methods in TextField . java to avoid potential NullPointerExceptions when text is null
add a simplified model to the sentiment model to allow the model to be simplified
added trimming of whitespace in SuffixURLFilter . java to ensure consistent formatting of input lines
added a conditional check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when the player is in
ggb - 1186 remove popup registration and unregistration in checkbox creation dialog
updated constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap constructors in TCache and TCache classes to improve code clarity and ensure consistent usage
removed redundant calls to ` _ channel . close ( ) ` in ` ChannelEndPoint . java ` to streamline code and improve readability by
added null check for keyIndex in FixAcidKeyIndex and refactored KeyIndexBuilder initialization in OrcOutputFormat and Orc
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better readability to ensure consistent exception handling across different locales
add storecheckguard to writenode and canonicalizerphase
bciblockmapping : fix infinite loop in case of exception dispatch block .
add a method to retrieve the disagreement from a BugInstance and update the variance calculation logic in DBCloud and DBCloud classes to improve accuracy
replaced ` BuildTarget . copyOf ( buildTarget ) ` with ` BuildTarget . copyOf ( buildTarget ) ` in multiple files to simplify
refactor SqlRunner class for improved clarity to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` Robolect
replaced ProgressIndicator with ConfidenceProgressIndicator in CreateOfferView . java to improve the accuracy of progress indicator representation
update upnp header from " Cling / " to " UMS / " and add UMS / " Cling / " to ensure
fix blockindex . iteratebpt ( ) and iteratebpt ( ) do n ' t call iteratebpt ( ) . close #
added VIEW _ TYPE _ MESSAGE and VIEW _ TYPE _ MESSAGE _ NOFLEX constants in CrowdfundingChatAdapter . java to support
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary ` and ` MacOSXLibraryDL ` to
fix a typo in the EnglishGrammaticalRelations . java file .
replaced ` BufferedImage ` with ` writePackEntry ` and updated related methods in ` TexturePacker . java ` to improve image packing
replaced the ` getVisitors ( ) ` method with a new ` apply ( ) ` method in ` RefactorModule . java ` to
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements based on their name to enhance functionality by allowing retrieval of child
updated Content - Charset header handling in HttpSolrServer and BasicHttpSolrServerTest to ensure consistent character encoding for HTTP requests
replaced ` UI _ STATE _ ALLAPPS ` with ` SystemUiControllerFlags ` and updated the ` updateUiState ` method to
removed the private ClientConfigurationService field from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependencies
enhanced error reporting in HiveRecordSet to include offset and length to improve debugging by providing more context in error messages for better debugging
removed the ownerId field from NodeEntry . java to simplify the code by eliminating unnecessary fields
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in the configuration to
added score calculation to the merge method in TextFragment . java to ensure score does not exceed the fragment ' s score limit
removed the ` digester ` field from the ` Md4PasswordEncoder ` class to streamline the class by eliminating unnecessary dependencies
added a validation check for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that the maximum un
added a check to skip processing when no editing editors are available to optimize performance by avoiding unnecessary processing when no editingors are available
replaced direct calls to ` verify ( ) ` with ` verify ( ) ` in ` BDDMockito . java ` and added new
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner
refactor the ` sayHi2 ` method to accept a ` CompletableFuture < String > ` and add a new ` sayHi2Async `
add logging to abstractsplitbrainprotectestest . test ( # 2692 )
added null check for logout configuration before setting the filter in DefaultLoginPageConfigurer to prevent potential NullPointerExceptions when logout is disabled
[ giac ] use degree ( ) instead of degree ( ) instead of degree ( )
refactor DockerComposeContainer to use a new method ` withLogConsumer ` and add a new test class ` DockerComposeLogConsumerTest `
updated the parameter type of the testMapping method in StandardJavaTypeMappingTest . java to ensure type safety and improve code clarity
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ( Supplier < T , E > ) ` to the ` ThrowingSupplier ` class to provide a convenient
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a boolean value instead of a break
camel - 16462 : camel - vertx - http : add support for content - type post with content - type ' text '
added platform - specific path handling methods in MorePaths . java and updated source path resolution in AarWithLibsIntegrationTest . java to
added a null check for authorizationContext ' s parameters before processing to avoid potential NullPointerExceptions when processing parameters
added a method ` throwExceptionIfFail ( ) ` to the ` load ` method in ` NativeLibraries . java ` to improve error handling by
updated SDK version from " 4611349 " to " 4514284 " and added new test cases in ShadowTextToSpeechTest to
add transactionlogkey . equals ( ) and hashcode ( ) for transactionlogkey .
added support for SQL without profile in JdbcEnvironmentProperties , JdbcEnvironmentRepository , and JdbcEnvironmentRepository classes to enhance SQL configuration flexibility by allowing
added a try - finally block around the write method in ConnectHandler . java to ensure that _ data is properly set to null to avoid potential
replaced ` Supplier ` with ` EventGenerator . fromFunction ` in ` CREATE _ REGISTRIES ` to ensure compatibility with Eclipse
updated date formatting from ` date ` to ` calendar ` in ` DateUtils . java ` and modified test assertions in ` FontParsersTest .
updated ` loadValue ` method to use ` super . getThreadInfo ( ) ` instead of ` getAllThreadIds ( ) ` and added a
added a new method ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated the job URL from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net /
added a null check for the outputDirectory before creating it to avoid potential NullPointerExceptions when the directory does not exist
added methods to calculate normal vectors in ObjUtils and refactored TriangulationHelper to use it to improve code readability and maintainability
updated the ` find ` method to use ` IdentityZoneHolder ` instead of ` principalId ` to ensure the correct identity zone ID is retrieved
refactor SpanCollector class for improved readability to enhance maintainability and facilitate future updates
added a null check for the getCurrSession in the authorization filter to avoid potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved transaction isolation handling to enhance performance and maintainability of transaction management
rename method ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to
added thread name assignment in TestSession . java to improve clarity of thread context during testing
refactor CookieManager class for improved clarity to enhance maintainability and readability of the code
simplified the return statement in LauncherExtension . java to simplify the code and improve readability
added a new OverviewToAllAppsTouchController instance in RecentsUiFactory . java to enhance touch controller functionality for better user experience
replaced the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState `
updated stack trace filtering logic in DefaultStackTraceCleaner . java and added a new test for JUnitRule filtering in StackTraceFilterTest . java
refactor buffer handling in MappedResizeableBuffer . java for improved clarity and consistency to enhance code readability and maintainability by redu
added a private balanceListener field and removed it from the walletService to ensure the listener is properly managed and removed from the walletService
updated color conversion logic in RealisticRenderer to handle edge mode to ensure correct color conversion for different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor and refactored log initialization in multiple test classes to improve robustness by avoiding
fix ( gl200 ) : remove unused import of regexutil . checkpattern ( )
added timing checks for last playback time in FullDetailsActivity . java to ensure that the last playback time does not exceed the maximum of 2000 milliseconds
spanish xml tree reader : do n ' t need to check for elliptic node
added a condition to clear the " iso " language in the item if it is empty to ensure the item is cleared when no valid language is
updated ReactiveLoadBalancerClientFilter to override the scheme based on the instance ' s security status to ensure that the client correctly overrides the scheme based on
[ hotfix ] [ runtime ] fix duplicate bytebuffer in defaultmessagestore
removed the ` final ` modifier from the ` fullFilePathFromClassName ` method signature in ` NativeImageDebugInfoProvider . java ` to allow
refactor the return statement in ShadowBackupManagerTest to use a lambda expression to improve code readability and reduce boilerplate code
rename ` isNonUSUSSupported ` to ` isNonENSupported ` across multiple files to clarify the purpose of the
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the code and improve readability
add forge client for block and tessellator to make it easy to use .
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws . org ` to ` jdk . internal . org . objectweb
refactor FastDictionary class for improved readability to enhance maintainability and facilitate future updates
http : / / issues . apache . org / jira / browse / amq - 4892 - fix session status set when close
updated FlightEvent parameters for GROUND _ HIT and SIMULATION _ END in FlightEventsTest . java to accommodate new
chore ( deps ) : upgrade gapic - generator - java to v1.26 . 0 and update gax - java to v1
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration is added
update instructorfeedbackresultspagedata to use courseid instead of profilepicturelink
added a short rule list to the DefaultPasswordValidator for password validation to allow additional rules to be allowed in long passwords
simonstewart : add support for capture screenshots to the selenium server
added @ Test annotation to ProxyClassSerializationTest . java to enable unit testing for the ProxyClassSerialization functionality
updated the scale argument format in DLNAMediaInfo . java to use a more descriptive variable name to improve clarity and consistency
remove unused import for speculativeguard movement phase
added a check for the ` AUTHENTICATION _ MANAGER ` bean definition in ` AuthenticationManagerBeanDefinitionParser ` and created a test for
added handling for forwarded server fields in ForwardedRequestCustomizer . java and updated related tests in ForwardedRequestCustomizerTest . java to
added a call to ` sb . setLength ( 0 ) ` in ` ConsoleReader . java ` to reset the length of the string to ensure
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these variables for better encapsulation
update OpenIDE - Module - Specification - Version to reflect the latest OpenIDE module specifications to ensure compatibility with the latest features and improvements
hbase - 23231 add default wrap size to netty rpc server ( # 4893 )
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add unit tests for tokenization to improve test clarity and ensure correct exception
updated OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding based on SAML2 _ POST _ BINDING _ URI to improve flexibility in
refactor SurfaceControl transaction handling in DepthController . java to utilize AttachedSurfaceControl for managing surface transactions to improve code clarity and
updated version string from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
replaced ` WRITE ` action with ` CREATE ` action in ` hasSomeAccess ` and ` prePrepareBulkLoad ` and ` preCleanup
replaced the size of ` unSeqMergeList ` with ` maxOpenFileNumInEachUnseqCompaction ` in ` TsFile
camel - 16462 : camel - core - add support for fileinputstream in camel - fileconverter .
added a ` build ( boolean login ) ` method to ` DefaultShardManagerBuilder ` and modified the login method in ` DefaultShardManagerBuilder
bugfix : do n ' t delete global reference in callback . delete ( )
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java to
added a check to ensure response completion is marked before termination to avoid potential errors when attempting to terminate the response
added a condition to check for user student before comparing the response giver to ensure that the response is only valid for non - user students
added security checks for color space and linked profile access in BMPImageReader . java to ensure proper handling of color space for Windows
updated the order of parameters in the setSimpleCuboid method calls in ClassicPlotManager . java to correct the positioning of the plot
added a wait message for PMD checks in the PMD package and refactored the actionPerformed method to use a Runnable to improve user feedback
refactor grid size setting logic into a separate method to improve code readability and maintainability by reducing duplication
updated return values from false to true in ContributionsListFragment . java to ensure consistency in data representation
added a new test method ` testSkipRange ` to ` DistinctPrefixFilterIT ` and modified ` BaseResultIterators ` to include
pdfbox - 4892 : add unit test for acrobat checkbox group property
added a method ` getFileLastModified ` to retrieve the last modified time of a file to improve file management functionality by providing a way to retrieve the
added a validation check for the " metaTable " property in HiveIcebergStorageHandler . java to ensure that only valid metadata tables are
updated CashDepositForm to use ComboBox < TradeCurrency > instead of a TextField for currency selection to improve user experience by
change catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a boolean variable ` mStartedEnterAnimation ` and modified the notification logic in ` IconRecentsView . java ` to improve animation handling
added an ` activeKeyId ` variable to the ` UaaConfiguration ` class to provide access to the ` activeKeyId ` variable
updated action labels and method names in SendMailActions . java for better clarity and consistency to enhance code readability and maintainability by using
changed the ` isActive ` variable from ` private boolean ` to ` volatile ` to ensure thread - safe access to the ` isActive ` variable
corrected the spelling of ' isAsc ' in the ` SelectionPartiallyOrderedByDescOperation ` and ` SelectionPartiallyOrderedBy
mondrian : use charsequence instead of string . append ( ) to avoid classcastexception .
added import for MainApp and modified the condition to check if the application name matches the application name to improve code readability and maintainability by
hbase - 16462 add permission check for kerberos rootdir in masterfilesystem
replaced ` httpServletRequest ` with ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWeb
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
added a null check for ` DocCollection . STATE _ FORMAT ` and updated related methods to return " 2 " instead of ` int ` to
updated logging statements in CentralAuthenticationServiceImpl . java for clarity and consistency to improve code readability and maintainability
added additional exception type check for IllegalArgumentException in PDICCBased . java to enhance error handling by including additional exception types
corrected the spelling of " / " to " / " in AbstractFileResourceSet . java to improve code readability and maintain consistency
make pluginparameterevaluator use pathtranslator instead of session
[ beam - 10663 ] add protobufcoder registration to be able to register protobuf coder
updated JpaQueryParsingToken to include a boolean parameter and added a new test for signed numeric literal literals in HqlQueryRendererTests to
updated the ` generateLaunchLug ` and ` generateRugFromRASAeroRailGuide ` methods to include ` parentLength `
removed the implementation of the getNonceFactory method in BitmexStreamingExchange . java to streamline the code by eliminating unnecessary implementation
( chore ) camel - mail : improve log readability
[ java ] use default timer interval for client and publication timeout in driverconductortest .
changed the initialization flag from true to false in FastClasspathScanner . java and ScanSpec . java to disable loading of classes by default
added focus handling to the search field in FullTextSearchPanel . java to improve user experience by ensuring the search field is properly displayed
replaced the initialization of ` NioParams ` with a variable ` nioParams ` in ` TlsConnectionLogging . java ` to improve
updated the assertion in StatementTest . java to test randomness to ensure the test accurately verifies the expected value of the result set
updated assertions in TestSolrConfigHandler to include the server base URL in error messages to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` in ` CsrfWebFilterTests . java ` to utilize ` ServerHttpRequest `
added import for Density and modified drawable string formatting in FilterResourcesStep . java to improve code clarity and maintainability by centralizing density
added a new method ` elementUIID ` to retrieve the UIID based on the component type to improve code readability and maintainability by
removed unnecessary import of DisplayMetrics and modified the condition in RecentsAnimationDeviceState . java to streamline the code by eliminating
added new files ` TestCloneArrayWithDifferentLengthConstness . java ` and ` TestArrayCopyOf . java ` for cloning arrays
added @ AwaitsFix annotation to ReplicationFactorTest . java to indicate a known issue related to SOLR - 6157 in the test
fixed - rtaskrunnerservice . schedule ( ) do n ' t throw npe if nextstartdate be null
refactor ` needsToUpdateCredentials ` logic in ` FileDownloader ` , ` FileUploader ` , and ` FileUploader ` classes to improve
added null check for the scanner before closing it in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
replaced direct calls to ` getReceivedByte ( ) ` and ` getTransmittedBytes ( ) ` with ` getOrDefault ( ) `
added a new parameter ` nonce ` to the ` TokenMvcMockTests ` class to verify the correct claims for the token ' s ID token
refactor ChartEditor , ChartEditorManager , DefaultChartEditor , and PaletteChooserPanel classes to improve code organization and maintainability
added width and height settings for the formLayeredPane in Form . java to ensure the form layered pane displays correctly based on its dimensions
added maxY method to BrowserContentPane to calculate the height of the owner to ensure accurate height calculation based on the owner ' s height
changed the return type of openDatabase ( ) and openSharedDatabase ( ) methods from void to boolean in SharedDatabaseLoginDialogViewModel to
replaced direct usage of ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` across multiple files to improve code
added a null check for the input file before processing parameters in TestIsartorValidationFromClasspath . java to improve robustness by handling cases
updated drawLeaveBehind method to accept a color parameter for folder leave behind to enhance flexibility by allowing customization of the leave behind color
report canary incompatibility for android studio ( # 1188 )
bug 10663 : fix npe in identityproxy sanity check ( # 1067 )
added methods for managing module persist settings in StartArgs . java to enhance functionality by allowing configuration of module persistence settings
updated condition checks for argument length in GeminiMarketDataService . java to ensure correct handling of input arguments and improve clarity of
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure predictable order of questions in the request context
[ java ] add test case for user role in realm .
updated JSP setup exclusions in AuthCheckFilter . java to include specific setup settings to enhance security by ensuring relevant setup files are included in the
refactor scheduling logic to use a dedicated method for runnable execution and sorting to improve code readability and maintainability by encapsulating runnable execution logic
updated method signatures in multiple command runner classes to accept a wildcard argument instead of an array to improve flexibility in argument handling for command execution
added null checks for character reading in XMLParser . java to prevent potential NullPointerExceptions during XML parsing
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to ensure that overflow pages and text
addedPivotX and PivotY properties to the arrow in DeepShortcutsContainer . java to ensure proper positioning of the arrow based on
remove stacktraces from exception handling in JabRefExecutorService , ACMPortalFetcher , and BibtexParser classes to simplify error handling
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter to enhance functionality by allowing thumbnail updates based on gesture state
pdfbox - 4071 : use class name instead of org . apache . pdfbox . extractttffonts [ OPTIONS ]
added a new parameter ` true ` to ` InternetAddress ` and modified the validation logic in ` EmailFormatSpecifier ` and ` HostnameFormatSpecifier
removed unused references from multiple activity classes to simplify code and improve readability by eliminating unnecessary dependencies
modified the maximum document ID handling in the SizeBasedDocIdSet and SizeBasedDocIdIterator classes to improve clarity and correctness of document ID management within the iterator
updated the ` promptToOpenFile ` method to accept a ` existingFileName ` parameter and modified the ` promptToOpenFile ` method to
updated widget span settings and refactored page count updates in AppsCustomizePagedView . java and AppsCustomizeTabHost
refactor FlightConfiguration to use InstanceMap for retrieving active Rocket components and update component bounds in FlightConfigurationTest . java to improve
replaced ` seda : bar ` with ` direct : foo ` in ` MicrometerMessageHistoryTest . java ` and `
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 4892 ] add permission filter to the dspace object converter ( # 4893 )
added a new test method ` testMissingRequired ` to ` StarTreeConfig ` to ensure that ` StarTreeConfig . Builder `
camel - 14284 : camel - spring - dsl - allow to specify the name of the recipient list to be specify . thanks to
refactor InlineLayoutBox and HoverListener to improve repaint behavior based on target dimensions to enhance the responsiveness of layout updates based on
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsServiceConnection ` and refactored service handling in ` AuthenticatorActivity . java ` to
