removed the host and port parameter from the SocketAppender instantiation and added remote host and port settings to simplify the SocketAppender initialization and improve clarity
refactor code to use a new method for retrieving prompt headers to improve code readability and maintainability by reducing duplication
removed RecordDescriptor reference from msgLength retrieval in ManyToOneRingBuffer . java to simplify code by eliminating unnecessary reference to RecordDescriptor
fix vm detail cpu / ram overcommit ratio when vm detail ram be null .
added a new constructor and getter method for anti - alias flags in ShadowPaint . java and updated tests in PaintTest . java to improve functionality
updated the title of the MassSetFieldsDialog to use localized text to improve user experience by providing clearer localization for field names
replace assertFalse with conditional checks for bug reporting in DetectorsTest . java to improve error handling and provide clearer feedback when no bugs are
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3891 - nonce
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to handle connection events to enhance the functionality of remote input
reformatted code in OrcEncodedDataReader . java for consistency to improve readability and maintainability of the code
updated filter condition in HomeConnectBridgeHandler to check if the thing is enabled before filtering to ensure that the handler is only filtered when the handler
added null checks before calling removeAllPolicies and addPolicies methods in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions during policy management
replaced ` isEqualTo ` method calls with ` matches ` method in ` DefaultTypeAdaptersTest ` , ` ObjectTest ` , and `
added JSON serialization and logging for DAG information in TezTask . java to facilitate debugging by providing detailed DAG information for
updated time calculation in ComputedSummary . java and added a method in HprofHeap . java to calculate and retrieve the heap time based on
replaced RxJava2Tasks with CommonsApplication for upload count retrieval in ContributionsActivity and refactored ApacheHttpClientMediaWikiApi to stream
mvtable . lock _ mode _ read _ committed do n ' t check for isMVStore ( ) in forcelockeveninmvcc
[ issue # 1187 ] fix offset check in commitlog ( # 1187 )
added a check to ensure the associated folder is open before proceeding to avoid potential NullPointerExceptions when the associated folder is not open
added a test method to verify the ordering of PGProperty names in ascending order to ensure that PGProperty names are correctly sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in the Common class to provide a
updated method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to allow for more flexible item
updated assertion in RequestBuilderTest to use isIn instead of hasMessage to improve clarity and accuracy of error message validation
refactor NearbyActivity to use NearbyListFragment instead of a hardcoded string to improve code clarity and maintainability by
[ hotfix ] fix typo in flatprofilecontainerfree constructor
added a new property ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and implemented its getter and setter methods
[ hotfix ] [ kafka ] fix checkstyle violation in kafkaconsumerbase
removed user and geofence methods from DataManager class to streamline code by eliminating unused methods
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in response handling by allowing customizable maximum length
refactor McastServiceImpl to use a byte array instead of a ChannelData object for message processing to improve code readability and maintainability
added logging for transiting snapshots and improved resource management in MultiLeaderServerImpl . java to enhance debugging capabilities and ensure proper resource management during
updated URLs in LoginSAMLAuthenticationFailureHandlerTest . java to remove leading slashes to improve clarity and correctness of test cases
renamed ConfigMetadataProviderTest . java to improve clarity and consistency to enhance code readability and maintainability
updated imports in ListFragment and SnoozeActivity to use AdapterView and ImageView instead of ViewPropertyAnimatorListener and ImageView to
refactor DirectoryStream . Filter implementation to use a static final AcceptAllFilter class to improve code readability and maintainability by centralizing the
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
added exception handling to the lookupType method in CompilerToVM and HotSpotJVMCIRuntime classes to improve robustness by throwing No
added validation logic for Docker image names in GenericContainer and created DockerImageName and DockerImageNameTest classes to ensure proper validation of Docker image names and
updated error messages in LoginActivity to provide clearer feedback on failed credentials to improve user experience by providing clearer feedback on failed credentials
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to set the " autofocus " property for
added unit tests for IdentityZoneConfiguration and SamlConfig in SamlIDPRefreshMockMvcTests . java to ensure correct behavior of SAML
added checks for empty and non - digit lists in ComparableVersion . java and introduced a new test for milestone in ComparableVersionTest . java to
replaced topLeftMode ( ) with bottomRightMode ( ) and updated return values in Sheet . java , and added padding and margin properties
moved Robolectric test classes to the internal package and updated import statements accordingly to align with the internal package structure for better organization and
replace direct usage of BoundedLocalCache ' s methodHandle with a constant methodHandle to improve code readability and maintainability by reducing
changed the foreground color from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the
added self - loop drawing functionality to the ProcessingPreview class to enhance rendering capabilities for self - loops in the graph
updated constant name from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
set the translation Y - coordinate of the drag handle indicator in AllAppsTransitionController to zero to ensure the drag handle indicator reflects the correct
added logging statements for collection , community , and item data in CollectionViewer , CommunityViewer , and ItemViewer classes to improve visibility of data
[ flink - 13434 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
added an assumption to the ScanningAppProviderRuntimeUpdatesTest class to ensure that the build server does not fail on non - Windows environments
added Maven bundles for Jetty alpn client and diagnose bundles in TestJettyOSGiAnnotationParser . java to ensure compatibility
fix executionmanager . updateprocessinstancelocktime ( ) and executeasyncrunnable . retryasyncjob ( ) throw an exception . ( #
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced the @ CustomFieldBehavior annotation with @ ExcludeFromRuleKey in GenruleBuildable . java to ensure that Genrule execution is
added a new method ` whichExec ` in ` AsyncExecute ` and refactored ` FirefoxCustomProfileLauncher ` to utilize it to
added a check for the existence of a column in the colFamToDynamicColumnsMapping before adding it to the map to ensure that the
[ hotfix ] [ runtime ] remove rawtypes warning in hadoopoutputcollector and hadooptupleunwrappingiterator
added a condition to check if the client version is less than or equal to the minimum split table system CATALOG to ensure proper table management and
fix update of orphan instructor instructor
updated import statements for TestCellReference in AllXSSFTests . java to align with the new package structure
added a check for block hardness in the block condition in LensPiston . java to ensure that the block is only able to
added a new file LongPointerPressTest3049 . java that implements a network error handling test to facilitate testing of long
truffle : do not report inline info if the inlining method do not match the inlining .
refactor return statements in BaseBuilder , ResultSetType , ParameterMode , and XMLConfigBuilder to use a ternary operator to improve code read
simplified the indentation condition in ListBlockParser . java and added a new test for deeply indentation lists in SpecialInputTest . java
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it into the ` AbstractAssert ` class
added an import statement for JUnit ' s Ignore annotation in WebfluxNotIncludedTests . java to mark the test as ignored due to issues
[ test ] remove global namespace from testcaselogger . java
updated the closing brace formatting in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is a video in the web sub configuration to ensure that web sub formats are only processed for video
added security properties to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms in the security framework
cloudstack - 3892 : do n ' t try to create a storage pool if it ' s local and the neighbor be the same
updated logging statements and improved string formatting in QueryResultsCache . java to enhance readability and maintainability of the code
added a new option to skip updating the model after managing dependencies in the POM recipe to enhance dependency management by allowing updates to the POM
added a test for sending a PendingIntent request code in ShadowActivityTest and implemented send method in ShadowPendingIntent to ensure proper handling of Pending
updated logging messages and refactored graphics creation in RocketFigure3d . java to improve clarity and functionality to enhance debugging and
added synchronization to the controllerListeners list and implemented dispose method in HydrawiseAccountHandler and HydrawiseControllerHandler to ensure thread safety and
added a JUnit @ BeforeClass annotation to the TestCoreAdminApis class to ensure EasyMock does not work with Java 9 to ensure
updated year retrieval logic in TimestampUtils and introduced a custom DateTimeFormatter for local time formatting in SetObject310Test to improve date handling and ensure
fix a potential npe in the jabber protocolproviderservicejabberimpl . disconnect ( )
added cur _ ws _ commit _ id to the commit _ id string in TxnHandler . java to enhance clarity of commit information in the
replaced ByteChunk with ByteBuffer and updated related logic in BufferedInputFilter . java to improve performance and handling of buffer overflow exceptions
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ` ActionGraphBuilder ` to multiple compiler factory classes and updated related method calls to utilize it to enhance flexibility in handling action graph
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify the functionality of uploads with
removed unnecessary import of java . util . Date and added SQLException handling in createTables ( ) method to streamline code by eliminating unnecessary
added a check to return the local Maven directory if the file does not exist to ensure that the local Maven directory is returned when the file does
ggb - 1369 make sure the label be visible for the new element , not just the hidden label
fix ( ctelement ) : fix npe in getmetadata
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
added a condition to check if the cached is sorted by ID in the reordering condition to ensure proper handling of sorted IDs in the collection
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added a null check for backupFolder before logging the expire message to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that implements a test for ` Array . newInstance ` to demonstrate
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler and GccCompiler classes to ensure the toolType field is
replaced hardcoded value of 10000 with a constant PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability
set isSampled ( ) method to true in PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure that the test
added @ Ignore annotations to multiple test classes to temporarily disable certain tests related to the mongodb server requirements
[ java ] fix checkstyle violation in consumeuncompressedmessagetest
updated the condition to check if the table is an artificial table to ensure that the table is not an artificial one to improve
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct
refactor session attribute handling in MongoSessionManager . java to improve null and empty checks to enhance code robustness and prevent potential NullPointerExceptions
replaced setFixedSize with setSizeFromLayout in CameraSurfaceView . java to improve size management for the surfaceHolder
replaced instances of ` _ stopping ` with ` CountDownLatch ` for clarity to improve code readability and maintainability by reducing
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14836 : fix defaultmessagehistory to use timestamp instead of stopwatch
[ hotfix ] [ test ] fix race condition in delaymonopublishertest
replace assertTrue with a conditional check for WebSocketHandshakeException in WebsocketTest . java to ensure proper handling of WebSocketHandshakeException to improve error
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly to improve code readability and maintainability
refactor variable name from " theHandler " to " handler " in PolicyBasedAuthenticationManager . java to improve code readability and maintainability
xpath - router : add namespace support for ' default - output - channel ' attribute
changed the cacheSeconds field type from int to String in MessageBundleProperties . java and updated its usage in CasCoreWebConfiguration . java to
update OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the call to append ( buffer , true ) in ByteBufferPool . java to streamline the code by eliminating unnecessary operations
added a check for the presence of the " alt - rt . jar " property in the boot class path to ensure that the test does not
updated user deletion statements and modified test cases in JdbcScimUserProvisioningTests . java to ensure correct deletion of user data and improve test coverage
updated FlightRecorderProfiler . java to modify flight recording options to conditionally include UnlockDiagnosticVMOptions and DebugNonSafepoints to
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has a content before processing the buffer in HttpParser . java and implemented a test for chunked put
refactor AtmosEndpoint to improve code readability to enhance maintainability and facilitate future updates
added additional condition checks for targetMethodName in Java2TypeScriptAdapter . java to ensure proper handling of " printf " , " printf " ,
added a new file ` TestCapacityUntilGCWrapAround . java ` and modified ` WhiteBox . java ` to include native methods to ensure
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the calculation of endTime in SamplingStatCalculator . java to ensure the endTime is correctly calculated based on the current time of the resource
added unit test base on user forum issue
tmi - jpeg : fix handling of bad icc chunk in sequence .
fix the terra rod not cause the reequip animation
added checks to ignore instances of Config and Environment in SpringModule to ensure proper registration of beans based on their type
[ java ] use the parent classloader of the context loader instead of the current thread classloader .
do n ' t add namemap entry to the nameupdater if it be already define
added a new variable ` started ` in ` EllipsoidRegionSelector . java ` to track the state of ` ellipsoidRegionSelector `
updated the default codenameone protocol from " http " to " https " in JavaSEPort . java to ensure compatibility with the latest C
[ geos - 10767 ] add validation for sortby attribute in wfs getfeature
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential NullPointerException
replace expected image with compatible image in DiagramGenerationTest . java to improve image rendering accuracy and compatibility handling
improve error message when try to install fml properly
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flaky locktest . testlocked ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class to facilitate tokenization and joining
change response code from setStatus to sendError in CoyoteAdapter . java to improve error handling for not found requests
refactor command handling in SystemHighlighter to use a variable for command indexing to improve clarity and maintainability of command processing
updated version and version date constants in Constants . java to reflect the latest release release and mark the version as PENDING
updated the position method to use dimensionSize instead of idx to ensure accurate positioning of the buffer based on the dimension size
added support for the ACTION _ SHELL _ DRAG _ READY request in QuickstepTestInformationHandler and SystemUiProxy classes to enhance
[ java ] do n ' t run socketappender on java 7 since 1.7
added cipher options for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to ensure
updated the way the description is displayed in NearbyMapFragment to use getLongDescription ( ) instead of getDescription ( ) to improve clarity
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ScimGroupMember class
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoring in HqlQueryRendererTests to ensure proper sorting and
updated parameter name from " d is null " to " s is null " in SubscriptionHelper . java to improve clarity of error messages for
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
modified the ` offsetStreamIndex ` method to include an additional ` indexStartsAtOne ` parameter and adjusted its logic accordingly to enhance the handling
updated binary decoding logic in MagicDetector . java and modified test cases in TestMimeTypes . java for archive and cpio files to ensure correct
[ flink - 2645 ] [ table - planner - blink ] remove redundant getmonotonicity method from flinksqloperator
added equals ( ) , hashCode ( ) , and toString ( ) methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison
added a condition to check if the assistant is not launched in AssistantTouchConsumer . java to ensure that fling only occurs when the assistant
added a new file SolarisShortDSA . java that implements a signing algorithm using DSA to demonstrate the use of
added a call to toggleSearchLabel ( false ) in ListFragment . java to disable search label functionality in the user interface
server : lock the volume before create a snapshot , throw an exception if it fail to create a snapshot .
updated FileDetailActivity to implement DetailsServiceConnection and added null check for mConnection to ensure proper resource management and prevent potential NullPointerExceptions
refactor error handling in HttpClientTLSTest to use AtomicReference for throwable reference to improve clarity and maintainability of exception management
removed the equals method from the ConjunctionScorer class to simplify the code by eliminating unnecessary equality checks
added a null check for the variable ' v ' in mmm Launcher . java and ppp Launcher . java to log a warning
wait for getrolftgroupids operation to complete after cpmemberaddremovetest .
updated cache size calculation and added timing logging in DefaultCache . java to improve cache shrinking behavior and provide a warning log for full cache entries
updated API endpoint from v2 to v3 and modified limit order handling in the CryptoFacilities API to ensure compatibility with newer API versions and
added a method ` empty ( ) ` to check if the size is zero in ` freenect2 . java ` to ensure that the
added optional handling for page data in AsyncPageReader and updated test cases in TestEmptyParquet and TestDrillParquetReader to improve
modified the ` buildChannelName ` method to accept an additional ` subscriptionType ` parameter and updated related validation logic to enhance argument validation and ensure
add config to disable charging animation when item be charging on top of a mana pool
[ java ] make cluster node restart test more robust .
added error logging for InterruptedException in WaitForHelper . java to improve error handling by providing more context for interrupted exceptions
replaced conditional checks with assumeTrue for directory creation in DefaultServletTest . java to improve code readability and maintainability by eliminating
reformatted the injection of styles in ResourcesInjectorFull . java to improve code readability and maintainability
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for
fix checkstyle issue in blockworldvector . equals ( )
changed the visibility of the CacheEntry class and its fields from non - final to final in LongConcurrentLRUMap . java to ensure immut
added regex handling for literal arguments in ReflectionProcessor to ensure proper parsing of string values in resource configuration
updated FileCredentialsCache to handle KRB5CCNAME environment variable and modified EmptyCC to accept command - line arguments for the credentials cache to
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
enable fast sync by default ( # 1748 )
[ java ] fix checkstyle issue in io / webdriver / webdriverservlet . java
do n ' t expand ` AreEqual [ x , y ] ` and ` segment [ z , w ] ` to ` areequal [
added a check to clear pending rendering operations if the implementation is minimized to ensure that pending rendering operations are only cleared when the implementation is
added a check for the deadline before proceeding with sleep calls in HazelcastTestSupport . java to ensure that sleepMillis is only invoked when
fix ( mapstore ) : fix write - behind write delay time window
added a line to reset the icon of JLabel to null in GroupTreeCellRenderer . java to prevent potential memory leaks by resetting the icon
updated test methods in TestBlacklistAwareRedirectResolver to disable strict matching and changed default and nonstrict behavior to improve test reliability by preventing
added IO closing functionality and improved test methods in ShutdownMonitor and ShutdownMonitorTest classes to enhance resource management and ensure proper cleanup of the server
refactor chunk size calculation and improve fill rate comparison logic in RandomAccessStore . java to enhance code readability and maintainability by reducing
refactor serialization logic and improve error handling in Json . java to enhance code clarity and maintainability by encapsulating field reading logic
[ hotfix ] [ runtime ] move componentclosingutils to coordination package
cloudstack - 3892 : destroy volume in vm state when vm fail to create snapshot .
fixed npe when get ip6range from vlan when ip6range be empty
corrected the spelling of " userDetails " to " beanNames " in the InitializeAuthenticationProviderBeanManagerConfigurer class to ensure consistency
increased the retry timeout for the halfdeletedcollection2 leader from 15 seconds to 30 seconds to improve test reliability by allowing more time
refactor ` errorMessage ` methods across multiple parameter classes to remove the ` input ` parameter parameter to simplify exception handling and improve clarity of error
updated the parameters in the drawImage method call from ' x ' and ' y ' to ' - x ' and ' y ' to ensure correct
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
refactor code to introduce a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by reducing
added the exception parameter to the StreamTaskException constructor to enhance error handling by providing the original exception
refactor the formatting of the ` expandTag ` method in ` Preprocess . java ` to improve readability and maintainability of the code
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to facilitate the
do n ' t encode empty extension list in case of fhir comment
updated regex patterns in ` Artifact . java ` and ` LibraryManager . java ` , and added null checks in ` LibraryManager . java `
added an alias " node _ popup / node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to
updated HIDDEN _ SPLIT _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView and refact
http : / / issues . apache . org / jira / browse / amq - 4898 - jmsproducer . java should
reformatted code for consistency across multiple Java files to improve code readability and maintainability
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` from the project to remove obsolete codebase
updated GzipHandlerTest to use final variables and added a new MicroServlet for handling ETag and ETag headers to improve immutability and ensure proper
[ java ] use backpressureutils . getandaddrequest ( ) instead of consumercapacity . getAndAdd ( n ) in onsubscrib
added logging functionality and improved formatting in SpeedmentImpl . java to enhance readability and maintainability of the code
( chore ) camel - dspace : add dspace - oai - config to load dspace - oai from the servlet context
hbase - 2248 fix test widescanner . setbatch ( ) and storescanner . setrow ( )
camel - 1744 : camel - test - enable jmx for camel - nagios and camel - test - camel
replaced hardcoded slash with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation ` and ` SourceCodeDisplay
added YARN binary path handling and application kill functionality to HiveConf and related classes to enhance application management and improve user experience in the application management
added support for " maria " database name in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
updated log message formatting and modified time calculation logic in SplitLogManager . java to improve readability and correctness of log output
added a new file ExecuteAndReturnStringTest . java to implement a test for network error handling in the application to ensure that the application correctly
added a new file InvokespecialInterface . java with interfaces and methods for dynamic invocation to facilitate testing of dynamic method invocation in
refactor EvictingBoundedList class for improved performance to enhance performance and maintainability of the code
use setencoding ( ) instead of setencoding ( ) for turncosts = true
added a validation check for backgroundDisabled in SelectBox . java to ensure selection is non - negative and prevent potential NullPointerExceptions
added a null check for the header method in RpcServer . java to prevent potential NullPointerExceptions when the header method is null
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to improve layout accuracy for hotseat icons
updated the construction of the ` valString ` string in ` ExpressionTree . java ` to use ` values . get ( ) ` instead of
do n ' t write ` ` name ' ' and ` ` delegate ' ' in namedtaskdecorator if the version be 4.1
updated the method used to retrieve the index directory from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct
changed the default value of the ` equal ` variable from ` false ` to ` true ` and updated the comparison logic in ` DisplayModeTest
updated UnicodeToLatexFormatter to handle bmp Unicode characters and added support for amsmath in HTMLUnicodeConversionMaps to enhance character formatting
added null checks and default value assignment for ISO control in OAIDCCrosswalk . java and Item . java to ensure proper handling of
simonstewart : do n ' t select the window if it ' s already there .
added a " Clear " button to the BookmarksPanel and modified its logic in BookmarksPanel to enhance user experience by allowing users to clear
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL building to improve code readability and maintainability by utilizing UrlUtils
updated date assertions and error messages in SoftAssertionsTest . java to improve clarity and accuracy of date comparisons
added an ` reverse ` parameter to the ` adaptOrders ` method in ` BitmexAdapters . java ` to enhance order adaptation by
added null and position checks for the vartype in PrettyPrinter and created a new class Java11Var with a test method to ensure proper handling of
simonstewart : remove unused import of test class
updated configuration initialization to set the default value to false and removed unnecessary debug logging for Hadoop configuration properties
updated method call from ` super . drawChildren ` to ` super . draw ` in ` WidgetGroup . java ` to ensure proper rendering of
added unit test base on user forum issue
replaced usage of ` System . getProperty ( ) ` with ` context . getCatalinaBase ( ) ` across multiple classes to streamline
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the ` ShadowICU ` to return
add additional color information to the PlotSquared class to enhance the visual representation of color codes in the PlotSquared class
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable dynamic configuration of Z
tika - 1187 - add test for timezone . getdefault ( ) in fontparserstest
added two new files ` SampleApplication . java ` and ` SampleApplication . java ` , and modified ` BuildInfoMojo . java `
update calculation of xDist to use absolute values to ensure accurate positioning of the scroller ' s position
douniaberrada : remove unused guitest . java
removed nullableDecl annotations from constructor parameters in LazyMessage and StandardSubjectBuilder classes to simplify method signatures by eliminating unnecessary null checks
updated error message format in TestStream . java to include additional context to improve clarity of error messages for better debugging
move thymeleaftemplateparser and thymeleaftemplatereader to thymeleaftemplateparser . markup so that it can be
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated the ` XPathTest . java ` to use
added @ Nullable annotation to FutureUtils . java to indicate that the method should be nullable
add warn message when invokedynamic be not resolve during call - graph construction
update email from " myfakeemail @ gmail . com " to " myrealemail @ example . com " in ContextTest . java
updated the HTTP response format in HttpConnectionTest . java and modified the URI comparison in URIUtil . java to ensure proper handling of bad encoding
added ` getColumnDataType ( int columnIndex ) ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes
fix service client interface to throw unsupportedoperationexception instead of unsupportedoperationexception
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
use java . time . instant instead of java . time . currenttimemillis ( )
added version handling for media info options in LibMediaInfoParser . java to improve compatibility with newer MediaInfo libraries
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enable proxy creation for IdeaDependency instances in the project
added a new class ` SerialHeap ` and updated ` CollectedHeapName ` to use it instead of ` GenCollectedHeap ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to Gson $ Types . java to suppress warnings related to serialization issues
fix tooltip position for mouse wheel event
updated MongoQueryCreator to handle null values for the next parameter in addAppropriateLikeRegexTo method to ensure robustness by avoid
[ hotfix ] [ table - common ] add multisettypeinfo ( ) method to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers by issuer to improve error handling for invalid identity
fix cmapparser . parse ( ) to handle poor whitespace
added a new ` OperationsServiceConnection ` class and refactored service handling in ` ContactsBackupJob . java ` to improve management of
refactor type constraint handling and introduce new classes T6938454a and T6938454b for improved type safety to enhance
added a new method ` isConfigHidden ( ) ` to the ` AccountID ` class and updated conditional checks in ` AccountList ` to
added a check to log an error if the number of supported displays differ from oldInfo to improve error handling by logging an error when the number
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure proper schema handling and ensure proper
simonstewart : fire passive login event when passive login be enable
added a new file ` Box2DTest . java ` and updated ` GDXTester . java ` and ` Box2DTest .
add more debug log for localbypartioner
increased DEFAULT _ BUFFER _ REQUEST _ TIMEOUT from milliseconds to minutes in HybridShuffleConfiguration . java to allow for more time for
doc : generate sample code in the java microgenerator
added a help button to the OpenOfficePanel for displaying an OpenOffice integration page to improve user experience by providing a more informative help message
refactor ChannelOption usage in NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecodingServer to use the childOption method
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService classes to
added a transient class reference variable and refactored class loading logic in ScanResultObject . java to improve code readability and maintainability by
refactor connection handling and stream processing in DecodeServlet . java to improve code readability and maintainability
added a new method toQueryDslNullHandling in Querydsl . java and created a new test class QuerydslIntegrationTests . java to
added a null check for actor in the ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action processing
fix ( test ) : fix typo in cttypetest
added synchronization to the ` sfWriters ` collection in ` HDFSEventSink . java ` to ensure thread - safe access to the ` sf
added a new file ` Issue888 _ JavaI . java ` implementing the ` Issue888 _ JavaI ` interface with interfaces and
added functionality to revoke an existing agent certificate in CertificateManager . java to enhance certificate revocation functionality by allowing users to revoke an existing agent certificate
added a check for no body responses in AbstractHttpTest and implemented a test for writing body after no body response in HttpServerTestBase to ensure
updated error handling in ScriptTransformer . java to improve clarity and provide clearer error messages for script execution failures
added support for Hikari DBCP connection pooling in HiveConf and updated related imports and assertions in TxnHandler and TestTxnHandlerNegative
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added functionality to filter and toggle file lock events in FileMenuFilter and OCFileListFragment to enhance user experience by allowing users to lock files
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear endpoint cache when update keyspace
replaced multiple calls to ` thrsync . waitForSignal ( ) ` with a new method ` waitForState ( Thread . State . BLOCK
refactor methods in SkylarkDescription and SkylarkDescriptionArg to use SkylarkRuleContextAttr instead of separate
[ java ] move storage interface from localstorage and sessionstorage to selenium - html5
fix nullpointerexception when create or replace view
changed the exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching a broader range of exceptions
updated query string retrieval logic in SpellCheckComponent . java to ensure proper handling of query parameters and prevent potential null pointer exceptions
added error handling for illegal characters in header values and implemented a checkValue method to ensure header values are correctly validated and validated
replace instanceSize with arrayBaseOffset in HybridLayout . java and introduce afterFieldsOffset method in HostedInstanceClass . java to
[ java ] move setcontainscomment ( ) method from abstractapexcommentcontainernode to astcommentcontainer
hhh - 11818 - warn about lazy fetch association with ` fetch = ' join ' and ` fetch = ' ' / ' fetch
refactored NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing Swagger
added assertions to validate database and table names in TestCompactionTxnHandler and set database and tab name in TxnHandler to ensure that the database
camel - 14750 : timer should be graceful to stop the timer on shutdown .
added a check for processed blocks before adding to traces and removed the currentBlock from worklist to ensure traces are only added when the block is processed
updated ProviderManager to use CollectionUtils for checking providers instead of direct null checks to improve code readability and ensure correct handling of null elements in providers
simplified the database type check in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is a Postgres
added local index limit assertions and modified scan handling in multiple classes to improve query validation and ensure proper handling of local index limits
added a check to prevent adding a collection with the same name in the past to ensure that collections with the same name and different types are used
updated cursor position calculations in VDUBuffer . java and adjusted window base handling in vt320 . java to improve cursor responsiveness and ensure
added a static final string named USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to enable
updated the VERSION _ NUMBER regex in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure compatibility with the
added a check to return early if all input gates are empty to avoid unnecessary processing when no input gates are available
added a new test method ` test ( ) ` to ` TestReceivingMessageSourceParserTests ` to enhance test coverage for message source parsing
added null check for properties before retrieving it to prevent potential NullPointerException when properties are null
updated IOException handling in FileSystemBlobStrategy to initialize the cause to improve error handling by providing the original exception context
corrected a typo in the error message from " rolling upgrade to fail . " to " stack upgrade failure . " to improve clarity
added a private TxConfidenceListener instance and updated the confidence update logic in TxIdTextField . java to improve the handling of transaction confidence updates
added a new constant G1 _ PERM _ GEN to the JmxSupport class to support the " G1 Perm Gen " feature
removed unused imports and simplified the return statement in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4071 : make class public , a suggest by valerybokov
added a condition to check if the activity type is not home in BaseSwipeUpHandlerV2 . java to ensure proper handling of home
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants and methods to improve clarity and consistency in
updated method names and assertions in ShadowTelephonyManagerTest . java and ShadowTelephonyManager . java to improve clarity and consistency
updated the method for setting unfreeze amount in UnfreezeBalanceV2Actuator . java to ensure proper handling of unfreeze amounts in the
[ bugfix ] add ` ` match ' ' to the description of ` ` published ' '
simonstewart : replace google . common . io . files with apache common . io . fileutils
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion classes
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
added multi - field operation for pushing updates in Update . java and corresponding test cases in MongoTemplateTests . java to ensure correct handling of
added a null check for randomUUID before setting the hubChangeLog ID to avoid potential NullPointerException when randomUUID is null
added hover event handling for hover events in InputConsumer and OverviewInputConsumer classes to improve user experience by enabling quickstep live tile functionality
modified the initialization of the boostrapConf variable and added a sleep mechanism in CoreContainer . java to ensure proper handling of the bootstrap configuration
camel - 17575 : camel - netty - http : fix the default value of maxheaderssize in camel - netty - http
increased the client retry count from 5 to 15 in HBaseTestingClusterAutoStarter . java to increase the maximum number of client retries
replace file path resolution with absolute path construction in SourceSnippetHelper . java to improve clarity and maintainability of file path handling
make encodedgraphcachetest more tolerant to race condition
updated query command from " customer _ count " to " all _ tables " and added a new test for querying over tables to improve clarity
added logic to adapt and store Kraken asset codes in the currencies map to enhance currency metadata handling for Kraken assets
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
updated variable names and logic for handling empty dimensions in AlertTaskRunnerV2 . java to improve clarity and ensure correct handling of empty dimensions
[ beam - 2889 ] fix influxdbpublisher to not publish property - measurement / database .
replaced the ` doTransform ` method with ` downcast ` method across multiple converter classes and added a null check for the string to improve
updated filter conditions for local addresses in NetUtils . java to include unique local addresses to enhance filtering capabilities for different local addresses
refactor column name handling in DataTextFormatter to use a dedicated method to improve code readability and maintainability by centralizing column name retrieval
added methods for setting system properties and modifying method signatures in WrapSystem , StrUtils , CompileMethodEntity , and ClassWrapper classes to enhance property
added a constructor to UpdateRequest that accepts a URL to enhance request handling by allowing custom URL parameters
changed the access modifier of EnumSerialization from static to instance in ProtoTypeAdapter . java to improve encapsulation and maintainability of the enum
added a new method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and invoked it in ` DataImportHandler ` and ` Replication
updated debug logging format in JpmsUtil . java to use a dedicated method for better readability to enhance code clarity and maintainability
update rowheight to use the default label font instead of a hardcoded value
[ hotfix ] [ runtime ] fix npe in defaultbrokerheartbeatmanager
added meanPartitionSize , partitionCount , and splitCount variables to CqlInputFormat . java to determine the mean partition size and partition count
simplified the conditional check for the ' name ' variable in JUnitTestsShouldIncludeAssertRule . java to improve code readability and
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper comparison and hashing of rule names
added a conditional check for HIVESTAGEIDREARRANGE in TezCompiler . java to ensure that StageIDsRearranger is
change the mbean name from ' concurrent ' to ' net ' in messagingservice . java
updated memory handling in LotsOfOutput . java to include a check for both initMemory and totalMemory to improve robustness of memory consumption
added imports for ` Document ` and ` DocValuesFormat ` , ` DocValuesFormat ` , and ` NumericRangeQuery ` in multiple Java
renamed variables and methods related to anonymous read - only in LdapAutoConfiguration and LdapProperties classes to improve clarity and consistency in naming con
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the visibility of the EchoInputDoFn class from public to private and updated the @ RunWith annotation in ExampleEchoPipelineTest . java
added a new ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to handle ` failure `
refactor dependency handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve code clarity and
refactor buffer and handler handling in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve clarity and maintainability of
replaced ` BlockLiquid . getStaticBlock ` with ` BlockLiquid . getFlowingBlock ` in ` BlockLiqu
updated ` AndroidLocationPlayServiceManager ` to use ` Uri ` for setting the background class and modified ` BackgroundLocationHandler ` to use the
[ java ] fix typo in aprendpoint javadoc
[ hotfix ] [ clifrontend ] add support for streamingplan in cli
fix a bug in craftingmanager . getshapedrecipe ( ) and fix a bug in craftingmanager . getsh
[ hotfix ] [ test ] fix flaky test testfilechannelrestart
removed unnecessary carriage return and newline checks in TabsAndIndentsVisitor . java to simplify whitespace validation logic and improve readability
added a regex pattern to filter lines containing " pg _ temp _ " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated DataTypeFactory and UnknownType to handle " INTERVAL " data type correctly to ensure correct type handling for INTERVAL data types and improve type
do n ' t add distribution summary for timer that do n ' t have to be publish .
updated ShenyuClientRegisterSpringCloudServiceImpl to set SpringCloudSelectorHandle and added warmup in DivideUpstreamUtils
added a new method ` registerListener ( SensorEventListener , int maxLatency , int maxLatency ) ` to the ` ShadowSensorManager ` class
added error handling for socket exceptions in ` SelectChannelServerSslTest . java ` to log a warning for overtook 400 responses to enhance
camel - 1748 : camel - ignite should n ' t try to close the ignite if it ' s not available .
added conditional checks for empty lines and updated result set handling in AbstractClient . java to ensure proper handling of empty lines and improve clarity of
pdfbox - 4071 : catch all unsupported flavor exception , not just ioexception
added unit tests for display header capabilities in ShadowDisplayTest . java and implemented unsupported operation handling in ShadowDisplay . java to ensure compatibility with Android
added a finally block to reset classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leak
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of exception messages for better debugging and
added a default constructor to the Message class to provide a default implementation for the Message class
updated bug priority logic in SerializableIdiom . java to differentiate between GUI classes and their respective priority based on whether the object is a GUI
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo instead of BigDecimal and HiveDecimalUtils for improved precision handling to enhance flexibility
modified compression response handling to check if the response is committed before setting the gzipstream to ensure proper output stream behavior when the response is committed
updated parameter name from WWWAuthenticate to authenticateHeader in getAuthorization and parseWWWWAuthenticateHeader methods to improve clarity and consistency in parameter
added a condition to check if the directory name starts with " EJS " or " org \ omg " in DCD . java to
added a method to retrieve the thread group name in ThreadLeakTest . java to improve code readability and maintainability by encapsulating thread
added logging functionality and improved error handling in MethodInvocationPrivilegeEvaluator to enhance debugging capabilities and provide clearer error messages
changed the package of DmozParser from org . apache . nutch . crawl to org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
cloudstack - 3892 : add iso path to storage _ pool for a user vm
removed the previous handler handling in SigInt . java and updated the test method in SigIntTest . java to streamline signal handling logic and
replaced static import of ArrayUtils with direct usage of ArrayUtils in NodeTool . java to improve code readability and maintainability by using a more
updated AxonAutoConfigurationWithSpringCloudTest to use Spring Boot ' s EnableAutoConfiguration and HibernateJpaAutoConfiguration to enhance
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
remove deprecate planningentityselector . setresetinitializedplanningentities ( )
added build time handling to the TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager classes to enhance the caching process by allowing dynamic tracking of build
added a new ArrayList < varLenFields > and modified the condition for calculating row size in GroupByOperator . java to ensure correct handling of
added null checks before adding block appearance in Wallet . java to prevent potential NullPointerException when adding block appearance
added support for CNC currency pairs in BTCEUtils and updated CurrencyPair to use CNC _ BTC instead of FTC _
updated skewAllowance from 5 to 15 and modified related classes to conditionally use skewAllowance based on service ' s value to enhance security
updated sorting logic in SongListActivity and Utils to use SortName instead of null to enhance sorting capabilities for better user experience
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline code and improve read
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` in multiple block classes to standardize block structure and improve code clarity
updated the handling of tag names in IcebergBranchExec and added a test for it in TestHiveIcebergBranchOperation to
replaced the use of ` newArrayList ` with ` Collections . singletonList ` in the ` setExternalGroupsWhitelist ` method to improve code readability
added a new variable ` boxesSsboBinding ` and refactored key handling in ` PhotonMappingDemo ` to streamline
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to ensure
added a line to remove the assumeReflective field from the notInitializedInConstructors list to ensure that the uninitialized fields are only removed when
modify error handling in JdbcExecutor to differentiate between closed connections and SQL execution errors to ensure proper error reporting when the connection is closed
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the presence of ` microservicename
updated regex patterns in CredentialInjector to use " . user " and " . password " instead of " . user " and " . password "
added a new menu item " Item4 " to the menuItems array and added a KeyStroke for the ENTER key in ActionListenerCalledTwice
updated print statements in TestCoreParser . java to include class name and class name for query processing to improve clarity of output messages and ensure
fix checkstyle issue in util / simplenode . java
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the PopulatorContextStackItem
updated the calculation of ` numDocs ` in ` MoreLikeThis ` to use ` getDocCount ( fieldName ) ` instead of ` numDocs
reformatted code in QuestManager . java for consistency to improve readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest static final
replaced direct calls to ` BasicDBObject ` with ` append ` method in ` MongoSessionDataStore . java ` to improve code readability
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate unsafe retrieval of long values
updated time zone identifier for Asia / Amman from ARAST to EET across multiple language files to reflect the correct time zone design
updated the ID in DeprecationLogger . java from 90000010 to 90000011 to reflect the new version of the DeprecationLogger class
hhh - 1187 - fix handling of jdbcexception when rollbackonly = false .
do n ' t print link extension in downloadexternalfile . download ( )
set apple . laf . usescreenmenubar to false for macosx
add a piecewise integration test for the ca ( x ^ 2 , 1 , 3 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added a new configuration option ` modWhiteListPattern ` in ` HiveConf ` and a corresponding test in ` TestJdbcWithSQLAuthorization `
replaced invalidClasses . put with entryName and value in EntryLoader . java to ensure proper handling of invalid classes in the entry loader
updated the target coordinate in MobileInput . java to use the player ' s team instead of a sharded team to ensure the target is correctly
updated the domain configuration in CookieImplementationTest . java to use the domain helper ' s host name instead of a hardcoded value to ensure the
added validation logic for nullable columns in the ` MissingColumnChangeGenerator ` and ` MissingTableChangeGenerator ` classes to ensure proper handling of nullable
refactor multiple SecurityTokenService - related classes to improve code organization to enhance maintainability and readability of the codebase
added a test for deleting a specific document in CustomCollectionTest . java and made several fields static final in CompositeIdRouter . java to ensure
added snapshot handling for bytea data in ExecutablePreparedStatementBase . java and updated related tests in PostgreSQLIntegrationTest . java to improve database compatibility and
updated conditional checks for cache and max _ cached _ files , max _ cached _ size , and max _ cached _ size in DefaultServlet .
add drag - and - drop functionality to the JabRefFrame class to handle drag and drop events to improve user experience by allowing users to
updated description creation in ExecutionUnitRunner and modified test assertions in CucumberTest and ExecutionUnitRunnerTest to improve clarity and accuracy of
replace ` ! empty . isempty ( ) ` with ` StringUtils . isempty ( ) ` for better readability to enhance code
changed access modifiers of several methods in TimeUtils and related classes from public to package - private to allow access to these methods from other classes
added a method to check if a class is a security frame or injected invoker in RefectionMHTests . java to enhance security frame
updated file extension check from " . jpg " to " . jpeg " in PreviewImageFragment . java to ensure proper handling of file extensions
fix nativeimagedebuginfoprovider to handle hostedmethod . getjavatype ( )
added ` getIcon ( ) ` methods to load specific image icons in ` Data . java ` and updated ` ClassDisplayed . NODE ` to
refactor substring handling in CounterRequestAggregation to use a variable for better readability to improve code clarity and prevent potential NullPointerExceptions
updated regex replacement logic in FindAndReplace . java and added a new test for dollar signsTolerated in FindAndReplaceTest .
improve jabber debugger performance by remove unnecessary type check
refactor SchemaExtractionProcessor class to improve code organization to enhance maintainability and readability of the code
added a method to copy a directory and destination files in IO . java and refactored tests in SpecWebAppTest . java to improve
added error handling for unknown datum class in JacksonUtils to improve error reporting for unknown data types
replaced direct calls to ` buildAbiFromClasses ( ) ` and ` addToIndex ( ) ` with ` requireRule ( ) `
simplified height calculation in SelectBox by removing unnecessary padding calculations to improve code readability and maintainability by eliminating unnecessary calculations
normalize database and table identifiers in ObjectStore . java to ensure consistent identifier normalization for database and table names
added null check for database type and schema in DbSqlSession . java to ensure that schema is set correctly when database type is " oracle "
replaced the Logout method call with a direct call to finish ( ) in HomeFragment . java to simplify the code by eliminating unnecessary
updated ` MockStreamingRuntimeContext ` parameters across multiple test files to include a new task number to enhance test coverage and ensure compatibility with different task
added a null check for the candidates list before retrieving the priviledged element to prevent potential NullPointerExceptions when accessing elements
updated condition checks in ContainerLifeCycle and added assertions in ContainerLifeCycleTest to ensure correct handling of managed beans and improve test coverage for lifecycle
rename iexecutionattributesdialect to iexecutionattributemoduledialect in favor of iexecutionattributemodule
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is properly cleared
added null checks for the ` loc ` variable in ` CmdGetTime . java ` to avoid potential NullPointerExceptions when ` loc ` is null
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a custom exception handler to improve robustness
deleted the Session2Token . java file to the project is no longer needed for the application
cloudstack - 4892 : remove volume from disk when volume creation fails
added a new ` Install ` class and integrated it in ` SystemShortcut ` and ` InstantAppResolver ` to support instant app installation to enhance
added a constructor to ` LdapAuthenticationProvider ` that accepts a ` LdapAuthenticator ` and a ` NullAuthoritiesPopulator ` to provide a
updated the method for retrieving the retrolambda JAR path in Executor . java and added a warning log in CN1BuildMojo . java
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code by removing unnecessary
updated the method signature of ` sortLiveDocs ` to use ` Bits ` instead of ` MutableBitSet ` to improve flexibility in handling
added a method call to handle null results in JMESPathExtractor to ensure proper handling of null results in the path extraction process
added null and empty list check for user authorities in AuthorizeTag . java to ensure that empty authorities are returned when no authorities are
refactor assertions in DefaultLogoutManagerTests , DefaultSingleLogoutServiceLogoutUrlBuilderTests , and CasSupportJdbcAuditConfigurationTests to improve code
cloudstack - 3892 : fix typo in error message for vm snapshot with memory
updated annotation handling in RobolectricTestRunner and changed ArrayList to HashSet in Config and RobolectricTestRunnerTest to improve cl
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to align with the latest WebSocket implementation
added partition key comparison logic in HiveAlterHandler . java and updated test cases in TestHiveMetaStore . java to improve partition key validation
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the visibility of an icon
corrected spacing in the if statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in StandardDeployer , StandardUndeployer , and ContextHandlerCollection classes to improve code readability and
added workspace listener functionality to PreviewControllerImpl and removed it from PreviewUIController to streamline workspace management and improve code clarity
added a check for VM anonymous classes in ReflectionFactory and modified class name checks in ReflectUtil to ensure proper handling of anonymous classes and improve class
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintainability
ambari - 22424 . ambari server should not start the server and manager when it start a server .
added null checks for forNode initialization and modification in JSONWriter . java to ensure safe handling of null values and prevent potential NullPointerExceptions
updated method signatures and variable names in SliderAppsViewControllerImpl . java for consistency and clarity to improve code readability and maintainability
added a check to ensure backgroundManager is not attached before attaching it to avoid potential null pointer exceptions when the background manager is not attached
added logic to set the current tab in AllAppsTabbed , Launcher , PagedView , and Workspace classes , and adjusted vertical position
added a null check for the URL in BaseDataSource and created a test for it in SimpleDataSourceTest to ensure that the URL is valid and
added JUnit 5 annotations to enable tests on Java versions in the PebbleModuleTest class to ensure compatibility with newer Java versions and improve
added EditNameDialog to manage the creation of a new directory in FileDisplayActivity to enhance user experience by allowing users to create a new directory
added functionality to toggle bar border width in multiple activities to ensure proper layout behavior for different chart scenarios
updated the SSL URI from " okcoin " to " okex " in OkCoinExchange . java to ensure compatibility with the latest OKEX
add deciderscorecomparator to the AcceptedForagerTest class to improve test reliability
replace FileChannel with SeekableByteChannel in Files . java and update read method in BytesAndLines . java to improve resource management and ensure
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve code clarity and maintainability by
rename MockHandler to MockHandlerImpl across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added imports for ActivityManager and Utilities , and set watch heap limit to 250 MB in QuickstepProcessInitializer . java to ensure compatibility with debug
refactor sumWithCompensation calls to use a variable for clarity to improve readability and maintainability of the code
[ log4j2 - 1349 ] remove @ ignore from abstractloadbundletest
refactor conditional checks for top level deletion in PrecompactedRow . java to improve code readability and maintainability
updated return statements in ICC _ Profile and ColorConvertOp , and added a new test class InvalidRenderIntentTest to improve code clarity
added MeterRegistryLifecycle bean to manage MeterRegistry lifecycle lifecycle in MetricsAutoConfiguration to ensure proper resource management and shutdown of MeterRegistry instances
change log level from warn to info for config center failure
added error handling for certificate certificate generation in CertificateFactoryTest . java to ensure proper certificate validation and prevent potential certificate issues
camel - 1774 : camel - simple - parser - add support for ambiguous binary operator in simple predicate
simplified the onTabUnselected method in EditorActivity and added window dismissed handling in IDEEditor to improve code readability
add user . name to error log message in accesslogvalve
updated file paths and modified scale values in SkeletonModelGpuSkinningTest . java , added null check for meshnames in Ogre
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
added support for specifying the " d . ts file " output directory in JSweet command - line launcher and transpiler to enhance flexibility
[ flink - 1357 ] [ connector / kafka ] [ stream ] set default stream fetch timeout to 600 , 000 for kinesis consumer
[ hotfix ] [ dataflow ] add . html to streamingdataflowworker
increased the maximum number of metastore server threads from 100 , 000 to 1000 , 000 to increase the metastore server thread
changed the return type of the onTaskSnapshotChanged method from void to boolean to allow the method to return a boolean indicating success
updated shadow radius setting in SwipeUpAnimationLogic . java to use shadowRadius instead of mMaxShadowRadius to ensure the correct shadow radius
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the functionality of the ` aggregatorInput `
updated loop condition from ' limit ' to ' end ' and added error handling in MarketSellAssetActuatorTest . java to ensure
fix polyglotcontextimpl . isinterpreter ( ) return false for internal source .
updated the condition to check for null previousCachedFilePath in CreateKeytabFilesServerAction . java to improve clarity and correctness of the
added DisplayController import and modified WindowManagerProxy initialization in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController functionality
added a check for root directory in MetalFileChooserUI and SynthFileChooserUIImpl to determine the toolTipText based on the
changed the method of obtaining the screen size from getToolkit ( ) to Toolkit . getDefaultToolkit ( ) to ensure compatibility with
changed the return type of recognise method from RecognisedObject to CaptionObject in TensorflowRESTCaptioner and TensorflowRESTRecogniser
added unit tests for entity insertion and removal methods in JPASQLBase . java to enhance test coverage and ensure correct behavior of query execution
removed drag index check and adjusted drag index logic in FreeformFinSetConfig . java to streamline point removal process by eliminating unnecessary
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
updated runtimeError message to include program . spendAllGas ( ) and added a call to program . spendAllGas ( ) to improve error
updated error messages in ElementsShouldSatisfy and ZippedElementsShouldSatisfy _ create _ Test to use newline characters instead of single
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactor unsafe handling in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to use dedicated methods to improve code readability and maintainability
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs classes and implemented a test for blacklisting modules when not
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to control page centering behavior in the
updated the order of calls to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to improve code readability
refactor KonnectedBindingConstants , KonnectedUPnPServer , KonnectedHandler , and Konn
changed the type of attributeValue from Object to List < Object > in WSFederationClaimsReleasePolicy . java to allow for more flexible attribute
refactor test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing to ensure correct handling of
refactor the copy mode logic into a separate method ` startCopyMode ( ) ` to improve code readability and maintainability by encapsulating
replaced the private method ` writeXmlOutput ` with a public static method ` writeXmlOutput ` and updated XML output handling to use a
camel - 1774 : fixed npe in aggregator when use empty splitter
camel - 17454 : camel - spring - boot should use camelexchangeexception instead of exchangehelper to create exception message
move basicconfigurator to package ch . qos . logback . classic .
[ hotfix ] [ dataflow ] do n ' t check for valuenumber . phi _ node in type qualifier analysis
added import statement for SharedStringSource in TestXSSFRichTextString . java to facilitate the use of SharedStringSource
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a way to invoke a method with specified parameters
refactor BoxAndWhiskerCalculator , DefaultBoxAndWhiskerXYDataset , HistogramBin , HistogramType , Regression ,
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the access modifier of NormUpdate class from instance to static and updated field equality checks in multiple files to enhance encapsulation and improve readability
changed the visibility of the singleton and singleton constructors from public to private to restrict access to the singleton class for better encapsulation
refactor IfStatementTest to utilize a new Graph instance and improve test expression processing to enhance code readability and maintainability by reducing
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor TypeAdapter to simplify null - safe method calls to improve code readability and maintainability by reducing redundancy
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the expected value of the test
added a new class EXIFReader to handle image metadata processing and updated ImageProcessingService to use this new class to improve image processing functionality and
change return value of tostandardunit from unknown _ to _ sdk _ version to none
[ drools - 1348 ] applypmmlmodelcommand now correctly instantiate parameterinfo from request params .
add miss newline to log message in fluentprotocol .
added a check to ensure the bubble bar is visible before proceeding to avoid unnecessary processing when the bar is not visible
[ gr - 26464 ] avoid miss label when compile with aarch64
added a try - finally block around the initialization of JDKDKLogManager in JDKXRLogger . java to ensure thread safety when initializing the
added a ` find ` method to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
refactor SSL connection handling and assumptions in TestSSL . java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix race condition in sort mergeresultpartition
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for http : / /
updated the ` PluginHandleController ` , ` PluginHandleDTO ` , ` PluginHandleDTO ` , and ` PluginHandleService ` classes to
updated method calls from ` nextSpan ( ) ` to ` start ( ) ` in ` DefaultSpanCreator . java ` and ` Sle
added new configuration properties for drawable color , depth , stencil , and multisample in IOSApplicationConfiguration and IOSGraphics classes to enhance
refactor login test to use a new method ` attemptLogin ` to improve code readability and maintainability by reducing redundancy
fix checkstyle issue in util / jniutils . java
removed unnecessary thread interruption check in SynchronizationStatistics . java to streamline thread management by eliminating unnecessary interruptions
refactor Implements and ShadowPicker classes to improve code organization and maintainability
refactor HTTP / 2 client options creation to use a dedicated method to improve code readability and maintainability by centralizing HTTP / 2 configuration
added support for both StructType and DynamicArray types in DynamicStruct and updated string building in SolidityFunctionWrapper to improve type handling and
updated method calls to include a boolean parameter for text alignment and font size in InlineLayout and FontUtil classes to enhance flexibility in property retrieval
added constructors to ` CopyStep ` and a corresponding test in ` CopyStepTest ` to enhance functionality by allowing recursive copying of paths in the
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) method do n ' t
camel - 14850 : camel - core - optimize to reduce flakiness in camel - core
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` FlavorParserTest ` to utilize it to
change list types from List < String > to List < ByteString > in WitnessScheduleStore . java to improve type safety and consistency in data
added a check for non - empty resultsMeta before printing it to avoid unnecessary output when resultsMeta is not empty
refactor ConcurrentLinkedQueue logic to improve item removal logic and add a new RemoveLeak class to enhance concurrency management and prevent potential errors during
added an ` addSpecialTokens ` parameter to multiple ` encode ` and ` decode ` methods in ` HuggingFaceTokenizer ` to enhance
[ hotfix ] [ runtime ] use collections . ncopy in taskmanagerservices
refactor chunk data handling in LoadSingleTsFileNode . java to improve clarity and maintainability of chunk data management
added session storage context constant and updated view state management in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance
added a test for schema validation in TestJspDocumentParser to ensure that the XML parser correctly handles schema validation issues
added a default constructor to TypeAdapter and updated comments in Java17RecordTest and ReflectionAccessTest to improve code clarity and ensure compatibility with
added support for the ' kill ' flag in the SuspendedEvent class and modified the event dispatching logic to ensure proper handling of the '
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and facilitate future updates
( chore ) camel - core : remove unused parameter
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and removed unnecessary print statements in BlockingTest .
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper lifecycle management during tests
added normalization to the CheckSum class to ensure proper handling of special characters in checksum representation
refactor command handling to check for non - null commands before processing to improve robustness by avoiding potential NullPointerExceptions
add miss @ override annotation in baseappstate and basicprofilerstate
changed the type of ` dbDoc ` from ` T ` to ` DBObject ` in ` MongoTemplate . java ` and added a new
added a method to handle multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure correct handling of multiple remote addresses
changed return type of getJobArgs methods from String to ObjectBuilder and updated worker shell step addition to enhance flexibility in job argument handling
refactor CookieManagerTest and UnmodifiableMaps to use a static method for retrieving the host address to improve code readability and maintainability by
added whitespace handling in GlyphLayout . java and updated BitmapFontTest . java with a new text in BitmapFontTest . java to ensure correct
added a new method ` pauseOrResumeSplits ` to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplit
added HIVESCRIPTIDENVVAR configuration for script operator ID in HiveConf and ScriptOperator classes to enable dynamic environment variable management for script operator
refactor getListedTermCounts method to utilize a stream - based approach for counting term counts to improve performance and maintainability by reducing
added a new action class ` UseSeparateStepSizeAction ` to handle the " UseSeparateStepSize " feature in the Jog
added imports for AccountManager and FileLockingHelper , and refactored unlock handling logic in FileMenuFilter to improve code clarity and
refactor RoundRobinTableInputFormat and TestTableSplit for improved readability and consistency to enhance code clarity and maintainability by
updated header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and its test to ensure
pdfbox - 4071 : use ioutils . closequietly instead of null check
added fullscreen support and updated display mode handling in GwtGraphics and GwtApplication to improve UI responsiveness and control over fullscreen
updated the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` and modified the ` normalizeResource ` method
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` Dubbo ` to
updated asset path resolution to use ` resolve ( fileName ) ` method instead of ` Gdx . files . internal ( fileName ) ` to ensure
updated logging level from warn to info in OIDCDefaultJsonWebKeystoreCacheLoader and added trace logging in ChainingAttributeReleasePolicy .
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple classes to improve thread safety by using ` lockInterruptibly
updated package declaration syntax in Compiler . java to improve code readability and maintainability
fix nullerefandredundantcomparisonfinder for method that do n ' t match the current PC
use defaulthttpdatasource instead of hardcoded string in dashrendererbuilder
added a configuration property for the maximum number of prepared statements per database connection to enable dynamic configuration of the maximum number of prepared statements per database connection
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple configuration classes to improve clarity and
added error handling in the ` checkErr ` method of ` AutoScalingHandler ` to ensure proper error reporting for command payload errors
refactor CombinedDataset class to improve code readability and maintainability
change variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve clarity and
added methods to remove cryptography restrictions in JceSecurity and CryptoAllPermission classes to enhance security by allowing users to remove specific cryptography restrictions
added a check for the ev ' s cancellation state before proceeding to ensure that the event is not cancelled before proceeding with chunk generation and
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of
added a null check for the vectorization context before setting it to avoid potential NullPointerExceptions when the vectorization context is null
fix speed calculation in wialon protocol
hbase - 2748 default value of metricsuseraggregatefactory . default _ metric _ user _ enabled _ conf from true to false (
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
modified the initialization of mUserPresent , mVisible , and mAttached variables and added a conditional check before unregistering the receiver to ensure the
refactor multiple Java classes including AsyncFile , HttpClientRequest , HttpClientResponse , HttpServerResponse , NetSocket , and ReadStream to improve code organization
added parameters to the zadd method call in PipelineBase . java to enhance the addition process by allowing parameters to be passed to the zadd
[ hotfix ] fix checkstyle violation in org . apache . logging . log4j2
rename ` TestAsyncMessages ` class to ` TestAsyncMessagesPerformance ` to improve clarity and consistency in naming conventions
added a method to retrieve an optional TargetNode and modified the VersionPropagatorBuilder to implement HasTests to improve handling of non - existent targets
updated time zone constants in TimeZoneProvider . java to use constants instead of hardcoded values to improve code readability and maintainability by using more
updated the return statement in EscherBlipRecord . java and added a new TestOLE2Embeding . java file with a test
removed redundant variable declarations in JSONParser . java to streamline code and improve readability
replaced ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` with ` JavaType . compile ( fullyQualifiedClassName )
updated the DETAIL _ THUMB _ HEIGHT and added handling for local trailers in BaseItemDetailsFragment . java to improve playback
added a method to remove glyph information in CStrike and CStrikeDisposer classes to improve memory management by ensuring glyph information is properly
[ activiti - 1770 ] terminate all execution and process instance after end - of - end - of - end - of -
camel - 13946 : camel - xml - bind - dsl - add support for xmlrootelement to the name strategy .
updated the URL in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html " to
added a new option ` defPrefs ` to reset all default preferences in ` JabRef . java ` to ensure that all preferences are
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and restrict access to these
[ danfossairunit ] remove deprecate channel . manual _ fan _ speed and channel . manual _ fan _ step ( #
use hamcrest assertion instead of junit in tests / integration / integration - java
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating unnecessary lines
added ` index ` check in ` PartitionPanel ` and implemented ` equals ` and ` hashCode ` methods in ` PartitionFactory ` to ensure proper
[ vmware ] add root disk size to custom parameter in uservmmanagerimpl
updated visibility logic in PredictionRowView to use PreferenceExtensionsKt for improved preference management to enhance user experience by allowing suggest apps in
[ geos - 5394 ] fix invalid bbox in api bbox parse
added valid methods for value and position parameters in LibrustzcashParam . java and updated the key in Librustzc
added a @ Deprecated annotation to IThrowableEntity . java to indicate that the IThrowableEntity is removed from FML cpw . mods .
added random positioning calculations for x and y in NodeDataImpl . java to ensure proper positioning of the node ' s properties
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for refresh token validation to improve
refactor JavacStep to use try - with - resources for the invocation variable to ensure proper resource management and prevent potential memory leaks
update version number from 0.9 . 1 to 0.9 . 2 in mmm Version . java and ppp Version . java to
added a condition to check for DEEP _ SHORTCUT itemType in LoaderCursor . java to ensure proper handling of deep shortcuts in the cursor
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hash code generation for timeType , timeType , and columnName types
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes and improve encapsulation
added a boolean flag ` useProxyResponseCode ` to control proxy response handling in ` HttpURLConnection . java ` to ensure proper behavior when transp
aarch64 : fix memory leak in aarch64move .
server : do n ' t use the vm ' s reserve capacity if there be no service offering
added a null check for maxScore in JSONResponseWriter . java and included a query in TestDistributedSearch . java to ensure that score
updated audio recoder parameters from 22050 to 44100 in AudioRecorderTest . java to improve audio recognition accuracy
updated the calculation of newOriginX in RocketFigure . java to include scaling factors to ensure proper positioning of subject bounds based on
updated null and empty checks for Druid data source in DruidQueryBasedInputFormat . java to ensure proper handling of null or empty data
added a new property " Original Type " and updated regex pattern in CustomProperty . java , along with corresponding tests in CustomPropertyTest . java
added a static method ` create ` to create a ` Table ` and a ` Map < String , Object > ` to facilitate
simplified the return statement by removing unnecessary variable ` isBetweenGivenPeriod ` to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and SchemaPairWriterTest . java to
added persistent attribute types handling and a method to check entity paths in QueryUtils . java and updated test cases in EclipseLinkNamespaceUserRepository
added synchronization to the ` spans ` list and method calls in ` TestSpanHandler . java ` to ensure thread safety when accessing spans to avoid
changed the parameter type of ` getText ` methods from ` List < Object > ` to ` List < ? > ` in multiple classes to enhance
updated exception handling in ViewContextImpl . java to use debug and warn levels instead of error to improve logging clarity and provide more informative
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
updated error messages from " System is starting and not ready for remote calls or shutting down in progress " to " The request is rejected " and
added new iOS resource files for " ios / data " and " ios - moe / resources " in GdxSetup . java to ensure
updated imports in TestSearcherManager . java and added a ConcurrentMergeScheduler to the MockAnalyzer to ensure thread - safe merging of the Mock
added a null and empty check for session state in QTestUtil . java and improved list handling in GenericUDTFInline . java
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ggb - 1341 prevent the user from click on the right - click menu
added persistence and session factory services in HibernateBundleActivator and improved test cases in OsgiTestCase to enhance service management and ensure
update timeout calculation in HikariPool . java to use connectionTimeout instead of elapsedTimeMs to ensure correct timeout calculation based on connection timeout
refactor voicecompiler . createcomponentfile ( ) to use non - packaged - resources
updated file name handling in Compat . java and modified directory checks in FileOpener . java to improve clarity and correctness in file
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` in the ` Cell `
add port clash check for -- rpc - http - port = 0 and -- rpc - http - port = 0
added null mask functionality to WebSocketClient and modified WebSocketConnectionD12 initialization to use fixed mask generation to improve flexibility in mask generation for WebSocket
change return type of genUDTFPlan method from RelNode to Pair < RelNode > and modify its return statement to improve type safety
added node selection statistics tracking for bucketed preferred and non - preferred nodes in NodeScheduler , SimpleNodeSelector , and TopologyAwareNodeSelector classes
added a new file ` Person . java ` with getter and setter methods for the ` name ` variable in the ` org . apache . maven
added a boolean variable ` hasOwnerPtr ` and modified the ` execute ` method to check for the presence of an owner pointer to ensure proper
added clock functionality to PlaybackOverlayFragment for fade - in and fade - out animations to improve UI responsiveness and user experience during playback
remove duplicate updatecomparatoroutputlevel ( ) call from world . updatecomparatoroutputlevel ( )
changed the access modifier of the IMPL class and improved exception handling in SegmentReader . java to enhance encapsulation and provide clearer error
refactor Sudoku event firing to execute on the Event Dispatch Thread using SwingUtilities to ensure the event is executed on the Event Dispatch Thread
refactor DefaultInetAddressAdapter to CollectionTypeAdapter and update related methods in Gson and MiniGson classes to improve type adapter functionality and
added methods to handle double , long , and string values in the Series class and corresponding tests in DataFrameTest to improve error handling and ensure correct
updated the option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java
updated boundary checks in GeoRelationUtils and modified return statements in GeoUtils to improve boundary checks and ensure correct calculations in polygon rendering
cloudstack - 7892 : fix npe in listvirtualmachines api call due to miss diskoffering id
added cleanup method to HazelcastTest to ensure proper cleanup of resources after tests are executed
added tests for AES algorithm and provider exceptions in BlockCipherTest . java to ensure correct handling of unsupported cipher modes and improve error messaging
added filters for printing operations logs in QFileClient . java to improve user experience by providing clearer output for operations logs
fix @ inject ( parentinterface < list < string > > ) and @ inject ( parentinterface < collection < ? > > )
set the current connection address to proxy address if it ' s null
replaced Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to improve code readability and maintainability by using
refactor ImageOutputStream handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential NullPointerExceptions
removed usage of TvApp . getApplication ( ) . showSearch in multiple fragments to streamline code by eliminating unnecessary method calls
removed redundant ` this ` reference in ` SchemaCrawlerCommandLine ` and streamlined the ` toString ` method in ` GrepOptions ` and `
[ http : / / issues . apache . org / jira / browse / amq - 4891 ] add osgi configuration for
added a @ Autowired annotation for the PersonRepository instance in RepositoryIndexCreationIntegrationTests . java to enable the test for the PersonRepository
changed the throw type of the stop method from Exception to InterruptedException in UIServer . java and updated log message formatting in TestVertxUIM
added new case statements for various cactus types in BlockCactus . java to enhance code readability and maintainability
refactor mouse handling in ThemeSelector to use MouseMotionAdapter for mouse interactions to improve mouse responsiveness and maintainability of mouse interactions
[ java ] fix regression in min multicast flow control rhs padding .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing
updated exception handling in StatTokSentAnnotator to throw IllegalArgumentException instead of Exception to improve robustness by providing clearer error messages when modelFile
added a condition to check if the query is a distinct query before processing group - by expressions in ClusterIntegrationTestUtils and modified query handling in
improve error message for jni linkage .
pdfbox - 4071 : fix typo , a suggest by valerybokov
added null check for children before iterating over its elements in PartitionPruner . java to prevent potential NullPointerException when accessing children
added token position and currentPosition variables and improved error handling in MessagePackParser . java , along with corresponding tests in MessagePackParserTest .
added locale management to the AbstractSolrMorphlineTestBase class to ensure the default locale is set after tests to improve test reliability by prevent
removed unnecessary conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to streamline code by eliminating unnecessary
added a new test class MetricsReporterTest to validate metrics registration functionality to ensure proper functionality and functionality of the MetricsReporter functionality
camel - 13946 : camel - osgiserviceregistry - remove unused import
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class for comparison and hashing to enhance the functionality of the ` Rectangle `
[ hotfix ] [ kafka ] rename sink name to test _ nonexistenttopic
refactor DSAParameterGenerator to use BigInteger constants for improved readability and maintainability to enhance code clarity and maintainability by using
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to HiveConf and updated related classes to utilize it to
fix intermittent failure of clientoutofmemoryhandlertest
added a new method ` getCmoObjectId ` to calculate the shape ID in multiple shape classes and introduced a new test class ` TestShapes `
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the ` Dist
refactor SearchTravRetLoadFieldSelectorTask , SearchTravRetTask , and SearchTravTask classes to improve code organization and
added bind and unbind methods for the ExtensionAdapter in ManagedKubernetesClient to enable binding and unbinding of the ExtensionAdapter in the Kubernetes client
updated subtitle text setting to use a utility method for retrieving info row information to improve code readability and maintainability by centralizing the display of
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot , TestRSAProviderTokenManager , and Test
added error handling for summary generation in BugCollectionBugReporter . java and updated generateSummary method in XMLBugReporter . java to improve robustness
removed redundant reset calls for intPool and bytePool in TermsHash . java to simplify memory management by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to improve code readability and maintainability
updated the API level check from S _ V2 to TIRAMISU and introduced a new WindowSessionDelegateU class for handling user
updated URL handling logic in UrlHelper . java and added unit tests in UrlHelperTest . java to ensure correct handling of requests with non -
added support for MSSQLDatabase in foreign key constraint generation to ensure proper handling of foreign key constraints for MSSQL databases
refactor lambda expressions in HStore and StoreEngine classes for improved readability to enhance code clarity and maintainability
[ emzuli ] add a filter for pipe that do n ' t have the same colour .
simonstewart : make htmlidentifier logging configurable
updated method calls from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java
simonstewart : add a lock to verify the current thread , and deprecate the setthrowwhenusingwrongthread method .
added CatalogAndSchema import and modified SCHEMANAME assignment logic in SequenceSnapshotGenerator . java to enhance schema management by customizeing schema names
updated color handling in SpriteBatch , SpriteCache , LwjglDebugStarter , AlphaTest , and AlphaTest classes to
fixed - spring data redisson connection . join ( ) method throw classcastexception
added logic to add the base core to statisticYearCores if it does not already exist to ensure that the statistic year cores are not added to
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTaskFromView ` to improve
updated MorfologikFilter to include a dictionary resource loading mechanism and improved import statements to enhance flexibility and maintainability of the
updated sorting options in GridFragment to use " community _ rating " and " critic _ rating " instead of " stars " to ensure correct
added imports for ViewKt and ListRow , and modified visibility of ViewKt based on header item type to improve UI responsiveness
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ( DB2Database ) ` in multiple classes to improve type safety and
added support for java . time module in jackson serialization
replaced the import of ` org . apache . log4j . MDC ` with ` org . slf4j . MDC
replace TypeBearer with Type in PhiTypeResolver . java to standardize type handling and improve code clarity
removed unnecessary import statements in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and updated ` ProjectCommand ` to use it to improve build target management
added garbage collection of the idle strategy in the Ping class to ensure proper resource management and avoid potential memory leaks
updated ` OCFile ` and related classes to use ` ContentResolver ` instead of ` ContentProvider ` to improve flexibility in handling content
reformatted conditional checks for selection events in ReportPanel . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix npe in testinglogicalslot
add a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime .
replaced multiple instances of ` super ( ) ` with ` super ( ) ` in multiple exception - related classes to ensure consistent constructor usage across
added a method to set the UIID in ScaleImageLabel to ensure proper handling of the icon in the label
refactor FeedUpdateService to use a single FeedEntry variable instead of a single FeedEntry variable to improve code readability and maintainability by
added support for " - cp " argument in addition to " - classpath " in addition to " - cp " to enhance command - line options
updated the linker option from ` options ` to ` compiler ` in ` avutil . java ` to ensure the correct compiler is used for the
updated the initialization variable in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java file to improve test coverage for 7196045 functionality
updated density and decay values from 1.5 f to 1.0 f and 0.9 f in ShaderParametersLightShaft .
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and modified related methods in ` OidcRedirectAction
[ flink - 1357 ] [ table - planner - blink ] [ table - planner - blink ] add support for nullable
added support for federated sharing in UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by allowing federated sharing based on user
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document values are
updated error messages in BufferAlignmentInterceptor and added package - info . java for improved clarity to enhance code readability and maintainability by
added a method ` intForEach ` to the ` Int2ObjectHashMap ` class and updated the ` IntObjConsumer ` interface to enhance
fix worldserver . savedata ( ) to share scoreboards early .
change return type of count ( ) methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongo
refactor logging conditions for MTree snapshot creation in MManager . java to improve clarity and maintainability of MTree snapshot creation logic
refactor dot product calculation in VectorUtil to use a temporary variable for clarity to improve readability and maintainability of the code
added methods to manage the latest confirmed block number and associated methods in the DynamicPropertiesStore and Manager classes to improve block management and control over
replaced the ` setLocale ( ) ` method with a new ` setLocale ( ) ` method in ` GpsMainActivity ` and ` Main
added a check to determine if a new database was created in the LauncherClings class and integrated it into the LauncherProvider class to
updated assertions and exception handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code clarity and ensure proper collection management
refactor conditional logic in Constants . java for better readability to improve code clarity and maintainability
added a check to ensure the current thread is not equal to the current thread before proceeding with operations
changed the access modifier of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated imports and references from Jellyfin ' s apiclient model to Jellyfin ' s API model to align with the
added a loop to set XML attributes for SVG elements in BatikSVGDrawer . java to ensure proper handling of imported attributes in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing failures
modified the handling of waitingForResult in CodenameOneActivity to conditionally set it to false based on the presence of " WaitForResult
refactor HitQueue , PriorityQueue , TopOrdAndFloatQueue , and TermAutomatonScorer to use a Supplier for sentinel object
added a description field and modified visibility logic for widget elements in WidgetCell . java to enhance user experience by providing a clearer description for widget
added a maximum attribute count check in the Attribute class to ensure that the maximum registered attribute count exceeds 64
move predicatestest to impl package so that it can be use
camel - 14850 : add option to turn off case - insensitivity by default
refactor inline handling in InlineLayout and Breaker classes to improve boundary condition checks to enhance clarity and maintainability of the code
added nullability annotations and improved view initialization in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions during view
refactor setup class to simplify instrumentation logic to enhance code readability and maintainability by consolidating instrumentation checks
added a condition to return the last column index in the table if the association is insert to ensure the correct index is returned when the association is
updated the memory limit command to use a dynamic file path based on the Docker client ' s Cgroup version to improve flexibility by allowing dynamic
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxx
added a null check for the source under test in JavaTestRule . java to ensure that the source under test is not among its dependencies to
add mc _ version to allow minecraft 1.9 . 4 and minecraft 1.9 . 4
added a check to set atIndex to 0 in StringUtils . java to ensure atIndex is non - negative before proceeding with operations
increased the timeout duration in BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds and increased the sleep duration from 1000
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility in handling assist content requests
replaced ` StringUtil . createReadableString ` with ` StringUtil . encode58Check ` for witnessAddress to ensure proper encoding of the witness address
refactor DefaultMethodRegressionTests . java for improved test coverage to enhance code readability and maintainability
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest
added a call to close the container loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and implemented multiple test cases for exception handling in FaultTolerantExceptionClassesTests to
[ flink - 13434 ] [ beam - 8274 ] [ beam - 8274 ] improve configbuilder error message for
added ` extraProperties ` parameter to multiple tuner method calls in ` TableConfigTunerUtils ` and ` TableConfigsRestletResource `
added a check for in - progress instances in the PinotRealtimeSegmentsManager class to ensure that segments are only added to the list of
added a check to return null if the touchable is disabled to ensure proper handling of disabled touch scenarios
added a new test method ` testPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure precompiled headers are
throw a retryable exception if the cache config can not be create
refactor JSweetTranspiler to utilize a new method for checking installation of node packages to improve code readability and maintainability by
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance the management and management of components in the application
added a conditional check for ` false ` in ` LongClickableSpan . java ` to ensure that ` inAppBrowser ` is always true
refactor equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` equals ( ) `
updated conditional check in mmm Types . java and added new classes T6558559a and T6558559b
updated player output to include position set details and modified region size calculation to improve user experience by providing more context for position updates
camel - 1187 : camel - kafka - add shutdown to kafka consumer to avoid deadlock .
removed the default implementation of the examples ( ) method in Schema . java to streamline the code by eliminating unnecessary default implementation
replaced thread . isAlive ( ) calls with a while loop and added a break statement in AgentRunner . java to ensure proper handling of
remove the time column from the dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure the dataset ' s time column is
updated logical operator from ' & & ' to ' && ' for conditions in FacetComponent . java to improve readability and maintainability of conditions
replaced linker provider retrieval with CxxPlatform retrieval in RustBinaryDescription . java and RustLibraryDescription . java to streamline dependency
added a private String field ' name ' with multiple getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties
cfgprinterobserver : fix npe in igv dump handler
added a small scan threshold configuration and updated related logic in BaseQueryPlan , QueryServices , and QueryCompilerTest classes to enhance query handling and
added " routeId " to the RetryGatewayFilterFactory ' s toString method to include the route ID to improve the clarity of the filter
replaced redisplay ( ) calls with callWidget ( REDI
replaced the method ` onOverviewShown ` with ` showForHomeIfNeeded ` and ` showForOverviewIfNeeded ` across multiple classes to stream
refactor null checks for minPackedValue and maxPackedValue in CheckIndex . java and add a test for deleting all point documents
updated the publish method call from ` true ` to ` updateLastState ` in ` ZkController . java ` to ensure the correct state
updated the string representation of SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to include a quote
added a null element to the exp list in SpliteratorCollisions . java to prevent potential null pointer exceptions during collection operations
simonstewart : add text case sensitivity support to condition
replaced multiple instances of ` do ( ) ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to
# 1797 - enh : add queryengine . forwardonlyfetchsize ( ) to make it easy to configure the fetch size of
refactor exception handling in HttpServerMultiplexChannelHandler to check for ClosedChannelException before sending 404 back to the client to improve robustness by
pdfbox - 4071 : initialize arraylist with the size of beads .
updated the calculation of window radius in QuickstepAppTransitionManagerImpl . java to include support for rounded corners on Windows to ensure proper scaling of
replaced ` ShapeDrawable ` with ` View ` and updated layout parameters in ` DesktopTaskView . java ` to improve layout management and
added a new instance of upstreamCheckService in UpstreamCheckServiceTest . java to facilitate the creation of the upstreamCheckService
changed log level from warn to debug for session immortal logging in AbstractSession and AbstractSessionManager to improve logging clarity and ensure
replaced error logging with returning locks in ZooKeeperHiveLockManager . java to streamline the code by eliminating unnecessary exception handling
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a boolean variable ` containsCustomData ` and modified the mipmap generation logic in ` FileTextureArrayData . java ` to ensure
updated string literals in assertions in DefaultMaskingFormatterTest to use single quotes instead of double quotes for consistency to improve readability and maintainability
added a selectable boolean field and methods to manage touch events in the List class to improve user experience by preventing touch events when not selectable
removed the check for zero value count in LlapArrowBatchRecordReader . java to simplify the code by eliminating unnecessary checks
added file separator handling and improved print statements in PolicyContext . java , along with a new test case in TestPolicyContext . java to
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and performance of query handling
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future updates
replaced direct closing of the producer with a Runnable to ensure the producer is properly closed before closing it to improve resource management and prevent potential NullPointerException
updated the assertNodeStateProvider method to include a ignorableNodeValues parameter and modified its usage throughout the code to enhance flexibility in
added a lock file deletion in RocksdbMavenPomCache . java to ensure that the workspace does not exist before attempting to delete
added InetSocketAddress import and updated client port retrieval in MiniZooKeeperCluster . java , and updated corresponding test in TestHQuorumPeer . java to
refactor RestClient . getResponse method to improve error handling and logging to enhance clarity and maintainability of the code
updated the method to convert segmentTarURIs to segmentTarURIStrs in IngestionUtils . java to ensure proper handling of string arrays
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when mCurrentItem is null
increased the number of strings from 500 to 100 in TestSpecialOperations . java to increase the number of strings from 500 to 100 to
updated ByteArrayInStream initialization and removed hexToBytes method from WKBAttributeIO . java to simplify code and improve performance by eliminating unnecessary
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a state is a direct substate and updated tests accordingly to ensure proper handling of substates in the state machine
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enable join operation functionality in the PostJoinOperation class
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify the execution of PostgreSQL tests
http : / / issues . apache . org / jira / browse / amq - 5035 - fix intermittent test failure
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
changed the data types of ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` from ` int ` to ` String `
remove unnecessary cast to null in siputils . createaudiomediaformat
refactor filter handling methods in FacetProcessor to return applied filters to improve performance by avoiding unnecessary filtering when filters are applied
added a timeout handler and modified the condition for enabling the timeout handler in the ShuffleHandler class to improve control over the handling of timeout
refactor mQuickStepStartingRotation initialization to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability
updated logging statements in XPathBuilder and XQueryBuilder for consistency and clarity to improve logging readability and maintainability of the code
updated the resource loading method in NNDataSet . java to use DataResource class instead of the class reference to improve code clarity and maintainability
add test case for escape backslashes ( # 1751 )
added a check for the presence of the ' atlas ' property in the map before processing to ensure that the map does not contain the ' atlas
camel - 1770 : remove property placeholder support for component to be able to resolve property placeholder on itself .
added a call to close the levelDbDataSource in BlockchainTest . java and removed multiple receive listeners in KafkaTest . java to streamline
refactor code to use a new method ` getLines ` for splitting lines to improve code readability and maintainability by centralizing line splitting
remove dependency on spring - integration - gateway - support from web service test
replaced ` ImmutableList . Builder ` with ` List < Object > ` in multiple SQL - related classes to improve code readability and maintainability
added a check for " OpenJDK " in addition to " Apple " in addition to " Apple " to ensure compatibility with Open
added a keepAlive ( true ) method to the ReactorClient class to ensure the client is alive before processing the base URL
updated VertexAttribute usage in MD5Renderer . java and ObjLoader . java to use ShaderProgram . POSITION _ ATTRIBUTE and TEXCOOR
camel - 14836 : camel - core - add support for ` ` property ' ' component in camel context .
refactor null check for accountCapsule retrieval in UnfreezeBalanceActuator . java to improve code clarity and ensure accountCapsule is
update version number to 3.8 . 1 ( alpha )
updated return statements to use ` t . unannotatedType ( ) ` instead of ` t ` for better type handling to ensure correct type
updated assertions and modified sequence file size configuration in StorageGroupProcessorTest . java to ensure correct handling of sequence file size in tests
added a DumpableCollection for environment management and updated class loading logic to support the " ee10 " environment in the Jetty framework
added a parameter ` waitbeforestart ` set to 2500 in ` FFMpegVideo . java ` to enable automatic synchronization of the video
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage across multiple classes to simplify the constructor by
updated import statements and refactored test methods in AccessorsTest . java for clarity and consistency to improve code readability and maintainability
added a new method ` compileMethod ` in ` GraalCompiler ` and a public method ` frameMap ` in ` LIRGenerator `
replaced JUnit @ Ignore with @ ConditionalIgnore in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to improve test
fix boat ' s y - coordinate for water
updated return statements in Directory . java and added getLockID method in RAMDirectory . java to improve clarity and maintainability of the string representation
removed the method ` allowExperimentalOptions ( ) ` from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added new methods for asserting paths and assertions in BDDAssertions . java to enhance functionality for path assertions in the BDDAssertions
renamed variable ` hp ` to ` hostField ` and updated its usage in ` ForwardedRequestCustomizer ` and ` ForwardedRequest
updated logging level from debug to warn for missing Kubernetes config files to improve clarity of log messages for better debugging and maintainability
added OCFile handling in UploadListActivity and introduced a method to fill OCFile in FileStorageUtils to improve file upload management and
added a new ` ProviderLoader ` and ` ProviderLoaderListener ` classes to manage crypto provider installation success and failure events to improve provider management and
replaced references to ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests `
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig ' s name and order clause to enhance clarity and maintainability of the code by
hhh - 1358 - fix test failure on postgresql - s2s
fix division by zero when datamemberssize be 0
added error handling and scheduler start logic in ExecutionScheduleManager , ExecutionScheduler , and ExecutionSchedulerImpl classes , along with corresponding test cases to improve
updated InlineBox instantiation and conditional checks in BoxBuilder . java to improve code readability and maintainability
updated argument strings in StatisticMap . java for consistency to improve readability and maintainability of error messages
updated the return value of getStagedRectSlideEnd from 383 to 500 to increase the slide end from 383 to improve user experience by
updated button labels and command table configurations in WaveInfoDialog and PlacementFragment to use localized bundle names to improve code readability and maintainability by
updated conditional check for KILL _ ROAD _ ITEMS in BukkitMain . java to include plotArea as a valid plot
added a test for setting touch exploration enabled in ShadowAccessibilityManagerTest and modified touch event listener handling in ShadowAccessibilityManager to ensure
pdfbox - 5328 : add unit test and fix bug
simplify code by use getname ( ) instead of getpropertyasstring ( ) .
replaced instantiation of NPOIFSFileSystem with POIFSFileSystem . create in TestNPOIFSFileSystem . java to streamline
added imports for PlotArea and PlotArea , and modified return logic in mmm Move . java to improve plot area retrieval logic and ensure correct
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with the latest version specification
updated the condition check for ` count ` from ` 0 ` to ` 1 ` in the ` Filters . java ` file to ensure that the
[ micronaut - 1347 ] add clientid to consumer configuration if consumer thread > 1 .
added error handling for javac execution failure in JavacCompiler . java to improve robustness by throwing an exception when the execution fails
do n ' t repaint the view if there be no option to repaint
camel - 16486 : fix typo in springbatchproducer
added a method ` isAnimationFinished ` to check if the animation is finished to provide a way to determine if the animation is finished based on
added a new test method for custom shortcut icon with line breaks in LoginMockMvcTests . java to ensure proper handling of line breaks in shortcut
added null check for otherUrl in TimeLineCursorAdapter and updated refreshing text formatting in HomeFragment to ensure robustness by preventing potential
ggb - 1341 fix for space in the edit button
refactor ObjectHashSet class for improved performance to enhance performance and maintainability of the code
refactor null checks in DataUtilities to use Arrays . equals for improved readability and maintainability to enhance code clarity and maintainability
fix # 12770 , allow deletion of enchanted book ( # 12770 )
add microprofile microprofile test for async get / put operation
updated header map suffix from " - target - flat - headers . hmap " to " - target - target - user - headers . h
added debug logging for sending messages and improved error handling in MailService . java to enhance debugging capabilities and provide clearer feedback on sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added multiple test methods for retrieving partitions by name with single batch , multiple equal size batches , and unequal size batches in TestHiveMeta
added a closing brace to FileListListAdapter . java to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OC
adjusted the index used in the removeViewInLayout method from ` getChildAt ( getChildCount ( ) 1 ) ` to ` getChildAt (
removed " org . eclipse . jetty . server . internal . " and " org . eclipse . jetty . util . server
change the third parameter of S3Request from true to false in the S3Request constructor to ensure that the S3Request object does not
fix jfxradiobutton not update animation when timeline be null
updated condition checks for ` splits . length ` in ` DeweyNumber . java ` to ensure correct parsing of ` DeweyNumber
added a static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to replace " Category
corrected the spelling of " Invalid close control status " to " Invalid close code " in WebSocketClientTest . java to ensure consistency in
added a null check for classLoader in WebappLoader . java and updated the expected length assertion in TestVirtualWebappLoader . java to ensure
removed duplicate duplicate code in PersistentAttributeTransformer . java to improve code readability and maintainability
pdfbox - 4071 : avoid npe , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` for the ` PorterStemFilter ` functionality to validate the functionality of the `
refactor postBatchMutate method to postBatchMutateIndispensably and add success handling to improve code clarity and ensure success
changed package declarations from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix a potential race condition in chatwindowmanager . close ( ) .
removed redundant static block of Sys . touch ( ) in multiple Java files to streamline the code by eliminating unnecessary static block
updated HgCmdLineInterface to use " - mardu " instead of " -- unknown " and modified the untrackedFiles method to
camel - 1748 : camel - netty - add a timer to the channelpipeline so that it can be use in camel - net
changed visibility of fields in DirectionalLight , PointLight , SpotLight , and SpotLight classes from public to final to enforce immutability
updated width and height calculations in X11GraphicsConfig and WGLGraphicsConfig to ensure a minimum value of 1 in the graphics configuration
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding tests in ` Deleg
added a new class ` AnnoFilterTreeSet ` to handle inner classes and modified the ` findClassesThatExtend ` method to include inner
updated the overflow check for newLength in BytesColumnVector . java to ensure proper handling of integer overflows to improve robustness by preventing
replaced assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and `
ggb - 1889 add polyfunction . isequal ( polyfunction ) to make sure we do n ' t have a poly function
added a null check for the table before retrieving the column class and setting the value to avoid potential NullPointerExceptions when the table is not initialized
added a try - catch block around the instantiation of CustomChange in CustomChangeWrapper . java to handle potential ClassCastException during class loading
refactor ` DistBuildConfig ` to use ` BuckConfig ` instead of ` ConfigPathGetter ` for improved configuration management to enhance
show warning and ofx for double entry in export dialog
added an import statement for JUnit ' s Ignore annotation and annotated the BasicDistributedZkTest class to temporarily disable the test due to
modified the return types of ` doJoin ` and ` doCopyLeft ` methods in ` JoinTemplate ` , ` JoinWorker ` , and
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags in LauncherTimelineCursorAdapter . java to ensure that the launcher launches
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable pagination by clause in the query
updated assertions in RepositoryConventionPluginTests to reflect the correct number of repositories from " 0 " to " 3 " to ensure the correct repository resolution
add an externalizableutil . writesafeutf ( ) method to create a node affiliate .
improve error message when taglib directive uri be invalid
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow external access to the method from other
added array handling for cache key updates in CacheKey . java and updated corresponding tests in CacheKeyTest . java to improve performance and ensure correct
refactor file type detection across multiple files to utilize a standardized FileSystemProvider for file type detection to enhance flexibility in file type detection
added a call to close the wsSession in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
replaced ` ShadowVirtualDeviceParams ` with ` VirtualSensorCallback ` in ` ShadowVirtualDeviceManagerTest . java ` and introduced ` Virtual
added a condition to check if the context object is not before execution in the HttpSessionSecurityContextRepository to ensure that the session is removed from the session
refactor loopback address handling in NetUtil . java to improve clarity and functionality to ensure loopback addresses are returned based on point - to -
corrected a typo in the variable name from BUF _ SIZE to DEFAULT _ BUF _ SIZE and added checks for compression failures to
added secure validation and retrieval method checks in KeyInfoReferenceResolver , modified exception handling in XMLSignatureInput , TransformLocalFilesystem , and ResolverLocal
added a boolean flag to track if the icon change listener is installed and updated the action listener management logic to ensure that the icon change listener is
added a new language entry " ru " to the Language . java file to support Russian language support in the application
hhh - 1358 - use nanoseconds instead of second for duration conversion
disable frame state verification in substrategraphkit
added functionality to reset system properties for SDK settings and resources mode in Robolectric tests to ensure proper cleanup of system properties during test execution
added a system class " org . slf4j . " to the webAppContext in ViewClassLoader . java and updated tests in ViewClassLoader
added a check for " jar " in the ChangePackaging class and implemented a test for removing default packaging in ChangePackagingTest to
updated file download method to include an extension for " txt " in both FileDownloadViaHttpGetTest and FileDownloadViaProxyTest to ensure
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer for
updated units handling in JogService and Settings classes to use preferred units instead of default units to improve clarity and consistency in unit management
updated the expected date format in DatePatternConverterTest to use UTC and formatted the expected date based on the current time zone to ensure accurate date
updated return statement formatting in Terminator . java to improve code readability and maintainability
enhanced error messages in FileSystem , LocalFileSystem , and DistributedFileSystem classes to provide clearer context about file URIs and authority to improve clarity
use a timer task instead of a single thread executor for show track notification
[ ftp ] fix test that fail on slow machine .
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to enhance performance by using a more
added a method ` ignore ( Throwable ignored ) ` to multiple log classes and implemented it in ` Logger ` , ` LoggerLog ` , `
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions when runningTaskView is null
removed unnecessary casting of byte values in BukkitWorld . java to simplify code by eliminating unnecessary casting
removed the call to GraphicsUtil . cleanImage ( img ) in PanelManager . java to streamline image processing by eliminating unnecessary code
added new files MMapDirectoryFactory . java and SimpleFSDirectoryFactory . java to facilitate directory management for MMap and Simple
added null check for ` cleanUpColor ` in ` PdfCleanUpProcessor . java ` and updated test cases in ` PdfCleanUpProcessorTest
updated query comparison from " field1 maxDocFreq " to " field1 _ s maxDocFreq " in QueryEqualityTest . java to
refactor ExtendedOperatingSystemMXBeanImpl class for improved performance to enhance performance and maintainability of the code
added a method to install left and right commands in the SideMenuBar class to enhance the functionality of the SideMenuBar by allowing users to
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and conditional setup in ` TweetActivity ` and ` UserProfileActivity
added SybaseDatabase support to the primary key generation logic to ensure compatibility with Sybase databases
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] wait for the leader to be ready before send a recording .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement in NearCachedClientMapProxy . java to ensure that the method returns early
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server in ListenHTTP . java to handle exceptions during server shutdown and improve error handling during server shutdown
camel - aws2 - s3 : fix the build error of s3streamuploadoperationintegrationtest
[ hotfix ] [ taskmanagermetricshandler ] rename parameter _ tm _ id to task _ manager _ id _ key in web
remove unique _ name and network _ offerings when upgrade from 2.2 . 7 to 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to improve password validation and
updated energy limit assignment in VMActuator . java to use maxEnergyLimit instead of maxEnergyLimitForConstant to ensure accurate energy
added maxInMemorySize property and its getter / setter methods to HttpClientProperties and modified webClientPlugin constructor to accept properties to enhance flexibility
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
added new test classes for Cucumber execution , step definitions , and step definitions to enhance testing capabilities for Cucumber testing purposes
added error handling for parsing double values in TypeJsonUtils and corresponding tests in TestArrayOperators to improve robustness of double parsing and ensure correct
removed duplicate byte array initialization for 646469746564 and 80806564697464 in Utf8StringBuilderTest . java
added checks for parameter handling in the Params class and introduced a new method to check if the key is a parameter set before appending to the path
camel - 1797 : circuit breaker should allow to configure a maximum number of output for the circuit breaker .
updated the maximum buffered documents limit in TestIndexWriterExceptions . java to ensure the correct document frequency calculation based on the configuration settings
replaced calls to ` hasher . putUnencodedChars ( ) ` with ` Sha1HashCode . update ( hasher ) ` in multiple
refactor enumValue , intValue , and long methods in AsmRuntime . java to improve code readability and maintainability
fix a bug in the forge biome tag that be n ' t be add to the biome .
refactor async image loading to use a dedicated thread pool for better performance to improve performance and maintainability of the image loading process
changed access modifiers of several fields in BaseTableUpsertMetadataManager to protected and refactored preloadSegments and onPreloadStart methods to improve
updated formatting terminology from " … … … " to " … " in multiple
replaced calls to ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( varName ) ` in AbstractSunSecureRule
camel - 1748 : camel - jbang - add -- repos option to help help with -- repos option
added handling for NaN score values in CrawlDbReader . java to improve accuracy of score processing based on NaN values
added a cleanup method to clean up resources in OnStartupTriggeringPolicyTest to ensure proper cleanup of resources after tests are executed
updated focus handling in FilterConditionEditor and FindAction classes to improve focus management and ensure proper input field focus handling
[ hotfix ] [ runtime ] implement autocloseableasync for checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema creation to ensure proper handling of XML syntax errors in the application
[ bonsai ] do n ' t override trie log layer when there be no trie log
refactor FilledNewArrayInstruction class to improve code readability to enhance maintainability and readability of the code
added a timeout of 60 seconds to the SimpleNetworkTest class to ensure tests are executed after a specific time - to - live
updated the method to check if the parentPath ends with " / " instead of substring to ensure correct path handling for nested paths
added a print statement to display the loading failure of the skin file to improve debugging by providing a clearer error message when loading the skin file
added ` dirty ` state and ` isValid ( ) ` methods to ` LgoLevel2BatchSubscription ` and ` LgoGroupedLevel2
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the return statement in ` TestStep ` to use it to improve
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of NullPointerExceptions during database registration
refactor UploadJobMultiPartOperation to extend Operation and implement IdentifiedDataSerializable instead of AsyncJobOperation to improve data serialization handling and ensure
[ hotfix ] [ runtime ] do n ' t ignore miss journal file when recovery fails
do n ' t show summary level when the node be a child of a child
changed the ` pos ` variable to be ` sizeMask ` and modified the ` ensureAvail ` method to improve performance by reducing unnecessary
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable the test due
replaced the variable ' targets ' with ' endpoints ' for better clarity and efficiency to improve code readability and maintainability by reducing
updated method parameters in FileManager . java for consistency to improve code readability and maintainability
added " times " and " ceil " to the list of transform function types in TransformFunctionType . java and TransformFunctionFactory . java to
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and ` package - info ` classes to
updated RFC3280 format from " RFC3280 " to " RFC5280 " across multiple Java files to align with the latest RFC52
updated version number from 2.17 . 3 to 2.17 . 4 and changed type casting from ` int ` to ` Character ` to
replaced HashMap with SparseBooleanArray for selected items and modified cache initialization logic in ListActivity . java and NoteAdapter . java to improve performance
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve readability and maintainability of the code
refactor path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve code readability and maintainability by utilizing ResourceUtils
updated PreviewPositionHelper to accept a Context parameter and adjusted thumbnail insets based on multi - window mode to enhance flexibility in preview positioning based
[ java ] use termentry . timestamp instead of recordlog . entry . timestamp for newleadershipterm
added error stream logging to PMDCoverageTest . java and updated assertions in PMDCoverageTest . java to improve clarity and
refactor ByteArrayInputStream logic and add a new Skip class to improve input stream handling to enhance readability and maintainability of the code
removed redundant condition for promptUpdate in UpdaterTask . java to streamline the code for better readability and maintainability
make headersmessage . max _ headers public and add a check in peer . getblockheaders ( ) .
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to include the " rt . jar
refactor connection handling logic in AbstractHandshakeHandler . java for improved readability to enhance code clarity and maintainability by eliminating
updated parameter retrieval methods to use utility constants instead of string literals to improve code readability and maintainability by using a more descriptive utility class
added a check for committed status before sending error messages in HttpChannel . java to improve error handling by logging a warning when the response is already
updated condition checks in HttpSession . java to handle cases where ` hold ` is less than zero to ensure proper handling of cases where ` hold `
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to improve
improve log level for prefab deserialization
added " internal . superuser " and " internal . superuser " to external group sets in LdapMockMvcTests . java to enhance test
added a validation check for the minimum amount in TransferActuator to ensure proper handling of non - existent accounts in FreezeBalanceActuator and
replaced hardcoded slash with File . separator in FileResolverTestBase . java to ensure consistent file path handling across different operating systems
ggb - 1343 fix for input bar help panel not focus on enter
updated GpsMainActivity to retrieve the session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command annotations to
updated JsoupNonVisualRegressionTest to save a PDF file before checking the number of pages to ensure that the PDF file is correctly
( chore ) camel - android : replace androidbufferallocator with androidnativebufferallocator
added checks for flag names and patterns starting with " ! " in Main . java and PrimaryItem . java to ensure correct handling of flag names
added a comment to clarify the purpose of the execution statement in JDBCHistoryCache . java
updated conditional check for item use operation in BattlePassManager . java to improve readability and maintainability of the code
updated QueuePriorityTest to use a list for expected elements and added a toString method in PriorityElement to improve test reliability and provide a clear
added injection for ` _ affinityGroupDao _ affinityGroupDao ` and updated test methods in ` AffinityApiUnitTest . java ` to
added a null check for the main command and modified the argument check to include OPTIONS . HELP to ensure proper help output when the command is
updated the number of output streams in PropertyTypes , ByteIterableBase , and LongBinding classes from 7 to 4 to improve performance by reducing
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new class ` T8032
added an assertion to check for the length of a string in the Person class to ensure that the input string does not exceed the expected length
added null check for file extension in VirtualFile . java to avoid potential NullPointerException when accessing the file extension
change return statement to continue in ContactRightButtonMenu . java to improve clarity and functionality of the code
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
modified the screen position calculation in InstallShortcutReceiver . java to simplify the loop logic for better readability and maintainability
refactor binding and closing logic in PlainSocketImpl . java to improve resource management and prevent potential memory leaks
added functionality to manage and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by clearing and managing media
corrected a typo in the log message from " center of element " to " in - view center point " to improve clarity and
added a new file ` bug4865918 . java ` that implements a GUI test for a scrollbar to verify the block increment is in
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to streamline the initialization
replaced specific imports with a wildcard import and added logic to handle group triggers in QuestCommand . java to improve code readability and provide
fix crash when select gnucash account file
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance clarity and maintainability of the code
updated the configuration URI for the openHAB Cloud service to use a constant for the configuration URI to enhance flexibility and maintainability of the
removed setViewportComponent and setJScrollPane calls from BrowserPanel . java to streamline the code by eliminating unnecessary method calls
added KEYCODE _ FORWARD _ DEL and updated related cases in LwjglInput , ParticleEditor , and TWL to
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " before retrieving MIME type parts to ensure that mime type parts are only processed
added a regex pattern for matching author comments in JSDoc . java to enhance comment handling by allowing users to specify a specific author in the constructor
added CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ PARTITIONS , and DELETE _ TOTAL _ PARTITIONS constants
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved schema management to enhance
updated the ` oauth2LoginLinks ` method to include a ` queryParams ` parameter and added error handling to the ` oauth2LoginLinks `
updated Hijrah year from " Hijrah - umalqura " to " Islamic Umm al -
added support for ie and firefox in WebAudioWrapper to ensure compatibility with both IE and Firefox devices
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the constructor from ` InterceptorConstants ` in ` GrpcServer
added a default charset parameter to the CREATE TABLE statements in TestCompatibility . java and updated the default charset in Parser . java to ensure compatibility with
updated method calls in WriterRecordBatch and StreamingAggTemplate classes for consistency and clarity to improve code readability and maintainability by standardizing
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean field ` hasFrom ` and modified the SQL deletion logic to conditionally append the " FROM " clause based on its value to
refactor SynchronizeFolderOperation to replace isSuccess method with isMultiStatus method for handling multi - status requests to improve code clarity and maintainability
refactor the matching logic in RecipeScheduler to use a new method ` applicableListTests ` to improve code readability and maintainability by
updated regex pattern in LogAnalyser . java to allow additional characters to improve accuracy in regex matching
camel - 17446 : camel - aws - integration - integration - test - add support for google cloud integration test
fixed - rsearch . tostring ( ) method do n ' t work for exclusive search
refactor license handling in CCLicenseStep . java for improved clarity and consistency to enhance code readability and maintainability by using
added null check before putting global ID in guidIndex to avoid potential NullPointerException when getGlobalId ( ) is null
updated comparison logic in OptionalAssert to use object comparison strategy to improve readability and maintainability of the code
updated NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally store LAST _ MARGIN _ BOTTOM based on the presence of
added a new file TestArrayCopyToFromObject . java to test array copying behavior to ensure that ArrayStoreException is correctly thrown during array copying operations
updated method calls from escapeAsBashString to escapeAsPythonString in BuckPythonProgram . java to ensure proper formatting of Python paths
( chore ) camel - http : / / code . google . com / p / mybatis / issues / detail ? id =
make craftinghelper . findfiles ( ) return true if we do n ' t visit all file
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable scenarios
updated error handling in TestInternalInputBuffer . java to check for null exceptions before asserting the response status to improve robustness by preventing
fix classentity . autoloadcall ( string name , string lowername ) .
added server version comparison logic in CustomPlaybackOverlayFragment and updated PlaybackController to use it to enhance compatibility checks for server versions in playback overlay
replaced the hardcoded " localhost " string with a dynamic resolution of " localhost " in multiple files to ensure accurate resolution of localhost addresses in
modified the Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of the
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability
added a new constant for the HS2 proxy user and modified session parameter handling to include the user ' s username to enhance session management by
added snappy compression support to the HdfsCompressionCodec and corresponding unit tests in HdfsProducerTest to enhance compression capabilities and ensure compatibility with
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper resource management during test execution
fix bug # 49966 - make sure xssfcell . setcelltype ( cell . cELL _ TYPE _ BLANK ) be
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve font rendering accuracy and clarify
refactor image loading to use Commons ' s constants instead of hardcoded paths to improve code readability and maintainability by eliminating
replaced instances of ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with ` reportPlaybackStart ` and ` reportPlaybackProgress
fix potential resource leak in simpleauthority
skip putfromloadall backup operation if record store do n ' t exist
changed bitwise operations to bitwise operations for LENGTH _ BIT and ERROR _ BIT in ResponseFlag . java to ensure proper handling of LENGTH _ BIT and
add read policy to default policy if no read policy be find
refactor CompositeFont creation to use a ConcurrentHashMap for concurrent access to improve thread safety and avoid potential memory leaks
replaced the usage of ` getHeight ( ) ` with a default value of ` 0 ` and adjusted the calculation of ` prefHeight ` to
dmnfeel : improve error message when dmn feel can not be parse
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and refactored long press runnable posting to improve access
added null checks for node ID and edge type in ElementFactoryImpl and ImportContainerImpl , and modified edge value handling in ImporterGDF
[ flink - 1357 ] [ fn ] fix nullpointerexception in fnapicontrolclient and beamfnstategrpcclientcache
updated Bin initialization to use sessionFactory ' s createSession ( ) method and added a new test case for flowfiles larger than bin limits to
refactor the way closest CoreBuild is retrieved by using a loop to improve code readability and maintainability by using a more concise approach
added a check for the CONTENT _ LENGTH header in RestTemplateCopyHeaderFilter and implemented a test for it in TestRestTemplateCopyHeaderFilter
removed case statements for CLASS and CHAR in Java2TypeScriptTranslator and updated transpile method in SyntaxTests to enhance code clarity and
updated channel size and minimum and maximum frequency settings in multiple Java files to improve the accuracy of channel processing by adjusting sample sizes and adjusting
hbase - 1748 canary should only run regionserver task in regionserver mode .
[ hotfix ] [ cassandra ] remove unused node module from cassandraconnectorfactory
reset the cursor position for the order index in KahaDBStore . java to ensure the cursor position is reset before proceeding with operations
added minimum size constraints to CallDialog and OneToOneCallPanel to ensure frame dimensions are within the specified minimum size
fix loss of block state during world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static variables instead of instance variables to improve code readability and maintainability by
added null check and removal logic for KerberosPrincipalHostDAO in KerberosPrincipalDAO to enhance robustness by preventing potential null pointer exceptions
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameters
improve handling of timeout in aprendpoint . poll ( ) .
updated the error message in AndroidGradleBuilder to clarify that the licenseKey is defined in the build hints to provide clearer guid
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` DLNAResource
[ drools - 1348 ] support bazel - inf . classes and bazel - inf . classes in kiebuilderimpl
added an assumption to skip the CheckIndexTest on the Java version 19 to ensure tests are only executed when the Java version is 19
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method and updated related logic in ` RemoteTargetGluer ` to
refactor LeaderLatch class for improved performance to enhance performance and maintainability of the code
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to enable dynamic initialization of Zksnark parameters for
added a new method ` getDepthFuture ` to ` TransactionConfidence ` and modified ` setAppearedAtChainHeight ` in ` Transaction
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` , modified ` Location ` , ` MapComponent ` ,
set platformName to " ios " in JavaSEPort . java to ensure platformName is initialized with " ios "
refactor PageEditClient to improve code readability to enhance maintainability and facilitate future updates
refactor type checks for mozDash and webkitLineDash in Graphics2D . java to improve readability and maintainability of the code
refactor CreateVisibleSignature class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the outgoing frame processing in AbstractExtension . java to handle potential exceptions during frame processing to improve error handling and
replaced direct call to ` new Caller ( ) . getCallerClass ( ) ` with ` AccessController . doPrivileged ( ) ` for better security
added logic to update child categories to null if it matches the current category ID to ensure that the child ' s parent is set to null when
added a title variable to the ContributionManagerDialog for different contribution types to enhance user experience by providing a clearer title for contributions based
added a ` vwap ` field and corresponding getter and setter methods to the ` Ticker ` class and updated the ` Ticker `
added a new TextView parameter for no widgets in SearchAndRecommendationsScrollController and updated padding logic in WidgetsFullSheet to enhance user
add a rendergraphapi to the worldrendererimpl so that it can be use with a tint node .
added a method to set the primary color in NCFirebaseMessagingService to enhance the user interface ' s responsiveness by providing a
updated ShadowUsbManagerTest . java file to improve test coverage for USB functionality
log the number of preference in average absolute and rms evaluation ( # 2321 )
added a call to ` this . selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated
updated width and height calculations in AndroidGraphics . java to ensure a minimum value of 1 to prevent potential errors during rendering
replaced instances of HashMap with LinkedHashMap in multiple classes to improve performance and maintain insertion order for better performance
replaced the usage of ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve performance by using a
( chore ) camel - route - junit5 : migrate camel - route - main to junit5
added two new classes , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement integration tests for WebSocket communication
[ flink - 2329 ] [ metadata ] remove unused code from dspaceservicemanagertest
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
replaced instances of ` callNode . getType ( ) ` with ` callNodeType ` throughout the code generation code to improve code clarity
added a new annotation ` @ Insecure ` to the ` MessageBuffer ` class and modified the constructor in ` MessageBuffer ` to use it to
added new Hive configuration variables in HiveConf . java to support additional Hive configuration options
initialize scopes and policies with a new HashSet instance in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure
made the ` decrefOnClose ` field final and modified the constructor of ` MultiReader ` to include ` readerFinishedListeners ` as
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 classes
simonstewart : re - enable test in 2.49
replaced instances of ` $ Gson $ Types . getFirstTypeArgument ( Type type ) ` with ` getFirstTypeArgument ( Type type ) `
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap to
added a duration parameter and related getter / setter methods to the FlipTransition class to enhance flexibility by allowing customizable duration values
removed logging statement for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
update majorVersion and minorVersion from 8 to 9 and 10 in ForgeVersion . java to reflect the latest versioning features
replaced System . err . println with LowLevelLogUtil . log for warning messages related to unsupported Java versions to improve logging clarity and
add new validator class for java 16 and java 14
updated padding logic for background elements in ExpansionViewHelper . java to ensure proper padding adjustments based on the number of replies
[ hotfix ] fix npe in abstractpartitionprimaryreplicareplicaantiEntropytask when versionmap be empty
added metadata field and corresponding getter and setter methods to SeedUrl , SeedResource , and SeedUrl classes to enable customization of metadata in the
added a null check for declaration before creating a new Pattern instance to avoid potential NullPointerExceptions when declaration is null
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage for coprocessor functionality
fix annotationactionvalidatormanager to work with package name
updated IterableTest to use Arrays . asList for null handling and added a new test for handling null arrays to improve code clarity and ensure correct
added stream ( ) and parallelStream ( ) methods to MapIterable , PrimitiveObjectMap , and corresponding tests in MapIterableTestCase to enhance
clone the notifInfo object before returning it to ensure the notifInfo is cloned before returning it
make sure commandkeysset . getkey ( ) do n ' t throw nullpointerexception
refactor AEADBlockCipher class for improved readability to enhance maintainability and readability of the code
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check for null ID and updated the default resource mode from best to legacy in RobolectricTestRunner . java to ensure proper
added a condition to check if ` ulSize ` and ` ulPos ` are zero before retrieving the table buffer to avoid potential null pointer exceptions
refactor SignPlugin constructor to accept a list of message readers instead of a static list to improve flexibility in handling message readers in the Sign
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added a validation check for remoteRepository in StandardMavenAuthenticationProvider . java to ensure that the saxReader is validated before proceeding with validation
refactor AudioNode class for improved performance to enhance performance and maintainability of audio processing
added SSL context initialization and improved exception handling in LinkyHandlerFactory . java and EnedisHttpApi . java to enhance SSL handling and
refactor HiveFunctionRegistry to use Java Streams and Map for string handling to improve code readability and maintainability by using Java Streams instead of
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the test and add a
modified the ` getBuildTargetForAlias ` method to include a ` possiblyFlavoredAlias ` parameter and adjusted the alias extraction logic to enhance
camel - 13946 : camel - olingo2 - do n ' t process empty odata feed if there be no data feed
added a map to retrieve the equivalent version of HiveVersionInfo and updated the return logic to improve compatibility with the latest Hive versioning
fix a bug where the expunge of a vm do n ' t cause the vm to be expunge .
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
refactor ONDashClockExtension and AlarmReceiver to use a new method for title retrieval to improve code readability and maintainability by
updated GoogleAuthUserConfigTable class to use " nvarchar / varchar " instead of " nvarchar " and modified test assertions accordingly to ensure
replaced ` commit ( ) ` method with ` apply ( ) ` method across multiple Java files to improve code readability and maintainability by
added TestIdleListener to the StandardSession instantiation in AsyncTimeoutTest . java to enhance session management by providing an idle listener
updated the construction of ` testBigQueryTable ` to include the test ID to improve clarity of test output for better debugging
set the background resource for the predicted icon in HotseatPredictionController and reset it in BubbleTextView to improve user experience by
mondrian : fix typo find by codespell on fossies . org
[ native ] add test for native system query runner
updated LIMEExplanation to conditionally retrieve active features based on the presence of ALL _ OUTPUTS to ensure accurate retrieval of active features based
added support for command - line arguments in AppleSimulatorController and InstallCommand classes to enable command - line argument passing for Apple targets
replaced calls to getArea ( ) with a genericStyledArea variable for better readability to improve code clarity and maintainability
added a check for the availability of the lifecycle pipeline in ContainerBase and StandardContext classes to ensure the lifecycle state is available before proceeding with
added background clipping functionality to the QsbWidgetHostView to improve the visual appearance of the background in the UI
added time tracking and logging for flag processing in SQLManager . java and improved flag string formatting in BlockTypeListFlag . java to enhance
update FloatingTextRenderer to conditionally enable GL _ DEPTH _ TEST based on floatingText type to improve rendering performance based on whether floating
( chore ) camel - libffi : fix typo in naming convention
replaced direct reference to ` PROPAGATION _ REQUIRED ` with a private variable ` propagationBehavior ` and added getter / setter methods to improve
ignore regularization in layervalidation if there be no regularization
added exception handling for read and write operations in AbstractChecker . java to improve robustness by logging exceptions during read / write operations
changed the visibility of the colorStack variable from static to instance to allow external access to the colorStack variable
updated method calls to use ` true ` instead of ` false ` in ` getMappedStatement ` and ` hasStatement ` to ensure that the
convert tradable identifiers to lowercase in BTCEPollingMarketDataService to ensure consistent depth retrieval across different currency formats
updated message values in ChannelStateTests from " 0.312716 " to " 0.322700 " and " 0. 304
remove the versionedhashes field from enginepayloadparameter and remove it from abstractenginenewpayload
reset trigger price and trigger price text field in MutableOfferView to ensure proper handling of text fields during offer creation
refactor conditional checks in StudentFeedbackSubmissionEditSaveAction . java for better readability to enhance code clarity and maintainability by
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 2249 addendum fix checkstyle violation in hstore
# 1188 - enh : fix # 1188 - entitybeanintercept . setloadedproperty ( ) and entitybeanstate .
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added two protected static methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to enable
updated imports in LWChoicePeer . java to use wildcard imports and added popup menu firing functionality to enhance code readability and ensure proper visibility
removed redundant null check for the ' insert ' variable in StressProfile . java to streamline code by eliminating unnecessary null checks
replaced instances of ` scala . collection . JavaConversions . asScalaIterable ` with static import of ` collectionAsScal
added null check for requests in MockServerEventLog and enhanced logging in HttpForwardObjectCallbackActionHandler and CallbackWebSocketServerHandler to improve robust
added logging for properties file loading failures in DefaultEnvironment . java to improve error handling and provide clearer feedback when properties file cannot be loaded
refactor SessionDataSet initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added a condition to check if the nic supports multicast and is up in the SetOutgoingIf class to ensure proper handling of multicast connections based on
updated the initialization of sqlCommand to include a length parameter to ensure proper handling of command parameters in the SQL command construction
replaced calls to ` setLatestConsumeTime ` and ` setLatestConsumeTimeForEnergy ` with direct calls to ` setLatestConsume
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage to improve code clarity and
improve error message in ProtobufAnnotationSerializer to include the number of known labels to improve debugging by providing more informative information about the token
added a new test class ` MapAssert _ containsKeys _ Test ` for the ` containsKeys ` method in the ` MapAssert ` API
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and updated method signatures in ` JdbcProxyGenerator ` to support customizable PreparedStatement and Callable
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` DirectUpgradeTest ` to use ` Handler ` instead of `
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` and ` CxxFlags . java ` to
pdfbox - 4071 : use point2d instead of float , a suggest by valerybokov
replaced the initialization of MethodHook array with a static final EMPTY array in MethodHook . java and updated hooks initialization in Method . java to
added a grantAccess parameter to the MockAuthenticationManager class to control access control in the authentication process
updated ` afterJob ( ) ` method signatures to accept ` JobExecution jobExecution ` instead of ` afterJob ( ) ` across multiple classes to
added a check for file canExecute ( ) in SharedLibraryLoader . java to ensure that the file can be write before proceeding to prevent
chore ( regen ) : update protoc to v3.15 . 3 ( # 119 )
change parameter name from ` ` result ' ' to ` ` event ' ' in resultcollector and saveservice
added constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , starttimestamp , and PROFILE _ NAME in
change method parameter type from Hashtable to Map in applyRule method to improve flexibility by allowing customization of search strings
rename geowidget to absolutescreenlocateable in euclidiancontroller
updated JoglGraphics and ProjectiveTextureTest to use RGB565 format and Mipmap format to enhance texture rendering capabilities and improve
refactor ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve code clarity and ensure the file is
camel - 1748 : camel - property - add support for property placeholder in the intercept endpoint .
updated time comparison logic in ActionScheduler . java and changed expected value in TestActionScheduler . java from 1 to 2 to ensure correct handling of
updated dbg _ zip assignment to include a null check before replacing " debug . log " with " / tmp / ums _ dbg . zip
make notification overlay visible by default
added a resetGate method to the BlockGenericPipe class and modified the markBlockNeedsUpdate method in the Pipe class to enhance the pipe '
added Locale management in TestSupplementary class to ensure the default locale is set before running tests
updated the random value in the Team constructor from 0.8 f and 1f to 0.4 f and 0.4 f to ensure
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and added conditional logging for state removal to improve performance and
updated the condition to check for null annotation in SoftAsserts . java to ensure proper handling of null and empty expected exceptions
updated error handling in StorageResources and added exception handling in StoragePluginRegistryImpl to improve error reporting and provide clearer error messages for plugin saving
replaced multiple instances of ` ReportUtils . report ` with a single ` toCsvFile ` method in ` CallTreePrinter . java `
added null checks for note and noteTmp in DetailFragment . java and updated view references in WidgetProvider . java to improve code robustness and
added peak tasks tracking and modified return logic in AssetManager . java to improve task tracking and ensure accurate calculation of loaded and fractional loaded times
simonstewart : disable native event for firefox on window
added configuration options for nutch score and fetch interval in the Injector class to enhance flexibility by allowing customization of injected scores and fetch
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in multiple files to
added a method to check if the zkController is null and implemented a shareSchema property in the CoreContainer class to ensure that the CoreContainer
updated sizeInBytes method calls to accept an additional boolean parameter across multiple classes to ensure accurate handling of segment sizes and improve logging clarity
replaced multiple assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to ensure proper handling of null values in
updated SQL query to include additional type checks for ' d ' and ' typptype ' in multiple classes to ensure correct handling of non - null
[ java ] make appendnewleadershiptermevent return false instead of false .
removed the import of MediaType and its usage in the buildMediaType method to streamline the code by eliminating unnecessary dependencies
replaced method names from ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` with ` fillAndGetIndex ` and ` fill
fix race condition in acidutils . cleanupafteriowandmajortablecompaction
added null checks for storageScheme and qualifierEncodingScheme in PTableImpl . java to ensure proper handling of null values and avoid potential NullPointerExceptions
added new files PojoProducersCustomized . java and RestProducersCutomized . java to the servicecomb demo to provide custom
updated cache configuration key from " cache " to " cache _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to improve clarity
removed redundant registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline the registration
added slabWood to the replacements map in OreDictionary . java to support wooden slab functionality in the OreDictionary
refactor multiple session - related factory classes for improved consistency to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` UndefinedSymbolsLinkerScript ` class to simplify the
prepare next release 3.2 : update doc tree and overview ( rc1 )
updated table annotations in DenormalizedTablePhysicalIncludedTableConstraintTest . java from " supTable " and " subTable " to " SU
adjusted the positioning calculation in the spriteBatch ' s draw method to correct the positioning of the texture ' s width and height to
updated the logic for determining plot position in PlayerFunctions . java and improved string representation in PlotId . java to enhance accuracy of plot position
added a deprecated static final Version constant LUCENE _ 8 _ 5 _ 0 in the Version class to indicate that the version is outdated
updated print statement formatting in SSLSocketImpl . java to improve readability to enhance code clarity and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing of signed
updated the type of ` dependenciesType ` from ` String ` to ` SemanticGraphCoreAnnotations . DependenciesType ` and refactored the
refactor the ` makeTargetDescription ` method in ` ParseContext ` and update its usage in ` NoSuchBuildTargetException ` to streamline the
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ( args ) . init ( ) ` to
replaced the array size of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` and adjusted the loop iteration
updated logging messages and modified version checks for Spigot and Paper features in BukkitMain . java to enhance clarity and maintainability
updated SQL statement generation for escaping PostgreSQL operators in AbstractSQLChange . java to ensure proper escaping of PostgreSQL operators in SQL statements
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
added checks for file names ending with " . adoc " and " . html " in the BuildNavAndPDFBody class to ensure proper
added a new parameter ` false ` to the ` MqttBrokerConnection ` constructor in ` NhcMqttConnection2 . java
replace direct call to getChangeLog with a null check for the root change log before accessing the change set to ensure that the change log is
updated method invocation and response body handling in StaticMethodInterceptor , RocketMQGlobalPluginHandler , PrometheusPluginBootService , and Prometheus
added HiveMetaStoreClient to drop the database in TestHiveMetaStorePartitionSpecs . java and enhanced logging in TestObjectStore . java
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to
remove ssefluxwebconfig . java from sandbox . sseflux
updated methods to check for void return types in JsonBuildHelper , IDocBuildTemplate , and JavaClassUtil to ensure correct handling of void return
renamed ` YAML _ READER ` to ` YAML ` and added a new endpoint to list Yamls data to improve clarity and
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation and
refactor thread factory implementation to use lambda expressions and introduce a new awaitTermination method for asynchronous channel group termination to improve code readability and
added unit tests for adding items with simple and mapping converters in MongoTemplateTests and created a new class PersonWithAList to ensure correct functionality
ggb - 1369 make sure applet size be align with window size
replaced direct visibility setting of the toolbar with a delayed execution using a Handler to improve responsiveness to the toolbar ' s visibility based on
refactor the logic for unpacking the first page reader and unpacking overlapped pages in SeriesReader . java to improve code readability and
server : do n ' t try to save password for vm on router if the vm be already run
added new variables usingOutputStream , usingWriter , isCharacterEncodingSet , and isCharacterEncodingSet in Response . java to ensure proper handling of
added a warning check for assignment side effects in the GroupDialog class to ensure that warning assignments are only applied when necessary
refactor JSON and JSONObjectConvertor classes for improved clarity to enhance maintainability and readability of the code
corrected the variable name from ` maxHeightWithMargin ` to ` maxWidthWithMargin ` in the conditional statement to improve code readability and maintain
[ bouncycastle ] fix jwt token signing public key issue
added a method to check content types and updated import statements in Basic . java to ensure correct handling of file types and improve error reporting for Windows
update nettyconnection to use jzlibencoder instead of jzlibdecoder
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored the initialization of ` Class ` to streamline
removed the ` doConnect ` method from ` ChannelProvider ` and ` ProxyChannelProvider ` classes to simplify the connection process by eliminating
drill - 1770 : fix bug with empty final column in csv header
added compass gravity and margins for NearbyMapFragment to improve visual appearance and visual appearance
added unit tests for the ` Interpolate ` functionality in ` GeoPathTest . java ` to ensure correct distance calculations for different interpolation scenarios
added HiveException handling to methods in LeafFilterFactory and ParquetFilterPredicateConverter to improve error handling and provide clearer error messages for unsupported
added a condition to set the current audio track ' s language if it is blank to ensure that the current audio track is set correctly for video
added a warning log for compatibility issues in MicroserviceRegisterTask . java to indicate that schemas in a new version does not exceed the old version
replaced System . arraycopy calls with a new addAll method for array handling across multiple array classes to improve code readability and maintainability by redu
reformatted code in DataSourceProxy . java for consistency to improve readability and maintainability of the code
added null and empty constructor parameters to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to enhance flexibility in handling client registration
added a method to reset the UI state in SchemaUpgradeHelper to ensure proper state management during schema upgrade
fix junitreporter to handle pending and non - strict exception
change playerselector to allow . in entity selector to allow . in entity selector .
added the Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
refactor MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection management to improve connection management and ensure proper connection management
added stringType ( ) method to CoreOptions . java to enhance string type handling in CoreOptions . java
updated HqlQueryRenderer to handle character and parameter types in HqlQueryRenderer and updated context configurations in EclipseLinkUserRepositoryFinderTests
updated status checks to use HttpStatus constants instead of hardcoded values to improve code clarity and maintainability by using specific HTTP status constants
pdfbox - 4071 : simplify code and improve readability
refactor HikariCPCollectorTest to use a new data source class name and set maximum pool size to ensure compatibility with Hikari
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and cache management to enhance code readability and maintainability by
updated the ` isSuccess ` variable to true and modified the compilation logic in ` Jsr199Javac . java ` to improve the handling
added a new listener class ` BaseTableModelListener ` and implemented it in ` DefaultSortedTableModel ` to track table change events to enhance
updated the range of the variable ' number ' from 49152 to 65535 in ServerConfig . java to ensure that the variable ' number ' is
added notification for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure proper handling of document providers for devices running KitKat devices
added a call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to enable
modified exception handling in FilterChainProxy to utilize ThrowableAnalyzer for improved error handling to ensure that the request rejection handler does not throw
updated the calculation of ` newSize ` and ` System . arraycopy ` to use ` this . length ` instead of ` length ` to ensure correct
pdfbox - 4071 : throw illegalargumentexception instead of illegalargumentexception in filter . decode ( )
added a new file ` TbStopWatch . java ` that extends ` StopWatch ` to facilitate the creation and retrieval of stop
reformatted the initialization of the PListStore class to improve code readability and maintainability
added @ Deprecated annotations to multiple Continuation - related classes to mark them as deprecated to indicate that these classes are outdated and should not be used
[ hotfix ] [ runtime ] fix classloading issue in remote interpreter server
remove unnecessary getentity ( ) from commandsourcestack check
updated minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest and
updated parameters in the ` timerIdForSlot ` method to use ` tickArrayIndex ` instead of ` indexInTickArray ` to improve
# 263 - add support for simple name in query plan ( # 2630 )
updated HTML response URLs from " wro / all . js " and " wro / all . css " to " static / all .
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of the ` show
corrected the spelling of " appContextLocation " to " contextConfigLocation " in multiple test files to ensure consistency in naming conventions
modified exception handling in OCSPChecker to check for specific exception type before throwing a new CertPathValidatorException to ensure proper exception type handling for
add option to enable / disable output solution in benchmark
feat ( gapic - generator - java ) : set default maxinboundmessagesize to max int
added a new test class ` Issue _ 815 ` to validate the functionality of ` MappedFileVol ` with slice size reopening to ensure
add shapeless recipe for pipe waterproof and slime ball to the game registry
[ fix ] [ vector ] fix arrayindexoutofboundsexception in sequentialaccess sparse vector . iteratenonzero
added ownership plot metadata handling for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to ensure proper
added getDebugLogger ( ) method to DIHWriter and SolrWriter classes to provide access to the debug logger for better debugging capabilities
added methods to get maximum file name length and updated import statements in IOHelper . java and MultiKahaDBPersistenceAdapter . java to
added a check for the presence of a tag in UpToTagChangeSetFilter and implemented a method to retrieve it in UpToTagChangeSetFilter
updated generic type parameters from ` < T > ` to ` < T2 > ` in multiple classes and replaced ` LinkedList ` with ` ArrayList
refactor BrokerRoutingManager to improve code structure to enhance maintainability and readability of the code
changed volumePaint and upPaint from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve visual
refactor layout parameter handling in InsettableFrameLayout . java to use ' lp ' instead of ' flp ' to improve clarity
added a new parameter " duration " to the BuildTargetDurationListener and updated related tests to include the duration as a parameter to enhance the functionality
replaced ` @ Profile ( " profile " ) ` annotation with ` assumeTrue ( " profile to be enabled " ) ` in multiple test
added a null check for the user object before processing claims to prevent potential NullPointerException when the user is null
camel - 1774 : camel - test - add a method to replace route from endpoint in camel - test
replace ConcurrentSkipListSet with NonBlockingHashSet for statements in CassandraConnection . java to improve performance by avoiding unnecessary synchronization
api : listpublicipaddresses api : add ` ` sourcenetworkid ' ' parameter to listpublicipaddresses api
added tests for handling battery optimization in ShadowPowerManagerTest and implemented isIgnoringBatteryOptimizations method in ShadowPowerManager to ensure correct
updated the method of retrieving the Jetty version to use the build properties instead of a hardcoded value to improve code readability and maintainability
added unit tests for verifying various invocations in order verification to ensure correct verification behavior for various scenarios in the verification process
fix a bug in tregexexecnode where a regexresult . getnomatchinstance ( ) be call .
added a " - foreground " option to the process ' s startProfile method to specify the foreground mode for the profile to enhance user experience by
refactor MiniSolrCloudCluster to use separate executor launcher and closer threads for improved resource management to enhance code readability and maintainability by
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related logic
updated log message to use the file name instead of the file name and added null checks for actionsList in EditorTextActionWindow to improve cl
updated the logging of skipped entries in ClassFileReader and improved warning message formatting in JdepsTask to enhance clarity of skipped entries by providing
refactor Fetcher and FetcherTask to use LuceneStorage for document storage management to improve code clarity and maintainability by centralizing
updated the ` populateBubble ` method to include an additional ` existingBubble ` parameter and added a check for ` existingBubble `
[ hotfix ] [ scheduler ] remove unnecessary warn log for schedule route policy
refactor ` buildRpcExt ` method to accept ` Method ` instead of ` Method [ ] ` for improved clarity to enhance code
[ java ] add nak multicast delay generator to the conductor .
refactor ClientInformationResponseView to use JsonObject instead of GsonBuilder for JSON serialization to improve code readability and maintainability by encapsulating client
added a check to ensure the order ' s field amount is non - zero before setting the average price to ensure that the order ' s average
renamed the method ` rawExecutionReports ( ) ` to ` binanceUserDataStreamingService ` for clarity to improve code readability and
added a ` fail ` method to handle exceptions and modified the timeout condition in ` LdapTimeoutTest . java ` to improve error handling and provide
added check for file existence before read the lexica botania user dictionary .
updated password handling logic in AmbariServerConfigurationHandler to check for a non - blank password file or credential store alias before updating to ensure
added a check for already parsed segments in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to improve segment parsing logic
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval config option
added exception handling for ClassNotFoundException in GeoserverInitStartupListener to improve robustness by logging warnings when the H2 driver is not included
hbase - 2249 add support for snapshot - based inputformat ' s readtype . stream in tableinputformat
added fixedHeight and fixedWidth fields with their respective getter and setter methods to the LoginInstanceRequest class to enhance flexibility in managing instance login options
added corner radius parameter to update methods in ActivityControlHelper , ClipAnimationHelper , and LauncherLayoutListener to enhance animation functionality by allowing
updated the COMMANDS _ TO _ REMOVE filter in QFile . java to include additional entries and indexes to enhance filtering capabilities for cross product
added retry logic for connection pool retries in TxnHandler . java to improve reliability of connection management by allowing retries to work around BONECP
updated method names from ` txnEnsureReserve ` to ` txnCheckReserve ` and added a new parameter for backup reservation checks to improve
added a new final char array ` strings ` and a final field to the ` FirstOfStringsMatcher ` class to facilitate the
updated SQL delete statements in CostBasedDecisionIT and modified planSteps to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS
added retry logic for SocketException and IOException in BaseServiceException and corresponding tests in BaseServiceExceptionTest to enhance error handling and ensure proper retry behavior for
added a new parameter ` rapidInstallTypes ` to multiple classes and updated related methods to incorporate it to enhance flexibility in
updated the regex pattern for seed matching in SortTest . java to ensure compatibility with the correct seed format
refactor MultimapSubject to use a factory for valuesForKeyFactory and iterableEntries to improve code readability and maintainability by centralizing the
simplified the calculation for display size in the Workspace class to simplify the logic for determining the vertical position of the hotseat
added support for transmuxing media items in the Transformer and TransformerInternal classes to enhance audio transcoding capabilities based on media item count
added localization support for values in the Picker class to enhance user experience by providing localized text for better user experience
camel - 234 fixed the issue of cxfrs consumer throw npe
added SQLStateConversionDelegate to handle SQL exceptions in PostgreSQL81Dialect to improve error handling for specific SQL state conversions
added null checks and improved query ID retrieval in TestJdbcDriver2 . java and modified import statements in HiveStatement . java to enhance robust
add usesunboundedpcollections category to pardotest . testvalidatesrunner ( )
simplified the HTML string construction in GpsSimpleViewFragment . java by removing unnecessary em references to simplify the code and improve readability
[ java ] remove unused leadershiptermid parameter from join log a follower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing duplication
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
corrected the spelling of the method name from ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to
added null check for the tree before accessing markers in Recipe . java and created a new MarkersTest . java file to improve robustness
change the return type of getFontSizeAsFloat ( ) and setFontSize ( Double size ) methods from float to double across multiple classes to improve
changed the type of the variable ` email ` from ` String ` to ` String [ ] ` in ` AddressBookDoCoMoResultParser
refactor exclusion handling in RawMavenResolver to use a set of GroupArtifacts instead of a stream to improve efficiency by reducing unnecessary stream
added error handling and constants for DSX exchange info in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve
updated multiple test classes for consistency and clarity to improve code maintainability and readability
[ drools - 90 ] avoid incremental build if kmodule pom be invalid
updated the initialization of the ` copy ` variable and added a conditional check for ` sobj . has ( k ) ` before setting the property
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
use unreflectsetter instead of findstaticgetter and findstaticsetter in hostfielddesc
added a method parameter for CompletableFuture and CompletableFutureStage in DefaultNullnessAnnotations . java to enable handling of completion stage in the database
updated the multiplier for mFreezeCheckPoint in PlaybackController . java from 9000 to 10000 to adjust the freezing check point
added Whitebox import and set internal state for suiteChunker descriptions in AbstractCommonPowerMockRunner and removed the run method from PowerMockRunner
updated the parameter from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure correct type handling
refactor indentation logic in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced the import of LuceneTestCase with TestCase in TestSingleTokenTokenFilter . java to align with the latest JUnit framework
updated the HTML table structure in HtmlProcessInformationsReport . java to include a wrapped text cell to enhance the display of wrapped text in the
refactor JdbcStepExecutionDao , MapStepExecutionDao , and MockStepDao to improve execution context management to enhance flexibility in job execution
added a conditional check to conditionally add a child to ensure the child is only added if the configuration is not hiding a new media folder
added null checks for actor before setting and removing widgets in SplitPane to improve robustness by preventing potential NullPointerExceptions during widget removal
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized Java types
updated debug logging to use ` this . getVersion ( ) ` and added a null check for ` modInfos ` in ` UniqueModListBuilder
changed the logger declaration from instance to static final in TicketGrantingTicketImpl . java to ensure static access to the logger for better encapsulation
updated SQL string to include 81 + 12 in the timeseries creation command to ensure compatibility with the latest version of the timeseries
added a method ` isValue ` to ` AttrData ` and modified error handling in ` Converter ` , and introduced new scrollbar constants in ` R
added support for character modifier keys in a specific locale in the CPlatformResponder and LWCToolkit classes to ensure proper handling of character
[ java ] add publication connection timeout to c medium driver .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added an assertion to verify the installation failure of the test apk in TestUtil . java to ensure that the device is not rooted before
remove oracleansisqlrowslimiter and add @ ignoreplatform ( platform . oracle )
updated the number of secure transport protocols assertions from 1 to 3 in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java to ensure
updated path references in DiffRuleKeysScriptIntegrationTest . java from e3506ff7c1 to fc76b6367dd
added a boolean flag ` mIsDismissHapticRunning ` and modified the conditional logic in ` TaskViewTouchController . java `
update explosion cause to include projectile source .
added a method to retrieve the hash code for a symbol in SymbolInputAdapter to ensure proper handling of stable IDs in the symbol input
updated API endpoint to use QueryParam for limiting bids and asks in Bitfinex . java and changed default values in BitfinexPollingMarket
added a check to replace single quotes in the result string to ensure proper handling of single quotes in the output
[ hotfix ] [ runtime ] add tostring ( ) for kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean to improve code readability to enhance maintainability and facilitate future updates
[ dubbo - 3892 ] fix npe in triverefinvoker when invoke method with generic call ( #
replaced error handling with throwing a GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a GdxRuntimeException instead of
added a method ` isStarted ( ) ` to check if the thread local Deadline is started and invoked it in ` RawStoreProxy ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when the channel is closed
added null check for the genres list before setting it to null to avoid potential NullPointerException when the genres list is null
[ hotfix ] [ checkpoint ] fix checkpointcoordinator reset hook not be call in region recovery
entitydatajsonformat now handle collection of mapped container correctly .
[ hotfix ] [ wal ] fix nullpointerexception in walnode # costofactivememtables
added a new test for retrying the same host on callback failure in HttpTest . java to ensure that the client correctly retries the same host
fix typo in package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server escape character functionality in the database
fix npe on joobybeanrepository . findbean ( ) when there be no route .
replaced synchronized block with util . wait in JavaFXSEPort . java to improve code readability and maintainability
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
refactor cropping logic to use a separate method for creating CropperBehaviour instances to improve code readability and maintainability by central
removed appName parameter from configure methods in InputRC and InputRCTest classes to simplify method signatures by removing unnecessary appName parameter
[ gr - 4329 ] add test for ignore and broken dependency in installer
replace options . setHeadless ( true ) with options . addArguments ( " -- headless = chrome " ) in multiple test files to
added ` value . intern ( ) ` method to ` VersionedValue ` to ensure proper initialization of the value object
added support for " MOVE " status in the status check to ensure proper handling of status changes in the connection
reformatted the US _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS methods in FixedDateFormat
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with the
[ hotfix ] fix race condition in startspilling in hssubpartitionmemorydatamanager
added a check for untrusted visit flags in the Visit . java file to ensure that untrusted visit actions are only sent to the plot when
do n ' t send jabber message if jabber be not register
updated boundary checks in BasicURLNormalizer and added a new test case forCurlyBraces in TestBasicURLNormalizer to ensure correct handling of
changed method visibility from protected to private for ` addRemoteAnimations ` , ` unregisterRemoteAnimations ` , and ` unregisterRemoteTransitions `
added a check for zero lock rate in EncodingConfiguration . java to ensure that the correct calculation of the lock rate based on the encoding ' s
added a new method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified ` generateProjects ( ) ` to return an ` ImmutableSet
updated the calculation of the calendar type in HostLocaleProviderAdapterImpl . java to ensure a valid calendar ID is used before setting the zero digit
added a new file MSwingUtilities . java with utility methods for image scaling and image handling to provide utility functions for improved image scaling
camel - 1748 : camel - mail - make it easy to configure the producer to be async
added @ RefreshScope annotation to CasCoreWebConfiguration . java and PasswordlessAuthenticationConfiguration . java to ensure proper management of the refresh scope for
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , and modified SchemaCrawlerMojo . java to improve script rendering functionality
added a condition to check if the input state is ` __ NONE ` in the ` Request ` class and created a new test for query parameters
added checks for glyph width and height in BitmapFont and implemented isDescendant method in Group class , and modified touch focus handling in SelectBox to
replaced reportFailure calls with runCloseHooks in DeploymentManager . java and added a new test case in DeploymentTest . java to ensure proper
refactor stackToString method to accept an optional forceIgnore parameter to improve flexibility in handling stack items in lexicon recipe mappings
replaced hardcoded sleep duration with a constant TIMEOUT _ AFTER _ INTERUPT in ConstantTimeBackoffTest . java to improve code readability
replaced specific imports with a wildcard import and added a null check for shortName in LoincHandler . java to improve code readability and
use classloader . getresource ( ) instead of new url ( ` ` classpath ' ' ) .
added a new file ` FieldUtils . java ` with utility methods for field access and accessibility to facilitate utility functions for field
removed a condition checking for SPECULATIVE mode in DeferredAttr . java and added a new class DoubleStaticImport . java with static imports to
updated layout inflation from custom _ content to workspace _ screen and added widget padding to enhance user experience by allowing custom content padding for widgets
update xabber account sync state in case of invalid token
added a new method ` setvar ` to handle variable setting in ` Commands . java ` to provide functionality for setting variable values based on command
fix catentity . onanimaltame not fire on animaltame event .
improve error handling for unsigned range in WindowFrame . java to enhance clarity and maintainability of the code
added a test to verify the presence and presence of the HELV font in the appearance stream to ensure that the correct font name is used
set the mode of the app in PageListController to ensure the app ' s mode is set correctly for better user experience
added support for specifying build arguments and Docker file path in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file
added a null check before initializing threadInfos to avoid potential NullPointerException when threadInfos is null
updated the conditional check for sweepAngleOuter in PieChartRenderer . java to use a constant for better precision to improve code readability and
[ hotfix ] [ runtime ] add more logging to singleinputgate and singlecheckpointbarrierhandler
added new schema constants in mmm Schema . java and ppp Schema . java to enhance database schema management capabilities
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and updated related methods to accommodate it to enhance query accuracy
rename the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to
fix layout wrapping encoder to be compatible with the enclosing appender .
added additional AutoConfigureAfter annotations for amqp , Rabbit , and Kafka to the ZipkinAutoConfiguration class to enhance auto configuration flexibility for better
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
replaced references to ` avro . shaded . com . google . common . base ` with ` com . google . common . base `
refactor BciBlockMapping and GraphBuilderPhase to improve block management and exception handling to enhance code readability and maintainability by consolidating
added getter and setter methods for legacyRenderer in Label . java to enhance code clarity and allow customization of the legacy renderer
replaced the use of ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
modified the signature of the ` thenComparing ` method in ` Comparator ` and added a new ` Department ` class with corresponding tests in
refactor DocIdSet class to improve code readability to enhance maintainability and readability of the code
updated the end time timestamp setting in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure correct handling of time values for
added a try - catch block around parsing integer values in VisualScoreTagTest . java to ensure that NumberFormatException is thrown when parsing values
added a class loader to the MockFactory class in MockFactory . java to ensure proper class loading of the MockFactory class
added a new ` OriginalFormat ` class to handle object and enum formatting in ` ConverterWithEnumFormat . java ` to facilitate
replaced string literals for date formatting with a constant to improve readability and maintainability of the code
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 14836 - camel - aws2 - lambda : enable autowire on the lambda client , regen component - aws2
vm : replace network - specific mac address in uservmmanagerimpl # createvirtualmachine ( string , string )
removed the condition checking for " Authorization " header in ProxyServlet . java to simplify the logic for handling authorization headers
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to improve clarity and consistency in method execution
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes ,
modified the initialization of randUsePoints to use a random value based on the number of points to ensure that the randUsePoints is always within
replace the method ` appendDot ( ) ` with ` endSentence ( ) ` in multiple Geo - related classes to improve clarity and consistency
updated ` formatForConsole ` method to accept ` Locale ` as a parameter across multiple classes to ensure consistent usage of locale - specific console output
updated import statements and modified the handling of unparsed arguments in GroovyParserVisitor . java and GroovyPrinter . java to improve code clarity and ensure
added bounds checking for bottom and right insets in Border . java to ensure proper adjustment of dimensions when they are within bounds
refactor GestureState initialization to use DEFAULT _ STATE and introduce a createGestureState method to improve code readability and maintainability
replaced ` DateTime ` with ` Instant ` and ` DateTimeFormatter ` for date formatting to improve code readability and maintainability by using standard Java
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
fix potential resource leak in torrentsstorage
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during transaction management
increased the timeout duration from 120 seconds to 480 seconds in ` waitForRecoveriesToFinish ` and changed the socket timeout from 15
added a new file ` SearchResults . java ` that implements a list of search results from a given Hits to facilitate the
refactor thread CPU refresh logic to streamline thread CPU refresh logic to improve code readability and maintainability by reducing redundancy
refactor primitives initialization in BytecodeNode . java to ensure a null check before initializing the body to avoid potential NullPointerExceptions when accessing the frame
added new version strings " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBack
updated the feature flag for " ENABLE _ TWOLINE _ ALLPS " from DISABLED to TEAMFOOD and modified the app
added a new API endpoint for retrieving tenant pools for current instance to provide a list of tenant pools for the current instance
refactor ` canEarlyTerminate ` methods to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix
added a check for ` isToString ( ) ` in the ` InlineBytecodeGenerator ` and updated tests in ` InlineByteBuddyMock
added logging statements to CxxCompileStep and CxxPreprocessStep for compiling , running , and preprocessing operations to enhance debugging capabilities
add stringutil . removecharacter ( string , char ) method to remove character from string .
fix metadata service export ( # 1748 )
( chore ) camel - kie - runtime : add a datatransformer interface to facilitate the use of kie - api
change type of values from Object [ ] to Number [ ] [ ] in DistributionGraph . java to improve type safety and ensure correct array type
updated condition in FormatStringChecker to check for greater than or equal to zero to ensure correct handling of variable arguments and improve code clarity
updated the initialization of SolrCore in ElectionContext . java to ensure proper initialization of the core variable
refactor ITestDbTxnManager class to improve code readability to enhance maintainability and facilitate future updates
refactor connection handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential resource leaks
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` , ` CodeFirstPojo ` , and ` Code
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
modified the selection handling logic in ScaleDialog . java to simplify the listener logic and improve clarity to enhance code readability and maintainability by
fix potential null pointer exception in forge
pdfbox - 4071 : do n ' t throw an ioexception if there be no appearance stream create
changed the type of ' keys ' from TreeSet to LinkedHashSet in ExecuteSqlCommandStep . java to improve iteration order for better insertion order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and added @ Override annotations in multiple classes to
updated the preload version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added a conditional check for agentSupport before calling setAllConstructorsToPublic in MainMockTransformer . java and created new test classes MockStaticWithPrivate
pdfbox - 4892 : improve handling of cosstring , cosstring , and cosarray in securityhandler
bugfix # 11818 , set the window title when use sun . awt . x11
updated the depth calculation logic in XRSurfaceData . java to handle different pixel sizes based on the current color model ' s pixel size to
added errorResponseBody variable and updated error handling in OkHttpDataSource . java to improve error handling and provide clearer error messages for unsuccessful responses
added a static method ` exit ` in ` TopLogging ` and simplified the exit call in ` TopThreadGroup ` to improve error handling and
updated the initialization of the ` start ` variable in ` NativeRegExp . java ` to ensure the correct index is used when ` regexp ` is
disable optaplanner - 468 test due to upgrade to optaplanner 6.3 . 1
[ hotfix ] fix indexoutofboundsexception in defaultallocator
added a method to clean entries without feeds in the DatabaseCleaner and FeedEntryDAO classes to enhance the cleanup process by removing entries without feeds
changed the return type of ` appendToLabel ` method from ` void ` to ` AtomicCounter ` to provide the instance of ` AtomicCounter `
[ java ] add no - op idle strategy for medium driver .
added support for handling HTTP status codes in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are only written when not modified
updated method names and instrumentation in InstrumentationPartialEvaluationTest . java to use ToolEvalNodeFactory instead of SpliceInstrumentListener to improve cl
updated the paintTabArea method in SynthTabbedPaneUI to use insets for tab area dimensions to ensure proper rendering of the tab area
updated the ` getKrakenDepth ` and ` getKrakenMarketDataServiceRaw ` methods to accept an ` Object ` argument for
added ` getFileSeparator ( ) ` and ` isAbsolute ( ) ` methods to ` FileEndpoint ` , ` GenericFile ` , and ` Remote
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to include dependencies as a parameter to enhance
added trace logging for registered Hive functions , UDFs , and non - deterministic UDFs in HiveFunctionRegistry . java and implemented a test for
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test reliability by allowing more time for
rename unserializablecolumnfamilystoreexception to unknowncolumnfamilystoreexception , which be n ' t serializable .
updated error handling in NativeErrors . java to check if the output file can be writable before proceeding to improve clarity and provide clearer
added error handling for package info retrieval in LauncherModel . java to improve robustness by logging exceptions when package information is not available
do n ' t swallow exception when upgrade the database
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and update tests in FaultTolerantChunkOriented
replaced the method ` startsWith ( completed ) ` with ` regionMatches ( completed ) ` in ` LineReaderImpl . java ` to improve
added new imports for SourcesFileResults and SourcesFileErrors , and modified data table handling to include GLOBAL _ DATA _ TABLES to improve data
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar . java to ensure that all tasks are dismissed when
bug 41400 : add dbupgraderemodetemplate interface to allow dbupgraderemodetemplate to be refactored
removed redundant null checks for the connection variable in LdapClient . java to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling to use a variable for clarity to improve readability and maintainability of the code
fix race condition in cassandraserver . set _ keyspace ( )
added a check to skip synthetic fields in ReflectUtils . java to ensure that synthetic fields are processed correctly
added LoggerProvider to manage logging capabilities in the application to facilitate logging functionality in the application
changed the type of the builder and port variables from String to Object in ServerStatusCommand . java and updated related tests in ServerStatusCommandTest
added a deprecation warning for setting the Spring context in SpringFactory to provide clearer guidance on deprecation warnings related to different Spring contexts
added a new method ` deepStart ` to the ` Startables ` class that accepts an array of ` startables ` to facilit
removed the deprecated method ` reservePrimitiveExtensionArray ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code by
fix laser table do n ' t work if it ' s a target block .
simplified the condition for returning false in AbstractJdbcDatabase to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration messages period setting in MemoryLimitTest . java to ensure proper handling of page size mem during tests to improve test reliability by
simplified null checks for handlerName in RequestHandlers . java to improve code readability and maintainability
updated the method to replace hyphen characters with a dot in the servlet name to ensure proper formatting of the servlet name
refactor Python path handling in ProjectBuildFileParser to use a filter method to improve code readability and maintainability by reducing redundancy
updated audio frame size calculations and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness by ensuring audio data is
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerException when enums are null
updated the error message format in CommitLogReader . java to include additional context to improve clarity of error messages for better debugging
added a policy assignment from containerScope in WebSocketSession . java to ensure the session ' s policy is set correctly based on the container ' s
simplified the initialization of static fields in the Java to TypeScript translation to improve code readability and maintainability by eliminating unnecessary
added a webroot argument to the createContext method in UserService . java to allow dynamic configuration of the UI directory based on user parameters
( chore ) camel - spring - dsl - test : migrate camel - test to junit 5 ( # 1842 )
netbeans - 1748 : fix the bug that netbeans do n ' t work on jdk 11
corrected the method name from ` printHeaderObject ` to ` createHeader ` in multiple formatting helper classes to improve code readability and maintain
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper buffer management during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalForeground and mOriginal
updated the range check for ` decExp ` in ` FloatingDecimal . java ` and added a new class ` ToString . java ` to
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure correct handling of property
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to streamline version retrieval by eliminating unnecessary
added a check to ensure the origin header is not already present before setting it to ensure that the origin is set only when the URI is not
refactor task visibility and animation logic in RecentsView , TaskView , and LayoutUtils to improve animation responsiveness and ensure proper
added the ` field ` parameter to the ` checkState ` method calls in ` ORCRecordReader . java ` to include the ` field `
remove hls sample from demo demo
removed unused imports and updated method names in PersistenceProvider . java to streamline code and improve readability by eliminating unused imports
updated log messages to include " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . apache . hadoop . ip
added diagnostic logging and a warning listener in TestSpecificCompiler . java and created Position . java for testing union and fixed fields to enhance error handling
modified session creation logic in WebSocketEndpoint and added a new test for session closure in WebSocketIT to ensure proper session management and ensure proper handling of
updated random delay values and modified event listener methods in DaoStateMonitoringService , ProposalStateMonitoringService , DaoStateMonitoringService , and
replaced the version number from " OpenSymphony " to " Apache Struts " in the mappings to ensure compatibility with the latest version of
added conditional checks before stopping the stream in WebCamInputPanel . java to ensure that the stream is only stopped when the stream is stopped
changed data types from List to ArrayList in BittrexChartDataResponse and added a new BittrexChartDataPeriodType enum to enhance
updated import statements in GMLExamples . java and modified import statements in GMLExamples . java to improve code clarity and maintainability by
updated method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to ensure
added a method to retrieve the identifier generator and modified constructor parameters in AbstractEntityTuplizer to improve identifier handling and provide clearer error
rename ` ` look up full text ' ' to ` ` download full text ' '
refactor URI handling in URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl for improved clarity and functionality to enhance
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDB hash before retrieving the API result to avoid potential NullPointerExceptions when the OSDb hash is blank
added token transfer functionality in ` RuntimeImpl ` and implemented the ` transferToken ` method in ` MUtil ` to enhance contract transfer functionality by allowing
camel - 1397 : camel - ftp - add support for stepwise file deletion in ftp endpoint .
updated method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to correct the method
added validation for join results in MapJoinOperator and introduced BloomFilter in HybridHashTableContainer to ensure proper handling of empty join results
updated the constructor of HTTPSPDYAsyncEndPoint to include an AsyncEndPoint parameter and added getter methods for local host , port , and server
added ` intent . putExtra ( " id " ) ` to multiple adapter classes and updated ` TweetPager ` and ` TweetFragment
added proxy authentication handling in HttpURLConnection to ensure proper disconnection of web connections based on user authentication status
updated the ` _ numChildren ` variable to use ` AtomicInteger ` instead of ` int ` and modified the return statement in ` TraceContext `
reformatted code for improved readability and consistency across multiple Java files to enhance code maintainability and readability
disable the test in ValueTypeTests by setting the enabled flag to false to disable the test for better test reliability
resolve split - packages : move everything from kie - api under org . kie . internal . io to org . kie .
updated predicate types from IN to NOT _ IN across multiple predicate classes to improve clarity and consistency in filtering logic
updated exception handling in FileActivity , Preferences , ReceiveExternalFilesActivity , and ReceiveExternalFilesActivity to use Exception instead of AccountNotFoundException to improve
added null check for witnessService before validating permissions to prevent potential NullPointerException when witnessService is null
updated the construction of the taggedCol string to use getExprString ( ) method to improve readability and maintainability of the code
added a check to ensure the item ' s Javadoc is not present before setting it to ensure that the item ' s Javadoc is only set when
replaced ` holderMethod ` with ` holderMetadata ` in ` CompiledICHolder . java ` and created a new class ` Redefine
replaced multiple calls to ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in Tabs . java to
[ hotfix ] [ kafka ] replace unsupportedoperationexception with unregisteredmetricgroup in serializationschemaadapter
updated the calculation of the ' y ' variable in the Polygon class to use a temporary variable to improve code readability and maintainability by redu
updated the cache creation method to accept a Configuration parameter to ensure proper type casting for cache configuration
added a null and length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java
refactor ShadowCookieManager class to improve code readability to enhance maintainability and facilitate future updates
added a new configuration option to disallow drop operations on external tables in Hive to ensure that storage - based authorization checks are performed correctly for external tables
added a semicolon to the conditional statement in Stage . java and corrected the calculation in ProgressBar . java to improve code readability and maintain consistency in
[ gr - 13434 ] use native byte order for llvmlanguage . getplatformbyteorder ( ) .
updated the property name from " namedpipesocketprovider " to " windowsprovider " in WindowsClientProviderStrategy . java to align with the
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the URL loading logic to allow dynamic configuration of the
corrected a typo in the exception message from " parameterArray . Paramter " to " parameter . Parameter " to clarify the
removed the ' required ' parameter from the ' after ' parameter in AuditEventsMvcEndpoint and added a test for it in AuditEventsMvcEndpoint
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple files to improve clarity and consistency in naming conventions
added functionality to remove and delete the soft body from the world in SoftBodyTest . java to ensure proper cleanup of the soft body and prevent
changed interfaces from package - private to public in multiple classes to allow external access to these interfaces
updated log messages in ZeppelinhubClient , ZeppelinWebsocket , and ZeppelinhubClient to
added unit test for non - redundant jingle namespace
fix npe in buildcraftenergy and add a null check for redplasma .
added support for HTTP / 2 header handling in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2Connection
refactor conditional statements for clarity in plot removal logic to improve readability and maintainability of the code
updated delimiter logic and formatting in SimpleReport . java to improve clarity of output formatting to enhance readability and maintain consistency in output formatting
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update related references to improve clarity and consistency in naming conventions
refactor contract validation logic in Runtime . java for improved clarity and error handling to enhance code readability and maintainability by reducing
make sure 3d input be create only when there ' s no feature .
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable the test execution
do n ' t throw parserexception in scripttagpayloadreader . parsepayload
added an @ Override annotation to the getRepositoryFactoryClassName method in JpaRepositoryConfigExtension . java to improve code clarity and maintainability by
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance flexibility
updated variable assignments from ` this ` to ` this . x ` and ` this . y ` in ` IOSGLES20 . java `
removed the UploadPathActivity class and its associated functionality from ComponentsModule . java to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to return - 1 when indexOptions is DOCS _ ONLY to ensure proper handling of negative term frequency
fix ( constructor ) : set constructor . isimplicit ( ) to true for implicit constructor
added a ` Database ` parameter to multiple ` populateValidateNullableIfNeeded ` , ` populateValidatePrimaryKeyIfNeeded ` , and ` populateValidateForeignKeyIfNeeded
refactor Database class to improve code organization to enhance maintainability and readability of the database operations
refactor SpringApplicationBuilder class for improved clarity to enhance maintainability and readability of the code
updated the iterator assignment in PointInSetQuery to use the current instance of sortedPackedPoints to improve code clarity and maintainability by
removed unnecessary substring extraction from rawName in SchematicHandler . java to simplify the code and improve readability
added support for various Collections types in AbstractCollectionAssert and updated test cases in CollectionAssert _ isUnmodifiable _ Test to enhance collection assertion functionality and
changed the access modifier of the Option enum from static to instance to allow external access to the Option enum from other packages
added a confirmation dialog for twitlonger character in Compose . java and removed it from ComposeActivity . java to streamline the
refactor toggleKeepInSync method to utilize CheckBox for file synchronization to simplify synchronization logic and improve code clarity
replaced DatatypeConverter with Java ' s built - in Base64 in ImageUtil . java and added unit tests in ImageUtilTest . java
added new files ` ControllerCounter . java ` and ` DBCallback . java ` to define a counter and MongoDB collection functionality to facilit
added ' final ' keyword to the ' deleteTicket ' method in EhCacheTicketRegistry . java to ensure immutability of the method
added a new file FlywayMigrationRunner . java to demonstrate the migration of Flyway data source files to facil
replaced instances of ` isEmpty ( ) ` with ` size = = 0 ` in HashMap . java and added a new class ` NotEmpty
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
added @ Nullable annotation to modifiers parameter in CompressionCodec and ZlibCodec methods to improve null safety and prevent potential NullPointerExceptions
added null check for mainValue in LauncherHelper and refactored jar creation logic in Arrrghs to improve error handling and ensure proper
updated test class names for consistency in naming conventions to improve code readability and maintain consistency in naming conventions
rename methoddata : : _ graal _ node _ count to methoddata : : _ jvmci _ ir _ size
refactor CellCopyPolicy to remove the Cloneable interface and update its constructor to accept an instance of CellCopyPolicy to simplify the constructor and
added a method to reset the icon load result in FloatingIconView and refactored its assignment in FloatingIconView to improve code
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to improve
updated IconRecentsView . java to conditionally set top and bottom margins based on device orientation to ensure proper layout adjustments based on device
deleted the AddAdapter . java file to remove unused adapter classes to streamline the codebase
do n ' t call get ( x ) . get ( x ) . get ( x ) if the constructor code list be empty
removed unnecessary null checks for parentColNames and bucketColNames in the OpTraitsRulesProcFactory class to simplify the code and improve readability
refactor TestLogWatcher to utilize a new looper method for checking message registration to improve error handling and ensure that no messages are registered
added a print statement for " < any > " in Java2TypeScriptTranslator . java to enhance code readability and maintainability
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest SDK
added a check to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS environment property to true to ensure that the SPR
removed the handling of the singleton lock in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary boolean checks
updated method names and added new callbacks for response and forward in CallbackActionExamples . java to improve clarity and functionality of callback handling in the
modified the ` writeFile ` method to include an additional boolean parameter for appending output files to enhance flexibility in writing output files based on the specified
added a condition to check if ` mavenSettings ` is not equal before returning MIRRORS in ` MavenExecutionContextView . java `
added a ` name ` field to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated constructors in ` BuildRuleSource
updated the service client matching logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to
replaced direct calls to ` values ( ) . toArray ( ) ` with ` AnnotationParser . toArray ( ) ` across multiple classes to improve
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser ` and
updated the default line separator in GlobalConfiguration . java from " OS default " to " Line separator ( LF or CRLF ) for output to ensure
fix bug where interface be not implement in the interface .
[ thymeleaf ] sanitize special character in the request
chore : update java and python dependency ( # 119 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added functionality to verify the expected file contents
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated container type assignment in AllAppsRecyclerView and refactored logDeepShortcutsOpen method in UserEventDispatcher to improve clarity and
hbase - 2597 remove deprecate config key from hbase . ipc . server . allocator . max . buffer . count .
fix nativeworker test failure on window
added a new method ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated references in ` Parameter . java ` to
updated TestFSTs . java file to improve test coverage for FSTs functionality
ggb - 1748 fix for label height calculation in the text renderer
hbase - 1187 add initial size to increasingtoupperboundregionsplitpolicy ( # 1751 )
removed unnecessary model reset and start method calls in LauncherClings . java to streamline loading state management and improve code clarity
removed initialization of keys and updates lists in ManagedSelector . java to streamline code by eliminating redundant initialization of variables
added a private Set < String > excludedDatasources field and its setter method to SpringDataSourceBeanPostProcessor to allow customizable exclusion of Spring
added a call to storeUndoInfo ( ) in TableValuesView . java and removed a null check in TableValuesPanel . java to ensure
( chore ) camel - aws : refactored the kinesis client creation method to accept a clientconfiguration object
refactor channel triggering logic in VelbusSensorHandler to handle multiple channel inputs to improve channel management and ensure accurate event triggers for different channel
disabled benchmarks due to unfavorable benchmarks in LocalCacheSelectorCode . java and modified delayable logic in BoundedLocalCache .
added a test for illegal database creation and deletion in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure proper resource management during garbage collection
renamed ` desiredWorkspaceLeftRightRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx
reformatted code for consistency and readability in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java to 2.1 . 0
api : fix typo in ` ` xenservernetworklabel ' '
updated libGDX version numbers from 1.5 . 5 to 1.5 . 6 and 1.5 . 7 - SNAPSHOT to
removed the metricNames field and its getter method from SolrCore . java to streamline the management of metric names in the SolrCore class
changed the type of ` workingDirectory ` and ` absolutePath ` from ` URI ` to ` Path ` in ` MavenManifestFactory . java `
replace direct mac check with a static final boolean variable to improve code readability and maintainability by reducing redundancy
refactor JdbcAggregationRepository to improve code readability to enhance maintainability and facilitate future updates
added slotList . clear ( ) and slotList . addAll ( other . slotList ) to the Frame class to ensure the slotList is
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure proper initialization of the predCount variable
added imports and modified the mergeProperties method in ConfigurationSpringInitializer . java to enhance configuration management by merging properties from the configuration
refactor setupLogging method to use the root logger directly instead of a switch statement to improve clarity and maintainability of the setupLogging method
replaced instances of HashMap with LinkedHashMap for aliasToWork and aliasToWork across multiple files to improve performance and maintain insertion order for better performance
added a check to retrieve the superclass of the JDBC handler map if it is null to ensure proper handling of the superclass hierarchy when the type is
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter classes to track the
updated the way the language range is parsed by removing the ' ; ' character from the wellformed string to ensure correct parsing of the language range
updated the handler context handling in Http2ServerResponseImpl and added context assertions in Http2Test to improve resource management and ensure proper context management
added caching for XSSFTables in SXSSFEvaluationWorkbook , BaseXSSFEvaluationWorkbook , and XSSFEvaluationWorkbook
updated schema text formatting logic in BaseSchemaTextFormatter . java to accommodate additional schema text detail types
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure uniqueness of elements in the order
updated the initialization of tableScanCloneOpsForJoin and added a check to ensure the operator tree is properly cloned before proceeding to avoid potential
added a null check for the client ID before processing in DynamicRegistrationClientConfigurationService . java and simplified import statements in JsonFileRegisteredClientService
clear achievementlist . field _ 187981 _ e to avoid memory leak
initialize userName , productName , driverVersion , and connectionUrl fields to empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure
changed the link from " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottom
added support for reading long values using LongBuffer in ByteBuffersDataInput and ByteBuffersIndexInput classes to enhance data handling capabilities and ensure proper
refactor UnixFileAttributes to use a new method for creating FileTime objects to improve code readability and maintainability by centralizing time conversion
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior of humongous regions
added visibility control for the search bar in AllAppsContainerView based on user preferences to enhance user experience by allowing users to hide the search bar
changed the method from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added a null check for the variable ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to manage the reloading of the current page in the menu to enhance user experience by allowing
changed log level from info to warn for various entries in SQLManager . java to improve clarity of log messages for better debugging
update MIN _ SPRING _ VERSION from " 3.2 . 7 . RELEASE " to " 3.2 . 8 . RE
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version to
use serviceloader to load extension point from serviceloader instead of factoryregistry
added a call to closeTable ( ) in HiveHBaseTableInputFormat . java to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and invoked it in ` HiveViewImpl ` to ensure the statement
updated feature settings in DocumentFactory and modified hash map initialization in XMLSAXHandler and XMLSAXHandlerTest to improve code clarity and
replaced the command execution method from ` JdbCommand ` to ` contToExit ` and added an import for ` OutputAnalyzer ` to
added a new implementation of the ` getType ` method in ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to enhance
replaced ` runnable ` with ` entry ` for future removal in ` ExpressionThreadPoolManager . java ` to improve clarity and consistency in future
updated the default HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to ensure compatibility with
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to improve clarity and consistency in listener management
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to increase memory usage based on available processors
added a try - catch block around the establishResourceManagerConnection method to handle potential exceptions during resource manager establishment
initialize classFile to null and adjust exception handling in LambdaRewriter . java to improve error handling and ensure proper fallback behavior when classFile is null
updated the exception message format in IllegalArgumentException to include min and max parameters to improve clarity of error messages for better debugging
updated onMessage method signatures across multiple classes to include an additional parameter for better context to enhance code clarity and maintainability by using an additional parameter
added new interfaces for ` Cursor ` , ` Database ` , and ` Row ` in the ` com . codename1 . db ` package
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion classes
# 263 - add ebeanserver . setbeanid ( bean , object id ) to setid ( bean , object id )
updated the xslt transformation method in RuleSetToDocs . java to use a helper method to improve code readability and maintainability by using a
replaced direct addition of request matchers with a collection of matchers to improve code readability and maintainability by reducing duplication
added hashCode ( ) and equals ( ) methods to ContactResource class to enhance hashcode and equals methods for better object comparison
move the getrequest ( ) method from abstractprocessor to abstractprocessor
updated log messages for saved Persistable status and improved error logging to enhance clarity of log messages for better debugging and debugging
added a tearDown method to TestJdbcDataSource and invoked it in TestIndexSearcher to ensure proper cleanup of database operations and ensure proper
added import for LambdasWithInterfaces and modified formatting in SyntaxTests . java to enhance code readability and maintain consistency in formatting
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
replaced the ParserDecorator implementation to utilize a FallbackParser using MediaTypeRegistry instead of TemporaryResources to simplify parser handling and improve code maintainability
fix fmlsecuritymanager . getcallingclass ( ) to return ` ` none ' ' instead of ` ` none ' ' ( #
updated variable declarations in AccountUtils , IndexedForest , CustomPopup , and CustomPopup classes for consistency to improve code readability and maintainability
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` and refactored conditional logic in ` Parser ` and ` DumpingVisitor ` to
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in tests
added a new test method to verify error handling when Buck configuration is missing in BuildEndToEndTest and updated related test cases to ensure
added physical memory validation in TestStringBufferAndBuilderGrowth . java to ensure the machine does not exceed a specified limit to improve test reli
added a deprecated conversionService field and refactored the MapToLocalDateConverter to use it to improve code clarity and maintainability by
added a success flag to HiveMetaStoreClient . java to track the success status of the operation
updated condition checks for " * " in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to
added support for " amp . twimg . com " in multiple conditions in TimeLineCursorAdapter and TweetActivity to enhance user experience by
added a @ Deprecated annotation to AreaReference . java to indicate that the code is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
added assertions and reference kind handling for REF _ invokeStatic and REF _ invokeSpecial in MemberName . java to improve assertion clarity and ensure
changed the default value of submitKeyUpdates from " false " to " true " and added synchronization around the runChange method to ensure thread safety
added an else clause to the mouse event check in EditNodeTextField . java to ensure proper handling of mouse events in the text field
camel - 1397 : fix the issue of camel - spring - dsl do n ' t support static bean method .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a final modifier to the exception variable in AgentRunnerTest . java to improve code clarity and ensure proper exception handling
updated descriptions in multiple classes for consistency and clarity to improve readability and maintainability of the code
refactor face addition logic in ObjLoader . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
corrected a typo in the variable name from " reentrantLock " to " lock " across multiple files to improve code readability
added " jar " to the ` getBomReference ` method and updated related calls to include the Maven packaging parameter to enhance the handling of
updated back ( ) method to use evt . getComponent ( ) instead of directly calling back ( ) to ensure proper handling of the component ' s
simplified the conditional check for certificate verification in SASLAuthentication . java to improve code readability and maintainability
changed the parameter type of the ` actual ` and its ` that ` methods from ` @ Nullable [ ] ` to ` < T extends @
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple Java files to improve code readability and
replaced OMR . gui . removeBoardsPane ( ) with tab . deselected ( ) in SheetAssembly . java and added
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID associated with the application
added null checks before setting time interval in ImportContainerImpl . java and updated tests in ImporterGEXF2Test . java to ensure
updated the command line argument from " - logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to ensure
updated error logging to include the exception message to improve error reporting by providing more context on resource loading failures
[ java ] rename robotshonoringpolicy to crawldata in dispositionprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not needed
updated file path handling in DefaultPackageScanResourceResolverTest to use platform - specific separators to ensure consistent file path formatting across different operating systems
added imports for InputStream and ZipInputStream , and implemented the alternativePath method in ExpectNewDemo . java to handle potential runtime exceptions and provide a
updated input initialization in LogEntryParseTester . java to use getFirstFilter ( ) . init ( ) to ensure proper initialization of the first filter
added a protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by allowing protection functionality
added dispose method to properly release resources in WaterRipples . java to ensure proper resource management and prevent memory leaks
added a configuration option to disable semi - join optimizations on external tables in HiveConf . java and updated DynamicPartitionPruningOptimization .
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that the required authorization is required for requesting public keys
updated wallpaper offset from - 30 to 0 in Workspace . java to adjust scrolling behavior for better user experience
updated SybaseASADatabase to return true instead of false in SybaseASADatabase and modified SequenceSnapshotGenerator and CreateSequenceGenerator to
putsql : do n ' t commit / rollback if it ' s set to false
added directory creation and existence checks for parent directories in SnapPuller . java and corresponding test cases in TestReplicationHandler . java to ensure
corrected a typo in the AppTarget ID from " id : launcher " to " launcher : launcher " to improve clarity and consistency
[ java ] framer . frame ( ) now return a bytebuf instead of return a bytebuffer .
removed unnecessary parameters from OAuth2LoginConfigurer and OAuth2AuthorizationRequestRedirectFilter constructors to simplify method signatures and improve code readability
added extended information for split text into key - value pairs in GenericUDFStringToMap . java to provide clearer guidance on how delimiters
updated PlainFormatter to use truncated time format instead of a static string to ensure consistent formatting of instant values for improved performance
refactor the ` close ` method in ` AgentRunner ` to introduce a retry mechanism for waiting for the agent to be closed to improve
refactor ClassLoadingStrategyHelper to use MethodHandles . privateLookup directly instead of reflection to simplify code and improve readability by eliminating
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the debug
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test due to potential issues with no sample results
updated the exception message in GridLayout . java to specify that rows and columns must be greater than zero to improve clarity of error messages for
updated string concatenation syntax and added error handling in DecisionNode . java and WagonCART . java to improve code readability and ensure
added functionality to order BoundSheetRecords by their position in XLS2CSVmra . java and implemented sorting functionality in BoundSheetRecord . java
refactor calculations for averageImpulse and endInstImpulse in ThrustCurveMotor . java to improve clarity and consistency in
updated InputSystemJme instantiation to accept a inputManager parameter to ensure proper initialization of InputSystemJme instance
refactor hash code field offset handling in UniverseBuilder . java to improve clarity and ensure correct offset calculation
remove block . getmesh ( ) and deprecate block . getmesh ( ) .
rename variable ` keytabPath ` to ` localKeytabPath ` in ` YarnTaskManagerRunner . java ` and update related logging
added option EMPTY _ WORD _ OPTIONS to LineReader and modified matchers logic in LineReaderImpl to conditionally handle case - insensitive matching based on
updated pushViewReplicaUpdates method to include writeCommitLog condition to ensure correct handling of commit logs during pushViewReplicaUpdates
added functionality to manage the default web button in ResultHandler and URIResultHandler to enhance user experience by allowing users to disable the auto - open
added a batching test method in JoinedTableTest . java and updated properties in HibernateProperties . java to ensure proper handling of batch
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate items during persistence
replaced deprecated ` format ` option with ` plugin ` in ` CucumberOptions ` and removed the deprecated ` format ` option in `
removed the save ( ) method from PMS . java to clean up the code and improve readability
simplified the back key event handling in ExtendedEditText . java to improve code readability and maintainability
added a new ` Capacity ` class and modified the ` newCapacity ` calculation in ` AbstractStringBuilder ` to ensure that the ` ensureCapacity ` method
replaced goHome ( ) method with onNoteSaved ( noteTmp ) method in DetailFragment . java to streamline note saving process by
added support for extract xwpf endnote reference from xwpf document
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo as a parameter to enhance event tracking by including client information
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the functionality of the GDALVersionInfo
added a new file ` Lifecycle . java ` that implements network error handling to facilitate the management of network errors in the application
added logging and error handling for 404 URLs in DeviantartRipper . java to improve error handling and provide clearer logging for
removed unused imports from BodyTubeShapes . java and RocketFigure . java , and modified the loop structure in RocketFigure .
[ fix ] use retf instead of gldrawable . gettexturebuffer ( ) .
add initial value to create params so that it can be use .
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts for improved data handling to enhance performance and maintainability
updated DefaultStatusRoute to use originatingType ( ) instead of status ( ) and changed routesByStatus from Collection to SortedSet in DefaultRouter
removed redundant data processing logic in GoAwayTest . java to streamline code and improve readability
added property introspection support for ` FluentSetterBean ` in ` ReflectionUtils ` and created a corresponding test in ` EasyRandomTest ` to enhance
changed return type of post and send methods from ListenableFuture < ? > to ListenableFuture < HttpResponse > in BlockingHttpEndpoint and Http
add test case for file sort by expression
updated the output message to include the task ID instead of the last appeared task target to improve clarity of the output for better debugging
added configuration options for PDF formance and scaling information in RtfDocumentSettings . java to enhance user experience by allowing dynamic configuration of image scaling information
added support for aggregate function retrieval in TSServiceImpl to enhance flexibility in retrieving column names based on command - line parameters
updated ` Nested2 ` and ` Base ` classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase
added functionality to set the xCapEnableBox and set its value based on the presence server URI to enhance user experience by allowing dynamic configuration of
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3892 : add a
added stopEditing methods to manage text editing behavior in CodenameOneImplementation , Display , and TextArea classes to enhance user experience by allowing
fix npe in controlrate when group attribute be not set
modified the ` showDialog ` method to use ` isNewComponent ` instead of ` includeUndoModify ` and added a checkbox to always open the
added error logging and synchronization to the sendText method in ChatAnnotation . java to improve error handling and ensure thread safety during message sending
added a check to prevent the test from running on MS Windows to ensure that the test is only executed on Windows
added SQL _ SERVER _ SNAPSHOT constant to the TransactionIsolationLevel class to support SQL server snapshoting functionality
replaced the direct addition of newRecids with a offering mechanism in AsyncWriteEngine . java to improve the handling of newRecids
use java . util . zip instead of jrecompat . getinstance ( ) .
added null check for command class before creating new instances in RegisteredServiceSimpleFormController to prevent potential NullPointerExceptions when command class is not set
change default disk _ failure _ policy from best _ effort to ignore and add ignore to cassandra daemon .
removed the ` public ` access modifier from method declarations in ` RipperInterface . java ` and ` RipStatusHandler . java `
added a condition to filter based on the incoming address in PeerDiscoveryAgent . java to ensure that the filter does not fail when the address is
removed the setter method from SimpleCommandLineJobRunner to simplify the code by eliminating unnecessary method
added ClusterDataCache to the computePartitionAssignment method in PinotSegmentRebalancer . java to enhance data cache management during rebalancer operations
douniaberrada : remove container . delete ( ) which be no longer need .
simonstewart : prevent illegalargumentexception in defaultselenesecommand . parse ( ) .
added MultipleAttemptsRule to CreateGlossaryTests to improve test reliability by allowing multiple attempts for tests
updated schema references in ModelResolver to use Components . COMPONENTS _ SCHEMAS _ REF instead of direct references to improve clarity and
refactor EntityDeletedEvent to use JsonUtils for JSON serialization to improve code readability and maintainability by utilizing JsonUtils for JSON serialization
added GOP support validation in FormatConfiguration . java and updated media handling in DLNAMediaInfo . java and LibMediaInfoParser
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of return type printing
refactor code to use ReentrantLock for thread safety in ParseConfigUtils to improve thread safety and prevent concurrent modification issues
added AcquireReleaseColumnsSegmentOperator to manage column acquisition and release logic in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper
simonstewart : remove the @ ignore annotation from the firefoxprofiletest
updated method signatures and return types in HasAndroidDeviceDetails . java and changed the return type of getSystemBars to Map < String , Map
do n ' t add bug to projectstats if it be dead
bugfix # 2328 - disable shadow label for gtk and recent
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code and improve readability
added a check to return the current time of a weekly action without a day in the future and created a test for it to ensure that
replaced the ` uploadButton ` with a ` actionMenu ` for enabling or disabling a single upload task to improve user experience by
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added loadMetaData method to MeXBTExchange and RippleExchange classes to enable loading of exchange metadata from an InputStream
added a new ` WritableSerializer ` class and integrated it into the ` CrawlDbReader ` to enhance serialization capabilities for Hadoop Writable objects to
removed unused imports and refactored the TesterRequest class in TestJaspicBasicAuthenticator . java to streamline code by elimin
added a service annotation to the MDNSDiscoveryService class to provide a specific service for the MDNS discovery service
added null check for messageItem before scrolling to position with offset to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to include a worker thread to enhance thread safety by allowing customization of
removed assertions for DATANODE and NAMENODE dependencies in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary assertions
added methods ` restoreLocalInfoFromTableInfo ( ) ` and ` dedupWithTableInfo ( ) ` in ` PartInfo . java `
reformatted code for consistency across multiple Java files to improve code readability and maintainability
added Matrix4 transformation and scaling settings in BitmapFontTest . java to ensure proper rendering of images based on the graphics ' s height
[ hotfix ] [ python ] ignore built - in aggregate in streamphysicalpythongroupwindowaggregaterule
removed the volatile boolean ` hasPendingEcho ` field and updated related methods in ` EndpointState ` , ` Gossiper ` , and
added a method to retrieve unreachable token owners in Gossiper and updated the method name from isAnyHostDown to isAnyStorageHostDown to
[ geosymbolic ] do n ' t change coordinate to multiplication when the node be a variable
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve content type management and allow for customizable content
updated variable access modifiers and added null check for local graphics environment in XToolkit . java to improve code clarity and prevent potential NullPointerExceptions
refactor RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock . ReadLock ` and ` ReentrantReadWriteLock . WriteLock
added a test method to verify the reading of an identity provider in another zone using a Zones token to ensure that the identity provider is correctly
[ hotfix ] fix null pointer exception in pointintimetrigger
removed unused import of Service in SendTicketGrantingTicketActionTests . java to streamline code by eliminating unnecessary dependencies
[ rocketmq - 3892 ] send heartbeat to all broker when rebalance change
[ ci ] add ` ` cairo . detached . mkdir . mode ' ' configuration property ( # 509 )
[ java ] add a test to reproduce the issue of send message to slow - down service .
updated the default label pattern from " authors3 " to " auth " in JabrefPreferences . java to ensure the correct label is used
refactor CxxPlatform handling in DBinaryDescription and DLibraryDescription to utilize implicit dependencies for parsing time dependencies to improve dependency management and
refactor GoogleCloudAPI to properly manage OAuth service disposal and manage voices to ensure proper resource management and prevent memory leaks
camel - 13946 : camel - core - do not delete file on completion if the file name do n ' t exist .
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to include it to allow
add dialect attribute to mapwriter for freeplane version
added methods ` currentDate ( ) ` and ` currentTimestamp ( ) ` to the ` Update ` class and corresponding tests in ` UpdateTests
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition and related classes to use lambda expressions for improved readability to enhance code clarity and maintainability by using lambda expressions
replaced TermQuery with ConstantScoreQuery and adjusted score calculation in TestFacetsCollector . java to improve accuracy of score calculations by using a
removed multiple unused Java method handles from ConcurrentClassLoadingTest . java to streamline the test code by eliminating unnecessary dependencies
updated the ` providesUploadController ` method to accept a ` direct _ nearby _ upload _ prefs ` parameter and added a new method for
added support for handling " SYSIBM " and " SYSDUMMY1 " modes in database operations to enhance compatibility support for different database
added conditional properties and improved logging messages in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , and SamplerAutoConfigurationTests to enhance
added lastPid handling and property retrieval in POIXMLProperties and corresponding tests in TestHPSFPropertiesExtractor to improve property extraction logic and ensure
[ geotiff ] fix bug in geotiffreader when no data be nan
added error handling and refactored the ` executeDriver ` method in ` CliDriver . java ` and ` SessionState . java ` to
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated corresponding tests to utilize ` Schedulers ` for
added a default implementation of the selectByRuleIdSet method in RuleConditionMapper . java to provide a way to partition a list of rule
added a method ` addExitDescription ` to ` ExitStatus ` and updated its usage in ` AbstractJob ` and ` AbstractStep ` to
fix the multiblock render handler not work on the minecraft server .
renamed the ` columnFamily ` variable to ` columnFamilyColumn ` and updated related references in ` SliceReadCommand . java ` to improve clarity
removed unnecessary import of Collections and simplified range length calculation in PlotConfiguration . java to improve code readability and maintainability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView to improve UI alert handling by utilizing UIAlertController instead of
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in naming con
added a null check for the service message in AdvServiceTest . java to ensure that the service message is not null before proceeding with
replaced the method ` potentiallyConvertKey ` with ` potentiallyEscapeMapKey ` and simplified the key handling logic in ` MappingMongoConverter `
updated Timber logging statements for image title and description in NearbyMapFragment . java to improve clarity of log output for better debugging
camel - 1357 : fix the typo in the deprecated field name
added null check for fields in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for the ` tabularList ` flag to enhance flexibility in managing applications links
[ ds - 3892 ] use new identifierservicefactory . getinstance ( ) . getidentifierservice ( ) . getinstance ( )
replaced the use of ` bytes . length ` with ` bw . getLength ( ) ` in the ` assignBytes ` method calls to ensure
removed the abstract modifier from the getDisplayScript method in LocaleNameProvider . java to provide a default implementation of the method that returns null
replaced direct usage of keyToPress and keyToRelease with a CharSequence array in RemoteWebDriver . java to improve code clarity and
pdfbox - 4071 : initialize arraylist with the size of the list .
fix deadlock in networkconfigurationwatcher when there be no active interface
added a new method ` getAllEmbeddedObjects ` to handle nested objects in ` HSSFWorkbook ` to improve code readability and maintainability
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline the code by eliminating unnecessary dependencies
updated variable name from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbols in
fix ( modelHourglass ) : call glpopattrib ( ) instead of glstatemanager . popattrib ( )
refactor LiveTvGuideActivity to utilize a new variable for current guide start and end time to improve code clarity and maintainability
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes ` CommonParent
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
refactor function handling by introducing a new method ` inverseOrPower ` to improve code readability and maintainability by encapsulating inverse logic
loop - safepoint elimination : do n ' t allow floating guard if the loop be too big .
fix a bug in typeframemodelingvisitor . isinstance ( ) when the type be an instance of a class .
added a new ` LocalizedString ` class and updated ` Attr ` , ` T6758789a ` , and ` T6
added a new boolean property ` disableClasspathSearch ` and its getter / setter methods to ` ServerConfig ` and updated ` DefaultContainer ` to
made several fields ` formats ` and ` minBufferSize ` and ` maxBufferSize ` final and replaced ` System . arraycopy ` with ` Arrays
updated default retries values from 0 to 2 in Reference . java and updated corresponding test assertions in AnnotationPropertyValuesAdapterTest . java to reflect the
updated TexturePacker . java to include a settings file and modified the usage message to include the settings file to enhance functionality by allowing users to
updated UI elements in AchievementsFragment to use AppCompatTextView for uploaded images and wiki text views to improve user experience by providing
added multiple annotation processing tests in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and parsing functionality
added ` categoryinfo ` field and its getter / setter methods in ` MwQueryPage . java ` and updated ` CategoryInterface . java
reformatted assertions for username and password in AuthzAuthenticationRequest . java to improve code readability and maintainability
added accessibility features and refactored timeout alarm logic in TaskbarStashController . java to improve accessibility management for taskbar timeout
added a condition to check for the presence of a ^ character in the signature and thrown an NoSuchElementException in GenericSignatureParser to ensure that the signature
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases in StubJarTest . java to ensure proper handling of
added null checks and improved null handling in IntervalFilter and LowpassIntervalsSource classes to enhance robustness by preventing potential NullPointerExceptions
added unit tests for the iterator behavior in MapInterfaceTest . java to ensure correct behavior of the iterator in the map
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap class
updated the creation time from milliseconds to seconds in ImageData . java to ensure accurate time representation of image creation time
[ 3.0 ] use locus2m instead of locus2d in castranslator and add a new command to cast
added EncryptionUtils import and removed PRIVATE _ KEY and PUBLIC _ KEY keys in AccountRemovalJob . java to ensure private and public keys are deleted
do n ' t set ` ` keep - alive ' ' header if it be set to ` ` keep - alive ' '
fix npe in postjoinmapoperation when map have no interceptor
remove inlining support for text , comment , and CSS templates in StandardDialect . java
removed the ` spillEnabled ` parameter from multiple methods in ` BaseHybridHashTable ` , ` BinaryHashTable ` , and `
refactor environment variable retrieval to use Optional for improved null safety to enhance code robustness and prevent potential NullPointerExceptions
updated import statements and modified formatting in DefaultActionMapper . java to improve code readability and maintain consistency in import statements
added SerializableMode import to Mockito . java and modified formatting in PluginSwitch . java to enhance serialization support and improve code readability
added instrumentation for field injection point and improved error handling in AbstractBeanDefinition . java to ensure proper handling of nullable fields and improve error messaging
added support for isolation level in select statements in the parser to enhance flexibility in handling SQL queries based on database mode
replaced direct usage of ` HiveConf ` with static final constants in ` HiveConnection . java ` to improve code readability and maintainability
added a method ` isCacheable ` that always returns false in ` GlobalOrdinalsWithScoreQuery . java ` to ensure that the
added a new file TestStrangeControl . java that demonstrates the use of StrangeControl . test ( 42 ) to d
updated the generated file paths in JsFile and JsLibrary to use " . jsfile " and " . jslib " instead of " .
added selection start and end properties with their respective getters and setters in ShadowEditText . java to enhance the functionality of the ShadowEditText class
refactor the startGRPCServer method to use a try - with - resources statement for better resource management to ensure proper resource management and prevent potential
updated the use method in Jooby and Router classes to accept a Route . Class < ? > instead of a hardcoded string to
added a null check for the fst variable in FreeTextSuggester . java to ensure that a lookup is not supported at the specified time
updated newline handling in T4975569 . java and added error handling for MalformedURLException in T6729471 . java to ensure consistent line
added functionality to load and load ABI writer classes in JavacInMemoryStep . java to ensure that the ABI writer class is
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlways
added a check for ` isStopped ( ) ` before scheduling tasks in ` PullMessageService ` to avoid potential ` NullPointerException ` when ` pull
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog to improve clarity and maintainability of the code to enhance code readability and
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and reduce unnecessary dependencies
camel - google - com : fix switch / cases indentation see camel - 14390
added a default method ` getExportedHeaderStyle ` to ` CxxLibraryDescription ` and updated related references in ` CxxLibraryMetadataFactory
deleted the files Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor the split operation in RandomPartitioner to use substring instead of split to improve readability and maintainability of the code
[ gr - 10720 ] fix build - time initialization for jdk . internal . foreign . abi . fallback
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and refactored the ` create ` method in
added debug logging statements for session cookie configuration in UaaSessionCookieConfig . java to enhance debugging capabilities for session cookie configuration
updated the calculation of ` fName ` to use ` Calendar . DAY _ OF _ YEAR ` instead of ` LOG _ DAYS % 10 `
updated condition from ' o ' to ' v ' in ObservableBlockingSubscribe . java to ensure correct handling of blocking observer behavior
added error handling for invalid javap options in JavapTask . java and created a new class T8033711 . java to
replaced ` Collectors . toList ( ) ` with ` . toList ( ) ` in multiple Java files to simplify the code by eliminating
[ hotfix ] [ runtime ] do n ' t log exception in taskdriver
[ flink - 2329 ] [ network ] disable tiered storage for result partition
refactor code to use a new method ` isNotSuccessStatus ` for checking response status to improve code readability and maintainability by reducing
added a configuration option to use GL20 in Cuboc . java and modified LwjglApplication initialization in CubocDesktop .
remove unnecessary check for voidType in JimpleBody . java to simplify code for better readability and maintainability
updated imports and refactored command line argument handling in OutputMacroExpander . java to improve code clarity and maintainability by using a
[ hotfix ] [ test ] fix flaky test in simpletestinclustersupport
added a condition to check if the file path contains a backslash before " / build / " in MergeWordsListTask . java to ensure proper
update instructorfeedbackresponsecomment and instructorsessionresultsbundle to use responseentryanswerhtml instead of responsecommentattributes .
reformatted code in Container . java for consistency to improve readability and maintainability
added a new Java file ` TestEscapeThroughInvoke . java ` with a class for testing object escaping to demonstrate object equality checks
replaced direct stream reading with IOUtils . skip and IOUtils . read methods to improve code readability and maintainability by using Apache Commons IO
added interceptor handling for connection pool start and closure in ConnectionPool and JdbcInterceptor classes , and improved error logging in DataSourceProxy to enhance connection
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
improve performance of l1 blockcache . getcurrentsize ( )
removed unnecessary check for taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
added a new instance configuration change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve broker routing management
added CoinmateMetadataServiceRaw and CoinmateStatic interfaces , and implemented the remote initialization method in CoinmateExchange to retrieve exchange
improve error message when ` ` basedir - system - path ' ' be reference to the project base directory .
pdfbox - 4071 : avoid duplicate key when write a cosobject .
add ptransform . setdisplaydata ( list < itemspec < ? > > ) for setdisplaydata ( list < itemspec > )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) . check ( ) .
added security property for disabled cryptographic algorithms in ClientJSSEServerJSSE . java to enable secure certificate path validation for improved security
added checks for SUB _ COMMAND , SUB _ COMMAND _ GROUP , and SUB _ COMMAND _ GROUP types in OptionData . java to ensure proper
updated module - info . java files for mmm and ppp modules to improve module documentation and maintainability
added error handling for unknown server errors in IOSImplementation . java to improve robustness by throwing an IOException when the connection fails
set mFinished to null in LogEventChecker and set sCheckingEvents to true in LauncherInstrumentation . java to ensure proper cleanup of
refactor exception handling in FileSinkOperator and add closeWriters method in SortedDynPartitionOptimizer to improve error logging and ensure writer closure is properly
added diagnostic printing functionality in SchemaGenerator . java to improve debugging capabilities for Java files
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling for
updated test cases in DataSourceMonitorTests . java to improve test coverage for data source monitoring
added a check for loaded resource paths before scanning methods in ClasspathMethodScanner . java to improve performance by avoiding duplicate resource paths during scanning
updated the retrieval of the test instance to use ` orElse ( null ) ` and added error logging for service initialization failures to improve robustness by
added null check for response before processing in RoutingInBoundHandler . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added ` natIp ` field to ` EkeyConfiguration ` and improved logging details in ` EkeyUdpPacketReceiver ` to enhance
replaced ` ArrowBufAllocator ` with ` ArrowByteBufAllocator ` in multiple Java files to improve memory management and ensure compatibility with the latest
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP headers and body in HttpConnection . java and created a new test case in RFC2616BaseTest . java to ensure
refactor subscription handling in MultiTimeout . java to use AtomicReference for upstream and requested initial to improve clarity and maintainability of subscription management
improve performance of leveledmanifest . getcompactionCandidates ( ) by introduce compaction counter
added a test annotation to TestOrcTimezone1 . java to ensure test coverage for the TestOrcTimezone1 class
added a method to find matching metrics and updated the parseMetricAndTimerSystemProperties method to handle multiple substrings more effectively to improve the logic
added error handling for JSON processing in PinotSegmentRestletResource and simplified object node creation in TraceContext and TraceContextTest to improve robust
added null check for columnClass in JTable . java and created a new test class Test6888156 . java to ensure proper rendering
added a check for the existence of the SHELL directory before adding it to the command line arguments to ensure that SHELL and BUSY
updated the deleteWithoutSubscriptions method parameter from 10 to 1 in DatabaseCleaningService . java to correct the deletion of subscriptions from the feedDAO
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and updated related method signatures in JunitJupiterTest . java
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced deleteFilesAfterClose ( ) with transactionDisable ( ) and updated fileMmapEnableIfSupported ( ) method to improve file management
modified the iterator initialization logic in SortedIntList and added a new test class SortedIntListTest to ensure proper allocation of iterators and ensure proper
added a new JMXHelper instance to unregister the object name in DefaultRemoteProxy . java and simplified exception handling in JMXHelper . java to improve
updated the default writebuffer size from 4MB to 64MB in RocksDB configuration to improve memory usage for rocksdb operations
removed unnecessary parameters from the constructor call in Style . java to simplify the constructor by eliminating unnecessary parameters
updated the method call from ` addArgument ` to ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure that the message argument is
[ hotfix ] [ core ] remove json graph from samza runner
use mouseinput . button _ left instead of vector3f . zero in helloaudio
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
updated ` convertToMongoType ` methods across multiple classes to include ` TypeInformation < ? > ` for type information handling to enhance type safety and improve
simonstewart : move iscomplex check to geogebra ' s inputbox
simonstewart : fix typo in sendkeytoactivelement . tostring ( )
added methods to calculate a scaled BufferedImage instance based on a specified target width and height to enhance image scaling capabilities by allowing non - negative target sizes
removed duplicate extendArgumentCheck ( ) and extendWrapStore ( engine ) methods from DBMaker . java to streamline code by eliminating
added a call to ` updateShiftStateNow ( ) ` in ` AnySoftKeyboard . java ` to ensure the correct shift state is updated
removed the ` DETECTED _ ACTIVITY ` constant and its associated getter and setter methods from multiple classes to streamline the activity detection process
updated import statements to reflect the new package structure from ` extensions ` to ` protocol ` in multiple WebSocket - related classes to align with the new
removed the import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
added unused comments to multiple Java files to indicate unused index references to improve code clarity and maintainability
enhanced error message in WebSocketUpgradeHandler to include the status code to improve clarity of error reporting for invalid upgrade protocols
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
removed redundant conditional checks for plot ownership in Merge . java to streamline code for better readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline the code by elimin
updated imports from ` com . sun . speech . freetts ` to ` de . dfki . mary . unitselection .
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` to use ` PlanUtils . stripQuotes `
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of the rendering update process
added remote artifact repositories to the resolution group in DefaultPluginManager to improve dependency management for remote artifact repositories
camel - 1847 : camel - cxfrsproducerclientfactorycachetest should close the applicationcontext if it be null .
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failure
added a new File instance in ZipFile . java to initialize the file with a specified name to ensure that the file is created as a valid file
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that ` finallyBlock ( ) ` is deprecated
make channeluid nonnullbydefault a nonnull by default constructor .
added stack trace logging functionality to GenericDAOImpl and introduced StackTraceUtils for stack trace management to enhance debugging capabilities and improve stack trace management in the
added a test annotation to FormLoginIntegrationTests . java to enhance test coverage for form login functionality
refactor ` unparseList ` calls in ` FunDefBase ` , ` ParenthesesFunDef ` , and ` BasicQuery
refactor GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use cluster _ name and cluster _
renamed the variable ` supressWarnings ` to ` suppressWarnings ` and added a conditional check for Java version 11 to improve clarity and
updated JsonTreeReader to handle unexpected JSON elements and added corresponding test cases in JsonElementReaderTest to improve error handling for unexpected JSON elements and ensure
added an option to consume arguments after the internal runner in TestCommand . java and a corresponding test in ExternalTestRunnerIntegrationTest . java to
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to facilitate the
[ hotfix ] [ doc ] add support for flink planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database management during tests
updated progress display settings and added disposal logic in Progress . java and RSSReader . java to improve UI responsiveness and enhance user experience
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added utility methods for writing and closing POIDocument objects in IOUtils . java to ensure proper resource management and prevent potential resource leaks
replace print statements with newline characters in JavaBuild . java to improve readability and maintainability of the code
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for root and dots per point to
added support for custom LDAP authentication in the CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance
added support for default ports in NettyHttpServer and implemented port handling in DefaultRouteBuilder , DefaultRouter , and FilteredRouter classes to
updated SnmpTargetHandler to check if the handler is initialized before updating the ThingStatus to ensure proper status updates when the handler is initialized
add instructor permission check for submit session in the instructor edit page
added @ Incubating annotation with @ Deprecated annotation to AvailableSettings . java to indicate that the code is outdated since version 6
refactor path extraction logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve handling of jar
updated the format of " newFlushedSize " in DocumentsWriterPerThread . java to include documentstores to improve clarity of the
updated the output statement to use getUnlocalizedName ( ) instead of func _ 149739 _ a ( ) to improve clarity of
corrected the spelling of " stripWhitespaceX " and " stripWhitespaceY " in ImageProcessor . java to ensure consistency in whitespace handling
increased the number of locks from 1 millisecond to 1000 milliseconds in FeedRefreshUpdater . java to improve thread management by allowing more time for
added exactSearch parameter to MetadataIndexNode ' s deserializeFrom method and created a test for it in MeasurementChunkMetadataListMapIteratorTest to
[ hotfix ] [ table - planner - blink ] remove unused parameter in csvsaveservice
added import for Dimension and adjusted the preferred size of the pane in NavigationShareTab . java to improve UI responsiveness by adjusting the
replaced ` OffsetAttribute ` with ` KeywordAttribute ` and updated state management in ` BeiderMorseFilter ` to streamline attribute handling
refactor UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , and UpnpEntryQueue classes to improve code organization and
fix lenswarp burst collided at the end of the warp .
added unit tests for the ` toJson ` method in the ` JsonTest ` class to enhance test coverage for JSON serialization functionality
refactor MutableContextDataSupplier to improve code readability to enhance maintainability and facilitate future updates
changed exception handling from catching Exception to catching Throwable and added a warning log for loading logs to improve error handling and provide a clearer
updated KubernetesMockServer to use HTTPS instead of a hardcoded true to enhance security by allowing HTTPS connections
do n ' t create a dummy foreigncallnode in case of math . getvalue ( ) .
updated HTTP response handling in DefaultServlet and corresponding tests in DefaultServletTest to support additional HTTP methods and improve test accuracy
tika - 1357 -- add locale . us to LAT _ LONG _ FORMAT in tiffextractor
updated error handling in ShowFileRequestHandler to return NOT _ FOUND instead of BAD _ REQUEST and added a test for 404 exceptions in ShowFile
added a TryCatch class to handle exceptions in the ReflectorClassWriter to enhance exception handling capabilities for better error management
added a clamp method to the Vector and Vector2 classes to enable clamping values based on specified parameters
added support for handling requested scopes in ChainedTokenGranter to ensure correct access token creation based on the client ' s scope
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the code
added a logger to the EditorBottomSheetBehavior class and removed the setSaveFlags method call to streamline the code by eliminating unnecessary
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test clarity and maintainability by
hhh - 11919 - fix the nativesql scalar return type to be a basicdomaintype instead of a generic type
added a caching mechanism for font data retrieval in SunLayoutEngine to ensure thread - safe access to font data during rendering
use intarraylist instead of intbigarray for typedset . getinstancesize ( )
simonstewart : fix a couple of issue with the window handle in the webdriver .
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor instance handling in InjectorBuilderImpl to use a unified instanceMap for improved ordering to enhance code readability and maintainability by redu
updated method calls to use ` buildTarget . getBasePath ( ) ` instead of ` cell . getBuckConfigView ( ParserConfig . class
added a null check for the input before parsing an integer to avoid potential NullPointerException when the input is null
add keepalivemanager to the jabber connection and remove the packet listener from the parent provider to ensure proper connection management and prevent
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0. 67 to ensure consistent initialization of the LOAD _ FACTOR
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and updated related methods in ` Vectorizer ` and ` VectorPT
move j2se class from google - zxing to google - zxing . client . j2se
refactor conditional checks for vertical bar layout in OverviewState . java to improve readability and maintainability of the code
added the @ Entity annotation to BaseActivityEventEntity . java to enable entity management for better entity management
added tracing functionality to the NavBarSwipeInteractionHandler , TouchInteractionService , and TouchInteractionService classes to enhance traceability and improve
added a new file ` InvalidOptions . java ` that demonstrates usage of ` - h ` and ` - b ` options in
added a check to log an error if the number of supported displays differ from oldInfo to improve error handling by logging an error when the number
replaced the method ` getClientIdAndClientSecret ` with ` OAuth20Utils . getClientIdAndClientSecret ` in ` OAuth20UsernamePasswordAuthenticator
change the default value of the _ unwrapServletException variable from false to true in ErrorPageErrorHandler and AsyncContextTest classes to ensure that the
set status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut information during task updates
camel - 1847 : camel - seda - allow to specify a default queue size for the seda component .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and called it in Kernel . java to enable batch updates
added HttpClient configuration to ThirdEyeApplication to enable customizable HTTP client configuration in the application
added sorting functionality to JobInstanceFetchRequest and modified batch size retrieval in JpaJobPersistenceImpl to enhance sorting capabilities for job processing
updated the cancelCryptoFacilitiesOrder method to return null instead of throwing an exception to improve error handling and provide clearer feedback when canceling
ggb - 1357 hide keyboard on click in web
( chore ) camel - llvm : use native function for memcpy .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
douniaberrada : do n ' t show the tooltip if the tool be not block .
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added a timeStyle parameter to enhance date handling
updated playerSet ' s string formatting to include parentheses to improve readability and maintainability of the code
added a check for empty lists in List . java to ensure proper handling of empty lists
added error handling for InvocationTargetException in ParametricCallable . java to ensure proper exception handling for CommandException
updated the ` getLikeExpression ` method to include a boolean parameter for conditional expression filtering based on the ' isLike ' flag to enhance the
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to facilitate the
updated the ` runChild ` method to set the default locale in ` LuceneTestCase ` to ensure proper locale management during tests
refactor multiple Java SSL - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by reducing duplication
added unit test for route builder reference in camel - osgi
updated assertions in TestExecuteStreamCommand to check for " fffffffffffffffffff " instead of " substring ( 0 , 31 ) " to
refactor ` returnTypeSubstitutable ` method to use ` Warner . noWarnings ` instead of ` Warner . noWarnings ` to
added a throttle type enum and modified throttling logic in TestExecutor . java to enhance performance by allowing dynamic processing of characters and bytes based on throttling
simplified the assignment of color argb in ColorBleedEffect . java and added a conditional check in SpriteBatch . java
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the codebase
added a new interface ` Model ` in the ` org . apache . poi . hssf . model ` package and modified the ` Sheet
camel - 1748 : fix the test error of camel - cxf
added a configuration option to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder classes to enhance flexibility in managing entity
added null checks for shortcut information in multiple classes to prevent potential NullPointerExceptions and prevent potential NullPointerExceptions
updated TwoDimensionalCollectionValuedMap instantiation to accept a boolean parameter to enhance flexibility by allowing multiple instances of the same collection
updated exchange specifications from " btc - e " to " Wex " and changed the exchange name from " BTC - e " to "
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified buffer setting in EncodedTreeReaderFactory . java to
added null check for files in SegmentInfos and implemented a test for opening a reader after deletion in TestIndexReader to ensure robust error handling and
updated date parameter from " dt . lower - ord " to " dt . lower " in HSearchSortHelperImpl . java and modified F
refactor BigDecimal return logic to use a variable for percentValue to improve readability and maintainability of the code
replace ` limit < 1 ` with ` limit < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to
camel - 14836 : camel - route - configurer - add more logging to help diagnose failure .
[ java ] fix typo in getnextchunk method
refactor ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` to extend ` LuceneTestCase ` instead of
added a new ` StatefulMapper2 ` and modified ` OutputHandler ` to set the next input in ` OutputHandler . java ` to
removed null check for fill before setting bitmap shader shift in Area . java and Line . java to simplify code by eliminating unnecessary null check
added dbExists method and updated blockchain initialization in Blockchain . java and BlockchainTest . java to improve database existence checks and enhance test coverage
trim whitespace from the group value in SQLPlusSupport . java to ensure that the value is not empty before processing
added multiple calls to setAsync ( true ) in Http11AprProtocol . java to ensure the socket ' s asynchronous state is set correctly
dockpane : do n ' t set divider location if it ' s in the middle of the screen
add health check api to track broker status
set visibility of sharedAvatars to GONE in LocalFileListAdapter to ensure sharedAvatars are visible for better user experience
[ geogebra - 5341 ] fix typo in @ source and @ clientbundle . scss
replace ` ` > = ' ' with ` ` < = ' ' in multiple Java files to ensure correct input validation to prevent potential ArrayIndexOutOfBoundsException
added logging level check and execution logic in LogInterceptor . java to ensure proper execution of command execution based on log level
replaced CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability and ensure span
replaced the static parse method with getter and setter methods for Locale in QueryParser . java to improve code readability and maintainability by central
replaced ` Arrays . asList ` with ` Collections . singletonList ` in ` EntryCustomizationDialog . java ` and changed ` HashSet ` to
mondrian : fix classcastexception in mannerstest . testruleset ( )
added a new class ` OcspUnauthorized ` and modified ` OCSPRevocationChecker ` to handle UNAUTHORIZED case in ` OCSPResponse .
replaced a fixed sleep duration with a dynamic server state check to improve responsiveness and error handling during server operations
added methods to retrieve and set the open connection count in SourceCounter and updated related classes to implement a scheduled task for managing the number of active
make executionstrategy . execute ( ) public and add field definition to interface type .
refactor ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of an ` ImmutableSet < String > ` to
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by utilizing ` PrintWriter ` for better
[ hotfix ] [ test ] fix filesourcetextlinesitcase fail on window
added support for converting DataTable to JRuby in JRubyStepDefinition to ensure proper handling of DataTable instances in JRuby execution
updated visibility settings for author in SearchImagesRenderer and refactored API request handling in ApacheHttpClientMediaWikiApi to improve code clarity and
[ hotfix ] [ doc ] fix typo in readsentimentdataset
updated error handling in FormulaParser to provide clearer error messages to improve clarity of error reporting for formula parsing errors
added getter and setter methods for SocketAddress in WebSocketClient . java and modified visibility of WebSocketFuture in WebSocketClient . java to enhance flexibility
[ java ] fix checkstyle violation in consensusmoduleharness
refactor width and height setting logic in WidgetGroup to use a unified setSize method to improve code readability and maintainability by reducing unnecessary
replaced direct equality check with Boolean . valueOf for sessionFixationAttribute comparison to improve code readability and maintainability
refactor startOneChannelLA method to include edgeOption parameter for improved clarity and functionality to enhance code readability and maintainability by
added linear backoff functionality to the ChromeBinary class and integrated it into the ChromeDriver to improve performance and maintainability of the code
added support for URI template in WebClient response handling in TraceExchangeFilterFunction to enhance flexibility in handling HTTP requests in the WebClient
precompactedrow : use integer . min _ value to avoid nullpointerexception
updated return statements in ICC _ Profile and ColorConvertOp , and added a new test class InvalidRenderIntentTest to improve code clarity
add ` ` isnotsureallowed ' ' parameter to contribution question form ( # 1358 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] suppress findbugs warning in kafkaexactlyoncesink
added PGConnection support to the PooledConnectionImpl and created a test for it in BaseDataSourceTest to ensure proper handling of PGConnection methods
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for missing token encryption secret and changed log level from warn to trace in TokenAuthenticationHandler . java to improve
removed the @ Deprecated annotation from Hazelcast . java to clean up the code and improve maintainability
refactor command reporting and event handling in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction classes to improve
refactor NamedListCodec to improve iterator handling and enhance readability to enhance performance and maintainability of the code
fix npe in assignlostpartitions when there be no exception
added a schema inclusion rule to the ApiExample class to allow access to public fields in the API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct accuracy of the
[ vividolutions ] fix polygon ring creation for closed / closed polygon
added methods to retrieve base name and dimension count from the ConstantPool class to enhance flexibility in managing constant pool names
added setDebugEvaluationOutputForNextEval method to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable
refactor : disable testmodule . testjavaversion ( ) and refactoringtest . testvariabletest . testvariabl
do n ' t enable direct playback for live tv if it ' s disabled
added a return statement in DynamicStyleBar . java to ensure that the method returns early
added logging statements to set and reset a database dump state in Utils . java to enhance debugging capabilities for database dump operations
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
added a check for whether the type is a boolean before promoteing strings to objects to ensure compatibility with both object and boolean types
make llvmframenuller public and llvmobjectnuller and llvmaddressnuller public .
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
add unit test to verify transaction aware cache proxy
added a method to calculate bounding box based on vertex attributes in Mesh . java to enhance the mesh ' s bounding box calculation based on vertex attributes
added a new TargetHashFunction enum and updated the hashing method to use it to enhance flexibility by allowing users to specify the target hash function
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of configuration properties
added HighLightColor and HighLightAlpha settings to ListViewMultiChartActivity and modified BarChart to draw the highlight arrow in BarChart to
added a new entry for tmpPg in pgSgPathPlanMap to ensure proper mapping of path plans to the path plan map
[ java ] fix checkstyle violation in infinispan - infinispan
added file locking mechanism in MavenDependencyResolver and updated repository ID in MavenRoboSettingsTest to ensure proper resource management and improve test coverage for
updated the fragment shader in SpriteBatch . java to include a conditional declaration for GL _ ES to ensure compatibility with GL _ ES and improve
updated RSGroupInfo and related classes to use Set instead of SortedSet for servers and tables to improve code clarity and maintainability by using a
added a try - catch block to load the WebXmlConfiguration class and changed log level from warn to debug in TagLibConfiguration . java to
updated version handling in CustomAnalyzer and added a test for version aware filter in TestCustomAnalyzer to ensure compatibility with LUCENE _ 8
added a test for retrieving package archive information in ShadowPackageManagerTest . java and implemented a check in ShadowPackageManager . java to ensure that
replaced direct method invocation with MethodUtil . invoke and added package access checks in multiple Java files to enhance security by ensuring package access is validated
added progress tracking for task and task events in GradleBuildService and Main classes to improve progress tracking for task and task execution events
removed synchronized block from AndroidWebDriver . java to streamline synchronization by eliminating unnecessary synchronization
updated initialization fail timeout logic in HikariConfig and modified exception handling in HikariPool to improve clarity and ensure proper exception handling
removed the timeOut parameter from the getResult ( ) method and added an error method in the Net class to simplify the method signature and improve error
modified the ` isNative ` field to be transient and updated the entry addition method to use ` false ` instead of ` readBoolean ( )
updated error message formatting in CEntryPointCallStubMethod . java to improve readability to enhance clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler and fix typo
refactor TagSupport and related classes to improve code organization and clarity to enhance maintainability and readability of the code
updated debug log messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for authentication requests
[ flink - 2329 ] [ kafka ] [ table - planner - blink ] add changelog mode to kafka test ( #
added null check for registrant repository in UsersPanel . java to ensure robustness by avoiding potential NullPointerExceptions
added support for " . otf " and " . OTF " font names in SunFontManager to enhance font management capabilities by allowing additional
refactor type checking in AnnotationMatcher to use JavaType . Class . build for improved clarity to enhance code readability and maintainability
replace " OFF " with " SEVERE " in Grep . java to correct the spelling of " SEVERE "
added conditional checks before logging debug messages in FaultTolerantChunkProcessor . java to improve logging performance by avoiding unnecessary string concatenation
[ hotfix ] [ plugin ] fix checkstyle violation in surefireplugin
added a condition to check if the openFolder is not null and introduced a method to move to the default screen on the home intent to ensure
increased the maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate for better
replaced the method ` getOptions ( ) ` with a direct call to ` optionsMap . values ( ) ` in ` CommandLineParser . java
trim whitespace from the return value in MutableDatabaseProperty . java to ensure that the description is not empty before returning it
updated the filename for JDK8022548 in XOMParserTest . java to ensure the correct output file path is used for JDK80225
removed the process ID from the error log message in ProcessBesuNodeRunner . java to simplify the error logging by eliminating unnecessary
added method getLoadedMusic ( ) and getLoadedSound ( ) to MusicLoader and SoundLoader classes to provide access to loaded
updated import statements in OnBeanCondition . java to use java . util . Map instead of Spring ' s ClassUtils and ClassUtils to improve type safety
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enhance test coverage for screen recording functionality
set the lrPauseButton to false if it is not null in CPUFeature . java and MemoryFeature . java to ensure the lrPauseButton
refactor preference handling in Preferences . java to improve code readability and maintainability by consolidating preference management
do n ' t send ` ` available ' ' packet if it ' s already available
modified StringBuilder initialization in ObjectInputStream to handle UTF - length values to ensure proper initialization of StringBuilder based on input length
added a property value " spring . metrics . export . statsd . enabled : false " to WebEndpointAutoConfigurationIntegrationTests to disable metrics
refactor InterruptedException class to improve code readability to enhance maintainability and readability of the codebase
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection check logic to improve readability and maintainability to enhance code clarity and maintainability by reducing redundancy
modified the conversion logic in ArgumentArrayMessageMapper to check for both String and Map types before converting to String to ensure compatibility with both String and
refactor conditional checks in SolrServiceCommunityCollectionItemFilterPlugin and update collection handle in XmlWorkflowFactoryTest to improve code clarity and
replaced the addition of AuthenticatorActivity to the sExemptOfPasscodeActivites list with a flag setting to ensure that the AuthenticatorActivity
refactor : remove @ deprecate from patternparameterconfigurator
changed the return type of the ` beginDraggingWidget ` method from void to boolean and added a null check for the image ' s drawable
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test for LUCENE - 4488
added a null check for the root variable in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
add the ability to update the confusion matrix in the sentence and maxenttagger
improve thread handling of jmeterthread . ignore ( )
added unit tests for Bluetooth connection state handling in ShadowBluetoothHeadsetTest . java and implemented connection state checks in ShadowBluetoothHead
corrected a typo in the test method name from " # autowire " to " # autowired " to improve clarity
added " clone " and " finalize " methods to the objectMethods set and introduced a constant for the finalization method to enhance flexibility in
added null checks for counters in IntegrationTestBigLinkedList . java to ensure that generator and write verification cannot be performed for insufficient YARN
add a reply forFERRING _ OBJECTS in DebuggerConnection and modify instance info handling in JDWP to improve handling of instance information
updated the parameter name in the setRegisteredServiceFilter method from ' service ' to ' serviceId ' and added a matching check for SamlRegistered
added a null check for the activity before running the UI thread to avoid potential NullPointerExceptions when accessing the activity
[ hotfix ] fix typo in logger variable name
added ` _ stringType ` and ` getStringType ( ) ` methods to ` DatabaseAdaptor ` and ` JDBCSessionDataStore ` classes , and
updated test cases from " language : english " to " suggested _ category " in UIMAUpdateRequestProcessorTest . java to align test
refactor thread name handling by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code readability to enhance maintainability and facilitate future updates
[ dmn ] fix npe in decisiontableimpl # evaluateall when dmn be negative
set default to true for splash progress on macos
added tooltip text to the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing a user interface
replaced calls to ` getTypes ( ) . add ( e ) ` and ` add ( i ) ` with ` addType ( e ) `
add text and description parameter to reload / restart / reload action
[ geos - 5357 ] use stringtemplate instead of simple string for column and fill cell
changed the return type of BRIGHTNESS _ FACTOR from int to double in BindingConstants . java to ensure accurate calculation of the B
fix bug in sscmhistoryparser where the action pattern do n ' t match
added a ` isAdmin ` parameter to the ` createUser ` method and implemented the ` listUsers ` method in ` HomekitAuthInfoImpl ` to
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor , and created a new test class
updated logging statements in DynatraceExporterV2 and DynatraceExporterV2Test to use placeholder syntax to improve readability
updated method parameters in Context and Response classes for consistency and clarity to improve code readability and maintainability
added a method to set capabilitiesFromSpongeBuilder with a null check for the capabilities object to ensure that the capabilities object is properly deserialized and
[ hotfix ] [ test ] fix checkstyle violation in lifecycleutilstest
added validation for CreateSmartContract and modified GetContractServlet and TriggerSmartContractServlet to enhance contract creation logic to ensure only valid contract types are
added package - info . java files for various components in the com . ibm . dtfj package to provide package - info . java files
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for thread safety to improve thread safety and ensure
added a check to ignore duplicates in JavadocTool . java and modified the argument handling in T7091528 . java to improve file processing
updated the default value of the STRIP _ IPV6 property from " true " to " false " and adjusted substring extraction logic to ensure
added support for adding new user parameters in the LoginServerTokenEndpointFilter to enhance user authentication by allowing users to be added to the login process
added a language check for the C _ KEY in the LanguageFactory and updated related conditions in the CPPParserTokenManager to support additional language
replaced instances of ` MoreFutures ` with ` MoreExecutors . newSingleThreadExecutor ( ) ` in multiple files to improve thread management
added cache control and expiration headers in FormAuthenticator . java and corresponding tests in ConstraintTest . java to ensure proper handling of cache control and validation
improve error logging to include the exception message in the error message for better debugging
updated HSSFTests and TestEmptyDocument to use TestAreaReference , TestCellReference , TestRKUtil , and TestSheetReferences
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for output before retrieving its absolute path in TestCommand . java to avoid potential NullPointerException when accessing the output file
added access controller priority settings to Java2DRenderer to ensure proper access control during rendering
added error handling for arrayindexoutofboundsexception in TestTriggerCoverage . java to ensure that the build fails on non - Windows systems
changed the ` mbean ` variable to be ` final static ` and modified the main method signature to throw an exception and refactored CPU time
updated condition to check for comments in TabsAndIndentsVisitor . java to ensure comments are only processed if they are empty before proceeding
updated assertions in TestTriggerIntegration to compare total rate values instead of hardcoded values to improve test reliability and ensure accurate validation of total rate
replaced ` equals ` with ` equalsIgnoreCase ` in multiple change log filtering classes to improve string comparison to be case - insensitive
added a method ` getString ( String key , String defaultValue ) ` to the ` ShadowBundle ` class to retrieve a string value from the map
updated date and time formatting logic in TweetActivity . java to ensure consistent date and time formatting based on locale settings
http : / / issues . apache . org / jira / browse / amq - 4890 - do n ' t try to
refactor focus request logic in DetailFragment to improve code readability and maintainability by encapsulating focus request logic
replace hardcoded classpath string with a variable for canonical path to improve code readability and maintainability by reducing unnecessary string concatenation
make sure coordmatrix . solve ( ) do n ' t allocate a new array before call solve ( )
added import statement for org . springframework . integration . core . Message in GenericMessage . java to enable the use of Spring ' s Message
refactor SQL query construction in PostgresConnector and add a new join method in TaskAttempt to improve code readability and maintainability by central
updated file filter handling in AquaFileChooserUI . java to improve filter validation to ensure correct selection of files based on the selected filter
fix potential deadlock in p2ptransportmanager
updated the return statement in ArrayPtg . java and added a test for the toFormulaString method in TestArrayPtg . java to
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability
refactor Java2TypeScriptTranslator to handle nested anonymous classes and improve variable handling to enhance code clarity and ensure correct handling of nested anonymous
added support for PostgreSQL auto - increment column creation in AddAutoIncrementChange . java to ensure that the PostgreSQL does not support auto - increment columns
updated byte reading logic in DataInput . java to handle negative values and improved readUtf8 _ slow method to enhance readability and ensure
added assertions for " VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " dimensions in ImageParserTest . java to ensure proper handling of
updated the call to parent . getParent ( ) in mmm Component . java and ppp Component . java to ensure proper initialization of the parent
reformatted code for consistency and readability across multiple Java files to improve code readability and maintainability
do n ' t call engine _ finish when engine _ init be call
added a new ` start ` variable and modified the ` fireIterEvents ` method in multiple classes to enhance event firing functionality and improve clarity
added release calls for HttpContent and fileUpload in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent
added deleteLogs ( ) method to TestRecovery . java to ensure logs are properly deleted during recovery
added a conditional check for URLs containing " twitter : / / " in the BrowserActivity to enhance user experience by allowing users to launch a new
[ hotfix ] [ test ] await host status in deploymentgrouptest
changed the logResult parameter from false to true in VisibilityController . java to indicate that the " Listing labels allowed " message is only logged
updated the log level from 0 to 25 for badClients . ribbon . MaxAutoRetries in RestTemplateRetryTests . java to increase
removed System . out . println statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to stream
added support for the " fraction " resource type in ResourceLoader and related classes to enhance resource loading capabilities for different resource types
removed file confirmWrite check from BasicFrame . java to streamline the code by eliminating unnecessary file validation
added assertions to check for null values for groupId and artifactId in findNewerDependencyVersion method to ensure that the dependency version is retrieved from the
hbase - 2249 throw quotaexceededexception instead of donotretryioexception in namespacestatemanager
refactor multiple Java classes related to token filtering and attribute handling to improve code organization and maintainability
refactor TestFuzzPreLoop class for improved performance to enhance performance and maintainability of the code
added a check to ensure f0 is non - negative in HTSVocoder . java to ensure proper handling of negative values and prevent potential
updated logging messages in SchemaRetriever and added null checks for primary key and foreign key columns in TableRetriever to improve logging clarity and prevent potential
improve performance of request . clearencoders ( ) and request . getencoding ( ) .
added functionality to check for empty page preferences in Lawnchair to allow users to disable empty page scenarios in the application
added a warning log message about the deprecation of the cucumber - needle to indicate that the cucumber - needle has been deprecated
replaced TestActivityWithAnotherTheme with Resources . Theme and updated theme handling in ShadowThemeTest , ShadowArscAssetManager , and
updated error messages in VerifyFast . java to use Arrays . toString ( ) for better readability to improve clarity of error messages for better
remove @ dbmigration ( system _ versioning _ alter _ history = 1 )
added support for retrieving and setting prototype properties in ScriptObject and modified access modifiers for GETPROTO and SETPROTOCHECK methods to enhance functionality and improve
added a random parameter to the shuffle method in TestFilterDirectoryReader to ensure the randomness of the readers collection
updated display name assignment logic to differentiate between remote clarification and known user names to ensure correct display name based on the user ' s
updated path formatting in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank to ensure that the path is not empty to avoid potential errors
reformatted closing braces in multiple Java files to improve code readability and maintainability
updated the condition to check for total backup count instead of backup count in AbstractCacheService . java to ensure correct retrieval of cache name based on
updated condition to check if pageNumber is not equal to ve . pageNumber to ensure correct comparison logic for page number validation
added a condition to check if the focused widget is equal to the current instance in UIDropdown . java to ensure that the highlighting logic
reformatted method signatures in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use a new method for retrieving AppleCxxPlatforms to improve code
added a new test case to verify the functionality of the ` show ololoed ` function in ` ClickHouseStatementTest . java `
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and updated its usage in ` AbstractHTTP2
refactor EnglishPTBTreebankCorrector class to improve code organization to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test logging behavior with Java AWT access and security policies
added a ` data ` map and a method to retrieve it in ` PathSharingContext ` , modified ` ActionDirectory ` , ` Scripted
use castexact instead of unsafefield for cast to object [ ] .
added support for " NEXT VALUE FOR " in the NextValExpression class and updated related methods to enhance flexibility in SQL insert operations by allowing
improve error message when access of resource bundle be not pre - cached
updated the handling of pending writes in BoundedLocalCache and added a test for clearing pending writes in BoundedLocalCacheTest to ensure that
added a new parameter for Leverage _ Level in QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class for property binding validation to ensure proper initialization of bean properties and
replaced the ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwj
added null check for buttonsAwatingRelease before setting it to null to ensure proper resource management and prevent potential null pointer exceptions
added a method to compute the preferred height based on wrap width and updated wrapWidth initialization in LineCell and StyledTextAreaSkin to
corrected formatting of error message in XSLTErrorResources _ it . java to enhance code readability and maintain consistency
changed the type of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
refactor string concatenation in multiple text - related classes to use String . format for better readability to improve code clarity and maintainability by
replaced the method ` getNamespaceURI ` with ` getNamespace ` in ` StaxXmlPullParser . java ` to simplify the code by directly
added a configuration option for nested joins in multiple test classes to ensure proper handling of nested joins during tests
updated account type check from ACCOUNT _ TYPE _ NORMAL to ACCOUNT _ TYPE _ ADMIN and changed the error message to reflect the root admin only to
added JavacFileManager caching to SourceFileManager and modified CompletionTaskProcesor constructor to accept a cursor parameter to improve file management
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to enable
replaced JUnit ' s Assert with Hamcrest ' s assertThat in KuduIOIT . java and XmlIOT
fix nullness warning in text and metadata renderer
updated offsetMemSize calculation to use Long . BYTES instead of Long . SIZE and added a new test for symbol file mapping in LineTcpConnection
removed debug print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and its associated methods from ` jooby . internal ` to streamline the code by eliminating
refactor ThreadlessExecutor methods to improve clarity and encapsulation to enhance maintainability and readability of the code
refactor DateTimeFormatter and TestDateTimeParsing to improve error handling and add new test cases for date formatting to enhance error reporting and ensure correct parsing behavior
updated variable names and method names from CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and from CHUNK _ LENGTH to CHUNK _ LENGTH _ KB to
added a new case WILDCARD in Types . java and created a new file T7034495 . java with generic interfaces in T7
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
refactor conditional statements in TransclusionDecideRule . java to improve readability and maintainability of the code
[ micronaut ] remove versionutils . getmicronautversion ( ) .
added unit tests for the ` Area3DPtg ` class in ` HSSFEvaluationWorkbook ` to verify the functionality of the `
updated MindIconFactory to conditionally display the description if the name starts with a slash to ensure that the icon description is correctly formatted for
modified the ` onHomeIntent ` method to accept an additional parameter ` internalStateHandled ` to enhance functionality by allowing specific state handling for home
refactor dependency tree handling in CxxBuckConfig . java to use a local variable to improve code readability and maintainability by redu
added ` showDetails ` method to multiple activity classes and modified ` FileDisplayActivity ` and ` FileDetailFragment ` to accept an ` active
updated method names from " $ " to " apply " across multiple files to improve clarity and consistency in method naming conventions
add a randomize to the min symbol size and update the sizes assertions in the MinimalEncoder and HighLevelEncodeTestCase classes to improve
updated formatting in SourceBuilder . java to include additional header and since fields to enhance clarity and consistency in formatting
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure proper handling of data
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the code by eliminating unnecessary method
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections to improve type handling and ensure correct removal of elements in collections
[ java ] remove unused method from defaults3crtasynchttpclient
updated corrupted stream error messages in ParserTest . java to improve clarity and accuracy of error messages
improve test failure message in hazelcasttestsupport
make sure we do n ' t create a ifnode when the condition be true or false .
pdfbox - 4892 : do n ' t create a pen image if it ' s too small
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method and updated related calls in YoBitMarketDataService and YoBitMarketData
rename ` GotWrongOOMEException ` to ` HeapOOMEException ` in ` StressHierarchyBaseClass . java ` and update related
added StreamReadConstraints to ensure maxStringLength is set to Integer . MAX _ VALUE in StandardDataFlow to ensure proper handling of maximum string
updated engine retrieval to use an empty string instead of a hardcoded value to improve robustness by avoiding potential null pointer exceptions
renamed ` FullIterator ` to ` WheelIterator ` and updated import statements in ` TimerWheelTest . java ` to improve code
added error handling to the format method in BugInstance . java to improve robustness by providing a clearer error message for missing bug patterns
increase timeout in localchunkprovidertest from 3 second to 10 second
changed the visibility of the uncomplete check lists menu item from true to false to disable the uncomplete check lists functionality
refactor DefaultResultSetHandler to resolve discriminated result maps and introduce a new Contract class with associated tests to enhance code clarity and
added null checks for defaultHome and updated receiver unregistration logic in OverviewComponentObserver . java to ensure proper handling of null defaultHome and
remove VertxGen annotation from PumpImpl . java to streamline code by eliminating unused imports
removed unnecessary casting of mContainerActivity in FileDetailFragment and OCFileListFragment to simplify code by eliminating unnecessary type casting
trim leading and trailing spaces from tokens in ConfigAttributeEditor . java and add a test for it in ConfigAttributeEditorTests . java to ensure
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux classes to improve code organization and maintainability
[ svm ] make singlemodulereference public and add getunnamedmodule ( ) to target _ java _ lang _ classloader
added conditional logic to set the relKind to " TABLE " based on the presence of " pg _ " in DatabaseMetaData . java to ensure
doc : remove unused proto annotation ( # 1193 )
updated the value of RQST field from ( short ) - 1 to ( short ) 1 in ThriftHiveMetastore . java
added a new module - info . java file that defines exports and requires for the core module to facilitate the modularization of
added logic to manage flush state and fill state in SslConnection . java to ensure proper handling of flushing state and fill interception based on the
log4j2 - 1344 log4j2 - > log4j2 - > log4j2 - > log4
7029048 : test / tools / launcher / executionenvironment . java fail on window due to server vm not find
refactor ExecutableFindOperation , MongoOperations , ReactiveMongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
updated the default value of " org . postgresql . ssl . LibPQFactory " from null to " org . postgresql . ssl .
disable the test in TestInterProcessSemaphoreEdges . java to disable the test that is currently failing
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names and improve code clarity
added a new file ` OSvTerminal . java ` and integrated OSV flavor handling in ` TerminalFactory . java ` to facilit
added additional extension checks for class names in ClassType . java to ensure compatibility with multiple file types in the application
replaced HashMap with TreeMap for sorted lists in DrillTestWrapper . java to improve performance and maintain consistency in data structure handling
updated the loop condition to include an additional check for the size of names and values in XPathEntityProcessor . java to ensure that the loop does
refactor WebSocketPolicy class for improved performance to enhance performance and maintainability of WebSocket operations
updated permission methods in ShadowTelephonyManager , ShadowWifiManager , TelephonyManagerTest , and WifiManagerTest to use
added parameters to the ` resolveMessage ` method in ` StandardMessageResolver ` for improved message resolution handling to enhance flexibility in message resolution
updated Class instantiation to use wildcard generics for TraceMethodVisitor , TraceClassVisitor , and CheckClassAdapter to improve type safety and flexibility in
added new classes LoggingAuditService and UaaAuditService for logging user authentication success and failure to facilitate logging of user authentication failures
added nullability annotations and improved temperature handling in TadoZoneStateAdapter . java and AirConditioningZoneSettingsBuilder . java to
resolved - issue batch - 148 : @ beandefinitioninject do n ' t work with abstract class .
camel - 1748 : camel - http - add support for proxyhost and proxyport system property in camel - http
updated the MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to reflect the latest
added a call to ` jdk . internal . util . StaticProperty . jdkSerialFilter ( ) ` in ` System . java `
add more information about the pool size of the jvm object allocation .
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in ` StaggeredWorkspaceAnim ` and `
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to use ` ConfigUtils . applyConfigWithEnvVariables ` to improve configuration
improve error message in refvalidator and validation report
replaced the usage of ` System . arraycopy ` with ` closestProfile . inlineQsb ` and added new constants for inline QSBs
updated method signatures in SortedArrayStringMapTest . java to include exception handling and URL decoding to improve error handling and ensure proper URL encoding for
updated @ Given annotations to accept wildcard characters instead of hardcoded values to improve flexibility and readability of parameter validation
added null check for the retinaProp variable and adjusted fillRect calls in PGraphicsJava2D to avoid potential NullPointerExceptions when image is
replaced hardcoded timeout values with a variable ` timeoutMs ` to improve readability and maintainability of the code
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the URL for the Docker image in Environments . java to ensure that the Docker image URL is correctly configured for the
[ hotfix ] [ test ] fix system . gc ( ) in knowledgeagenttest
refactor multiple classes including AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock to improve code organization and maintainability
replaced the createHardLink method with a copyFile method for copying files to improve code readability and maintainability by encapsulating file copying logic
rename method ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ pytorch ] add device check in functioninfo and lstm
added a conditional check for XML type before visiting elements in Autodetect . java to avoid potential ClassCastException when processing XML elements
updated ` NotesHelperTest ` , ` GeocodeHelperTest ` , and ` ReminderHelper ` classes to use ` AndroidJUnit4
added new GasLimitRule , DifficultyRule , and ParentGasLimitRule to the CommonConfig class to enhance rule management for frontier configurations
changed the visibility of ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java ` and updated
rename the " autocommit " variable to " runInTransaction " in ChangeSet . java and XMLChangeLogHandler . java to improve cl
[ flink - 2329 ] [ stream ] fix race condition in tripleserverstream . close ( )
[ hotfix ] [ doc ] add ` { . Site . BaseURL } ` to the documentation for ` task _ failure _ recovery `
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality to ensure that
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor Launchable . java to use ContextLayer for better resource management and logging to enhance code readability and maintainability by ensuring context layers
refactor StreamExecDeduplicate class to improve code readability and maintainability
added a warning log statement in KafkaSubscriber . java to indicate when a message is sent to a topic to improve error handling by providing a warning
added PersistentPropertyAccessorFactory and isImmutable method implementation in SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable the use of PersistentProperty
make geocidys1d and geocidSegment3d return true for setcoord ( point , point )
added scrolling functionality to AskGestureEventsListener for better event management to enhance user experience by providing more detailed scrolling behavior based on swipe velocity and
improve the comparison logic in the NGramEstimator class to ensure that the comparison function returns the correct result of the comparison based on
updated import statements to use io . cucumber . core . runtime . ScenarioScoped instead of cucumber . runtime . Scenario
updated method calls in StatsLogCompatManager to retrieve folder icon information to improve clarity and maintainability of the code
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file ` TestSkeletonPredicates . java ` to test the functionality of the ` TestSkeletonPredicates ` class to verify the functionality of
refactor SelectionHighlighter to improve equality and hashCode methods to enhance code readability and maintainability
added a new file ` StringResultConverter . java ` that implements ` FromNativeConverter < String , Pointer > ` to handle string and Pointer
replaced the usage of ` DisabledIfSystemProperty ` with ` @ Disabled ` in multiple test files to ensure tests run reliably on the
updated condition in JansiWinSysTerminal from checking if console is not zero to checking if console is not equal to zero to ensure proper
added null checks for the buffer object before setting it in the setInBuffer method to prevent potential NullPointerExceptions when the buffer is null
updated the data path assertion in TestSolrDiscoveryProperties . java to use File . separator instead of a hardcoded path to ensure correct file path
updated operating system checks and added platform version handling in AutoUpdaterServerProperties . java to ensure compatibility with different operating systems and ensure compatibility with newer
replaced ` lockFile ` with ` lockName ` in the ` Lock ` class and updated related references to improve clarity and consistency in
updated appIcon reference from " android . widget . TextView " to " apps _ view " and adjusted the visible bounds calculation to improve clarity
updated references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java
updated SQL query to order by STEP _ EXECUTION _ ID in JdbcStepExecutionDao . java to ensure accurate retrieval of step execution results by
updated button handling logic in LwjglInput . java to ignore unknown buttons to improve robustness by preventing unknown buttons
added tests for approve , reject , and reason in TaskRestRepositoriesIT . java to ensure that the test correctly verifies the correct behavior of
replaced instance variables of logger with static final logger constants in multiple response builder classes to improve code readability and maintainability by centralizing logger
simplified the expiration time parsing in SsoAccessTokenProvider and updated method visibility in SsoAccessTokenProviderTest to improve code readability and
[ geos - 8287 ] disable test that fail on window
[ oracle ] fix compilation error in alarm suppression test
reformatted code for improved readability to enhance maintainability and maintainability of the code
added a null check for the MediaDatabase connection before executing the " ANALYZE SAMPLE _ SIZE 0 " statement to avoid potential NullPointerException when accessing
replaced the use of ` metricsContext ` with a call to ` super . initializeMetrics ` in ` SuggestComponent . java ` to
refactor file and folder handling logic in OCFileListFragment . java to improve readability and maintainability of the code
change default hash known hosts from " yes " to " no " in ScpServerTestSupport and modify loadKeys return type in FileKeyPair
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` for testing the ` MyThreadFactory ` functionality to ensure that the ` MyThreadFactory `
refactor lock period retrieval to use a dedicated method to improve code readability and maintainability by centralizing lock period logic
added a new TicketModel instance to EditTicketPage to enhance ticket management functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps
updated constructors in various assertion classes to include a class parameter for better type safety to ensure proper type safety and prevent potential NullPointerExceptions
updated menu item constants and added menu quote functionality in TweetActivity to enhance user experience by allowing users to quote tweets
fix deadlock in jmeterthread . start ( )
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and introduce a new method ` shouldUseBypass ` to
added a conditional check for failure before offering failures in ServerHTTP2StreamEndPoint . java to ensure failure handling only occurs when the result is
updated error message from " Stiller Modus " to " Silent - Modus " in German and French XSLT resource files to
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during cleanup operations
replaced ` Observer ` with ` Subscriber ` in the ` MockRestAdapter ` and ` RestAdapterTest ` classes to improve subscription handling and
reformatted the conditional block for creating the components . yml file to improve code readability and maintainability
added a new configuration option for using unique column names in Hive and updated test assertions to use it to enhance the flexibility of column names in
mary : remove the ` ` bfirsttime ' ' variable from the ` ` cbdefaultvoice ' ' and move the ` ` b
added session validity check in Session . java and improved test cases in SessionHandlerTest . java to enhance error handling for invalid sessions and ensure
hhh - 1187 - remove exceptionhelper . java which be no longer need .
change key pair generation from 256 to 255 in JceX25519Domain . java to accommodate more secure cryptographic algorithms
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene 4.
[ hotfix ] [ runtime ] add debug log for empty checkpointrange header
added support for RSA / ECB / OAEPPadding algorithms and improved exception handling in the algorithm creation process to enhance security by ensuring
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to reflect the correct platform architecture
updated exception handling to include SecurityException in DebugSourcesResolver . java to improve error handling and provide clearer logging for security exceptions
simplified the conditional check for UNIX OS in AbstractTest . java to improve code readability and maintainability
updated error handling and file management in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest classes to improve error reporting and ensure correct
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes and added memory freeing functionality to improve memory management and
set USE _ PIPELINE _ DOWNLOADER to true in FastSyncChainDownloader . java to enable streaming functionality by default
updated DST _ OFFSET setting in SimpleDateFormat and added a new Bug7130335 class for testing date formatting to ensure correct timezone handling and
replaced direct access to ` mRollo . mState . iconCount ` with a local variable ` iconCount ` and refactored
fix npe in listvirtualmachines api - do n ' t return router when vms do n ' t exist
refactor StringBuffer class methods for improved performance to enhance performance and maintainability of the code
added uid assignment to rule in RuleResource . java to ensure the rule ' s uid is set correctly
added a null check for the listener before unsubscribing to prevent potential NullPointerException when the listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the JSON string representation logic to
make access _ table public so we can access it
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to reflect the absence of resources to improve clarity of error messages related to resource
improve error handling by throw ioexceptionsupport . create ( ) in xmpptransport
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added ` effectiveClusterVersion ` and ` isUpgradeSuspended ` parameters to the ` AmbariManagementControllerImpl ` and ` Amb
updated copyright year in FindsByCssSelector . java from 2007 - 2009 Google Inc . java to reflect the latest copyright date and
removed the declaration of wfields in Resolver . java to simplify the code by eliminating unnecessary variable declaration
updated OAuthProperties to set encryption and signing key sizes to ensure consistent encryption and signing settings for improved security
hbase - 1348 fix the bug of htabledescriptor . getcolumnfamilies ( ) . length ( ) . length ( )
refactor the addAliasCheck method to use lambda expressions for improved readability to enhance code clarity and maintainability by using lambda expressions
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info classes to improve code organization and maintainability
[ java ] add ` ` reset ' ' method to cluster so that it can be use in the service agent .
updated the increment logic for the currentChunkID in SequenceFile . Writer to ensure proper handling of the current chunk ID during writing
added a new file AbstractJobExecutor . java that implements the AbstractJobExecutor interface to facilitate the execution of a batch job using
refactor replay handling in RecoveryStrategy . java to assign replayFuture to improve clarity and maintainability of the replay process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs based on discovery settings to ensure that service IDs are returned only when the discovery is disabled
replaced ` Float . floatToIntBits ( float . random ( ) ) ` with ` SecureRandom ( ) . nextInt ( ) ` for
add option to verify runtime compilation framestates during bytecode parsing
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline code and improve readability by elimin
added abstract method answer handling to the answer method in CallsRealMethods . java and created tests in CreatingMocksWithConstructorTest . java to
refactor ` checkPackageAccess ` method to accept ` Class ` instead of ` String fullName ` and improve access control checks to enhance security by
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to improve test setup and ensure proper
replaced instances of ` dtm ` with ` model ` in ` ContributionListPanel . java ` to improve code clarity and maintainability
added support for the REQUEST _ HAS _ TIS request in QuickstepTestInformationHandler and TestInformationHandler , and updated related conditions in Launch
refactored the connection dialog handling in ConnectAction . java to improve code readability and maintainability by using Mutex . EVENT . writeAccess
updated method signatures and variable types from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to enhance type safety and improve
added new classes ` ArrayHelper ` , ` Comparables ` , ` Enums ` , ` NativeRegExp ` , and ` Objects ` to
added support for HOME and END operations in the Less class to enhance functionality for handling home and end lines in the code
removed synchronization around the assignment of connected plots to simplify the code by eliminating unnecessary synchronization
refactor intent creation and chooser logic in Utilities . java to streamline package installation checks and improve code readability
changed the access modifier of the Roster constructor from public to package - private to allow access to the Roster class from other packages
added a new extension for basic constraints in TestUtils . java to enable proper handling of basic constraints in certificate generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address issue with incorrect transform offsets
replaced the use of Integer . MAX _ VALUE with a direct assignment of precisionStep in TrieDateField and TrieField classes to simplify the
removed the ` TaskbarStateHandler ` class and its associated getter and setter methods from ` BaseQuickstepLauncher ` to streamline the code
added a new file ArrayLength . java to test field access for array types to ensure proper handling of array field access failures
wait for process to be destroy before run hzstartit
replaced the ` @ Singleton ` annotation with ` @ ApplicationScoped ` and added a ` init ` method in ` ApplicationSettingsService ` to
change assertion to check for non - negative values and update newValue assignment logic to ensure correct behavior when newValue is greater than zero
updated threadNameField to use " Ljava / lang / String ; " instead of " [ C " to ensure compatibility with Java ' s
updated the default RAND _ SEED value from currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hnsw
added support for custom stroke object and font in PGraphicsJava2D to enhance rendering flexibility by allowing customizable stroke objects
[ calcite - 5352 ] fix the bug of ` ` window ' ' and ` ` group by with dynamic star ' ' in
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to provide functionality for finding interesting children in
added import for Messages and set the HTTP status code to a warning icon to enhance user experience by providing clearer feedback on the status of the
update mouseevent . getmodifiers ( ) to use nativeevent . getmodifiersex ( ) .
[ gr - 3649 ] fix cycle in amd64countleadingZerosnode and amd64countTrailingZerosnode ( # 6
camel - 8012 : fix npe in entityparser when content - transfer - encoding be null
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a ` clearLogButton ` and a ` clearLog ` method to ` ErrorConsoleController ` and updated ` ErrorConsoleViewModel `
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated the ` getCaptions ` method to return a ` Set < TranslatableCaption > ` instead of a ` Map < TranslatableCaption
updated connection pooling logic and modified execution count in multiple test classes to improve connection management and ensure proper resource management
[ java ] add opera blink capability to defaultdriversessions
replaced specific exception handling in ` ManageJournalsPanel . java ` with a more general ` Exception ` catch block to improve error handling
added new product names for Mini White to Warm , Beam , Color , and White to Warm in LifxProduct . java to
added asynchronous request handling for collection replica creation in OverseerCollectionProcessor and updated related test cases to enhance functionality and ensure correct handling of collection
refactor ` PGSQL _ PK _ BYTES _ LIMIT ` and ` PGSQL _ PK _ BYTES _ LIMIT ` to ` PGSQL _
updated LogPanel and SummaryPage classes to use repository model ' s HEAD reference instead of null to ensure proper handling of repository reference IDs and improve
changed the transformation of parentTail from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure the parentTail
added a method ` browserDestroy ` to ` AndroidImplementation ` and modified the ` destroy ` method in ` AndroidImplementation ` to ensure the browser
added a call to waitForActiveCollection with a value of 1 in AutoScalingHandlerTest . java to ensure that the readApiTestViolations method
refactor loop structure in ScreenTerminal . java and remove unused imports in Tmux . java to improve code readability and maintainability by
updated the condition to check for controller states in SoftResetAction . java to ensure proper handling of controller states in soft reset functionality
disable on - disc stream cache for texture pack reloading .
added a conditional statement to set the parentFolder in Request . java and RequestV2 . java to ensure proper resource retrieval based on the media
cloudstack - 3892 : rename ispersistent to ispersistent in networkofferingvo . java
refactor FileOutputStream initialization to use a custom close method to ensure proper resource management and avoid potential resource leaks
added error handling for HTTP 403 responses in StandardGitHubRepository to improve robustness by providing more informative error messages
log4j2 - 1344 add getoriginal ( ) method to messagefactory2adapter to make it easy to get the original message
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern from " ( 0 - 9 ] { 1 , 2 } ) " to " ( 0 - 9 ] { 1 , 3
updated ToolTipManager ' s initial and dismiss delay settings in ExtractionModelFrame . java to improve user interface responsiveness by allowing dynamic
refactor ProjectCommand to utilize a passedInTargetsSet variable for better clarity to improve code readability and maintainability by reducing
added timezone assignment and assertion for format2445 in TimeTest . java to ensure correct formatting of time values in UTC
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
replace jssefactory with endpoint . gethandler ( ) . getsslsupport ( )
updated accuracy display from altitude to accuracy in GpsLoggingService . java to improve accuracy display accuracy information for better user experience
added a check for futures enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to ensure future exchange metadata is only
fix admin account management bug ( # 1748 )
added connector . setAcceptQueueSize ( maxWorkerThreads ) to ThriftHttpCLIService . java to ensure the correct queue size is used for
replaced direct retrieval of the class name with a static final variable for the watchServiceEnabled to improve code readability and maintainability by central
http : / / issues . apache . org / jira / browse / amq - 4892 - fix jmsfactory to handle ssl
replaced ` parseError ( e ) ` with ` validationError ( e ) ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration in GCInspector . java to ensure that the duration calculation may be zero for a really fast collection to ensure that
fix a bug in nodewithdoc when linecomment be set to an optional .
replaced the ` getUnsafe ` method with a ` readReservedMemory ` method in ` ReserveMemory . java ` and modified the implementation
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing and
hbase - 2748 hbaseadmin . getdescription ( ) should use getdescription ( ) instead of getoperationtype ( ) to
camel - 1357 : camel - cxf - allow to configure the service class for the cxf component .
refactor YamlChangeLogSerializer to use a container map for databaseChangeLog serialization to improve code readability and maintainability by using a dedicated
updated print statements in SchemaPrinter to include a newline character and improved error message formatting to enhance readability and maintain consistency in output formatting
refactor DebugRoadRegen and SchematicHandler to use C . NOT _ IN _ PLOT for chunk regeneration
updated references from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure consistent usage of ` getActivity
updated the @ GeneratedValue annotation to include a name parameter for the " native " generator in multiple classes to provide a more descriptive generator name
removed the country parameter from the getSystemTimeZoneID method and simplified its invocation to simplify the method signature and improve code readability
add position and remaining to uncompressed data output in BZip2Codec . java and adjust byte buffer allocation in TestBZip2Codec . java
data - param - show - logging = true for web application
added a new constant VALUE _ TYPE _ EMPTY in the Type class and modified the Value class to use it to improve code readability and maintain
replaced ` = = ` with ` . equals ( ) ` for group comparisons in ` GroupManager . java ` to improve code readability
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated its usage in ` VersionedTargetGraphBuilderTest ` to improve
rename minrowcompactedsize to minrowsize and maxrowsize in cfstorembean .
added a new Gson type adapter for ArtifactVersion in MetadataCollection . java and changed parentMod and childMod fields in ModMetadata . java to
modified the logic for setting and deleting elements in NativeArray to ensure correct handling of the previous element in the array
updated file saving logic to use the parent file ID instead of the local file path to improve clarity and maintainability of file management
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure proper parsing of UTF - 8 characters
added unit test base on user forum issue
updated subscription stream formats in BinanceIntegration and BinanceUsIntegration classes to include a depth 20 to improve test accuracy by allowing more flexible
added a resetAllocation method to the Wrapper class and invoked it in SimpleParallelizer to ensure proper allocation management during parallelization
removed import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
modified the handling of system properties in mmm Agent . java and added a new file mmm AgentCMETest . java to ensure thread
refactor ModelUtils methods for improved readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert to improve code readability to enhance maintainability and readability of the code
updated width and height calculations for labels in Legend . java to ensure proper handling of empty labels and prevent potential ArrayIndexOutOfBoundsException
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf , TestResponse , and SpringMvcIT
replaced ` get ( fieldName ) ` with ` getValues ( fieldName ) ` in ` MoreLikeThis . java ` and updated related logic to
replaced the method of obtaining the root target source path in Omnibus . java to create a new BuildTargetSourcePath instance
add an option to disable the download command if the versioning be disable .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` MediaFolder
removed the argument " - b " from AidlStep . java and modified the format string in GenAidlTest . java to
do n ' t delete obligation on edge comparison
added a todo comment to the FakeHttpLayer class to clarify the purpose of the test code
replaced error handling code with a method call to revoke leadership to improve clarity and maintainability of leadership management
compositediscoveryclient : use flowable . fromfrom ( ) instead of flowable . collect ( )
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] add description for job computation recovers from task failure
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods with ` updateRecyclerViewVisibility ` and updated related logic
added error handling for missing Woodstox output factory in XmlUtil . java and updated test assertions in MultiVersionXmlParserTest . java
refactor test setup method in AuditAliasCommandIntegrationTest to use JUnit ' s setup method to improve test setup reliability and ensure proper
removed debug log statements from WidgetsFullSheet and WidgetsRecommendationTableLayout to clean up the code and improve readability
camel - cxf : disable some camel - cxf test that be not support in the parent class .
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions when the periodical refresh fails
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and refactored
added a method to check the default background color in HSSFCellStyle and updated HSSFPalette and HSSFCellStyle classes
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and facilitate future updates
refactor the ` shouldBufferUpdate ` method in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to
added a condition to check if the stage is null in the SimulationListHandler class to ensure that the motor ' s stage is not null
added a new parameter ` allAllowed ` and modified the ` getItem ` method to include a ` replaceType ` parameter to enhance flexibility in
refactor ExtendedMasterSecretExtension for improved clarity to enhance maintainability and readability of the code
changed the declaration of the InputProcessor variable from non - final to final to ensure immutability of the processor variable
added a listener to notify when an end of stream is reached to ensure proper handling of end - of - stream writing failures
added a new database constant " CUBE " to MySQLDatabase . java to enhance database functionality for CUBE
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException when removing the snap directory
renamed ` ExperimentalRobolectricTestRunner ` and related classes to ` MultiApiRobolectricTestRunner ` and updated
replaced reflection - based access methods with direct getter methods for HTTP client timeouts in DefaultOkHttpClientFactoryTest to improve code readability and maintain
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions when ' os ' is null
ggb - 1369 fix for npe in draw indexed string .
updated the ` jailerMain ` method to include a ` fromCli ` parameter and added a conditional check for the ` fromCli `
refactor HttpRequest class for improved readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread status in TalonPullNotificationService to enhance user experience by allowing unread notifications
added a check for the object kind before processing the object stamp in IsNullNode . java to ensure proper handling of object stamps based on the
updated Box2DTest and OrthographicCamera classes to improve memory handling and refactored screen - to - world calculations to enhance performance
refactored layout management and padding logic for comments RecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by
changed log level from trace to warn in CLIService . java to improve logging severity for background operation aborting
fix a bug in jimplebodybuilder where methodinstance . flags ( ) . abstract ( ) be ignore .
ggb - 10plus : do n ' t call app . invokelater on pointerup callback in ie10plus
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified the retrieval of notification users to include the device ID
updated the base URL for CGIARProvider from v4.1 / 6 _ 5x5 _ TIFs to SRTM
removed unused properties and action listeners in MotifFileChooserUI . java , and added a new test class bug6520101 . java
change return type of handle method from void to boolean in multiple UI components to ensure that the handle method returns true , true , and false for
refactor ` getRuleOptional ` and ` getRuleWithType ` methods in ` BuildRuleResolver ` for improved clarity and error handling to
updated transportSpinner visibility based on makingShortcut condition to ensure transportSpinner is visible based on makingShortcut state
added null check for attributes _ field and created new classes T7043371 , T7073477 , and T70734
replaced ` backPressed ( ) ` method with ` backPressed ( ) ` in multiple fragments to return a boolean indicating success or failure to
added support for LONG _ VIEW _ INDEX _ ENABLED and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED in QueryServices and QueryServicesOptions to
corrected the string concatenation syntax in SDRTrunk . java to improve code readability and maintainability
updated the method to clean the private key path in PrivateKeyParserTests to ensure that the private key path is properly cleaned before proceeding
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method calls in ` MTable . java ` to simplify the method signature
updated IndexWriter and IndexWriterConfig parameters to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
hbase - 2248 add option to disable column family check in importtsv
[ java ] : use subscription id instead of recording channel for replay and extend recording .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent ) ` and added voice button proxy visibility in ` Launch
added a condition to return early if the first JSON node is a " i " in PoloniexStreamingService . java to ensure that
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
added Locale and system class loader parameters to ResourceBundle method calls in Toolkit and Window classes to enhance resource loading flexibility by providing default locale and
[ j2kt ] add support for kotlin normalization of array literal .
added checks for mincount and hasAnyCount in PerSegmentSingleValuedFaceting . java to ensure accurate counting of term values during faceting
replaced the use of ` Optional . fromNullable ` with ` Objects . firstNonNull ` for authorList assignment to improve code readability and
added OSGiTest . java and modified module - info . java to require static Jdk . unsupported and added OSGiTest .
refactor controller service enabling logic into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by encaps
hbase - 1348 remove the clearbufferonfail flag from htable . setautflush ( false )
fix : add test for annotation applied on any element in a class
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureTest ` and ` Property
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` , ` ExplainTask ` , and ` ExplainTask ` to
refactor RelyingPartyRegistration class for improved readability to enhance maintainability and facilitate future updates
removed the enableLogging method from JavaCompiler . java to clean up the logging configuration to improve code clarity and maintainability by eliminating
added a new class ` InJavaSourceSet ` to handle Java source sets to facilitate the handling of Java source sets in Java
updated file path handling in TestGDALParser . java to use a variable for the fits filename and added an assumption check to ensure that the
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter objects with specified attributes
removed the conditional check for external storage in DirectUpload . java to simplify the condition for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` and modified commit handling in ` IndexerMapReduce ` and ` Indexing
cloudstack - 3892 : make diskofferingid optional in createvolume api
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy to ensure proper handling of null and non -
added checks for ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling of ` Period
added a new file ` Issue382 . java ` containing tests for handling specific error types in the server feature to ensure proper error handling for
replaced the ` signum ` method with a static import for ` Integer . signum ` and simplified the return statement to improve code readability and
set the text visibility of the holder to GONE in AttachmentAdapter . java to improve user interface responsiveness by toggling the text
fix ( import ) : check for reference in import
simonstewart : fix npe in firefoxdriverservice . getprofilename ( )
added a new class ` LiquidBlock ` implementing ` BucketPickup ` and modified access modifiers in ` LiquidBlock ` to
http : / / issues . apache . org / jira / browse / amq2902 / amq2902test . java to
update time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time
rename ` existingObservation ` to ` distinctObservation ` in ` DistinctErrorLog . java ` to improve clarity and consistency in
updated TEST _ NIGHTLY , WEEKLY , WEEKLY , AWAITSFIX , and SLOW properties to include the TestGroup annotation
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` in ` SQLEditorSupport . java `
add denyaccess ( ) method to graalcontext . getcontext ( )
refactor image handling in PGraphics2 to use WritableRaster for better encapsulation to improve code readability and maintainability by centralizing raster
updated HiveAbstractReader to include partition information in verifyAndAddTransactionalProperties to ensure correct transaction properties are verified for the job execution
updated the logic for determining if the overlay should be scrolled based on the last overlay scroll status to improve the responsiveness of the overlay
hhh - 1354 - add support for unmodifiable batchbuilder ( # 1354 )
updated error messages in multiple classes to include additional context for clarity to enhance error reporting by providing clearer context for unexpected input errors
added a new test class ` MockWithStaticStateDemo ` and a corresponding test in ` PartialMockingRetainsStateTest ` to verify
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing of
modified the ` doAs ` method to handle null ` ugi ` and return the result of ` doAs ` to improve error handling and
refactor error handling in OpenALMusic to use a local variable for error code to improve code readability and maintainability by reducing
camel - 1774 : deprecate endpointhelper . reslovestringparameter in favor of endpointhelper . resolveparameter ( ) .
[ calcite - 4892 ] [ table - planner - blink ] fix precision and scale in rexnodeconverter
replaced direct access to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional . ofNullable ( ) ` for
updated the expected value of the ` updateAccount ` method in ` WalletTestAccount003 . java ` to use ` Long . toString ( )
refactor selection logic in BasicFrame and DesignPanel to use MouseAdapter for better event handling to improve code readability and maintainability by redu
added support for a configurable long running time in the Args class to enhance flexibility by allowing dynamic configuration of the long running time
added a new class ` Ideas _ 2012 _ 05 _ 21 ` and modified comparisons in ` FindRefComparison ` and ` RefComparisonWarning
updated imports and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to use java . util . ServiceConfigurationError
replaced ` toString ( ) ` with ` toPlainString ( ) ` in ` XSDecimalBinding . java ` and refactored
updated assert statements in TestRestClientRequestImpl . java for consistency to improve code readability and maintainability
updated the condition in MissingUniqueConstraintChangeGenerator to include equality check for comparison database to ensure that the comparison database does not already exist before proceed
refactor ` addAndroidConstants ` method to return early and improve proguard path handling in ` IjProjectTemplateDataPreparer ` to
replaced assertions in DuplicateCookieTest . java and SessionRenewTest . java with awaitility in multiple test files to improve test reliability and
added user _ args and is _ daemon flags to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance trace tracking capabilities
svm : fix synchronization issue in native library .
corrected a typo in the trace log message from " match limit " to " match order " to improve clarity and consistency in logging
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from the TheRockExchange class
added ` strictfp ` modifier to ` FloatingDecimal ` , ` FormattedFloatingDecimal ` , and ` ParseDouble ` classes , and
removed unparseIdentifier from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify column name handling by eliminating unnecessary unparseing
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator `
added a condition to check if a static class is not synthetic in the InstantiateStaticClass and created a new test method in Bug1282 to
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code
added cucumber pending reservation handling in IkStepDefinition . java to ensure proper resource management and error reporting during message processing
removed the ` final ` modifier from the ` equals ` and ` hashCode ` methods across multiple type classes to ensure proper serialization and deserialization of type
added a new method ` getSyncLevel ` to retrieve the ` SyncLevel ` enum and updated the existing ` defaultSyncLevel ` initialization to
[ java ] use try - with - resources in controlcommandstest . testclientpause
added a condition to check if the slice state is not RECOVERY before proceeding to ensure that the slice state is valid before proceeding
updated method call formatting in opencv _ core . java to improve code readability and maintain consistency
added sdkPath to AppleBundle and modified makeProcessExecutorParams method to accept ExecutionContext as a parameter to enable dynamic SDK root path for
replaced the usage of ` writeLock ` with ` cleanupCallback ` in the ` TransientBlobCleanupTask ` and ` TransientBlobCache ` classes
fixed typo in log message for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion logic for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling
refactor BetterBlockPos class for improved readability to enhance maintainability and facilitate future updates
updated the proxy retrieval to use the class loader to ensure compatibility with the current class loader for the proxy implementation
refactor version handling in MainWindow , ConnectionSettingsPanel , and startup to use a new method to improve code readability and maintainability by
added support for handling trailing and duplicated lines in LoggingExecutor and JdbcExecutor to ensure correct handling of trailing and duplicated lines in SQL statements
added a new constant UNKNOWN _ VALUES _ ARE _ NSP in IsNullValueAnalysisFeatures . java to define a system property for assumens
updated the port configuration in MainTest . java to use a dynamic port instead of a hardcoded value to improve flexibility by allowing dynamic port
updated BLOB and PLAY _ MARGIN constants and refactored timing calculations in DrawAudio . java to improve code clarity and
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration . java to enhance
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
( chore ) camel - jbang : fix checkstyle violation in camel - core
added methods to set and get a help page in PMS and refactored help page handling in HelpTab to improve user experience by allowing
added new files GeocodeProviderFactory . java and Constants . java to the project to implement a common utility interface for testing purposes
replaced the import of ` org . apache . lucene . analysis . util . CharArraySet ` from ` org . apache . l
replaced ExpectedException with a new test method in OptionTest , ResourceManagerImplTest , and ResourceManagerOptionsTest to improve exception handling and
updated ` GATEWAY _ SERVER _ ID ` to use ` Protocol . GATEWAY _ SERVER _ ID ` and added null checks in
updated conditional checks in SegmentsInfoRequestHandler . java and improved SolrInputDocument instantiation in CollectionsAPISolrJTest . java to enhance code
updated the calculation of numPredictiveAppCols to accommodate phone - specific app columns to ensure accurate number of app columns based on device
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related logic in ` DrillJoinPrule `
add a blockbuildcraft class to allow to remove a block from a block that do n ' t have to be remove .
updated gravity settings for FrameLayout and LinearLayout in DeviceProfile . java to improve layout management and ensure proper layout handling for the search bar
[ yahoo ] fix checkstyle issue in util / yahoosession . java
initialized ` ms ` and ` metaStoreClient ` to ` null ` in ` HiveMetaStore . java ` and removed the ` standAl
updated ` getDisplayScript ( ) ` method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` Locale ` and added
updated references to ` ZkStateReader . CORE _ NAME _ PROP ` in the ` Replica . java ` file to ensure consistency in
replaced ThreadLocalRandom with Random in StoreDirectTest . java to improve randomness by using a random instance instead of using ThreadLocalRandom
added a check for the launcher ' s state before backup operations to ensure that backup operations are only executed when the launcher is ready
updated exception messages in Cell . java to include a description of the invalid values to improve clarity of error messages for better debugging
added unit test base on user forum issue
rename methods and variables from ` setBodySpace ` to ` setBarSpace ` and ` getBarSpace ` across multiple classes to improve clarity
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated FileMessageHistoryTest to use TemporaryFolder and added assertions to improve test reliability and ensure proper functionality of file handling
added multiple logging statements for express , quartz , reflections , Jetty , and mongodb driver in Grasscutter . java to
changed ` highlightCnstScrRngQuery ` from instance to static in ` SpanScorer ` and updated related methods to improve performance
added a check for the workspace state in overview mode and implemented a method to retrieve the current state in the Workspace class to ensure that the workspace
refactor multiple assertion classes for consistency and clarity to improve code readability and maintainability
added a cacheable check before notifying new templates in SnippetTemplate . java to ensure proper notification behavior when the cacheable flag is set
added a new constant ` SCOPE _ SOLR _ CORE ` and modified the ` DataImporter ` and ` DataImporter ` classes to support
updated the SQL measurement table to include a primary key parameter and added a test for primary key retrieval in DatabaseMetaDataTest . java to ensure that
[ PantheonCommand ] rename ` -- permissions - config - path ` to ` -- permissions - config - file ` for consistency
refactor conditional checks for session creation in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability
added a new file ` TestIfWithDeadRegion . java ` containing a class for testing string values with a dead region to facilit
rename english _ ud . gz to english _ usd . gz , fix typo
refactor SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access testing to improve test reliability and ensure thread safety during concurrent access
added a static UI flag to AppSettings and modified MainFragment to conditionally hide toast bar based on user preferences to enhance user experience by allowing
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper
replaced ` setParameter ` with ` setParameterIfAbsent ` and added null check for client ID in ` SamlRedirectLogoutHandler . java ` to
updated JOptionPane and NavigationShareTab to include a message message in multiple dialog classes to enhance user experience by providing clearer context for dialog
tika - 1187 - add mime type for xls and vnd . openxmlformats - officedocument . spreadsheetml .
added logging statements and modified method signatures in multiple classes for improved clarity and functionality to enhance debugging capabilities and enhance code readability
camel - 14836 : camel - eip - documentation - enricher - maven - plugin : fix the xml output of camel - documentation
do n ' t report schema for endpoint that have no version
added debug logging for audio notifications and playback devices in DeviceConfiguration . java and PortAudioAuto . java to improve debugging capabilities and ensure correct handling
added a ` WebsocketConfig ` class and modified ` ReactorNettyWebSocketClient ` to accept a ` ShenyuConfig `
updated CacheValidationListener to implement IInvokedMethodListener and added result queue management for invoked methods to improve test execution reliability and control over test
updated content length handling in MoreIndexingFilter to trim whitespace before adding it to the document to ensure that content length is only added if it is
refactored solver status management into a separate method solvingTerminated to improve code readability and maintainability by encapsulating synchronization logic
refactor time series creation logic into a separate method ` internalCreateTimeseries ` to handle potential ` PathAlreadyExistException ` to improve error
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean value is
changed access modifiers of several static methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
cloudstack - 4892 : fix the bug in createvirtualmachinewithvirtualmachinewithvirtualmachin
removed compliance check for RFC2616 in HttpParser and simplified test method names in HttpParserTest and ContextHandler to improve code clarity and
refactor thread initialization logic into a separate method ` threadCompleteInitialization ` to improve code readability and maintainability by consolidating the initialization process
added a method to get and set the external storage directory in ShadowEnvironment . java and created a corresponding test class EnvironmentTest . java to enhance
[ drools - 939 ] add test case for mvel 2.1 . 0 . drools9
updated import statements and formatting in LoggingConfig . java , DbgPacker . java , and DbgPacker . java to improve code
added the exception message to the log message in ActionNode . java to provide more context when an exception occurs during the construct process
remove the tel prefix from the to number if it ' s a tel address .
refactor visibility logic for shared with me icon in FileListListAdapter . java to improve readability and maintainability of the code
removed the deprecated HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf . java and updated its usage in TestTxnCommands3 . java
refactor ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation ` classes to improve configuration overlay handling to enhance code
updated method calls to use ` Arrays . asList ( ) ` instead of ` Lists . newArrayList ( ) ` and simplified imports in ` BTC
fix ogrdatastoretest to use gettypename ( ) instead of getname ( )
removed the onErrorInStep method from StepListenerSupport to return null to streamline error handling by eliminating unnecessary code
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 1847 : camel - netty - http should use the http scheme for the content - type header if the http scheme be
replaced ` System . out . println ` with ` Log . info ` for logging statements in ` TestNonBlockingAPI . java ` to
added a check to ensure the row index does not exceed the size of the connection list to avoid potential index out - of - bounds errors
[ java ] introduce methodwithsamenameasenclosingclass rule
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to include it in the list of MBean instances to enhance the management
added single quotes to the SQL string in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
added " org / knowm / xchange / bleutrade / dto / " to the DTO path in multiple test files to ensure
refactor TextEscapeUtils to improve code readability to enhance maintainability and readability of the code
added a filter parameter to the FilteredQuery construction in AbstractSpatialFieldType and updated the corresponding test in TestSolr4Spatial to allow dynamic filtering
removed redundant progress display logic in GpsLoggingService . java and added post method in AutoEmailHelper . java to streamline code and improve
replace ArrayList with HashSet for inlinks in Inlinks . java and update related methods in LinkDb . java and LinkDbReader . java to
added a synchronized method to stop the last scan and updated the order of Older results in TradfriDiscoveryService . java to ensure
modified the ` testFilterForPartition ` method to accept a boolean parameter indicating blocking mode to ensure that partition retrieval does not fail with blocking mode
added " Abandoned " status to the workflow list and updated related code to support the " Closed " status in the application
removed the initialization of columnAliasPrefix in multiple platform classes to simplify the code by eliminating unnecessary assignment
replaced instances of ` Text ` with ` BytesWritable ` in multiple classes to standardize data handling for better compatibility
add a warning when run on a 32 - bit jvm on a 64 - bit jvm
refactor conditional checks for key and type in PdfCopy . java to improve readability and maintainability of the code
added a new option ` DAEMON ` to the ` RESET _ ALARM ` enum and implemented a daemon mode for pendant UI
added a new file ` FlushIndexTask . java ` that implements a performance task for flushing the next buffer to facilitate the flushing
[ flink - 13434 ] [ table - planner - blink ] fix flush size calculation in binarymemtable .
added support for SEASONS output in MediaLibraryFolder . java to ensure proper output handling for SEASONS
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 loopback address to facilitate testing
updated grid size points in GridSizeMigrationTask . java to ensure consistent positioning of grid size points
updated method references from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve consistency and clarity in
added a READ _ ONLY constant and validation checks in the Context class to ensure proper handling of transaction and object operations in read - only contexts
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of ` lastRunEnd ` to use ` ceiling ` instead of ` floor ` and adjusted the offset condition in ` child
added EOFException and EofException checks to the assertion in GracefulStopTest . java to ensure proper handling of EOFException and EofException
replaced multiple instances of ` lock . lock ( ) ` with a single ` put ( ) ` and ` remove ( httpRequest ) ` method
[ hotfix ] [ doc ] fix typo in networkparameters
removed conditional check for account asset optimization in DynamicPropertiesStore . java to streamline account asset optimization setting logic
added a new constant J9 _ GC _ POLICY _ NOGC in VM . java to indicate that the garbage collection policy is no longer
added error handling for invalid transactions in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions during transaction processing
no effective change - remove strictexception rule
updated resource path format and improved logging messages in HelpContent . java to enhance readability and provide clearer feedback when no localization available for
added a new file ` ProcessorInfo . java ` with methods to determine and retrieve available processors based on the system ' s available processors to enhance
added stylesheet handling and a xslt method in PrintingBugReporter . java to enhance HTML output generation for improved user experience
make logbackxmllocation non - nullable and deprecate
updated import statements and refactored cluster ID handling in HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve code clarity and ensure
removed conditional property for whitelisted keys in SleuthTagPropagationAutoConfiguration and updated test cases accordingly to ensure proper handling of tags by default and
refactor rust dependency type assignment to use a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to include a ` queryParams ` parameter and added error handling to the ` oauth2LoginLinks `
hbase - 2328 fix halfstorefilereader . getfirstkey ( ) to return the first key when the first key be not
hhh - 1358 - introduce generationtiming . isalways ( ) and deprecate generationtime . value ( ) . is
added unit test for layer normalization in Nd4jBackend to ensure correct behavior of layer norm function
refactor ` showShareFile ` method across multiple activities to utilize ` getFileOperationsHelper ( ) ` across multiple fragments to improve code organization
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of LiquibaseUpdate Mojo to
convert the proxyType value to uppercase before setting it to ensure that the proxyType is converted to uppercase
add mod _ minecraftforge . getversion ( ) and mod _ minecraftforge . load ( ) to make it
refactor JdbcDatabaseSnapshot to improve column caching logic to enhance performance and maintainability of the caching process
added a new CSS border and label to the Container in CSSBorderTest . java to enhance the visual appearance of the UI by providing a
refactor RetryAutoConfiguration to RetryInterceptorAutoConfiguration and introduce a new RetryableStatusCodeException class to improve retry handling and provide better error
updated superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper layout handling by using MATCH _ PARENT instead
updated the construction of the parentTaskName string to use milliseconds instead of nanoseconds to ensure accurate time representation for task processing
added error handling for parsing the AddServiceRequest in ServiceResourceProvider . java to improve robustness by providing clearer error messages when the request
refactor conditional logic in IndexDatabase . java for clarity to improve readability and maintainability of the code
make sure x [ x < 2 , x [ 0 ] , x < 2 , x [ 1 ] , x < 2 , x )
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should no longer be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flaky evictiontest . testcountadded ( )
replaced the ` encodeInternal ` method with ` saltedPass ` in the ` Md5PasswordEncoder ` class to simplify the encoding
updated the method calls for adding and removing the global layout listener in IconRecentsView . java to simplify the code by eliminating unnecessary
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum timestamp from Long . MIN _ VALUE to Long . MAX _ VALUE in SSTableMetadata . java to align with the latest
slightly increase the preferred size of the security panel
added a condition to check if replies are not null and empty in multiple adapter classes to ensure that replies are only processed if compression is enabled and
added ` toString ( ) ` and ` hashCode ( ) ` methods to ` HitbtcBalance ` class and improved error handling in
refactor SQL generation logic to use a CharSequence for column name and update order by metadata handling to improve code clarity and ensure correct handling of
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity and
replaced manual file closing logic with direct access to OpenCookie in EditGcodeFile . java to improve code readability and maintainability by
updated HTTP client imports from ` org . apache . http . conn ` to ` org . apache . http . client5 ` in ` Json
pipe : fix off - by - one error in wood pipe
added a check to delete the temporary output file if it exists to ensure that the temporary output file is properly deleted when it exists
added " id " field to the BitstampWebSocketTransaction constructor and introduced new test cases in BitstampStreamingMarketDataServiceTest to enhance
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure
reformatted the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and maintainability
added new SQL insert statements and refactored the database connection handling in MediaTableFiles . java to improve code readability and maintainability by
show only definition for exam in exam
added null check for the component in SIPCommTextFieldUI . java to avoid potential NullPointerExceptions when the component is null
hbase - 2249 add caching to metareader when startrow be null
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable transient taskbar functionality in the application
[ hotfix ] [ javadoc ] fix typo in accessexecution and archivedexecutionvertex
added a condition to set the density to 3f when scale is 3 in IOSGraphics . java to ensure the density is set correctly when
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] add exception to regionstatestore log
replaced an anonymous inner class with a lambda expression for assertTrueEventually in TestClusterUpgradeUtils . java to improve code readability and
updated warning log message in AsyncHttpConnection and refactored AsyncContextTest and LocalAsyncContextTest classes to improve logging clarity and enhance
added a boolean parameter ` showArrow ` to the method signature in ` SearchUiManager . java ` to enable the visibility of the arrow in
added a break statement in Database . java and removed the testSetMode method in TestRowLocks . java to streamline lock mode handling and
skip amd64 test on linux / amd64 only
refactor input type handling in Scalars . java to improve clarity and consistency to enhance code readability and maintainability
[ hotfix ] [ table - planner - blink ] improve error message when no primary key be specify
added conditional checks to set drawable resources for widget , hotseat , widget , wallpaper , and setting buttons based on LMP status to
added exception handling for Flutter views in VMServiceManager . java to improve robustness by providing a clearer exception message when no isolate is
added new header writer methods for content type options , caching , cache control , and frame options in HeadersConfigurer . java to enhance security handling
refactor ObjectEnumerableAssert class to improve code readability to enhance maintainability and facilitate future updates
simonstewart : move smoke test to router
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify that the AggregateRoot cannot be aggreg
added support for resolving prebuilt rules in Python binary descriptions to enhance compatibility with prebuilt rules in the project
added handling for client authentication in NetServerOptionsConverter and updated default clientAuth in HttpServerOptions and NetServerOptions to ensure proper configuration of client
updated the system directory paths in HiveConf and MetastoreConf to use the system name instead of " / user / hive / " to
refactor task view removal logic in RecentsView . java to improve clarity and maintainability to enhance code readability and maintainability
added timeout to the AmqpTransformerTest class to increase test timeout for better stability
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
rename variable ` controller ` to ` flowController ` across multiple classes to improve clarity and consistency in variable naming
[ hotfix ] [ table - planner - blink ] add test for consume all child pipeline builder with exchange
added ClassLoaderHandler import to module - info . java to enable dependency injection for ClassLoaderHandler in the project
refactor solve and setWorkingSolution methods to setSolution and update solve method to accept a planningProblem parameter to improve code clarity and
added JsonIgnore annotation to ApplicationSettings class to ensure proper serialization of the application settings
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null to prevent potential NullPointerExceptions
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and maintainability
fix auto workbench not work if there be no item in the craft result .
fix gl200 text decoder
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` in ` AvroRecord
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added initializable factory to container so that it can be use in the same context .
[ java ] register longtasktimer . sample in meterregistrycompatibilitykit .
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted the calculation for refTime and interval to
add warn log for deprecate unwrapped fragment expression in thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when deserializing attributes
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - add debug
added new color constants and refactored extractInto method to improve color extraction logic to enhance color handling and support for dark text support
add a check for accessible data folder before adding it to srcFolderPathList in SketchBuilder . java to ensure that the data folder is only
modified the ` appendContent ` method to include an ` includeTitle ` parameter to enhance the functionality of the ` appendContent ` method to include
removed initialization of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify code by eliminating unnecessary initialization
added logging for reconnection completion and error handling in NettyStreamingService to improve error handling and provide clearer feedback on the reconnection process
updated proxyFactory initialization to use JavassistProxyFactory instead of CglibProxyFactory to ensure compatibility with the internal Javass
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by using a more
refactor SocketExceptions to simplify message formatting and improve address validation in ExceptionText to enhance readability and maintainability of exception handling
added a check to check if the view directory is under the repository directory before proceeding to ensure that the view does not contain the repository directory
remove tab header area drag and drop functionality from JabRefFrame . java to simplify the code and improve readability
added JVM option " - XX : + UseCompressedClassPointers " to multiple test files to ensure compatibility with compressed class operations in tests
added a condition to check if the update log is in ACTIVE or REPLAYING state to ensure that updates are only logged in active or
deleted the ConnectionHook . java file to the functionality is no longer needed for the application
removed the ` waitForReplicasInSync ` variable and its usage across multiple test classes to streamline the test setup and improve code clarity
camel - 14375 : fix the test error of camel - swagger - java and camel - rest - dsl
updated ApexLanguageModule to use the current version of ApexHandler and added a new method hasNamespaceGuardedAccess in TestAccessEvaluator
[ hotfix ] fix checkstyle violation in java . base module
updated ` AggregateEngine ` and ` OverflowQueryEngine ` to use ` AggregateThread ` instead of ` Executors ` to improve thread management
added a ByteBufferPool parameter to the WebSocketAsyncConnection constructor and updated its usage in WebSocketServerFactory to enhance buffer management for WebSocket async connections
updated scrollToPositionWithOffset logic in UploadActivity . java to adjust thumbnail position based on the index to ensure proper scrolling behavior when the thumbnail
fix ( sql ) : add support for sampleby on timestamp override by other column alias
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to improve animation responsiveness to enhance user experience by providing
added a conditional check to disable the default user agent in the HttpClient configuration to ensure that the default user agent is disabled when the HTTP client is
added a conditional check for pubsubhubbub in FeedRefreshUpdater and integrated it into ApplicationSettings to ensure that the feed is only handled when
changed the access modifier of the finalize method from public to protected to allow subclass access to the finalize method
added a check for synthetic classes in the isAnonymousOrLocalOrSyntheticClass method and updated corresponding test assertions to ensure correct handling of synthetic
add dspacewebapp to make it easy to create a web application .
added a check for null leftTableAlias in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure proper handling of column
updated the identity key format in JobGenerator to include a space before the trigger key to improve clarity and consistency in naming conventions
updated logging levels from info to warn for transaction broadcasting failures in Wallet . java to improve logging clarity and provide clearer error messages for
increase timeout to 6 second in basicmaptest
updated the default values of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to
added a new enum TlsClientCertPolicy and refactored client certificate handling in GitBlitServer to use it to improve flexibility
added a debug log statement for saving a new subscription message in KrakenFuturesStreamingService . java to improve debugging and provide clearer feedback
added support for Sec - WebSocket - Protocol in WebsocketRoutingFilter to enable customizable WebSocket protocol handling based on headers
added a debug log statement to HiveQueryResultSet . java to enhance debugging capabilities for query results
updated formatting of dimensions and label in HolidayEventFormatter . java to improve readability and maintainability of the code
refactor test methods in ` FinalizePrivateFieldsTest ` and add a new method in ` InnerStaticClass ` to improve test clarity and
refactor UnexpectedJobExecutionException class for improved error handling to enhance code clarity and maintainability
deleted the file ` module - info . java ` and removed the ` shouldUseOpaqueButtons ` method from ` AquaUtils `
updated dimension limits from maxFreq to maxCost in DrillSidewaysQuery and DrillSidewaysScorer classes to improve accuracy of dimension
added GeoDegeneratePath class to classRegsitry in StandardObjects . java to facilitate processing of GeoDegeneratePath
removed the ` preFill ` parameter from several pool constructors across multiple pool classes to simplify constructors by eliminating unnecessary pre - filling logic
added state update logic for taskbar launcher state and updated flags in TaskbarStashController to ensure the taskbar state reflects the current
added null check for the default style in CascadeDeleteVisitor . java to avoid potential NullPointerException when comparing styles
improve the appearance of the status tab to make it easy to change the size of the screen
refactor file icon retrieval logic in FileTreeViewHolder . java to improve readability and maintainability of the code
replaced ` isEqualTo ( ) ` with ` contains ( ) ` for assertions in ` ParallelUniverseTest . java ` to improve cl
added synchronization around the retrieval of test results in XMLReporter . java to ensure thread safety when accessing the results map
add unit test for native probability function
added ShutdownThread . deregister ( this ) to ClientContainer . java to ensure proper resource management and prevent memory leaks
added a method ` dropTemporaryTableAfterUse ` that always returns false in ` SybaseASE15Dialect . java ` to provide functionality to
simonstewart : remove color conversion from htmlunitwebelement , use htmlunit ' s htmlunit ' s htmlunit ' s
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code organization to enhance maintainability and readability of the code
updated hex string formatting for reserve size in VirtualAllocCommitUncommitRecommit . java to improve readability and maintainability of the code
do n ' t recreate ad playback state when there be no ad group
refactor equality check in MultimapSubject to use a variable for clarity to improve readability and maintainability of the code
updated frequency value retrieval from deg _ text to unit _ hz in WaveGeneratorActivity . java to improve accuracy of wave frequency by using a
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced ` putAll ` method with direct initialization of ` all ` in ` TestLabelOptions . java ` to simplify the code by elimin
refactor vertex format handling in VertexLighterFlat . java to use a static final VertexFormatElement instance to improve code readability and maintain
added span tagging for visibility in multiple interceptor classes to enhance tracing capabilities for better debugging and responsiveness
updated time zone handling in ScheduledTrigger to use TimeZone . toZoneId ( ) instead of ZoneId . of ( ) to ensure consistency in
added AsyncBucket and InMemoryExtension classes , and modified methods in Bucket and Bucket4j to include unsupported operations to enhance functionality for asynchronous bucket
updated argument validation in resexhausted003 . java to use dynamic class paths based on system properties to enhance flexibility in checking the directory
added exception handling for InterruptedException in AbstractConnector . java to improve robustness by catching interrupted exceptions
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
added support for reusing the web server in the Daemon class to enhance flexibility in managing web server connections based on the presence of a specific
renamed ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and updated imports in ` SolrTestCaseJ4 .
added a check to ensure the thread allowlist is not empty before clearing it in ParametersInterceptor . java to ensure that the thread allowlist is
replaced ` setOutputSource ( outputSource ) ` with ` setItemWriter ( outputSource ) ` in ` TransformerWriterItemProcessorTests . java
added a conditional check for the HitPolicy before calling findGaps and findOverlaps in DMNDTAnalyser . java to
add a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to validate the behavior of the ` CombineFn
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure all apps are only
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary
reformatted code for improved readability to enhance maintainability and maintainability of the code
replaced the deprecated ` getPrivSysProp ` method with conditional checks for ` useScreenMenuBar ` in ` AquaMenuBar
glowentity . setrawlocation ( location , boolean ) do n ' t fall to spawn position .
updated the ` SimpleJpaRepository ` to use a new ` Specification < S > ` and ` applyRepositoryMethodMetadata ` queries to enhance
added new block parameters for difficulty , parent hash , nonce , and number in BlockUtil . java to enhance block processing capabilities for improved
rename loop safepoint insertion phase to safepoint insertion phase .
added null and empty checks for child lists in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing
changed access modifiers of several methods from package - private to public in ArtifactResolver . java to allow access to these methods from other classes
added resource disposal and exception handling in multiple classes to ensure proper resource management and prevent potential memory leaks
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent runtime errors
added state management for the loging in state in LoginActivity to ensure proper login behavior during instance state transitions
added null checks and improved value handling in Pump . java , along with a new test case in PumpTest . java to ensure
changed access modifiers of several methods and variables from private to protected in HttpShardHandlerFactory and LBHttpSolrServer to enhance encapsulation and
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in multiple classes and added unit tests for Default
added server and handler setup in TestJNDI . java to enable dynamic configuration of server connections
refactor code formatting and improve readability in SortedDynPartitionOptimizer . java to enhance code readability and maintainability
change return value from checking if loop is an instance of NioEventLoop to always returning true to ensure that the loop is a valid state
updated the calculation of ` newNumNulls ` to handle cases where ` newNumNulls ` does not exceed ` newNumRows ` to ensure
camel - 1774 : camel - jbang - camel - export - camel - kamelet - make it easy to configure kamelets
replaced OkHttpOAuthConsumer with AuthorizationService and added authorization handling for OpenStreetMap upload to improve user experience by ensuring the OpenStreetMap
remove debug print statements from various test classes and methods to improve code readability and maintainability
added a clientAuth configuration property and its getter / setter methods in IoTDBRestServiceConfig . java and modified the RestService . java to
simplified the injection process in PropertyAndSetterInjection and added a new test class ChildWithSameParentFieldInjectionTest to improve code cl
http : / / issues . apache . org / jira / browse / amq - 4892 - use spring - beans for b
updated getCursorAdapter from false to true in HomeFragment . java and added refresh preference in TweetPager . java to enhance user experience by
updated the intermediate header height ratio from 1f to 75f in ProfilePager . java to improve the responsiveness of the scroller
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple Java files and added a new ` RecompilationEvent ` class
added support for host system preparation configuration in the ExecutionCommand and Configuration classes to enhance flexibility in host configuration management
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4565
added properties handling for entity and scores in the StaticPipeline class to enhance flexibility in managing entities and scores based on specified properties
updated file path handling and modified Whoops initialization based on configuration settings to enhance flexibility in handling file paths and improve logging behavior based on
[ geos - 5248 ] catalogrepository . getdatastorebyname ( ) should return null instead of throw an exception
refactor assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` , and
camel - 1774 : fix the test failure of camel - example - TwoConsumerOnSameTopic
removed the ` writeMeasurementScheams ` list from multiple method calls in ` TsFileWriteAlignedWithTSRecord ` , ` Ts
updated the loop condition and added memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve
updated log4j configuration from " slf4j - log4j12 - . * " to " slf4j - reload
[ hotfix ] [ test ] fix flaky test of huebridgehandlerosgitest
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple activities
[ drools - 1276 ] ignore kiesolverfactorytest until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that initializes the Avro schema from a specified file to improve flexibility in reading the Pinot schema from
refactor AbstractExpressionPart class for improved readability to enhance maintainability and readability of the code
[ hotfix ] [ javadoc ] fix typo in taskslot
replaced references to ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket . java ` and `
added error handling when releasing a lock in MoveTask . java to improve robustness by handling potential LockException during lock release operations
replaced the use of ` Properties ` with ` ResourceBundle ` for retrieving the GEM _ PATH and RUBY _ VERSION to improve code
replaced the static final byte array ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY in the Transaction class to simplify the code
refactor variable declaration for clarity in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix test failure in jobmanagerstartuptest
chore ( regen ) : add ruby namespace support for datastream v1alpha1
added extras to the builder in FileDisplayActivity to enhance user experience by providing additional extras for better user experience
changed the condition from ' break ' to ' continue ' in ParticleEmitter . java to correct the logic for handling null particle scenarios
updated cluster name expectations from 4 times to 1 times in AmbariManagementControllerImplTest . java and adjusted the number of times in the
removed nullable attribute from the " SERVICE " column in TransientSessionTicketImpl . java and added error handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code clarity and maintainability
updated RmStep . java to use a path relativizer for pattern deletion to enhance flexibility by allowing dynamic path relativization for
updated ` requestFullState ` method to accept a boolean parameter indicating initial request state to enhance flexibility in handling full state requests based on the
added a ` attribute ` property and updated related methods in ` ShibbolethCompatiblePersistentIdGenerator ` to support attribute management in persistent ID
refactor @ Inject annotation in RequestValidationService . java to improve code clarity and maintainability
refactor keyboard visibility handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by encapsulating logging
removed redundant calls to clear ( ) in FileNodeProcessor . java and added database cleanup in MManagerBasicTest . java and MTreeTest
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add test case for ioutilstest . slurpfile ( ) and ioutilstest . slurpfile ( )
added @ FunctionalInterface annotation to multiple classes and made the client variable private to improve code readability and maintainability
refactor span validation in TraceWebFluxTests to use a new method spanWithName to improve code readability and maintainability by centralizing
added date conversion support for Date objects in Hive schema to enhance data processing capabilities for date data types
replaced string splitting with Patterns . COMMA _ SEPARATOR in StyleConverter . java to improve readability and maintainability of the code
ggb - 1369 add input dialog for positive double conversion
refactor column mismatch logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
updated the logic for updating max scores in WANDScorer . java to handle cases where no matches are in the current block to improve accuracy
refactor Correspondence class for improved readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT - related classes to improve code clarity and maintainability by
modified the initialization of curPixVal in XRSolidSrcPict . java and added a new test class WhiteTextColorTest . java to
improve performance of biomedictionary . contains ( ) by use a collection instead of a list
corrected the variable name from ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity
replaced the @ Ignore annotation with @ Stability annotation in TaplTestsLauncher3 . java to improve test stability monitoring for better
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to avoid potential errors when the log file suffix is not present
refactor PythonBuckConfig class to improve code readability to enhance maintainability and facilitate future updates
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java and implemented methods in ShadowApplicationPackageManager . java
[ meiligao ] fix meiligao alarm format ( # 1749 )
added null check for tile before accessing its power value in PowerDiode . java to ensure robustness by preventing potential NullPointerException when accessing power
added a new ` TrimCache ` class and modified cache handling in ` PrefFragment ` and ` IOUtils ` to improve cache management and ensure proper
fix checkstyle issue in util / gwt / rendertasklistgenerator / rendertasklistgenerator . java
replaced return statements with exceptions in multiple AccessControlFactory and related classes to improve error handling and provide clearer error messages
refactor ` schedulePeriodically ` method signatures to remove the ` t2 ` parameter and introduce a new ` state ` parameter to enhance
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( ) in FileDisplayActivity . java to enhance user experience by providing
added conditional checks for files matching in StreamUtil . java and improved exception handling in StreamUtil . java to ensure that only one file is
refactor ` create _ table _ with _ environment _ context ` method to ` create _ table ` in ` SessionHiveMetaStoreClient
added a volatile boolean field ` aborted ` and modified the ` start ` and ` abort ` methods to ensure thread - safe access to the `
updated indentation calculations across multiple parser classes to account for a minimum indent value to ensure consistent indentation behavior across different parser implementations
added networkwifistatusreceiver and changewifistatusevent for autoplay on wi - f
removed redundant check for control frames in FrameGenerator . java to streamline code for better readability and maintainability
added visibility to the collapse handle button in the WidgetsBottomSheet to improve user interface visibility for the collapse handle component
added new files ` Issue475 . java ` and ` XSS . java ` to implement HTML and JavaScript escaping features to facilit
added a check to return early if the units to scroll is zero to improve performance by avoiding unnecessary processing when no units are available
changed the condition from checking if the contract list size is greater than 1 to checking if it is not equal to 1 to ensure that the contract
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class for comparing print services to ensure consistent hash code
replaced instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2z
added a check for the platform fee before enabling the connection in BaseStripeManager . java to ensure that the connection is only enabled when the
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix an issue with mediumcodecrenderer when the buffer be encrypt or decrypt .
removed the ' public ' access modifier from multiple classes and interfaces to simplify access modifiers and improve code readability
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the code
refactor JsonBuildHelper and ParamsBuildHelper for improved parameter handling to enhance code readability and maintainability by using commonHandleParam and
added TYPE _ TASKBAR _ OVERLAY _ PROXY to multiple TYPE _ TASKBAR _ OVERLAY _ PROXY in AbstractFloatingView . java to
fix : update gapic - generator - java with mock service generation fix ( # 119 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the ' true ' parameter from the createRenderScript method call in AllAppsView . java to simplify the code by eliminating unnecessary
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
move system - bundle check into pluginmanageractivator . issystembundle ( )
updated import statements and formatted code for consistency in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
updated Bloom filter parameters in KeyChainGroupTest . java to use a constant for negative rates to improve code readability and maintainability by
refactor the handling of default configurations in Overview . java to improve clarity and maintainability of the rocket configuration selection logic
refactor agent attribute retrieval to use a local variable for clarity to improve code readability and maintainability by reducing duplication
added null check before converting values to data in DefaultRecordStore . java to avoid potential NullPointerException when accessing values
[ kvm ] improve log for discoverer failure in case of host discovery failure
updated string concatenation in ParamAction . java to include attribute attributes to improve clarity of error messages for better debugging
updated constructor parameters and import statements in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a Object parameter to
refactor method signature to remove parentheses from method parameters to improve code readability and maintainability by reducing redundancy
update version name and code in GreatVoyage - v4.2 . 1 - 56 - gaff237ef7 and
replace list with set for the allowedCommands field in OutputFilter . java to improve performance and performance of command management
replaced specific symbolizer keys with wildcard imports and updated key mappings in SymbolMBLayer . java to improve code readability and maintainability by
ggb - 1343 fix for window popups not be resize when overlap feature be set
corrected spelling of " Module : " to " Module - " in ValidationSuite . java to improve clarity and consistency in error messages
refactor StartingWindowListener implementation to use a dedicated class to improve code readability and maintainability by centralizing the listener implementation
added documentation comment inherited from MBeanServerConnection in MBeanServer . java to clarify the functionality of the MBeanServer class
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition to improve clarity and accuracy of exception handling
increased the await termination timeout from 30 seconds to 90 seconds and added an assertion to verify that the executor service is terminated before proceeding
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it in ` XR
added @ JsonIgnore ( true ) annotations to the Schema class to ensure proper serialization and deserialization of the schema data
increased the timeout duration for the TestNonTxIndexBuilder test from 5000ms to 10000ms to allow for more time for the test
refactored the train method and updated scoring calculations in SimpleNaiveBayesClassifier . java to improve clarity and accuracy of scoring
renamed CheckHelperModule to CheckHelperControllerModule and added AuditLoggerModule to enhance clarity and functionality of the CheckHelperAuditModule class
refactor Prototype class to improve code organization to enhance maintainability and readability of the code
added a check for null tableIsTransactional and retrieved its value from the Hive metastore properties to ensure proper handling of the table '
[ java ] remove duplicate writefragment method from recordingwriter .
fix issue with cea subtitle return 0 instead of 0 .
added an alias to the data point group in KairosDatastoreTest . java and implemented the getAlias method in DatastoreMetricQueryImpl . java
updated the CurrencyPair entries in VaultOfSatoshiBaseService . java to replace " DOGE " and " CAD " with "
hhh - 1774 - fix memory leak in unit test
updated import statements for KafkaSender from Kafka11 to KafkaSender in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align with
add integration tests for Gwt binary building in GwtTest . java and A . java to ensure proper functionality and integration of Gwt binary
updated visibility of loadingCauseLabel and modified ResultSetRenderer initialization in SQLConsole and BrowserContentPane to improve user experience by ensuring loading causeLabel is
reformatted code in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to improve security property management and ensure proper initialization of
added two new interfaces , InterfaceWithDefaultMethod0 , InterfaceWithDefaultMethod1 , and its subclasses , along with a main method to demonstr
updated SQL query patterns in SqliteFieldPredicateView . java to use GLOB instead of LIKE to improve compatibility with SQL query syntax
change access modifier of getDMNProfiles method from private to protected to restrict access to the method for better encapsulation
fixed - script _ load command should be execute on slave node
remove staticobject . setwordfieldvolatile ( field , int [ ] ) and fix a bug in espressolanguage
updated debug log messages to include the size of the targets instead of just the number of targets to improve logging clarity by providing more detailed information
remove cast to fmlproxypacket . retain ( ) and fmlproxypacket . release ( ) .
added a new constant for HTTP Jetty server handler and updated thread pool configuration to utilize it to improve flexibility in managing HTTP server handlers
refactor shortcut management by replacing ` HashMap ` with ` ArrayList ` for removed shortcuts to improve code readability and maintainability by reducing duplication
remove unnecessary null check for string value in DefaultHttpClientBinderRegistry . java to improve code readability and maintainability
removed navigateUp ( ) method from DetailFragment . java to simplify the code by eliminating unnecessary navigation logic
added a condition to check if ` hasAndroidMarket ( ) ` is true in the ` includesPlayServices ` condition to ensure compatibility with
refactor TableBlockParser logic for improved spacing handling and add new test cases for pipes on outside whitespace to enhance code clarity and ensure
added a ` bridgingHeader ` field and its corresponding setter in multiple classes to enable dynamic configuration of the ` bridgingHeader `
refactor the handling of declared and unused methods in PotentiallyDeadCode . java to improve code clarity and maintainability by utilizing a
added diamond finder functionality and created two new classes with diamond - related functionalities to enhance the performance of diamond processing
use invocation . onstartsendrequest ( ) instead of invocation . getinvocationstagetrace ( ) . startsend ( ) in camel -
removed the import of Utils and logging of cachemetrics in SolrCacheHolder . java to streamline the code by eliminating unnecessary logging
added catch block for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication exceptions
update comparison logic in Test6796786 . java to use negative values instead of zero to ensure correct handling of negative values in float comparison
added " logback . dev . xml " to the list of configuration files in the JoobyMojo and Main classes to support
added a new file ` JaasEventCheck . java ` that implements ` ApplicationListener ` for Jaas authentication events to facilitate
refactor animation logic in QuickstepTransitionManager to use a list for managing visible views to improve code readability and maintainability by reducing
updated the comparison logic in ` ConjunctionSolrSpellChecker ` and added a new test class ` ConjunctionSolrSpellCheckerTest `
changed the type of fetchers from HashMap to Map in ShadowSystemServiceRegistry . java to improve data structure handling for better performance
updated log event names for single and all leader information changes in DefaultLeaderElectionService . java to improve clarity and consistency in log messages for
changed the access modifier of the setAuthentication method from public to package - private to allow access to the setAuthentication method from other classes
[ kvm ] add ` ` ready . command . wait ' ' property to make it configurable
updated JDBC _ TABLE and JDBC _ SCHEMA handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in table parameter management
corrected the spelling of " SQLUpdateAUP " to " SQLUpdate " across multiple files to improve code readability and maintain consistency
refactor schemaTypeCache initialization to use synchronizedMap and computeIfAbsent to improve thread safety and simplify schema retrieval logic
refactor header addition logic in StaticServerHttpHeadersWriter to use a loop for better readability to improve code clarity and maintainability by
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to file availability issues
added a directory creation for the storage directory in TestCollector . java to ensure the directory is created for testing purposes
added a chunked streaming mode setting in StarTreeJobUtils . java to improve performance by reducing unnecessary streaming operations
added basicsyntaxchecker , multipletypesyntaxcheckertest , singletypesyntaxcheckertest , and basictypesyntaxcheckertest
hbase - 2248 use hbase . thirdparty . com . google . protobuf . protobuf from hbase - common to hbase
added a test to verify that recursive structure should not cause stack overflow exception in BeanPopulatorTest and created a new Node class to ensure that
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IOException during method invocation
added handling for IllegalArgumentException in UserAccountManagerImpl and refactored HttpClient initialization in ClientFactoryImpl and ConnectivityServiceImpl to improve error handling
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security interceptor support based on user - defined modes
updated SSL socket handling to conditionally disable hostname verification based on a system property to enhance security by allowing users to disable hostname verification for SSL connections
made the ` remove ` method in ` OHLCSeries ` public and added a test for it in ` OHLCSeriesTests ` to
replaced invocation . invoke ( ) with invocation . invokeUrgent ( ) in ClientSchemaService . java and updated assertions in CompactFormat
fix issue with world . destroyjoint ( ) and world . destroyjoint ( ) be call twice .
fix npe in searchfilter when filterstring be null
[ hotfix ] [ test ] move sourcereadertestbase to connector - testutils
added error handling for file not found exceptions in DocumentsStorageProvider . java to ensure proper resource management and prevent potential memory leaks
added new files for ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` for managing before and after hooks to
refactor buffer synchronization logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
added a boolean parameter ` allowTs ` to the ` setExoOptions ` method in ` ProfileHelper ` and updated its usage in `
remove user identifier from the identifier collection in DMRDecoderState . java to ensure that the user identifier is removed from the identifier collection
added a static final Color instance in Color . java and modified the toString method in RailButtonShapes . java to improve code readability and
updated null handling logic in CountAggregationFunction and added a new test for count with null handling options in NullHandlingIntegrationTest to ensure correct handling
set deep property to - 1 in InternalTransaction class to ensure deep state is set for transaction operations
escape the name in the buffer to ensure proper handling of XML characters in the name string
updated File instantiation to use a configurable work directory instead of hardcoded " work " to improve flexibility by allowing dynamic configuration of the work directory
added support for deprecated rules in RuleSetFactory and corresponding test case in RuleSetFactoryTest to ensure that deprecated rules are properly set
fix amd64directcallop to use the codebuffer position instead of the dummy label .
added constants for minimum and maximum stamp values in TimeRange class and implemented a new test for range construction in TestTimeRangeTracker to enhance code
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor metric emission logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
updated conditional statements in DetailFragment . java and added InterceptorFrameLayout in GalleryActivity . java to improve code readability and maintainability while ensuring
fix tank not be able to fill a fluid if it ' s not remote .
added conditional checks for RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to ensure proper handling of RuleAnalysisLegacyBuildRuleView
do n ' t process the dummy pep service if the packet be an iq type .
added a null check for the runtime variable in IntrinsificationPhase . java to avoid potential NullPointerExceptions when intrinsicGraph is null
updated condition to check if active is not empty before calling refreshActiveWork in MetricTrackingWindmillServerStub and StreamingDataflowWorker
pdfbox - 4892 : fix bug in pdfbox - 4892 , pdfbox - 4894 , pdfbox - 4
added canvas initialization and notification handling in LwjglApplet to enhance application lifecycle management and improve user experience
updated the string representation of the Docker configuration in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve clarity and ensure proper handling of Docker
refactor password policy handling in LdapAuthenticationHandler and AccountStateHandler to improve clarity and maintainability of the authentication process
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and set it in ` LdapUtils ` to enable dynamic
refactor Readable class to improve code readability to enhance maintainability and readability of the code
simplified the PDF document loading logic in JsoupNonVisualRegressionTest . java to improve code readability and maintainability by
updated the icon for the share menu in CaptureActivity . java to ensure the correct icon is used for the share menu
updated JRE _ IS _ MINIMUM _ JAVA8 to JRE _ IS _ MINIMUM _ JAVA9 and added JVM _ MAJ
modified the assignment of IS _ JDBC41 to check if the connection timeout is not equal to Integer . MIN _ VALUE to ensure proper handling of
refactor GenericContainer class to improve code readability to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filtered classes in Enclosed . java to improve performance and readability of the code
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasProtocolValidationSpecification classes to enhance code clarity
swapped the order of variables in ChartProvider . java to improve code readability and maintainability
fix : use file . getparent ( ) instead of file . getpath ( )
simplified the return statement in ` JavacParser . java ` and added a new ` ExtraSemiTest . java ` file
added a createdAt field and corresponding methods in User and UserRepository classes , along with corresponding tests in UserRepositoryTests , and updated JpaQuery
updated Test15FloatJNIArgs . java file to improve test coverage for FloatJNI functionality
updated version strings and import statements in mmm plugin . java and ppp plugin . java to improve versioning accuracy and enhance user experience
corrected the substring length in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure correct handling of
[ java ] throw aeronexception when call reentrant on archive callback .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout of 10000 milliseconds to the SslBytesServerTest class to ensure test reliability by allowing more time for the test execution
refactor Peer class to improve readability to enhance maintainability and facilitate future updates
updated RealtimeIndexingCoordinator , RealtimeSegment , StreamProviderConfig , and StreamProviderConfig classes to include new methods for tracking index segments and
added null check before writing to the output to avoid potential NullPointerException when exporting data
refactor RecyclerViewFastScroller to use getScrollThumbRadius method for better readability and maintainability to improve code clarity and maintain
updated error messages in BuckWSServerPortUtils and added a check for tool window instantiation in BuckEventsConsumer to improve clarity of
added a conditional check for Windows platform before setting the ` preventSleep ` checkbox in ` GeneralTab . java ` to ensure that the ` prevent
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
refactor crop and window dimensions handling in QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to support vertical bar layout
added full - screen exclusive mode state management in multiple classes to improve user experience by managing full - screen mode states
[ net . pms . util ] fix stringutil . playeddurationstr ( string , string ) and add unit test
added credential handling methods in DagUtils and updated TezTask to utilize them to enhance the functionality for managing DAG URIs and improve
camel - 14836 : use entryset ( ) instead of keyset ( ) to avoid concurrentmodificationexception
trim whitespace from thread names in SessionState . java to ensure thread names are consistently formatted for better readability
updated the message in the message from " Not yet " to " Not yet . " to clarify that the user accurately reflects
refactor Job class implementation to improve code readability and maintainability
added a new abstract static class ` Unused ` with various fields and methods in the ` Main . java ` file to provide a way to
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and added
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instances instead of a single ` GenericRecord ` to improve data
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and adjusted related logic across multiple classes to ensure that the maximum delegate lock period is
change network rate type from int to integer in NicTO and NicProfile classes to allow for more flexible network rate configuration
removed initialization of CmcExchange and overridden the applySpecification method to streamline the code by eliminating unnecessary dependencies
updated the address handling in ` GossipLocalNode ` and changed configuration file names from " config . json " to " config . conf " to
add system property hazelcast . client . tpc . enabled to disable tpc tpc by default
updated swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple classes to ensure compatibility with the latest
refactor the calculation of ` c ` in ` MutableBigInteger ` and add a new class ` ModInvTime ` for testing modular inv
modified the handling of the ` key ` variable in ` NamedObjectList . java ` to set a default value if ` name ` is blank to
updated cleanupEmptyDir method calls to use cleanupEmptyTableDir instead of cleanupEmptyDir across multiple query compaction classes to improve code clarity and
refactor AsyncCache and Cache classes to improve code organization to enhance maintainability and readability of the codebase
added import for RCFileInputFormat and registered it with Kryo to enable the handling of RCFileInputFormat in serialization
added default methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types for a specific column to enhance type
added error handling for invalid host header parsing in Request . java and corresponding test in RequestTest . java to improve robustness of host header parsing
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for method calls and improved SDK version handling to enhance test reliability and
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to enhance functionality for handling multiple outgoing
changed variable visibility from package - private to private for ` cfsDir ` and ` dir0 ` in ` SegmentCoreReaders . java `
[ te ] add hasmainthreadprofile ( ) method to aggregatedao and aggregaterepository interface .
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to improve error handling
updated the NAME constant from " greekLowerCase " to " greekLowercase " and " uaX29UrlEmail " to
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
danielwagnerhall : use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor
added a list to store unique IDs and removed specific entries from the list to improve data integrity by avoiding duplicate entries
updated SurfaceSyncGroup instantiation to specify the class name for the TaskBarController to improve clarity and maintainability of the synchronization group
refactor GridFsTemplate to use getId ( ) instead of getObjectId ( ) for file deletion to improve code clarity and maintainability by
renamed ` query _ shouldReturnColumnIndexes ` to ` query _ shouldReturnColumnIndices ` and added tests for total size and bytesSoFar
refactor character handling in TextField to use a boolean variable for enter detection to improve readability and maintainability of the code
added a check to return early if the target equals the current instance to avoid unnecessary processing when the target is the same
updated the ` afterSetStatements ` method in ` Block . java ` and ` BlockLexicalContext . java ` to improve terminal handling and
added hashCode ( ) method to IntervalXYDelegate and updated equals ( ) method in XYSeriesCollection to use HashUtilities for hash code generation to
remove nightly test from clientqueuedisruptiontest
reformatted code for consistency and clarity in CloudWatchAppender . java and added a new test class CachingAttributeRepositoryTests . java to improve
corrected the method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in Gson . java
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks for non - empty subtag before canonicalizing language tags in Locale . java and updated LanguageTag . java to improve language tag handling
add config to allow ssh - to - agent to be turn off in kvm agent .
removed the ` public ` access modifier from the ` ScheduledAction ` and ` ScheduledAction ` classes and updated method visibility in ` SchedulerWhen .
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the string contains an " - " character in the filter condition to ensure that the filter does not contain specific characters
updated sortColumnsLabel text to " Natural column order " and replaced UISettings . s1 with UISettings . dmStats in Data
removed the copy of an array from the input array to streamline the code by eliminating unnecessary array copying
updated write method to use htmlEncodeButNotSpace for remoteAddr to ensure proper handling of space characters in session information output
updated topic path in ItemStateTriggerHandler from " / " to " smarthome / items / " to improve clarity and accuracy in
removed unnecessary synchronization in FastHttpDateFormat . java to streamline the code by eliminating unnecessary synchronization
refactor file moving logic to use a asynchronous thread pool for better resource management to improve resource management and prevent potential memory leaks
added two static methods to the WrapTimer class for triggering a timer with a specified period to enhance the timer functionality by allowing a configurable period for
added support for LOCAL _ DATE , LOCAL _ DATE , and LOCAL _ TIME types in TypeStringUtils and corresponding tests in TypeStringUtilsTest to enhance
added a verbose option to the error logging in AbstractStatusReporter to enhance error reporting by providing a verbose option for better debugging
added menu toggle functionality to ClickStartHandler in Header . java and ItemControls . java to enhance user interaction by allowing users to toggle the menu
do n ' t allow vpn connection to be esitablished between same account and customer gateway
updated error handling logic in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to ensure proper error handling and
added error logging for encrypted PDF items in PDFBoxThumbnail and PDFFilter classes to improve error handling for thumbnail and text extraction issues
fix ( zk ) : fix race condition in childlistener . childchanged ( )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
updated the ` deleteItem ` method to use ` getContentResolver ( ) . delete ( ) ` instead of ` deleteRow ( ) ` to
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the parameter type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and implement ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to utilize it for retrieving long values
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for concurrent concurrent invocation verification to ensure that concurrent modification exceptions are
added method to notify roster offline if a user can not find a roster .
replaced calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and ` Partition
reformatted the line of code in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check for extTypeCustomDesers before assignment in MessagePackFactory . java and updated the copy method in MessagePackFactoryTest .
added a system property to set the mock server log level to " WARN " in Main . java to improve logging capabilities for better debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code by
updated scoreMap to use String and Map < String , Map < Float , Float > > instead of Map < Float , Float , Float >
updated bitwise operations in U64 . java from ' & 0x8000000000000000L ' to ' & ' and added a new equals method
updated the headline style for the MainViewModel to improve the visual appearance of the application
updated the notifyChange method to include a check for dark text support to ensure proper handling of dark text support in the wallpaper color information
[ hotfix ] [ checkpointing ] fix npe in checkpointrequestdecider . choosequeuedrequesttoexecute ( )
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS constants to MAX _ POOL _ SIZE and added
replace ` filter ` with ` anyMatch ` in the ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver ` class to improve code readability
fix opencvimagefactorytest failure on window
http : / / issues . apache . org / activemq / browse / amq - 4357 - add prefetch to resource adapter
[ py4j ] fix npe in python4jnetworkexception . getreturnvalue ( )
added @ Repeatable annotation to the Issue class to support repeated issues in the code
updated user properties key from " hcat _ user " to " webhcat _ user " in ` BlueprintConfigurationProcessor . java ` and
updated socket connection logic to conditionally create an unresolved InetSocketAddress based on the " socksProxyHost " system property to enhance flexibility by allowing
updated method signatures in SlotReport and SlotStatus classes to improve clarity and maintainability of the code
removed the import of ClassUtils from ReflectionUtils . java to streamline the code by eliminating unnecessary dependencies
replaced ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ includeCipherSuites ` , and ` _ ciphers `
added a static resource variable and logic to handle the retrieval of the system resource location to improve resource management by preventing potential null pointer exceptions
[ java ] use a constant for the plaintext segment size in streamingaead decryptingchannel and streamingaeadseekabledecryptingchannel
added a test to verify that invalid fallback throws an exception in the circuit breaker to ensure that the circuit breaker does not throw an exception
added SSL connection factory using AllowAllHostnameVerifier and SSLConnectionSocketFactory in AppPage . java to enhance security by allowing all hostname verification for
replaced resetBytesReadCounter ( ) method with setSizeLimit ( 0x7FFFFFFF ) in PerformanceTest . java to improve performance
removed the ` isPreferAES ` and ` setPreferAES ` methods from ` ProtectionPolicy ` and removed it from ` Standard
camel - 14836 : camel - opentelemetry - add log to help debug test failure
[ ec2 ] remove unused test from elbintegrationtest . testloadbalancerinstanceoperations
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity and
added error handling for file creation in DiacriticTest . java to improve robustness by preventing potential InvalidPathException during file creation
hhh - 11818 - ignore test on oracle 11 when use a driver other than ojdbc6
updated error handling and file path retrieval in TextureUnpacker . java to improve robustness by checking for the existence of the atlas image and improve
refactor AmbariManagementControllerImpl to use a locking mechanism for managing changed services to improve thread safety and ensure thread safety during service changes
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet is not closed and modified the closing logic in HiveStatement and HiveQueryResultSet to ensure proper resource management
improve performance of inputstreambodygenerator and add test
[ hotfix ] [ table - planner - blink ] remove the pre - deleted database from the schema map in cluster schema manager ( #
added a check for the " chunkedWriter " state before writing resources in Http1xUpgradeToH2CHandler to ensure proper handling of
added a check for the current item ' s base item ID in EnhancedBrowseFragment and implemented a deleteItem method in FullDetailsFragment to
added a new interface ` RuleBank ` and refactored the ` RuleFinder ` to implement it in the ` CSSParser ` and `
added a try - catch block around the initialization of the cipher in JcaTlsCrypto . java to handle potential exceptions during encryption and decryption process
added two new Java files , TestMonomorphicObjectCall . java and Object . java , implementing native methods for object - related functionality to
replaced the ` removeMetaDataSource ` method calls with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop
hbase - 2598 fix the bug of defaultmemstore . shouldseek ( scan , memstore )
[ hotfix ] [ test ] remove unused local _ state _ directory _ root from taskmanagerserviceconfiguration
updated AlterTimeSeriesStatement to accept a boolean parameter and modified the constructor in AlterTimeSeriesStatement to enhance flexibility in altering time series
simonstewart : add unit test for matchtext ( ) .
added a try - catch block around the retrieval of the " class " string in HelixBrokerStarter . java to handle potential exceptions when
refactor parameter handling in HttpClientIntroductionAdvice . java to use putIfAbsent instead of putAll to improve code readability and maintainability
( chore ) camel - jms : use char [ ] instead of string for password
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2635 :
updated the ` toSortedListWithCounts ` , ` equals ` , and ` isUniformDistribution ` methods in ` Counters ` class to
renamed the parameter ` status ` to ` original ` in the ` initialize ` method for clarity to improve code readability and maintainability
[ gr - 18686 ] fix memory leak in llvmamd64syscallclockgettimenode
updated the handling of variable " vartype " and " name " in PrettyPrinter . java to utilize a variable for better readability to improve
added a null check for ` indexToNode [ currSize ] ` before initializing ` indexToNode [ i ] ` to avoid potential NullPointerExceptions when
refactor DatagramSocket to use a new method for checking filtering to improve code readability and maintainability by centralizing filtering logic
testqueryDNS : migrate testqueryDNS to junit 5 ( # 2267 )
added a new file ` NutchServerInfo . java ` with properties for start date , job , and running jobs to facilit
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource and updated attributes handling in EdgeNGramTokenFilter . java to improve attribute management and
added a timestamp option to CqlInserter and ThriftInserter classes and updated timestamp handling in ThriftInserter and SettingsColumn
refactor DSAParameterGenerator to use BigInteger constants for improved readability and maintainability to enhance code clarity and maintainability by using
fix numberutils . inttointbits ( ) and numbers . longtolongbits ( ) to correctly handle double and double .
updated mask condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and ensure correct
added constraint violation checks for SQLException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
remove setzeroifnotfound ( false ) from remotebrokeroffsetstore and consumermanagepolicy
added a new method ` addTab ` and refactored tab creation logic in ` Tabs . java ` to improve tab management functionality and
replaced instances of ` files . size ( ) ` with ` 0 ` in ` toArray ( new HDFSFile [ 0 ] ) `
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironmentbuilder and mockenvironment
refactor conditional checks in MavenVisitor . java to use if statements to improve readability and maintainability of the code
updated test cases in ZookeeperDataChangedListenerTest to use " MOCK _ NAME _ UPDATE " and " MOCK _ NAME _ REF
added a new file ` FormatCheckingTest . java ` that tests the ` BadHelloWorld ` class with an illegal class name error to ensure
updated line number assignment logic in CodeGenerator . java to ensure proper handling of line number in method execution
added a try - catch block around the method call to handle potential exceptions when retrieving service properties
added methods to create RadioButton instances with specified text , icon , and command groups in RadioButton . java to enhance the functionality of RadioButton
updated the initialization of the cache in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to
polish ` ` change the default capacity from private to public and add an indexed argument to the channel definition .
added a null check for symbolicName before quoting it in OsgiManagementNameStrategy . java to avoid potential NullPointerExceptions when symbolicName is not
add ` ` usemode ' ' system property to modecontribution . load ( )
added error handling for adding and removing shutdown hooks in IOManager . java and improved sleep duration in YARNSessionFIFOITCase .
renamed ` projectRoot ` to ` androidManifestPath ` and updated related methods in ` RobolectricTestRunner ` to improve clarity
added null and empty checks for notPropagatedHeaders in AbstractMessageProducingHandler and updated selectiveHeaderPropagation logic in AbstractReplyProducing
refactor CompareMode class for improved readability to enhance maintainability and readability of the code
added ` HasTests ` interface to ` Arg ` and ` RustLibraryDescription ` classes to implement the ` HasTests ` interface to enhance
updated drawable resource references from ` ic _ recent _ image _ placeholder _ 120dp ` to ` ic _ recent _ image _ placeholder ` to
refactor OnExitTest class to improve code readability to enhance maintainability and readability of the test code
added a method to recreate the taskbar when user preference changes to ensure the taskbar is recreated when user preference changes
refactor HeapDump . java to use reflection for heap dumping based on VM type to improve compatibility with IBMS vms and ensure proper
http : / / issues . apache . org / jira / browse / amq - 4892 - fix session leak in mybat
replaced ` FIREFOX ` with ` IE ` and added new methods ` wdSwitchToWindow ` and ` wdQuit ` to
updated Java version in ` IteratorToFor . java ` and modified initialization of ` SAFE _ COLLECTION _ METHODS ` to ensure
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure that the application is properly stopped when the application is unavailable
updated position and limit handling in ByteBuffer , Heap , StringCharBuffer , and StringCharBuffer classes to improve position and limit validation to ensure proper
replaced ` toUri ( ) . toUri ( ) . toString ( ) ` with ` toMove . get ( i ) . split
added a check for the length length before setting the array in NativeArray and implemented setEmpty methods in multiple classes to ensure proper array deletion and
changed enum visibility from package - private to public in VirtualAuthenticatorOptions . java to allow external access to these enum
added a Document instance to the TestMultiPhraseQuery class and updated the expected length in the result string to improve document handling and ensure correctness
do n ' t assign offline reservation when the reservation be offline .
added synchronization and error handling for the onTimeout method in HttpChannelState . java to ensure thread safety and prevent potential concurrent access issues during timeout
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug logging instead of
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the assignment of ` rows ` to conditionally use ` ConsistencyLevel . LOCAL _ QUORUM ` based on the consistency level
added a condition to check if the model name contains " Home " in HeosDiscoveryParticipant . java and set a serial number in Heos
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j to use AttributeController and AttributeTable for setting node and edge data to improve code readability and maintainability by
added a null check for the ' from ' variable in the SessionManager class to prevent potential NullPointerExceptions when ' from ' is null
nifi - 1748 : move rocksdb metronome to nifi - controller - repository ; deprecate rocksdb .
updated the method to retrieve the value of " IS _ GRANTABLE " from the results object to ensure proper retrieval of the isGrantable
added a logging statement and modified URL validation logic in JavascriptContext . java to enhance user experience by ensuring the URL does not start with " javascript
[ cxf ] make cxftomconsumertest work on macos
added a check for a new column descriptor before modifying the column in LoadTestTool . java to ensure proper handling of column modifications based on the
added implementation of the Disposable interface to the Texture class to enhance the texture functionality by implementing the Disposable interface
added null checks for tldBundleLocation and changed extractWars default value to true across multiple classes to enhance robustness by preventing potential NullPointerException
refactor GoQuorum compatibility checks into a separate method and improve error handling for genesis configuration to enhance code clarity and ensure that GoQuorum compatibility
replace IOException with Throwable for error handling in HttpInput . java to improve error handling and clarity in error reporting
added a condition to skip the Thailand and JP country in LocaleTest . java to address issues related to the JP country in
updated response references from ` Wrapper . class ` to ` HostResponse . HostResponseWrapper . class ` across multiple service and view privilege services to
updated filter equality checks and hash code calculation in FilteredQuery . java to ensure correct hash code generation based on the witness value
reformatted the constructor of FileMenuFilter for consistency to improve code readability and maintainability
ggb - 1369 add support for ` ` geogebradebug ' ' for ` ` text ' '
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
[ spongecommon ] fix npe in spongeforgeeventfactory when there be no entity
updated ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and replaced ` KeyMappingPreparedStatementSetter ` with ` Item
fix compactionstest to use identityqueryfilter instead of range
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added a new ` SpELJudge ` class and integrated it into the ` OperatorEnum ` and ` OperatorJudgeFactory ` to enhance
replace ` = = ` with ` . equals ( ) ` for ` ordinalityType ` in ` LocalExecutionPlanner . java ` to
replaced the use of ` Service . providers ( ) ` with ` Lookup . getDefault ( ) . lookup ( ) ` for retrieving the `
refactor CertBlacklist , ConscryptHostnameVerifier , Java8EngineSocket , Java8FileDescriptorSocket , and ConscryptTest classes
updated initialization of variables in AttributeResolution9 . java and ShadowArscAssetManager9 . java to use long values instead of integers to ensure
updated the fullOptions list from " 1.5 " and " 1.5 " to " 6 " in SetupHid . java to
[ calcite - 3892 ] push project - to - table - source scan rule to support metadata - only projection
added imports for NonNull and SoftReference , and sorted localized names in AboutActivity . java to improve code clarity and maintainability by
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to refresh shared preferences based on the device ' s streaming settings to ensure that the refresh functionality only occurs when live streaming is enabled
added the original exception to the MappingException in AuditConfiguration . java to include the original exception as a cause to improve error handling by providing more context
[ hotfix ] [ test ] fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in CompositeType , aliases , and dynamicCompositeTypeTest to use generics to improve type safety and clarity in type handling
added a new method ` supportsTransport ` to ` GitClientApplication ` and refactored ` RepositoryUrlPanel ` to utilize it to
added a reason string for long press navigation handle enabled in TouchInteractionService and updated getDelegatorName method implementations across multiple input consumer classes to
added null check for mavenMetadata and modified version retrieval logic in ChangeParentPom . java to ensure proper handling of null MavenMetadata and improve
added a check for the " Large Page Support : ( \ w * ) " output in TestLargePageUseForHeap . java to
cloudstack - 21818 : do n ' t migrate event if the usage db do n ' t exist
[ ci ] fix test to work on window
added a new test class ` TestObjectStreamClass ` and modified the ` requireInitialized ( ) ` method in ` ObjectStreamClass ` to
simplified conditional checks in ZoneAwareDiscoveryFilter . java to improve readability and maintainability of the code
changed log level from error to warn for tracing failures in OpenTracingTracer . java to improve error handling for tracing failures
added a toString ( ) method to the Generator class to provide a clearer string representation of registered generators
refactor URI handling in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to ensure correct
added a null and empty check for resource existence in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to
added error handling for API response extraction and validation in AccepttoApiUtils . java to improve logging clarity and ensure proper validation of API response
added conditional logic to allocate vertex size based on Android application version to ensure proper handling of vertex size for Android devices in the application
refactor SybaseASADatabase class for improved readability to enhance maintainability and facilitate future updates
added a forceProjection parameter to the HashJoinInfo constructor and updated related methods to allow for backward compatibility with projections
added a method ` getStringDistance ( ) ` to retrieve the string distance in ` SpellChecker . java ` to provide access to the string
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , and FLAG _ IMMUTABLE constants to AndroidImplementation . java and
added methods to read and append read column IDs in HiveFileFormatUtils and HiveInputFormat to improve code readability and maintainability by central
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to display a toast message to enhance user experience by
added logic to set the service version if it is null in ServiceModule . java and created a corresponding test in ServiceModuleTest . java to
added a new test class ` RawSerializationTest ` for JSON serialization of various collections to ensure correct serialization behavior for various collections and types
simonstewart : introduce sslcertgenerator interface to make it easy to configure the selenium server
refactor the loop structure to use an index - based loop instead of an enhanced for - each loop to improve code readability and maintainability
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to improve test reliability by allowing more
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the functionality of the `
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
refactored test methods in EasyRandomTest for improved clarity and consistency to enhance code readability and maintainability by consolidating test
[ citrix ] catch exception and log it in citrixresourcebase
refactor SslConnection to use a ThreadLocal for thread - safe write operations to improve thread safety and prevent potential memory leaks
updated actor visibility checks and added ancestorsVisible method in Actor . java to improve clarity and functionality of actor visibility checks
added logging for rolling - update step failures in RollingUpdateOpFactory . java to improve error handling for deployment group failures
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in sinkprovider
added error handling for user authentication failures in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve logging clarity and
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and facilitate future updates
updated the default QTYPE assignment to use QParserPlugin . DEFAULT _ QTYPE instead of OldLuceneQParserPlugin . NAME to ensure consistency
added Locale . US to SimpleDateFormat instantiation in WeekDateTest . java to ensure consistent formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and implemented it in ` JavaLanguageServer ` , and created a new ` Main
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` and modified related assertions in ` ClientAPITokenIntegrationTest .
added transaction management methods in DatabaseAdapter and refactored account deletion logic in GncXmlHandler to improve transaction management and ensure proper handling of
replace byte array reading with ByteArrayOutputStream for improved performance to optimize memory usage by avoiding unnecessary byte array allocation
added multiple @ Override annotations and refactored exception message handling logic in MessagingTemplate . java to improve code readability and maintainability by redu
added an implementation of the isAcceptable method in AutoFormatVisitor to check if the source file is an instance of J . CompilationUnit to
updated maxBufferedDocs and RAM buffer size settings in TestIndexWriterMergePolicy . java to improve performance and maintainability of document processing
clear the witness list in the Manager and add a new test for updating witnesses in ManagerTest to ensure that witnesses are correctly updated and
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling potential NoSuchElementExceptions
[ hotfix ] remove log level from flumenode . logenvironment and logversion ( )
added a reindex collection and modified authentication assertions in BasicAuthIntegrationTest . java , and modified DaemonStream . java to implement Runnable in DaemonStream
replaced HashMap with LinkedHashMap for the nodes variable to improve performance and maintain insertion order
added InternalErrorMapper to JerseySupport and updated module - info . java to include it to enhance error handling capabilities by providing a
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by reducing duplication
8274889 : [ jdk - 8296 ] add miss jdk . nio . maxdirectmemorysize and jdk
changed method parameter types from String to CharSequence in StringSubject . java and added corresponding unit tests in StringTest . java to enhance flexibility in
add jfr - internal to checkgraalintrinsics . java and add jdk / jfr / internal / jvm . countertime
rename IntUtilsTest class to PrimUtilsTest to improve clarity and consistency in naming conventions
updated the DataSource initialization to use a default value if forCompactor is true to ensure proper initialization of the DataSource based on the forCompactor
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
refactor updateTextButtonWithDrawable method to use Drawable directly instead of Drawable . ConstantState to improve code readability and maintainability by redu
replaced ` ByteArrayInputStream ` with ` StringReader ` and updated import statements in ` XmlParser . java ` and ` YamlParser . java ` to
added a method to rewrite coalesce children in RexNodeConverter and registered the " coalesce " function in SqlFunctionConverter to enhance the
camel - 17446 : camel - hl7 - fix unit test after upgrade to spring 3.0 . 0
set the context class loader for the JavassistProxyFactoryFactory to ensure proper context class loading for the JavassistProxyFactory
refactor DefaultDateTypeAdapter constructor to use ' final ' keyword for clarity to improve code readability and maintainability by using ' final
reformatted formatting in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI handling and query parsing to improve code readability and maintainability
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline the entry filtering process to improve performance by reducing unnecessary
changed log level from fatal to warn for error handling in FSHLog . java to improve logging clarity by providing a more informative severity
refactored the NodeMapIterable class to implement the Iterable interface and updated iterator methods to improve code organization and maintainability
renamed the PredicateDefinition variable from ' predicate ' to ' subPredicate ' for clarity and consistency to improve code readability and maintainability
added a check for non - empty fields before adding project aggregation in MongoRecordReader and modified the return logic in RexToMongoTranslator to
http : / / issues . apache . org / jira / browse / amq - 4357 - add admin to list if no
replaced MultiFields usage with SolrIndexSearcher for term retrieval in multiple Q parser plugin classes to ensure proper handling of null and empty terms
updated the return statement in ConstantBeanHolder . java to include the identity hash code of the bean to improve clarity of the representation of the
simplified the logic for determining the primitive type in GroovyParserVisitor . java to improve readability and maintainability of the code
[ gr - 4892 ] remove unused code in frameinfoqueryresult and javalangsubstitutions
updated timeout values for blockingFoo and blockingBar in SedaBlockWhenFullTest . java to improve test reliability by adjusting
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to ensure correct length calculation based on the position and buffer size
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
added a condition to exclude the user column in the IconDB to ensure that the component and user information is included in the database
fix checkstyle issue in net / apache / activemq / defaultmqproducerimpl . java
added a boolean parameter for classfileOnly and modified resource whitelisting logic in ClasspathElement , ClasspathElementDir , and ClasspathElement
added a method to fix baremetal foreign keys in the Upgrade410to420 . java file to ensure that foreign keys are correctly
removed the IJava2DRenderer interface and its implementation from Java2DRenderer class to streamline the rendering process by eliminating unnecessary
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying when the audio track is shut down to ensure proper
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling upstream tasks to improve performance and maintainability of upstream task management
refactor StreamType class to improve code readability to enhance maintainability and readability of the code
updated assertion message in Recording . java to include additional context to improve clarity of assertion messages for better debugging
updated FilestorePage and RootPage to use RequiresAdminRole and modified user management in RootPage to enhance security by enabling admin role
ignore camel - elasticsearch - rest test that fail on slow machine
added a check for lifecycle class type before processing methods in ExpressionControlBusFactoryBean . java to ensure that methods are only accepted if they are
updated button references from " leftButton " and " rightButtonFiat " to " buyAltcoin " and " sellWith
camel - 1774 : camel - restlet - add option to not allow route in the restlet endpoint .
refactor createNextBlock and createNextBlockWithCoinbase methods to remove the ' final ' modifier from parameters to enhance code clarity and
removed Serializable interface from BTreeMapJava and updated test cases in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling and
added null check for cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions during startup failures
reformatted conditional statement for clarity in Main . java to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to remove unused JWSVerifier class to streamline the codebase
added functionality to close system windows when triggered from AltTab in OverviewCommandHelper . java to ensure proper resource management and prevent potential memory leak
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to use getSupportFragmentManager ( ) to improve user experience by ensuring
updated MimeUtil . parseCharset to include " UTF - 8 " as a parameter in RestAdapter . java to ensure compatibility with UTF - 8
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField component
refactor LogFormatTest to use TestUtilities for serialization to improve code readability and maintainability by centralizing serialization logic
updated method calls to use ` previousUntilLastClause ` instead of ` previousClause ` and modified the ` GroupByFillDataSet ` constructor to
added validation for negative array size and improved argument handling in JAXWSExceptionBase . java to enhance error handling for negative array sizes and ensure
test ( refactor ) : migrate ctunresolvedimporttest to junit 5 ( # 2269 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to improve thread stability by reducing
[ hotfix ] [ test ] set default slot share group to ` ` region ' ' in miniclusteritcase
added title property and its getter methods in ShadowActivity , updated ShadowAlertDialog , ShadowTextView , and ShadowToast classes to include i
replaced Apache Commons Logging with Apache POI logging in POIFSFileSystem . java to improve logging consistency and maintainability
refactor alarm code handling in InstarHandler . java to use string literals instead of string literals to improve readability and maintainability of alarm
update localmapstats when map . delete ( ) do n ' t count remove operation count
refactor status handling in Response . java to use a switch statement to improve code readability and maintainability
added a method to find the javac location in CheckResourceKeys . java and modified the loop to iterate through JavaFileManager locations to improve
add ` ` project - name ' ' option to create additional settings for stable channel
added a new test class ` DeprecatedStubbingTest ` for verifying deprecated stubbing behavior in Mockito to ensure the behavior of stubbing
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
added nml and NX to the list of rule for the ' WHNP ' and ' NP ' in EnglishGrammaticalRelations
add a system property to disable rsa key exchange by default
replaced variable name ' output _ reader ' with ' reader ' for consistency to improve code readability and ensure proper resource management
added OAuthFactory and serviceHandleId fields to PubSubAPI and SDMAPI classes and implemented deletion methods for service and access token management to enhance
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java
added UpdateRegionLocationPlan to ConfigPhysicalPlan and updated logging levels in ProcedureManager and DataNodeInternalRPCServiceImpl to enhance functionality and improve
added a new file ` FileDialogLeakTest . java ` that tests the finalization of ` FileDialog ` using ` CountDownLatch
hbase - 2249 addendum addendum to testopentableincoprocessor
fix trufflefeature . isinterruptible ( ) to return false for uninterruptible implementation
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
changed the condition from checking if ` dims [ 1 ] . disi ` is null to checking if ` dims [ 1 ] . disi
refactor ExoPlayerTest , DynamicConcatenatingMediaSourceTest , FakeMediaSource , FakeRenderer , and ExoPlayerRenderer to improve
added support for Java 9 versioning in Constants . java and Helper . java to enhance compatibility with Java 9.0 and above
updated FileReporter instantiation to cast null to String and File types to ensure proper type handling and prevent potential NullPointerExceptions
changed the condition from checking if end - to - end encryption keys exist to checking if the end - to - end encryption keys exist to ensure
added functionality to enable and hide the home button in the action bar in DirectMessageConversation . java to enhance user experience by allowing users to navigate
added GET _ USER request support and updated PROTOCOL _ VERSION from 5 to 6 in RpcServlet . java and RpcUtils . java to enhance user
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable compatibility with different operating systems
replaced direct reference to ` startClass ` with a variable ` originalStartClass ` to improve code readability and maintainability by reducing
add a local variable to dexbody so that it can be reuse with a different type .
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` event . getSuppliedResponse ( ) ` in ` TestAsync
kristianrosenvold : fix nurserostering of unsupported look and feel in commonapp
corrected the regex pattern in AppPage . java to ensure correct matching of version strings in the application
refactor animation listener implementations in LauncherAppTransitionManagerImpl . java to improve clarity and maintainability of animation handling
updated the exception message in DumpedPrivateKey . java to use the correct version instead of base58 to improve clarity of the error message for
use newofferpayload . getExtraDataMap ( ) instead of offerpayload . getExtraDataMap ( ) in EditOfferDataModel . java to ensure correct data
updated the logic for creating PageParameters based on the milestone ' s open status to ensure proper parameter creation based on the milestone status
increase the number of pipe battery from 640 and 640 to 80 in the Wood pipe to accommodate additional battery
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` method to include blueprint name and revision to enhance cluster management
set default value of downgradeAllowed to true in UpgradePack . java and add a test for it in UpgradePackTest . java to ensure
updated ` scanQName ` and ` scanQName ` methods to use ` NameType . ATTRIBUTENAME ` instead of ` NameType .
added a new configuration for emulating system load libraries and refactored library loading logic to enhance flexibility in managing system load libraries and improve
replaced calls to ` getAppNameComparator ( ) ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePagedView
added a call to closeEntry ( ) in DefaultPlatformManager and modified file creation in FatJarStarter to ensure proper resource management and
enhanced error messages in the ` doTest ` method and updated assertions in ` TestSecretKeyCredentialHandler . java ` to include additional parameters to
camel - 1774 : fix routebuilderfinder to work with spring 3.0 . x
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 2249 add dfs . support . append to testfulllogreconstruction . testfulllogreconstruction
added a ` reuseAddress ` flag and multiple setter methods in ` DatagramSocketOptions ` to allow dynamic configuration of buffer size and traffic class
fix ` ` server shut down ' ' message in glowserver and serverconfig
[ java ] remove deprecate locatable interface from the internal package
updated error messages in VersionInfo . java for clarity to improve clarity and accuracy of error reporting for schema fields
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to stream
reformatted code in HandshakeHandler . java for consistency to improve readability and maintainability of the code
reformatted the closing brace in Navigator . java to improve code readability and maintainability
updated access modifiers from private to package - private in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest . java to
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests to enhance query
refactor group by expression handling in CalciteSqlParser to use a dedicated method to improve code readability and maintainability by reducing duplication
refactor FileChannelLinesSpliterator and FileChannelLinesSpliterator to utilize AtomicInteger for buffer reference counting to improve resource management and ensure proper
refactor LdapUtils to use a local variable for validator retrieval to improve code readability and maintainability by reducing redundancy
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified the ` CircuitBreakerTest ` class to use it to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in mmm Launcher . java and ppp
[ webui ] change upload upload option from ajax to progressbar
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
added synchronized keyword to the ` addExportedCount ` and ` getExportedCount ` methods in ` EntityGraph . java ` to ensure thread safety
updated the import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil to ensure compatibility with the latest version of IntRangeUtil
updated HttpParser to handle encoded HTTP headers more accurately to improve error handling and ensure correct encoding of encoded headers
updated layout resource from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to align with the new layout structure for better
updated string concatenation in SLWTTextListing . java to include position and j to improve clarity of output messages for better debugging
updated ForceLeaderTest and HttpPartitionTest to conditionally check for tlog replicas and added a new ForceLeaderWithTlogReplicasTest class
refactor Thread class to improve performance to enhance performance and maintainability of the code
refactor template file suffix handling in AbstractConfigurableTemplateResolver to improve readability and maintainability of the code
camel - 1744 fixed the issue of cxfpayload and cxfbinding do n ' t support namespace : :
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java and added a new SQL insert statement in TestFunctions . java to improve readability and ensure accurate SQL
added configuration checks for valid transactions and write IDs in GenericUDTFGetSplits . java to ensure proper configuration of valid transactions and write IDs
replaced empty ArrayList and ArrayList with Collections . emptyList ( ) for columnNames , columnTypeProperty , and columnTypes in JsonSerDe . java to
added null check for bookpath and improved debug logging in DataHolder . java , and introduced a new method hasNoInitialImage in Picture
updated the ` manufactureStrings ` and ` addToStringTable ` methods in ` SSTDeserializer . java ` and added a new test
added a constant for the default column value and modified the column retrieval logic in AppPreferencesImpl and ExtendedListFragment to improve code clarity and
updated the " diff " field in Platform . java and its corresponding test in ComparisonFailureWithFieldsTest . java to clarify the purpose
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` and modified conditions in ` ClippingMediaPeriod ` and ` Sample
removed " / api / " prefix from API path annotations in OkexV3 . java to streamline the codebase by removing unnecessary " /
updated comparison logic for x1 , y2 , and x1 in LineUtilitiesTests . java to ensure correct calculation of the result based on
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
log warn when defaultdrmsessionmanager be access on the wrong thread .
added support for the METHOD type in the VariableContext and corresponding tests in TestVariableContext to enhance functionality and ensure correct handling of member and method
added unit tests for invalid compilation unit and profile string in ExperimentParserTest . java and removed the asNullableBoolean method in ExperimentJSONParser .
[ java ] fix position calculation in piece and share peer .
added HttpClientProperties parameter to NettyRoutingFilter and related classes to enhance HTTP response handling by allowing configurable response timeouts
replaced instances of ` getNativeLinkTargetGroup ` and ` getNativeLinkTargetInput ` with ` getTargetForPlatform ` in ` CxxLibrary
add unit test base on user forum issue
added support for handling RexFieldAccess in RexNodeConverter and updated RexNodeConverter to utilize it to improve field access handling
replaced direct usage of QueryLogEntry . values ( ) with a static final array to improve code readability and maintainability by encapsulating the
[ http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3995 ] add
updated certificate handling logic in PKCS12KeyStore . java and refactored certificate loading in StoreSecretKeyTest . java to improve clarity and functionality
added reflection access checks in NativeObject and Bootstrap classes and refactored method names in ReflectionCheckLinker to improve code clarity and maintain
removed the ' public ' access modifier from constructors in CollisionMap . java to simplify access modifiers and improve code readability
changed the method signature of getRawInputFromTransactionInput from @ NotNull to @ Deprecated and added a null check for the input parameter to indicate that
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement for improved readability to enhance code maintainability and
cloudstack - 3892 : remove unused region _ id parameter from user / system . account . setuser ( )
added handling for EncryptedDocumentException in OldExcelExtractor and created a corresponding test case in TestOldExcelExtractor to ensure compatibility with EncryptionDocumentException
[ gr - 18686 ] add extra _ image _ build _ argument ( ) for native image benchmark
simplified the visibility setting of the holder image in TimeLineCursorAdapter . java to improve code readability and maintainability
increased sleep duration from 10ms to 50ms in BatchingStateChangeUploadSchedulerTest . java to improve test reliability by allowing more
refactor the creation of the EXTERNAL _ FILES _ DIR to handle null type and improve directory deletion logic to enhance code clarity and
refactor exception handling in ExceptionFactory to use Class . forName for better clarity to improve error handling and maintainability of the code
increased WAIT _ TIME _ MS from 10000 ms to 60000 ms in LauncherInstrumentation . java to increase the wait time for
updated import statements and added AUD extension handling in ConnectOAuth2RequestFactory , ConnectRequestParameters , and ConnectTokenEnhancer to support
remove default value for breakonfirsterror in camel - kafka
added a new constant ` selectableItemBackground ` with a value of 0x10a13 to facilitate the selection of items in
consolidated multiple import statements for trade - related classes into a single wildcard import and added a placeholder method for placing stop orders to stream
updated event type assignment logic in TxnSetOperation . java to ensure correct event type handling when the record is null
added a new file ` ResumableRandomAccessFileListener . java ` that implements the ` ResumableListener ` interface to facilit
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added logic to set the size of format records in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer in favor of flinkkafkapro
updated the condition for determining compressed chunk length in CompressedInputStream . java to ensure accurate calculation of compressed chunk length based on the maximum compressed length
add idempotent support for camel - spring - data - redis
fix vanilla repair not use metadata here ( # 7795 )
added a conditional check for real - local repository handling in LegacyLocalRepositoryManager to ensure proper artifact path resolution based on the layout type
added checks for task manager initialization and improved error handling in LocalInstanceManager , JobManager , and TaskManager classes to ensure proper initialization of
added detailed artifact deployment information to the AbstractArtifactResolutionException class to enhance debugging capabilities for artifact resolution processes
replaced calls to ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a new method
added a new method ` findByEntries ` in ` FeedEntryStatusDAO ` for querying FeedEntryStatus objects to enhance the functionality of FeedEntry
added thread execution handling in ` ContextImpl . java ` and improved test cases in ` BlockedThreadCheckerTest . java ` to ensure
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to include a ` String ` parameter and improved error handling for
updated file reading logic in LoadContactsTask . java to handle different Android SDK versions to ensure compatibility with newer Android versions and improve compatibility
replaced setter methods for remote address and hostname with direct assignment to simplify the code by eliminating unnecessary setter methods
added a null check for shadowClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime
added a condition to check if tlsMutualAuthenticationRequired ( ) is true in NettySslContextFactory and ExampleNettySslContextFactory to ensure
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation by allowing access to the consumer and producer
refactor conditional statements in PageChangeListener . java and enhance frame class loading in FrameRenderer . java to improve code readability and maintainability by
updated warning message from " email " to " SMS " in CommunicationsManager . java to clarify the purpose of the warning message for
# 1188 - add draft query optimization to ebean ( # 1188 )
added error handling for IO exceptions in MultipartBody . java to improve robustness by preventing resource leaks during file transfer operations
fix ( cttypereference ) : fix typo in cttypereference
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix attach file to work directory when create a new file
added LoadOptionsBuilder and modified SchemaCrawlerOptions creation to include load options to enhance schema crawling capabilities for better user experience
changed the package and method name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . load
replace throwing an exception with returning null in TestReader . java to improve error handling by returning null instead of throwing an exception
added methods to set the name , enabled , and expanded properties in the ProjectProperty class to enhance the functionality of the project property ' s functionality
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper resource management and prevent
[ hotfix ] [ doc ] fix typo in datastreamjob
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and prevent potential resource leaks
camel - 1744 : fix the issue of cxfendpoint . getserviceclass ( string ) throw classcastexception .
added a condition to check if the protocol is " h2 - 14 " and modified the logic for determining if the protocol is " h2
refactor LambdaToMethod to use ListBuffer for parameter symbols and modify conditional checks in ClassFileVisitor to enhance code clarity and ensure correct handling
updated regex patterns in CoordinationTransformer . java for improved clarity to enhance readability and maintainability of the code
increased the timeout duration in the copyURLToFile method from 5000ms to 60000ms to allow for more time for the file transfer
added a call to setSlop ( phraseSlop ) in QueryParser . java to set the slop value for the mpq based on phrase
increased LONG _ PRESS _ DELAY from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test timing
increased the maximum number of servers from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
[ scenegrab ] add ` ` write screenshot ' ' and ` ` load game ' ' task to screengrabber
updated visibility logic in EditShareFragment to conditionally set the visibility based on the presence of edit options to enhance user experience by allowing users to
updated the progress calculation in DepthController . java to ensure it does not exceed a minimum value of 1.1 f to ensure that the progress
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Packet ` classes to streamline the packet
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for service before accessing its presence in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction
[ pantheon ] add ` ` hidden ' ' flag to pantheon command
added a condition to exclude " CoroutinesRoom $ Companion " in the AndroidConfigurer to ensure that only relevant room classes are processed
modified the access modifier of the isSupported method in NegotiateAuthentication . java from private to public to allow access to the context class loader for
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unnecessary initialization logic
http : / / issues . apache . org / jira / browse / amq - 4892 - add thread name to jms reply
refactor AuthenticationProvider and TargetObject classes to improve code organization to enhance maintainability and readability of the codebase
added methods to open and close MC blocks in PdfDocument to ensure proper handling of tags in the PDF document
log4j2 - 1344 add unit test for patternselector
simonstewart : replace unsupportedoperationexception in hta mode with selenium rc
added a new ` MwThankPostResponse ` class and modified the ` thank ` method in ` Service . java ` to implement
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to use it to enhance socket handling capabilities and improve code clarity
updated the initialization of revokingStore and adjusted the maximum size calculation in AbstractRevokingStore to improve code clarity and ensure proper
added two test cases for the HQL collection implicit join functionality in HQLTest . java to ensure correct behavior of the query with multiple calls
replace expected and actual assertions with line breaks in NonVisualRegressionTest . java to ensure consistent line termination across different operating systems
refactor file commit handling in IndexWriter and SegmentInfos classes to use a collection of files to commit to improve clarity and maintainability of
updated method visibility from ` final ` to ` public ` in ` BaseError . java ` to allow access to the ` @ Final ` annotation
added validation for user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the percentage is within valid range to prevent potential errors
added a condition to check if the old login is displayed in the AuthenticatorActivity to ensure the legacy login functionality is only displayed when the old login
rename StreamNetworkThroughputBenchmarkTests class to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
simplified the response page setting logic in EditTeamPage . java to improve code readability and maintainability
updated debug log message to include exception details to improve clarity of error reporting for plugin credentials initialization
refactor the shutdown logic for the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential resource leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
added a method to create a dynamic partition specification in the BaseSemanticAnalyzer class to improve code readability and maintainability by encapsulating conditional
refactor rounding logic to use a new method ` getRoundHalfUpFactor ` for improved clarity and functionality to enhance code readability
added the ` visitDirectory ` method to ` JarDirectoryStep ` and its implementations in ` DirectoryTraversal ` and ` JarDirectoryStepTest `
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` to handle JWK set input to enhance user experience by
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , VersionBlockTreeTermsWriter , and VersionBlockTreeTerms
[ gr - 13434 ] fix miss truffle boundary in invokespressonode . resolveparameterklasses ( ) .
changed the default value of " fetcher . threads . per . host . by . ip " from true to false to disable threads per host by
simplified the conditional check for queryTimeout in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash in HaskellGhciRuleIntegrationTest
refactor ReplicaPosition class for improved performance to enhance performance and maintainability of the code
set initial delay for network usage stats update task to avoid infinite loop
updated interpolator usage in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and Interpolators classes to utilize a new FINAL _
adjusted the height calculation for navBar ' s visible bounds to include a swipe length based on display density to improve user experience by adjusting
added a new module - info . java file for the org . eclipse . jetty . http3 . server module to define module dependencies
updated value handling in JsonType and JsonTest classes to use constants to improve code clarity and maintainability by avoiding potential null pointer exceptions
simplified the assignment of the ` ctx ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ hotfix ] [ checkpointing ] use ` get ( ) ` instead of ` getOptional ( ) ` in ` checkpointconfig `
updated ` InnerClassesTable ` to use ` Element ` instead of ` TypeElement ` and added a new test for finding inner class references in package
updated the command string formatting in TimestampCheck . java to include an additional space to improve readability and maintainability of the code
replaced FluentIterable with Arrays . stream for file collection in ChromeTraceBuildListenerTest . java to improve code readability and maintainability by
[ dubbo - 1340 ] fix register config to be optional .
fixed crash when otr mode be disable .
added outline size , transparency , and color properties to NodeLabelRenderer and updated renderProcessing method to include outline size and transparency to enhance rendering capabilities
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean parameter from false to true in Win32FontManager . java to improve font management functionality
added a null check for the variable ' v ' before visiting it to avoid potential NullPointerException when ' v ' is null
update jdtbatchcompiler to use ierrorhandlingpolicy instead of gethandlingpolicy ( )
added content alignment and text alignment features to LabelBlock . java and updated tests in LabelBlockTests . java to enhance text alignment functionality and ensure
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
modified the isLoopback variable type from boolean to Boolean and added null checks for networkInterface to improve robustness by preventing potential NullPointerExceptions
added Locale parameter to the ` fromRfc1123DateString ` method and updated related calls to use ` Locale . US ` to enhance date parsing
updated the download method in FileDownloadViaProxyTest to include a specific file extension to ensure the test correctly downloads files with a specific file extension
added a new property ` OUTPUT _ NO _ HITS ` to ` AbstractJsonQueryElasticsearch ` and modified the ` handleHits ` method to
change aggregation ratio to a single hour in the month instead of a decimal to simplify the code and improve readability
[ java ] fix potential resource leak in election
remove uncheck run from readfilesp and streamfilesp
refactor widget filtering logic in PageChangeListener . java to improve readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration to improve error handling and
refactor CategorizationFragment class to improve code readability to enhance maintainability and facilitate future updates
changed the status message from " reachable = false " to " reachable " in HueLightHandler . java to indicate that the bridge reports light
add loading flag to fmlclienthandler , and add isloading ( ) method in gamesettings . java ( # 74303 )
updated return statements in UI , BlockInventoryFragment , and BlockInventoryFragment to include " unit . millions " and " unit . th
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for using reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for reserved
added tests for serialization and deserialization of maps in MapTest . java to ensure correct handling of nested maps in JSON format
[ fix ] fix coordinate offset issue in geometryutils
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by using a more descriptive
improve error message when a testplan can not be find .
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl for consistency and clarity to improve code readability and maintainability by using a
modified the handling of the ` argIdent ` variable and added a null check before adding it to the parameters to ensure that ` argIdent `
updated the default protocol setting in JettyHttpComponent9 . java to use the protocol from the scf instead of a hardcoded value to
set displayVolume to true in VolumeVO . java to ensure the displayVolume variable is set to true for better control over volume display behavior
updated the version method to accept a boolean parameter and added a new VersionTest class for testing to enhance versioning functionality and ensure compatibility with Java
updated condition checks in ChangeLogParameters . java and added logic to check for global change logs to improve clarity and functionality of global change logs
changed log level from warn to debug in JtaTransactionManager . java to change log level from warn to debug for transaction loading failures
hhh - 1358 - skip test that fail in basicformatterimpl cause exception in sql string formatting
reformatted code for better readability and maintainability to improve code clarity and maintainability
updated status bar size calculation in multiple fragments to account for the ` MainActivity . isPopup ` condition to ensure the status bar size does not
enable the cha option in espresso and make it final .
http : / / issues . apache . org / activemq / browse / amq - 4892 - add more debug log to
refactor JodaTimeRangeRandomizersTest to use AssertJ for improved test coverage to enhance readability and maintainability of the test
refactor xsd handling in WebDescriptor to use redirectEntity for different Jetty versions to improve compatibility with newer Jetty versions and ensure compatibility with
fix : add a check for ` ` node ' ' status in readiness . isready
replaced instances of ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to improve clarity and consistency in
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC
added security checks for security manager before accessing package access checks in ObjectStreamClass and ObjectStreamField to prevent potential NullPointerExceptions when security manager is
removed unused imports and modified method implementations in Utils . java , and changed UGSCommandCount in XLCDCommunicator . java to
refactor DefaultMetricsTagProvider to use a HashMap for tags instead of an ImmutableMap to improve code readability and maintainability by reducing dependency
updated the order of the suite added for MockBrowserTest in ClientDriverSuite . java to improve code readability and maintainability
changed the default level from Level . OFF to Level . ERROR in opt2 from Level . OFF to Level . ERROR to improve error handling by
changed instance variables to be final in IconNormalizer . java for better immutability to ensure immutability and prevent potential memory leaks
added a boolean flag ` firstCallPrepareDo ` to control the behavior of the ` prepare ` method based on its value to enhance flexibility
refactor showWorkspaceAndExitOverviewMode and hideAppsCustomizeHelper methods to use Workspace . State to improve code readability and maintainability by
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and updated
modified the ` incomingAssociations ` method to include a ` boolean ignoreInvisibleAssociations ` parameter to control the behavior of the ` incomingAssociations `
cloudstack - 7892 : remove private ip from capacity table when delete private ip .
updated the relative URL format in ProfileServlet . java to include a note about the ' Basic Usage ' section on the Async Home Page to improve
fix npe in modelresolver when ref field be not define
rename CasCoreConfigurationWatchConfiguration and CasCoreEnvironmentBootstrapConfiguration classes to CasCoreConfigurationWatchAutoConfiguration and CasCoreStandaloneBootstrapAutoConfiguration
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated UUID generation and refactored unique variable handling in ConfigStore . java and added a new test in ItemUIDtoHueIDMapping
added logic to set the picture drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the picture is set correctly based on the cache
updated error messages in HiveConf . java to clarify compaction behavior for full CRUD tables and minor compaction settings
added a null check for the storage path before verifying the connection state in FileDisplayActivity to ensure proper handling of non - null storage paths
refactor resize threshold checks to use a dedicated checkResize method to improve code readability and maintainability by centralizing resizing checks
refactor LDAPConnectionService class for improved readability to enhance maintainability and facilitate future updates
[ flink - 13946 ] [ table - planner - blink ] deprecate aggregatedefinition and add aggregatedefinition . getaggregations
removed multiple debug tracing logs in TouchInteractionService and RecentsAnimationDeviceState classes to streamline the code by eliminating unnecessary tracing
added a condition to check if the class name starts with " com . intellij . rt . junit " in AbstractSoftAssert
updated assertions in TestMultiSearcher to use hits2 and hits3 instead of hits to improve accuracy of length assertions for better accuracy
added a new file ` LucenePackage . java ` with a static method to retrieve the ` LucenePackage ` to facilitate
corrected the calculation for sizeInBytes in RAMDirectory . java to correct the logic for adding sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter and BloomKFilter classes to improve performance and
added a null check for the drawer toggle before accessing its properties in MainActivity . java to prevent potential NullPointerExceptions when the drawer toggle is not
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to improve code clarity and suppress warnings
added logic to determine if the class loader is a system JAR and modules in the Scanner class to enhance flexibility in determining if the class loader
refactor ` getAuthors ` method to accept ` BibEntry ` and ` FieldName ` as a parameter to enhance flexibility in retrieving author
added a method to cancel core recovery in CoreContainer . java to improve core recovery handling and ensure proper recovery cancellation
replaced direct calls to System . currentTimeMillis ( ) with a new method currentTimeMillis ( ) for consistency to improve code readability and maintainability by
simplified the condition for clicking the first item in the found list to improve code readability and maintainability by eliminating unnecessary
[ hotfix ] fix checkstyle violation in pgproperty
added security - related fields and updated the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java and its tests to ensure proper default values are
added a check to set exponentSize if it is zero to ensure exponentSize is correctly calculated based on primeSize
replaced direct usage of ` File ` with a new method ` getUsableSpace ` in multiple files to improve code readability and maintainability
updated the ` accumulate ` method in ` DistinctSqlAggregation ` and added a new test for it in ` DistinctSqlAggregationTest `
added a new test method ` call _ login _ should _ execute _ post _ login _ activities _ for _ user _ on _ successful _
refactor ExtractorFramesRare to use a single dictionary path for ExtractorSpanishStrippedVerb to improve flexibility in handling different
refactor CharArraySet to simplify code and improve readability to enhance code clarity and maintainability by eliminating unnecessary type checks
updated error messages and assertions in MuxerWrapper . java to ensure track count cannot be set after adding track formats to improve clarity and ensure
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` and modified the ` addAssetsDirectory
set character encoding to UTF - 8 in PinotClientRequestServlet and refactor string processing in StringDictionary to ensure proper handling of UTF - 8
updated case name from " Logical Analyzer " to " Logic Analyzer " and replaced applications with tile icon icons in InstrumentsFragment . java
refactor the instantiation of the vector class to use a singleton pattern and improve readability to enhance code clarity and maintainability by reducing
removed syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
[ # 1397 ] add ` ` no response ' ' to feedback question
added TestLoggingExtension to DiagramRendererTest . java to enable logging functionality in tests
camel - 18720 : camel - ibatis - do not replace underscore in property name when use camel case mapping .
added support for the VIOMI Internet electric water heater 1A ( 60L ) device in MiIoDevices . java to
replaced direct access to getSslSessionData ( ) with a local variable for SSL session data to improve code readability and maintainability by
added a new file CreateNewSpreadsheet . java to create Excel sheets using Apache POI to facilitate the creation of sheets with
renamed ` ttl ` to ` timeToLive ` and updated related methods in ` CacheProperties ` , ` RedisCacheConfiguration ` , and `
updated content URI references from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and LauncherModel classes to
updated the wiremock version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect the latest version
updated synchronization from using ` lucidaFontName ` to ` this ` in ` SunFontManager . java ` to ensure thread safety
added a condition to check if the character is ' < ' before ' in DocClassUtil . java to ensure proper handling of empty characters in
removed String . format from the return statement in Workspace . java to simplify the code by eliminating unnecessary string formatting
added a message to inform users when no validation errors are found to enhance user experience by providing feedback when no validation errors are found
updated imports and refactored web resource configuration logic in IntegrationTestContextLoader . java to enhance the handling of WebApplicationContext hierarchy and improve resource
modified scroll handling logic in Component and Container classes and updated component retrieval logic in JavaSEPort and JavaSEPort to improve component responsiveness
removed unnecessary whitespace in RamlType . java to improve code readability and maintainability
added a new class ` ClientStat ` and updated method signatures in ` StatsService ` , ` StatsService ` , and ` DefaultStatsService
replaced occurrences of " $ 1 " and " $ \ n1 " with " $ \ n1 " in CellContentConverter . java
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 .
[ mondrian ] fix typo in mondrianproperties . java
added thread dump printing functionality and updated launcher permission handling in CustomLauncherTest and LocalManagementTest to enhance thread management and ensure proper permission management for
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the image processing process by eliminating
added a conditional check for symbol presence before converting storeType to ensure that conversion only occurs when the symbol has a slot for storeType
refactor the initialization logic in ContainerMediaChunk . java and InitializationChunk . java to handle cases where nextLoadPosition is zero to ensure proper
added UTF - 8 encoding support for IndexWriterConfig and PrintStreamInfoStream in BaseLockFactoryTestCase . java to enhance compatibility with UTF -
tika - 1357 -- add a ' dynamic ' attribute to the serviceloader so that it can be use by tika .
added package - info detection and error reporting for comments in DocLint . java and created new test classes in DocLintTester . java to
added a new import statement for IMPORT _ CMD in DataImportHandler . java and updated the condition in DataImporter . java to include it to
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest . java ` to ensure that inner
removed unused import of android . util . Log in JettyService . java to streamline code by eliminating unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to handle workspace screens
[ java ] add ` ` / quitquitquitquit ' ' to kill the jvm
[ java ] fix npe in llvmannegiondatamanager . index ( )
added a check for Windows operating system and filtered Teredo names in Tests . java to skip tests that are not Teredo to
show an error dialog when a contact be not connect to the server .
replaced ` getReaderContext ( ) . getRegistry ( ) . registerBeanDefinition ` with ` BeanComponentDefinition ` in ` AuthenticationConfigBuilder .
updated the drawBitmap method parameters in FastBitmapDrawable . java to use a null value instead of the left and top dimensions to ensure that the
fix yymmdd - > yymmdd for meitrack and totem protocol
changed access modifiers of getFontPath and getPlatformFontPath methods in SunFontManager and X11FontManager classes to improve encapsulation and clarity
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
replaced specific exception handling with a more specific assert statement for ` ExecutionException ` in ` ClientMapStoreTest ` and ` ClientMapStoreTest
added a ` keepEmptySentences ` feature to the ` DocumentPreprocessor ` , ` MaxentTagger ` , and ` Tagger
updated the ` createArtifactSubdirectory ` method to return a boolean indicating success or failure to improve error handling and provide clearer error messages for
updated ` systemProvider ` to be ` final ` and refactored ` JavaLanguageServer ` to use ` NO _ MODULE _ COMPI
added a null check for the resource answer in DirectAgentAttache . java to ensure that a null answer is returned to avoid potential NullPointerExceptions
refactor sendEmail method to throw MessagingException instead of a try - catch block to simplify error handling and improve code clarity
fix PipeItemsObsidian and PipeItemsObsidian to handle null input
updated date parsing methods to accept a locale parameter to ensure correct parsing of mathematical functions based on the specified locale
added an ` IncludeDecals ` checkbox to the ` StorageOptions ` class and integrated it into ` StorageOptChooser ` to enable or disable
updated generateDocumentation method to include a null parameter in Liquibase . java and added suppress warnings in LiquibaseTest . java
updated HiveProtoLoggingHook to set a queue for performance logging and refactored test assertions in TestHiveProtoLoggingHook to improve performance
corrected a typo in the log message from " Begining " to " Beginning " in multiple files to improve code readability and
updated the version check in ` ignoreRecordAttribute ` to include the major version to ensure compatibility with the latest version of the class file
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication functionality to ensure correct handling of LDAP attributes in LDAP connections
updated import statements and condition checks in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve code cl
fix npe in reloadmanager when save - on - save be enable .
updated the implementation of the VisibleAdvance class to improve performance and maintainability of the code
fix # 1187 : fix # 1187 : handle terminal exception ( # 1187 )
added a condition to check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic number columns in Sparklines
replaced direct calls to getGroupId ( ) and artifactId with Objects . requireNonNull for null checks to improve code safety and prevent potential NullPointerExceptions
added null check for ` apiInfo ` before assigning it to ` api ` to avoid potential NullPointerException when ` apiInfo ` is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added texture management methods and improved shader management in PhotoPanel and FlameRenderer classes to enhance texture management and ensure proper shader management
updated scene scene size and added a new context menu for list items in various editor classes to improve UI responsiveness and enhance user experience with
updated the condition for appending CSS characters in the CSSParser class to ensure proper handling of carriage return and newline characters
added a boolean variable ` isDecorated ` to control the look - and - feel decoration behavior in ` UIServiceImpl . java `
removed the ' this ' keyword from the SQL query and adjusted the usage of ' remove ' method in HostRoleCommandDAO to simplify the query
updated test function names from F5 _ UNKNOWN and F6 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _ COMMAND and F6
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and maintainability of swipe handling logic
replaced HostDatabase with ColorStorage in ColorsActivity . java to use ColorStorage instead of HostDatabase
refactor String class methods for improved readability to enhance maintainability and facilitate future updates
removed unused logger imports and initialization in multiple classes to improve code clarity and maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ` to return an array of entries from the ` MapGlobalResolver ` class to provide a way to retrieve
added multiple assertions for the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` PublicMethed `
updated JUnit imports from JUnit 4 to JUnit 5 in CUFilterTest . java to align test with the latest JUnit 5 features
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ; ' '
changed the access modifier of the augmentSuccessViewModelObjects method from static to non - static to allow subclassing of augmentSuccessViewModelObjects
added assertions to verify that ' id ' and ' name ' fields are present in the Metamodel for the ' Person ' and ' Name '
removed the ` conf ` parameter from the ` Outlink ` constructor calls in multiple parser classes to simplify the creation of ` Outlink ` instances
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple files to simplify method
added modifiers to the type expression in UseLambdaForFunctionalInterface and modified type expression handling in TypesInUse to ensure proper handling of unused imports
replaced ` appendClassSelector ` with ` createFileSet ` in ` TestNGAntTask . java ` to simplify the addition of class files
added a check for the root input type of Aggregate in HiveCardinalityPreservingJoinOptimization . java to ensure that the root input is
fix npe in registryevent when registry be not active
reformatted the assignment of x3 and y3 variables in Intersector . java to improve code readability and maintainability
added default methods ` sbeDecodedLength ( ) ` and ` sbeLimit ( int limit ) ` to ` MessageDecoderFlyweight
updated Elasticsearch version handling and added a new test for cluster health in ElasticsearchContainerTest . java to ensure compatibility with the latest elasticsearch version and improve
[ java ] use bytebuffer . copyof ( ) instead of buffer . copyof ( ) in work receiver
added version ID and updated cluster definition handling in ClusterDefinition . java and GSInstallerClusterProvider . java to support versioning and improve cluster
camel - 14850 : camel - ftp - remove unused setconfiguration method from camel - ftp
[ zeppelin - 1340 ] set status to readiness when interpreter be not ready
modified local variable handling in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java
added a check for basic constraints in the ForwardBuilder class and created a new BuildEEBasicConstraints class for certificate building to ensure proper handling of
added initAfterFirstDbConnection method to JdbcPostgresqlDAO to ensure correct initialization of database data based on database version
updated WebSocket client to specify maximum message size and added buffer size validation in AbstractWebSocketConnection to ensure that the input buffer size does not exceed the
refactor delete handling logic in SegmentReader and add a test for undeleteAll functionality in MockRAMDirectory to improve clarity and ensure
added null check for scopes in ClientRegistration and updated corresponding test cases in ClientRegistrationTests to ensure proper handling of null scopes and improve test coverage
added null checks for orderBy before adding them to the expression and explanation to avoid potential NullPointerExceptions when orderBy is null
replaced JUnit assertThat with Hamcrest MatcherAssert in ClusterEntrypointTest . java to ensure compatibility with Hamcrest
cloudstack - 2287 : do n ' t delete back - up snapshot when the vm be not in kvm state ( # 2
refactor log initialization in HiveServer2 to use a variable for the log4j message to improve code readability and maintainability by redu
added a check for non - empty tasks before processing the first asset in AssetManager . java to prevent potential NullPointerExceptions when there are no tasks
change the return type of deletenode ( ) and deletepubsubutil . deletepublickeyslistnode ( ) from void to boolean
fix a bug in relationentity . gettimesearchpagespec ( ) that return null instead of null .
added validation to check for empty barcode in Code128Reader and Code39Reader classes to ensure proper exception handling for empty barcode scenarios
changed the type of ` suites ` from ` TreeSet ` to ` LinkedHashSet ` in ` SSLContextImpl . java ` to ensure uniqueness of the `
added a method to check for control characters in Escaper . java and updated expected string in InternationalizationTest . java to improve character
added support for CharSequence return types in ProviderSqlSource and changed method return type from String to CharSequence in SqlProviderTest to enhance flexibility in
updated import statements and added null checks for aliasChildren in InternalMNode . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
renamed variable ` synthetic ` to ` pruned ` and updated related logic in ` JavaTemplate . java ` to improve clarity and consistency in
added a method . setAccessible ( true ) to the WidgetInterceptor class to ensure the method is accessible before use
updated ConnectorConfigGenerator to conditionally set literal initializer based on the " database . server . id " name to ensure that the literal initializer is
updated the Mozilla string in AbstractRipper . java from Macintosh to Windows NT 10.0 and added a new version of
added a web interface menu item that opens a URI based on the server ' s host to enhance user experience by allowing users to navigate to the
updated HandleGetter and HandleGetter classes to improve value handling and code clarity to enhance code readability and maintainability by centralizing value management
added error handling for record creation in EncryptedSlideShow . java to improve robustness by preventing ArrayIndexOutOfBoundsException during record creation
[ hotfix ] [ runtime ] add debug log to mmapiov1
added a null check before loading the battle pass manager in the Player class to avoid potential null pointer exceptions during avatar postLoad
updated Docker image configuration options in PortForwardingContainer . java to enhance security by enabling agent and TCP forwarding features
added a large array and forced garbage collection in ThresholdTest . java to ensure proper garbage collection behavior during tests
updated conditional checks in StdErrLog . java and added new test cases in StdErrLogTest . java to improve logging clarity and ensure
fixed - rremoteservice . getremoteservivce ( ) method do n ' t work with service name
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to manage the selection state of ` RadioButton ` and ` Check
updated the import statement from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align the activity ' s functionality with the
[ hotfix ] fix checkstyle violation in brokercontroller
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for better resource management to improve resource management and ensure proper resource management
refactor color retrieval methods in ProgramGridCell and Utils classes to improve code clarity and maintainability by directly using the current activity ' s
corrected the spelling of " peer " in multiple method names from " participantTransportAddressChanged " to " peerTransportAddressChanged " to
added multiple type adapter registrations for various Android artifact , Gradle plugin project flags , BundleInfo , SourceProvider , and ViewBinding options to
removed duplicate entries in TestPayloadCheckQuery . java to streamline code for better readability and maintainability
updated the ` putChar ` method in ` ConsoleReader ` and modified the ` ConsoleReaderTest ` to use ` ByteArrayOutputStream ` for output to
added user - related information to the command execution in BaseCommand . java to improve user feedback during command execution
move modulesupport and exportclassloader from org . graalvm . compiler . test to org . graalvm . compiler . api
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to check if " one . util . streamex . emulateJava8 " is false in StreamExInternals . java
updated file paths in DecalTest , MusicTest , and SimpleDecalTest to use " sys . png " instead of " wheel
removed redundant calls to registerReceiver and unregisterReceiver in Launcher . java to streamline code for better readability and maintainability
updated import statements in HostsRemovedEvent . java to improve code clarity and maintainability
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property to ` ClientDetailsEntity ` , modified ` ChainedTokenG
replaced direct calls to ` write ` with ` writer . write ` and added HTML encoding for session attributes to improve code readability and maintain
added link annotations for PhrasePrefixQuery and SpanQuery in the Query class to improve documentation clarity and maintainability of the code
updated condition checks from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` CommentsInserter . java ` and
refactor isLiteralString and isThisElementAnOperandInOperandInABinaryStringConcatenation methods to improve type checking for binary elements to
updated method signatures in AbstractAssert , DateAssert , and ExtensionPoints to accept an Object instead of A to improve type safety and clarity in
updated the ThrowingFunction interface to use a generic type parameter instead of a generic Object to improve type safety and clarity in the exception handling
added getter and setter methods for ` getUploaderBehaviour ` and ` setUploaderBehaviour ` in ` AppPreferences ` and updated ` Preference
fix ( prettyprinter ) : fix npe in typefactory . getelements ( ) .
replaced direct instantiation of BitmapDrawable with Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s bitmap
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable ` c ` to improve clarity and
updated the page indicator resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a volatile integer variable ` reinvocations ` and updated logging messages in ` BasicInvocation . java ` to track the number of reinv
updated the calculation for topPadding in DefaultLookAndFeel . java to correctly account for the inner height of the element to ensure proper layout
added a break statement in Recognize . java to ensure proper handling of break statements in the code
added haptic feedback functionality for home screen in multiple classes to enhance user experience by allowing users to lock the home screen during touch events
refactor formula handling in ExcelBatchReader and add tests for text and numeric formula formats in TestExcelFormat to improve code clarity and ensure
fixed bug 137187 - immutablefield no long trigger on assignment in anonymous inner class .
added a private ` userAgent ` field in ` CommaFeedConfiguration ` and modified the user agent retrieval in ` HttpGetter ` to ensure the
updated the ` @ XmlAttribute ` annotation to be optional in ` AvroDataFormat ` , ` BarcodeDataFormat ` , and ` Base
changed log level from info to debug for missing file logging to reduce log verbosity and reduce verbosity
rename QueueTest class to QueuedPipeTest to improve clarity and consistency in naming conventions
updated the version check logic in BukkitMain . java to use OfflinePlayer for checking unique ID to ensure compatibility with OfflinePlayer ' s
camel - 14836 : camel - core - optimize defaultroutescollector to avoid npe
added a vertexColor property and modified drawing logic in PShape3D . java to enable dynamic color updates based on the vertex state
added a new parameter ` isPkColumnFiltered ` to the ` printForeignKeys ` method and updated related references in ` DiagramRendererOptionsTest
removed the import of Shadow and simplified the way matrix values are retrieved in ShadowMotionEvent . java to simplify the code and improve readability
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
simplified conditional checks for class definitions in GroovyEngine . java to improve code readability and maintainability
move brandingservlet to branding . plugin and add plugincontextlistener to enable plugin initialization and destruction
removed redundant print statement in NativeCodeGenerator . java to streamline output by eliminating unnecessary line breaks
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in `
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause _ Test . java ` to ensure that the ` thrown
updated variable names for flatten and packing in AutomaticDependencies . java to improve clarity and maintainability of the code
corrected the spelling of " allowedScopes " to " allowedScopes " in ClientDynamicRegistrationEndpoint . java to ensure proper handling of allowed
simonstewart : add test for firefoxdriver . setprofile ( ) and firefoxdriver . setcapability ( ) .
added route description property and related methods to manage route descriptions to enhance flexibility in managing route descriptions in the application
refactor JavacTreeMaker class to improve code readability to enhance maintainability and facilitate future updates
added a line to set the weight of the edge in ImporterCSV . java to ensure that the edge ' s weight is set correctly for
fix tariff cost per hour when use tariffs
updated SQL query in DatabaseMetaData . java to include additional column definitions and modified byte array assignment to ensure correct handling of column default values and improve
added a null check for binarized sentences in SentimentAnnotator . java to ensure robustness by throwing an AssertionError when Binarized
updated the ` toString ( ) ` method in the ` User ` class to include additional information about the user ' s authorities to improve debugging
updated the body extraction logic in MessageHelper . java to handle null messages to improve error handling by providing clearer feedback when the message body is
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to task deployment
fixed roster access to work with group that do n ' t exist .
added a classpath reference for the Maven test classpath in AbstractJRubyMojo and removed unnecessary unchecked suppression in CucumberMojo
replaced the variable ` rtype ` with ` mtype ` in ` MethodHandleImpl . java ` and updated assertions in ` MethodHandlesTest .
added import statements for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in multiple Java files to enhance code clarity and
updated width and height checks from ` > ` to ` ! = ` in URLImage . java to ensure that the image dimensions do not exceed
added a condition to check if the name does not end with " META - INF / " and modified the handling of package names to ensure that
refactor ` createImageToFileSystem ` and ` createImageToStorage ` methods to use ` scheduleBackgroundTask ` for UI tasks to improve performance and
updated StackWalkerTest to use a dynamic expected value based on the version check to ensure compatibility with the latest version of the test
changed the access modifier of the addViewportJob method from protected to public to allow access to the addViewportJob method from other classes
removed the ' num - output - partitions ' parameter from the buildFlow method and updated related method signatures to simplify the code and improve readability
removed server restart and no - exit settings from TestDatabase . java to streamline server configuration and improve test reliability
added null and empty check for block in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to ensure proper handling of null or
added harvesting time retrieval functionality in multiple classes to enhance the display of the total harvesting time based on the ice agent
updated font rendering parameters in ParticleEditor . java to improve visual appearance and visual appearance
added keyserver _ port handling for Hadoop configuration in UpgradeCatalog240 . java and updated corresponding tests in UpgradeCatalog240Test . java to ensure
added a transparent background color to the SvgViewerFactory class to enhance the visual appearance of the svg viewer
removed the minSdk configuration from ShadowKeyguardManagerTest and updated the @ Implementation annotation in ShadowKeyguardManager to simplify the code and improve
renamed the parameter ` first ` to ` varargs ` in the ` containsExactly ` method and updated its implementation to improve clarity and
updated Bandwidth builder to use refillGreedy and added a check for a non - empty key in Bucket4jFilterFunctions to
refactor GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code organization and readability to enhance maintainability and
updated the Generator class to accept a hook set for materialized views and modified transformations accordingly to ensure that lineage generation does not evaluate transformations based on
added error handling for NoClassDefFoundError in REngine . java to set supported to Boolean . FALSE to handle potential NoClassDefFound
refactor TraceFilter and TraceWebFilter to use SpanAndScope instead of Span to improve span management and encapsulate span - and - scope
added null check for getCause ( ) in AbstractUpdateCommandStep . java to ensure that the exception message is returned when the cause is not null
updated SolrServerException to include the base URL as a parameter to improve error handling by providing the base URL of the exception
inverted the landscape setting logic in HSSFPrintSetup . java to ensure correct handling of landscape behavior in print setup
updated null return logic in JavaVoidObjectInspector to handle potential null values to improve robustness by preventing potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure proper error handling for invalid argument names
added background location listener functionality for location updates in AndroidLocationPlayServiceManager to enhance user experience by allowing custom background location handling when the activity is
changed the condition from checking if ' primitiveType ' is not ' ! = ' to checking if ' primitiveType ' is equal to ' GL
trufflestring : fix array index out of bound exception
added a method to set command list status in ComboBox to enhance user experience by allowing command list selection
nifi - 1748 : escape the alias filename in tl file when create a certificate authority
updated command syntax from " zkcli . sh - cmd " to " zkcli . sh - zkhost " in ZkCLI . java
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ` instead of ` =
added a conditional check for remoteGrpcStatus before posting the console event to ensure that the build fails only when the remote gRPC status is
reformatted method signatures in XYItemRenderer . java for consistency to improve code readability and maintainability
added a new entity ID to the entity entity in the entity processing logic to ensure that the entity ID is added when the entity is not already
added a private static method ` getErrorString ` to handle various error codes in GLSurfaceViewAPI18 . java to improve error handling
added a method to retrieve supported locales in FeatureRegistry and improved error handling in InfoRequestHandler to enhance locale support and provide clearer error messages
updated the server URI handling in RFC2616BaseTest to use " http : / / myhost : 1234 " instead of " serverURI
added a method ` addToHelperList ( ce ) ` to the ` Construction ` class to enhance the functionality of the helper list
added a condition to skip the first of the " [ [ " ] " escape sequence in GlyphLayout . java to ensure proper handling of character
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to use AccessController for privileged actions to enhance security by
added null checks for file path and folder before populating directory list in ReceiveExternalFilesActivity to improve robustness by preventing potential NullPointerExceptions
added null check for m _ serviceLoaderClassLoader before loading ServiceLoader to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not set
updated the calculation of deltap in TubeCalc . java to remove unnecessary debug logging and simplify the calculation in BarrowmanCalculator . java
added type checks for Node before adding columns in TimelineControllerImpl . java to ensure that columns are only added when the object is an instance
add brokeradminapplication . registerextracomponents ( ) method to broker starter .
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the functionality of SQL
peergroup : do n ' t pick up the preferred version of the peer if we have a witness protocol
fix the abstract builder not update properly .
updated configuration handling to utilize a Supplier for RatisConsensus configuration to improve flexibility and maintainability of the consensus snapshot configuration
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a check for the ManagedService annotation before unregistering JMXHelper to ensure that JMXHelper is only registered if it ' s annotated with the
tika - 1187 -- fix packageparser to detect non - unicode entry name
added a new file ` TestSplitThruPhiDivMod . java ` with methods to calculate the power of two division results to ensure correct
added methods to lookup generic interface types and superclass templates in TemplateRegistry to improve flexibility in handling generic interfaces and superclasses
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to increase memory usage for better performance
updated the descriptions of the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to include comments about available symbols to clarify
refactor byte array initialization and length handling in TransferCompletionHandler . java to improve memory management and ensure proper handling of buffer sizes
replaced ` WindowFocusListener ` with ` WindowAdapter ` and updated method names in ` SIPCommMenu ` and ` SIPComm
refactor error handling in SemanticAnalyzer to check for null before throwing a semantic exception to improve robustness by preventing potential NullPointerExceptions during table
added functionality to create a center extent for the skeletal mesh in SkeletonRenderer . java to improve the rendering of the skeletal
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added ComponentScan annotation to SpringWebConfig class to enable scanning of components in the application
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the code by eliminating unnecessary method calls
added a test for installing package information in ShadowPackageManagerTest and modified logic in ShadowPackageManager and ShadowApplicationPackageManager to ensure correct
refactor AvailableSettings class for improved clarity to enhance maintainability and readability of the code
added constructor and methods for TransactionCapsule in TransactionTrace . java to enable dynamic initialization and cleanup of transactions
add client property to enable shuffle member list in cluster ( # 3892 )
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
replaced integer fetchSize with ThreadLocal fetchSize in QueryProcessExecutor to improve thread safety and maintainability of fetch size handling
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the purpose
removed the import of ExecutionContext in TaskletStep . java to streamline the code by eliminating unnecessary dependencies
initialized the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure proper initialization of the title variable
add empty body to asynchttpclientcall when no body be present
deprecate the embeddedserverinstance interface in favor of the new one
update macadapter to use reflection for register mac event .
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related references to improve cl
added a return statement to the ` toEnum ` method in ` HandlerLibrary . java ` to improve code readability and maintainability
change hideUnprivilegedObjects field from non - final to final in PgConnection . java to ensure immutability of the hideUnpr
change log level from info to fine in ThreadedAcousticScorer . java and update import statements in AudioDataSourcesTest .
added a check for Android Q and saved Giphy video URL in IOUtils . java to ensure compatibility with Android Q devices and ensure compatibility with
fix ( activiti - engine ) : add deserialization of value field to dbsqlsession . adddeserializedobject ( ) ( #
refactor multiple ticket registry and service classes for improved consistency to enhance maintainability and readability of the codebase
simplified the retrieval of the new logger instance by using ` computeIfAbsent ` to improve code readability and efficiency by using ` computeIfAbsent
hbase - 2248 remove dataoutputoutputstream from hbaseobjectwritablefor96migration and hbaseobjectwritablefor96migration
updated the " hive . stats . column . autogather " configuration from false to false in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for enhanced class logging
added a new method ` getDefaultProviderName ( ) ` to the ` Platform ` class and updated the provider name handling in ` StandardNames ` to
added imports for Captor and Captor annotation processing in MockitoBeforeTestNGMethod . java to handle Captor annotations in
added checks to verify that class and method names are enabled and not empty in TestSuiteBuilder . java to improve error handling and provide clearer
updated import statements and modified method signatures in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure proper handling of
use graphhopperosm instead of graphhopper ( ) . init ( ) in import
simonstewart : add retry option to handlesession . get ( )
changed the visibility of mHideSysUiScrim from final to non - final and added preference management for showing the system UI scrim
refactor call cancellation logic and improve error handling in OkHttpCall and CallTest classes to enhance code clarity and ensure proper cancellation of calls
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and maintainability of swipe handling logic
updated RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to enhance security by allowing custom matcher
added " IF " to the list of conditions in DeferredAttr . java and created a new abstract class ImplicitLambdaConsideredForApplic
update integration test for j2kt and j2kt
added unit tests for display metrics initialization in DeviceConfigTest . java and refactored setDimensions method in DeviceConfig . java to improve test
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified timestamp initialization in PinotDataTypeTest . java , and refactored
updated the icon resource used in RootCursor from logo to mipmap . ic _ launcher to align the icon with the new mipmap
added content text setting to errorBuilder in FileUploader . java to improve error handling by displaying content in error messages
refactor the implementation of the ConcurrentHashMap class to improve performance and maintainability of the code
added methods to adapt and adapt user trades in AbucoinsAdapters , AbucoinsTradeService , and TradeDemo classes to enhance
updated method calls in PlotSquared , Claim , Delete , and SetBlockFast classes , and modified player clearing behavior in Delete and SetBlockFast
simonstewart : add support for the htmlunit driver for firefox and internet explorer .
added support for handling VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the database
refactor cookie versioning logic in SetCookieSupport . java to improve clarity and maintainability of cookie handling logic
added synchronization around cache type mappings in LibFFIContext . java to ensure thread safety when accessing the language map type
updated InboundBuffer to use ContextInternal and refactored checkContext method to improve thread safety and clarity to enhance code reliability and
added a new method ` deadServerNoTimeout ` in ` LdapTimeoutTest . java ` and modified the ` waited ` variable in `
corrected the spelling of " UniocdeData . txt " to " UnicodeData . txt " to ensure consistency in the usage
camel - 16750 : camel - cxf - add inout header to the cxf test case
refactor multiple UI classes for improved consistency to enhance maintainability and readability of the codebase
added boosterset parameter handling in ComponentAssemblySaver . java and changed return value in BoosterSet . java to false in BoosterSet
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 389 . add
replaced instances of ` BLOCKCHAIN __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` and updated interval
replace InternalError with a return statement that returns false to improve error handling by returning false instead of throwing an exception
replaced mortbay logging imports with Apache Commons Logging and added a static final Log instance to improve logging consistency and maintainability by
http : / / issues . apache . org / jira / browse / amq - 4892 - remove the chunkedtransfer option from
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper handling of attributes during parsing
added a polling period parameter to the VerificationAfterDelayImpl class and modified related methods to handle assertion errors to enhance the verification process by providing a
added a compaction configuration and modified the masking condition in the SemanticAnalyzer and QueryCompactor classes to ensure proper handling of compaction scenarios in the
[ zeppelin - 1348 ] add jar file to the container if it do n ' t exist
hbase - 2798 fix checkstyle violation in hbaseadmin # gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to potential issues
updated the calcXBounds method in BarLineChartBase , CombinedChartRenderer , Renderer , and BarLineScatterCandleBubble
added a try - finally block to manage the reader ' s content and error handlers to ensure proper resource management and avoid potential memory leaks
added code to release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it
added a null and closed check before closing the ResultSet in JdbcExecutor . java to avoid potential NullPointerExceptions when the ResultSet is not closed
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to align driver versioning with the
fixed bug 1244447 - usestringbufferlength now return false for empty stringbuffer .
removed error logging statement from RemoteSparkJobMonitor . java to simplify error handling by eliminating unnecessary logging
updated createDb method to return a Connection object instead of void to ensure proper connection management and prevent potential resource leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 2249 add option to disable off - peak compaction for hstore ( daniel daniel )
updated BitstampDepositAddress to handle both " address " and " depositResponse " in the unmarshalling method and added unit tests for
replace IllegalStateException with a response . abort ( IllegalArgumentException ) in BufferingResponseListener . java to improve error handling by providing a more informative exception
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` in ` ProjectView . java ` to ensure
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and replaced ` HashMap ` with ` ConcurrentHashMap ` to
refactor network interface handling in OptionsTest . java to use a while loop for better readability to improve code clarity and maintainability by
refactor the validation logic for valid checksums in ChangeSet . java to improve readability and maintainability of the code
added a clone method to the BufferedChecksumIndexInput class that throws an UnsupportedOperationException to ensure that the method does not throw an unsupported operation exception
replaced Math . sqrt ( x * x + y * y + y * y ) with radius * radius in Circle . java to ensure
updated frequency band assignment logic in P25Channel . java and added method overrides in P25ExplicitChannel . java to ensure proper handling of frequency
renamed ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` in ` GestureDetector . java ` to
set default replicate _ on _ write to false by default
added a new query parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in ` Util ` to
added a ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and corresponding tests in ` TraceCallableTests
updated error handling in FileActivity and FileDisplayActivity to use result . getMessage ( ) instead of result . getData ( ) to improve clarity
updated ` ForeignIncubatorQuicheConnection ` , ` JnaQuicheConnection ` , and ` QuicheConnection `
updated the method call in JavascriptContext . java to include an additional boolean parameter to enhance functionality by allowing the execution of the method
removed unnecessary parameters from TableCell constructor calls in BaseTextFormattingHelper and TableCell classes to simplify code and improve readability by eliminating
added a new file ` TracingAutoConfiguration . java ` for auto - configuration of tracing beans to facilitate tracing functionality in the application
added a new Para variable ` secondP ` and modified the addition of ` p ` to use it to improve code clarity and ensure
refactor the ` getPrunedQueryableSegments ` method to accept a list of segment names instead of a single queryable segment to improve
refactor VertxBufferTest class to improve code readability to enhance maintainability and facilitate future updates
refactor date extraction logic in MessageSubmissionChunk and add a new TestMessageSubmissionChunk class to improve code readability and facilitate
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports of SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to throw it with ` WriteResult ` and ` MongoAction
added a return statement to the jobCompletionFuture ( ) method in JobCoordinationService . java to ensure that the jobCompletionFuture ( )
updated the method name from ` bitsLen ` to ` bytesToHumanReadable ` and added additional MIME types to improve clarity and functionality of
replaced MergePolicy with TieredMergePolicy in TestUpgradeIndexMergePolicy . java and added a test method in TestMergeOnFlush
added a conditional check to return early if overview state is not enabled to prevent unnecessary execution when overview state is not enabled
updated error log message in CpuNDArrayFactory . java to include a link to the API documentation to improve clarity of error reporting for CPU
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for contextInitialized and settingsModel loading to enhance flexibility by allowing
added null checks for input parameters in FilterLeafReader constructor to ensure that both fields , TermsEnum , DocsAndPositionsEnum , and Leaf
add defaultsecretkeysizeprovider to jcecrMFencryptorbuilder , and add test
updated IOException to use the message from the original exception message instead of a hardcoded message to improve error reporting by using the original message instead of
replaced multiple @ Inject annotations with @ Inject annotations in multiple Java files to streamline dependency injection and improve code clarity
updated assertions in BundledDistributionTest . java and added database user assertions in PostgreSQLTest . java to enhance test coverage and ensure correctness of
[ hotfix ] [ runtime ] add pipeline . name config option to streamexecutionenvironment
refactor scaling logic in OverviewState . java to handle two - panel layouts to improve layout responsiveness based on device profile type
updated IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and modified the PopulatorTree
removed unnecessary zone parameter from getMaxTime and getMinTime methods in DataUpdateManager and StorageUtils to simplify method signatures and improve code clarity
[ j2kt ] add isqualified flag to thisreference .
updated regex pattern in XhamsterRipper . java to match both " wmde . " and " xhamster . " to
make glowworld . getall ( glowentity . class ) work again
[ flink - 2279 ] [ table - planner - blink ] fix oracle dialect to support schema name .
fix console filter for path with ` ` ( ' ' ) ' '
added functionality to select and deselect all files in the FileMenuFilter and related classes to enhance user experience by allowing users to select all files
[ java ] fix incorrect term offset calculation in networkpublication .
[ java ] fix typo in guildupdateownerevent javadoc
added a conditional check to increment inPortalTicks based on creative status to ensure that the inPortalTicks value does not exceed a specified limit to
added support for compressed chart data in ClusterMonitorTileSkin and updated chartPane spacing calculations to improve visual appearance and support for compressed data in
refactor multiple template template classes for improved consistency to enhance maintainability and readability of the codebase
updated the calculation of ` lengthDataBits ` and ` numberTriplets ` in ` Base64 . java ` to use ` long ` type
removed unnecessary null check for header in RendererConfiguration . java to simplify the code by eliminating unnecessary null checks
cloudstack - 3892 : do not change disk offering when scale cpu and memory of vm with custom service offering
updated import statements in HitbtcAdapters . java and modified Order . Builder to use LimitOrder . Builder instead of Order . Builder to
rename idle count to consecutive idle count in LLRealtimeSegmentDataManager . java to improve clarity and consistency in variable naming
updated the description URI for the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
added a condition to check for preciseExchangeAmount in ParticipateAssetIssueActuator . java to ensure proper handling of non - negative precise
removed a loop that checks if the index exceeds 10 in FeedUtils . java to streamline the code by eliminating unnecessary loop
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the functionality of HDF4 file parsing
[ calcite - 6092 ] [ table - planner - blink ] add test for scala - 6092
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintainability
added methods to quiet close all AutoCloseable instances in CloseHelper . java to improve flexibility in handling multiple AutoCloseable instances
updated confirmation button text in RemoveFileDialogFragment to use common _ yes instead of a hardcoded value to improve user experience by providing a more
added null checks before drawing images in Pixmap . java to avoid potential NullPointerExceptions when image dimensions are non - zero
replaced ReflectionHelpers with a reflection - based method for defining a class in UnsafeAccess . java to improve code readability and maintainability by
updated regex pattern in GUIUtil . java and added multiple test cases in GUIUtilTest . java to improve regex matching accuracy and ensure correct validation
refactor conflict handling in CachedRowSetWriter to use a long for conflicts instead of a boolean flag to improve clarity and maintainability of
[ hotfix ] [ sdk ] add support for pubspec . yaml file
added a condition to return the reference if it equals the current instance in ReferenceMemory . java to ensure that reference assignments are only returned when the
added file existence check for seed files in Injector . java and improved error handling in Injector . java to enhance reliability and provide clearer
added a condition to check if ` hideOriginal ` is true in the ` FloatingIconView ` class to ensure that ` originalView `
updated the calculation of maxNodes and modified the condition for full unroll maxIterations in DefaultLoopPolicies . java to ensure correct maximum size calculation
added logging for unsupported texture coordinate types and implemented a method to check for texture coordinate types to improve error handling and provide clearer logging for unsupported
added error handling for file deletion in EncodeActivity and improved input validation in DecodedBitStreamParser and MatrixUtil to enhance robustness and
[ hotfix ] add miss implementation of seek and close method in producer and consumer
updated the substring method to use ` oldPrefixLength ` instead of ` locate ` and added a new query setting for prefix length to improve accuracy
replaced ` addAll ( collection ) ` with ` addAll ( collection ) ` in ` JSONSerializer . java ` to initialize ` convertedValsList
added a deprecated constructor to the AbstractTimer class that accepts a PauseDetector and baseTimeUnit parameters to indicate that the constructor should not be used
added a nightly build warning message in MainWindow . java to inform users when the version of Universal Gcode Sender is a night
updated the ` getResponsesSortedByRecipient ` method to include a ` sortByTeam ` parameter and modified the logic for sorting responses based on team
corrected a typo in the return statement to clarify the purpose of the return statement
deleted the CacheApplication class and replaced its usage with CommonsApplication in CommonsApplication and ShareActivity to streamline the codebase by elimin
replaced instances of ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet class to improve code structure to enhance maintainability and readability of the code
refactor configuration updates in RuntimeEnvironment to use ResourcesManager for compatibility with KitKat and above to ensure compatibility with newer Android versions and
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` StackManager
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during indexing
added new package imports for XML resolver helpers and readers in CheckPackageAccess . java to ensure compatibility with the latest XML resolver utilities and readers
renamed methods from ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency
added handling for LoopExitNode instances in GraphUtil . java to ensure proper processing of loop exit nodes in the graph
replaced ` RecyclerView ` with ` WidgetsRecyclerView ` and updated related methods in ` SearchAndRecommendationsScrollController ` to
added a check for terminal support in ConsoleReader . java to ensure proper handling of unsupported terminal scenarios
changed the data type of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` Integer ` in ` CloudExitableDirectory
added a session validity check in AbstractSessionCache and updated session attribute handling in RemoveSessionTest to ensure proper handling of session data integrity and ensure
added null check for columnNames before processing index references in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when columnNames is null
replaced Vector with ArrayList for managing RadioButton instances and added action listener methods to improve performance and flexibility in button management
refactor UserManagerCompat classes to use UserManagerCompatVNMr1 , UserManagerCompatVL , and UserManagerCompatV
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` AbstractDatabase ` ,
added MAX _ MISMATCH _ RULES _ TO _ PRINT constant and refactored related logic in ActionGraphCache . java to
added two new classes , LockDatabaseDesc . java and UnlockDatabaseDesc . java , to provide descriptions for lock and unlock database operations to enhance
updated data handling in RankingTopComponent , RankingUIModel , and RankingToolbar classes for improved clarity and
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve clarity and functionality of node disconnection
added a test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` and modified ` AuthorityChecker ` to include a new
chore ( regen ) : fix typo in php namespace
updated type validation logic to include variable declarations and improved error handling for missing types to enhance type validation accuracy and provide clearer feedback for missing
added two methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to facilitate testing
replaced specific buffer imports with a wildcard import and updated validation logic in CountersManager . java to improve code readability and maintainability by
updated log messages in MultiSteps and SendEmail classes to use placeholder syntax to improve code readability and maintainability
added logic to clone joinKeys from joinDesc . joinKeys in JoinDesc . java to ensure the joinKeys array is not null to prevent
updated WebAuthnConfiguration to use a custom PrincipalResolver for authentication handler registration to enhance flexibility in authentication handling by allowing custom principal resolver
added searchPaths parameter to the addSettingsFromFile method and updated its usage in XcconfigParser to support additional search paths in Xcconfig
changed variable declarations from non - final to final in Oracle . java to improve immutability and enforce immutability of several fields
[ hotfix ] [ runtime ] disable rescaling of unaligned checkpoint until rescaling of unaligned checkpoint
fix unsupportedoperationvisitor for sort and map _ value constructor
make compiletheworld test configurable
added a check to ensure ` lValue ` is an instance of ` LocalVariable ` before throwing a ` CannotDelambaException ` to
added support for MySQLDatabase in CreateTableGenerator to ensure proper handling of timestamp columns for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during execution
added a condition to set the ejection delay for the motor when stageNr is zero in SimulationListHandler . java to ensure the motor
updated method and class names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig in SpringApplicationTests and SpringApplicationTests to improve clarity
refactor methods in TransactionUtil2 for improved performance to enhance performance and maintainability of transaction operations
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance functionality by allowing
added null check for the collection object in ClusterState . java to ensure robustness by avoiding potential NullPointerExceptions
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added database and schema names to ForeignKeyColumn , ForeignKeyColumnMutator , ForeignKeyColumnProperty , and ForeignKeyColumnProperty classes , and updated related methods to
[ java ] log warn when new leader fail to join catchup and live log .
replaced static import of Shadows . shadowOf with a private method shadowOf in ShadowActivity . java and ShadowBluetoothDevice . java
drill - 4192 : fix selection of directory that do n ' t exist ( # 4192 )
deprecate itemstack . oninventorytick ( itemstack , slotindex , int ) and itemstack . onarmortick ( itemstack
fix zip export to work on window
added a null check for getSherlockActivity before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when getSherlockActivity ( ) is
refactor widget binding logic in AppsCustomizePagedView and Launcher classes to improve clarity and maintainability of widget binding logic
added new capability identifiers for airPressure , airQuality , co2PPM , and vocPPM in EcobeeSensorThingHandler
reformatted code for improved readability and consistency to enhance maintainability and readability of the code
added environment variables for AAPT and AAPT2 in Genrule . java and updated corresponding tests in GenruleTest . java to support additional
truffle : do n ' t dump access table when trufflecompileroptions . trufflerunneroptions . trufflerun
added null check before disposal of the message in Validator . java to avoid potential NullPointerException when the message is null
changed the ` db ` variable to be final and updated method visibility in ` TronStoreWithRevoking . java ` , and added
updated warning messages in CoreContainer . java to indicate that LogWatcher is not implemented for Log4j to improve clarity and provide clearer
replaced printStackTrace ( ) calls with fail ( " Cloning failed . " ) and added return statements in CategoryPlotTests . java to improve
added a null check for the variable ` n ` and replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` to improve code robustness and
update shader to use vertexbuffer . type instead of string . name ( )
changed the connection parameter from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure
added null checks for first and last exchange completed timestamps in RouteInfo . java to ensure robustness by avoiding potential NullPointerExceptions
updated ` TestHtmlTag ` , ` TestUseOption ` , ` TestClass ` , and ` C1 ` classes to include default language
updated the condition to check if the result is incomplete and the size is greater than 10 instead of checking if it is empty to ensure that the
updated argument handling and logic in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of time column management in the integration
updated output format handling in SiteSnapshotVariationsTest and OutputOptions classes to ensure correct extension is used based on the " htmlx " format
inverted the condition for checking QSB margin in DeviceProfile . java to ensure that the condition is only called when QSB is not enabled
add equal ( ) and hashcode ( ) to animationlist and gltfmodelkey
added a date buffer field and its setter method in AbstractGenerator and updated HttpGenerator and Response classes to utilize it to improve date handling and
replaced instances of Adler32 with CRC32 in Store . java to improve performance by using CRC32 instead of Adler32
changed the heartbeat interval value from " any # of seconds " to " null " in the XenHeartBeatInterval configuration to allow
added a new warning constant for zero area fees and modified the warning handling logic in FinSetCalc . java to include component warnings to improve
added a new ` DocumentMetadataSerializer ` class and updated JSON annotations in ` ElasticsearchIO . java ` to enhance JSON serialization capabilities for better compatibility
hhh - 1187 - add support for date _ trunc ( ) function for h2 and oracle
added a memory check for gauge conversion in MetricUtils . java and updated error handling in MetricUtilsTest . java to ensure proper handling of memory
added a boolean flag ` useJavaScript ` to ` UserTests ` and modified return statements in ` UserContext ` , ` FileAccess ` ,
updated validation messages to use RUNTIME _ PROTOTYPE _ TYPE and PROTOTYPE _ FACTORY _ TYPE instead of Configured
renamed the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to improve clarity and consistency in
added a new parameter ` DataWord ( 1 ) ` to the ` Pair ` return statements in ` PrecompiledContracts . java ` to ensure
refactor badge handling in AllAppsContainerView to use BubbleTextView instead of AlphabeticalAppsList . AdapterItem to improve user
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService , ResourceHandlerTest , and ServletContextHandler classes to improve clarity to enhance readability and maintainability of the code
added a condition to check for the draw identifier in the Cling class to ensure proper handling of custom drawing scenarios in the Cling class
truffle : remove assertion from trufflejdkservices . getlookupmodule ( )
added @ Ignore annotation to the test method ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to mark the test as
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , ItBitTradesDemo , and It
[ hotfix ] fix npe in profilinginvocationinterceptor when session reset be false .
made classes ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` final and added private constructors
added try - with - resources for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and handle potential IOExceptions
updated class references from " java . getClass ( ) . getName ( ) " to " java . util . Vector " and " java . util
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide more detailed information about the retention time
trim whitespace from the fragment list in QueryExecutorImpl . java to ensure that the fragment list is not empty before proceeding to avoid potential errors
updated the method to use modFile . getFilePath ( ) instead of path in ResourcePackFileNotFoundException to ensure the correct file path is used for
refactor the handling of TransformerBuilder instances in PartitionToolbar . java to improve clarity and functionality to enhance code readability and maintainability by
removed unnecessary condition for showing as grid in RecentsView . java to improve code readability and maintainability
updated the return type of the calculate method from Map to BMIViewObject and added a new constructor to handle BMIViewObject in the
removed unnecessary Comparator from the thenComparing method call in QueryCommand . java to simplify the code by eliminating unnecessary comparators
fix damage calculation for haybale block
replaced ` LinkedList ` with ` List ` in ` WindowsProcessAddressSpace . java ` and updated environment variable handling in ` NewElf
added support for custom plugin configuration in ` ReportOptions ` and corresponding tests in ` OptionsParserTest ` and ` ConfigOption ` to enhance flex
replace null check with isEmpty check for hashTable in HashJoinBatch . java to improve code readability and ensure proper handling of empty hashTable
added validation for seconds in the Timestamp class and refactored test methods in TimestampTest to improve accuracy of timestamp handling and enhance test coverage for
[ java ] use archivecontext instead of archivecontext in clusteredserviceagent .
added a condition to check if the variable is compiled before evaluating the COMPILE _ THRESHOLD to ensure that the COMPILE _ TH
added new test cases for image2 and image2 _ joined in various test classes to enhance test coverage and ensure correct functionality of image mosaic
renamed methods and variables related to default value handling in TogglableFlag and BaseFlags to improve clarity and consistency in naming con
updated logging statements in DockerClientFactory to use parameterized messages to improve clarity of log messages for better debugging and debugging
added a condition to return early for non - ANDROID platforms in SnapshotScreenListener . java to ensure proper handling of non - Android devices
replaced assertEquals with assertThat in RoutesTest . java to improve readability and maintainability of assertions
added multiple functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to provide functional interfaces for
updated the getSubsColor method to return a String instead of an int and modified its implementation to use a substring instead of an integer to improve
added a conditional check before deregistering the invocation registry in Invocation . java to prevent potential NullPointerExceptions during invocation completion
replaced the ` queue . append ` method with a ` output ` method call in ` AbstractWebSocketConnection . java ` to streamline the
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and updated intent extra in SignupActivity to ensure
added a new class ` ShadowCheckedTextView ` to the ` Robolectric ` framework to implement shadowing for ` CheckedTextView
added Serializable interface to ParserState class and marked fields as transient in AccessorProperty and Property classes to ensure proper serialization of the ParserState class
added a new entry " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enable the
removed duplicate calls to ` context . setAttribute ( TEMPDIR _ CONFIGURED , null ) ` in ` WebInfConfiguration . java ` to
improve multichat operation set definition and gibberish protocol implementation .
refactor QuicSession and related classes to remove unnecessary context variable and improve code readability to enhance code clarity and maintainability by redu
replaced direct calls to ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) . setMergePolicy ( ) `
refactor code for improved readability and consistency in ICU4JImpl and TextPosition classes to enhance code clarity and maintainability by
added support for ` ComputedDateValue ` , ` ComputedNumericValue ` , and ` ComputedNumericValue ` in ` AddDefaultValue
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
do n ' t throw an exception if the serviceprovidermetadataresource be not writable .
changed access modifier of ` printer ` from private to protected and added a ` createPrinter ( ) ` method in ` GraphPrinterDumpHandler `
added BigDecimal import and updated the average price calculation method in HuobiAdapters . java to ensure accurate representation of the order ' s average price
updated the projection operation to use ` getTarget ( ) ` instead of ` getName ( ) ` and changed the type of fields from ` String `
added a check for the existence of the player before sending a packet to ensure that the player is only added to the viewers list to prevent
added constant state management to FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to enhance the visual representation of constant
refactor SPDYClient to use a separate compression and compression factory for improved connection handling to enhance code readability and maintainability by
fix npe in protostuffobjectoutput when write null value
pdfbox - 4071 : fix checkstyle violation in pdfbox - common
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
added a condition to return early if no axes are displayed in the DrawAxis class to ensure that only valid axes are displayed when the view is
replaced calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap in Texture . java to improve code clarity and maintainability
removed unnecessary whitespace in the returnToWorkspace method call to improve code readability and maintain consistency
added SSL context and hostname verification for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java to enhance security by
updated the calculation of the clock rate in EncodingConfigurationTableModel and added a method to retrieve the real used clock rate string in MediaFormatImpl
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
replace getProductNameForBuildTargetNode with getModuleName in ProjectGenerator and add a method to set the module name in AppleLibraryBuilder to
[ hotfix ] [ test ] fix flakiness in testslot
# 113 - add support for inheritance of id _ list query ( # 11313 )
replaced the usage of ` closeFrame ` with ` rbuf ` and added an assertion for the response header to ensure that the response header
[ wasm ] clear reference stack when a function be not in the stack .
add ` ` ttl ' ' to log plugin ( # 3892 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper , CustomPreconditionWrapper ,
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection instead of the QueuedThreadPool to improve server lifecycle management and ensure proper
added exception handling around Fresco initialization in CommonsApplication . java and modified vectorDrawable initialization in NearbyController . java to improve
updated the return statement to handle null and empty objectName case to improve robustness by avoiding potential NullPointerExceptions
updated error messages in Command . java and TestPrint . java from " could not find " to " could not open " to improve clarity
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
updated variable names and added null checks for ` dname ` in ` KeyTool . java ` and ` Resources . java ` to improve code
added a @ Deprecated annotation to RuntimeOptions . java to indicate that the method is deprecated since 23.0
replaced byte array conversion with direct string encoding using UTF - 8 encoding to simplify code and improve readability
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to facilitate permission evaluation
added a new option ERASE _ LINE _ ON _ FINISH to the LineReader and modified LineReaderImpl to handle prompt handling based on
[ hotfix ] fix checkstyle violation in masterfilesystem
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR across multiple
improve performance of expandwar . delete ( ) by use urlconnection instead of jarfile
improve error handling in defaulthttpclient and fullnettyclientresponse . decode ( )
replaced BorderLayout . center with BorderLayout . centerAbsolute in Picker . java to ensure proper layout alignment for better user experience
[ java ] re - recycle the memory segment in networkbufferpool when the buffer pool be interruptable .
replaced instance of ` newMbeanServer ` with a static variable ` newMbeanServer ` and initialized it to ` newMbean
replaced JUnit 4 runner with a custom RetryTestRule in AbstractIT . java to improve test reliability by using a retry mechanism for
refactor autoCommit handling in QueryStateMachine to use transactionId directly instead of a boolean flag to improve code clarity and maintainability by
updated import statements in CsvFieldType , CsvTable , CsvTableScan , and CsvTest classes , and added package - info . java to improve
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove unused class in streamtasktestharness
refactor URI retrieval logic in mmm Request . java and add a new test in mmm RequestTest . java to improve clarity and
updated access level of KEY _ LAST _ SEEN _ VERSION _ CODE to public and refactored storage point retrieval in DataStorageProvider to
added methods to manage available and unavailable sessions in SessionManager to enhance session management functionality for better session management
added a new package " liquibase . pro " to the scan configuration in ServiceLocator . java to enhance package management for the Liqu
renamed the method ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in ` MainApp . java ` and updated its usage in
updated the ` loadWithNewGlobal ` method to accept an additional ` Object . args ` parameter to enhance flexibility by allowing additional arguments for
refactor relative path matching logic in FastPathResolver . java for improved clarity and efficiency to enhance code readability and maintainability by
replaced direct calls to ` length ( ) ` with ` toIntExact ( ) ` in ` HiveClientModule . java ` to ensure accurate
rename methods and variables related to randomization depth from " isExceedRandomizationDepth " to " hasAlreadyRandomizedType " and " has
add support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and a corresponding test in TestWindowFrame .
clear the proxy request headers in AbstractProxyServlet . java to ensure proper handling of HTTP headers during proxy processing
added a check to skip the test if SA attach is expected to work in CompressedClassSpaceSizeInJmapHeap . java to ensure
added null check for bgColor before accessing its alpha value in GraphicsDevice . java and created TranslucentWindow . java for translucency
added a check for null user information before populating it in the UserInfoActivity to improve error handling when no user information is present
added custom field serialization for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers can be used on different machine and
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named output groups and source files to ensure that named output
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper handling of setting keys and values
[ stateless ] fix the issue that statelessflow do n ' t provide configuration via json
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable taskbar mode for testing purposes
added new device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance user experience
[ fml ] catch itemloadingexception in modelloader instead of exception
updated import statements in KrakenFuturesStreamingPublicDataTest . java to include the @ Ignore annotation to temporarily disable tests that are not needed
pdfbox - 4892 : do n ' t use currentpixelscale for 2x x
refactor RussianLowerCaseFilter class for improved clarity to enhance maintainability and readability of the code
updated server properties handling in CsvBulkLoadToolIT . java and modified zookeeper server retrieval in QueryUtil . java to improve code clarity and ensure
replaced ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent file
added ability to reset the offset of the wav file when load a wav file .
added a boolean flag ` repeatFirstLineIndent ` and modified the ` setIndent ` method to accept a boolean parameter to control the indentation behavior
changed casting of oid to Object in Oid equality check to ensure proper type safety and prevent potential ClassCastException
refactor metrics and health configuration handling in HikariPool . java to improve code readability and maintainability
replace controlflowanchornode with controlflowanchored in loopex . java
added a line to disable the focus painting of buttons in WindowsPlacesBar . java to improve user interface responsiveness by disabling the
updated type checking for " backingIndex " in DatabaseSnapshot . java to include both PrimaryKey and ForeignKey types to ensure compatibility with unique constraints and
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and a corresponding endpoint in ` AccountAPI `
[ ds - 4892 ] add miss dc . title to group metadata for community admin group
added a check for empty words before returning a new HypothesisUtterance object in GapInsertionDetector . java to ensure
added unit test base on user forum issue
updated thread retrieval method from ` getBackgroundThreads ( ) ` to ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java `
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40ms to 10ms in RecyclerViewFastScroller . java to improve
updated the SystemClassName initialization to use " Ljava / lang / System " instead of using MetaUtil to ensure the correct class name is used
hhh - 13644 fix nullpointerexception in procedurecallimpl . getresultstream ( )
fix npe in camel - swagger - java when apiproperties be null
added new files BinaryFrameGenerator . java and TextFrameGenerator . java to implement WebSocket frame generation for binary and text frames
replaced direct calls to ` localDriver . findElement ( By . id ( " peas " ) ) ` with ` WebDriverWait .
simplified calculations for lat and lon in RandomGeo3dShapeGenerator . java to improve code readability and maintainability by reducing
added a keepAlive method to manage ClassLoader instances to ensure thread safety during resource management
changed the return value from false to true in SQLiteDatabase . java to reflect the correct behavior of the method
added a check for a concurrent signal in the JSR166LockMonitorenter class to ensure that the lock monitoren
added MkdirStep to multiple classes and updated the expected number of steps in FatBinaryTest to improve directory management and ensure correct number of steps
updated coordinate calculations and error handling in MeshLeveler . java to include additional error messages to improve error reporting and provide clearer feedback when coordinates
added checks for availability of JPMML libraries in ApplyPmmlModelCommand and PMMLAssemblerService to ensure that JPM
updated the variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve clarity and consistency in variable naming
updated temporary directory creation logic in MountableFile . java to conditionally use a temporary directory based on the operating system to ensure compatibility with mac
make memory mapped buffer configurable on window
added a null check for the organization in the pom . xml file to ensure that the Plugis are required to have an organization in the
updated contributor license agreements documentation in SepPostingsWriterImpl . java to clarify the purpose of contributor license agreements
deleted the TerminateWebSessionListener . java file to remove unused web session termination functionality
updated the argument passed to ` executeChildProcess ` to use the system ' s Java class path instead of an empty string to ensure compatibility with
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added a test case to verify that the ` @ ExpectedToFail ` annotation does not change Javadoc to ensure that the ` @ ExpectedToFail
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher3 PHYSICS
added ` < div class = ' noPrint ' ' and ` < div > ` to the ` HtmlThreadInformationsReport ` class to
updated version number from 3.1 to 4.0 in Constants . java and changed test version from LUCENE _ 31 to L
added macosx symbolicator and task handles in BsdDebuggerLocal . java and updated OS detection in PlatformInfo . java to support mac
replaced direct reference to ` NetHandlerPlayClient ` with ` WeakReference < FMLClient > ` in multiple classes to improve memory management
do n ' t log connection reset by peer in networkdispatcher exception
[ java ] use commonconfig . admin _ directory _ name when create aeron client conductor .
added a break statement in TouchImageView . java to ensure proper handling of the break statement in the code
chore ( regen ) : fix typo in dialogflow proto ( # 119 )
remove sslfilter from feedablebodygenerator . flush ( )
added logic to check if a type is assignable to an object in TypeUtils . java to ensure correct handling of variable assignments for object types in
replace NonBlockingHashSet with ConcurrentSkipListSet in ColumnFamilyStore . java to improve concurrency handling for memtable operations
added null checks for ` tree . errs ` in ` MemberEnter . java ` and modified error handling logic in ` JavaCompiler . java `
replaced SWT . NO _ BACKGROUND with SWT . NONE in the Browser initialization to use SWT . NONE instead of SWT .
updated the dialog cancellation method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to
updated IntegerStamp to handle negative upper bounds and added unit tests for division operations in IntegerStampTest to ensure correct handling of negative values and ensure
added a new method ` readStream ` to read an InputStream and updated the image retrieval to use it to improve code readability and maintainability
added locals management to CaseStmtToken and updated related classes to enhance variable expression handling and improve code clarity
replaced the direct initialization of the cipher with a try - catch block to handle potential InvalidKeyException and UnsupportedOperationException when initializing the cipher to improve error handling
added ` psapi . lib ` to the ` AdditionalDependencies ` attribute in ` WinGammaPlatformVC10 . java ` to ensure the correct
updated string concatenation in StringUtilsTest . java to use the system ' s line separator to enhance readability and maintainability of the code
added versioning and output encoding settings in TemplateEngineFreemarker . java and updated alert method in ApplicationController . java to ensure
add debug output to crdgeneratortest
change ` ` hold _ samples ' ' and ` ` mode ' ' to ` ` hold _ samples ' ' and ` ` mode ' '
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the emailableReporter is
added a boolean variable ` quoted ` and modified conditional logic in ` CommandLineBuilder ` , and updated test assertions in ` CommandLineBuilderTest ` to
removed the ' public ' access modifier from interfaces in multiple classes to simplify accessibility and improve code readability
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks for job processing
fix schema generation for object field with null value
updated the FILEVERSION string from " 505365 " to " 532077 " to reflect the new version of the file
added support for " GL _ ARB _ texture _ float " and " GL _ ARB _ texture _ float " extensions in FloatTexture
change fileserver . write ( ) to closefile ( ) ; bump version to 2.1 . 20050211
added a null check for outputDirectory and jarStream before setting it to the output directory to avoid potential NullPointerException when outputDirectory is null
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance monitoring for database execution
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest ` and
[ geos - 8287 ] add resourceerrorhandling enum to make sure we do n ' t report an ogc _ exception _
added a check for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure proper handling of EOFException during file operations and
improve error message for miss resource in defaultservlet and jspservlet
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and updated the worker thread registration logic to enhance thread management
updated CHECK _ EVERY _ N from 10000 to 0xFFFF and added conditional logging for HardRefCache ' s free memory check to improve
hbase - 2267 testsplittransaction # testsplittransaction fails due to race condition in hregion # openregion ( )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a new parameterized test method ` testJaasDemo ` to ` DemoModulesTests ` to validate the Jaas demo functionality to ensure
added additional conditions to check if spanX and spanY are 1 before creating a folder and updated return statement to include spanX and spanY
refactor CacheOffHeap class for improved performance to enhance performance and maintainability of the code
improve error message when try to create a table that depend on another table
added a check for currLayerHeight before parsing tiles and improved error logging for ignored XML gid values to enhance robustness by preventing corrupt
fix concurrentmodificationexception in inmemorytilecache . setworkingset ( )
added a new Java class ` Solution ` that reads input from a range of integers to implement a solution that processes input based on a range of
add a new interface AddressChecker and modify TrackerRequestProcessor to handle bad addresses to improve address validation logic for better clarity and maintainability
fix rendertype . getTranslucentmovingblock ( ) return wrong render type .
remove default comment from config element ( fixes # 439 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated its assignment
added a null check for recieptents before sending messages to prevent potential NullPointerExceptions when recieptents are null
refactor issingle logic into a separate method ` isSingle ` to improve code readability and maintainability by reducing duplication
dockerclientfactory . client ( false ) : do n ' t execute docker client if fail fast .
added a resourcesMode parameter to the AndroidMetadata constructor and updated perfStatsCollector to include it to enhance metadata handling by allowing dynamic resource management based
replaced DateUtils with Calendar for date manipulation in HistoricProcessInstanceQueryImpl . java to improve performance and maintainability of date handling
replaced ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java `
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failures
refactor TreeMap class for improved readability to enhance maintainability and readability of the code
added methods to manage async stack traces in the Display class to enable or disable asynchronous stack traces in the application
added a method to set the glow color in BubbleTextView and updated Folder to use it to enhance the visual appearance of the
added styling for " file - row - text " and " file - row - text " in LinkedFilesEditor . java to enhance the
removed an unnecessary return statement for " java . lang . Short " in AbstractJdbc2ResultSetMetaData . java and added a new test for class
removed unnecessary try - finally block for file deletion in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify
added null check for _ info before checking its status to prevent potential NullPointerException when _ info is null
added a constructor to ` ShadowLocation ` that initializes the ` provider ` variable to improve flexibility in initializing the ` provider ` variable
added a condition to check if the device RAM is less than 2048 in LauncherPreferenceJavaFragment . java to ensure that the maximum RAM is
ignore local map stats when there be no data
added logging functionality to FileProfileActivator for file existence and file existence checks to enhance debugging capabilities for file profile activation
updated the parameter name in the addToBody method from " noname1234 " to " invalid _ " to clarify the purpose of the
changed the type of the " roles " map from List to Set in GuildImpl . java to ensure consistent handling of roles in the application
updated the return value and modified the size check for items in ExpandableUploadListAdapter . java to accommodate a maximum number of uploads
added unit tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure correct behavior of the ` delete ` method in the
[ # 1187 ] instructorfeedbackresultspagedata : rename ' recipient ' to ' primaryparticipant ' ( # 118
llvm : fix intermittent deadlock with auto deref handle .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for improved performance
added usageHelpAutoWidth option to the terasology command and updated the headless command description to enhance user experience by providing a clearer
updated action bar title setting logic in DrawerActivity . java and added interaction notifications in DrawerActivity . java to enhance user experience by providing
refactor CommandLineParserTest . java for improved test coverage to enhance code readability and maintainability
added new touch controller constants and interpolators for animation animations in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController classes to enhance
updated method call from ` javaName ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to ensure correct
added native methods for frame and release in CWrapper . java to provide functionality for frame management in the application
added constant value checks in mmm Checker . java and created a new ValueTest . java class with multiple constants to ensure proper handling of constant
updated test classes in MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null check
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string formatting for error and coverage failures in UploadBuild . java to improve readability and maintainability of the code
updated bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout adjustments based on search bar offset
fix the issue that pulseaudio do n ' t start when idletimeout = 0
refactor code to use ` getLauncher ( ) . runOnUiThread ( ) ` for better thread safety to improve code readability
added a method to retrieve the source group as an Optional < String , ImmutableList < AppleSource > > to ensure that the source group is
increased the timeout duration in triggerFiredLatch from 220000ms to 320000ms and increased the await duration from 60000ms
fix the size of all - null block return by floatselectivereader . read ( )
added a null check for startNode in AbstractNodeCostSearch . java and implemented a square comparison for distFromStartSq in AbstractNodeCostSearch
added a condition to skip processing for Form and Dialog component types in ResourceEditorView . java to ensure proper handling of specific UI components in the
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView ` and ` FloatingIconView ` to use the
added a null check for commitPoint and set it to the latest commit if it is null to ensure that the latest commit point is used for
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManagerTest ` and implemented functionality
added debug logging functionality to the SimpleHostRoutingFilter class to enhance debugging capabilities for HTTP requests
added ` destory ( ) ` method implementations in ` IndexSegment ` , ` BitmapInvertedIndex ` , and ` IndexSegmentImpl `
[ issue # 1187 ] fix test case for statictopicit ( # 1187 )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer .
hbase - 2247 bulkload should throw ioexception instead of multipleioexception in hregion . bulkload ( )
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated its usage in ` RippleWithdraw
removed the import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
updated catch blocks in LoadSolrBuilder and SolrLocator to include additional exception types to improve error handling by catching multiple exception types
added error handling for abstract overloaded methods in Java2TypeScriptTranslator . java and updated tests in OverloadTests . java to ensure proper
added StacklessLogging and modified the sweepDisk method call to use a try - with - resources statement to ensure proper logging and resource management during
added Serializable interface to MutableColumnDataType and modified entity handling in Entities to ensure proper serialization of data types and improve code clarity
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null check for claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by avoiding potential NullPointerExceptions
updated import statements and constructor parameters in HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with the new
updated processTypeHintForNestedDocuments method to handle null source correctly and added unit tests for null values in UpdateMapper and UpdateMapperUnitTests
replaced ` CoreAdminResponse ` with ` CoreStatus ` and updated related methods in ` CollectionsAPIDistributedZkTest ` to
initialize transformers and locators lists in ModDirTransformerDiscoverer . java to ensure proper initialization of lists for better performance
[ querydsl ] fix typo in querydsl error message
[ gr - 13946 ] improve pegraphdecoder . decodecallstack ( ) and improve error message
rename methods and variables from ` setOf ` to ` copiedSetOf ` and ` listOf ` to improve clarity and consistency in naming con
camel - 1358 : camel - mail should use objecthelper . getidentityhashcode ( ) instead of call dumpmessage ( )
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix potential npe in
updated return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure that the identifier name is set correctly for better property management
add the wave generator activity to make it easy to use .
added null checks for properties and sheet retrieval in KeyedProperties . java and SheetOverlaysManager . java to improve robustness by avoiding
added unit tests for logging and exec operations in PodIT . java to ensure proper execution of pod operations in the Kubernetes client
added a new test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure proper handling of a directory factory and create a new
call super . dispatchmethodkernelokra ( range , args ) instead of call super . dispatchmethodkernelokra ( range , args )
[ java ] fix the doc of dnsclient so that it do n ' t have a priority .
refactor thread creation in XToolkit to use a privileged action for improved clarity to enhance code readability and maintainability by
added validation method to SelectBox and set a default value of " Linux6 " in UITest to ensure proper validation of the input box
replace IllegalStateException with Collector . printStackTrace ( e ) in JobGlobalListener . java to improve error handling by providing stack trace instead of throwing an exception
updated the ` createState ` method to include a ` SplitState ` parameter and modified state creation logic accordingly to enhance state management by allowing parent
changed the ` connectionState ` variable to be ` volatile ` and modified its usage in the ` getConnectionState ( ) ` method to ensure thread
updated the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and added a new configuration property in EnableIntegrationTests . java to
refactor memory allocation and encoding methods to use ` nmalloc ` and ` encodeUTF16 ` instead of ` ByteBuffer ` to improve memory management
added exception handling for IOException and DocletAbortException in HtmlDoclet and AbstractDoclet classes to improve error reporting and provide clearer error
[ java ] unusedmodifier false positive with enums
refactor multiple logging statements to use method references instead of lambda expressions to improve code readability and maintainability
updated the parameterized parameter name from " ssl = { 0 } " to " ssl = { 0 } " in AbstractHttpClientServerTest . java
updated error handling in TransformationHelper . java to improve logging clarity and provide clearer error messages to enhance error reporting and provide clearer feedback
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and
replaced direct equality checks with Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by using Apache Commons Lang
added null check for outputRoot in FileProcessor . java to avoid potential NullPointerException when outputRoot is null
added a new ` AnnotationFilter ` interface and modified ` getAnnotations ` method in ` PDPage ` , ` PDFRenderer ` , and ` Page
refactor StackTraceCleaner class for improved clarity to enhance maintainability and readability of the code
added handling for MIME type " text / css " and " text / javascript " in PluginServlet to ensure proper content type for CSS and JavaScript
hhh - 1187 - skip test that fail on oracle 8i
updated the parameter name from ` slot ` to ` slotSize ` and modified the logic for handling the ` stats ` array to improve clarity
added getStats methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes , and replaced AtomicInteger with AtomicLong in DocBuilder and related
[ zeppelin - 1349 ] [ kie - client ] add option to disable long - polling for kie client
refactor gesture handling in PagedView , BaseOverview , LauncherInstrumentation , and LauncherInstrumentation classes to use a new scroll
updated unlocks initialization in UI . java and added a button in PausedDialog . java to enhance user experience by providing a confirmation button for
clear the drop event in PlayerEventListener . java to ensure proper handling of drop events during event processing
added a new constant DEFAULT _ PARAM with a value of " inputName " in StreamResult . java to provide a default value for the input name
updated exception handling in the testNormalizeOrder method to throw IOException instead of MalformedURLException to improve clarity and consistency in exception handling
updated printlnBoth to include chunk type in TsFileSketchTool . java and added a flip method in LocalTsFileInput . java to improve
added functionality to exclude Swift headers in UmbrellaHeader and updated test assertions in ProjectGeneratorTest to ensure that the umbrella
corrected the formatting of the method signature in GrizzlyAsyncHttpProvider . java to improve code readability and maintain consistency
added a call to encode ( ) in RequestPlugin . java to ensure proper encoding of requests in the application
added support for DB2 dialect in SQL expressions in RolapNativeSql and RolapNativeTopCount classes to ensure proper handling of SQL expressions
added validation for null or blank LDAP password in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl . java
pdfbox - 4071 : remove unnecessary call to long . tostring ( ) in cosobjectkey
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper handling of complexWriters during processing
added @ SuppressWarnings ( " serial " ) annotations to multiple cache - related classes to suppress serialization warnings for better usability
changed access modifier of ClassGraphClassLoader from public to package - private and updated conditional check for classInfo to enhance encapsulation and prevent potential NullPointerExceptions
added a check for " _ errors " in the ErrorResponseException class and modified the return statement logic to handle errors more effectively to improve error handling
added a constructor to EventSourcingRepository that accepts additional parameters for eventStore , snapshotTriggerDefinition , and repositoryProvider to enhance flexibility
refactor symbol handling for binary nodes in mmm Attr . java and ppp Attr . java to improve code readability and maintainability
modified the way the current text is processed in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle cases where the current text is
use standby mode instead of all _ off for essentia command
tiff : use tiff baseline . planningconfig _ CHUNKy instead of tiffextension . planningconfig _ planning
added a call to close ( ) in ItemListTag . java to ensure proper resource management and prevent memory leaks
fix the laser table not update correctly when update the laser table
added new files SigInt . java and SigIntBarrier . java to implement signal handling for thread interruptions to facilitate
refactor graph handling in ExporterGEXF to differentiate hierarchical graphs and edges based on the graph model ' s hierarchical state to improve
refactor TCTLSeparatedProtocol to use Text instead of byte arrays for null buffer handling to improve performance and error handling for string
add validation for rubric question index in response detail
updated the condition in CatalogComparator to compare against ORIGINAL _ CASE in addition to DB2Database to ensure compatibility with the latest database schema
refactor test setup methods in BrowserMobProxyTest for improved clarity and functionality to enhance code readability and maintainability
updated the format of criticalErrors to use Integer . toString ( ) instead of MessageFormat . format ( ) for improved readability to ensure accurate
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline the code by eliminating unnecessary
[ hotfix ] [ javadoc ] fix typo in trufflestring javadocs
[ hotfix ] [ graph ] fix type inference in outEdgesfunction
refactor Java6AbstractBDDSoftAssertions , Java6AbstractStandardStandardSoftAssertions , Java6JUnitAssertions , and
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new class ` DiacriticTest . java `
[ java ] use cyclicbarrier instead of countdownlatch in clustermanagertest
added error handling and improved workspace reader management in DefaultMaven . java and DefaultGraphBuilder . java to enhance code robustness and ensure
updated SSL scheme check from startsWith ( " https " ) to equals ( " https " ) in ServiceRegistryConfig . java and modified test assertions
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary whitespace from the constructor of Jdbc3Connection to improve code readability and maintainability
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure proper initialization of the servlet instance
added logging functionality and modified delta server time handling in BinanceExchange and BinanceBaseService classes to improve monitoring and monitoring of delta server time
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat85
added null check for the component form before deregistering animation to prevent potential NullPointerExceptions when the form is null
updated the ` decodeResource ` and ` decodeStream ` methods to accept additional parameters for improved bitmap handling to enhance flexibility in bitmap decoding
[ java ] use configuration . number _ of _ messages instead of hardcoded value .
added click and long click listeners to the TimelineArrayAdapter for improved user interaction to enhance user experience by allowing users to click on the
added " text " to the list of data types in PostgresDatabase and adjusted conditional checks in NumberType and ColumnSnapshotGenerator to enhance data
fix flaky test entryprocessorbouncingnodenodestest ( # 3683 )
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
added a null check for thingRegistry before adding to inbox in CreateBridgeServlet . java and updated test cases in CreateBridgeServletTest . java
refactored methods in CrawlServer and PreconditionEnforcer to use synchronized keyword for better thread safety to enhance thread safety and ensure thread safety
added null checks for the display name in multiple classes to avoid potential NullPointerExceptions when getDisplayName ( ) is null
updated SpriteBatch constructor to accept a default shader parameter and refactored shader creation logic to improve flexibility and maintainability of the shader
added a new property " - c synchronous _ commit = on " to the properties in TestUtil . java to enable asynchronous commit functionality in the
added element coercion functionality to the SortedSetTypeCoercer class and updated the fillSortedSet method to throw a CoerceFailedException to
refactor confirmation messages in RemoveFileDialogFragment and RemoveFilesDialogFragment to use conditional logic for folder and local removal buttons to improve clarity
added a condition to check if the character is less than 256 before verifying if it ' s less than 256 to ensure proper handling of safe
updated the port handling in the registerFragmentStorage method to use a configurable port instead of a hardcoded value to improve flexibility by allowing dynamic
removed the expect statement for cluster retrieval in HostResourceProviderTest . java to simplify the test by eliminating unnecessary assertions
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
refactored init ( ) and repaint ( ) method in sipcommframe to make it easy to use
removed the ` ShadowHtml ` class and updated test assertions in ` HtmlTest ` to streamline the code by eliminating unnecessary dependencies
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
replaced the logger variable name from " logger " to " h3Logger " and " quicLogger " to improve clarity and consistency
changed the visibility of the addListeners method from private to package - private in MockSettingsImpl . java and added unit tests in MockSettingsImpl
refactor StateHandleStore class to improve code readability to enhance maintainability and facilitate future updates
updated import statements for Constraint from org . eclipse . jetty . util . security to org . eclipse . jetty . http .
[ # 1188 ] add ` ` none ' ' to student attribute ( # 1188 )
refactor : use try - with - resources in jmeterutils
camel - 1145 : fixed the test error of camel - 1145
refactor JarBuildStepsFactory to use a new method for obtaining library jar parameters to improve code clarity and maintainability by encapsulating
corrected the spelling of " validating - cerficates " to " learn more about peer certificate verification " to improve clarity and
removed the overridden ` getPageSizeVal ` method from ` ListCapacityCmd ` to streamline the code by eliminating unnecessary logic
added a case ` CLOSED ` in ` IteratingCallback . java ` to handle the case of ` CLOSED ` to ensure proper handling of closed
added a private boolean field ` isAuthorized ` to the ` AccessControlContext ` class and introduced a method to check access control context to enhance security
added a check for the instance of AbstractOSGiApp before sending events in OSGiDeployer . java to ensure proper handling of
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type handling for tiff
[ hotfix ] fix race condition in optimizedcalltarget . profilearguments ( )
added a new CubocDesktop . java file and modified Cubocy . java , Map . java , and MapRenderer . java
updated file paths in PolicyMonitor and PolicyMonitorTest to use getTargetDir ( ) instead of getTestResourceDir ( ) to improve clarity and
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trashbin list
updated the import statement from ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` to ` com . sun .
fix checkglobalvariablestoragenode in truffle .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified its logic to include the ` Intent ` parameter to enhance
added a constant for the maximum burn target threshold and updated the return statement to use it to improve code readability and maintainability by reducing
updated import statements and refactored the ` snapshotObject ` method in ` UniqueConstraintSnapshotGeneratorSnowflake . java ` to streamline
refactor SQL selection logic in DMLTransformer . java to handle empty insert statements to improve clarity and maintainability of the code
updated import statements and changed the pgt URL from " http " to " https " in ServiceValidateControllerTests . java to ensure compatibility with
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and adjusted its logic to handle default names more effectively to improve
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generic types in multiple classes to improve type safety to enhance code readability and maintainability by using generics
added a new dimension to DeviceConfiguration and modified the type check in OperationSetVideoTelephonyJabberImpl to ensure proper handling of
added a test method for updating PGobjects in ResultSetTest . java to ensure correct handling of PGobjects in the database
updated password reset endpoint to return UNPROCESSABLE _ ENTITY when the user has a non - UAA origin to ensure proper handling of password reset
replaced the retrieval of the child node with the retrieval of the document element to improve code readability and maintainability by directly using the document
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
corrected the spelling of " timeInSec " to " timeMillis " in Isochrone . java and SPTResource .
added a check for invalid binding in the light relay logic to ensure proper handling of bind events based on the presence of a valid binding
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to use it to improve the functionality of
refactor Model class to improve code organization to enhance maintainability and readability of the code
increased the increment of recordedTime from 619315200000L to 619315200000L to ensure accurate time representation for
added a condition to resize the status if the terminal type starts with AbstractWindowsTerminal to ensure proper resizing of the status when the terminal is
updated the host version state setting logic in UpdateDesiredStackAction . java and adjusted the current state in RepositoryVersionState . java to ensure that
move jre _ bundle _ deploy . jar from j2cl / java _ src to integrationtestcase
use linkedhashset instead of hashmap for artifact resolution and resolved artifact
changed the declaration of the ' op ' variable from a try - catch block to a final assignment to simplify the code by eliminating unnecessary
updated method call formatting in KnativeEnvironment . java to improve code readability and maintainability
updated the executor name in CommitLogArchiver from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in
added a ` connect ( ) ` method to ` CloudSolrClient ` and a corresponding test in ` TestCloudSolrClientConnections ` to ensure
added synchronization around binding management in Breakpoint and DebuggerSession classes to ensure thread safety when accessing allBindings
refactor file handling in ShadowContext to use static final files for improved clarity and maintainability to enhance code readability and maintainability
added LinkedHashSet and TreeMap imports to SecureXStream . java and added unit tests in XStreamPersisterTest . java to enhance functionality and ensure correct
[ drools - 1347 ] make kiemodulemodel accessible to the kiemodule when create a kiemodule
updated SoilDryFlag logic to handle Farmland and Farmland instances in BlockEventListener . java to improve robustness
added a default implementation of the getLocalIp method in FinishedSpan . java to provide a default implementation for the method
updated JdbcStepExecutionDao to deserialize the binary stream and adjusted skip limit settings in tests to ensure proper handling of integer values and improve test coverage
corrected the spelling of " 的 的 " to " 的 " in multiple Java files to
added " python37 " and " python - gpu " to the resource list and modified path handling in tensorflow . java to enhance compatibility with the
refactor plugin management by introducing a refresh method and updating JTable initialization to improve code readability and maintainability by encapsulating plugin data
updated log level from info to warn for file reloading , saving , and trimming errors in DefaultHistory . java to improve log clarity
cloudstack - 7397 : fix npe in vmwarestorageprocessor when vm be not attach to a vm
camel - 17454 : camel - sftp - allow sshd to be stop by default
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
updated serial handling in GpsSettingsActivity , Session , and HttpUrlLogger to use a utility method to improve code readability and maintainability
refactor SwapGBuffers class for improved performance to enhance performance and maintainability of the code
added null check for spatial before removing the control to ensure that the control is properly removed when the spatial is not null
added support for setting smart replies in ShadowRanking and updated ShadowRanking to use this new reflector interface to enhance flexibility in managing smart
[ java ] do n ' t use lambda in archive . list ( ) .
updated the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java to use initParams instead of resourceLoader . getConfigDir
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java for testing JTree
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to align with the latest
replaced null return statements with exceptions in RecommenderMapper . java and added null check in CacheTest . java to improve error handling and provide
added clientInfo variable and setup method in SurrogateAuthenticationEventListenerTests to enhance test setup by ensuring client information is properly set up before each test
added isUserView variable to CardPresenter . java to enable user view functionality in the application
replaced instances of ` GraphvizJavaExecutorUtility ` with ` GraphvizUtility ` and updated related methods in ` GraphvizUtility ` to
[ hotfix ] [ metric ] fix npe in logdispatcherthreadmetrics . getlogtimeperrequest ( )
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for the SQLite connector
added a delay of 500 milliseconds in StreamResetTest . java to ensure proper resource management during tests
removed conditional check for " new " type in PermissionsManager initialization to simplify the code by eliminating unnecessary condition checks
refactor DateParser and TestDateParser classes for improved readability to enhance maintainability and facilitate future updates
added a method to return the depth value of 0.5 in SpringLoadedState . java to provide a way to determine the depth of the
replaced hardcoded array copy with a constant MIN _ SIZE in BinaryDecoder . java to improve code readability and maintainability by reducing
[ hotfix ] [ doc ] fix typo in executiongraph
remove notification from the bottom layout in NotificationActivity and remove swipe functionality from NotificationRenderer to streamline notification handling and improve UI responsiveness
added null check for invocation in DefaultExceptionConverter and updated exception message format in ExceptionsTest and EndpointTest to improve error handling and provide clearer
fix npe in glowcontainer when lock be empty
replaced reflection - based method call with reflection - based method access in ProxyMaker . java to improve code readability and maintainability by using
change the data type of values from int to Integer in MathTest . java to ensure compatibility with integer values in the query
replaced ` StringUtils . join ( ) ` with ` - ` in return statements for metrics and datasets in BaseEmailContentFormatter . java to
added visibility and visibility settings for layout provided components in LayoutPanel . java to enhance user experience by allowing customizable UI elements to be displayed
added a null check for the ` location ` variable in the ` isDeadServer ` condition to prevent potential NullPointerException when ` location ` is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for the key parameters in BasicChecker . java and simplified the return statement in publicKey generation to improve error handling and ensure
refactor MediaTypeRequestMatcher to use a separate method for ignoring media types to improve code readability and maintainability by encapsulating the logic for
updated logging statements in LlapBaseInputFormat . java to use taskAttemptId instead of taskAttemptId to improve clarity and consistency in
added a property " spring . main . allow - bean - definition - overriding = true " to the @ SpringBootTest annotation in EventService
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsManualExample classes to
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the ` issue151
added a new file ` CompatibilityTest . java ` that tests the ` Compatibility . xml ` property loading and verifying properties
added new files for ` VariantComponentsModule ` , ` PushUtils ` , and ` SecurityUtils ` classes to implement push and security utilities for
fix incorrect number of replica in rebalance
update version and version number from 2.6 . 1 to 2.7 . 0 in ExoPlayerLibraryInfo . java to reflect the
[ log4j2 - 1349 ] fix line separator in test
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 4891 ,
set default values for friction , restitution , density , isSensor , and isSensor to zero in FixtureDef . java
updated method signatures and variable names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and
added error handling for the " am wait - for - broadcast - idle " command in LauncherInstrumentation . java to ensure proper execution of
added unit tests for font and link tags in ResourcesTest . java and adjusted the span calculation in ResStringPool . java to improve test coverage
move guisestatscomponent . java to src _ base instead of src _ work
added permission handling for CALL _ PHONE in the Launcher class and a new utility flag in the Utilities class to enhance user experience by allowing
updated return values in SimulationPanel and added a JLabel for drag - and - drop functionality in PlotDialog to enhance user experience by providing a
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoEncodingUtils , and GeoPointInPolygonQuery
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to check if the Docker client is available to
added a new constant VPX with a value of " vpx " to the CodecTypes class to facilitate the use of
added a coordinatorAddress option to the DistBuildRunCommand class and updated its usage in DistBuildFactory to allow the remote coordinator thrift server to
added a new method ` match ` in ` FsUtils ` and refactored ` WrapTimer ` to use it to improve path matching functionality
added a condition to check if the value is greater than zero before adding label values to ensure that label values are only added when the value is
ggb - 1346 fix for nullpointerexception in geogebraweb . getboolean ( ) .
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the test code and improve readability
added materialization time setting in ObjectStore and implemented a test for updating creation metadata in TestObjectStore to ensure correct materialization time handling and
added handling for UnsatisfiedLinkError in VoskSTTService methods to improve error handling and logging for missing native dependencies
pdfbox - 4071 : improve message in jmsampler gui for browse / clear message on send queue
update break weight logic in GlyphView . java to handle cases where p1 is p0 and p1 is p1 is p0 to
refactor sync handling in RCFile . java to use a configurable buffer for checksum validation to improve efficiency and efficiency in reading sync data based on
added an @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to address issue SOL
refactor toepool to use linkedlist to improve readability and maintainability of the code
removed unnecessary parameters from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and simplified the ` DataTransfer
hbase - 2328 add - infoport to testthriftservercmdline . java to make it easy to run testth
added a check for EOF in the RegExpScanner class to ensure proper handling of EOF characters in the regex scanner
added checks for enabled metrics and timer properties in Debug . java to ensure that metrics and timers are only processed if they are present
fix potential npe in chatroomjabberimpl . checkroomname ( )
improve error message when file be miss or inaccessible
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message format in BuckConfig . java for clarity to improve readability and maintainability of error messages
[ hotfix ] [ yarn ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a synchronized implementation for
set SSL URI to " https : / / btcchina . com " in BTCChinaExchange . java to ensure compatibility with the
pmd : make sure the output file be relative to the project ' s base directory
added OauthController and Oauth2PluginTest classes for OAuth integration and testing functionality to facilitate OAuth2 authentication in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future updates
refactor ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` , ` StreamEx ` , and ` EntryStream `
updated error logging message in RestCodec and added error handling in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error handling
added a comment to the ` shouldComeFromThisClassLoader ` condition in ` RobolectricClassLoader . java ` to clarify
inverted the condition to check if the sdp is not in transmittableAudioEncodings to ensure that the sdp is not in the transmittable
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` and
added methods to check the count of st _ gml31 and st _ gml32 measurements in NormalizedMultiValuesTest . java to
added a volatile boolean field ` wasInvoked ` to ` NetworkTestUtils ` and updated related test cases in ` UaaHttpRequestUtilsTest `
added a check to ensure the regex mapping is configured before expanding fields in ColumnarDataSource and updated return types in RowProcessor and BinaryResponseProcessor
refactor ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and introduce a new method ` getPositionsArray
added new classes XLCDCommunicator and XLCDController , and refactored firmware handling in FirmwareUtils to enhance the
( chore ) camel - kie - maven - plugin : allow the kie - plugin to load schema from the kie - api
added retry logic to multiple event queries in EventQuery001 , EventQuery002 , EventQuery003 , ContractLogTrigger , and TransactionLogTrigger
replaced thread state assertions with thread join method in WorkerProcessPoolTest . java to simplify thread management and improve code readability
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
updated FREEZE _ V2 , UNFREEZE _ V2 , and UNLEGATE _ RESOURCE values from 20000 to 10000 to
added exception handling to the command method in DownloadPlugins . java to ensure proper configuration management during plugin execution
deleted the ` SpringTransactionHooks ` class and replaced its usage with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest ` to
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file GetUninitializedStringValue . java that implements a test for handling uninitialized string values to facilitate testing of string
added support for provided dependencies querying in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment to improve dependency management and ensure correct
added a new BooleanFlag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable automatic synchronization of keyboard
replaced the handling of system anomaly message with a static boolean flag to track bug reporting state to improve code readability and maintainability by
added a constant for the Cinepack format in FormatConfiguration . java and updated LibMediaInfoParser . java to utilize it to enhance
added camera bobbing support and adjusted translation parameters in the Player class to enhance the player ' s responsiveness based on the camera '
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in the ` GrpcCasBlobUploader ` class
deleted the HSQLDBServerFilesFilter class and modified the file listing logic in TestUtility to streamline the code by eliminating unnecessary
added a condition to check if restoreFromSeed is not null before proceeding to avoid potential null pointer exceptions when restoreFromKey is null
updated the method for retrieving the API data series version and added a logging statement for missing title to improve clarity and traceability of the API
added a check for the existence of a method in the HasTypes class to ensure that the method does not already exist before proceeding with type
replace hardcoded array size with a constant for the number of values in AmbientCubemap . java to improve code readability and
[ netbeans - 4891 ] add a warning message when the mode be not configure properly .
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskFirstN classes to ensure
refactor test to use temporaryfolder instead of file . createtemp to improve test reliability
added a new method ` isItemStackDamageable ` and ` getHasSubtypes ` to the ` ItemStack ` class to
fix mc - 167447 : use line _ width instead of alpha for render state
simonstewart : set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in firefoxdriver
updated condition in Http1xClientConnection to include additional checks for HTTP method and response status codes to ensure proper handling of HTTP requests and improve
updated task type from " compile " to " process - classes " in JoobyMojo . java to align the task ' s
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( 1L ) ` in ` HTTPHC4Impl . java ` to
added a check for aggregation function suffix before processing AGGREGATE _ FUNCTION _ IDENTIFIERS in AmbariMetaInfo . java to ensure
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use mFullscreenParams for corner radius retrieval to improve
added a new Java class to calculate and print the frequencies of an integer array to facilitate the counting of elements in a specified number
set ch1 to null in ClusteredAgentManagerImpl . java to ensure that the SocketChannel is initialized to null to prevent potential null pointer
refactor MutisignOperationerGodicTest . java for improved readability to enhance maintainability and facilitate future
added exception handling for NoSuchElementException in StaxEventItemReader and created a new test for restarting at end of a file to improve robustness
replaced specific text imports with a wildcard import and modified return statements in ShadowTextView . java , and added null checks in TestAttributeSet
replaced the import of ` com . nimbusds . jose . shaded . json ` with ` net . minidev
updated OS detection logic to handle both AIX and Linux architecture to ensure compatibility with AIX architecture and improve compatibility with different operating systems
cloudstack - 3892 : use router . id ( ) instead of privateipaddress ( ) for the dhcp / removevpn command
added a method ` invokeWithoutBlockingWithResultSync ` to handle ` RunnableWithResultSync ` in ` CN . java ` to facil
remove test that be no longer needed in an integration test
replace integer casting with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code readability and
updated formatting of method calls in TestClusterDumper . java for consistency to improve code readability and maintainability
updated the return statement in KeyValue . java to include a new size calculation and added a null check for rowCache to ensure proper alignment of data
camel - 1774 : add a service to the default camel context so that it can be use with the default type converter .
added handling for ConditionalTask instances in SparkCrossProductCheck . java to ensure proper task execution for conditional tasks
updated action handling in Launcher , LauncherAppState , and LauncherModel classes to ensure proper reloading behavior for managed profile actions
updated the condition in ` LoginInfoEndpoint ` to include an additional check for ` jsonResponse ` in the ` loginInfoEndpoint ` to ensure correct
added a method ` toDescriptiveString ` to the ` AssignmentManager ` class to provide a detailed representation of the region ' s state and
renamed ` message ` to ` msg ` and ` result ` in ` HuobiAccountInfo ` to improve clarity and consistency in
added support for " PERIOD " column in MariaDB and created a corresponding test in AddColumnGeneratorTest to ensure proper handling of "
[ beam - 1349 ] [ beam - java8 ] add default environment option to portablepipelineoptions
added comments for Android 7.1 - you now have Launcher shortcuts in VersionChangeLogs . java to clarify the purpose of the
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public to allow access to the NUM _ MILLIS _ IN _
removed debug print statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] use aeron client invoker for archive and consensus module .
added validation for implicit lambda parameters and introduced a new class NoWarnOnImplicitParams with generic interfaces to enhance validation logic for implicit lambda parameters and
refactor menu item visibility and enabling methods in FileMenuFilter and add a method to hide menu items to improve code readability and maintain
updated BTCETransHistoryResult and BTCETransHistoryJSONTest to use BTC _ deposit instead of withdrawal to
changed lists to sets for series , exceptions , and exceptions in RetryFilterFunctions . java to improve performance by reducing the number of elements in
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should no longer be used
updated conditional logic in LastQueryExecutor and added a new test case in IoTDBLastIT to ensure proper handling of unseq time larger than
updated newline character handling in HttpResponse . java to ensure proper newline formatting for better readability
added a static block to set the system property " org . slf4j . simpleLogger . log . org . apache . http .
added a line to set the safe area of title bar in the Sheet class to ensure the title bar is safe for better user experience
refactor the iteration method for retrieving TimeSeriesChunkMetaData from TimeSeriesChunkMetaDataList to improve code readability and maintainability
added SQL statement to alter table names in AlterTest . java to ensure proper SQL parsing and deparsing of the table
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - rexecutorservice . executeasync ( ) method do n ' t call to completablefuture
h2 console : add ` ` . part ' ' suffix to filelister and filesystemsplit
refactor multiple Orc - related Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor conditional checks for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
refactor ` reduceScopeForLimitedSpace ` and ` checkAvailableDiskSpace ` methods to use ` expectedSize ` instead of ` expected
added ` toString ( IndexReader ir ) ` method to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector
added null check for mLastGestureState in AbsSwipeUpHandler and unregistering the task stack listener in TaskAnimationManager to ensure
refactor lock timestamp methods to use instance variables instead of static context to improve code readability and maintainability by centralizing preference management
refactor artist retrieval logic in MediaInfoParser . java to use a dedicated method to improve code readability and maintainability by encapsulating the
added null check for remoteMessage before accessing its data in NCFirebaseMessagingService . java to prevent potential NullPointerException when remoteMessage is not
added null checks for splitInfo and headerFlowFile in SplitText . java and new test cases in TestSplitText . java to ensure robust
added support for Windows key store handling in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
updated DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to ensure
added a condition to check if the result code is not found in FileSyncAdapter . java to ensure proper handling of file - not - found
added animation functionality to the Slider class for improved animation control to enhance user experience by allowing custom animation transitions
reformatted assertions in LineSeparatorProcessorTest . java for consistency to improve code readability and maintainability
reduced maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve texture packing efficiency by reducing the maximum size
added a test for negated Ternary in UnnecessaryParenthesesTest . java and modified the condition in UnwrapParentheses . java to
camel - 7011 : fix npe in hazelcastqueueconsumertest when poll timeout
added a new ` TextFeedbackTest ` class and refactored the ` TestRunner ` and ` TestRunner ` classes to enhance testing capabilities
replace Math . round with Float . compare for score comparison to improve accuracy in score comparison logic
updated DENSITY cases in AddAndScaleMultiImage . java and modified save method in ResourceEditorApp . java to use a try -
added a method to retrieve the array class element offset in HotSpotReplacementsUtil . java and updated ArrayCopySnippets . java to improve
[ java ] do n ' t log stage total when there be no metric
added support for remote SCM support in the configuration and runtime environment to enhance flexibility in managing remote SCM support based on command - line
added additional state checks for STATE _ END and STATE _ RINSE _ HOLD in MieleApplianceHandler . java to enhance
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging in ` StatsLogCompatManager . java ` to improve
corrected the variable name from ' log ' to ' LOG ' for consistency to improve code readability and maintainability
added unit tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure proper serialization and deserialization of ProjectGeneration
ggb - 1889 add support for select _ tool _ points and feature . preview _ points
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future updates
added a validation check for the remaining time before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas to ensure that random reads are
updated multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the Ldflags list in NdkCxxPlatform
refactor SpringCloudCircuitBreakerFilterFactory to utilize ServerWebExchangeUtils for expanding fallback URIs and update request mapping accordingly to improve URI
refactor multiple test classes for consistency and clarity to enhance maintainability and readability of the codebase
added null checks for URI and localName in ReadOnlySharedStringsTable . java to improve robustness by preventing potential NullPointerExceptions
added a new method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to enable
added a check for availTextWidth in SwingUtilities2 . java and modified the Look and Feel setting in Test6635110 .
refactor FlatteningIterator to simplify iterator handling and improve clarity to enhance code readability and maintainability by reducing redundancy
updated the ` removeColorHtml ` method calls to remove leading and trailing spaces in ` title ` and ` body ` to ensure consistent formatting of
doc : generate sample code in the java microgenerator ( # 119 )
add a test case to reproduce a bug in instructorfeedbackedit questionsuitest
updated return values and conditions in HSSFSheet . java and added new assertions in BaseTestSheet . java to improve row number handling and
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents in the launcher
[ java ] fix race condition in sequenceragent when a session be already connect .
refactor ` hashCode ` and ` equals ` methods in ` AbstractParquetMapInspector ` for improved null checks to enhance code robustness
added a check to flush and release buffer when remotely closed to ensure proper resource management and prevent memory leaks
changed the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader `
removed the deepCopy ( ) method from the GsonBuilder class to streamline the code by eliminating unnecessary properties
make lcsourcebuilder . getllsourcemap ( ) more efficient .
refactor file opening and closing logic in RestClientRequestImpl . java to improve code readability and maintainability by reducing redundancy
removed unnecessary whitespace in the dispatchStatusString method call to improve code readability and maintain consistency
refactor ClassLoader handling in MockFactory to use a new SearchingClassLoader class to improve class loading efficiency and maintainability by reducing unnecessary class
add test for refresh flag bug
added LEFT _ SEMI _ JOIN condition to the condition check in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SE
updated response and request completion logic in HttpReceiver and HttpSender classes to improve response handling and response status checks
update array length offset method calls to use arrayOopDescLengthOffset instead of arrayLengthOffset across multiple classes to ensure compatibility with the latest
http : / / issues . apache . org / jira / browse / amq - 4892 - set default policy to broker service
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a check to ensure appCtx is not running before stopping it to avoid unnecessary execution when the application is stopped
changed the return type of the drawItem method from void to GlyphLayout and updated its implementation to return a GlyphLayout object instead of void to
refactor SpringmvcClient to use MetricsPublisher for metrics retrieval to improve metrics management and enhance error handling
removed the SAFE _ ACCOUNT _ AGE _ DATE constant and simplified code formatting in AccountAgeWitnessService . java to improve code cl
reformatted code for improved readability and consistency in StructureHeader and StructureReader classes to enhance code readability and maintainability
added a new ` ResourceUrlProviderExposingInterceptor ` to the ` CasWebflowContextConfiguration ` and associated tests to enhance the handling of
add a dexreturninliner to dexbody , and add a dexreturninliner to the dexpler class
refactor enrichedruledto to use rule . getproperties ( ) instead of rule . getconfiguration ( ) . getproperties ( )
removed the NOFOLLOW _ LINKS parameter from the isDirectory method in PathResource . java and added a new symlinkDir parameter in AliasCheckerSymlink
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
rename ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and introduce ` hasRRDotJavaPackages ` in multiple
add test case for astpackagedeclaration . getpackagenameimage ( )
added a configuration property for minimum cross compaction unseq file level in IoTDBDescriptor . java to enable dynamic configuration of the unseq file level
[ hotfix ] [ runtime ] move resourcemanager class to org . apache . flink . resourcemanager . active
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI construction in ZipResource . java to handle URISyntaxException and added a new test class ZipResourceTest . java to improve error handling and ensure
refactored thumbnail handling logic in ExpandableUploadListAdapter . java to improve clarity and functionality to enhance the functionality of thumbnail generation and
refactor configuration merging logic in RobolectricTestRunner and add corresponding tests in RobolectricTestRunnerTest to improve clarity
updated block and item registry retrieval to filter out null registry to improve robustness by avoiding potential null pointer exceptions
refactor abstract methods in AbstractDataChangedListener and update WebsocketDataChangedListener to extend AbstractDataChangedListener and update WebSocket connection handling to
updated JSONPojoConvertor to handle enum types and added color handling in JSONPojoConvertorTest to improve compatibility with enum types and
added a deprecation warning for the deprecated ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the deprecated `
replaced ` String ` with ` byte [ ] ` for ` originalPayload ` in ` GWTRequestWrapper . java ` to improve data handling
added orientation correction functionality to the GyroControl class to enhance user experience by providing visual feedback based on device orientation
change biome _ list _ size from 256 to biomegenbase . getbiomegenarray ( ) . length ( ) . length
updated method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and made interfaces public in ` Foo ` and
updated the declaration of the ` env ` variable in ` FileCompilerConfig . java ` to ensure consistent usage of the ` jdtCompiler `
added a new interface ` ByteToLongCollector ` to handle byte - to - long values in the collector package to facilitate the conversion
added a preload parameter to the MMapDirectoryFactory class to enable dynamic loading of map directory based on user parameters
added custom metrics for worlds , economy , economy , and mysql in BukkitPlatform . java to enhance
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image drawable in CardPresenter . java to enhance user experience by providing a customizable tile port folder
[ dspace - 4892 ] use loginpageurl in authenticationcountselector and loginredirect
updated cloning logic for longValues , doubleValues , and byteValues in VectorHashKeyWrapper . java to handle empty lengths to improve robustness
added tests for the System . nanoTime ( ) method in TimeChangeTest . java to ensure correct handling of nanotime calculations for interpreter and
added trimming of input lines in MultiPartFilter . java and printed the parameter in MultipartFilterTest . java to ensure proper handling of null
add livingexperiencedropevent to fire attackingevent .
updated error messages and status details in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and provide clearer guidance of error
[ beam - 1390 ] remove unsupportedoperatorsvisitor and use it in beamqueryplanner
refactor GraphEnhancementQueryEnvironment to utilize RdepsFunction for dependency retrieval to improve code clarity and maintainability by utilizing
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a check to determine if the component is an entire rocket before setting the selection option to ensure the selection option reflects the entire ro
replaced ` Arrays . toString ( ) ` with ` assertEquals ( bytes , rs . getBytes ( 4 ) ) ` in ` Updateable
refactor time boundary handling in BaseBrokerRequestHandler for improved clarity and efficiency to enhance code readability and maintainability by reducing duplication
[ java ] fix regression in apr connector for http / 1.1 . 0
updated regex pattern and modified album title handling in EightmusesRipper . java to improve URL processing and enhance clarity to enhance
replaced direct calls to ` mDevice . wait ` with ` TestHelpers . wait ` across multiple test files to improve code readability and
added a condition to check if the profile is a phone and not landscape in QuickstepLauncher . java to ensure proper layout behavior for phone
updated assertions in PartTreeJpaQueryIntegrationTests to use unwrap ( QueryImpl . class ) instead of getValue ( query , PROPERTY ) to
replaced direct calls to ` Files . readAllLines ( ) ` with a new method ` readMatchingLines ( String param ) ` to improve
added dynamic check for the " getResultStream " method in JpaQueryExecution to ensure proper invocation of the " getResultStream " method in the
added null check for entity type in PhysicsProcess . java to prevent potential NullPointerExceptions during entity processing
add test to ensure entry processor do n ' t clear map when attribute be set
add a new operationsetjitsi - conference - room support for jitsi - conference - room .
updated color formatting in Utils . java and modified htmlMessage in UtilsTest . java to improve color management and clarify the HTML message format
disable the menu item if it ' s empty
updated the scratch path format in Aapt2Link . java and added a RmStep for cell relative paths to improve clarity and functionality
replaced instances of ` newMock ( ) ` with ` createNiceMock ( ) ` in ` ExternalJavacTest . java
make sure selection be update after update
added handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error handling and provide clearer context for
added ` isCanceled ( ) ` method implementations across multiple classes and updated ` ExecutorCallAdapterFactory ` to use it to improve the handling of
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code readability and maintainability by eliminating
added a default implementation of the ` removeAllWidgets ` method in ` UILayout . java ` to throw an exception when the method is not
[ hotfix ] [ test ] fix test failure in yarnsessionfifoitcase and yarnsessionfifoitcase
opensslcipher : fix incorrect calculation of output size for final byte .
updated video handling logic in PlaybackController to conditionally use direct profile based on video dimensions to ensure proper transcoding of high - res content
[ beam - 1349 ] fix test failure in spark - execution - datasources
replaced Date import with a wildcard import and modified listener handling logic in GpsLoggingService . java to improve code readability and maintainability
updated ` putString ` method to accept ` byte [ ] fullwidths ` instead of ` boolean [ ] fullwidths ` and introduced JNI
added support for ` BaseItemDragListener ` in ` FolderIcon . java ` to handle drag events in ` ShortcutInfo . java `
added createEmptyArtifact methods to RepositoryConnector , FileSystemConnector , SignavioConnector , TagConnector , and related classes to handle artifact creation
reformatted line breaks in RabbitMQPublisherImpl . java for consistency to improve code readability and maintainability
removed the check for afterAug1 in VideoViewerActivity . java to simplify the condition for video link loading to improve code readability and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - add a
fix flaky test by increase test timeout
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
added support for LARGE _ FERN alongside DOUBLE _ TALLGRASS in BlockDoublePlant . java and BlockType
replaced ` tree . setFocusable ( false ) ` with ` tree . setRequestFocusEnabled ( false ) ` in TranscodingTab . java
cloudstack - 4892 : do n ' t swallow exception in vmmanagerimpl . getvirtualmachine ( )
added a method to accept the license in DB2TestSystem and modified the condition in DockerDatabaseWrapper to ensure compatibility with DB2TestSystem
refactor unit management in ` DoubleModel ` and ` GeneralOptimizationDialog ` classes to use a unified ` setUnitGroup ` method to
added a new constant BTC _ ZMW to the CurrencyPair class to facilitate the use of BTC and ZM
added a check to set the number of samples in TestPBRLighting . java based on the settings to ensure that the PBR light
removed redundant " job . " prefix from test assertions in StepWithSimpleTaskJobParserTests . java to streamline test execution by elimin
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability and enforce immutability
fix for ggbabs ( ) and ggbabs ( ) in expressionnode . tostring ( ) .
added multiple calls to ` addServiceOutput ( ) ` and modified the trigger logic in ` DDLSemanticAnalyzer . java ` to improve
[ drlx ] fix bigdecimal coercion in executable model
added " org . eclipse . jdt . " to the WebAppContext . java file to hide the jdt used by the Jetty
removed the call to super . useAuthCache ( ) in NegotiateAuthentication . java to simplify the authentication logic by eliminating unnecessary
updated namespace assignment to use Utils . capitalize to ensure consistent capitalization of segments in the page title
camel - 1774 : camel - direct - component - add a directconsumernotavailableexception to avoid backwards compatibility with camel - 1.
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is not initialized
updated progress bar step message formatting in Loader . java to improve code readability and maintainability
replaced direct calls to ` mVibrator . cancel ( ) ` with a new method ` runOnUiHelperThread ( )
added a method to update the last remote stream ID in HTTP2Session . java to ensure that the last remote stream ID is updated correctly
added text anti - aliasing option to the Graphics2D in EditorHeader and EditorToolbar classes to enhance the visual appearance of text in
[ java ] : move term window size from driverconnection to driverpublication and remove unused variable
fix : remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` in ` WRobotPeer .
added a new method ` newPrintStream ` to handle UTF - 8 encoding in output and error streams to improve character encoding handling for output streams
increased the vibration duration from 1 to 25 milliseconds in TouchableMovementMethod . java to improve the responsiveness of the
added import statements for various classes in AppEngineSqlCloudSession , FlybushDataClearer , and TestEnvironment to enhance code cl
refactor WebSocketClient constructor parameters to improve clarity and consistency to enhance code readability and maintainability
simonstewart : move i18n . html to selenium - server / tests / test _ i18n . html
refactor exception handling methods in BytecodeParser and SharedGraphBuilderPhase to improve clarity and consistency in error reporting to enhance error reporting and
added a call to ` context . restoreAuthSystemState ( ) ` in ` XmlWorkflowServiceIT . java ` to ensure proper state management
added a new ` LowercaseComparator ` class and modified the constructor calls in ` CoNLLUFeatures ` to use it to improve comparison
refactor JavadocTool to handle unique files more effectively and improve file parsing logic to enhance code clarity and maintainability by reducing redundancy
simonstewart : add more test for toggle option in multi - select and multi - select
added a check for the length of keys in HighestKvno . java to ensure that the code does not exceed the expected number of
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging warnings when only Huge objects BTrees are supported
[ beam - 1349 ] [ table - planner - blink ] use writeresult instead of pdone for expand ( ) ( #
corrected the name of the XML root element from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added multiple API implicit
added a new file TestMultiANewArray . java that implements a class for testing multi - dimensional arrays to facilitate testing of
added a new configuration option " UseSecondaryStorageVm " to manage a secondary storage per zone to improve flexibility in managing secondary storage per zone
refactor block ID handling logic in SyncBlockChainMsgHandler . java to improve clarity and maintainability of block ID addition logic
set the theme for the preview tab in PreviewTabView to ensure the correct theme is used for the preview tab
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and modified the connector ' s idle timeout configuration in ServerConnectorTimeoutTest .
add a new property to the coref . properties , and use it in dictionaries . getstringarray .
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method
updated generic type usage and corrected parameter values in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve type safety
changed log level from warn to debug in DistributedQueue . java to provide more detailed logging information for child nodes
refactor ColorExtractionService to use a new method for retrieving the hotseat palette to improve code readability and maintainability by centralizing
replaced ` DefaultDataTableEntryTransformer ` and ` TableCellByTypeTransformer ` with their respective ` TableEntryByTypeTransformer ` and ` TableCell
removed an assertion that checks if newAvailableShared is less than initShared to streamline the code by eliminating unnecessary assertion
chore ( regen ) : fix docstring formatting ( # 19 )
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
added GET and POST routes for contact form requests in Routes . java and created a new Contact class in ApplicationController . java to enhance contact form
guac - 589 : improve simpleruser . getpermissions ( ) to return objectpermissionset instead of permission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
corrected the spelling of " KnowledgeBase " to " KieBase " in the setMode method signature to ensure compatibility with the
updated method names and references from " findWhereNameLikeAndActive " to " findWhereNameOrAliasLikeAndActive " across multiple classes
replaced manual closing of per - document consumers with IOUtils . closeSafely to streamline resource management and improve code readability
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflow button in ExpansionViewHelper . java to allow users to click on the overflow button when the menu is
updated failure messages to specify " is a " instead of " is null " and " is not null " in multiple classes to improve clarity
ggb - 1366 update the line height of the help button in the algebra view
move protobufferutilizertest out of network package to core . util
update divider position and side pane width calculation in JabRefFrame . java to ensure proper handling of divider position and side pane appearance
added support for crossref in aux file generation
[ geos - 5892 ] fix warning in geoserverfeaturestore , geoserverfeaturelocking , geoserverfeature
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in variable naming
fix a bug where avatar be not update when a contact have no avatar
updated import statements for ShellCommand and ShellFactoryImpl to reflect the new package structure to ensure compatibility with the new package structure
added a test method to clean up audit log table post parameters by position in AuditLogTest . java to ensure proper cleanup of audit log tables
changed the return type of the inject method from generic T to Object and added a suppression warning for unchecked type casting to improve type safety and
added regex patterns for parsing ` commentLine ` , ` invalidCommentLine ` , and ` endLineComment ` in ` ACLFileParser . java
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to include ` DrillTable ` and ` FileSystemPlugin `
added a new HashMap < String , String > and refactored ancestor dimension handling in StarTreeImpl and TestStarTreeNodeImpl to improve
added a user unlock check before dumping plugin manager state in TouchInteractionService and refactored close open views methods in BaseQuickstepLauncher
updated variable name from widthStr to positionStr in Photo . java to improve clarity and consistency in variable naming
refactor certificate validation logic in PKIXValidator . java to improve readability and maintainability of certificate validation logic
[ hotfix ] [ test ] add archunit test for the test code
updated package declarations for multiple test classes from ` org . apache . shenyu . integratedtest . alibaba . dub
cloudstack - 3892 : remove redundant call to skipprojectnetworks ( ) in aclserviceimpl
replaced ` remove ` method with ` get ` for retrieving the shape type in ` RuntimeTypeAdapterFactoryFunctionalTest ` to ensure the
added a boolean flag ` storeUndoInfoForProperties ` with getter and setter methods to control the state of undo information based on properties
replaced direct retrieval of the " sun . java2d . xrgradcache " system property with a privileged action to ensure that the
updated StreamCloseTest to use awaitility for checking the size of streams to improve test reliability and reliability by allowing more time for stream
modified the initialization of ` perFields ` in ` TermVectorsConsumer ` and adjusted related logic in ` DocFieldProcessorPerField ` to improve
do n ' t mark deprecate property a deprecate
refactor capacity and mask assignments in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and ensure immutability
updated the maximum number of threads from 25 to 15 in HiveConf . java and modified file renaming logic in Hive . java to improve file management
[ java ] add some trace logging to parallelniosender .
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerException when context is null
[ gr - 4892 ] fix nativeimagebuildserver to use the correct class loader .
changed the return type of ` modifyGrantedAuthorities ` method from ` void ` to ` List ` in ` SwitchUserAuthorityChanger `
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and add RawJaxrsIntegrationTest and JaxrsSpringMain classes to
refactor ` HikariPool ` and ` PoolUtilities ` to use a new method ` setQueryTimeout ` for query timeout handling to improve
added multiple data providers for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to enhance test coverage for specific
replaced eventWriter . close ( ) with delegateEventWriter . close ( ) in StaxEventItemWriter and added close ( ) method
added support for MariaDB sequence generation in MariaDBDatabase to ensure compatibility with specific database versions and improve sequence handling
updated formatting in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , Int2ObjectCacheTest , and Int2ObjectCacheTest files to
replaced BrokerResponse import with TableDataManagerProvider import and set server metrics in multiple test files to streamline the code by eliminating
added support for " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " properties in SSLExtension .
updated ObjectHashSetIterator to remove generic type T and improved constructor parameters to enhance type safety and maintainability of the iterator implementation
updated character count in Compose . java and TweetFragment . java from 22 to 23 for the shortened URL to ensure accurate character count
added a datapoint ttl field to the CassandraDatastore class and updated the write buffer methods to include it to enhance data point data handling by allowing
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and adjusted its logic accordingly to enhance user
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve the terraing at a specified cell
added default value printing in mmm Pretty . java and created a new file T6665791 . java with a Java compiler test to
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve robustness by providing a clearer error message when
modified the return statement to include a condition to check if the transport is not pushing to ensure that push support only occurs when the transport is
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign method for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary signing logic
modified return logic in FileSystemView and Win32ShellFolder2 to handle empty roots and added security checks in Win32ShellFolder2 to improve
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality to enhance code readability and maintainability by
refactor ListFragment to use SparseArray for undo notes management to improve memory management and reduce memory usage during note selection
update backup data to update feedback question id
added a null check for data in getTransferData method to prevent potential NullPointerExceptions when data is null
remove deprecate pstmelegate interface and package - info . java
replaced ` Padding ` class with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` to
refactor MethodHandle initialization in NashornBeansLinker to use a static block to improve code readability and maintainability by encapsulating
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` latch ` to ` goAwayLatch ` for clarity to improve code readability and maintainability by using a more descriptive
replaced ` assertThat ( expectFailure . getFailure ( ) . getMessage ( ) ) ` with ` assertThat ( expectFailure . getFail
replaced instances of ` ThreadLocal . get ( ) ` with ` null ` for ` currentBook ` in multiple classes to simplify the retrieval
modified the ` vote ` method to include an ` supports ` method and added a type check for ` MethodInvocation ` to enhance flexibility in
removed unused imports from DataLoader . java to clean up the code and improve readability
updated postUpdateLog method to accept an integer of rowsAffected and modified log message formatting to include row count information to enhance log updates by providing
ggb - 1369 move scaler . getStyle ( ) . setmargintop ( ) to euclidiandockpanel
set default foregroundFPS and backgroundFPS values to 60 in JglfwApplicationConfiguration . java to ensure that foregroundFPS and background
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
updated WebSocket frame handling in DefaultHttpServer . java to use ChannelFutureListener instead of DefaultWebSocketFrame to improve WebSocket frame management and ensure proper
updated ` StateMachineErrorTests ` to use ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` instead of ` TestApplicationEventListener
replaced the ` finish ( ) ` method with a ` setListBackground ( ) ` method to set the background color for the ` List
replaced ` org . apache . commons . lang3 . StringUtils ` with ` org . openhab . core . util . StringUtils `
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on a string to enhance
updated formatting in Put . java and ReplicationSink . java files to improve code readability and maintain consistency
replaced VALID _ CACHE _ SET with REGEXP _ CACHE and refactored regex handling logic to improve performance and performance by reducing unnecessary
added a static method to reset the gameThread variable to provide a way to reset the gameThread instance
added a null check for the realm in the login method of DigestAuthenticator to prevent potential null pointer exceptions when the realm is not set
refactor parameter handling in ` SavedRequestAwareWrapper ` and ` SavedRequestAwareWrapperTests ` to improve clarity and functionality to
updated InfoStatus messages to use variable name instead of hiddenSingleton to improve clarity and consistency in logging messages
replace ` waitPoint . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and `
added a check for Android O and introduced a new method to check if the image view is not Android O and enhance user auto - completion functionality
updated schemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to ensure consistency in schema info level configuration
replaced ` XMLStreamWriter ` with ` BufferedOutputStream ` in ` SaveTask . java ` and removed ` writer . writeEndElement ( ) ` in
updated TestPayloads . java to use UTF - 8 encoding for random byte values and improved string conversion methods to enhance compatibility with UTF -
fix mc - 103516 not be able to get entity from the list . close # 103516
added " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " to the list in ProbeConfig . java to support
[ drools - 1340 ] fix serialization of multi - accumulate in protobuf
reformatted case statements in NowSearchTerm and SearchTermBuilder for consistency to improve code readability and maintainability
changed the access modifier of the PDFCloneUtility class from public to package - private to allow external access to the class from other packages
updated RemoteEndpointServiceAccessStrategy to utilize SpringExpressionLanguageValueResolver for endpoint URL resolution to improve flexibility in endpoint access by allowing dynamic
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start events
updated the ` recomputePreviewDrawingParams ` method to accept a ` Drawable ` parameter and added a null check for ` mReferenceDrawable ` to
updated tokenizer and filter factories in LukeRequestHandler . java to use CharFilterFactory instead of TokenFilterFactory to improve flexibility in handling
replaced manual null checks with a utility method ` ParamChecks . nullNotPermitted ` to improve code readability and maintainability by using a
updated the ` createSubContext ` method to include a verbosity parameter and conditional output based on verbosity to enhance flexibility in logging output based on
added a check to convert the schema to uppercase if it is not null and the database type is " oracle " to ensure compatibility with Oracle database
add logmanager . getcontext ( false ) . getclassname ( ) . getclassname ( ) . getname ( ) . get
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to demonstrate the garbage
replaced string splitting with Splitter ' s on method for customPackages to improve code readability and maintainability by using a more concise
updated ` AnalyzingInfixSuggester ` and ` AnalyzingInfixSuggesterTest ` to remove UTF - 8
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 3891
updated the output statistics command in ModelExplorer and SequenceModelExplorer , and changed the output hash in StripProvenance to include jsonResult in Strip
pdfbox - 4071 : remove unnecessary null check
changed FORMATTER variable from final static to static final in multiple field tests to ensure immutability and prevent potential null pointer exceptions
replaced Apache Commons Logging logging with Java ' s built - in BigDecimal and RoundingMode for rounding to improve compatibility with Java ' s built
[ jsscripting ] use configparser . valueasororififabsent instead of check for null
changed class visibility of Test1 and Test2 from package - private to public to allow external access to these classes
updated player event messaging to use " deny . no _ enter " instead of " permission . no _ permission _ event " to enhance user experience
modified the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a ` Session ` parameter to enhance
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in
added randomness calculations for Box2DCharacterController in Box2DCharacterControllerTest . java and reset friction in the contact list
added tests for larger memory and thread buffer sizes in TestBadOptionValues . java and implemented a test case in TestMemoryOptions . java to
removed unnecessary assertions for " must be power of 2 " and " must be a multiple of 8 " in ObjectAlignment and Options classes to stream
added functionality to extract the target package from the manifest in the Android instrumentation tests to enhance the instrumentation process by allowing users to specify the target package
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Arrays . asList ( Arrays . asList ( ... ) ) ` with ` new ArrayList < > ( Arrays . asList ( ... )
8279555 : test / java / lang / reflect / invokeexact / test6987555 . java fail on jdk
reformatted code for improved readability and consistency in MessageHandler . java to enhance code clarity and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the el ' s locale in EvaluationContext to enhance locale management in the evaluation context
removed the import of Plugin from SummaryPrinter . java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to ensure proper handling of the break statement in the activity
updated import statements in MongoQueryCreator . java to use wildcard imports and improved debug logging to enhance code readability and maintainability by using
added a new constant for the XWork logger factory and integrated it into the LoggerFactory class to enhance logging capabilities by allowing customization of the
renamed methods in AdminAddPeerWithP2PDisabledAcceptanceTest for clarity to improve clarity and consistency in naming conventions
rename ` @ ConditionalOnMissingBean ` to ` @ ConditionalOnMissingBean ` in ` AvailabilityHealthContributorAutoConfiguration ` and ` Availability
added a concurrent map for PStore configuration and modified return logic in LocalPStoreProvider . java to improve concurrency management and ensure proper handling of
changed the visibility of the ` deleteFiles ` method from public to private to encapsulate file deletion logic within the class
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator . java ` and
do n ' t throw an illegalaccessexception in javainteref . findfield ( ) and javainteref . set ( )
added checks for toolchain creation in AbstractCell and ToolchainProvider classes and implemented a test for Android SDK changes in DaemonLifecycleManagerTest to
fix race condition in polyglotengineimpl . removecontext ( )
replace ` indexOf ` with ` contains ` for string checks in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by
updated ` PrebuiltCxxLibraryDescription ` , ` PrebuiltCxxLibraryBuilder ` , and ` PrebuiltCxxLibraryDescriptionTest
refactor ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated type parameters in multiple classes to use generics for better type safety to enhance code readability and maintainability by using generics
updated the method to retrieve the hash of the newBlock object to ensure the correct hash is used for the newBlock object
use getstorepathphysic ( ) instead of storepathcommitlog in defaultmessagestore
removed unnecessary try - with - resources statement in MicrometerMetricManager . java to streamline code by eliminating unnecessary try -
added message count and total count tracking based on message status and elapsed time in CompactionLog . java to improve message tracking and track elapsed time
added @ Deprecated annotations to multiple query classes to indicate that these classes are outdated and should not be used in the codebase
added a method to check for the presence of a system UI object and execute a shell command for keyguard status view to enhance test reliability
changed logger and principals fields to final in SessionRegistryImpl . java to improve immutability and ensure immutability of logger and sessionIds
added a check for empty cookieJar in InMemoryCookieStore and a test for the removeAll method in NullUriCookieTest to ensure that the
fix potential npe in bonsai worldstateupdater . rollback ( ) and rollforward ( )
changed method parameter types from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to improve
added a @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not in marionette mode due to
added a finally block to ensure the destination connection is returned in a finally block to improve resource management and handle potential IOExceptions
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a call to updateFirstLineShowing ( ) in TextArea . java to fix drag - selecting text out of the TextArea to
added temporary and staging directory configurations to the configuration overlay in TestInformationSchemaWithPrivilege . java to enhance the flexibility of test configuration by allowing
refactor graphics configuration retrieval logic to use if conditions to improve readability and maintainability of the code
tika - 1357 -- upgrade tika - core to 2.0 . 0 - rc1 to 2.0 . 0
camel - 1774 : fix pipeline to not break out of pipeline .
refactor argument handling and tag extraction in PrintTagList . java to improve flexibility and readability of the model loading process
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
[ hotfix ] [ test ] fix invalid location size error in test
[ hotfix ] [ test ] fix race condition in startfromtruncatedrecordinglogtest
updated the calculation of the ' arc ' variable in LineBorder . java to use ' offs ' instead of ' arc ' to improve accuracy of
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure robustness by preventing potential NullPointerExceptions
removed the ` generateDeploymentId ( ) ` and ` resetDeploymentId ( ) ` methods from the ` StandardChangeLogHistoryService ` class
pdfbox - 4071 : fix typo found by codespell on fdf
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` method calls in ` AlterTableAddConstraint . java ` to
added provisional engine management in QuickfixjComponent and updated corresponding tests in QuickfixjComponentTest to improve engine management and ensure correct functionality
added displayZoomControls functionality to the RoboWebSettings class and modified the setMixedContentMode method to accept a mixedContentMode parameter to
added corporea block , brick , slab , and slab to the library .
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` EnableDisableMenuItems ( ) ` to manage menu items based on user settings to enhance user experience by allowing users to
updated the message for empty lists in ExtendedListFragment to use a filter list instead of server search to improve user experience by providing a clearer
hhh - 11879 - remove serviceregistry from test to make it easy to run test
added auto resize mode and column creation settings in MotorMountConfigurationPanel and updated constructor parameter in MotorMountConfigurationPanel to improve
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and subject properties in POIXMLProperties and updated tests in TestPOIXMLProperties to
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t throw an exception if the cnc file be empty .
rename ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` Command ` and update related method signatures to improve clarity
added methods to handle JMOD classes in ClassFileSourceImpl . java to improve class loading capabilities based on the presence of " . jmods "
updated TreeBackedElement and TreeBackedEnter classes to remove the canonicalizer parameter and utilize Preconditions for null checks to improve code cl
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and set request
updated array reference from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct handling
added sync method calls in ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper connections
add check for no current context in glutil . getcurrentcontext ( )
[ drools - 1340 ] do n ' t remove activation if it be active .
added a return statement in HystrixDashboardConfiguration . java to ensure proper handling of null values
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to improve robustness by
remove nightly test from clientqueuedisruptiontest
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . tostring ( )
changed the access modifier of the validateInstance method from public to protected to allow subclass access to the validateInstance method
refactor GeoPointField , GeoPointTokenStream , GeoPointInPolygonQuery , and GeoPointPrefixTermsEnum classes to improve code organization
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to facilitate testing of
fix forge not render helmet overlay if there be no bucket .
updated variable names and method names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve cl
added a check to return 0 if the variable ' v ' is less than or equal to 0 in TubeCalc . java to ensure that
replace calls to getBucket ( ) with BlobInfo . of ( getBucketName ( ) ) in GcsPinotFS . java to improve code
replaced a direct call to VertxUtils . blockCloseVertxByName with a finally block for better resource management to ensure proper resource management
added methods to create and recreate the history view in DbTriggerBasedHistoryDdl . java and PostgresHistoryDdl . java to enhance
updated the expected value of the checkEngine from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test reflects the
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test due to the test need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new class ` ParserState
updated the objectQuotingStrategy assignment logic in ChangeSet . java and added null checks for changeLog in DatabaseChangeLog . java to ensure proper
replaced ` parse ` method with ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve clarity and
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
refactor endorsed directory handling to use a new method ` quotePathList ` to improve code readability and maintainability by centralizing
added scrim animation functionality to the Launcher class and updated AllAppsBackgroundDrawable to use a new drawable alpha property to enhance user experience by
[ iotdb - 1642 ] fix type inference for integer / long type ( # 167772 )
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added path type checks and validation for absolute , relative , and unc paths in WindowsPathParser . java and corresponding test cases in PathOps
replaced InetSocketAddress instantiation with MulticastSocket instantiation in Promiscuous . java to simplify the code and improve readability by eliminating
removed redundant calls to writer . close ( ) in TestWildcard . java to improve code readability and maintainability
modify return statement to clone nBits instead of returning it directly to ensure that nBits is cloned before returning it
updated the access modifier of the deriveCollectorName method from private to protected and added unit tests for the ProfilerCollector class to enhance accessibility and
refactor type hint checks in MappingMongoConverter to use a dedicated method for clarity to improve code readability and maintainability by encapsulating
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance monitoring during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings related to unchecked operations
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by including the original exception details
replaced the method ` reinflateWidgetsIfNecessary ( ) ` with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion functionality in a file dialog to ensure that the file dialog
lwjglabstractdisplay : do n ' t call display . processmessages ( ) if autoflush be false .
update instructorstudentlistpageuitest and instructorstudentlistpageuitest to update profile picture
added functionality to ignore test methods based on environment variables in TestIgnorance . java to enhance test reliability by excluding specific test methods
removed the pointer parameter from the fling method signature in ScrollPane . java to simplify the method signature for better readability and maintainability
updated the condition for retrieving content in QueryDslJpaRepository to handle null pageable cases to ensure proper handling of null pageable values
added a new method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to ensure memory
increase timeout for jmspublisherconsumertest from 2000000 to 20000
refactor SnowballAnalyzer class to improve code organization to enhance maintainability and readability of the codebase
update previousIndex initialization and state management in StreamingAggTemplate . java to ensure previousIndex is set to - 1 to ensure proper handling of previous
refactor plugin error handling by introducing a new method ` pluginErrorMessage ` and updating its usage to improve code readability and maintainability by
added a new method ` stream ` to ` StreamSupplierComponent ` that utilizes the ` computeIntensityDefault ` method to facilitate
updated logging messages and added retry logic for file movement failures in MediaMonitor . java to improve clarity and handle file renaming failures more effectively
refactor InjectorProxy and related classes to use a generic newInstance method for instance creation to improve type safety and enhance flexibility in instance creation
[ hotfix ] [ stream ] remove redundant close ( ) call in flinkstreamingcreatefunction
added unit tests for ShowStatementTest , UnsupportedStatement , and CreateTable in SQL parsing to ensure correct handling of unsupported statements in SQL syntax
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of
updated the test case in NamedSetTest . java to include Quality Distribution and Inc to ensure the test accurately reflects the accuracy of
added a check for ` websocketReconnect ` in ` DeconzBridgeHandler . java ` and modified connection state management in ` WebSocketConnection .
replaced ` setAttribute ` method with ` removeAttribute ` in ` AbstractProcessingFilter ` to simplify session management by removing unnecessary attributes
hbase - 2248 fix flaky testregionreplicareplicationendpoint test
added configuration settings for PMS in FormatRecognitionTest . java to ensure proper configuration management during test execution
cloudstack - 4892 : add state machine transition when create template from template
refactor PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 and Spring Boot test runner to improve test reliability and ensure compatibility with
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to enhance code cl
updated SQL queries and assertions in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability by using a
added a check for document count mismatch in SegmentReader . java to ensure that the document count does not exceed the expected document count
add sip logger . getloggername ( ) and logtrace ( ) to the sip logger .
updated FilamentFactory . java to replace 1.0 with 0.9 for staves w / no starting barline to ensure compatibility
removed the default value of handleFileUploads in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest .
added a test method to verify CSRF protection matchers in the CsrfFilter to ensure correct behavior of CSRF protection matchers with case - sensitive methods
replaced static class ` Fields ` with local variable ` field ` in ` HotObjectConstantImpl . java ` to improve code readability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
added a temporary variable ` now ` and updated the ` withWatermark ` method call in ` FileIO . java ` to improve code readability
[ hotfix ] fix potential npe in sqmcexestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable proper handling of ResultSetMetaData in the query compilation process
updated the library output format in JsLibrary . java to include the root directory to improve clarity of the output format for better debugging
updated the slider position from - 180 - 180 to - PI in RailButtonConfig . java to ensure correct positioning of the slider based
updated the y - coordinate from 8f to 9f in OverlayRenderer . java and improved error handling in Saves . java to enhance
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable expression language support for improved security
removed null check for remoteMountPointComponent before setting translation and rotation degrees to simplify code and improve readability by eliminating unnecessary null checks
updated setupViews method to accept a ScrimView parameter and adjusted animation interpolators accordingly to enhance UI responsiveness by allowing dynamic progress
[ state - backend - changelog ] add option to disable periodic materialization
added a ` value ` field with getter and setter methods in ` ProtocolParameter ` , and updated attribute handling in ` List ` and ` Param
added a test for the ` / chunking ` endpoint in the ` Tomcat ` class to verify the functionality of the ` head `
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating success or failure to enhance the
added Content - Type header to SwitchToPostInterceptor and SearchRequestUnitTest classes to ensure proper handling of application / x - www - form
refactor EmbeddedClientConnector class to improve code organization to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException in PhoenixResultSet . java to indicate that the setFetchSize method is ignored to improve debugging capabilities
added multiple instances of AndroidNet with null values in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] fix checkstyle violation in llvmrealtimesegmentdatamanager
removed the ' false ' argument from the getDepositAddresses method calls in KrakenAccountService . java to simplify the code by elim
hbase - 2249 addendum remove unused prefixtreecodec class from tablemapreduceutil
added a boolean flag to track inflation failure in DesignerActivity and made root variable final in XMLLayoutInflater to ensure proper handling of
refactor PushbackInputStream class to improve code structure to enhance maintainability and readability of the code
refactor loweringphase to use schedulephase instead of controlflowgraph . compute ( graph )
updated the message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
added support for newline character in the parser and corresponding tests to enhance functionality by allowing newline characters in the parser
updated the method for retrieving deleted documents in ReadTask . java to improve code clarity and ensure correct handling of null values
replaced super . setTransformRefresh ( ) with setBoundRefresh ( ) and setTransformRefresh ( ) in SimpleBatchNode . java to
refactor sharedmethod . isguaranteedsafepoints to sharedmethod . isuninterruptible .
added a framebuffer size callback and refactored window size handling in LwjglWindow . java to improve window size management and ensure
updated translation and animation logic in LauncherAppTransitionManagerImpl . java to use mRecentsTransX instead of mRecentsTransX
changed the type of ` LiteralNode ` from ` NodeLiteralNode ` to ` NullLiteralNode ` and updated related methods to handle null values
added totalSize calculation and length adjustment in CompoundFileWriter , implemented setLength method in FSDirectory , and IndexOutput classes to ensure file length is correctly
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and LwjglDebugStarter to
camel - 14836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource for producer / consumer
added support for role " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to improve authorization handling and ensure
updated ZookeeperClientServerRegisterRepository to utilize EventType for event types and improved null checks to enhance code robustness and maintainability by
renamed methods and classes related to deep stubs in ReturnsDeepStubs . java to improve clarity and consistency in naming conventions
added a condition to handle cases where the contract ' s call value size is zero to ensure that the call value is only converted to zero when
updated debug logging format in BibEntry . java to improve readability to enhance logging clarity by using parameterized messages
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the PBE _ ALGO string to use the
tmi - danielwagnerhall : improve validation of tiff value offset
added validation for job parameters in CommandLineJobRunner and implemented a corresponding test case in CommandLineJobRunnerTests to ensure that invalid job parameters are properly
updated the content assertion from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve code readability and maintainability
replaced synchronized long lastSequenceId with a volatile long lastSequenceId and updated related methods to use AtomicLongFieldUpdater to improve thread safety
added a new file ` Test . java ` containing a class ` sum ( ) ` with a static method ` sum ( ) ` to calculate
updated ` ShadowWifiManagerTest ` and ` WifiUsabilityStatsEntryBuilder ` to include ` maxSdk ` parameter and reorgan
added a new file ` Solution . java ` that implements a solution that prints " NO NO " and " YES " based on input to
fix race condition in gossiper and table
refactor taskbar recreation logic to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
refactor SyncFutureCache class for improved performance to enhance performance and maintainability of the code
updated DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and updated LOWEST _ VERSION _ FOR _ RESPONSE
[ java ] uselessstringvalueof false positive for string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the correct
add target _ max _ type _ shard _ size to hollowproducer . builder . withtargetmaxtypeshardsize ( )
added new test cases for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask class to improve code readability to enhance maintainability and readability of the code
updated database parameter handling in DDLTask . java and TestSemanticAnalysis . java to ensure location is shown in test mode and improve parameter display
added a call to ClearDatabaseChangeLogTableStatement with Liquibase catalog and schema names to enhance database change log table management for better
updated RestClient and CallPath classes to include version handling and improved path comparison logic to enhance compatibility with different API versions and ensure compatibility with
updated error message in PhoenixDriver . java and modified the close method in PhoenixDriver . java to improve clarity
mow - 2331 fix some typo in toolbar menu
added JUnit after test for deleting files in ConflictsResolveActivityIT and modified FolderPickerActivityIT to extend AbstractIT to ensure file deletion
[ gr - 134342 ] fix npe in nativeimagegenerator when devmode be set .
added a check to return a string if the length is less than 2 in StringHelper . java and created a corresponding test in StringHelperTest . java
updated JpaQueryCreator and ParameterMetadataProvider to handle NOT _ CONTAINING cases and added a new method in UserRepository to improve type
do n ' t try to push a branch id if authentication be too long .
added a new message dispatch method in P25MessageFramer . java to enhance message processing functionality
added null checks for handler before calling checkClosed ( ) in WebSocketImpl . java and created a test for clear client handlers on end in We
[ ds - 3892 ] fix search query for indexable pool task
updated widget padding handling in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to use default padding instead of fixed padding
added methods to hide all apps in TaskbarUIController and TaskbarAllAppsController , and modified closeOverlay method in BaseActivityInterface to
removed synchronization from the launch method in CrawlJob . java to simplify the launch method by eliminating unnecessary sleep and joining the launcher
updated the calculation for the Point object in JavaSEPort . java to correctly account for canvas coordinates to ensure correct positioning of the Point object
replaced notificationManager ' s notify method with a startForeground method and added a conditional check for upload status to improve code clarity and ensure
applied patch from michael michael michael micha
hbase - 2649 addendum fix testthrifthbaservicehandler . testhbaseservicehbaseservicehbase
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for better debugging
added error handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve logging cl
added a new method ` getTickers ( ) ` in ` Bittrex ` and created ` BittrexTickersResponse ` class
refactor enumConstants handling in EntityEntry . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
updated the ` unregisterSession ` method to accept an ` Object ` instead of a ` Class ` in multiple classes to enhance type safety by allowing
updated the character array in FileUtils . java to include additional characters in the clist string to ensure proper handling of special characters in the string representation
added Resource and ResourceHttpContent support for stylesheet management in ResourceService and ResourceHandler classes to enhance resource management capabilities and ensure proper handling of CSS
added clearIndex ( ) method to TestFiltering . java to ensure proper index management during test execution
updated method invocation from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure correct parameter handling for the address method
updated condition to exclude CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDatabase for sequence generation
removed the check for ` isEnum ` in the ` ObjectStreamClass ` class to simplify the code by eliminating unnecessary checks
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new class ` SymbolNotFoundError
updated BinaryResponseWriter to conditionally create SolrDocument based on the presence of a pseudo field to ensure proper document creation based on the presence of
added a new case PING and PONG in WebSocketImplBase . java and implemented a test for WebSocket pause functionality in WebSocketTest . java
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in the regex pattern
refactor DnsResolverProvider to use a wildcard import and improve cache resolution logic to enhance code readability and maintainability by centralizing cache resolution
added conditional on MessagingTracing class in TraceMessagingAutoConfiguration . java to enable conditional execution of messaging tracing functionality
mondrian : fix for mondrian - 537 : use ` ` customer ' ' instead of ` ` hq '
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor to reflect changes in
added handling for the ' / ' character in XMLLightweightParser to set the status to VERIFY _ CLOSE _ TAG when the character is
removed the setVisibility ( GONE ) method from TouchCharInput . java to streamline visibility management for better user experience
added a null check for the getCurrentUser ( ) before comparing the user ID to prevent potential NullPointerException when the current user is null
modified the logic for setting the slot and member in JSObjectLinker . java to handle cases where the index is greater than - 1 to
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize randomStringGenerator and suffix with a setter method to improve
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added multiple @ Deprecated ( since = " TODO " ) annotations to multiple Java classes to indicate that these classes are outdated and should no longer be
deleted the JoglDebugAdaptor . java file and modified the GuiceStartup . java file to streamline the code by eliminating
added ` toString ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes for better string representation to enhance the clarity of the
added PendingIntent import and modified contentIntent in FileDownloader and FileUploader classes to ensure proper handling of pending updates in the notification
refactor the nextOrd method in Lucene80DocValuesProducer to use a dedicated set method to improve code readability and maintainability by
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future updates
removed unnecessary try - catch block for setting desktop properties in WToolkit . java to streamline code by eliminating unnecessary try - catch
added null checks and exception handling to the setAdministratorCredentials method in KerberosOperationHandler to ensure that the administrator credentials are not null or
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width calculations for tablet and two - panel devices
fix a bug where the window color be n ' t render properly .
refactor Hashing class to improve code readability to enhance maintainability and facilitate future updates
updated the method signature of ` accept ` to use ` folderPath ` instead of ` File ` to improve clarity and accuracy of file path validation
updated UserInfoActivity to include a new string resource for user information and modified the addToListIfNeeded method to accept content descriptions to enhance user information display
removed null check for newType in J . java to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY from 500ms to 800ms to improve the responsiveness of the activity
added a static constant WEBAPP _ HOME to the SolrJettyTestBase class and updated its usage in JettyWebappTest to improve
removed diameter assignment and set selectedMotorSet to null in ThrustCurveMotorSelectionPanel . java to streamline motor selection handling
added import for BufferUtil and called BufferUtil . clearToFill ( buffer ) in ByteBufferPool . java to improve buffer management and ensure proper
fix for issue # 233 ( # 233 )
corrected the spelling of " authorization " to " authentication " in configuration files to ensure consistency in naming conventions for LDAP configurations
added deleteExchange ( " x " ) and queueDelete ( " q " ) method calls in DurableOnTransient . java to ensure proper
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to improve error handling for server connection failures to enhance reliability and provide clearer feedback
refactor CompositeHandlerAdapter for improved clarity to enhance maintainability and readability of the code
refactor Quartz2Adapter to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block around the execute method call in SulongLibrary . java to handle IllegalStateException to improve robustness by preventing
updated Spring Security schema references from 6.2 to 6.3 across multiple files to reflect the latest version of the Spring Security 6.3
updated ` newNameResolver ` and ` DiscoveryClientNameResolver ` to accept ` Args ` instead of ` Helper ` to enhance flexibility in name
added a check for non - empty annotations before processing them in JavacParser . java and created a new test class TestAnnotatedAnon
added a new package name " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with internal package naming
changed the default value of the strict variable from false to true to enable strict functionality in the StaxEventItemReader class
modified the ` OfflineSorter ` to use an array for reading partitions and added a test for over - nexting in ` TestOfflineSorter `
refactor ActionResetingPool class for improved performance to enhance performance and maintainability of the code
added a boolean variable ` isInXYMode ` to check if ` lightState . getXY ( ) ` is not null before calling ` from
refactor CellLayout to use a target cell array for folder creation and radius calculations to improve layout responsiveness and maintainability of folder creation
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileDetailFragment and OCFileListFragment to streamline
added a null and existence check for uigestureFile before loading logs in IdeSnapshot . java to prevent potential NullPointerExceptions when uigesture
updated FieldNamingPolicyTest to use Locale . getDefault ( ) instead of toUpperCase ( ) and toLowerCase ( ) to ensure compatibility with the current locale
added listener setting in XmlSuite . java to enable listener management during XML processing
added a new method ` loadWithNewGlobal ` in the ` Global ` class and integrated it into the ` Context ` class to enhance method
added JSON serialization methods to StarTreeIndexSpec and corresponding test cases in TableConfigTest to enhance data handling and ensure correct test coverage for
updated imports in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , Saml2LogoutConfigurer , ServerHttpSecurity , and
replaced double quotes with single quotes in file and path replacements across multiple files to ensure consistent character handling across different operating systems
[ drools - 1357 ] fix nullpointerexception in inoperator . in ( )
added FieldCache import and modified the commit and purgeFieldCache in TestDistributedSearch . java to avoid FC insanity when there is
added unit test for message boundary event on sub - processes
add static call resolution to the programmanager . resolveinterfaceorvirtualcall ( ) method .
http : / / issues . apache . org / jira / browse / amq - 4892 - add messagegrouphashbucketcount
refactor slot handling in Secmod . java to use slotId instead of fips slot to improve code clarity and maintainability by using
added alignment parameter to the add method and modified the add method in GdxRenderer to allow customization of widgets in the dialog group
[ hotfix ] [ test ] disable unalignedcheckpointitcase in favor of unalignedcheckpointitcase
added imports and implemented a condition to check for specific class types in JDK13Services . java to ensure that only relevant classes are processed to avoid
added a check for the presence of a keyword in the keywordToReference map before adding it to the map to ensure that the keyword is only
[ java ] fix the issue that multicast eip do n ' t work if the exchange pair be a collection .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability by eliminating
[ flavestatsd ] escape telegraf character in metric name ( # 644 )
add a udp port to the member to allow the client to broadcast on the same multicast address .
rename ` OperatorMulticast ` to ` OperationMulticast ` in multiple files to improve clarity and consistency in naming conventions
increased the send timeout value from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more
added a try - finally block around the assertion logic in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a synchronized method to destroy the cachedEventListenerRegistry in SessionFactoryServiceRegistryImpl . java to ensure proper resource management by clearing cachedEventListenerRegistry
simonstewart : fix unit test to work with local storage
[ pytorch ] fix compile error in pytorch - engine
added a TaskStackChangeListener to clear the force invisible flag in RecentsView and removed it from BaseActivity to streamline the animation process
[ itextpdf ] improve performance of defaultsplitcharacter . checkdatepattern ( ) and add a new test
camel - 1357 - camel - cxf : fix npe in camel - cxf when use cxf .
refactor pending animation handling by extracting it into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added logging for playTime calculation and modified playTime handling in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime is set
added a conditional check for bailout handling in C1XCompilation and introduced a new boolean flag BailoutOnException in C1X
removed hardcoded values for signup and password in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to simplify code and
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a new method ` getOnlyFormat ` to improve
added handling for the GC _ NODATA property in GeoTiffReader and a corresponding test in GeoTiffReaderTest to ensure the
fix npe in llvmwritenode when the source section be null .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao `
replaced ` client . blockUntilConnected ( ) ` with ` client . getConnectionStateListenable ( ) . addListener ( ) ` for connection
refactor ArrayTypeHandler to handle null values for setNonNullParameter , getNullableResult , and getNullableResult to improve robustness by returning null
replaced ` RegexpTunnel ` with ` REProgram ` and updated the prefix retrieval logic to utilize reflection for better performance to improve performance and
updated the method call from ` null ` to ` Application . class ` in the ` pick ` method to use the correct ` Application ` class
[ drools - 1357 ] fix npe in phreakfromnode when use a mutable global
replaced Preconditions with TransactionUtil for asset name , URL , and description validation to enhance validation capabilities for asset name , URL , and description in
quick fix for copypaste : do n ' t add textfield to the list
updated action descriptions and status details in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSUp
replaced setSeedNodes and setActiveNodes methods with addAll for configuration to improve the handling of seeds and trust nodes in the configuration
updated assertions in BaseTokenStreamTestCase to include additional context for position and end offsets and added failure handling logic to improve error reporting and ensure
log4j2 - 1349 add modulate flag to timebasedtriggeringpolicy and modify patternprocessor . getnexttime ( )
refactored item handling methods in ShadowAdapterView and ShadowListView to improve clarity and functionality to enhance code readability and maintainability
pdfbox - 4071 : avoid potential ClassCastException when setting the default value
[ graphdecoder ] fix npe in graphdecoder when loopscope be null
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) for attribute retrieval and added unit tests for security context management to improve session
added a new test method to update the service name in the Zipkin span reporter to ensure that the service name changes in the zipkin span
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory , and modified spool mode handling in Javac
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow for
added a DEFAULT _ CACHE _ CAPACITY parameter to ConfluentSchemaRegistryDeserializerProvider methods for improved cache management to enhance flexibility in
replaced the ` remind ` checkbox with a ` checkAtStartup ` checkbox in the ` UpdateInfoDialog ` class to enhance user experience
added methods for handling boolean parameters in NodeGenerator and refactored TypeSpec building to improve code readability and maintainability by centralizing method
hhh - 1348 - fix checkstyle violation inascadingactions
added methods to retrieve and set prototype properties in ScriptObject . java to enhance security by allowing access to prototype properties in the script object
updated the default read mode from " heap " to " mmap " in CommonConstants . java and refactored the creation of ImmutableSegmentImpl
added import for ByteArrayTemplate and implemented byte type handling in ArrayTemplateBuilder to enhance data processing capabilities for byte data types
added Hipchat property and configuration for SAML sp integrations in SamlServiceProviderProperties . java and created a new configuration class CasSamlSP
replaced ` List ` with ` Set ` for ` commandRegistryUrls ` and updated resource retrieval to include " tools . command . properties "
updated warning log message to include the current context and added debug logging for uncovered HTTP methods in ConstraintSecurityHandler . java to improve debugging
updated the login method signature in SvnRepositoryConnector . java and set loggedIn in SftpRepositoryConnector . java to true in Sftp
http : / / issues . apache . org / activemq / browse / amq - 4357 - remove unnecessary transaction manager creation
cloudstack - 4892 : fix checkstyle violation in vmwareresource
refactor Timers class for improved performance to enhance performance and maintainability of the code
updated the import statements and method calls from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP in DefaultDefectReporter . java to
removed deprecated constants from UAX29URLEmailTokenizer and its constructors in TestUAX29URLEmailTokenizer to streamline the tokenizer
removed the ` Map < Object , Object > ` interface from ` ScriptObject ` and updated related assertions in ` ContextTest . java ` to
refactor EventBusMetrics class for improved performance to enhance performance and maintainability of event handling
danielwagnerhall : move eperson and language to i18nutil . getepersonlocale ( ) and get
updated JaversTransactionalDecorator to implement InitializingBean and modified ensureSchema method implementation to improve schema management by ensuring schema is properly initialized and
removed null check for pgTypeName in TypeInfoCache . java to simplify code by eliminating unnecessary null check
added multiple calls to set the server in ScopedHandlerTest to ensure the server is set correctly for multiple handlers in the ScopedHandler
fix calltimeoutexception in wait - notify phase
updated the condition to check if the username or password is empty in RestLoginProcessingFilter . java to ensure proper handling of empty credentials in the
updated permission check from ` Objects . equals ( " " ) ` to ` equals ( " * " ) ` in ` CommandMap . java
renamed ` encoding ` to ` sourceCharset ` and updated related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity
changed data type of postLogin from byte [ ] to String in HostBean and TerminalBridge classes to improve flexibility in handling postLogin requests
refactor GeneralOptimizationDialog to improve simulation handling and error messaging to enhance code clarity and maintainability while ensuring immutability of simulation
camel - 14836 : camel - main - add option to disable context reload by default .
updated logger configuration properties in CommonTestUtils . java to improve clarity and consistency in naming conventions
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and facilitate future updates
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for nonCloseable ' s markSupported method in RequestBody . java and created a test for it in RequestBodyTest .
added a check for the enabled state of embedded settings in EmbeddedNeo4jServer and improved collection handling in DefaultBeanContext to enhance
update player movement debug command to save the player ' s player ' s health
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted related logic in the ` RandomLoadBalancer ` class to
refactor GsonParser to simplify cache string handling and change test method name from " invalid - timestamp . json " to " zero . json "
added comments to the parameters for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clar
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple files to streamline
[ iotdb - 5357 ] pipetaskcoordinator lock should not be lock .
added conditional logic to determine the version of the DependencyJar based on the " robolectric . usePreinstrumentedJars " system
updated conditional check from ' ! ' to ' isSilent ' in ExecDriver . java to ensure proper handling of silent mode during execution
added validation for the dynamic field ' s default value in IndexSchema . java and corresponding tests in BadIndexSchemaTest . java to ensure that
refactor repairing logic in StorageProxy . java for improved readability to enhance code readability and maintainability
updated ` addAllSystemIncludeRoots ` to use ` Iterables . transform ` instead of ` ImmutableSortedSet ` to improve flexibility in handling system
added safety checks for subject key identifier , serial number , and sensitivity flags in AdaptableX509CertSelector and ForwardBuilder classes to ensure
log4j2 - 1349 use abstractappender . parseint ( buffersize , 0 ) instead of string . parseint (
added a @ Deprecated annotation to GuiScreenEvent . java to mark the code as obsolete in 1.16
refactor methods in CategoryEditSearchRecyclerViewAdapter for adding and removing categories to improve code clarity and maintainability by consolidating category addition
# 1188 - enh : add caching support for bean type ( # 1187 )
refactor component property assignments in RocketComponent . java to use an enhanced for - each loop to improve code readability and maintainability by
replaced the ` doCompile ` method with ` post ` in ` JavaCompilerService ` and added error handling in ` JavaDiagnosticProvider `
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task creation to improve code readability and
refactor WanReplicationServiceImpl to improve executor management and synchronization to enhance thread safety and prevent potential memory leaks
added null checks for tPartition and TTable in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robust
refactor code to use lambda expressions for improved readability in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to enhance
added a new test class ` FilesTest ` for verifying file deletion and null file handling in the ` Files ` class to ensure proper functionality
removed exception handling when closing socket connections in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated the class name check from " java . lang . System " to " Logger . class " in SSLLogger . java to ensure compatibility with
replace currentWorkingDirectoryList . clear ( ) and addWorkingDir ( f ) with addWorkingDir ( f . toString ( ) ) to
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
change access modifier of generatedentitydecorator from public to private
updated Java - Durl configuration for CSV and JSON jar files in SimplePostTool . java to ensure compatibility with the latest Solr API changes
make sure min and max command do n ' t have symbolic toggle
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated the condition to check for both null and presence of the ' type ' variable to improve clarity and correctness of the condition
close the web application context after each test to avoid memory leak .
added a method to retrieve the search string and modified the way DLNA resources are retrieved to enhance user experience by allowing dynamic search based on
removed the visibility of the neutral button in SetupEncryptionDialogFragment to ensure the neutral button is visible for better user experience
hhh - 1187 - fix count of collection withdrawn and not archived item ( # 1187 )
updated SQL statements in DDLTask . java to use direct quotes instead of string concatenation to improve readability and maintain consistency in string concatenation
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and logging for OAuth2 exceptions
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the code
updated assertions and method signatures in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to improve code readability and maintainability by using parameterized
updated tooltip settings in ExtractionModelFrame , DataBrowser , and SQLConsole classes to increase dismiss delay and add tooltip text for variable and variable
( chore ) camel - surefire : add support for single - test method with junit 5
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to handle ` IOException ` instead of `
[ hotfix ] [ stream ] replace @ publicevolving with @ experimental
refactor StreamCepstrumSource class to improve code readability and maintainability
added a check to return false if the index is outside the bounds of the items list to ensure that the index is within the bounds of the
replaced ` OrExpression ` with ` Parenthesis ` in the test assertions to ensure compatibility with the new ` Parenthesis ` interface
added confirmation = true and requiredType = RequiredType . NONE to the DebugPaste class to enhance user experience by allowing a confirmation for debugging
replaced ` . get ( ) ` with ` . orElseThrow ( ) ` and ` . orElseThrow ( ) ` in multiple configuration classes
replaced the focus logic for the ' textarea ' element with a call to ' focusMathQuillGGB ' in DrawEquationWeb
replaced the ` Arg ` class with an ` AbstractGoBinaryDescriptionArg ` interface and updated related imports in ` GoBinaryDescription . java
updated environment retrieval logic in Jooby . java to check for null values before retrieving the application . env file to improve robustness by
replaced instances of ` RetryListenerSupport ` with ` RetryListener ` and introduced a new class ` SecondDummyRetryListener ` to standardize
use decimal instead of nan for count ( # 498 )
made fields ` email ` and ` author ` final in ` Contribution . java ` and added a constructor for ` Contribution ` to
replaced a loop with a do - while loop for appending a period in JUnitFormatter . java to improve performance by reducing unnecessary loop
refactor how elements are retrieved and initialized based on class type to improve code clarity and ensure proper handling of LinkedList instances
enhanced error messages in StaxEventItemReader to include the resource URL to improve clarity of exception messages for better debugging
fix testmultirendertarget . simpleupdate ( ) and testmultirendertarget . simpleupdate ( ) do n ' t
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to avoid potential NullPointerException when accessing the current client
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
added cryptographic parameters using BigInteger for DSA parameters in KeyStoreManager . java to enhance security by ensuring correct parameters are used for DSA parameters
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
[ activiti - 5 ] set the engineversion on the persistedprocessdefinition when deploy a process
updated property names in SpecificCompiler for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
replaced ` isCurrentThread ` method with ` verifyIsCurrentThread ` and updated corresponding logic in ` CEntryPointSnippets ` and `
added null check for the map before adding values to retArray in GenericUDFMapValues . java and created a corresponding test class TestGeneric
corrected the spelling of " handlerInterceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in
added oilWellGenerationRate and enableOilSpouts properties to BCEnergyConfig and updated OilGenerator to utilize these
added a check for the existence of the " . clean - me " directory in ImportContext . java and updated the condition in JobQueue .
improve error message when memoryrealm . readxml be set to null .
updated import statements in RegisteredService . java and CRLDistributionPointRevocationCheckerTests . java to improve code clarity and maintainability by removing unnecessary
updated constants for ZIP64 , NTFS , and EXTT _ FLAT _ CT in ZipConstants64 . java and ZipEntry . java to
refactor the ` newFileSystem ` method to introduce a ` ensureFile ` method and improve file existence checks to enhance error handling and ensure
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel . java
added an @ Override annotation to the createConnection ( ) method in FailoverUpdateURIsTest . java to improve code readability and maintainability
added Gson annotations for base URL , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance serialization capabilities for
fix crash when delete a book in the database
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of the buffer position in AbstractAjpProcessor . java to ensure correct positioning of the response message
stop the admin console server before start it
refactor unregisterHandlers method to use instance variables for binary , text , and exception handlers to improve code readability and maintainability by reducing
added configuration properties for device ID transformation method , ID table , and log file configuration in IoTDBDescriptor . java to enhance configuration flexibility for
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified test assertions to include a new delaying search component to improve test
updated the condition in the mockTsp check from ` = = null ` to ` ! = null ` to ensure that the check for the
replaced the usage of ` scriptCode ` with ` witnessScript ` in the ` Transaction ` and ` ScriptTest ` classes to streamline
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional field types in the schema schema
updated Completers . java to include null check for valueCompleter and added a new OptionCompleterTest . java file with a test
[ hotfix ] fix checkstyle violation in s3utils
change the data type of sourcePeerId and related methods from String to int across multiple classes to allow for more flexible representation of peer IDs
added functionality to handle zip file uploads in FtpHelper . java to improve file handling and error logging during file upload
removed unused imports and set the alpha of the reply button in TweetFragment . java to streamline code and improve readability by elimin
added mocking for AccessLogContext and updated expected timestamp in AccessLogSupportTest . java to ensure proper handling of expected timestamps in test cases
updated the file path in MaryCacheTest from " testfiles - deleteme " to " tmp / testfiles - deleteme " to
replaced null check for subscribers with a direct size check to simplify the code and improve readability by eliminating unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unused imports in AbstractSaml10ResponseView . java to improve
replaced ` t . printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` in ` DataBrowser . java ` to improve
added a condition to check if the asset directory is not in dev mode and updated tests accordingly to ensure proper handling of non - existent files in
added writeOptions to the put method in RocksDBKeyedStateBackend to ensure proper handling of write options during database operations
updated the default format string from " value - tag - index " to " value - index " in CoreLabel . java to ensure consistency in
set douglas . minprecision to ` ` 1 ' ' instead of ` ` false ' '
updated timeout duration from 30 seconds to 60 seconds in BesuNodeRunner . java and changed the default value of useNative from false to
rename ` DuclsSandboxTest ` class to ` SandboxTest ` and update references accordingly to improve clarity and consistency in naming con
camel - 1357 : cameldestination now set the exception to the exchange . setexception ( ex )
changed the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from other classes
updated SQL query in JDBCExample . java to include a limit of 20ms to ensure that the SQL query does not exceed the specified limit for
( chore ) camel - core - maven - plugin : improve error message for invalid project expression
refactor Style class implementation to improve code readability and maintainability
added zoom functionality to ShareActivity to handle back key events to improve user experience by allowing zoom functionality
added a condition to skip processing for deprecated fields in Json . java to ensure compatibility with deprecated fields in the application
added animations to show and hide the send layout in LauncherFragment to enhance user experience by allowing users to control the visibility of the send layout
updated method call syntax in Utils . java for consistency to improve code readability and maintainability
added Progressable parameter to several methods in Utilities , PTFRowContainer , HiveIgnoreKeyTextOutputFormat , and HiveIgnoreKeyTextOutput
updated error message formatting in SourceCoordinatorProvider . java to improve code readability and maintainability
added functionality to remove a contribution from the panel and update their ordering and colors to ensure the contribution is removed from the panel by the contribution list
rename HyerMetalTemplateAdapter to HypervisorTemplateAdapter and update its references to improve clarity and consistency in naming conventions
added a check to initialize dPath if it is empty to ensure dPath is set to the user ' s directory when no path is provided
updated sampleRate handling in DefaultAudioSink to use a dynamic value based on format ' s sampleRate to ensure accurate channel count for E - AC3
log4j2 - 1349 add filter for map message that do n ' t have to match
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification functionality
corrected the parameter from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method call to ensure the correct
updated the constant name from " colelction . delim " to " collection . delim " to improve clarity and consistency in naming conventions
add a test to verify that the first connection state be set to connected at start
pdfbox - 5355 : improve documentation for ` ` this ' ' method
added a new boolean variable ` mIsOneHandedModeSupported ` and updated conditional checks in ` RecentsAnimationDeviceState . java
added an override for the onDetachedFromWindow method to cancel all running AppsCustomizeAsyncTask instances to ensure that all tasks are
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors and updated related classes to support dictionary
replaced the variable ` count ` with ` thrown ` in ` ResultSetTest . java ` to streamline exception handling by eliminating unnecessary
updated the directory path in the InitializeProjectMessage constructor from " debug " to " " to ensure the correct directory is used for project initialization
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and introduced a new method ` isMVCCAnomalyDetection ` to
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing redundancy
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to increase the wait time for the server to
updated DeviantartRipper to include username and password configuration for deviantart login to enhance security by allowing users to access
replaced the constant ` KNOWN _ GOOGLE _ SIGNATURES ` with ` GOOGLE _ PLATFORM _ KEY
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event tracking for window state changes
added email description to the template in EntityGroupKeyContentFormatter . java and set it in TestEntityGroupKeyEmailContentFormatter . java to
updated return statement to use data . remove ( sel ) instead of data . remove ( sel ) to ensure correct removal of elements from the data
updated the ` getISO3Language ( ) ` method to check the length of ` _ baseLocale ` before calling ` getLanguage ( ) `
refactor Liquibase to use a dedicated ChangeLogParser for parsing and validation to improve code readability and maintainability by centralizing
added a check to return early if the screen pinning is active in OverviewCommandHelper . java to ensure proper handling of screen pinning
added a new variable ` mNoDataText ` and ` mNoDataTextDescription ` along with its getter and setter methods in ` Chart
added synchronization to check if the response head is already sent in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety
refactor chunk handling in NettyResponse to use a separate method for improved readability and maintainability to enhance code clarity and maintain
updated test methods and header values in Http2TestBase , TestHttp2Limits , TestHttp2Section _ 8 _ 1 , and Test
fixed - rlocalcachedmap . getkey ( ) and getvalues ( ) method throw npe if storemode . localcache = true
camel - 1770 : fix npe in jpaendpoint when component be null
fix spell mistake in physicscharacter . setjumpspeed ( )
added a null check for reparsedFunction in the conditional statement to avoid potential NullPointerException when reparsedFunction is null
updated logging statements and variable names in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by
added deprecated methods for retrieving old upload segments in FileUploadDownloadClient to improve code clarity and maintainability by removing deprecated methods
updated the method call to include a filter parameter in MongoDbTailTrackingManager to ensure trackingObj is retrieved based on the specified filter
added a new method ` assertPredicateFails ` to ` LanguageTestSupport ` and updated assertions in ` JuelLanguageTest ` to ensure proper
added a bound range to the alpha variable in RecentsView . java to ensure that the alpha value is within the range of 0 to
updated the string concatenation for the " Import - Package " attribute in ManifestReversion . java to ensure proper handling of the " Import - Package
refactor DataSyncConfiguration to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized JavaSnippetRepository to ensure proper initialization of JavaSnippetRepository
added a loop to loop over time buckets in StarTreeRecordStoreCircularBufferImpl . java to ensure accurate update of sums based on the
[ chromedriver ] use googleapis . com instead of code . google . com
camel - 1774 : fix the test error of camel - pg
replaced imports from ` com . sun . syndication . syndication . feed . syndication . syndication . syn
added content - length header handling in TransferCompletionHandler and updated NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure proper handling of
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the superclass constructor from EnhancedRuntimeException to simplify the constructor by eliminating unnecessary parameters
[ java ] fix intermittent test failure on ci server
camel - 14836 : remove unused eventadminendpointbuilders from camel - core
updated exception handling and corrected formatting in ByteArray . java to improve code clarity and maintain consistency in exception handling
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to ensure proper handling of input proxy during touch events
removed the JUnit Ignore annotation from RestletDomainServiceTest . java to temporarily disable the test due to CAMEL - 6770
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameter
rename module - info . java to com . hazelcast . test . modulepath and move module - info . java to com . hazelcast
added ` getSourceDirs ( ) ` method to ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method in ` JavaLanguage
removed visibility of the menu item based on the presence of web page to streamline the user interface by eliminating unnecessary visibility logic
updated method names from " nodeIsAncestorOfItself " and " nodeIsDescendantOfItself " to " nodeIsNotAncestorOfIt
update y - coordinate calculations in WorldEditPlayer . java to ensure values are non - negative to prevent potential errors during positioning
added PathNotExistException to the selfCheckDataTypes method and modified conditional checks for measurement schemas to improve error handling for non - existent data types
updated closing brace formatting in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] move mailboxexecutor setter to abstractstreamoperatorfactory
hbase - 2278 fix table state in meta and fix meta error ( # 2278 )
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output for
updated constructor calls in BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with Java classes
[ drools - 1348 ] fix kiesWatcher to use lasttimedata instead of remoteitems
adjusted the calculation for allAppsCellWidthPx in DeviceProfile . java to correct the width calculation for allAppsCellPaddingPx
[ hotfix ] [ core ] add parent _ first _ logging _ PATTERNS annotation to coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the ` writer
updated the ` Session ` interface to extend ` Closeable ` and changed the return type of ` close ( ) ` methods from ` Connection ` to
refactor GetLocations class to improve code readability to enhance maintainability and readability of the code
replaced exception . printstacktrace ( ) calls with a null check for the ' ex ' variable to simplify the code and improve readability
changed the exception handling from UncheckedIOException to ignore in Contents . java to improve error handling by using a more descriptive variable name
updated the ` GeneratePubkeyActivity ` class to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with the latest Android
refactor ` emitSnippet ` method to accept ` CharSequence ` instead of ` String ` and introduce ` quantifier ` and ` wrapLast
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
http : / / issues . apache . org / jira / browse / amq - 4892 - remove unused usecaches parameter
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility in handling maximummind database
update instructorfeedbackresultspageuitest to reflect the new instructor feedback result page
updated the method signature of ` useEncodedQualifierListOptimization ` to include a ` Scan ` parameter to enhance flexibility in handling raw data
removed the ` public ` access modifier from several methods in ` ApprovalStore ` , ` ApprovalsControllerService ` , and `
added a new boolean variable ` mStartedDownload ` to track if a download is started in a delayed execution to ensure proper cancellation of the download
updated method calls from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in `
updated project version from 1.0 . 11 to 1.0 . 13 and modified the copyright year in JFreeChartResources . java to
replaced multiple instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure thread
refactor GsonBuilder class to improve code structure to enhance maintainability and readability of the code
added null check for centerGeo and circleCenters before adding them to avoid potential NullPointerExceptions
remove espresso home option from java on truffle ( espresso )
doc : fix typo in javadoc of ctcodeelement , ctif , ctvariablewrite , cttypeinformation , ctqueryable
changed the visibility of ` timeToDieInSeconds ` from protected to private and updated session handling logic to enhance encapsulation and ensure proper access to the
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency in
initialize the variable ` sz ` to ` 0 ` in ` JoinQParserPlugin . java ` and update result initialization logic in ` SolrIndex
added a new parameter ` file ` to the ` triggerMediaScan ` method call in ` FileDownloader . java ` to ensure that the
simplified the logic for posting test results by removing unnecessary conditional checks to simplify the code and improve readability
added multiple calls to setCustomGcode ( ) for custom G - code settings in MainWindow . java to ensure proper setting of custom G -
replaced PrintWriter with BufferedWriter and OutputStreamWriter in AdditionalJaxbMappingProducerImpl . java to improve performance and readability by using BufferedWriter instead of
refactor JsonElement class to improve code readability to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and SolrTestCaseJ4 , and modified exception handling in TestBadConfig . java to enhance test
added a method to remove fragments and action bar from the fragment transaction in GpsMainActivity to improve user experience by ensuring the action bar is
updated spanishTokens and spanishTokens2 in TokenizerAnnotatorITest . java to include parentheses to ensure proper parsing of spanish tokens
updated RemoteMediaHandler , RemoteRawHandler , and RemoteUtil to use Range . Byte instead of Range . Range for range handling to improve code
updated the G - code file path and adjusted bounds values in VisualizerCanvas . java , and modified the translation logic in GcodeViewParse
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to
updated method calls from ` hasSameSizeAs ` and ` containsAllEntriesOf ` to ` hasSameSizeAs ` and ` containsAll
added a condition to close the exchange client if the output stage is null and the output stage is null to ensure proper resource management and prevent potential
[ net . sf . jabref ] make integritycheck expandfilename private .
removed the import of SolrClient and its associated shardToClient in ChaosMonkey . java to streamline the code by elimin
fix npe in configurationactivator when file be null
reformatted code in NestedRepositoryTreePanel . java for consistency to improve readability and maintainability of the code
changed the constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added argument validation to ensure that the extension type is within
pdfbox - 4892 : remove unnecessary try / catch , a suggest by valerybokov
polish ` ` change the default value of ` ` deleteonShutdown ' ' and ` ` pushOnShutdown ' ' from ` ` delete
added error handling for state machine trigger errors in ReactiveStateMachineExecutor to improve error management and provide clearer feedback during event processing
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` to ` BuckConfigTest ` to verify the
added a default button to the root pane for the signin button in the InitialAccountRegistrationFrame to enhance user experience by allowing the signin
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages in RegistrationRestRepository . java to include the exception as a parameter to improve clarity of error reporting by providing more context
remove package - info . java and move reflection - related class to util
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the ' center ' variable from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to clean up the code and improve
simplified the conditional check for ` grpcReadTransformPCollectionName ` in ` RegisterAndProcessBundleOperation . java ` to simplify the
refactor SslContextFactory to improve SSL context handling to enhance security and maintainability of SSL context management
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations ( ) and defaultMaxLogEntries ( ) instead of hardcoded values to improve
updated return value from " access _ confirmation " to " access _ confirmation _ error " to improve clarity of error messages related to access confirmation
[ java ] add consumerclassloaderfilter to allow to set the context class loader
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFS
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and ` setRol
refactor task translation handling in TaskViewUtils and TaskViewSimulator to improve clarity and functionality to enhance code readability and maintainability
refactor assertions in the Assertions class to improve code readability and maintainability
added a null check for ` currentDateTimeFunction ` in multiple database classes and returned " CURRENT _ TIMESTAMP " instead of " SYSDATE "
added a new method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and
updated the method signature of ` DigitalWellBeingToast ` and ` TaskView ` to include additional parameters for content descriptions to
updated the timeout logic in CatalogTracker . java to include a default value of 50 when metaAvailable is zero to improve responsiveness by allowing
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
[ smarthome ] fix nullpointerexception in genericitem . getstate ( )
updated BidirectionalOneToOneNPlusOneTest to use Hibernate ' s IntegratorProvider and added a new PostDTO class to enhance
added a method to remove extra empty screens and modified the startSearchPageIndex initialization to ensure proper handling of empty workspace screens
updated HashMap initialization and set initializations in MarkBasePointersPhase . java , and added null check in IndexedValueMap . java in IndexedValueMap .
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to improve consistency and readability of
[ java ] catch interruptedexception in sendingaccountor . waitfor ( ) .
added a new private long variable ` position ` and its getter / setter methods in ` WALPrettyPrinter ` to manage the position of a cell
increased the port number from 1 to 0 in the NettyTransceiver initialization from 1 to 0 to ensure the transceiver
sort log event before generate a simplereport
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` to ` CSVFileLoggerTest
update to coref 1.7 . 0 , fix some typo
do n ' t send an iq message if the recipient be not a remote .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary annotations
updated configuration settings in Fetcher2 . java to use constants from Protocol . CHECK _ BLOCKING and Protocol . CHECK _ ROBOTS
added a condition to exclude specific video HDR formats in FFMpegVideo . java and removed multiple debug print statements in MediaInfoParser .
updated package references from " other _ package " to " other _ package2 " in tests to ensure compatibility with the new package structure
fix worldborder . setdiameter ( ) and add integration test
hbase - 2267 addendum fix the master master replication status ( # 2267 )
updated the checkOpen method to include an additional caller parameter for improved error handling to enhance user experience by ensuring that the login event is properly
refactor ` markDataResourceOnline ` calls to use a generateInstanceConfigs method for multiple instances to improve code readability and maintainability by
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add a test to verify that a pom file contain a reference to the modelbuildingrequest
removed unnecessary condition checks in PropertyMap . java to simplify the code logic for better readability and maintainability
refactor ` getControllerId ` method to accept a ` configId ` parameter across multiple classes to improve clarity and functionality of the ` getController
replace sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and avoid potential memory leak
removed the check for service . isGenerateRefreshToken ( ) in the prompts condition to simplify the logic by eliminating unnecessary refresh token generation
removed a debug print statement from Http2SolrClient to clean up the code and improve readability
replaced a lambda expression with an enum NoopGetter in BaggagePropagation . java to improve code readability and maintainability by using
refactor conditionalOnEnabledResourceChain class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the child count is greater than zero in the BarrowmanCalculator class to ensure that the BarrowmanCalculator
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging messages and added intent result listener handling in FacebookImpl . java to improve clarity and functionality of session state management in FacebookImpl .
updated the return value in ShadowICU from " h : mm a " to " skeleton " and added a new test for date picker functionality
removed the KeyguardManager dependency and simplified the conditional check in TouchInteractionService . java to streamline the code by eliminating unnecessary checks
cloudstack - 3892 : fix npe when set default disk offering for volume that do n ' t exist
replaced FileChannel with AsynchronousFileChannel and updated position handling in UtowBodyHandler . java to improve data handling and ensure accurate data integrity
refactor SigInt and SigIntTest classes to improve code readability and maintainability to enhance code clarity and maintainability by using parameterized
use bounding box resize instead of update by bound box resize .
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
refactor ComputeBenchmark to use lambda expressions for mapping and value loader to improve code readability and maintainability by reducing redundancy
added onRefreshListener to UploadListFragment to notify the adapter ' s data change to ensure proper handling of data updates during the refresh process
replaced ` File ` with ` Path ` in ` BibDatabaseContext ` and updated related methods to use ` Optional < Path > `
refactor ParticleEffect to use a single getter method for emters instead of an array to improve code readability and maintainability by redu
refactor tomcat . getservice ( ) to use findservices ( ) [ 0 ] instead of getserver ( )
updated error messages in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to include a period to improve clarity of error messages
added a check to ensure the playback state is not PLAYING before proceeding to avoid unnecessary playback operations
replaced the instantiation of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the
refactor the usage of the ` useModule ` method in ` Java2TypeScriptTranslator ` and add a new class ` InnerClassField
added logging filter and follow redirect filter configuration to DockerClientFactory and DockerClientProfile classes to enhance Docker client configuration flexibility by allowing customizable
replaced direct call to displayChanged ( ) with awtLock ( ) and awtLock ( ) in XToolkit . java to ensure proper
updated NationalizedScalarQueryTest to use SQLServer2008Dialect instead of DB2Dialect and replaced @ SkipForDialect annotations with @
added a ` revert ( ) ` method and wrapped the ` verifyZipHeader ( input ) ` call in a try - finally block to ensure
changed the access modifier of the storeClassFile method from private to public to allow external access to the method from other classes
updated the handling of NO _ MORE _ ORDS constant in SingletonSortedSetDocValues and added a new test class TestSortedSetDoc
updated error messages in CGIHandler and added a new JavaVM start method in JavaVM to improve clarity of error messages and enhance the
added additional conditions to check for specific newline characters in the string to ensure proper handling of specific file formats in the code
updated method signatures and variable types from List to Set in multiple classes to improve flexibility and maintainability of the code by using ImmutableSet instead of
added a check to return early if the mesh ' s vertex count is zero to avoid unnecessary processing when no vertices are present
added error handling and improved test cases in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the correct
improve javadoc and remove unused import
refactor JsonObject class to improve code readability to enhance maintainability and readability of the codebase
updated conditional checks in SelectChannelEndPoint . java and HttpConnection . java to ensure correct handling of max idle time for low resources in HttpConnection
fix farmlandblock . cansustainplant not be call in the wrong place .
added functionality to create a new table and retrieve primary keys in QueryDatabaseMetaDataIT . java and modified database upgrade logic in ConnectionQueryServicesImpl
added Locale . US to SimpleDateFormat instantiation in HttpCookie . java and created a new class B6791927 . java for cookie parsing to
removed multiple redundant calls to db . close ( ) in DbHelper . java to improve code readability and maintainability
increased timeout duration from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to improve test reliability by allowing more time for
make economy allocation stage traceable .
simonstewart : add save key binding to source tab
added a static block to initialize ObjectMapper and set line separator to ensure the ObjectMapper is properly initialized and set a system property for line separator
updated path handling in NativeEnvironmentRepository . java to ensure compatibility with Windows path syntax
replaced instances of ` appTest ` with ` appT ` and ` appT ` in multiple test files to streamline the application setup
[ java ] remove recordinglog . validateexistinglog from consensusmoduleagent and remove unused method in recordinglog
update error group name from ` GroupName ` to ` ErrorGroupName ` in ` ITSystemTest . java ` to ensure compatibility with the latest
added a sleep delay in TestFuzzOptimizations . java based on configuration settings to ensure proper handling of memory usage during test execution
added a private boolean variable ` reverseImage ` and updated its initialization in ` CameraManager ` to streamline the code by eliminating unnecessary
updated string comparison from ` equals ( " META - INF / " ) ` to ` equals ( " META - INF / " ) ` for
[ mdm ] fix bug in mdmmatchlinkservicetest that overwrite golden resource attribute that be involved in link
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in AuthenticationSuccessListenerTests . java to enable compatibility with JUnit 5
http : / / code . google . com / p / mybatis / issues / detail ? id = 363 : use indexof
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the ` triggerTime ` variable to use ` LocalDateTime . ofInstant ` with the default timezone to ensure the correct time zone is used for
added a new method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for handling abstract method errors to improve error handling
camel - 1774 : camel - simple - add support for ognl syntax in simple language . thanks to michael
removed a check for empty elements in the AbstractParser class to simplify the code by eliminating unnecessary checks
camel - 14836 : fixed the issue of jcloudspayloadconverter do n ' t copy input stream
camel - 1770 : remove the @ ignore annotation from camelconsultest . java
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and modified ` Check . java ` to check for
[ java ] increase driver timeout for channelvalidationtest
added a new file ` FileExtensions . java ` with static ImmutableSet constants for CLANG source and header to facilitate the handling of
updated DateFormatUtil to use ISO8601CanonicalDateFormat and removed the ThreadLocalDateFormat class to simplify date format handling and improve code clarity
[ gr - 18686 ] remove deprecate option that use cgroupmemorylimitforheap and fasttlabrefill
added displayName property to multiple client properties and updated related classes to support dynamic display name configuration in the DelegatedClientIdentityProviderConfiguration
replaced ` RuntimeException ` with ` EarlyTerminationException ` in multiple operator classes to improve error handling by providing a specific ` EarlyTermination
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
replaced ` getResponse ` with ` consumeResponse ` in ` HttpBindServlet ` and modified connection handling in ` HttpConnection ` and ` HttpSession
fix npe in forgeeventfactory when parent be null
wallettool : remove keycrypterexception from catch block
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to mark the class as deprecated
updated the calculation of ` iLength ` and ` origlen ` in ` HyphenationTree . java ` to ensure correct handling of the
added a delay of 200ms in the IQRegisterHandler . java file to improve responsiveness of the registration process
move resource . getresources ( ) to javax . swing . service . resources
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to clarify that
added a new boolean variable ` providersChanged ` initialized to ` false ` in ` ConfigurationManager . java ` to ensure that the ` providersChanged
added a method ` quoteIdentifierTokens ` to handle identifiers in ` HiveLexer ` to improve token identification handling for Hive literals
added a null check for type1 . getName ( ) in FileSystemFontProvider . java to handle missing ' name ' entry for PostScript name
updated type casting and variable declarations in SolrResourceLoader . java to improve code clarity and ensure proper type safety
refactor conditional check in Window . java to iterate through the parent actor before returning the current cell to improve robustness by avoiding potential null
added null check for appManifest before retrieving the target SDK version to avoid potential NullPointerException when appManifest is not initialized
updated ConfigurationMetadataGenerator to adjust configuration metadata and refactored method names for clarity to improve code readability and maintainability by centralizing
added userName field and corresponding getter and setter methods to the Driver class and HiveSemanticAnalyzerHookContext classes to allow users to customize the driver
added setter methods for ` File ` , ` URL ` , and ` InputStream ` in ` XsltBuilder ` , and updated ` Xslt
added HadoopShim dependency to ContainerRunnerImpl and TaskRunnerCallable classes and updated related classes to utilize it to enhance functionality by integrating
removed unnecessary variable assignments in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to streamline code and improve readability
fix nullpointerexception when request . getmappingdata ( ) . context be null .
updated log message formatting in ThroughputLogger . java and modified test parameters in ThroughputLoggerTest . java to improve clarity of
refactor VM version checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java
[ hotfix ] [ servicecomb - metrics ] remove statisticsoperationmap from defaultlogpublisher
refactor logback configuration handling in FrameworkLauncherExtended . java to improve code readability and maintainability by using a dedicated method to resolve the
added @ NotNull annotations to several methods in CipherExecutor , CookieValueManager , and CasCookieValueManager classes to improve null safety and clar
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in multiple files to standardize command
refactor startContainerWithCommand calls to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leak
rename TestLucene50FieldInfoFormat class to TestLucene60FieldInfoFormat to improve clarity and consistency in naming conventions
reformatted the closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method ` generateShieldAddress ` to the ` RpcApiService ` class to handle Shield addresses in the RpcApiService to
changed the return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` across multiple terminal classes to simplify the
updated regex patterns in TestStabilityRule . java and modified the initialization of sRunFlavor in TestStabilityRule . java to improve
added a condition to limit fragments for multi - valued fields in DefaultSolrHighlighter . java and updated the HighlighterTest . java to ensure
updated the ` tryToLogin ` method to accept an additional username and password parameters to enhance the method ' s functionality by allowing users to login
updated entity handling in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to improve
http : / / issues . apache . org / jira / browse / amq - 4892 - fix a typo in the
removed wrapCollection parameter from the update method call in DefaultSqlSession . java to simplify the method call by eliminating unnecessary wrapping
added handling for IllegalCurrencyException in BTCEAdapters . java to improve error logging for unknown currency exceptions
refactor subscription handling logic in DurableConduitBridge . java to improve clarity and efficiency to enhance readability and maintainability of
pdfbox - 4071 : set default tolerance to 0.3 in pdfparserconfig
modified the ` startController ` method to accept a boolean parameter for tenant isolation and added new methods for tenant creation in multiple test classes to enhance
changed the return type of the response value from ImmutableMap . builder ( ) to a direct cast to Map to simplify the code and improve type safety
added a condition to check if the attrs size is greater than 4096 before verifying if it is greater than or equal to 4096 to ensure that
added methods to retrieve JDK name , type , and language level from IjProjectConfig and updated related classes accordingly to improve project configuration management
corrected a typo in the error message from " Experimenal " to " Experimental " to improve clarity and consistency in
updated test methods in GrantedAuthorityEffectiveAclsResolverTests to improve test coverage for GrantedAuthorityEffectiveAclsResolver to enhance test coverage
replaced the use of ` new ReflectionClassDeclaration ( Object . class , ... ) ` with ` getSolvedJavaLangObject ( ) ` in
added logic to calculate the number of buttons based on a specified limit to 24 to optimize button handling by avoiding unnecessary pointer mapping
updated import statement from ` jdk . testlibrary . AssertEquals ` to ` com . oracle . java . testlibrary . Asserts .
added a new ` MessagePackFactory ` class and refactored the ` newUnpacker ` method in ` MessagePack ` to utilize
add is _ desert and is _ cave tag , add is _ cave tag for biome
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional logic to update UIID based on the horizontal state of the component group to ensure proper UIID assignment for group elements and buttons based
replaced DOI _ URL _ PATTERN . matcher ( identifier ) with matcher . matches ( ) in DOIServiceImpl . java to improve
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLockless
[ java ] close the commit position counter in clusteredserviceagent when it be close .
# 113 - add example of usersite with id ( # 11313 )
added error handling for malformed URLs in HttpConverterRegistrar to improve robustness by providing clearer error messages for malformed URLs
cloudstack - 4892 : fix the bug that the host _ id and storage _ pool _ id do n ' t match the host
replaced the method ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) `
updated JavascriptCompiler class to be final and refactored class generation methods to improve code clarity and maintainability by using a dedicated method for
added synchronization to the UISettings class to ensure thread safety when writing properties to the file
added a native text input check in the TextField class and changed the access modifier of the fireDataChanged method from private to public to allow access
spannerio : add more error message for retry on abort ( # 167 )
replaced explicit type parameters with the diamond operator in multiple Java files to improve code readability and maintainability by using the diam
updated the array type check from double to short in ObjectInputStream . java and added a new CloneArray class to ensure correct handling of short arrays in
replaced ` getClaim ( " nonce " ) ` with ` getStringClaim ( " nonce " ) ` in ` OIDCAuthenticationFilter .
added a condition to check for relationship fields in the DCInputSet class to ensure correct handling of relationship fields in the input set
added support for server slogan in the capabilities table and updated related logging messages to enhance user experience by providing a specific server slogan
refactor conditional logic in DrawerActivity . java for better readability to improve code clarity and maintainability
replaced fail ( ) method with Assume . assumeNoException ( ex ) in SolrRequestParserTest . java to improve test reliability by
added a check for empty missing symbol events in MissingSymbolsHandler . java to avoid unnecessary processing when no symbols are found
added " Const . EOL " and " Data 5 - 4 " data in StringHelperTest . java to enhance data formatting for better readability and
added warning log for data provider return an empty array or iterator to enhance debugging by providing clearer feedback when data provider returns an empty array or
camel - 14836 : replace empty _ map and empty _ list with empty set and emptySet ( )
fix selection style for freeplane 1.9 . 8 and freeplane 1.9 . 8
fix a typo in physicsraybody . setrestitution ( )
added AutoFtpActivity and FtpHelper classes to implement FTP testing functionality to enable proper handling of FTP operations in the application
refactor token handling in BaseSemanticAnalyzer to use a local variable for type checking to improve code readability and maintainability by reducing
added getter methods for imageX and imageY in ImageViewer , OnOffSwitch , Component , and UIBuilder classes , and implemented component state
added a new class ` RemoteExecutionEnabled ` and its corresponding test in ` BuildableSerializerTest ` to facilitate remote execution behavior
pdfbox - 4071 : fix typo in error message
replaced FileReader with InputStreamReader and added UTF - 8 encoding warnings in ImportCsv . java and PublicBAOS . java to improve character encoding handling
added assertWorkingScoreFromScratch ( workingScore , completedAction ) to AbstractScoreDirector . java to ensure that shadow variables are not
updated the Hive configuration property from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to
added logging statements to multiple Datagram packet - related classes to enhance debugging capabilities by providing clearer feedback when message content is not an io .
updated file removal logic in SynchronizeFolderOperation and modified fragment handling in FileDisplayActivity to improve folder management and enhance user feedback during synchronization
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is
schemaregion : deprecate ischemaschemaregion # constructschemablacklist and add test for delete timeseries
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure proper exception handling for invalid sample MIME types
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
updated the @ AllArgsConstructor annotation to include @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) to ensure the @ AllArgs
added a check to throw SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that creating an index on a
added a new class ` Website ` with properties for ` name ` , ` URL ` , and ` URI ` to facilitate
added a setup method to set the default locale to " en " in BSFormatterTest to ensure consistent locale settings for testing purposes
added a filter to detect badly download jar files in the core mod manager to improve error handling for badly downloaded jar files
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve accuracy of sha1sum
added conditional checks for single and non - single parameters in SimpleExprGenerator . java to ensure proper handling of variable expression tokens in the expression generation
added a volatile boolean field ` createdVertx ` and modified the conditional check in ` VertxComponent . java ` to ensure that the ver
replaced null parameters with a single node parameter in the writeAttributes method calls to improve code clarity and maintainability by using a more d
updated log messages to use " Synchronized " instead of " Synchroned " and improved null checks for file and current directory retrieval to enhance
added a new boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` Feed
replaced ` MavenTestingUtils . getTargetDir ( ) ` with ` MavenPaths . targetDir ( ) ` in ` TestAnnotationConfiguration . java
added validation for URI , MetaData , and URI data types in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to ensure proper
updated the condition for playing sound state in GwtMusic . java to ensure the sound is playing only when it is not active
added a new permission constant for admin area permissions in MainCommand . java and introduced a new permission constant in Captions . java to enhance the
refactor query options handling in ServerRequestPlanVisitor to use a dedicated method to improve code readability and maintainability by encapsulating query options
updated path comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
refactor assertions in ResourcesTest to use local variables for " pure " and " label4 " , " label3 " , and " mix
replaced the NMTWaitForDataMerge method with NMTOverflowHashBucket and NMTMallocWithPseudoStack methods to enhance
[ hotfix ] [ runtime ] migrate eitherserializersnapshot to javabaserializersnapshot
updated ` DEFAULT _ NDOTS ` and ` DEFAULT _ NDOTS _ OPTIONS _ PATTERN ` to use constants from ` AddressResolver `
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestR
pdfbox - 4071 : avoid npe , a suggest by valerybokov
updated XML namespace references from " liquibase / parser / core / xml / " to " www . liquibase . org
move commonmimetypelocator from truffle / api / source to truffle / api / test / source
updated RepositoryVersionState from INIT to NOT _ REQUIRED in multiple classes to ensure proper handling of repository version states in the application
updated the comparison method in GenerateChangeLogTask to include schema comparisons to enhance schema comparison flexibility in the schema generation process
updated the import statement from ` org . junit . Test ` to ` org . testng . annotations . Test ` to align with the
added a new file ` ProgressiveJPEGTest . java ` to implement a GUI test for the ` ProgressiveJPEG ` functionality to facil
updated MaterialLoader to set alpha threshold and reset material variables to improve material management and ensure proper handling of material names
make native - image building error message more informative
added a null and empty check before setting size in Label . java to avoid potential NullPointerExceptions when text is empty
modify the readVarInt ( ) method to account for a % 1 _ 000 _ 000 to ensure that the readVarInt ( ) method
changed PushUtils and ThumbnailsCacheManager classes to be final and added private constructors to enforce immutability and enforce immutability of the
replaced the method of determining the length from a collection of coordinates with a direct call to ` curConfig . getLength ( ) ` to simplify
removed unnecessary cast to MockDirectoryWrapper in setEnableVirusScanner method call to simplify code by eliminating unnecessary type casting
updated the parameter in componentPresetDao . load method from " . * csv " to " ( ? i ) . * csv " to ensure
added a conditional check for ` duration ` before announceing accessibility in ` TaskbarStashController . java ` and refactored variable
replaced the method call to ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask ` in the Node instantiation
pmd : add targetjdk1.5 to support both jdk 1.3 and JDK 1.5
replaced PowerMockito with MockitoJUnitRunner in QuotaResponseBuilderImplTest . java to streamline mocking and improve test
added output stream settings for error and output streams in TestSchemaToolCatalogOps . java to improve error handling during testing
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related methods to include it to
updated MongoQueryMethod to include RepositoryMetadata as a parameter to enhance query functionality by allowing repository metadata to be used
refactor : add a wrapper for entityresolver2 to make it easy to use
removed duplicate static imports in MetaDataEndpointImpl . java to streamline code for better readability and maintainability
increased the ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added a deadlock retry interval to
renamed variable ` xl ` to ` xAxis ` in ` BarChartActivity . java ` and updated line offset calculation in ` LineChartActivity
added functionality to check if a character is printable and validate the system ' s operating system names to enhance character validation and ensure proper handling of system
rename method ` ` in ' ' to ` ` using ' '
do n ' t throw an exception if there be no exception to process plugin .
fix checkstyle issue in util / stream / proxyconnectionmanager . java and servertrafficcounter . java
updated resource path handling in ITSystemTest . java to check for the existence of the " google - cloud - vision " directory to ensure
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
fix : add admin button to community list servlet
add thread counter for longCompactions , shortCompactions , and shortCompactions in CompactSplit . java to track the number of compaction threads
updated the method of obtaining the package name in WallpaperChooser to use a resource resource instead of the application ' s package name to
replaced the method ` getPlayersInPlot ( ) ` with a new method ` getPlayersInPlotVisible ( ) ` to improve code
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest . java for improved test coverage to enhance code maintainability and readability
replace hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant in JNIRegistrationManagementExt .
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
removed null checks for key and iv in UploadFileOperation . java to simplify key and iv initialization logic for better readability and maintainability
added @ Stability annotation to WorkProfileTest . java to mark the test as stability for better test reliability
removed conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replaced ` setCursorPosition ` method call with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure
refactor LockFreeBucket to extend abstract classes and introduce new classes LockFreeBucketContendedTimeMeter and LockFreeBucketLayout for better
add debuggablethreadpoolexecutormbean to nodeprobe to print thread pool stats
updated the method to retrieve the maximum bitrate based on user preferences to ensure accurate retrieval of maximum bitrate based on user preferences
updated ZipkinHttpSpanExtractor to include checks for missing span IDs and added a new test for tracing tracing with interceptor in TraceFilterTests to
remove duplicate and duplicate payment account when dao be activate
remove reflection - based method call in favor of direct method call
added a call to set the project in the LauncherUtils class to enhance project management functionality
updated JsBundle , JsBundleBuilder , JsTestScenario , JsLibraryBuilder , and JsTestScenario classes to include ProjectFilesystem as a parameter
refactor multiple Java classes related to EnvelopeStyle , EnvelopeStyleFeature , Databinding , DatabindingFactory , Databind
refactor MetricsDSLContext class to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and updated its usage in VersionBuckConfig . java to streamline the code by eliminating the interface and
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by preventing potential Type
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message from ` AST ` to ` LST
fix : update gapic - generator - java with mock service generation fix ( # 119 )
added SLF4J logging functionality to SimulationStatus . java to enable logging capabilities for simulation status operations
updated the VERSION _ POSITION _ Y and the SANS _ SERIF font from 138 to 150 in Splash . java to reflect the new
added a runLater ( ) method to the notification addition to ensure notifications are added only once to avoid concurrent modification issues
added a mock mock with a new return value in ReturnsElementsOf . java to enhance functionality for mocking elements in the application
corrected the spelling of " non - string partition column " to " non - string partition column " in ErrorMsg . java to improve
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of ` LineFile
added a method to retrieve the version code in MainApp and updated FeatureList and WhatsNewActivity to use it to improve code organization and
camel - 1774 : camel - spring - dsl - optimize beaninfo . getmethodinvocation ( string ) and beaninfo . get
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added bufferOwned flag and modified buffer disposal logic in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management
added a transition for " forgotPassword " in the PasswordManagementWebflowConfigurer to enhance user experience by providing a new transition for password
refactor JerseyClientConfiguration class to improve code organization to enhance maintainability and readability of the code
polish ` ` move characterstreamreadingmessagesource and characterstreamwritingmessagehandler to spring - integration - stream ' ' namespace
updated print statements to use ' o ' instead of ' s ' for clarity to improve code readability and maintainability by using a wildcard
added functionality to adjust column and row counts in StringDict and Table classes to ensure correct handling of empty strings in the table
fixed - add autocloseable support for createcontainercmd hook . # 3379
updated logging level from info to error in MediaInfo . java and refactored exception handling in RendererConfigurationTest . java to improve error handling
added support for a schemapattern option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable dynamic configuration of the schemapattern
http : / / issues . apache . org / jira / browse / amq - 4892 - fix nullpointerexception when use
refactor calculations for ratio and nativeBuffer creation in AndroidGraphics . java to improve readability and maintainability of bitmap creation logic
refactor Base64 encoding methods for improved performance to enhance performance and maintainability of the code
sulong : fix handling of global context in llvm global container .
updated the @ Ignore annotation in JavascriptEnabledDriverTest . java to include both IPHONE and SELENESE to ensure compatibility with the
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and readability
rename ` resName ` to ` resId ` in ` AttributeResource ` and update related classes accordingly to improve clarity and consistency in resource
refactor Docker configuration handling to utilize Optional for TLS file resolution to improve flexibility and maintainability of the Docker context handling
use setup instead of teardown in simplereactiveelasticsearchrepositorytests
refactor type variable capture logic in mmm Attr . java and add a new file ppp T6450290 . java with generic
added logging level configuration to the LoggingFlags and LoggingOptions classes to enable customizable logging levels in the application
added logging statements to ` LauncherModel ` , ` SecondaryDropTarget ` , ` ModelWriter ` , and ` PackageUpdatedTask ` to
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added deprecated methods for ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup ` to improve code clarity and maintainability by
updated the calculation of numPredictiveAppCols to accommodate phone - specific app columns to ensure accurate number of app columns based on device
updated the initialization of ` value ` to use ` Charset . forName ( " UTF - 8 " ) ` to ensure proper handling of character encoding
added a new ` RequestMatchers ` class and its corresponding test class ` RequestMatchersTests ` to enhance request matching functionality to enhance security by allowing
do n ' t allow selection of input box in applet mode
updated height and width calculations in ProgressBar . java to account for bgBottomHeight and bgRightWidth to improve layout accuracy for better visual appearance
[ hotfix ] [ native ] load external function json from external _ functions . json file
changed Object variables in BruteArgumentMoverHandle to be final and added a native method for permuteArgs to enhance immutability
added a condition to check if the handler state is invalidated in the gesture state check to ensure that the gesture state is only processed when the handler
updated layout calculations in DynamicGrid and Workspace classes to improve layout accuracy for landscape , portrait , and portrait components
added a condition to check if the redir file is " / robots . txt " in HttpRobotRulesParser . java to ensure that the
[ netbeans - 4892 ] fix miss icon for netbeans - netbeans module
replaced " continue " and " close " with " createWorld " and " return " in the trySubscribe method calls to improve clarity
updated the null check in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to
refactor code formatting and improve readability in FlowJob . java and StopAndRestartFailedJobParserTests . java to enhance code clarity
updated the filter URL handling in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use a matcher for authentication requests to improve flexibility in
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind the service from the upload service connection to ensure that the service is
updated variable names from ` thumbNail ` to ` thumbnail ` in WallpaperPickerActivity . java to improve clarity and consistency in
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys to ensure proper configuration of the RPC request timeout
updated logging level from error to debug in TsFileResourceManager . java and refactored test cases in ResourceManagerTest . java to improve
added system properties setting to the model source in MavenModuleLoader to ensure proper configuration of the model source
added server metrics for readiness check status and modified related methods in HealthCheckResource and AdminApiApplication to enhance monitoring capabilities for readiness checks and
fix animatedtorch not be register on client side .
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is not initialized
added a method to set Hive site location in UtilsForTest and updated test classes to use it to improve flexibility in managing Hive configuration files
added a new link " Muting Users " to the links list in FeaturesActivity . java to enhance user tracking functionality in the application
added a new property " jdk . reflect . useDirectMethodHandle " with a default value of " false " to disable direct method handle
hbase - 2238 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ yarn ] improve error message when the environment variable be not set
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getSpelling ( ) instead of getPronunciations
updated newline characters in JsonUtilsTest . java from " \ n " to " \ " for consistency in JSON string formatting
added an extra data for " id " in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to store the tweet ID
added a warning log message when a message listener is lost in MessageRunner . java to provide clearer guidance on the underlying ring buffer data
replace IOException with NoClassesFoundToAnalyzeException in FindBugs2 . java and add a new class NoClassesFoundToAnalyzeException . java
replaced ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with
updated the isIncompatible variable assignment in DLNAResource . java to ensure compatibility handling of resource compatibility
updated the method signature of ` createAccount ` in ` RpcApiService . java ` to use ` AccountCreateContract ` instead of ` Account
pdfbox - 4071 : avoid arrayindexoutofboundsexception when there be no range array
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the test failure
enable off - heap format by default and update default value for star tree format to true
updated title handling in FeedUpdateService to truncate content to a maximum of 2048 characters to ensure that the title does not exceed the maximum of 2048
refactor JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory for the preview panel to improve code clarity and maintainability
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for better debugging
added null check for reusable bitmap before setting bitmap options in AndroidTileBitmap . java to avoid potential NullPointerExceptions when reusable bitmap is not
added a layoutParams field and a getter method in FakeView . java to provide access to the layout parameters in the FakeView class
added a check to throw an IllegalStateException when a cursor is already closed in DefaultCursor . java and created a corresponding test in CursorSimpleTest .
pdfbox - 4071 : do n ' t try to create a page tree if there be no kids / pages / pages / pages
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not needed
added a private String field with getter and setter methods to the Message class to provide access and access for the timestamp property
refactor exception mapper to use a common utility class to improve code readability
changed the access modifier of the AbstractExecutor class from package - private to public to allow external access to the AbstractExecutor class
[ isochrone ] fix edge _ costs and edge _ costs query parameter not be remove
removed the ' public ' access modifier from multiple test classes and added an ` assertEquals ` annotation in the ` FailureLogAnalyzerTest ` class
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and encapsulate CSRF setting logic into a separate method
lombok . launch . shadowclassloader do n ' t work in bootstrap mode
danielwagnerhall : add option to disable numericdisabled rule
updated logging level from info to debug in HiveConf . java to ensure logging is only enabled when debug is enabled
added null checks for axes and buttons in Lwjgl3Controller . java and modified controller management in Lwjgl3ControllerManager
updated import statements for ObjectFactory from cucumber . api to io . cucumber . core . backend in WeldFactory and W
refactor the code to retrieve the HostDatabase instance before saving the port forward to improve code readability and maintainability by eliminating unnecessary
added functionality to control the behavior of the ` shouldSnapshotData ` property in the ` GlobalConfiguration ` and updated related classes to utilize it
updated event handling and job scheduling in SyncedFolderObserver . java to ensure proper event processing and improve job execution flow
refactor LocationMarshaller class to improve code structure to enhance maintainability and readability of the code
refactor touch event checks in StatusBarTouchController and update swipe conditions in OtherActivityInputConsumer to improve handling of trackpad gestures
refactored VectorReader and related classes to remove the VectorReaderImpl interface and simplify the class structure to improve code organization and maintainability by
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to ensure compatibility with the latest mockito features and improve
refactor methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` across multiple files to improve clarity and consistency in
updated ` RecordReader ` and ` RecordReaderFileConfig ` methods to use ` RecordReaderFileConfig ` instead of ` RecordReader ` to
added a null check for the ` extractor ` variable in ` ControllerMethodInvoker . java ` and annotated the ` ArgumentExtractors . ParamExtractor
cloudstack - 4892 : add domain support to resource limit service ( # 4892 )
fix inventoryeffectrenderer not fire potionshiftevent . close # 439
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and removed it from uncheckedOptions in SizeTieredCompaction
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ rocketmq - 4892 ] fix the metric of popmessageprocessor . getmessagecount ( ) and getmessagecount ( )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
replaced the @ Test annotation with an @ Ignore annotation in ShadowDateUtilsTest . java to temporarily disable the test for a moment to temporarily
renamed ` EventLoopGroup ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related references to improve clarity and
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and corresponding test in ClientConnectTest to ensure correct handling of upgrade requests and responses in the
added support for a configurable connection timeout in AndroidImplementation . java to enable dynamic configuration of the connection timeout
updated user and team access permission retrieval methods in GitblitClient . java and removed unnecessary try - catch blocks in RepositoriesPanel . java to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted casting
updated assertions in Misc . java to check if a file is a root directory and added a method to determine if a file is writable to
added logging capabilities and refactored thread selection logic in FixedThreadExecutor to enhance flexibility and maintainability of the executor management logic
added null check for the ' field ' variable in AbstractChangeGenerator . java to prevent potential NullPointerException when ' field ' is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration files to improve consistency and clarity in event listener handling
refactor animation end handling by extracting it into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an overridden close method to the DeflaterOutputStream to ensure proper resource management by closing the deflater output stream
added a new file ` gsp001 . java ` implementing a native method to retrieve system properties at the early phase agent on load to ensure
resolved - issue batch - 149 : add support for @ inject on @ inject ( @ beandefinition )
add cameracontrol and camerode to export to the correct camera control directory .
refactor PopupNotificationPanel to utilize a custom window ancestor for the popup window to improve code readability and maintainability by reducing
[ java ] use inferenceexception instead of ambiguousnoinstanceexception in infer . java
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to allow for more
added ` onBuild ` and ` executionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
added conditional logic to set icon based on RTL direction in Toolbar . java and adjusted flow layout positioning in FlowLayout . java to
added a boolean flag ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory ` to enable position increments during filter creation
refactor internet address handling in EmailsTest and SystemErrorEmailReportTest to use a new InternetAddress instance to improve code clarity and
added a new boolean variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to ensure proper sharing behavior
added support for using a specified tty name in the JansiNativePty class to enhance flexibility in managing TTY commands based on
updated the variable name from ' bytes ' to ' bytesSize ' for consistency in BandwidthProcessor . java to improve clarity and consistency in
replaced direct calls to ` then ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java
camel - easee - api : update endpoint to use the new api base url
updated sleep duration and added startup attempts in KafkaIOIT . java to improve read timeout handling and ensure proper startup attempts
updated ` SearchResultMatcher ` to use ` is ( itemName ) ` instead of ` allOf ` for better readability to improve code clarity
updated SSL handling in OkHttp . java to utilize a secure SSL context to enhance security by ensuring all SSL connections are validated before proceeding
replaced BUTTON _ A11Y _ LONG _ CLICK with buttonView . onButtonLongClick in NavbarButtonsViewController to
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added nullable nullable fields for stdout and stderr in ShellStep to ensure proper handling of null workingDirectory to prevent potential NullPointerExceptions
increased the timeout duration from 1000ms to 2000ms in AsyncAppenderTest . java to improve test reliability by allowing more time for
updated the ` escapeDatabaseObject ` method to include ` objectName ` and ` indexName ` as a parameter to enhance the flexibility of the
added a boolean variable ` inputChanged ` and updated conditional logic in ` MaterialRenameDialog . java ` to track if the input has changed to
added a test for handling display state changes in ShadowDisplayTest and implemented a setState method in ShadowDisplay to ensure that display state changes are applied
[ geos - 8287 ] add directinvocationservice interface to allow dispatchers to invoke direct operation .
added handling for GWT key codes ` KEY _ X ` and ` KEY _ Y ` in GlobalKeyDispatcherW . java to support additional key
updated SQL queries to use ` pg _ catalog . pg _ depend dep ` and ` pg _ constraint ` based on server version to ensure compatibility
added nullability annotation to the message variable in QueueChannel . java to improve code clarity and prevent potential null pointer exceptions
updated variable names and URI handling in FileUtils . java to improve code readability and maintainability by using more descriptive variable names
added logic to handle Jenkins nodes in the remoteCollector initialization based on the application name to enhance flexibility in managing different application types based on
refactor attribute resolution logic to use a dedicated method to improve code readability and maintainability by centralizing attribute resolution logic
updated error handling and logging in ProtobufLogReader . java to improve clarity of error messages and enhance logging clarity
added error handling for nacos service shutdown in NacosRegistry and invoked destroy method in DefaultApplicationDeployer to ensure proper cleanup of
camel - MyBatis : fixed switch / cases indentation see camel - 14750
refactor GoAwayGenerator and GoAwayBodyParser to use a dedicated method for writing status codes to improve code readability and maintain
reformatted code for improved readability and consistency in AuditEvent and AuditEventTests to enhance code clarity and maintainability
updated the return statement in Interpolation . java to return 0 instead of a for negative input to ensure correct handling of floating - point values and
change default path to point to / defaults /
refactor code to store the absolute path in a variable before adding it to the builder to improve readability and maintainability of the code
added unit tests for PointRangeQuery functionality in TestPointQueries . java to ensure correct equality and equality checks for PointRangeQuery objects
hbase - 2249 addendum fix testhfilecleaner to testhfilecleaner
updated file name comparison logic in ReceiveFileConversationComponent . java to ensure the correct file name is displayed based on the file transfer request ' s
[ hotfix ] [ runtime ] remove unused exception from jedisclustercommand
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
added benchmark methods and modified hashmap initialization in QMap - related classes to improve performance and maintainability of the benchmarks
added a new HashMap instance named G _ SCH _ B to the HybridPlotWorld class to initialize the G _ SCH _ B
added a check for empty fields and refactored identifiers handling in GroovyEngine . java to improve code readability and maintainability by reducing
ggb - 1889 fix for angle [ 0 , 0 , 1 ] , 0 , 0 , 0 , 0 ]
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE constants to HiveConf . java and modified
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions for improved readability and performance to enhance code maintainability and reduce dependency on
createvpccmdbyadmin : remove unused variable ` success `
updated the calculation of windowAlpha in WindowTransformSwipeHandler . java and modified the condition in FloatingIconView . java to improve accuracy
updated error message in SecurityNamespaceHandler to reference " 4.0 " instead of " 3.2 " to clarify that the schema
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
changed variable declarations from non - final to final in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure im
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to utilize it to
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced direct logger initialization with direct logger calls for debug , info , and warn methods to simplify the logging process by eliminating unnecessary variable
replaced instances of ` updatePurgedShardNodes ` and ` updatePurgedShardNodes ` with ` deletePurgedShard ` and `
added support for Java language 17 - preview in the JavaLanguageModule to enhance compatibility with the latest Java versions
added a constant for seconds to wait for compression jobs and refactored the stop method in TimeBasedRollingPolicy to improve code clarity and
[ java ] : fix checkstyle violation in volatilereadnode
added a method ` getSteps ( ) ` to return an unmodifiable list of steps in ` SimpleJob . java ` to provide access to the
removed unnecessary fields fromBase58 , toBase58 , fromBase58 , toBase58 , and toBase58 in TronJsonRpc
refactor currency pair creation to use a local variable for clarity to improve code readability and maintainability
fix longtasktimer to use basetimeunit instead of timeunit . nanoseconds
[ flink - 1649 ] [ euphoria - blink ] add support for hashpartitioner in reducebykey
refactor color handling in HostEditorActivity to use CharSequence instead of String for improved type safety to enhance code readability and maintainability by
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods to improve clarity and consistency in naming conventions
added a maximum number of replies in the loop condition to limit the number of replies in the query to 50 to ensure that the loop does not
updated the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to improve test reliability by allowing more time
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the issue of persist tail
fix npe in getimplementationtitle ( ) in glowserver
refactor the grow method to use a long parameter instead of a fixed length to improve code readability and maintainability
removed unused import of DataOutputStream in GdxSetup . java to streamline code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the submitted file name
added markReadForLoad ( ) method to LauncherFragment . java to ensure proper loading state during loading
updated the main method signature and exception handling in JarInstrumentor . java to include ClassNotFoundException to improve error handling and provide clearer error messages for
added a method ` checkForSpillPossibility ` to check for spill possibility in ` HashAggTemplate . java ` to ensure proper
updated variable declaration and method calls to use ` dsName ` instead of ` info . info . getDocStoreSegment ( ) ` to improve code
added a default name ID format and a check for supported name formats in SamlProfileSamlNameIdBuilder to ensure the name ID format is
added error handling for password change aborted in ChangePasswordPage . java to improve user experience by providing a clearer error message when the password change
removed an unnecessary closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file containing font size checks for MetalLookAndFeel and system look - and - feel to
added validation for begin and end date filters in RRD4jPersistenceService . java to ensure that filters are valid before and after the end
added checks for non - positive vectors in GenericUDAFComputeStats . java to prevent processing when numVectors is less than zero
test : migrate executablereferencetest to junit 5 ( # 1868 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 1774 : add support for wire tap to the dynamic to be able to configure the expression for the dynamic processor .
changed the access modifier of the setAction method from public to protected to restrict access to the setAction method for better encapsulation
added a new boolean validator for enabling the topn planner in PlannerSettings and implemented a matching method in PushLimitToTopN to
[ java ] remove unused variable aerondirectoryname in clusterloggingagenttest and archiveloggingagenttest
fixed - rbatch . ping ( ) and rbatch . ping ( ) method do n ' t work properly
refactor ` getConfVarURL ` method to return a URL instead of an ` InputStream ` to streamline configuration handling by eliminating unnecessary
updated the method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` createModel ` to use the
modified the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve menu item selection functionality to enhance user experience by
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
updated homeDir initialization to include the " hawtio . dirname " property to ensure the correct directory is used for the hawt
added a check for empty comments and empty whitespace in the Space class to ensure proper handling of empty comments in the application
changed variable declarations from ` private ` to ` private volatile ` across multiple dictionary - related classes to ensure thread safety when accessing member variables
removed stack trace printing from the ContextHandler class to simplify error handling by eliminating unnecessary stack trace printing
[ spongecommon ] move customitemdroptest to integration - regression module
added a ` ifNotExists ` parameter to the ` addPartitionDesc ` and related classes to enable conditional handling of conditional statements based on the existence
updated byte reading logic in NfsSecondaryStorageResource . java to improve data handling and readability to enhance performance and prevent potential memory leaks
[ java ] remove redundant controlrequeststreamid call in cluster node
updated spatial operator names in CapabilitiesTransformer and added unit tests for supported spatial operators in WFSTestSupport to enhance spatial operator support and ensure
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with @ LuceneTestCase . AwaitsFix
refactor the preface matching logic in Http11InputBuffer . java to improve readability and maintainability of the code
[ java ] set default value of isIngressExclusive to false in AeronCluster . java to disable exclusive operations during cluster operations
hbase - 1749 add hbase . ioengine and hfile . block . cache . keys configuration to hbase storage handler (
added a private variable ` runningRecordCount ` and methods to track the number of records in a file to improve clarity and maintainability of
added filtering logic for out year items in mergedItems to improve user experience by preventing duplicate items from being processed
updated drawing color in CacheableTextView , CellLayout , and HolographicOutlineHelper to use 0 instead of 0x00000000 to
added OpenGL version check and exception handling in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering
added actioncontext . setcontext ( invocation . getinvocationcontext ( ) ) and set it to null in BackgroundProcess . java to ensure
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database name and default database name handling to improve database
added connection timeout configuration to TestConnections . java and changed the count variable from ` AtomicInteger ` to ` final ` in StubConnection . java to
added multiple assertions to test cases for the approx _ percentile function in TestHiveAggregationQueries . java to ensure correct handling of percentile results in
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . ofSeconds ( 30 ) and refactored timeout handling in WebSocketChannel
updated the retrieval of shares to use the user ' s platform account instead of the account object to ensure the correct account is used for sharing files
updated generic type declarations in Inet6Address . java for improved type safety to enhance code clarity and maintainability by using generics
refactor PlaybackControlView to replace enableView method with setButtonEnabled method for clarity to improve code readability and maintainability by
updated session ID handling in Session . java and Token . java to use long sessionID instead of Session object to improve code clarity and ensure correct
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
change default useexceptionprobability from true to ___ _
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and M3HCT to improve visual
remove updatebyprimarykeyselective ( ) method from userdirectory .
added " centre " alias to the aliases list in Middle . java to support additional centre aliases in the application
added dependency injection for DirectUpload in CommonsApplicationComponent . java and made DirectUpload class public in DirectUpload . java to enable dependency injection
added space adjustments for left and right axis dimensions in BarChartActivity and BarLineChartBase classes to ensure proper layout adjustments for chart
added support for Java ABI class and source ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance compatibility with Java ABI
added operation event status handling in OnlineHubService and initialized services in CompositeLogService to improve event management and ensure proper initialization of services
added annotation logging and visibility handling in DexAnnotation . java to enhance debugging capabilities for method parameters
jmsio : rename @ startbundle and @ finishbundle to @ setup and remove try / catch
refactor ProcessBuilder initialization to use a temporary variable for classpath to improve code readability and maintainability
updated the resource loading path in PackageResourceLoader . java to ensure the correct directory path is used for resource loading
[ hotfix ] [ dataset ] remove unnecessary ' this ' reference in dataset
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to a known issue
added escapePercent to error message formatting in ShouldHaveMessage . java and created a corresponding test in ShouldHaveMessage _ create _ Test . java
fixed - jcache . close ( ) method do n ' t work correctly with jcache . close ( )
reduce log level of exception when closing command context
added a conditional block to initialize ALPNClientConnectionFactory in HTTP2Client . java to ensure proper initialization of ALPNClientConnectionFactory
fix entitypropertiespacket . getbasevalue ( ) to use instance . getbasevalue ( ) .
use thinghandlerhelper . isinitialized ( ) instead of thingstatus . online in sonos audio sink
updated countDownLatch . await ( 500L , TimeUnit . MILLISECONDS ) to countDownLatch . await ( 5 , TimeUnit . SECONDS ) in
changed log level from info to debug in LightThingHandler . java to provide more informative logging for unsupported effect light types
fix ( core ) : add db . properties to syncqueuemanagerimpl and asyncjobmanagerimpl
updated the ` Reporter ` and ` ReturnsSmartNulls ` classes to include an additional ` Object ` parameter for better error handling to enhance clarity
refactor variable name from ' dataFrame ' to ' DataFrame ' for consistency to improve code readability and maintainability
updated multiple package - info . java and module - info . java files for consistency and clarity to improve code readability and maintainability
added a check for empty physical column names in OrcPageSourceFactory and implemented a test for empty file handling in TestHiveFileFormats
added a call to ` methCla . mixPlay ( input , amp ) ` in ` Engine . java ` to enable mixing of
refactor JComponent and SynthTextPaneUI classes to improve code organization to enhance maintainability and readability of the code
corrected the calculation in FinderPatternFinder and updated test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase
simplified the condition for determining the presence of leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability by
corrected a typo in the method name from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUse
add support for ` ` find ' ' , ` ` find ' ' , ` ` findall ' ' and ` ` findall ' '
updated sampleRate handling in DefaultAudioSink to use a dynamic value based on format ' s sampleRate to ensure accurate channel count for E - AC3
added a new method ` getFormula ( ) ` and ` setFormula ( String formulaText ) ` to the ` XSSFName `
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to ensure the target
updated condition to check for length of constraints in SimpleTypeGT . java and added a new test case in GMLParserTest . java to
added a new test class ClassPathXmlJobRegistryContextTests to validate job location in Spring Batch configuration to ensure proper execution of the job registry
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 - camel - restlet : deprecate consumer option in favor of advanced
[ hotfix ] [ log ] remove unused showout method from logendpointbuilder
refactor event submission logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating metadata
added a check to prevent adding orders when the status is not CANCELED or REJECTED to the limitOrders list to ensure that only
updated pixel offset calculations and added pixel type validation in BufferedImage and LCMSImageLayout classes to improve image layout accuracy and ensure accurate image processing
updated timestamp handling in Event . java and modified ruby _ timestamp method in JrubyTimestampExtLibrary . java to improve consistency and clarity in
added a check in ContextHandler to return a resource if the path ends with " / " and implemented a test for real path existence in WebApp
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
refactor scroll handling logic in JEditTextArea to improve clarity and functionality to enhance code readability and maintainability by using a more
added null checks for guardsStage and stageFlags before setting them in GraphDecoder . java to ensure that guardsStage and stageFlags are
test : migrate sniper to junit 5
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added Entity annotations to the Mail class to enable entity management for the mail class
updated default values for " includeTablespace " and " includeTablespace " from " false " to " true " in Main . java to
added methods ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` to ` CountersReader ` to provide access to the buffer for
added a boolean flag to track non - empty files in ScanBatch and implemented a test for handling empty JSON directories in TestJsonReader to ensure
updated failure handling in StringSubject to include internal custom name and modified assertions in StringTest to improve clarity of failure messages for better debugging and
added a regex pattern to match library names in LibUtils . java to improve flexibility in checking if the library name matches
changed catch blocks from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to improve error handling
hbase - 2248 masterfilesystem should wait for fs safe mode before write to disk .
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception class name and message to improve clarity of error
maven plugin cache : remove unused method from defaultplugincache . getplugindescriptor ( )
fix a nullpointerexception in operationsetpersistentpresencejabberimpl . updatecontactstatus ( )
refactored the ` withResourceAndParams ` method in ` ResourceMethodTest ` to remove dependency on ` ServletRequestDetails ` to streamline
added a new integration test class for fetching account information from BTCEExchange to ensure correct retrieval of account information from BTCEExchange
added mouseWheel method to VDUInput and vt320 classes and updated TerminalView to utilize this new functionality to enhance mouse event handling
refactor library path handling in Natives . java to use a variable for clarity to improve code readability and maintainability by reducing
remove @ columnhstore and deprecate @ columnhstore in favor of @ columnhstore
add player skin flag to metadata index ( # 11919 )
replaced RequestFieldMatcher with SLF4J Logger for master URL retrieval in LoadBalancerWithServiceTests . java to improve test reliability and
fix npe in mapservice when entry event get not null .
replace System . getProperty ( " os . version " ) with AccessController . doPrivileged ( new GetPropertyAction ( " os . version " ) )
updated file suffix handling in TemplateEngineFreemarker . java to use a configuration property instead of a setter method to improve flexibility
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback for animations in ToolbarPanel . java to improve animation responsiveness during layout transitions
replaced EasyBind ' s bindConditionally with EasyBind ' s when method for caret column property binding to improve code clarity and ensure
added declaredPlatforms field and updated related methods in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription
updated ` JpaCountQueryCreator ` , ` JpaQueryExecution ` , and ` PartTreeJpaQuery ` to use ` Parameter
added null check for passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and created a test for default value arrays in DataUtilitiesTest to ensure correct handling of array types
added a null check for the address and modified the SSL engine creation logic to improve robustness by avoiding potential NullPointerExceptions when address is null
updated assertions in TestFSTableDescriptors to use assertTrue for cache hits to ensure that the cache hits count is less than or equal to
simonstewart : remove unneeded delete cookie method from ie driver
added a new boolean variable ` mHasEndedLauncherTransition ` and modified the logic in ` AbsSwipeUpHandler ` and ` Recent
added ` < meta charset = " utf - 8 " / > ` to the HTML structure in ` HTMLListWriter ` and ` HTMLWriter
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
updated MAX _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator handling in multiple files to
reformatted the addition of the arrowButton to the comboBox in BasicComboBoxUI . java and created a new class bug6337518
refactor TestRandomAccessBuffer class for improved performance to enhance performance and maintainability of the code
refactor UserInfoActivity class to improve code readability to enhance maintainability and facilitate future updates
added HomeContentProvider import and updated broadcast notification in multiple services to ensure proper handling of content URIs in the application
added functionality to manage the state of the pressed or focused background in BubbleTextView and Launcher classes to improve user experience by ensuring proper
updated ` getFallbackResponse ` method to include ` Throwable error ` as a parameter across multiple classes to enhance response handling by providing additional context for
removed the condition checking for ` env . _ compile _ only ` in the ` DumpBytecode ` class to simplify the code by elimin
added null checks before accessing tags in ChannelUri . java to avoid potential NullPointerExceptions during tag retrieval
updated JAVA _ REGEX _ SPECIALS regex pattern and modified test method names in TestSqlPatterns to improve regex matching functionality and clarify test
added a constant for the action bar title and updated its value in FileActivity and updated FileDisplayActivity to ensure the action bar title is updated
updated type retrieval from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java
updated the schedule duration from " * " to " 0 " in CleaningService . java to improve clarity and correctness of the scheduled
updated TransactionalValidationListener to handle partitioned tables and improved table path validation to enhance the validation process for partitioned tables and enhance error handling
added a polling option to the SnapPuller class to enable polling functionality in the replication process
updated ` generatedKey ` type from ` int ` to ` long ` and modified SQL execution to use ` scrubbedSQL ` to enhance
simplified the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in multiple Java files to reflect " failed to inline " instead of " not inline " to improve clarity and accuracy of error
updated keepAliveTimeoutShared and keepAliveTimeoutCustom parameters and added null checks for endpoint and stop timeout in WebClientFactoryImpl . java to improve thread
deleted the HttpTestAccount001 . java file to remove unused tests to streamline the codebase
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified test assertions in ` DispatcherTest . java `
camel - 1748 : camel - cxf - fix the issue that camel - cxf do n ' t work with cxf message
added a case for the ' ~ ' character in ClientUtils . java to handle additional characters in the client configuration
camel - 16718 : camel - slack : allow to specify the delay for consumer to be use in camel - slack
change blockutil . getblockdropped to return itemstack instead of block . getblockdropped .
updated the layout parameters for the encodedAudioPassthrough checkbox in TranscodingTab . java to correct the layout size and add a space for
added a new file ` bug8057791 . java ` that implements a GUI interface with a custom list model and color selection to implement
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java with a static field in TestLambda
updated SubscriptionManager and WebSocketMethodsFactory initialization in RunnerBuilder . java and added a new test for EthSubscribeAvailable in RunnerBuilderTest .
replaced the length check with a null check for the ' to ' variable to improve code clarity and prevent potential NullPointerExceptions
added a conditional logic to handle dictionary usage in ParquetFixedWidthDictionaryReaders and created a test for it in TestColumnReaderFactory to ensure
refactor layout handling in PortraitPagedViewHandler to differentiate between landscape and vertically apps to improve layout responsiveness
added a new annotation class ` Log ` and ` LogInterceptor ` in the ` TestController ` to facilitate logging functionality in Spring
updated the dump string format in QueuedThreadPool . java to include a null check for trace elements to improve clarity of thread IDLE information
updated method signatures and variable types in CacheGenerator , CacheProvider , and CacheSpec classes to include an implementation parameter to enhance flexibility in handling
added totalFrameSize parameter to createReferenceMap method to include totalFrameSize in the reference map creation
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future updates
added camel - graphql - karaf integration test for camel - jbang
added two static methods ` bug1 ( ) ` , ` bug2 ( ) ` , and ` bug3 ( ) ` to ` R
removed URL encoding for keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating
replaced the implementation of ` unsupportedPlatformTool ` with a new class ` UnsupportedPlatformTool ` to improve code clarity and maintainability by
changed the type of loopCount from double to int and updated log message formatting to improve code clarity and maintainability by using a more d
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
( chore ) camel - jbang - address - manager : use random in test
updated column specifications and layout specifications in VLCVideo . java to enhance layout consistency and improve user interface responsiveness
update bisq link to bitsquare in multiple Java files to ensure compatibility with the new package structure
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory handling and improved file existence checks in MBoot . java to enhance flexibility in managing user configuration and repository paths
added a call to glBindBuffer on GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure proper buffer binding for
refactor ServerHttpSecurity class for improved security handling to enhance security features and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not running
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration to enable customizable HTTP headers in the HTTP client configuration
added userpasswordnotvalidexception and thingsboardcredentialsviolationresponse for user password validation
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
replaced Codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve code readability and maintainability by using a more
replaced ` CascadedStyle ` with ` constants . CSSName ` and added checks for ` float _ val ` in ` FloatUtil
optaplanner - 1369 add miss import to planningfactproperty and planningscore
updated RestUtils to use MultiMap instead of CaseInsensitiveHeaders and modified getDefaultHeaders method to improve handling of default headers in the RestUtils class
rename ` ` enc ' ' to ` ` charset ' ' across multiple classes to improve clarity and consistency in naming conventions
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use ` Long . compareTo ` instead of ` Long . valueOf ` to
changed log level from error to debug in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging level for HTTP response processing
updated import statements in LegacyAuthenticationHandlerAdapter . java to include specific authentication handlers to streamline imports for better clarity and maintainability
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
added null check for filter property before removing it from the network to prevent potential NullPointerExceptions during filter removal
moved the wrap method from PGPKeyRing to BCPGInputStream to streamline code and improve readability by centralizing the wrap method
replaced DataOutputStream with BufferedOutputStream and added a try - finally block for flushing and closing the DataOutputStream to ensure proper resource management and prevent potential memory leak
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest class to improve code readability to enhance maintainability and facilitate future updates
change the import statement from ` org . gwtproject . core . GWT ` to ` com . google . gwt . core . client
added a check for ` sourceTask ` type before initializing ` counters ` in ` CounterStatsAggregator . java ` to ensure proper handling of task
reformatted the assignment of the _ readListener variable to improve code readability and maintainability
refactor color change handling in AppearancePanel to use ColorSelectionModel for improved clarity to enhance code readability and maintainability by
updated the constructor parameters in TaskHelper to use ' hidden ' instead of ' false ' to ensure proper handling of the ' hidden ' state for
http : / / issues . apache . org / jira / browse / amq - 4892 - fix intermittent test
pdfbox - 4071 : fix resource leak in createfromfile ( )
added import statement for DefaultParameterHandler in LanguageDriver . java to enable custom parameter handling in the scripting framework
added a loop depth check before setting the Spill state in LinearScanWalker . java to ensure spill state is set based on the loop
add a new file MicronautAstBuilder . java that implements a compilation method for multiple AST nodes to facilitate testing of
make pgresultset . close ( ) volatile and add test for executeTwice ( )
set ` serviceAdvisorType ` to ` ServiceAdvisorType . PYTHON ` in ` ServiceInfo . java ` to ensure the service ad
refactor resolver handling in GenericDatumReader to use ThreadLocal for better thread safety to improve thread safety and maintainability of resolver management
changed the parameter type of the ` Path ` constructor from ` Collection ` to ` List ` and updated return values in ` PdfContentStreamProcessor
updated assertions in SendCoinShieldTest to use a random byte array instead of creating new byte arrays to improve code readability and maintainability
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to provide a way to set the personal
removed unnecessary whitespace in CodeGenerator . java to improve code readability and maintainability
removed the ` Direction ` parameter from the ` scroll ` method calls in multiple Java files to simplify the method signature and improve code readability
changed the visibility of the pointer variable from private to public and added reset methods to improve accessibility and encapsulation of the pointer variable
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
simplified import statements and modified type handling in CastExpression . java to improve code readability and maintainability by using a wildcard import
updated the handling of the ' accepts ' variable to use a boolean flag for better clarity to improve code readability and maintainability by redu
added a new boolean variable ` false ` to ` TaskView . java ` to control the behavior of the task view functionality
added a method ` isAutoIncrement ( ) ` to ` LiquibaseDataType ` and overridden it in ` LiquibaseDataType `
set default value of errorText to " Command failed due to Internal Server Error " to improve error handling by providing a clearer error message for
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for improved JVM options to enhance
replaced ` add ( currentStatus ) ` and ` toSimulate . add ( boosterStatus ) ` with ` push ( currentStatus
added AJP connector setup and configuration for the AJP port in GitBlitServer . java to enable dynamic configuration of the AJP connector
added type coercion handling for intersection types in TransTypes . java and created a new Intersection03 . java file for testing to ensure
rename EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method to start the toolkit thread in WToolkit . java to ensure the toolkit thread is only started if it is
[ gr - 13946 ] bundlecontentsubstitutedLocalizationSupport should compress the bundle in parallel .
do n ' t hide the surface if the opengl do n ' t support it
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added support for enabling HTTP services for fullNode and solidityNode in the CommonParameter and Args classes to enable or disable HTTP services based
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and modified the ticket counting logic in ` GoogleCloudFirestoreTicket
refactor Generate class to improve code readability to enhance maintainability and facilitate future updates
added null handling tests for JSON format functions in JsonFunctionsTest . java and ScalarFunction . java to ensure correct handling of null arguments in JSON
added a constant for DOTS _ ONLY and updated width calculation logic in BadgeRenderer . java , modified icon and alpha values in IconPalette
removed the ` final ` modifier from the ` getConfiguration ` method in the ` FreemarkerManager ` class to simplify the method signature
added a test method to validate exclusion of package names in OgnlUtil to ensure proper handling of invalid package names in the Ognl
updated deviceUdid assignment logic to handle macOS platforms in AppleTest . java and added SDK name handling in IdbRunTestsStep
updated error logging from error to warn in DefaultHttpClientFilter and modified test cases in TestDefaultHttpClientFilter to improve logging clarity and ensure correct
added checks for mScript and mInvokeResetWAR before executing execution in AllAppsView . java to improve code clarity and ensure proper execution
added a new boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layer to
added teardown methods for dropping tables and views in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of tables and views during
added a line to retrieve a parser from the configuration in SecurityNamespaceHandler . java to improve code readability and maintainability by reducing unnecessary
updated conditional check in BoundedLocalCache and added a new test method in BoundedLocalCacheTest to improve code readability and ensure correct
refactor RawConnection to extend WebSocketConnection and add complete and flush methods to improve WebSocket connection management and enhance asynchronous frame writing functionality
added new test methods for asserting assertions in SoftAssertionsPerfTest . java to enhance test coverage for various assertions in SoftAssertionsPerf
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` execute ` method in ` PythonRunTestsStep `
added a conditional check for markupEnabled before processing text elements in GlyphLayout . java to ensure proper processing of text elements when markupEnabled is enabled
refactor score document assertions in TestBooleanRewrites . java to use streams for improved readability and accuracy to enhance code clarity and
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure proper handling of anonymous
remove unnecessary type check for player socket connection
added a check to prevent unnecessary removal of OnDrawListener in Launcher and LauncherAnimUtils classes to ensure that the draw listener is only
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated import statements in ReplicaAssigner . java to use wildcard imports and added a condition to check for not _ APPLICABLE match status to
updated the return value of the ` getBoolean ` method from false to true for the ` MEDIAPARSERV2 ` feature to enable the
added support for AROUND _ TYPE annotation in the BeanDefinitionInjectProcessor to ensure proper handling of method interceptor types in the annotation processing
added assertions to verify the existence and permission of a table and partition in FolderPermissionBase . java to ensure that the table and partition operations are
do n ' t publish status for provider in wrong state .
updated the random value calculation in PastelColor . java to use a constant for the color base to improve code readability and maintainability
refactor ScriptEngineFactory class to improve code readability to enhance maintainability and facilitate future updates
refactor HolographicViewHelper to create original and outline bitmaps using a dedicated method to improve code readability and maintainability by
added checks for unsupported request methods in CloudClient . java to ensure proper handling of unsupported HTTP methods and improve error logging
improve multiveliteralpreprocessor . gettag ( ) to work with phrase .
removed unnecessary import of IOException in IOChannelUtilsTest . java to streamline code by eliminating unnecessary dependencies
updated class loading logic in mmm Table . java and ppp Table . java to handle both HivePassThroughOutputFormat and HivePassThrough
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a boundary check for the length parameter in the DOMBuilder class to ensure that the length validation does not exceed the expected length and prevent potential
updated the logic for determining hierarchical directed graph visibility and modified edge retrieval in EigenvectorCentrality , DiameterUI , and H
camel - 16718 - camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to facilitate testing of
camel - 1748 : camel - defaultkeyselector should use camelcontextaware to resolve property placeholder .
replaced multiple instances of ` t instanceof ` with ` ThreadDeath ` in LogResolverBean . java and ResourceResolverBean . java to
refactor multiple security - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and added sorting
updated client key assignment logic in HttpClientIntroductionAdvice . java to ensure correct client key is used based on the presence of the
added transformerparser , testbean , and methodinvokingtransformer to test the behavior of the transformer .
replaced BACK _ FACTOR with REWIND _ TIME and updated related conditions in ResumeObj . java to improve code clarity and ensure
added isScrollWheeling ( ) method to CodenameOneImplementation and JavaSEPort classes , and modified Button and JavaSEPort
updated usage string formatting in UtilityCommands . java and modified command permission annotation handling in DocumentationPrinter . java to enhance code readability and ensure proper
corrected the spelling of " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
updated method names from ` setSeqFiles ` and ` setUnseqFiles ` to ` setSeqFiles ` and ` setUnseqFiles
removed duplicate @ Override annotations in Observation . java to streamline code and improve readability
updated the logic for updating the projet ruleset and improved logging messages in ProjectPropertiesModelImpl . java to enhance clarity and maintainability of
fix race condition in abstractsootfieldref . getfieldunsafe ( ) .
[ micrometer ] add support for custom name convention in elastic meter registry
updated IController and TinyGController to use IController instead of AbstractController and IController to enhance controller functionality and enhance functionality for better
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure the rendering of the horizontal rule with
replaced System . out . println statements with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve
refactor multiple Java classes to improve code organization and clarity to enhance maintainability and readability of the codebase
changed the condition from checking if frameLength is zero to checking if frameLength is less than or equal to zero to ensure that frameLength is
updated return values in IntFloatMap and IntIntMap to return default values instead of zeroValue to ensure correct handling of zero values in the
refactor image handling in ImageDownloadService to use a serially execution for setting icon and background images to improve code readability and maintainability
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when registered is null
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` ElementNode ` classes , and
fixed - npe in redisdistributedmapcacheclientservice . getallresults ( ) when result be null
updated logging statements in MobFileCache . java to include cache size and evictPeriods , and evictRemainRatio to improve clarity of
refactor ColConvCCMTest class to improve code readability to enhance maintainability and readability of the test code
refactor code to introduce ` allowCovariantReturns ` and introduce ` syntheticNameChar ` for improved clarity to enhance read
pdfbox - 4071 : add some generic type to pdftextstripperbyarea and pdftextstripperbyarea
updated JSON conversion method to use ` asString ( ) ` instead of ` Float . toString ( ) ` and added a new class ` X `
camel - 13946 : camel - core - optimize to avoid deadlock in camel - core
added a Runnable invocation in EventQueue . invokeLater for thread safety to ensure thread safety during execution
updated the method call from getMaxBinaryMessageBufferSize ( ) to getMaxBinaryMessageSize ( ) in CompressExtension . java to correct the calculation of
update steeringValue calculations in multiple test classes to correct the positioning of steering values to ensure correctness of steering
replaced ` Arrays ` with ` MessageDigest ` for comparison in ` PasswordEncryptionService . java ` to improve code readability and maintainability by
updated date and timestamp handling in JdbcSerDe to use local date and timezone to improve accuracy of date and timestamp representation in SQL data processing
update version from 2 to 3 and modify metadata handling in ParseData . java to ensure compatibility with newer versioning
refactor FlywayAutoConfiguration to use conditional bean configurations and add a new test for custom flyway with JPA to enhance flexibility
added sorting functionality to the ClassesImpl class to ensure that the classes are sorted before processing
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and modified state retrieval in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor TestCloseScope0 to improve memory scope retrieval based on version to enhance compatibility with newer Java versions
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to improve test reliability by allowing more time for
rename CaptchaChannelProcessorTests . java file to improve clarity and consistency in naming conventions
added a condition to update items based on the owner collection in MetadataImport . java to ensure that items are updated correctly based on the owner collection
added a retry mechanism for saving registry cache properties in AbstractRegistry . java to ensure that the cache file cannot be saved after a maximum number of
updated the variable name from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper ` to improve clarity and consistency in variable
fixed bug 119047 - unusedimports no long report in rule .
added validation for insert overwrite queries in HiveIcebergStorageHandler and implemented a method to check if the table is bucketed to ensure that
updated assertions in BootstrapTests to check for legacy SAML keys to ensure that the legacy SAML keys are available for testing purposes
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java `
remove synchronize keyword from mailmodel . getaddressvector ( )
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added a new exception class ` LockReleaseFailedException ` and modified the ` release ( ) ` method to throw it to improve error handling and provide
changed the package of ` DataSourceInitializer ` from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to
added a conditional check for unary operators in SpelExpressionTransformer and removed unused imports in LiteralNode , LiteralNode , and OperatorNode classes to
added TypeValidation . DISABLED to ByteBuddy instantiation in MockBytecodeGenerator . java to ensure that the byteBuddy instance is disabled
replaced ` DeclaredType ` with ` TypeElement ` in the ` JavacRoundEnvironment ` and ` BuriedAnnotations ` classes
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and updated timeout values in MySQL
updated the ` setSystemProperties ` method to remove the ` LogFile ` parameter and added null checks before applying system properties to simplify the method
added a method to check if a redirect status code is received and modified the request method to handle redirects more effectively to improve handling of HTTP redirects
added SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING constants to ServiceCombConstants and modified MicroserviceFactory to handle environment configuration to
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to be static and modified database handling in BaseAndroidTestCase . java and GeocodeHelperTest . java to
update return statement to use getUnreadCount method from HomeDataSource to retrieve unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and introduced a new constant for maximum market count in Parameter to
added null check for the user before retrieving user settings in HomePage . java to avoid potential NullPointerExceptions when retrieving user settings
updated LocalFileSystem to use getAbsoluteFile ( ) instead of getAbsoluteFile ( ) and added a new test for matching relative wildcard paths to ensure correct
added MAX _ WIDTH and MAX _ HEIGHT constants to limit the bounds of the instance to a maximum of 10000 to ensure that the component bounds
added logging functionality and a deprecated method for setting the connection manager timeout in CommonsHttpSolrServer . java to enhance debugging capabilities by providing a
added exception handling for document creation failures in PrintController . java to improve error reporting for document creation failures
replaced ` Optional . of ( ) ` with ` Optional . map ( f - > f . map ( f - > f . map
added methods to check if a word is empty or is a number in SpellChecker . java and a corresponding test in SpellCheckerTest
corrected the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
refactor file action handling in FileDisplayActivity by introducing a method to retrieve the OCFileListFragment to improve code readability and maintain
added a daemon flag to ReplicationHandler and improved error handling in SnapPuller to ensure proper shutdown of the puller and handle exceptions
reformatted the update method call in StoreCachedTest . java to improve code readability and maintainability
renamed the parameter ` materials ` to ` theMaterials ` in the ` StreamerLoader ` constructor and added a check for ` rock
added " Core Library " and " Controller / Gamepad API " entries to the DependencyBank . java file to improve clarity and organization of
added maximum recycling of view types to the RecyclerView ' s pool in AppsContainerRecyclerView . java to enhance user experience by
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure proper build and clean
fix a bug in ExampleBaritoneControl and add a waypoint location to the world cache .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enable proper handling of parsed nodes and resource
added null handling support in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance filtering functionality and ensure correct handling of null values
updated validation checks for bootstrap method arguments in JDynamicInvokeExpr . java to ensure only valid argument types are provided to prevent runtime errors
increase test port to avoid intermittent failure
remove clearing of runtime options in CucumberInstrumentation . java to streamline code by eliminating unnecessary lines
updated ` AbstractRegisteredService ` to use ` DefaultRegisteredServiceContact ` instead of ` RegisteredServiceContact ` and improved type casting for contacts
added a conditional check to adjust workspace labels based on cell size and icon size to ensure that workspace labels are only displayed when they are within the
updated assertions in ReplicationFactorTest to use a new method for consistency and clarity to improve code readability and maintainability by using a more
llvm : handle pre - initialization in patchcontext ( ) and patchcontext ( ) .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest .
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using JsonIOException instead of RuntimeException
replaced Integer . valueOf ( values [ 0 ] ) with Integer . parseInt ( values [ 0 ] ) in VisualScoreTagTest . java
updated error messages and changed file tree walking parameters to use Integer . MAX _ VALUE instead of - 1 to improve clarity of error messages
refactor segment name checks to use a new helper method ` isHighLevelConsumerSegmentName ` to improve code readability and maintainability by
added methods to start activities , startActivityForResult , and startActivityForResult in ShadowFragment and corresponding tests in FragmentTest to ensure proper
updated the method to return the current time instead of the current time to ensure accurate date representation by using the current time from the clock reader
added " - target " and " x86 _ 64 - none - linux - android " to the ImmutableList in TargetCpuType . java to
added a method to delete all files for a specified account in ` ManageAccountsActivity ` and implemented it in ` FileDataStorageManager ` to
updated command - line argument formatting in SchemaCrawlerCommandLine . java to enhance readability and maintainability of command - line help output
added a new method ` createSuiteDescription ` to create a description with a unique ID and improved null handling in the ` Description ` class
replaced the decoding method with a call to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code by directly using
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and its usage across multiple files to simplify the constructor
added unit tests for range pasting in GWCZoomContextFinderTest . java to ensure correct behavior of range pasting in ZC
added a new configuration key for dependency tracking in JRubyScriptEngineConfiguration and integrated it into JRubyScriptEngineFactory to enhance dependency tracking functionality
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
do n ' t attempt to create a keyspace if it already exist
improve welcomewindow performance by cache image
updated tuner configuration handling and modified buffer resubmission logic in TunerManager , RTL2832TunerController , and R8
added HasTests interface to AbstractShBinaryDescriptionArg and created a test for sh _ binary with test in ShBinaryRuleIntegrationTest to ensure
added a condition to include the " db : hsqldb " prefix in TestFilter . java to ensure proper handling of database schema in the
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintainability
truffle : do n ' t call materializehostexception when there be no stack trace
[ gr - 4892 ] export the jvmci provider to the service if available .
add unit test for duplicate command handler resolution
[ flink - 20865 ] [ runtime ] add support for fine - grained resource management in batch job
fix fish not be able to use fish block in the block . close # 375
[ doc ] fix checkstyle violation in camel - ftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename the ` useShortNames ` variable to ` compressPackageNames ` in the ` GangliaReporter ` class to improve clarity
added a check for empty items in AppsContainerRecyclerView to prevent processing when no items are available
added a conditional bean definition for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the bean is
refactor XMLLayout to use StringBuilder instead of StringBuffer and introduce properties management to enhance performance and maintainability of the XMLLayout class
added support for an " omitHeader " parameter in multiple response writer classes to enhance response handling by allowing an optional " responseHeader " parameter
updated property retrieval method to use getPropertyNumber ( ) instead of _ id in EscherProperty . java and added unit tests in TestEscher
updated return statement to use Description . getBuildRuleType for clarity to improve code readability and maintainability
add a call to modifyhierarchy ( ) in sootclass so that it do n ' t modify the scene .
fix possible npe in tradedatavalidation . testdisputeattemptsreplay
added a new method ` getObjectHash ( ) ` to ` AbstractNamedObject ` and modified ` DatabaseSchemaCrawler ` and ` TableRetriever `
wallet : set transaction confidence type not _ seed _ in _ chain to not _ seed _ in _ chain
refactor HttpClientIntroductionAdvice to check for header annotation before processing arguments to improve clarity and maintainability of argument handling logic
fix craftinghelper . processconditions ( ) for json file
hbase - 2247 close region in case of exception
refactor comparison logic in Credential . java to use a local variable for length checks to improve code readability and maintainability by reducing unnecessary
[ java ] remove redundant check for subscription image in client conductor .
replaced reflection - based process destruction with a direct call to process . destroyForcibly to simplify the process destruction process
added a check for Oracle in the conditional statement to ensure compatibility with Oracle databases in the test cases
camel - 1748 : fix the npe when the mail store be not connect to the mail store .
added logic to check if there are more tokens in the query and throw a ParseCancellationException if there are more tokens in the query to
camel - aws2 - translate : list all the available language in the enum
added a method to retrieve the data file name and modified the model initialization logic in Voice . java to improve data file handling and ensure correct model
added emailDomain field and its getter and setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable users to set and retrieve the email
added configuration parameters for request read and connection timeouts in Configuration . java and updated ViewRegistry . java to use these defaults to enhance flexibility in
do n ' t process deferred concept if there be no concept link to save
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests to enhance test coverage for Redis service functionality
updated the ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` classes to use parameterized tests for type pattern handling to improve test coverage and
added a call to the superclass ' s paintComponent method in WaterfallPanel . java and modified the parameter in OverlayPanel . java to
removed unused imports from multiple configuration classes to improve code clarity and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule , ContractEventTrigger , LogEventWrapper , and LogEventTriggerCapsule classes to improve
updated filter condition from ` contains ` to ` endsWith ` in ` FileTestHelper . java ` to ensure that the file name does not contain
replaced ` clearRect ` with ` fillRect ` and set the background color in ` MapView . java ` to ensure proper rendering of
refactor the compilation logic in PackageBuilder . java to include an else block to improve code readability and maintainability
removed unnecessary print statements from multiple Java files to improve code readability and maintainability
added a conditional check for NaN score before asserting the document in TestFieldCacheSort . java to ensure that the document is only asserted
replaced direct assignment of oldKeys with a copy of the deviceProfile ' s entity keys to ensure the oldKeys is immutable and prevent potential
added checks for zero - time values in ColumnSnapshotGenerator and created a test for date default value in MySQLIntegrationTest to ensure proper handling of
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
replaced ` Map ` with ` Map < ? , ? > ` for ` vsContext ` in multiple collector classes to improve type safety and
[ drools - 1357 ] fix the bug of ksessionmodel . getclocktype ( ) in multikbases example
updated HiveMetaStoreClient initialization to use ' this . conf ' instead of ' conf ' to improve clarity and maintainability of the client
added a conditional check to return early if mModalness equals modalness to prevent unnecessary processing when modalness changes
added a test method ` createFromProfileLevel ` to ` ShadowMediaCodecListTest ` and implemented native _ getGlobalSettings method in ` ShadowMedia
fix # 5460 : do n ' t request focus when enter key use
added input validation for width and height in SunVolatileImage and implemented error handling for OutOfMemoryError in X11SurfaceDataProxy and X
updated the thousands separator in FormatData _ uk . java from a dot to an UTF - 8 character to ensure proper formatting of thousands
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] _ loops ` in ` AsyncStressTest . java ` and `
added beta flavor handling and toast messages in AchievementsFragment and LeaderboardFragment to enhance user experience by providing clearer feedback when beta
added access , name , and desc properties to the SearchMethodVisitor class to enhance search functionality by providing access and name / desc information
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and handled InterruptedException in IoTDBInsertWithoutTimeIT . java to ensure proper
reformatted code in DLNAResource . java for consistency to improve readability and maintainability of the code
[ java ] remove the ` ` batch - config ' ' and ` ` stream - config ' ' xml root element .
refactor transaction management methods in TableReader and improve error handling in TableReaderTxnScoreboardInteractionTest to enhance clarity and maintainability of
refactor key manager algorithm retrieval into a separate method in ThriftSource and ThriftRpcClient to improve code readability and maintainability by centralizing
refactor getSingleSourceApplicableTest method to use Applicability . or instead of JavaIsoVisitor to improve code readability and maintainability by
added a exit ( ) call in Blockmania . java and modified key event handling in Blockmania . java to ensure proper exit behavior
replace references to AccessSpecifier . PACKAGE _ PRIVATE with AccessSpecifier . NONE across multiple files to standardize the access specifier functionality across the codebase
renamed the method ` unHandled ` to ` unhandled ` and introduced a new class ` T6199153 ` to improve clarity and
refactor stripes and stripeStats assignment logic in OrcInputFormat . java to improve clarity and maintainability of the code
added a null check for the exception in JCache . java to avoid potential NullPointerExceptions during execution
updated URLs in MyhentaicomicsRipper . java from " http : / / myhentaicomics . com
added command - line argument handling for the ' v ' option in App . java to provide functionality for displaying the current JAR version in the application
pdfbox - 4071 : use splittoken ( ) instead of split ( ) for export list
added support for default rotation settings in ConsoleActivity and implemented input connection handling in TerminalView to improve user experience by adjusting rotation settings based on
updated the type of the PriorityQueue from HitQueue to PriorityQueue < ScoreDoc > to ensure type safety and improve type safety
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 1774 : add the headermapfactory to the jmx component to help with the camel - jolokia
added an ' ' character to the closing brace in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1188 - add a parser for the outbound - gateway to allow to configure the jms queue and connection factory .
updated the index used in the expect method from ` i + 1 ` to ` i + 2 ` in ArrayFunctions . java to correct the
updated script engine handling in AbstractScriptProcessor and InvokeScriptedProcessor to improve error logging and ensure proper initialization of script engine
added ` org . postgresql . PGStatement ` to the ` PooledConnectionImpl ` and ` ConnectionPoolTest ` classes to support PostgreSQL
[ hotfix ] [ test ] add refresh size estimate to the bean proxy .
changed log level from error to warn in AtomicRemainder . java to clarify the severity of memory handling
added a new test for aggressive fully expiration in TTLExpiryTest . java and modified sorting logic in CompactionController . java to ensure
fixed - rblockingdeque / rblockingqueue . pollall ( ) and rblockingdeque . polllastasync ( ) method throw
removed unnecessary parameters from printMap calls in JobInspectCommand . java to simplify output formatting and improve code readability
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
replaced Stream . of with Stream . entrySet for improved clarity and efficiency to enhance code readability and maintainability by using a more
[ issue # 1188 ] fix the build error of aclclient ( # 1188 )
updated variable name from numIndexDims to numDataDims in BKDWriter . java to improve clarity and consistency in variable naming
do n ' t print stacktraces to stderr , if interpretergroup be null
updated the variable name from ' funN ' to ' lt ' in ExpressionNodeEvaluator . java to improve clarity and consistency in variable naming
changed access modifiers of methods in NodeIdAccessor from public to package - private to allow access to these methods from other classes
cloudstack - 4892 : improve error message when fail to create snapshot policy
changed access modifiers of several methods in ItemWriter from public to package - private to allow access to these methods from other classes
updated the ThingTypeUID in RoombaHandlerTest from an empty string to a test string to improve test coverage for the Roomba handler functionality
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to simplify directory management and improve code clarity
added a new static variable ` mLineHeight ` and modified its assignment logic in ` Utils . java ` to ensure that ` lineHeight `
refactor WalletAppKit class for improved clarity to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 4892 - remove unused parameter from oql
fix a bug in chattransportselectorbox where it be n ' t remove
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
make bsqblockchainexplorer optional to avoid npe
added attributes management methods to StandardSession and Session classes to enhance session management capabilities for better management of session attributes
added assertions to verify the presence of a plain bean name and along in TestDbJson _ List . java to ensure that the correct bean
updated the array initialization for averages in MonotonicAppendingLongBuffer . java to use initialPageCount instead of pageSize to ensure the correct
refactor BatchCommandLineLauncher class for improved clarity to enhance maintainability and readability of the code
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to support HSQL database integration in the application
changed the implementation of the GlowrootLogHttpService class from UnauthenticatedHttpService to HttpService to standardize the service implementation for better
pdfbox - 4071 : set graphics . getgraphicsstate ( ) . getgraphicsstate ( ) . getgraphicsstate ( ) . get
removed synchronization from ` notifyAll ( ) ` and ` close ( ) ` methods in ` DocumentsWriter ` and ` DocumentsWriterPer
added getter and setter methods for multiple choice options and validation constraints in UiBinding . java to enhance the flexibility of property management in the UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency and clarity to improve code readability and
added a fullSave flag to only update the stored tree for saving the whole tree to ensure that only updates the stored tree for a full save
refactor Affix and Dictionary classes to use a unified pattern list instead of a single String for the condition to improve performance and maintainability by
replaced explicit type parameters with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
added import for CharTermAttribute and retrieved its value from tokenStream in DefaultIndexingChain . java to streamline the code by eliminating
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the code
removed unsupported data encoding check in VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary validation
updated logging statements in HttpSolrCall . java for improved clarity and functionality to enhance code readability and maintainability by using the Marker
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy instances
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 10 for loop relation
refactor error message construction in HubChangeExecListener . java to handle null changelog ID to improve clarity and maintainability of the error message
improve error message when test case fail
updated method return types and result handling in CxxPreprocessAndCompileStep . java and added a new test in BuildReportIntegrationTest .
refactor event range handling in ObjectStore . java to improve clarity and maintainability of event processing logic
simplified the validation logic in ValidatedLocalValidatorFactoryBean to enhance code readability and maintainability by eliminating unnecessary checks
fix entityawareworldprovider . cleartemporaryblockentities ( ) to avoid concurrentmodificationexception
[ hotfix ] [ runtime ] remove unnecessary check for exact type in intrinsifiedarraycopyphase
[ java ] remove unnecessary logger set to log level .
removed the ` WantedAnywhereAfterFollowingInteraction ` class and replaced its usage with ` assertContains ` in multiple test files to
added validation checks for ownerAddress and key in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator to
scriptlauncher : use treemap instead of comparator to improve performance
chore ( regen ) : update ruby namespace for v2beta and v2beta
replaced ` _ metadataProperties . addProperty ` with ` _ metadataProperties . setProperty ` for setting properties in ` BaseSingleTreeBuilder . java `
updated AsmLibraryLoader to use interface class loader and added constructors in AsmLoader to improve class loading flexibility and ensure proper initialization of
pdfbox - 4071 : do n ' t try to decode a float array , a suggest by valerybokov
updated the export statement in Java2TypeScriptTranslator to conditionally include " declare " based on the ` isDefinitionScope ` flag to ensure
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to ensure proper handling of server requests in the HTTP client
updated listener parameters in HelloInput . java for action and analogListener to improve code readability and maintainability
[ hotfix ] fix npe in abstractsqipath . getlhs ( )
updated package structure for multiple test classes to improve code organization and maintainability
refactor BufferedImage creation and rendering logic in AwtCanvas . java to handle BYTE _ INDEXED type and improve image handling to enhance compatibility with
[ gr - 10720 ] add support for jvmci native image location qualifier in libgraal
removed unused DataflowPortabilityApiUnsupported class and adjusted timestamp calculation in ParDoTest . java to streamline code by eliminating unnecessary
updated response handling from remove ( ) to poll ( ) in MockPhishingProtectionServiceV1Beta1Impl . java to ensure
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility with updated serialization versions
refactor CallStack class to improve code readability to enhance maintainability and readability of the code
log warn if max size configuration for map do not allow any data in the map
corrected the spelling of " AST " to " LST " across multiple files to correct the spelling of " LST " to
refactor the calculation of ` scoreablesPerThread ` and ` nThreads ` in ` ThreadedAcousticScorer . java
replaced an AssertionError with a return null in NetHooks . java to ensure that the method returns null instead of throwing an exception
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLenium
added default ` makeString ` methods to multiple iterable classes to enhance string collection functionality for better performance
replaced the hardcoded order in OidcServicesManagerRegisteredServiceLocator with a static final constant to improve code readability and maintainability by
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related tests to enhance the
refactor Deflater class for improved performance to enhance performance and maintainability of the compression process
added a try - catch block to handle exceptions in Font . java to improve error handling by throwing an IOException when an exception occurs
added a null and empty check for content in VersionTypeBinding . java to ensure proper handling of empty content and avoid potential NullPointerExceptions
refactor NearbyListFragment to directly return the places list instead of using a local variable to improve code readability and maintainability by
convert the content type to lowercase before checking if it starts with " text " to ensure consistent content type handling across different formats
change ssh key format to be public so that it can be use .
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter indicating whether the folder name should be bind or not to enhance
replaced specific Hibernate annotations with a wildcard import and added JPA logging in InheritanceCacheTest . java to improve code readability and
updated import statements in ConnectOAuth2RequestFactory . java and added getUserApprovalRequest method in TofuUserApprovalHandler . java to ensure
fix name convention not apply to tag value ( # 645 )
improve error message when there be no resolution for marker .
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to ensure consistency in cookie handling
added a static method ` classMetadataUnsupported ` to the ` Platform ` class and updated its usage in the ` Subject ` class to improve code read
added a button and preference for clearing all actions in OverviewActionsView to enhance user experience by allowing users to control the visibility of all tasks
made ` desiredRepoVersion ` and ` actionContext ` final in ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider
remove memory leak test for nightly
updated the return statement in ServletTester . java to include the local host address to improve clarity of the return URL based on the local
added a check for MVDWAPI and updated the condition in ServerListener . java to ensure MVdWPlaceholderAPI is only used when
wait for cluster size before start node in abstractpartitionassignmentcorrectnesstest
refactor FFIProvider to use a singleton pattern for FFIProvider instantiation to improve flexibility in loading FFI providers based on JNA
tika - 1357 -- add test case for hierarchical w file list in batchprocess
added null checks for mongoPersistentEntity and updated idProperty assignment logic in MongoTemplate . java , along with corresponding test cases in MongoTemplateTests
updated Position instances to use NODE _ LIST instead of 0 for direct input and successor counts to ensure correct handling of node lists during processing
added an ` accTradeValue ` field and its getter method in ` BithumbTicker ` , and updated ` BithumbMarket
updated logging statements in RealtimeSegmentDataManager and AvroUtils to use parameterized messages instead of string concatenation to improve logging clarity and maintainability
change maxParallelThreads to MAX _ PARALLEL _ TASKS and update related references in OverseerTaskProcessor . java to improve
replace ArrayList with CopyOnWriteArrayList for _ headerReaders , _ dataReaders , and _ readers in FixedByteMVMutableForwardIndex and
refactor multiple dictionary - related classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerException when destBuffer is null
camel - 1649 : add sleep to make the test more reliable .
updated conditional check from ` beginCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java ` to ensure that the
increased the number of random value generator from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in CodeStoreEndpoints
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper handling of UniqueConstraint instances in the filter
refactor description handling in MediaDetailFragment to utilize HashSet for all language codes to improve code readability and maintainability by reducing unnecessary
added catch block for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for invalid array and class types
[ hotfix ] [ docker - java ] add referencefilter option to listimagecmd
camel - 1649 : camel - jms - add exclusion of bridgeerrorhandler to jmsendpoint .
added checks for specific conditions in OpExclusionUtils . java and set allOps based on the presence of " # ifndef " or
added return false statements in DatabaseCommand . java to ensure proper handling of database operations
updated the initialization of Politician instances in HonestPoliticianExample . java to use descriptive identifiers instead of hard
replaced null and length check with StringUtils . isNotBlank for initFile validation to improve code readability and maintainability
updated the way the port is assigned and formatted in the restlet URL construction to improve clarity and ensure correct URL formatting based on the port
removed the case for WALL _ SIGN in SchematicFormat . java to streamline the import statements for better readability and maintainability
added a system property to set the maximum length of " 100Mb " in QTestUtil . java and removed it from SessionState .
changed visibility of several fields in WebServer from public to private and added baseHttpConfig method in WebServer . java to enhance encapsulation and
updated processor names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSource " across multiple files
updated the condition for determining if the application name is not " spark . app . name " in HiveConf and modified appName handling in HiveS
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability and maintainability
simonstewart : move window . restore ( ) into driverservlet . maximize ( )
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , DefaultProjectFilesystemFactory , and DefaultCellBuckOutInfo
added an assertion to check if the message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that the
updated table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of integer values in the table
added an assertion to check if the form ' s customized is null to ensure that the form ' s customized is not null to ensure that the
refactor line buffer handling and coordinate checks in LineChartRenderer . java to improve readability and maintainability of the code
refactor flavor validation logic in AndroidBinaryDescription . java and update tests in AndroidBinaryFlavorsIntegrationTest . java to improve clarity
updated variable name from ' offset ' to ' i ' in LwjglGL11 . java to improve clarity and consistency in buffer
added new classes ` Property ` and ` PropertySuper ` and ` TestClassResolutionFail ` with error handling to facilitate testing of
do n ' t remove the shutdown hook if the group property be set to false .
updated the FilterChainProxy class to use FilterChjainProxy instead of FilterChainProxy and removed the URL parameter from the VirtualFilterChain
replaced ` Collections . sort ` with ` Arrays . sort ` and modified return statements in ` PercentileAggregationFunction . java ` to improve
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable assignment logic in QueryTypeAnalyser to ensure
set baseType to null in DatabaseInfoRetriever and initialize literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to null to ensure baseType
updated link references in multiple Java files to use { @ link } syntax to improve code readability and maintainability
refactored evaluator instances to be final in EvaluatorFactory . java and updated tests in EvaluatorFactoryTest . java to improve immutability and
updated configuration references from " osx _ x86 - 64 " and " third - party " to " osx _ config " across multiple
added sound effects functionality to AllAppsView . java to enable or disable sound effects in the application
changed the main method signature from Exception to IOException in RemoveFirstPage . java to ensure that the main method throws IOException instead of Exception
added a call to setGranularityEnabled on leftAxis in BarChartActivitySinus . java to enable the granularity of leftAxis in the
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated file path handling in ContextHandlerGetResourceTest . java to use MavenTestingUtils for target testing directory to improve test reliability and ensure
added close ( ) methods to multiple connection classes to ensure proper resource management and prevent potential resource leaks
refactor SocketRemoteTest , MockAppender , and SocketServerFunctionalTest to utilize a BlockingQueue for managing ILoggingEvent objects to
[ beam - 4142 ] improve error message when a resource be a directory .
removed unused import statements from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
removed redundant unbindHandle call in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced the logic for setting the dark intensity in NavbarButtonsViewController to streamline the navigation button ' s dark intensity based on
replaced abort statement with throw statement in PolyBenchLauncher . java to improve error handling by throwing an exception instead of throwing an exception
replaced the variable ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in the
added support for block formatting context in the findBox and findElementBox methods in BasicPanel to enhance user experience by allowing more flexible rendering
added error output handling in WorkerProcess and improved error logging in WorkerShellStep to enhance error reporting and provide clearer feedback during job execution
added null checks and improved error handling in CheckedListReplaceAll . java to enhance robustness and provide clearer error messages for null operators
added a new test method ` _ testFill ` and a ` _ writeCallback ` in ` SslConnectionTest . java ` to implement a
added listener registration for device configuration changes in DeviceFlag . java and changed defaultValue in FeatureFlags . java to final in FeatureFlags . java to
added an import statement for JUnit ' s Ignore annotation in GatewayRSocketIntegrationTests . java to temporarily disable the test due to issues related
removed the import of MalformedURIException in StandardRequestHandler . java to streamline the code by eliminating unnecessary dependencies
instructor : add a script to focus the end date in instructorfeedbackeditpage
refactor subscription logic in KrakenStreamingTradeService to improve readability and maintainability of the code
changed System . err . println to System . out . println in ChangeableUrls . java to improve clarity of error messages for better debugging
added support for random access in SparseRowMatrix by introducing a randomAccessRows parameter to enhance flexibility in creating SparseRowMatrix instances based
fixed npe when delete volume with volume with no poolid
updated the path generation logic for HIVE _ PLAN based on the Hive configuration to enhance flexibility in retrieving the HIVE _ PLAN
[ beam - 2390 ] fix test to use vendored guava version
do n ' t call registermemorycctprovider twice in memorycallgraphbuilder
fix a nullpointerexception cause by a nullpointerexception in the conference chat manager .
added file write check in Save . java and set dirty state in GuiPackage to ensure that the file is written before proceeding to prevent
added a new FolderSyncActivity class and integrated it into the DrawerActivity for managing folder synchronization functionality to enhance user experience by allowing users to
[ hotfix ] [ test ] fix memory leak in sequentialchannelstatescoreimpltest
improve spanihtreenormalizer to handle comma , and %
replaced the method for retrieving the packed value slice from the heapPointWriter to simplify the way the value slice is appended to the offlinePoint
added LocaleRandomizer class and its corresponding test class to facilitate randomization of locales in the randomization process
added unit tests to verify mime type detection for font - printer - metric and font - type1 data in TestMimeTypes . java to ensure
added 10.9 . 0 to the list of supported versions in Installer and AutoUpgrade classes to ensure compatibility with the latest versions of the
reformatted code in TCPTransport . java for improved readability to enhance maintainability and maintainability of the code
updated the read timeout logic in Http2AsyncParser . java to account for a block state to ensure that the read timeout is set to zero
increased the default WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to increase the maximum
updated error message formatting in SelectStatement . java to improve clarity to enhance readability and maintainability of the error message
added date formatting support for " date " fields in ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor PriorityGenerator to utilize a new PriorityGenerator for generating priority headers to improve code readability and maintainability by centralizing the generation
added a constant for maximum scalar replacement code size and updated the scalarReplace condition to include a check for the length of the entire class to
added DATE _ TAKEN to the sorting order in MediaProvider . java to ensure correct sorting order for media images
updated image drawing parameters in TexturePacker2 . java to correctly account for image dimensions and image dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder to improve handling of WebSocket upgrade filters
added shutdown calls for validateSignService , transactionHandlePool , and nodePersistTaskTimer in NodePersistService to ensure proper resource management and prevent
added RawJsonRequestBody annotation to the JaxrsSwaggerGeneratorContext and implemented it in the Echo and Echo classes to enable processing of raw JSON
added a new method ` newTarget ` to the ` LoggerUtils ` class for creating a new ` Target ` instances to facilitate
replaced ListBeanContainer with ArrayList in ListBeanContainer . java and added BeanContainerTests . java with a new test class BeanContainerTests
updated metric name from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to reflect the
camel - 1774 : camel - cachedoutputstream should release temporary file when the exchange complete .
fix teltonika ' s protocol decoder ( fix # 119 )
updated method call from ` Files . readFirstLine ` to ` Files . asCharSource ` in ` HybridProjectBuildFileParser .
added a null check for the operator in JCAssignOp and created a new Test class with a test case to ensure proper handling of null operators
added a boolean flag ` enableAccountHandling ` and conditionally call ` onCreate ` in ` BaseActivity ` to conditionally enable account handling
simplify isochroneresource . getmaxpolygons ( ) by use heuristically find main polygon
added a path parameter to the DrillViewTable constructor and updated its usage in WorkspaceSchemaFactory to enhance flexibility in view management by allowing
added default parameters to the superclass constructor in PooledByteBufAllocatorL to enhance flexibility in memory allocation configuration
updated the array type check from double to short in ObjectInputStream . java and added a new CloneArray class to ensure correct handling of short arrays in
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE and updated the executor initialization in LlapIoImpl to allow dynamic
added support for SSL debug and SSLLogger in SecurityServicesFeature based on Java version to enhance security context initialization for different Java versions
refactor LatLonGrid and TestLatLonGrid to improve boundary checks and add a new test for growing polygon functionality to enhance robustness
added new static method ` invisibilityOfElementWithText ` and ` refreshed ` to the ` ExpectedConditions ` class to enhance the expected
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its implementation to include it to enhance functionality by allowing
added a test for the ` getOuterClass ` method in ` ReflectorTest ` to verify the behavior of the ` getEnclosingThing `
updated the configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated message formatting in HubChangeExecListener . java for better clarity to enhance readability and maintainability of the code
added properties property and its getter / setter methods to the Link class and corresponding tests in QuickLinksConfigurationModuleTest to ensure that links are properly
removed multiple @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO classes , and added a toString method in YamlConfigFileDTO to streamline
updated generic type parameters in AwaitableServerClientCallConfiguration to use generics for better type safety to enhance code readability and maintainability by
refactor ` forName ` and ` forNameHelper ` methods to include a ` callerClassLoader ` parameter to enhance flexibility in class loading by allowing
replace ` isEmptyOrNullString ` with ` isEmptyOrNullString ` and update authentication token handling in ` RequestItemRepositoryIT . java ` to improve
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve performance and clarity by using a
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the setSecurityContextAccessor method from other packages
updated the ` TimeStepdefs ` class to use ` ChronicConverter ` instead of ` HumanTime ` for improved date handling to
fix spark _ isolated , spark _ recessive , spark _ recessive , spark _ isolated , spark _ recessive be not
updated proxy creation to use ` getUri ( ) ` instead of ` exchangeSpecification ` in multiple service classes to simplify proxy creation by directly using the
removed multiple debug print statements from RecordGenerator . java to streamline output for better readability and maintainability
[ hotfix ] [ kafka ] remove auto commit sync from kafka consumer
removed locking mechanism in Liquibase and added a flag for database change log lock table in LoggingExecutor and StandardLockService to streamline
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include " rawtypes " and " serial " to enhance compatibility with
added synchronized keyword to several methods in Database . java and SessionRemote . java to ensure thread safety and prevent potential memory leaks
refactor spring - boot auto configuration to use a new resolvedproperty class to improve code readability and maintainability by reducing duplication
updated the currency pair from baseSymbol to counterSymbol in VirtExMarketDataService . java to align with the correct currency pairing
camel - 11856 : fix the test error of camel - core
updated the testId field to use System . getProperty ( " testId " ) instead of UUID . toString ( ) to ensure the testId
added synchronization to date and number format parsing in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated height scale setting from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic scaling of the
updated equality check from ` equals ` to ` equals ` in ` SecurityConfig ` and changed assertions in ` SecurityConfigTests ` to ` assert
changed the default value of dumpPartitionId from false to false in StdoutSink . java to ensure that the default dumpPartitionId is set to
added test cases for TronTXOutput and TronTXOutputs in UTXOSetTest . java to verify the functionality of Tron
[ net . sourceforge . pmd . lang . java . rule . internal ] fix false positive with unused variable name
pdfbox - 4071 : avoid npe , a suggest by valerybokov
added a test to verify that new job parameters override the previous restart parameters in JsrJobOperator to ensure that the job restart properties override the
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the `
refactor principal assignment logic in JaasAuthenticationHandler . java to improve clarity and maintainability to enhance code readability and maintainability by
refactor core closing logic to use an executor for improved thread management to enhance thread management and prevent potential memory leaks
removed unused imports and added visibility logic for mActionsView in RecentsView . java to improve code clarity and ensure mActionsView
refactor parameter handling in RunIdIncrementer to use a conditional expression to improve code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added tests for matched devices in SchemaRegionBasicTest . java to verify the functionality of the SchemaRegion read plan to ensure that the results are
add log for metric event error
updated the calculation of mCentralities in EigenvectorCentrality . java and added a new EigenvectorCentr
updated registry initialization and string formatting in LookupIPv6 . java to use a random port to improve code clarity and maintainability by using a
fix the geometrygenerator to set the type of the ifc product in the database .
updated the Amplifier value in BlockEntityBeacon . java from 2 to 0 to set the Amplifier of the beacon to ensure
refactor TubeCalc class for improved performance to enhance performance and maintainability of the code
[ hotfix ] [ health ] disable service health check by default
updated the ` DEFAULT _ GROUPS ` list to use a wildcard type and added group validation logic to enhance flexibility in validating group types and
updated annotations and added a timeout for the main method in bug8057791 . java to enhance clarity and maintainability of the code
refactor the scheduler initialization to use a lambda expression for thread creation to improve code readability and ensure that the thread daemon is set to true
fix the lexica botania lexicon build issue .
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure that
[ amq - 4892 ] fix test to use lazysessioncreation = true
updated the ` initIOContext ` method to include a ` RecordReader ` parameter across multiple classes to enhance the functionality of the ` initIO
deleted ClassLoaderHolder and LoaderManager classes and refactored deployment handling in VerticleManager to improve code clarity and maintainability by elimin
added a new method ` configurationChanged ` in ` FileStore ` and modified file existence checks in ` JavaLanguageServer ` and ` ScanClassPath
added try - catch blocks around the registerSessionCallback and unregisterSessionCallback methods in PackageInstallerCompatVL . java to handle potential exceptions during
added " 23 . cfs " and " 23 . nocfs " to createIndex calls in TestBackwardsCompatibility . java to ensure compatibility with
add a constructor to akkarpcserviceutils . createandstart to create akkarpcservice .
added a retry condition to set the maximum attempts for map reduce in TestExportSnapshot . java to ensure that the maximum attempts are set for the
pdfbox - 4071 : use metrics . getencodingscheme ( ) to determine if a font - specific encoding be present
added a new test class ` SslConnectionTest ` for verifying SSL connection closure to ensure that the SSL connection is properly closed before fill to
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to ensure correct family validation for IPv4 and IPv6 addresses
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure correct serialization of date objects in a collection
refactor Message class for improved clarity to enhance maintainability and readability of the code
added debug logging for SQL generation in PutDatabaseRecord . java and modified the condition for determining the first update key to improve debugging and ensure correct
corrected the loop condition in TableOutput . java to ensure the loop does not exceed the defined maximum width
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
bugfix : use high priority for formatstringchecker . getformatstring ( )
[ java ] localvariablecouldbefinal : add property to ignore non - final loop variable in a for - each statement
added PDF version and full compression settings in PDFExporter . java and updated test properties in PDFExporterTest . java to improve PDF export functionality and
added unit tests for the ` LdapUserDetailsMapper ` class to validate role attribute mapping behavior to ensure correct behavior of the ` mapAttributes `
add ldap . read . timeout config option ( # 1748 )
refactor multiple TestDescription classes to improve code organization to enhance maintainability and readability of the codebase
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the handler state is invalidated in the gesture state check to ensure that the gesture state is only processed when the handler
updated the maximum distance for folder creation and old rotation arrays in Workspace . java to improve the responsiveness of folder creation calculations and ensure proper
updated OciConfigConfigSource . java to use ConfigProviderResolver and modified property name checks to improve code clarity and ensure correct configuration handling
refactor Testjsig class for improved test coverage to enhance code readability and maintainability
update mana calculations to account for the maximum mana count in multiple classes to ensure accurate calculation of mana counts based on the stack size
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field and added a suppression annotation in P11TlsPrfGenerator . java to clean up the code and improve readability
refactor tsFile validation logic to use a boolean variable for clarity to improve readability and maintainability of the code
added two new files ` Switch21 . java ` and ` Switch19 . java ` , ` Switch21 . java ` , and ` Switch
updated error messages in ComparableSubjectTest to use " java . lang . String " instead of " actual argument java . lang . String " to
added standalone flag support to StreamHelper and created a new test class for XML processing to enhance XML processing capabilities and ensure correct behavior of standalone XML
updated capacity validation and improved exception message formatting in Int2ObjectCache . java to enhance error clarity and ensure correct capacity limits
removed sorting of security filter chains in WebSecurityConfiguration and added a test for it in WebSecurityConfigurationTests to ensure correct ordering of security filter
removed the TimeInForce . GTC parameter from the MARKET order type in BinanceTradeService . java to streamline the order order
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and add validation checks to ensure minimum and maximum values are within the minimum and maximum
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 14836 : camel - aws2 - activemq - add support for camel - jms in camel - aws2 - jms
updated the ` SourceUtils ` to handle potential ` NoSuchFieldError ` and added a new test class ` TestGetBound ` to improve error
refactor parquet type handling into a separate method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
modified the originalArtifactName assignment logic to check if the artifact name starts with the SCOPED _ TARGET _ BEAN _ PREFIX before processing to
added a loop to read the certificate serial number and store it in HttpsSegmentFetcher . java to improve performance by avoiding unnecessary certificate generation
changed the return type of ` getDefaultBooleanValue ` from boolean to String and added a new ` DnsFallback ` class for handling default values to
improve error message in defaulttheme to include exception
changed the type of the ` success ` field and its properties from ` boolean ` to ` String ` in the ` DepositAddress `
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper
removed " address " and " phone " scopes from the CommonOAuth2Provider and its tests to simplify scope management and improve code clarity
refactor the submit logic in ManagedSelector to use a new Start class and implement the update method to improve code readability and maintainability by
added new constants for hue and saturation in WLedHandler and updated request handling in WLedBindingConstants to improve code clarity and ensure correct
replaced the ` isValidCaller ` method with a ` contains ` method in the ` VectorizationProvider ` class to improve code readability and
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to enable handling of JSR instances in the application
add a transactionmanager to the subscriptionactivatingsubscriber so that it do n ' t work with the transaction manager .
refactor SQL statement construction in DBMSProcessor . java for improved clarity and error handling to enhance code readability and maintainability by
updated ContactItemInflater to set elevation based on SDK version to ensure compatibility with Lollipop and above devices
renamed the variable ` typeInformation ` to ` identifier ` and updated references accordingly to improve clarity and consistency in naming conventions
replaced direct calls to ` Files . readAllBytes ` , ` Files . write ` , and ` Files . delete ` with ` AccessController .
add support for the ` [ " ] " operator in the Groovy parser and printer to enhance functionality for handling ` [ " ] " operators in
updated warning log message to include the exception class name instead of the message to improve clarity of error reporting for better debugging
updated character reading logic in RecordInputStream and UnicodeString classes , and added a test for UMLAT reading in TestUnicodeWorkbook to ensure correct
added a test for downloading a file with Norway characters in the name to ensure correct handling of character characters in file names
replaced RuntimeException with CancellationException and added isCancelled method to AsyncResource to improve error handling and provide clearer feedback when a password request
added a null check for statistics before handling the cache count to avoid potential NullPointerException when statistics is not initialized
added a test for removing an object from an explicit collection in MongoTemplateTests to ensure proper handling of object removal from an explicit collection in the
update copyright year from 2015 to 2022 in multiple Java files to reflect the latest copyright date and improve code clarity
updated string formatting in Coder . java to use % n instead of \ n for consistency to improve readability and maintainability of the code
added mIsClearAllButtonFullyRevealed flag and refactored scroll handling in RecentsView and PagedView classes to
added COMMON _ HMS _ PROPERTIES map to HiveIcebergMetaHook and modified parameter handling in HiveIcebergSerDe to
added a method to check if the server address is already in use and refactored exception handling to improve clarity and maintainability of the
added a command line argument for the test class path in TestNestmateAttr . java to enable the use of the test class path
updated SchemaTextDetailType from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in schema description handling
remove unused import and add miss @ override annotation
# 1187 - enh : add ` ` nested use savepoint ' ' support for nested nested transaction ( # 1187
replace integer fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor and MemIntQpExecutor to improve performance by reducing
[ hotfix ] [ network ] remove unnecessary idle strategy in embedpingpong
refactor HttpClientIntroductionAdvice to use a new handleBlockingCall method for better code readability to improve code maintainability and
added HDP version handling in SliderAppsViewControllerImpl . java to ensure the HDP version is set correctly based on configuration settings
refactor JavacProcessingEnvironment to use reflection for ServiceLoader reloading and close methods to improve resource management and ensure proper resource management during
refactor ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize DeepCloner for improved object cloning
added binding for WebServer . JETTY _ SHOW _ STACKTRACE to disable stack trace functionality in ResourceBase . java to ensure that the
added a check for OBJECT type in NativeObject . java to return null if the object is an instance of JSType . OBJECT to ensure proper handling
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with a single ` BasicOopField `
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey and ECPublicKey to enhance serialization capabilities for
[ gr - 13434 ] make sure native - image heap be not spawnisolates when useonlywritablebootimageheap
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBean MBean handling
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline the code by eliminating unnecessary dependencies
replaced the ` Validator ( ) ` method with ` getOwnerAddress ( ) ` in multiple actuator classes to provide access to the owner address
http : / / issues . apache . org / jira / browse / amq - 4891 - add a main class to test
replaced hardcoded byte values with conditional checks for minimum and maximum values in sendCommand calls to improve readability and maintainability of the command
added empty index checks for nodes in ProtobufAnnotationSerializer and refactored edge building logic in CoreNLPProtos to improve code clarity
[ java ] remove correlationid from asynccommandidset only when the correlationid be remove .
added saveConflict method calls in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflict handling occurs only when the file
updated type parameters to use generics for better type safety to enhance code readability and maintainability by using generics
updated imports from ` org . apache . solr . common . util . StrUtils ` to ` org . apache . lucene . analysis .
added Oracle and MySQL specific driver properties in DatabaseFactory . java to ensure compatibility with Oracle and MySQL databases
updated MethodInterceptor initialization in SignedSupportingClassProxyFactory and added a serialVersionUID field in PartialMockingWithConstructorUsingEasyMockTest to
updated timestamp handling in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of java . util . Date to improve accuracy of
refactor ExecutionContext and LocalExecutor to use wrapClassLoader for clarity to improve code readability and maintainability by using a more descriptive
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve UI responsiveness during buffer changes
updated processConfigFile method and added pid assignment logic in ConfigDispatcher . java to ensure proper handling of service pid namespaces and improve code clarity
tvm : remove disabledfreezepack and disablefreezepack for tvm v2
added an ` _ insecure ` property to ` TlsConfig ` and modified the trust manager creation logic in ` TlsUtils ` to allow
refactor source and class path handling in JavadocTool . java and add a new class T7091528 . java for testing to improve
replaced ` nodeColumns ` with ` edgeColumns ` and introduced a new ` edgeIdColumn ` with a new ` EdgeColumnsGDF
added cascade option to @ OneToOne annotation in DefaultUserInfo . java to ensure that the @ OneToOne association is only applied when the target is
refactor ` hashCode ` and ` equals ` methods in ` Message ` class to use ` Arrays . equals ` for comparison to improve code read
updated character encoding in response body assertions from " ? ? ? " to " \ u017D " in AsyncProvidersBasicTest . java
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code by
added a method to retrieve static permissions in ProtectionDomain and updated subjectPd assignment logic in SubjectDomainCombiner and JavaSecurityProtectionDomain
added null checks for the recipe parameter in RecipeHandlerFloatingFlower and RecipeHandlerElvenTrade classes to prevent potential NullPointerExceptions
added a loop to read the last parsed index and modified the parsing logic to ensure proper handling of empty brackets in the parser
added ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` , ` UploadMediaDetailsContract ` , and ` UploadMediaPresenter `
added a new file ` Issue596 . java ` and modified ` Status . java ` and ` HttpHandlerImpl . java ` to ensure
changed bitwise operation from ' 1 ' to ' 1L ' in NodeBitMap . java to ensure correct bit manipulation for improved performance
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
refactor ConsoleUIService to replace gitBashConfigValue with useStdIn parameter and update console initialization logic to improve clarity and functionality
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito for account manager verification to simplify test code and improve readability
[ java ] remove unnecessary field from analysistype . getenclosingtype ( )
updated method names from ` getProperty0 ( ) ` , ` getProperty1 ( ) ` , ` getConcatSeparator ( ) ` , and `
removed the timeout parameter from the set method in PutAllCallable . java to simplify the set operation by eliminating unnecessary timeout settings
[ issue # 1188 ] fix nullpointerexception in consumerrunninginfo when consumer be empty or not .
[ java ] generate source identity for a conductor .
added a new file TopTabAction . java that implements the Presenter interface for displaying a panel with a " lalal " label to
camel - 14836 : dynamic router should use reactive executor to reduce memory usage
refactor AggregateItemReaderTests to use JUnit 4 annotations instead of TestCase to improve test clarity and maintainability by using JUnit
added generic type ` < T > ` to the Procedure constructor in ` AbstractObjectValueTypeMap . java ` to improve type safety and clarity
added functionality to display the number of edits in the AchievementsActivity and updated the NetworkingModule and OkHttpJsonApiClient to
added a validation check for the length parameter in OfflineSorter . java to ensure that the length does not exceed Short . MAX _ VALUE to prevent
added a new ` BugAccumulator ` instance and modified related bugs handling in ` DumbMethods . java ` to improve handling of absolute values and
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error message for invalid credential types in ProvisionClusterRequest . java and updated expected exception handling in ProvisionClusterRequestTest . java to provide
updated the random number generation method in TestVectorUtil . java to ensure a valid range of 100 , 000 , 000 to improve accuracy of the
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the time comparison logic to improve accuracy
added SSL handling in TestUtil and updated PGPropertyTest to set SSL property to true to improve SSL configuration management and ensure proper handling of SSL
added support for safebrowsing in ChromeDriverFactory and enhanced file download tests in FileDownloadToFolderTest and FileDownloadViaProxyTest
added null checks before cloning the flight configuration in BaseMotorMount . java and RecoveryDevice . java to prevent potential NullPointerExceptions when modifying
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration
updated methods in DataTable , TableDiffer , and TableDifferTest to handle empty gherkinRows and raw cases more gracefully to improve
added a static variable ` CustomIgnoreTag ` and implemented a condition to remove elements from the iterator if it starts with a specific native code to
camel - 13946 : fix jdbcoptimisticlockedexceptionmapper to use optimisticlockedexception instead of runtimeexception
fix @ configurationproperties ( ` ` parent ' ' ) and @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments for fragment loading to improve layout consistency and ensure
deleted the ClusterNodeInfo . java file to remove unused classes to streamline the codebase
reformatted the return statement in ShieldedTransferActuator . java to improve code readability and maintainability
added debug output for " Standard ciphersuite chosen " and " Legacy ciphersuite chosen " in ServerHandshaker . java to provide clearer
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle cases where a single template is selected to improve
added a ` nodeLabelMap ` to track node relationships and updated logging behavior accordingly to improve error handling and provide clearer feedback when a node
added a new file R2303044ListSelection . java to test item selection functionality in a frame to ensure that the list selection functionality
[ java ] remove the registrationid parameter from publicationregistration and add a check for client time out .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerException when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the ` compound ` property
updated row counting logic in StatsRulesProcFactory . java to use a single row count instead of a single row count to improve clarity and
added path URL formatting and modified parameter setting logic in SpringBootDocBuildTemplate . java and DocUtil . java to improve path handling and ensure
remove some dead code and make the logger final , and improve code readability
refactor DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate based on remote configuration to improve flexibility in
added error handling for JSON parsing in RuntimeException to improve debugging by providing clearer error messages for JSON parsing failures
added a DEBUG condition to the log statement in WidgetsModel . java to ensure logging only occurs when debug is enabled
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a new test for discountOverlaps in TestSimilarityBase . java
added null checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reliability by
added new properties ` exit ` and ` quit ` to the Global class and removed the ` QUIT ` method from ` ScriptingFunctions `
refactor variable declaration in LoanBrokerSharkDetectorDemo to use a local variable for clarity to improve code readability and maintainability
rename method names from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
replaced ` String ` cookie handling with ` CookieJar ` and added error logging for missing cookies in ` VmwareContext . java `
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
updated the ` bigIntegerToBytes ` method calls to include a value of 32 to ensure compatibility with the latest EC key encoding
updated the property key from " fml . disabledMods " to " fml . modStates " in the Loader . java file to
refactor account selection handling into a separate method ` showAccountChooserDialog ` to improve code readability and maintainability by encapsulating account selection
updated error message to include host IP and port in IOException to improve clarity of error messages for better debugging
added a check for an empty result from the validator smart contract call in ValidatorContractController . java and created a corresponding test in ValidatorContractController
added a null check for the root file before reading JSON fields in TexturePackerFileProcessor . java to avoid potential NullPointerException when reading settings files
added a null check for datasourceJNDI in PooledConnection . java to ensure proper handling of null data source properties
update target and window values in TestRefprocSanity . java and modify count calculation in TestRefprocSanity . java to improve performance
add null check for currentConsole before calling write in EditorConsole . java to avoid potential NullPointerExceptions during console operations
added a call to set the credential refresh delay in KinesisConfigUtil . java to improve user experience by allowing more time for refreshing the kinesis
replaced multiple instances of ` AlertDialog . Builder ` with a new ` showInfoAlert ` method to improve code readability and maintainability
added a ` - package ` argument to the ` test ` method in ` T4501661 . java ` to support package - specific
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
added a check for dependency presence before adding them to the list of dependencies to ensure dependencies are only resolved when they are not provided
added a set to manage ZipFileInputStream instances and modified the releaseInflater method to utilize it to improve resource management and prevent memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ source ] fix concurrentmodificationexception in sequencegeneratorsource
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest
replaced multiple instances of ` @ Override ` with ` @ Override ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java
added support for " ppc64 " and " ppc64le " architecture checks in Bits . java and ByteArrayAccess . java to support
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a link to the GitHub link to improve user experience by providing more context
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` and ` ZoneId . systemDefault ( ) `
refactor BytesRef class to improve code readability to enhance maintainability and readability of the code
added a toast message to inform users when the YouTube Player does n ' t work on Lollipop yet to improve user experience by
added error handling for unterminated dollar quotes , string literal , and block comment parsing in the parser to improve robustness by providing clearer
added a null check for mVibrator in the Vibration duration condition to prevent potential NullPointerException when mVibrator is not
updated table border settings and improved background color handling in DotRenderer . java to enhance visual clarity and maintainability of the code
added a method to check if a configuration variable is encoded in HiveConf . java and modified SetProcessor . java to handle encoded configurations to improve
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future updates
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 3903 for wavefront
replaced the use of BitmapLruCache with NetworkedCacheableImageView and added image loading functionality in NetworkedCacheableImageView
removed the ` View ` parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
added ` gdxControllersVersion ` to ` DependencyBank ` and updated its usage in ` BuildScriptHelper ` and ` DependencyBank ` to
refactor LaunchedURLClassLoader for improved clarity to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use DataAccessUtils for querying results to ensure correct column count is used for JDBC queries
add cache - control to layout tag to avoid cache issue
updated the warning message format to use Locale . ENGLISH in ZkController . java to ensure consistent formatting across different locales
updated the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in query parsing by allowing customization of the Analyzer
updated copyright year in multiple Java files and added licensing information to clarify the purpose of the Winder copyright in the application
removed an unnecessary semicolon in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added support for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of void column vectors in batch processing
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure that the request
simplified the type matching logic in AbstractConfig . java to improve code readability and maintainability
[ java ] : add offer method to sessiondecorator that take a timestamp from the publication .
corrected the spelling of " trustAllXForwardedRemoteAddressResolver " and " maxTrustedIndexXForwardedRemoteAddressResolver " to "
added a new annotation interface ` NoBootstrap ` and modified ` BootstrapInserter ` to conditionally build bootstrap static blocks based on annotations to
hbase - 2238 fix npe in tabledescriptorchecker . getmaxfilesize and getmemstoreflushsize ( )
replaced the variable ` maxCommits ` with ` requestedCommits ` for clarity to improve code readability and maintainability by using a consistent
added InvocationTargetException to main methods and replaced invokeLater with invokeAndWait in bug6794831 . java to improve error handling and ensure proper
added a static final constant BUILD _ ID and refactored the origin retrieval logic in CachingBuildEngine to improve code readability and maintain
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed a redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline the code by eliminating unnecessary
added TezConfiguration import and modified TezConfiguration initialization in TezConfigurationFactory . java to utilize a default TezConfiguration instance for
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when accessing keyPurposes
removed the visibility check from the conditional statement in CustomPlaybackOverlayFragment . java to streamline the code by eliminating unnecessary visibility checks
added a ` forget ` method to ` OpenALSound ` and modified the stop method to check for null before stopping the most recent sound to
fix invalidate state and other operation with discontinuity
added multiple DecimalFormat instances for number formatting in NumberAxis . java to improve precision of tick units for better user experience
refactor TargetGraphAndBuildTargets to use a new factory method for improved clarity to enhance code readability and maintainability by redu
removed the ` IndexFileNameFilter ` class and its usage in ` IndexFileDeleter . java ` to simplify the file name filtering logic and
fix a bug where the texture stitcher be n ' t write to the debug . stitched _ fileSaving .
updated ApkBuilderStep , ApkBuilder , and SignedJarBuilder classes to include a compression level parameter to enhance flexibility by allowing dynamic
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify the inclusion of static fields in a stub
added support for byte data type in MetricFieldSpec and related classes to enhance flexibility in handling byte data types in the application
updated error message formatting from " Multiple Failures " to " % nMultiple Failures " across multiple test files to improve clarity and consistency
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added caching support using Spring ' s Cache and CacheManager in multiple classes to enhance cache management and improve performance in the Forum service
add locale support to pronunciationmodel and maryproperties
added a check for empty post body in SimpleHttp and implemented a test for handling null post bodies in TestHttpPlugin to ensure proper handling of
added a dispatcher to the ClientSideSlb class and updated its usage in ClientSideSlbTest to ensure proper shutdown of the OkHttpClient
added conditional logic to set vertical position based on the orientation of the texture to ensure proper rendering based on the texture ' s orientation
improve error message when no property be mapped
updated contextPath variable to be non - final and added a null check for it to ensure contextPath is set to " NA " when it is null
[ drools - 3892 ] fix npe in kiecontainerimpl . reinittypes ( ) and projectclassloader . define
added a new integer constant B _ TREE _ MAP _ ROOT _ HEADER in SerializationHeader . java and updated BTreeMap . java to
added validation for ` prefix _ header ` and ` precompiled _ header ` arguments in ` AbstractCxxSourceRuleFactory ` to ensure proper
replaced the use of ` WeakReference < T > ` with a custom ` AccWeakReference < T > ` class for managing security
changed access modifier of findNextIndex method from package - private to private in ObjectSet . java and modified return value in OrderedMap . java to
updated the ` isDirect ` variable assignment from ` true ` to ` false ` in ` VertexBufferObject . java ` to ensure consistent behavior
remove redundant code in maryclient . getaudioeffecthelptextstexts ( ) .
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods in ` Actor ` and ` Group
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer . read ( )
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to improve layout responsiveness based on container type to enhance layout flexibility for folder
replaced the instantiation of ` NumberFormat . getInstance ( Locale . US ) . parse ( valueNumeric , String ) ` with a custom ` Value
added a condition to check if the response is deferred in FormAuthenticator . java to ensure proper handling of deferred responses in the authentication process
updated argument checks from " -- module - startd - ini = " to " -- add - to - start " in StartArgs . java
added a default partition value and modified the handling of partition values in DynamicPartitionFileRecordWriterContainer to improve flexibility by allowing dynamic partition values
[ hotfix ] [ runtime ] fix npe in streamnode and streamgraph
refactor return statements in DefaultArtifact . java for better clarity to enhance readability and maintainability of the code
added unit test base on user forum issue
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer guidance on missing dependencies in the classpath
updated the GMAIL notification notification plugin from GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS to ensure
doc : fix typo in cryptokey docstring
increased the expected message count from 125 to 25 in LumberjackMultiThreadTest . java to improve test reliability by allowing
added check for player ' s dead state before proceeding with player health check
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api / secret key should be specify with apikey and apikey , not apikey
replaced switch - case statements with if - else statements in multiple classes to improve code readability and maintainability
refactor AbstractMetaDataExportMojo class for improved clarity to enhance maintainability and readability of the code
added handling for SQLIntegrityConstraintViolationException in Hive . java to prevent dropping tables from at least one materialized view definition to improve error handling
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in naming conventions
added a new class RoboExecutorService in the org . robolectric . util . concurrent package to mark the RoboExecutorService as deprecated
added a condition to check if the group is a root of the group before adding subgroups and sorting subgroups to the menu items to ensure
corrected a typo in the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and added a
updated TestDynamicNumberOfGCThreads . java to modify process builder parameters and ensure proper handling of dynamic number of GCThreads to
changed return types and return types of ` getHostFlavorMap ` and related methods to use ` ImmutableSet ` instead of ` ImmutableFlavor `
updated SQL creation command to use PlainSelect for options and modified parameter handling in CreateTable and CreateTableDeParser to improve flexibility in SQL
refactor background drawable assignment in ChatViewerFragment . java to improve code readability and maintainability by reducing redundancy
test ( refactor ) : migrate ctiteratortest to junit 5
added a call to ` token . clear ( ) ` in multiple tokenizer classes and removed ` localToken . clear ( ) ` from ` Tokenizer
add a new test that demonstrate that we do n ' t crash on block statement .
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to extend from Spring framework ' s BeanDefinitionStoreException and implement StateMachineConfigurerAdapter to
simonstewart : add testlocators to the selenium test suite
updated StringConverter to set maximum fraction digits for BigDecimal , Integer , and Float types , and added unit tests for float conversion in StringConverterTest
simplified the return statement in aggregatelifecyclelistener . getcurrentscope ( )
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure
added a condition to check for a specific line in the FencedCodeBlockParser to simplify the parsing logic by eliminating unnecessary checks
added socketTimeout property handling in ConnectionFactoryImpl and related classes to enable configurable socket timeout settings for improved connection management
added a delay of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during tests
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added a constructor to AsyncFileImpl that accepts a URI and a Path , and modified the error handling in AsyncFileTest to improve error handling
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the CucumberEngineExecutionContext is
fixed npe in NuageVspManagerImpl when no physical network id be specify , return empty list instead of null
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity
updated Java version constants and methods in ConstantPoolTagTests . java to ensure compatibility with Java 8 and 9 Java versions
improve error handling and message formatting in Compiler . java to enhance code readability and maintainability
added a method to clear the client header map in AsyncHttpClient to ensure that the client header map is properly cleared
replaced Vector with ArrayList for managing input and output file names to improve performance and clarity in handling input and output file names
updated the default GRID _ COLUMN value from 4.0 f to 3f in AppPreferencesImpl . java to improve user experience by providing
added a condition to check if ` forViewCreation ` is not defined in ` getQB ( ) . hasTableDefined ( ) ` to ensure
updated regex pattern in TestHS2HttpServer . java and modified assertions in TestHS2HttpServer . java to improve accuracy of date pattern
added error handling around the asObject method call in GraphPrinter . java to improve robustness by handling potential exceptions during object conversion
updated the driver variable from IE to FIREFOX and modified the test method from " ElementFindingTest " to " PageLoadingTest "
updated byteOffset calculation in ByteBlockPool and added a new test for handling multiple allocation scenarios in TestByteBlockPool to ensure proper handling of
changed the visibility of ` firstEncoder ` and ` secondEncoder ` from static to instance variables and modified the return statement to use ` Locale .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3892 : do n
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings for better compatibility
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` to simplify the class
add a confirmation dialog for save / discard change to the main window .
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in OAuth20AccessTokenEndpointController to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure that the index is valid before
added inputFormatClass parameter to several initTableMapperJob methods in TableMapReduceUtil . java to enhance flexibility in handling input formats in the
removed the redundant append method call in AbstractJRubyMojo . java to streamline the code by eliminating redundancy
improve error message when language be not find .
added a warning log for deprecated master reserve commit duration in ReplicationHandler . java to clarify that master reserve commit duration is not exclusive and
renamed ` cacheVariableName ` to ` cacheForeignKey ` and updated related references to improve clarity and consistency in naming conventions
change return type of generateECKeyPair and its methods from long [ ] to Object [ ] for key pair generation to improve type safety and avoid
added suspend method to Restarting and modified related logic in StateWithExecutionGraph and RestartingTest to enhance job suspension handling and ensure
replaced the singleton instance of RotationTouchHelper with a direct instantiation in RecentsAnimationDeviceState . java to simplify the instantiation process
refactor code to use flatMap for better readability and efficiency in UniFiControllerCache . java to improve code readability and maintain
updated method parameters and variable names from ' lwp _ id ' to ' unique _ thread _ id ' across multiple files to improve clarity
updated offer handling logic to filter and remove items with the same offer ID to improve clarity and maintainability of the offer management logic
replace hardcoded TLS version checks with constants from TesterSupport to improve code readability and maintainability by using constants instead of hardcoded strings
updated mock handling in MockitoMethodInvocationControl to support different mock types and improved test assertions in SystemClassUserCases to enhance flexibility
replaced instances of ` NotLoadedException ` with ` NotLoadedException ` in multiple files to update exception handling to include ` PartialDatabaseObject
added import statement for DisplayUtils and updated intent extra in FileDisplayActivity to ensure proper handling of null file information in the intent
added error handling and file deletion logic in StoreDirect and StoreWAL classes to improve error management and ensure proper resource management during file renaming failures
added a task snapshot retrieval process in AbsSwipeUpHandler and modified the stopSwipePipToHome method call in SystemUiProxy to
added a hidden flag to CommandArgumentDefinition and modified LiquibaseCommandLine to manage the visibility of command arguments based on its value
[ hotfix ] [ kafka ] increase test ip address to 9092
[ geos - 5321 ] avoid create catalog in styleinfo and styleinfo
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents in the launcher
added getId ( ) and setId ( ) methods to TiledMapTile , TmxMapLoader , AnimatedTiledMapTile , and
refactor Manager class to improve code readability to enhance maintainability and facilitate future updates
updated JDBC connection URL to include the version of V _ 0 _ 13 to ensure compatibility with the latest database version
added schema and includeSchema properties to the LiquibaseGenerateChangeLogMojo class and updated the generateChangeLog method to utilize
replaced ` putIfAbsent ` with ` put ` in ` JmxRegistry . java ` to streamline cache management by using ` put ` instead
plannerbenchmarkrunner : use single benchmark runner exception logger instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore ` to allow subclassing of the method
fix a bug in the file selector fragment that be n ' t work on window .
added tests for handling large and slow response content in FastCGIProxyServletTest to improve test reliability and reliability of HTTP request handling
added a new intent to start the ReadInteractionsService to enhance the functionality of the ReadInteractionsService
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure that warnings are logged only when
added logic to set the email server port to a default value if it is null or null to ensure that the email server port is dynamically configured
added retry logic for SSLFactory reloading in TlsUtils . java to improve reliability and reliability of SSLFactory management
updated the date format in ObjectMapperProvider from " yyyy - MM - dd T HH : mm : ss " to " yyyy - MM - dd
updated the assertion message in SpyingOnRealObjectsTest to clarify the reason for mocking a private class to improve clarity of
added functionality to determine if a line ends on a NL tag in InlineBoxing and modified conditional logic in LineBox to improve handling of line
updated filePathString initialization to handle null cases to improve robustness by avoiding potential NullPointerExceptions
removed the import of DocCollection from TopicStream . java to streamline code by eliminating unnecessary dependencies
replaced ByteArrayInputStream with createHttpServletRequestInputStream in NinjaServletContextTest . java and added a new test method for Windows - 1250 parameter
added properties for management . endpoints . web . exposure . include in AbstractCasEndpointTests . java to enhance test coverage for web endpoint exposure
added a validation check for the current graph in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph before proceeding
[ micronaut - 1770 ] allow @ scopeone to be specify for method in @ factory .
added an ` suppressExceptions ` parameter to the ` JsonPathExpression ` constructor and related methods to enhance error handling capabilities for JSON path expressions
removed duplicate calls to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline code by
updated usage messages in CLHSDB . java and HSDB . java to include " - help " for clHSDB and hsdb
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean and removed redundant listener registration in SimpleStepFactoryBean to improve
[ beam - 3892 ] remove deprecate write class from transforms package
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManagerInstance ` instead of direct method calls to improve code clarity and
add analytics to show usage statistic
removed ` SourcePathResolver ` from multiple constructors in JavaSourceJar , JavaLibraryDescription , JavaSourceJar , and MavenUberJar to
refactored the initialization of ` enumDataTypeHelper ` in ` PostgreSQLDatabaseConnector ` and created a new class ` PostgreSQLEnumDataTypeHelper `
updated path comparison in LogFileTests to use File . separatorChar instead of " logpath / spring . log " to ensure correct file path
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency with the new
added a check to prevent dropping index tables in HiveMetaStoreClient to improve error handling for unsupported operations
added visibility check to update disabled flags in RecentsView to ensure proper scrolling behavior when visibility is not visible
added a specific highlighter for non - Windows systems in Repl . java to ensure proper syntax highlighting for non - Windows systems
add a new method ` addoptionallocalvariable ( dismantlebytecode , dismantlebytecode ) ` to ` bug
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` for file path handling to improve code readability
added a semicolon to the removeCaptureListener method call in SelectBox . java to improve code readability and maintainability
changed the value of the _ metaDataComplete variable from true to false to indicate that the metadata is marked as completed
refactor ` removeTaskTarget ` method to return a boolean instead of a boolean and update bitmap creation logic in ` ThumbnailSearchResultView `
added support for the " RELEASE " flag in the JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to ensure proper
updated variable initialization logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java `
added tests for crlfNewLinesInComments and crlfNewLinesInJavadoc in AddImportTest . java to ensure correct handling of line
added a check for non - empty hubMode in AbstractLiquibaseChangeLogMojo and defined hubMode in AbstractLiquib
updated variable assignments in JsrFaultTolerantStepBuilder . java and modified null check in JsrChunkProcessor . java to improve code
added a check for the existence of the linkDb before adding the input path in IndexerMapReduce . java to ensure that the input path
replaced manual reflection - based access to the " setIndexerThreadPool " method with a dynamic class loading mechanism to enhance flexibility by allowing dynamic
removed " 5000 " from the address format in GameCanvasImplementation . java to simplify the address format for better readability and maintainability
added a copy method to the executionsById map and updated related logic in MapJobExecutionDao to enhance job execution management by utilizing serialization for better
added a new file ` DownloadTest . java ` to implement a test for downloading images from a sprite to facilitate testing of image
fix checkstyle issue in util / format / defaulttrackselector . java
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` in ` GenericUDFRound . java ` to ensure correct argument type handling for
added null check for selectedVersion in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
removed multiple AntPathRequestMatcher entries from matchers in SecurityConfig . java to streamline matchers by eliminating unnecessary matching
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable the test case
fix issue with @ object and @ object in bean definition
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to potential issues
[ openwebnet ] fix notification schedule schedule time ( # 2278 )
[ java ] remove unnecessary check for socketstatus . open and socketstatus . stop
deleted the SunToolkitSubclass . java file to the class is no longer needed for the project
added a new method ` getTranslation ` to ` DefaultRenderableSorter ` and modified its usage in ` Matrix4 ` to improve translation handling and
added a new test for registering wrapper handlers before primitive types in TypeHandlerRegistryTest . java to ensure proper handling of primitive types in the type
added a method to convert an image from a PDLab to an RGB image based on the alternate color space to enhance image processing capabilities for
updated API and HOME _ URL constants to use BuildConfig instead of CommonsApplication to enhance configuration flexibility and maintainability by centralizing API
add health check for camel - main component to see if the health check be complete
fix a npe in the thorn chakram when there be no block
added a new test method for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure proper functionality and
updated offset initialization in FileFloatSource . java and added random test cases in TestFunctionQuery . java to ensure correct handling of document offsets and
removed the ID field from the fields in MongoRecordReader . java to remove the ID from the fields list
added disconnect method to YeelightHandlerBase and DeviceBase classes , and improved connection handling in WifiConnection to enhance connection management
added support for the " AUTO _ INCREMENT " feature in the parser to ensure proper handling of integer values in database operations
fix sharedinformerfactory . sharedindexinformer # getexistingsharedindexInformers ( ) and add a method to get an exist informer
cloudstack - 7892 : save template detail in private template instead of template detail
refactor ShadowBitmapFactory to use RobolectricBufferedImage for image size retrieval and simplify color array initialization to improve code readability and
removed deprecated constants from LauncherSettings . java and updated references in LauncherProvider . java to streamline the code by eliminating unnecessary
( chore ) camel - drools - examples : move the data file to the correct package
added a new variable ` legendTop ` and ` legendBottom ` and updated related calculations in ` PieChart . java ` to improve legend
added a check to return early if the worldTransform ' s det ( ) is zero in BaseShader . java to avoid unnecessary processing when the
added a new file MaryScriptCreator . java that reads and prints a text file to facilitate the creation of MaryScript
http : / / issues . apache . org / jira / browse / amq - 4892 - add restlistener . remote .
refactor compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve code clarity and ensure proper resource management
updated attribute keys from " xlink : href " to " href " in ComponentDescription . java to ensure consistency in attribute retrieval across the component
camel - aws2 - s3 : replace the hardcoded timeout checker name with a constant for the executor name
[ iotdb - 3892 ] fix assignmentmanager log when cluster be shut down .
added null check for span before logging in Slf4jSpanLogger . java and improved formatting in DefaultTracer . java to enhance code
trim whitespace from active options before adding it to the configuration to ensure that active options are properly added to the configuration
added a depth effect preference to enable wallpaper zoom out based on user preferences to enhance user experience by allowing dynamic depth effects based on user preferences
updated the assertion in OverseerTest to check the successful count of the overseer to ensure the correctness of the overseer
removed the ` getKernelVersion ` method and updated the ` xattrEnabled ` logic in ` LinuxFileStore . java ` to streamline
refactor ExecConstants class to improve code readability to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better user experience
added a new method ` setScanAttributeForPaging ` in ` ScanUtil ` and invoked it in ` TableSnapshotResultIterator ` to
added a check to ensure lowRange is less than 1 in Request . java and RequestV2 . java to ensure proper handling of lowRange
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and updated cache size estimation in Async
cloudstack - 4892 : fix zone id in listhosts api call ( # 4892 )
[ zeppelin - 1349 ] fix the wrong content - type header in the interpreter
replaced the conditional check for filesystem removal with a direct reference to the filesystem to simplify the removal process by eliminating unnecessary checks
changed the type of the ` obj ` variable and its usage from ` Object ` to ` String ` in ` HttpRequestBuilder . java ` to
increased poll duration from 2 milliseconds to 5 milliseconds in SoftAutoCommitTest . java to improve test reliability by allowing more time for
simonstewart : log event should not fail if the browser be n ' t ready
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the codebase
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the Ryuk version from 0.4 . 0 to 0.5 . 1 in RyukContainer . java to reflect the
updated method from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added
refactor patchy library path retrieval and transformation path handling in FMLClientLaunchProvider . java to improve code readability and maintainability by
replaced the instantiation of ` YarnClusterDescriptor ` with a method call to ` createYarnClusterDescriptor ` to simplify the code by
fix localmapstatsservice . getlocalmapstats ( ) return null if no data be present .
deleted the AllTests . java file to remove unused test suite from the project
added Unicode character constants for NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE in AbstractWordConverter to enhance
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory invocation behavior for large stack trace invocations
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java `
added an eventHandled flag to UIText . java to enable event handling for better user experience
deleted the ` Controller . java ` annotation and renamed ` Weldby ` class to ` WeldModule ` to streamline the codebase by
added monitorCaptureGroupsInEmptyCheck flag and modified conditional logic in TRegexBacktrackingNFAExecutorNode and NFATraversal
added a protected variable ` liquibaseProLicenseKey ` and removed it from ` AbstractLiquibaseMojo ` to stream
refactor setMeasuresHierarchy and setMemberReader to a separate method setMeasuresHierarchyMemberReader to improve code readability and encapsulate
add - g option to generate debug information
[ mondrian ] fix typo in mondrianproperties . java
added friend paths handling to Kotlin compiler and related classes to enhance flexibility in handling friend paths during Kotlin compilation
added aliases for BATK , BRAH , MANDAIC , and MANDAIC scripts in Character . java and Check
replaced equality checks with ` equals ` in ` ExecutionCommand ` and added a new method ` stringToExecutionCommand ` in ` StageUtils `
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a string representation of the SystemScope object
updated CSS parsing logic to handle percentage values and improved error handling to ensure parameters are between zero and one to improve clarity and error handling
added unit tests for local index reverse scan functionality in LocalIndexIT . java to ensure correct behavior of reverse scan functionality in local index operations
updated imports and method names in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry
updated messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and TvGuideActivity to use a unified getString method to
simplified condition checks in RendererUtilities . java and added a new test method in RendererUtilitiesTests . java to improve code readability and
replaced Iterator < JsonNode > with ArrayNode for ask and bid in KrakenStreamingAdapters . java and added a new method to retrieve
added error handling for SQL command execution in FileContentProvider . java to improve robustness by catching potential SQLite exceptions during database upgrade
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up the code and improve readability
updated the handling of table size calculations in ConvertJoinMapJoin . java to use a new method to compute the online data size to improve accuracy
updated the ` buildView ` method to accept a ` Context ` parameter and modified background resource handling to improve context management and ensure consistent background resource
added an ` assertAuthentication ` consumer to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpcid to null for gatewaynet if vpcid be not specify .
[ flink - 10955 ] [ test ] ignore flink savepoint test on version 1.11
corrected the spelling of " private " in multiple Java files to improve code readability and maintainability
simplified loop condition in Actor . java by removing unnecessary variable ' n ' and adding an additional condition to improve code readability and ensure
updated the superclass of BitmexStreamingExchange from BaseExchange to BitmexExchange and modified the ExchangeSpecification initialization to use the superclass '
added unit test for virtual metadata in relationshiprestrepositoryit
added null check for spatial before casting to improve robustness by preventing potential NullPointerExceptions
updated token filtered state in ConditionalTokenFilter and added position increment handling in FixedShingleFilter to improve token filtering accuracy and ensure accurate position increment
make unsafestorenode and storefieldnode thread - safe .
replaced super . putAddress with io . putAddress in BoundedMemoryIO . java to improve code clarity and maintainability by using
added an assertion to verify that the CAS event repository is empty to ensure that the event repository is not loaded before proceeding
removed the final String attributeTemplateName , attributeLine , and attributeCol parameters from AuthenticationAttrProcessor . java to streamline the code by elimin
added null check for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
removed the overridden method ` setTypeface ` in ` CodenameOneTextPaint . java ` to ensure that the ` setTypeface ` method
added open method implementations for AzurePinotFS , LocalPinotFS , HadoopPinotFS , and PinotFS classes to enhance functionality
danielwagnerhall : remove deprecate webdriverrunner # fail ( string )
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a private boolean flag for ` useConstructorMappings ` instead of a single instance of ` ResultObject ` to
updated SQL syntax in CreateTableGeneratorTest to include quotes around the table name reference to ensure consistency in SQL syntax for better readability
updated filtering logic in VectorizationContext . java to handle PRIMITIVE and BOOLEAN cases to ensure proper handling of filter expressions in the vectorization
updated the generic type declaration for ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety and
replace ` new ReorganizeTableStatement ` with ` modifyDataTypeStatement ` in ` ModifyDataTypeChange . java ` to streamline table statement
updated cluster name handling to use constants instead of hardcoded values to improve code readability and maintainability by standardizing naming conventions
refactor connection handling in PeerGroup to use Throwable instead of Exception and improve error logging to enhance error handling and provide clearer feedback during connection
added conditional logic to set the style based on the length of styleStrings to ensure proper styling behavior based on the presence of specific styles
fix datafixer and mcedditschematicreader to use adventure nbt converter .
updated the return statement in NoToStringOnStringType . java to clarify the purpose of the return statement for better readability
8274889 : [ testbug ] testthreadfailure . java fail on slow machine due to memory leak
refactor retry logic in Invoker and add DataProviderRetryAnalyzer and DataProviderTest classes to improve error handling and enhance test coverage for retry
updated the return value from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` in BucketStateIEEE754 . java to
simonstewart : add no - op method to webdriverbackedselenium
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated its implementation to simplify the ` doPrintEntry ` method
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks to ensure ` dialog ` , ` frame ` , and ` opaque ` properties are set in both ` Dialog ` and ` Dialog `
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure that the ` state ` variable
added RedisStandaloneConfiguration and RedisPassword handling in RedisObjectFactory to enhance configuration flexibility for Redis connections
fix issue with delay message not be send to the chat room .
replaced the instantiation of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method calls to
refactor FileOperationsHelper to use a OperationsService for creating share operations instead of direct execution to improve code organization and maintainability by utilizing
removed unnecessary dependency on isInjected in BeanDefinitionInjectProcessor . java and added Jakarta Inject annotation in FieldPropertyInject . java to
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` in ` ClassicPlotManager . java ` to improve
added a null check for the exception in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions
tiff : add support for read interop sub - directories with interop sub - directories
added support for the ENABLED _ LS case in VersionedTargetGraphMode and updated executor assignment logic in VersionedTargetGraphCache to improve dependency management and
added a condition to check if the video format is a video in DLNAResource . java to ensure proper handling of video formats in the
refactor AutoMlClient and AutoMlClient classes for improved readability to enhance maintainability and clarity of the codebase
added a load flag to LwjglNativesLoader and modified the load method in LwjglNativesLoader . java to
added support for an escape parameter in CSVRequestHandler and adjusted encapsulator and character handling to enhance flexibility in handling escaped characters and improve error messaging
added validation for the authorization code grant type in ClientRegistrations and updated corresponding test cases in ClientRegistrationsTests to ensure that the authorization code
updated exception handling in Throwable and SuppressedExceptions classes to include additional context and improved error messaging to enhance error reporting and provide clearer context
updated SQL query in DerivedTableIT . java and changed iterator parameter in ClientAggregatePlan . java to null in ClientAggregatePlan . java
added a new key " RSquare " to the regression map in RegressionEvaluator . java and implemented a corresponding test in StreamExpressionTest
added request header handling to ThreadContextMDCServletFilter to enhance security by allowing customizable request headers
replace direct casting of ' work ' with a local variable ' mapWork ' in SparkPlanGenerator . java to improve code readability and maintain
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by encapsulating
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test case in JwtIssuerAuthenticationManagerResolverTests to improve cache efficiency
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
llvm : add support for invoke member in cxxmethodstest .
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline the test execution by eliminating unnecessary delays
added a new file ` KernCrash . java ` that implements a custom font rendering with a kerning crash to facilit
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure that the test does not fail gracefully
added a method to retrieve network interface addresses based on a boolean flag to enhance flexibility in retrieving network IP addresses based on the specified prefix
cancel task when a housekeeper be shut down
updated the method call from ` getClientAddress ( ) ` to ` getSlaveOffset ( ) ` in ` GroupTransferService . java ` to
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method in the ` org . map
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added logic to validate max age validation for non - leap years in ValidatorTest . java to ensure proper validation of max age fields based on the
added GrblLookups for handling " error : " responses in GrblController . java to improve error handling and provide clearer
updated the return statement in Workspace . java to conditionally display the home button label based on screens to enhance user experience by providing a
removed the ' count ' parameter from the getTrades method and related calls to simplify the method signature by eliminating unnecessary parameters
replace ` stripAnsi ( ) ` with ` stripAnsi ( ) ` and modify flush logic in ` ConsoleReader . java ` ,
removed the " . jdk " suffix from the path in the jdkPath assignment to simplify the path construction for better readability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` across multiple files to improve code read
updated JFCModel and Configure classes to accept a logger for warning messages to enhance debugging capabilities by providing more informative logging for missing control settings
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - positive to prevent potential errors
added methods to create and drop views in TestUtil . java and implemented a test for view privilege retrieval in DatabaseMetaDataTest . java to enhance
added platform - specific checks for expectStableFloats and expectStableDoubles in NaNTest . java to ensure tests are expected and skip
added a new file ` DesktopTaskbarUIController . java ` and modified ` TaskbarManager . java ` to utilize it to
add progresskeeper to update install button state in modpack api
refactor files . java to improve code organization to enhance maintainability and readability of the codebase
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and update GrpcServerAutoConfiguration to use final classes to improve code clarity and
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and removed the ` @ FunctionalInterface ` annotation to simplify the
fix resourcepackloader to use modid instead of file name
chore : update gapic - generator - java version to 2.1 . 0 ( # 663 )
added two overloaded ` grow ` methods to the ` Cell ` class to provide functionality for growing cell data
refactor DefaultInputHandler to use generics for key binding and action handling to improve code readability and maintainability by reducing duplication
add try / catch to prevent test failure
replace ` long [ ] [ ] ` with ` byte [ ] [ ] ` in ` MetricsMemoryTester . java ` and add a
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a new boolean parameter ` securityEnabled ` to the ` MappingsTable ` class and updated related methods in ` MappingsTable ` and
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the value of DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable the dump to
updated the method signature of ` codecNeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` codecName ` to
[ java ] use logbufferdescriptor . isconnected ( ) in networkpublication . setproducerlimit ( ) so that it do n '
added a condition to check if no info is present in the output options to ensure proper handling of database information based on output options
enable ssl = false by default for presto uri
added a new import for DOMOutputOptions and modified the buildDOMSubtree method call to include additional output options to enhance the flexibility of the
refactor assertions in Assert . java to improve code readability and maintainability
added ` topic ` and ` retain ` parameters to the ` Publish ` and ` Publish ` classes and updated the ` Publish ` class to support
added ` testCaseName ` to the JSON output in ` EventSerializationTest . java ` to enhance serialization capabilities for test cases
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 0 for ssl _ ctx
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replace ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the latest
changed log level from debug to trace in FirmwareUpdateService . java to improve logging level for firmware update handler availability
added unit tests for retrieving null values for date and timestamp in GetObjectTest . java to ensure proper handling of null values in database queries
refactor string handling in StringSubject and Subject classes to use a local variable for better readability to improve code clarity and maintainability by
added a test method to validate repository permissions for multiple teams in UserModelTest . java to ensure correct handling of repository permissions for multiple team
added a new file ` Test7088020 . java ` containing a class ` Test7088020 ` that implements method calls to
replaced the method ` matchAudienceRestriction ` with a ` Set < String > ` for audience URIs in ` Saml2ResponseValidator `
refactor cache update methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to streamline cache updates to improve code clarity and
set the ` _ stderr ` variable to ` null ` in ` StdErrLog . java ` to handle cases where ` _ stderr ` is
added a new warning for the SEPARATION _ ORDER in the BasicEventSimulationEngine class and updated its usage in BasicEventSimulationEngine to
updated the query optimizer parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to align the query optimizer with the correct
updated the aggregation table SQL execution in PhoenixHBaseAccessor and added a new property for hbase . normalizer . enabled in Upgrade
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added a test for setting and getting BluetoothClass in ShadowBluetoothDeviceTest and implemented BluetoothClass handling in ShadowBluetoothDevice to
fix checkstyle issue in net / glow / glow - player / uuidlistfile . java
feat ( sum ) : fix error message when list be null or empty
replace graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to ensure
updated coreNodeName construction to use getCoreName ( ) instead of getNodeName ( ) to ensure consistent naming across node properties
chatactivity : remove refresh request before update the contact list
refactor TaggerParserPosTagCompatibilityITest class to improve test structure to enhance maintainability and readability of the test code
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
added a new class T7005671 with multiple null casting tests to ensure proper handling of array types in T7005671 to improve type
updated superTriangle calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTri
refactor multiple Java classes to include @ Override annotations to improve code clarity and maintainability
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability
replace setState method calls with onYellowZoneMadeAvailable and onYellowZoneProtected methods in StackOverflowCheckImpl . java to improve
added new shadow methods for ` Robolectric ` and removed deprecated methods from ` ShadowContentValues ` and ` ShadowAbstractCursor ` to
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` in ` BKDWriter . java ` to improve performance by using a
added a ` script ` variable to the ` getInstance ` method and updated locale initialization logic to ensure default locale is initialized only if it is null
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to reflect the last set text alpha instead of the current text
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to clarify the purpose of the warning
updated DefaultConfigurationTestSuite and TokenRevocationEndpointTest to use UaaJunitSuiteRunner for suite execution to improve test suite clarity and
trim whitespace from token tokens in GzipFilter . java and update test parameters in GzipFilterDefaultTest . java to ensure consistent parsing of file types
reformatted the assignment of the _ outputType variable to improve code readability and maintainability
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the latest
replaced ` Handler ` with ` Executor ` and ` FutureTask ` in ` ViewCapture . java ` for improved task handling to enhance
[ mary - 1357 ] add support for the ' style ' endpoint in the mary http server .
added error handling for folder creation failures in GitBlit . java to ensure that the parent directory exists and does not exist before proceeding
updated the default node discovery bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to
camel - 17575 : fix typo find by codespell on fossies . org
pdfbox - 4071 : add a private constructor for jpegutil that do n ' t work for argb
rename ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and update related functionality to improve clarity and consistency in the layout structure
refactor multiple Java classes including DalvikThrowAnalysis , DexTransformer , IDalvikTyper , PseudoInstruction ,
fix ( prettyprinter ) : handle implicit type parameter in defaultjavaprettyprinter
[ hotfix ] [ driver ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery classes to remove unnecessary carriage return characters to
replaced ` evictionCounter ` with ` AtomicLong ` and updated related methods in ` ConcurrentLRUCache ` and ` FastLRUCache
replaced the method ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` SourceTab . java `
replaced localHost check with intendedDestination check in NetworkAddressManagerServiceImpl . java to simplify the condition for checking the type of intendedDestination
fix ( opengrok ) : set dataroot and sourceroot in mainframe
added constructors for ` MarkedClientEnabled ` and ` MarkedServerEnabled ` in ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrap
refactor TableEnvironment class to improve code readability to enhance maintainability and readability of the code
simplified the timeout setting in MapperBuilderAssistant and adjusted the fetch size in MappedStatement to improve code readability and maintainability by
removed the ' hangingTscTimeout ' parameter from multiple method signatures in TypeScript2JavaScriptTranspiler and TypeScript2JavaScriptWith
added GeoLocationRequest and GeoLocationResponse serialization classes to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization for geolocation requests and responses
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to ensure
added a new test method ` testJXL ` in ` ExcelParserTest ` and removed an exception throw in ` SummaryExtractor ` to ensure
ggbscript : do n ' t trigger concurrent modification in setvalue ( )
[ java ] fix race condition in tcp nio connection . close ( ) .
added checks to ensure that the actual and actual values are not true in GuavaOptionalSubject . java and corresponding tests in GuavaOptionalSubject
added VERTICAL _ SWIPE _ INDICATOR and modified mMidProgress and mMidAlpha calculations in ShelfScrimView
added a null check for the ' nav ' variable in MatDefEditorlElement . java to avoid potential NullPointerExceptions when ' nav ' is
ggb - 280 fix for image positioning
refactor ErrorOccuredInOnExceptionRoute class to improve error handling logic to enhance reliability and maintainability of exception handling
updated scheduling method from ` scheduleAtFixedRate ` to ` scheduleWithFixedDelay ` and changed log level from info to debug in ` Astro
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to simplify the code by
added @ ignore annotation to jmsjdbmsxatest and jmsjmsxaloadtest to avoid test hang
updated import statements in GuiceFactoryTest . java to include specific Google inject classes to enhance dependency management and improve code clarity
added methods to retrieve and set system features in RobolectricPackageManager and corresponding test cases in RobolectricPackageManagerTest to
added a new constant ` PROP _ PATH _ POSTFIX ` and refactored path property handling in ` RCAFrameworkLoader ` to improve
removed logging of cancellation watch dog in Task . java to streamline cancellation process by eliminating unnecessary logging
added a null and empty check for enumerationValues in RADProperty . java to ensure enumerationValues is set to null to prevent potential NullPointerExceptions
refactor variable names and conditions in BoxBuilder and InlineBoxing classes to improve clarity and functionality to enhance code readability and maintainability
replaced the method ` collectAndSendTelemetryData ` with ` collectAndSendTelemetryDataAsynch ` and added a method to
removed conditional logic for altering the ITEM _ TABLE column in UpgradeCatalog260 . java to streamline database upgrade process by eliminating
updated error messages for index , temp resources , and index directories in BaseTableDataManager . java to improve clarity of error messages related to
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added a line to append the selector ID to the key in Matcher . java to improve clarity of the matching process by including the selector ID
reformatted debug log statements in GouraudShadingContext . java for improved readability to enhance code clarity and maintainability
updated alpha channel constants and added methods to manage taskbar visibility to improve UI responsiveness and control over taskbar visibility in the application
removed redundant whitespace in KeyExchange . java to improve code readability and maintainability
added a check for ` JdbcConnection ` before executing the ` version ( ) ` query in ` CockroachDatabase . java ` to
refactor file index handling in ServerMainTest . java to use a variable for better clarity to improve code readability and maintainability by
added ` getMediaRecorderingMimeType ( ) ` methods in ` CodenameOneImplementation ` , ` MediaManager ` , and ` Display `
make the useshaders ( ) method public and remove ConfigHandler from RenderTileEnchanter and RenderTilePylon classes to allow
updated the bindable filter condition in DruidAdapterIT . java to include an OR clause to ensure compatibility with the latest version of the Bind
reformatted the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
updated formatting and added configuration properties in XMPMetaParser . java to improve code readability and maintainability
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop for checking the presence of " < script > " in the result to improve code readability and
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic to improve clarity and
replaced calls to ` getTemplateProperty ` with a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve logging clarity and reduce log verbosity
refactor ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to return ` HubRegisterResponse ` instead of ` void ` to
replaced bitwise operations with Byte . toUnsignedInt ( ) across multiple classes to improve code readability and maintainability by using Byte . to
fix checkstyle issue in net / opentracing / opentracingtransactionproducer . java
updated the default cache value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure the caching mechanism uses the correct cache
changed the default value of rangePannable from true to false to disable range pannable functionality in CategoryPlot
update work mode handling logic in AllAppsContainerView . java to ensure proper management of main and work modes based on the current page state
changed variable declarations for GLCaps , GcodeRenderer , and FPSAnimator in Visualizer2TopComponent . java to improve code readability
added import for CancellationException and handled it in FunctionTest . java to ensure proper handling of cancellation exceptions during testing
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to allow subclassing of constructors
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper handling of unseq merging during compaction
updated currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to reflect the current currency as BTC instead of
refactor HibernateDTOProjectionTest and JPADTOProjectionTest for improved clarity and consistency to enhance code readability and maintainability
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
removed an unnecessary line break in the onComplete ( ) method call to improve code readability and maintainability
update aws module to use @ jsonpojobuilder instead of @ jsondeserializer
added support for BIG _ DECIMAL value handling in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
updated method parameter names from ' inner ' to ' javacProcessingEnvironment ' in TreeBackedProcessorWrapper . java to improve clarity and
added import statement for java . lang . annotation . Annotation and implemented printing of annotation values in ParameterInfo . java to improve code clarity and
added support for ACC3 streaming in the PlaybackController and updated the video seeking logic in VideoManager to improve audio playback handling and
added a new HashMap to store the value of a null value and set it to a JSON response to enhance the HTTP response to indicate that the
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to indicate that Commons DBCP
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL queries with
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package structure for multiple classes from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck
fix issue # 358 , use round instead of round for gap
updated the executor and scheduler initialization in ClientConnector to include unique names to improve clarity of thread and scheduler configuration for better debugging and debugging
refactor ViewResultsFullVisualizer to use JSplitPane and JCheckBox for improved layout management to enhance user interface responsiveness and
added descriptions for user ' s phone numbers and their corresponding resources in ScimUserEndpointDocs . java to improve clarity and organization of user
added private constructors to DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes and updated method visibility in IndexFiles and SearchFiles classes
added null checks for responseMap in JsonHttpPropertyRequest and handled HTTP status codes in URLStreamProvider to improve error handling and provide clearer
refactor SolrRequestHandler class for improved request handling to enhance code readability and maintainability
added a condition to check for DEFAULT _ PARALLEL in XmlSuite . java to ensure that the ' parallel ' variable is not null
[ hotfix ] fix checkstyle violation in test / vmware / testvmware / testvmwarefactory . java
added a check for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to ensure proper handling of SCARD _ E
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system out checks for better test coverage
camel - 1368 : camel - bindy - add support for list < string , list < object > > to the bindykey
change default value of jabrefpreferences . useowner and jabrefpreferences . usetimestamp from true to false
replaced ` Runnable ` with ` ThrowingRunnable ` in the ` runAndCheckException ` method to ensure that the ` ThrowingRunnable `
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14836 - configuring endpoint should set property on endpoint and not configuration object - aws
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval in Liquibase
change default value of proxy . cert . validity to 90
added smoothDelta and lastDeltaUpdate variables and updated related calculations in ThreadHandler . java to improve the responsiveness of the frame and track
added null check for paginator in HttpBatchReader and modified URL construction logic in HttpScanBatchCreator to ensure proper handling of table specifications and improve
added null check for CompactionInfo client in Worker . java and implemented a test for findNextCompact method in TestWorker . java to ensure
updated fragment state handling in ShadowFragmentActivity and added a test for onSaveInstanceState method in FragmentActivityTest to ensure that fragment state changes are
reformatted code for better readability and consistency in BatchResourceFactoryBean . java to enhance code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper handling of color references in the Android color resource loader
added error handling for ` NoResultException ` in ` getSingleResult ( ) ` method of ` AbstractJPAQuery ` to improve robustness
refactor code to use a single variable for the owner instead of a single variable for clarity to improve code readability and maintainability by
updated the instantiation of ` depthPref ` to use ` LawnchairApp . getInstance ( ) ` instead of ` l ` to ensure
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
modified the parameters of the ` updateTotalEnergyAverageUsage ` method to remove the ` now ` parameter to simplify the method signature by directly
added null checks for extensions and extensions in ExtensionStack . java and created a test for it in ExtensionStackTest . java to improve robustness
rxjava3 : fix flatmap . flatmap do n ' t dispose on cancel .
added connection manager timeout settings in MultiGetRequest and updated connection manager initialization in ControllerStarter and ServerTableSizeReader to improve connection handling and
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
updated import statements and variable name from NewModelTest to ModelTest in LwjglDebugStarter . java to align with the new
removed duplicate fetchers addition in EdgeSyncCursor . java and updated image inline method in BaseImageService . java to streamline the code by
added a test for output hash calculation when cache is not writable in CachingBuildEngine to ensure that the output hash is calculated when the cache
camel - 1748 : camel - netty - add option to disable use bytebuf by default .
updated the method call to use the fully qualified table name instead of the old name to ensure the correct table name is used for altering partitions
improve error message when vertx instance can not be create
add unit test for color type handler serialization and deserialization
refactor StreamEx class to improve code readability to enhance maintainability and readability of the code
removed timeout settings for spec query and lock in SessionImpl . java to streamline query timeout settings for improved performance
added a new file ` StaticLoggerBinder . java ` implementing the ` LoggerFactoryBinder ` interface to facilitate logging functionality in the
replaced instances of ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , list ) ` in
added checks for new and old orientation in TaskbarManager . java to ensure proper handling of window orientation changes
added import for org . apache . commons . lang3 and replaced direct call to occupant . getNick ( ) with XML escaping to ensure
reformatted longStackPut method call in StoreDirect . java and added new test cases in Issue265Test . java to improve code readability
added ` @ SuppressWarnings ( " mutable " ) ` annotations and suppressed warnings in multiple Java files to improve code clarity and suppress warnings related to
[ drools - 3892 ] [ test ] add miss holder class in executionflowcontroltest
reformatted conditional statements in DLNAMediaInfo . java and FFMpegVideo . java for consistency to improve code readability and
updated the ` NBWriteServlet ` and ` TestWriteListener ` constructors to accept a boolean parameter for unlimited and unlimited states to enhance
do n ' t update total difficulty when import fail
simplified the action assignment logic in DefaultPlaybackController . java to improve code readability and maintainability
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method signatures in SecurityServicesFeature . java to improve thread
added null check for mUniformAlloc and adjusted position and distance calculations in AllAppsView . java to improve memory management and ensure correct positioning
added a check for the presence of a colon in the key before proceeding with validation to ensure that the index is correctly validated based on the
added PrincipalResolver annotation to the CasSimpleMultifactorAuthenticationMetaDataPopulator constructor to enhance flexibility in managing authentication metadata populators
replaced ObjectMapper with Noggit ' s JSON parsing in DelegationTokenResponse . java to enhance compatibility with Noggit ' s JSON parsing
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to ensure proper handling of trailing slashes in the StringBuilder
added static final PatternsMatcher EMPTY constant and methods for matching patterns in PatternsMatcher . java and corresponding tests in PatternsMatcherTest .
updated error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of the code
add potion fading to the level when the potion be water .
reformatted the call to ` beginOrAdjustReorderPreviewAnimations ` for consistency to improve code readability and maintainability
updated calculation of decreasePercent and modified formatting in ReceiptCapsule . java and ResourceProcessor . java to improve code readability and maintain consistency in
added input state checks and debug logging in AsyncContentProducer and BlockingContentProducer classes , and implemented a parameterized test in AsyncIOServletTest to
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField parameter is not null to prevent potential
added plist variable substitution support in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to enhance the functionality
fix damage and turret not work on the same team .
changed the return type of adaptOrder method from OrderCreateApiRequest . OrderCreateApiRequestBuilder to Object in KucoinAdapters . java to ensure
added a new file ` PreParseGrammarTest . java ` to test XML grammar preparsing functionality to verify the functionality of the XNI
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java classes to suppress warnings related to serialization issues in the application
added FontManager import and overridden font in ExtendedEditText . java to ensure proper font management during text editing
added null check for currentUser in AuthorizeTag . java and created a test for it in AuthorizeTagTests . java to ensure proper handling of null
camel - 1847 : camel - cxf - add check for unsafe character in uri in defaultcomponent .
added an override for the setUpData method in JDBCGeometryTestSetup . java to ensure proper initialization of JDBC geometry tests
removed the import of DumpHandler in MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] [ runtime ] add check for already closeable registry in backendrestorerprocedure
add server . rmi . create system property to make it easy to create rmi registry
replaced ` String . join ( " , " ) ` with ` StringUtils . join ( " , " ) ` in ` CompactionManager
updated QualifiersTest and ShadowApplication to use Resources for display metrics instead of hardcoded values to improve test coverage and ensure correct handling of default
[ java ] add cluster member id to service heartbeat counter to track cluster member .
added conditional handling for total thread allocated bytes in TestThreadMXBean . java to ensure compatibility with Java 21 and above
updated the evaluation logic to handle negative and positive infinity values in CustomExpression . java to ensure correct handling of NaN values and improve hash code generation
updated debug and warning logging statements in AjaxListener . java to improve clarity and consistency in logging output
added authentication and authorization routes to the AuthenticityController and created a new AuthenticityFormTest class to enhance the authentication process and validate
added assertion to check if the next node is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java to ensure
updated logger reference from ConnectionManager to HttpClientRequestImpl to improve clarity and consistency in logger usage
refactor comparison logic in DefaultTrackSelector . java for improved clarity to enhance readability and maintainability of the code
refactor RuntimeSerialization class for improved performance to enhance performance and maintainability of the serialization process
ggb - 280 fix for image crop bug
refactor UnitOfWorkFactory for improved clarity to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` and `
tika - 1348 -- add content - type parameter to mail content - disposition - filename property
updated the URI construction in ThumbnailsCacheManager . java to use localId instead of remotePath to improve clarity and correctness of thumbnail
added support for marking and resetting input streams in the source class to ensure proper handling of input state during processing
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should not be used in future development
added a configuration property to control the visibility of error stack traces in the server to enhance user experience by allowing users to control the visibility of error
cloudstack - 4892 : add log for cleanup failure in case of domain cleanup failure
remove bailout exception for require foreign call on jvmci
[ drools - 586 ] throw unsupportedoperationexception in decisiontableconfigurationadapter for legacy drools 5 . x api
added a final modifier to the ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to use a serially execution
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to improve test reliability by allowing
updated import statements and modified parent name handling in ShadowAssetManager . java to improve clarity and correctness of resource name qualification logic
deleted files MrefStat . java and MrefStat1 . java to remove unused code to streamline the codebase by eliminating unused
added a check for blank scope in DependencyInsight . java and modified scope assignment in DependencyInsight . java to ensure " compile " is
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability by reducing
use hamcrest assertion instead of junit in tests / integration / camel - core
added methods to retrieve payment request URLs in BitcoinURI and corresponding tests in BitcoinURITest to enhance functionality for managing payment request URLs in the
[ calcite - 383 ] improve error message in abstractfrompropertyvaluerangedescriptor ( # 383 )
removed duplicate calls to setFolderInfo in FolderPagedView . java to streamline code by eliminating unnecessary lines
[ jfr ] fix memory leak in jfrbuffernodelinkedlist .
refactor null value check in BasicAbstractTuple to use a for - each loop instead of a stream to improve code readability and maintainability
refactor LintUtility to use InputResource and Reader instead of Path for linter configuration loading to improve code maintainability and readability by using
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a post to a Runnable that
updated inventory tick event handling in Inventory . java to include the player ' s index to ensure the inventory tick event is triggered correctly when the player
added a new case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BAB
added multiple @ PublicEvolving annotations to StateTtlConfig . java to enhance clarity and maintainability of the code
added null check for the variable ' x ' in PreparedStatement . java and setNull method calls in Array . java to ensure proper handling of null
[ hotfix ] [ table - planner - blink ] fix describe - all usage of recordings in archivetool
replaced double quotes with single quotes in StringBuilder . java to improve code readability and maintain consistent formatting
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to verify the functionality of the ` jsonSnapshot
remove the tx and block cache from the BroadTest . java file and update the test method to improve test reliability and ensure proper invalidation
added support for " LeLensMaskOpen " and " LeLensMaskClose " commands in AmcrestHandler and Dahua
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilters instead of a single List to improve flexibility and flexibility in handling
do n ' t print stack trace for guest exception in polyglotlauncher .
replaced ` Utils . getenv ` with ` Utils . getEnvOrSystemProperty ` for retrieving the " OPT _ OUT _ TRACKING "
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility with updated serialization versions
refactor spacing handling in SpacesVisitor . java to use dropParentUntil for better readability to improve code clarity and maintainability by
# 1187 - add servercacheoptions . copy ( boolean nearcache ) and defaultcacheholder . copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and
updated KucoinExchange . java to replace LIVE _ URI with PROD _ URI and added logging for exception handling to improve clarity
refactor resource path handling and improve error messaging in SpringResourceAccessor . java to enhance clarity and maintainability of error messages
updated MICROWATT _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE _ CUB
updated the method for retrieving the vertexMask to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure the vertex
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
improve performance of tex bib entry resolver
added a method to check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s runtime
added a check for FirebirdDatabase to return a double precision data type to ensure compatibility with Firebird database compatibility
added null checks for dataSource and transactionManager initialization in DefaultBatchConfigurer to prevent potential NullPointerExceptions during initialization
add @ api annotation to unittest stubs and unittest stubs module
updated the command " ping - c 5 127.0 . 0.1 " to " ping - c 5 127.0 . 0.
refactor : use try - with - resources where possible
updated the TermScorer constructor to conditionally use PostingsEnum . NONE based on scoreMode ' s needsScores ( ) to ensure correct
[ dataflow ] fix npe in dataflowmetricstest # setmetrics ( null )
cloudstack - 4892 : add accountdatacentervirtualsearch and accountdatacentervirtualsearch to the uservmdaoimpl ( #
refactor DynamicPartitionPruner to utilize a new method for finding target OI for better clarity to improve code readability and maintain
added a method to remove build artifacts and corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to enhance functionality for managing build artifacts during execution
added checks to set the selected row and row selection interval in the ThrustCurveMotorSelectionPanel to ensure that the selected row is
replace assertthrows ( ) with assertthrowsarraystoreexception ( ) in j2cl integration test
refactor PropertySource class for improved clarity to enhance maintainability and readability of the code
added environmentName parameter and enhanced user agent handling in HttpClientBuilder and HttpClientConfiguration to improve configuration flexibility and flexibility in HTTP client configuration
refactor session handling in MemorySessionStore to use a new restore method to improve code readability and maintainability by encapsulating session management logic
updated assertions in IssueTest . java to include a descriptive message and changed the type of results from HashSet to Object in Reporter . java to
updated ByteArrayDataSource initialization to handle null file content type to ensure proper content type is used when file content type is null
activerequest do n ' t send activationrequestdenied event to character .
added @ SuppressWarnings ( " serial " ) annotations to method implementations in GraphApplet . java to improve code readability and maintainability
added a new method ` updateTaskViewsSnapshotRadius ` to ` RecentsView ` and updated its usage in ` TaskView ` to
added logging functionality and modified schema generation in StaticMicroserviceVersions . java to enhance debugging capabilities and improve schema generation for 3rd party services
changed the return type of the put method from void to int in ArrayMap . java to ensure the method returns the index instead of void to
updated KafkaContainerCluster to use a startup timeout instead of a hardcoded value and changed the KafkaContainer class to use a dynamic startup timeout to
http : / / issues . apache . org / jira / browse / amq - 4892 - retry message send back if consumer
updated header checking logic in StaticServerHttpHeadersWriter and added a new test case in StaticServerHttpHeadersWriterTests to ensure that headers are
added package access check before loading listener classes in EventListenerList . java to ensure proper package access handling during class loading
added a custom adapter for displaying applications and images in the ApplicationsFragment to enhance user experience by providing custom UI components
updated the ` applyIcon ` method to include null checks for ` iconView ` and ` task ` to ensure proper handling of null values for
refactor DownloadStateCursor to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
updated HibernateCursorItemReaderIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests to use JUnit 4 annotations and removed ExecutionContext
refactor DataInputStreamWithTimeout to use Future for asynchronous reading and handling of slip message queue overflow to improve performance and maintainability of the poller
added ENABLED _ TS case to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
rename networkparameters . testnet3 to networkparameters . oldtestnet for consistency .
ggb - 1369 remove unnecessary updateifinselection call in propertiesviewd
updated OnboardingPrefs handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve null safety
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for closing to improve resource management and handle potential resource leaks
pdfbox - 4892 : do n ' t allow clipping if there be no path iterator .
refactor local address assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor TemplateTransformer to use a new method ` addToRow ` for adding values to the row to improve code readability and maintainability by
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
replaced character array references with a string constant for improved readability to enhance code clarity and maintainability by using a more descriptive
refactor conditional logic for handling unexpected types in NodeGenFactory to improve clarity and maintainability of the code
refactor the stored field handling logic in IndexingChain . java to improve code readability and maintainability
fix intervalutils . parsefloorpartialtimestamp ( ) to handle nanosecond timestamps with nanosecond clause .
removed unnecessary conditional check for postedRunnableStacktraces in LwjglCanvas . java to streamline code for better readability and maintain
corrected a typo in the description of the AbstractGCSProcessor class to improve code readability and maintainability
replaced the ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization by ensuring the
updated directory retrieval methods in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " instead of null to improve clarity and
refactor FaultTolerantChunkProcessor to utilize filterCount instead of size and update related methods to improve code clarity and maintainability
updated method signatures in FileWithTabs and refactored file handling in T4994049 to improve code readability and maintainability by
refactor terminal type checks in ConsoleReaderTest to use assumeTrue method to improve readability and maintainability of the code
remove unnecessary check for admin user in getfeedbacksessionsaction
corrected the calculation of newSelection and adjusted the threshold for velocity in AllAppsView . java to improve accuracy of selection calculations and ensure accurate
do n ' t notify client on result availability when initialize threadinfo
added method calls to loadModelList ( ) and refresh ( ) in DataModelManagerDialog , modified connection handling in DbConnectionDialog , and
replaced hardcoded buffer size with a static final constant for better readability to improve code readability and maintainability by using a constant for
refactor segment size calculation in DocumentsWriter and add a test for no documents index in TestIndexWriter to improve accuracy of segment size calculations
added dvert handling to the validation logic in ArmatureModifier . java to ensure proper validation of dvert values in the blender context
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replaced the instantiation of UnsupportedOperationException with a final variable to avoid filling in stack trace to avoid filling in stack trace
replaced the calculation of line height with a stream - based approach to calculate the average of lines to improve code readability and maintainability by
refactor RotationTouchHelper to accept a DisplayHolder parameter instead of using a singleton instance to simplify the constructor and improve code clarity
added a check for already quoted characters in the valStr processing logic to ensure proper handling of quoted strings and avoid potential errors
replaced Long . valueOf with IdConversion . convertToLong in ServletHandlerInterceptor . java and updated serverTracer . setStateCurrentTrace method parameters to
added a new test method ` testSmall ` and a new test method ` testBig ` in ` ServerDatagramConnectorTest . java `
updated the substring method call in TestSqlEntityProcessorDelta . java to correct the index calculation for the COUNTRY _ CODE _ s to ensure
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
corrected the spelling of " e " to " ev " in ResourceSetRegistrationEndpoint . java to ensure consistency in naming conventions and
modified the doBefore method to accept a boolean parameter and adjusted the IndexSearcher instantiation to improve code clarity and maintainability by using a
added a new JFrame and JTextArea imports and implemented a GUI test for the GcodeTable functionality to enable and display a number of
replaced the constant ` WEBAPP _ CONNECT _ TIMEOUT ` with a configuration variable ` getConnectTimeout ( ) ` in the ` Indexer
updated various Java files to improve type safety and clarity to enhance code readability and maintainability
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future updates
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to clean up the code and
print fiat and btc currency in desktop output
[ s3 ] validate the hostname of an account name when modify an account id .
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality in the account proxy
refactor ServerSpanThreadBinder for improved clarity to enhance maintainability and readability of the code
updated user pointer handling in BulletPhysics . java and modified block positioning in BlockItemSystem . java to improve user interaction accuracy
updated the property name from " Location " to " the _ geom " and " number " in Csv2Shape . java to improve clarity
replace callGasWord with gasCost in VM . java and remove unused imports in Program . java to improve code clarity and maintainability by
refactor parameters handling in the Parameters class to improve code readability and maintainability
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ignore null values in the piePlot class
refactor bundle loading logic in ResourceBundle . java to improve clarity and efficiency to enhance code readability and maintainability by reducing duplication
pdfbox - 4071 : fix typo in taggedptool . java
do n ' t allow oneditordialog when execute script and a freeplane action
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has been modified in the authentication process
added a new file ` TestSealedObjectNull . java ` that tests the ` SealedObject ` class to verify the behavior of the
renamed the method ` onOpen ` to ` setResponse ` and added a ` succeeded ` method in ` ConnectPromise ` to improve clarity
replaced instances of ` Tag . SNOW . isTagged ` with ` SNOW . contains ` in ` BlockEventListener . java ` to
added an ID field to the CryptsyPublicTrade class and updated related methods to include the trade ID in the trades list to enhance
added a try - catch block to close the synchronized MSC connection in HiveStreamingConnection . java to ensure proper resource management and prevent potential memory
use random ( ) . nextlong ( ) in glowserver . seed ( )
added a new device profile for Nexus 5 in DynamicGrid . java to enhance user experience by providing additional device profiles for the Nexus 5
fix refcount . takeuntil to disconnect on refcount .
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve code clarity and maintainability by using ReflectUtil for
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in FormatToken and FormatVisitor classes , and updated related logic in FormatVisitor
updated file existence checks and added tests for handling empty and non - empty project files in SaveTask and SaveAndLoadTaskTest classes to ensure
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during method invocation
log4j2 - 1349 add support for mutablelogevent in smtpmanager . add ( logevent )
replace LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper formatting of padding properties
replaced multiple instances of ` createContext ( getUser ( headers ) ) ` with a single call to ` createContext ( ) ` in multiple
improve handling of exception handler for jimple catch .
updated error messages in AndroidPlatformTarget . java to include additional context about build tools and Android SDK manager to improve clarity and provide clearer
increased cacheSize from maxMemory / 16 to maxMemory / 8 in OmniNotes . java to increase cache size for better
added a condition to check if ' start ' is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
do n ' t throw npe if the keystore be n ' t available
updated the server socket initialization and modified the URL assertions in UpstreamCheckUtilsTest . java to use a dynamic port instead of a hardcoded
ggb - 1349 fix bug where panel dim be n ' t set correctly
added conditional checks for shader and tessellation capabilities in GLRenderer . java to ensure proper handling of shader limits based on OpenGL capabilities
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
do n ' t send save - all notification if the project do n ' t exist
updated ZQLJobManager to use UTF - 8 encoding for JSON output to ensure proper handling of character encoding in JSON output
added a condition to check if args length is greater than zero before verifying if it is an instance of Table to avoid potential ArrayIndexOutOfBoundsException when
replace hardcoded header values with a constant ` PREFIX ` in ` FakeOHeaderDecoder . java ` to improve code readability and maintainability
added multiple @ Deprecated annotations to several Java source and plugin classes to indicate that the suffix strategy option is deprecated and should not be used in the
removed unnecessary debug log statements from DerbyDatabase . java to clean up the code and improve readability
add a timeout to the cep test so that it do n ' t fail on slow machine .
replaced parallelStream ( ) method with stream ( ) method in PersonNameSuggestionProvider . java to improve performance and readability of the stream
updated the condition for handling ROLLBACK operation and added a check for the Liquibase hub mode to ensure that the API key property
added constants for IBM J9 VM and OpenJ9 VM version in Constants . java and implemented a test for version information in TestDD
refactor error logging for adding fonts in FontFamily . java and add a new DebugFonts . java class for testing to improve clarity
updated import statements in ALPNNegotiationTest . java and added HTTP _ 1 _ 1 check in NegotiatingServerConnectionFactory . java
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control in HTTP
added a new Java file ` Test6741426 . java ` that implements a Runnable for JComboBox and JTextField to implement a GUI
updated the assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve error reporting by providing more informative
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to prevent potential NullPointerExceptions during directory operations
added package declaration for S3CopyObjectRequest . java in the package com . cloud . bridge . service . core . s3 to enable
removed the accentColor parameter from multiple methods in SettingsActivity to simplify method signatures and improve code readability
updated the expected error message in TemporaryFolderUsageTest to include the file at the root directory to improve clarity of error messages for better debugging
replaced usage of ClassTypeInformation constants with ClassTypeInformation constants in MappingMongoConverter . java to improve code readability and maintainability by
add address validation to clientnetworkconfig . addaddress ( string , null )
added a new entry " keynectisrootca [ jdk ] " to the VerifyCACerts . java file to enhance security by
return the output count of the compute method in CompiledPipeline . java instead of void to improve performance by avoiding unnecessary method invocation
added a conditional check to set the menu ' s mode based on popup state before setting the menu ' s mode to ensure the menu is only
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added two new test files , FinalizerInfoTest . java and HeapInfoTest . java to implement and test the finalizer - info functionality
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor compensation handling to check for a custom address before retrieving the compensation model to improve code readability and maintainability by reducing
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to BatchValidateSignContractTest . java to temporarily disable the test due to memory leaks
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
updated query handling in RetweetActivity and Search classes to replace " @ " with " from : " to ensure correct handling of " @ "
removed a conditional check for ` forRebalance ` in ` SimulatorDiscoverer . java ` to streamline the code by eliminating
added a post mapping for importing YubiKey accounts in the YubiKeyAccountRegistryEndpoint to enhance account management functionality by allowing users to save
updated shader configuration from " texture " to " tex " across multiple files to streamline the shader management and improve error handling for asset resolution
added null checks for ` cnt ` in ` paintOnTopLoop ` and adjusted padding logic in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol class to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before setting the caption in HierarchyBase . java to avoid potential NullPointerException when subName is null
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align data
added a null check for the sim object before accessing its properties in CustomExpression . java to avoid potential NullPointerExceptions when sim is null
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ( ) ` to
added a new test method ` testCase4 ` to ` PostgresTest . java ` to verify the functionality of the ` countdown `
replaced double quotes with single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintainability
replaced instances of ` LINE _ SEPARATOR ` with a constant for line separators in ` DefaultJavaPrettyPrinter ` and ` CommentTest ` to
simplify singleimplementorsnapshot usage by use atomicreferencefieldupdater instead of atomicreference
added null checks before adding queries to the query list to avoid potential NullPointerExceptions when excludeing queries
add bridge support to the thinghelper ( # 1748 )
replaced ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` in ` Ktab . java `
added a check to ensure the file output stream exists before proceeding to avoid potential errors when accessing the file system
added date parsing logic for date formats in DateConverter . java and corresponding unit tests in DateConverterTest . java to ensure proper parsing of date
added assertions in SpringDataJPALockTest and implemented a query in PostRepository to validate post retrieval based on a specific slug to ensure that
changed the data type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for the
added SimpleClientHttpRequestFactory for connection and read timeout settings in ClientRegistrations . java to enhance HTTP request handling by allowing dynamic connection and read
updated file path handling and added assertions in SourceTest . java and Source . java to improve clarity and accuracy of file existence checks
no need to set ` ` graalvm . version ' ' system property to ` ` graalvm . version ' '
added access and refresh token validity settings in ClientAdminBootstrap . java to ensure proper configuration of access and refresh token validity values
added a condition to return the default SDK version if the Android API version is greater than zero to ensure compatibility with the latest Android API version settings
removed ' this . ' prefix references from method calls in PropertyPlaceholderHelper . java to simplify code and improve readability by eliminating unnecessary
updated the formatting of the " Subject Public Key Algorithm " string in Resources . java to improve readability and maintain consistency in formatting
refactor ZkSolrClientTest to improve concurrency handling and assertion logic to enhance test reliability and ensure thread safety during concurrent operations
removed the import of BigInteger and added it to simpleTypes in MongoMappingContext . java to streamline the code by eliminating unnecessary BigInteger
added a condition to check if the button text equals the view in HomeFragment . java to ensure that the toast is shown only when the button
added a conditional check for MEncoderNoOutOfSync ( ) in MEncoderVideo . java to ensure that MEncoder does not out - of
updated the default event loop thread count from 10 to 15 in ConfigurationProperties . java and changed the test case in ConfigurationPropertiesTest . java to
changed access modifiers of several classes from package - private to protected and refactored feedback filtering in AdaptiveWindowTinyLfuPolicy to
added sorting functionality to the ExternalFileField class and created a new test class for external file field sorting functionality to enhance functionality and ensure correct sorting
update error message from " Invalid URL " to " Connection error " in FetcherException to provide clearer context for connection errors
updated event string generation and added source attribute handling in OpenRocketSaver , DocumentConfig , and FlightDataBranchHandler classes to improve
changed the access modifier of the check method from private to protected to allow subclass access to the check method for better encapsulation
added synchronization handling for file synchronization in FileActivity to improve user experience by handling conflict scenarios during file synchronization
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path encoding to improve URL handling and ensure proper encoding of
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the client
updated the total variable initialization and calculation logic in IntHashSet . java to ensure accurate calculation of total based on the number of values
added a conditional check for lock before updating feed entries in FeedRefreshUpdater . java to ensure proper handling of lock timeouts during entry updates
refactor conditional statements for determining user principal values in SolarisAclFileAttributeView . java to improve code readability and maintainability
refactor edge creation and sorting logic in LatLonTree . java to improve efficiency and maintainability of the code
added IOUtils . closeQuietly ( is ) in ZkCLI . java to ensure proper resource management and prevent potential resource leaks
update bibtex parser to use x0d and x0a instead of \ n
added support for strict property parsing in the properties file to enhance flexibility in parsing properties based on user input
[ micronaut - 4892 ] add support for @ constraint ( alwaysinvalidconstraint )
camel - 14836 : camel - http4 - update the verifier to use http4 instead of http
added a method ` waitForThingsToLevelOut ( 300000 ) ` to ` TestCloudPivotFacet . java ` to introduce a
simplified conditional statements in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate future development
changed the data type of the ` details ` variable from ` String ` to ` StringBuffer ` and updated the string concatenation method to improve performance and
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] : return action . abort when record dispatch complete .
added checks for the ' cacheKey ' and ' cacheLookup ' attributes in EntityProcessorBase . java and updated related tests in TestCachedSqlEntity
added a new file PutfieldError . java that demonstrates throwing an IncompatibleClassChangeError to demonstrate the use
cloudstack - 3892 : fix a bug that cause connection to fail to connect if the address be already in the same host .
added logging for memtable flush limits in ColumnFamilyStore and modified the flush condition in Memtable to improve traceability of memtable operations and
replaced instances of Space . build ( " " , emptyList ( ) ) with Space . SINGLE _ SPACE in multiple Java files to improve code
updated the encodedLength method signature in Flyweight . java to ensure proper handling of encoded lengths in the code
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
fix findnull deref for java . lang . integer
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated string resource return values in Utils . java to improve clarity and consistency to enhance readability and maintainability of the code
updated type checks for DeepShortcutView in Utilities . java and FloatingIconView . java to improve handling of DeepShortcutView and enhance drawable
changed the type of ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and updated its
renamed methods from ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuick
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use a constant for the CobERTURA project data
added a check to ensure the EventBus is registered before registering the sticky to ensure that the sticky registration only occurs when the current instance is not
added a check for ASCII characters in the normalization process to ensure correct normalization behavior based on character length
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL update statistics in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL does not
camel - 17446 : camel - cometd and camel - ssl component should use junit4 instead of contexttestsupport
added ` attrs ( AttrKind . OK , width ) ` and ` attrs ( AttrKind . USE _ CSS , ... ) ` to the
added a line break tag to the HtmlCoreReport class to enhance readability and maintainability of the code
updated the calculation of ramBytesUsed to handle null scores in DocSlice . java to ensure robustness by avoiding potential null pointer exceptions
added custom type adapter for collection element serialization and deserialization in CustomTypeAdaptersTest . java to ensure proper serialization and deserialization of custom type adapters and
added extraData setting in MergeCoordinator and a new test for it in MergeCoordinatorTest to ensure correct handling of extra data from mining parameters
added a static final ` numArgs ` map to store file and output paths in ` DependencyParser . java ` to improve flexibility by allowing
refactor PathParamServerEndpointConfig class for improved readability to enhance maintainability and facilitate future updates
corrected a typo in the variable name from " configedThreshold " to " configuredThreshold " in DefaultMigrationAddressComparator . java and
updated parameter names from ' part ' to ' partOrList ' in multiple classes to improve clarity and consistency in variable naming
( chore ) camel - benchmark - twitter : move the bootstrap css to the top of the classpath
removed the regex pattern for matching the ' v ' category in SpanishTreebankLanguagePack . java to streamline the category extraction process by
refactor entityloader to use uniqueentityloader instead of entityloader . loadbyuniquekey
hbase - 2248 fix concurrentmodificationexception in regionserversnapshotmanager and regionserverflushtableproceduremanager
pdfbox - 4892 : do n ' t call super . setSize ( w , h ) when width or height be 0
fix ( core ) : do n ' t call fillpool ( ) in hikariconfig
added ` assureMatchVersion ( ) ` method to multiple filter factory classes and initialized ` luceneMatchVersion ` to ` LATEST
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 3891 (
[ drl ] do n ' t try to parse a space after a space in the input string .
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
add a check for negative payload length and throw a close reason if it ' s invalid
move publishsubscribechannel from ' channel . config ' to ' dispatcher ' , not ' channel . config '
updated executionId type from String to Long across multiple classes to ensure compatibility with larger execution IDs in the Hive configuration
pdfbox - 4071 : fix image processing for image with large image size
added imports for MessageFormat and LocalSolrQueryRequest in SolrConfigHandler . java and removed unnecessary logging in SolrConfig . java to streamline the
increased the delay duration in mSyncResult from 60 seconds to 3 seconds to avoid too many automatic synchronizations in the synchronization process
updated the formatting of the afterConversionTime variable in SegmentV1V2ToV3FormatConverterTest . java to improve code readability
refactor path handling in QueryProcessExecutor to use Path objects instead of String paths to improve code clarity and maintainability by using a more
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve URL processing and ensure
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` interface to provide a way to retrieve the principal
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest SDK versions
replaced autoSuggestDialog with SimpleFormDialog for custom filename selection to improve user experience by using a cached file list
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to ensure
removed the collection name parameter from the stream method in MongoTemplate . java to simplify the method signature and improve code readability
updated zoom calculation and rounding in MapOverviewImageMouseHandler . java to improve accuracy of zoom calculations and ensure proper type casting
added a ` Similarity ` parameter to the ` KNearestNeighborClassifier ` constructor and updated related classes to utilize it to enhance similarity handling
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query handling by utilizing a new constant score range query
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity and consistency in
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added unit tests for BluetoothGatt ' s mtu request functionality in ShadowBluetoothGattTest . java and implemented the requestM
renamed the method ` createServletOutputStream ( ) ` to ` createServletOutputStream ( ) ` for clarity to improve code readability and
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling for unsatisfied link errors
replace HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance of processing chain management
updated Japanese and Chinese resource files to include " all " , " grouped " , and " summary " , and " summary "
updated the condition in JDBCTypeMapping to check for size greater than 1 instead of 0 and modified test assertions in JDBCTypeMappingTest to ensure
added synchronized keyword to ` addPlayer ` and ` removePlayer ` methods in ` GenshinScene . java ` to ensure thread safety when
replaced the ` isScreenReaderActive ( ) ` method with a new ` AccessibilityStateTester ` pattern for control codes and code
added a new command behavior ` COMMAND _ BEHAVIOR _ SIDE _ NAVIGATION ` to the ` MenuBar ` and
updated subscription handling in PoloniexManualExample . java and added state change logging in WampStreamingService . java to improve error handling
updated energy limit validation logic and error messages in UpdateSettingForEnergyLimitContractActuator . java to ensure proper validation of energy limit values
rename ` url1 ` to ` javaUrl ` in ` PostmanJsonBuilder ` and add protocol handling in ` UrlBean ` to improve
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to enhance flexibility in managing namespace prefix references
updated assertions in TestRange . java to use a new helper method for date comparison to improve code readability and maintainability by centralizing date
added JettySolrRunner handling in BasicAuthIntegrationTest . java and updated security data retrieval in ZkStateReader . java to enhance security
added price feed to TradesChartsViewModel and updated constructor to include it to enhance the functionality of TradesChartsViewModel by
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable
updated variable names and logic for determining the last index of a string in NativeString . java to improve clarity and ensure correct handling of negative
added file download functionality to FileDataStorageManager to enable file download functionality in the application
renamed the variable ` logChannel ` to ` raf ` and added a call to ` setLength ` to improve code readability and ensure proper
added a method ` checkIfRegistryRunning ` in ` TestLibrary ` and a method ` deleteFileWithRetry ` in ` FileUtils ` to handle registry
removed unused import statements and added startLoading ( ) call in Quick3dMain . java and TextureTest . java to streamline code and
added multiple @ SuppressWarnings annotations and removed unused variables in several Java files to improve code clarity and maintainability by eliminating unused variables
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added isolation level handling in SQLExceptionCode and modified connection isolation level checks in PhoenixConnection and PhoenixDatabaseMetaData to improve
added transaction attribute handling in AbstractStepFactoryBean and improved error handling in ItemOrientedStep and SkipLimitStepFactoryBean to enhance
replaced ` CasClient ` with ` DirectCasClient ` and introduced a new ` CasManagementSecurityInterceptor ` class to enhance security handling
removed visibility and editing of the " add category " menu item in ListFragment and added a new item in NavigationDrawerFragment to streamline the
updated method names from ` cancel ` to ` cancelMatchingOperation ` and renamed ` observeDownloadWorkerState ` to ` observeWorkerState ` to
pdfbox - 4071 : simplify code , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge to use unused sizeDp instead of a fixed size to improve clarity and accuracy of
added a validation check for the fact before updating the tmpFact variable in ConstantAnalysis . java to ensure that the fact is valid before processing exceptions
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace direct return of ArrayList with a new ArrayList instance to ensure proper initialization of spans
removed locking mechanism around database change log parsing and validation in Liquibase . java to simplify code and improve readability by eliminating
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to
added formatting for foreign key and index names in TableRetriever . java to improve readability and maintainability of the code
camel - aws2 - s3 : add uri - endpoint - override option to all the component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccountService
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
refactor push ( ) to return a boolean instead of void in multiple classes to allow for better control over push functionality based on remote settings
refactor LegacyAddressTest to read and compare strings from a file using BufferedReader to improve readability and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor push notification handling in NotificationsActivity to use a dedicated setupPushWarning method to improve code readability and maintainability by encapsulating
[ netty ] close channel in case of ioexception .
updated condition checks for ` noWarnAttribute ` , ` getValidDaysResult ` , and ` dateAttribute ` to use ` StringUtils . isEmpty (
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issues related to PHOENIX - 2840
nifi - 1357 - add timezone support to aboutdto ( # 1357 )
refactor boundary splitting logic in Splitter and StorageService classes to improve clarity and maintainability of the code
removed exception handling for reading objects in BeanContextSupport . java to streamline code by eliminating unnecessary exception handling
removed redundant synchronized block from CircuitManagerImpl . java to streamline the code by eliminating unnecessary synchronization
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using IllegalStateException instead of GdxRuntimeException
[ hotfix ] [ runtime ] move sink and source to sinkrunner interface .
updated log level from error to info in FastBindLdapAuthenticationHandler . java to improve error handling for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved clarity to enhance maintainability and readability of the code
make geofunction . getpointlength ( ) return int instead of double for freehand function .
updated the constructor signature of CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity and consistency in event handling
refactor database connection handling in SchemaCrawlerMain and add execute method in Executable to improve connection management and ensure proper resource management during executable execution
add default tl 1.2 and 1.1 . 0 a fallback for jdk16 and jdk 17
updated exception messages in CountersManager . java to correct the spelling of " labels " and " metadata " to improve clarity of error
modified audio stop logic and adjusted ndx calculation in MediaManager . java to ensure correct audio queue position handling and improve audio stop behavior
removed unnecessary conditional check before logging debug statements in HttpConnection . java to streamline debug logging for better readability and maintainability
added ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and its corresponding test in ` JpaPersistentPropertyImplUnitTests `
updated HDP - 2.1 . 1 and HDP - 2.2 . 0 references in UpgradeResourceProviderTest . java to reflect
truffle : make trufflevm . eval return object instead of symbol .
changed access modifier of ` isBinaryType ` method from private to public and updated logging statements in ` Proxy . java ` to enhance accessibility
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java
removed the priority parameter from the JavaProblem constructor and updated the findProblem method in JavaEditor . java to streamline error handling by elimin
replaced instances of ` DictionaryIndexConfig . DEFAULT _ OFFHEAP ` with ` DictionaryIndexConfig . DEFAULT ` across multiple files to standard
updated string concatenation in TableWriterTest . java to use a configurable line separator to improve code readability and maintainability by centralizing line separator
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and implemented a check in ` ParticleEffect ` to ensure that texture
added authentication and custom LDAP queries to HiveConf . java to enhance LDAP configuration options for improved user management
regenerate datacatalog : add documentation for searchcatalogrequest . scope
added import for Context and modified toggleSoftInput method calls in DetailActivity . java to enhance code readability and maintainability by eliminating
added a new test for converting primitive types to maps of primitive types in the DataTableTypeRegistryTableConverterTest to ensure correct conversion of primitive types
added a file deletion for the " memFS : fsMem . mv . db " file and updated the size calculation from 100 to 10 to
updated error messages in ContentTypeManager . java to include additional guidance to clarify error reporting and ensure resource closure is closed before filing
made the ` dropSequences ` method abstract in ` AbstractDatabase ` and implemented the ` dropSequences ` method in multiple database classes to enhance
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions when status is null
updated the assignment of the variable ' f ' in DocumentBuilder . java to store the result of the createField method to ensure the variable is
do n ' t show hierarchical icon if it ' s not in the root node .
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests ` to validate the upsert
refactor calculations for calculating midpoint in multiple classes to improve code readability and maintainability
added a method to record app launch statistics and refactored broadcast intent handling in Launcher and Stats classes to improve event tracking and ensure proper
added drawing and disposal of the graphics in JavaSEPort . java to ensure proper resource management and prevent memory leaks
[ # 2321 ] fix bug in instructorfeedbackresultspagedata ( # 2321 )
added a check for zero player ' s inventory ID in the Inventory class and implemented a test for it in the InventoryTest class to ensure that
added a conditional check for the ' found ' state before breaking the loop in ConfigDescriptionRegistry . java to ensure that the loop only handles cases
updated method calls in multiple parser visitor classes for consistency and clarity to improve code readability and maintainability
refactor TileMapRenderer to handle blended tiles more robustly to improve robustness by avoiding potential null pointer exceptions
added ` sunClasses ` to the list of class names in ` Probe . java ` to enhance clarity and maintainability of the class hierarchy
fix for geotools2d : do n ' t calculate the sum if there ' s no last point
refactor lockOnSync initialization and update throttleRate assignment logic to improve clarity and maintainability of the Throttler class
pipe : fix emzuli pipe not be able to extend pipe event handler
increased the timeout duration in ZkController initialization from 1000ms to 1000ms to allow for more time for the ZkController to
added a test method to passcode requests with client parameters in TokenMvcMockTests . java to ensure correct handling of client parameters in OAuth2
added imports for LengthFilter and CharArraySet constructors in TestRandomChains . java to ensure compatibility with Lucene ' s LengthFilter and Char
removed the JUnit Ignore import from RandomPlaneTest . java to streamline the test code by eliminating unnecessary dependencies
( chore ) camel - llvm : use integer . tounsignedlong ( ) instead of integer . toint ( )
refactor btCollisionObjectArray and btRigidBody upcast methods to use btCollisionObject . getInstance for consistency to improve code
added a copyright year build property and updated the OPENROCKET _ URL in AboutDialog . java and BuildProperties . java to enhance build
add getdistributedobjects ( ) method to jetclientinstanceimpl to get the list of distributed object info
added debug print statements in FinSet . java and updated expMOI and expMOI _ tr values in MassCalculatorTest . java
replaced TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to accurately reflect the maximum memory limit
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified the parameter name in CreateAlignedTimeSeriesPlan . java
do n ' t allow burn payout tx to be activate
updated JsonLoaderTest to use ` json ( ) ` instead of ` replace ( ' \ ' , ' ' ) ` and added exception handling
update table size check from 1 < < 30 to 0x40000000 in IllegalArgumentException to ensure that the capacity is less than 0x40000000
updated imports in ColumnSnapshotGenerator . java to use specific snapshot classes and added a null check for dataScale before setting decimal digits to ensure compatibility
removed @ AddToRuleKey annotations from multiple fields in AppleTest . java to streamline the code by eliminating unnecessary annotations
added security exception handling and modified content limiting logic in TextHelper . java and TextHelper . java to improve error handling and ensure proper content
added a new constant ` StyleWithMultipleAttributes ` and corresponding tests in ` ShadowThemeTest . java ` to facilitate attribute resolution
updated sheet name validation logic in HSSFWorkbook and added new sheet names in TestHSSFWorkbook to improve the accuracy of sheet name
replaced ` ThemeUtils . primaryColor ( this ) ` with ` ThemeUtils . elementColor ( this ) ` in ` ManageAccountsActivity
added null check for replyHandler in DefaultEventBus . java and simplified path resolution in DefaultPlatformManager . java to improve code robustness and
added binary collation functionality to MariaDbDbmsType , MySqlDbmsType , DbmsType , and AbstractDbmsType classes to
added a default implementation of the ` whenType ` method in the ` Tree ` class to provide a way to determine if a tree type is
refactor navigation logic to use a new method for retrieving user view destination to improve code readability and maintainability by reducing redundancy
replaced Response . OK with Response . temporaryRedirect in FeedREST . java to provide a temporary redirect for the application settings service
[ flink - 1357 ] [ kinesis ] improve error message when the provided deserialization schema be non - serializable
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a try - finally block to ensure the zkClient is closed in a finally block to ensure proper resource management and prevent potential memory leaks
rename methods related to icon transitions from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to
replaced direct calls to ` _ endPoint . fill ( _ buffer ) ` with a new ` read ( EndPoint endPoint , Buffer buffer )
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` for consistency to improve code readability and maintainability
modified the return type of the ` prepareStreamsToUpload ` method from void to boolean and updated its logic to ensure that the method returns a
updated comparison logic in AbstractConfigLoader and modified config model values in TestMicroserviceConfigLoader to ensure consistency in order comparisons and ensure compatibility with
added a new file ` PicOfDayAppWidget . java ` that implements a PicOfDayAppWidget to facilitate the widget
set default value of internal _ internal _ lb _ service _ offering _ id to 0 if uuid be not specify .
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and modified join condition handling to improve compatibility with Hive
add @ Deprecated annotation to multiple transformation classes to indicate that these classes are outdated and should not be used in future development
added user and password options to NodeToolCmd . java and modified JMXConnector setup to include credential settings to enhance security by allowing users to access
removed duplicate BytesRef instantiation in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated widget handling and icon caching logic in AppsCustomizePagedView . java to ensure proper icon caching based on the number of widgets
ggbapplet . getactiveeuclidianview ( ) return view _ euclidian3d instead of view
updated rotation positioning logic in GcodeRenderer . java to ensure the rotation ' s position does not exceed a minimum value of - 180 to
added a new option ` WORKSPACE ` to the ` OptionEnum ` and updated the ` TerminalClient ` to set the workspace directory to enhance
updated the file path from " . apt " to " . html " in CLIManagerTest . java to align the test configuration with the
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test clarity and maintainability by align
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to
added a assertTrueEventually ( ) method to clear the second level cache hit count in HibernateIT . java to ensure that the second
refactor EventBusHook class to improve code readability to enhance maintainability and facilitate future updates
refactor MultiPaintEventTest class for improved clarity to enhance maintainability and readability of the code
removed the final modifier from the variable mNewScale in WorkspaceStateTransitionAnimation . java to improve code readability and maintainability
refactor SyncFactory class for improved performance to enhance performance and maintainability of synchronization logic
added uniqueKey field handling in LukeRequestHandler to ensure unique key is correctly stored in the schema
added document filtering for stroke and background documents in BorderEditor and updated color handling in EditableResources to support rounding of border colors in the background
truffle : add miss @ truffleboundary to assert and not part of compilation
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , and GatewaySocketAcceptor , and modified PingPongApp
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added menu inflation for recent chats to enhance user experience by providing
changed ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
refactor scope handling methods from ` add ` to ` push ` and ` removeTail ` to ` push ` and ` pop ` in multiple
updated API and HOME URLs from " https : / / test . wikipedia . org / wikimedia / org / wiki / " to
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replaced usage of ` Collections . sort ( ) ` with direct calls to ` Collections . sort ( ) ` in multiple classes to simplify sorting
added date and time patterns " DateTimePatterns " to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for better
added a call to clear the focus on the clicked view in DetailFragment . java to ensure the clicked view is properly closed
updated the language selection logic in DescriptionsAdapter and removed unnecessary null checks in SpinnerLanguagesAdapter to improve code clarity and maintainability by
updated time zone names from " WSST " to " WSDT " across multiple files to ensure consistency in time zone representation across the application
added native methods to register global , weak , and access fields via handle in FastGetField . java to enhance functionality for managing and access fields
added null handling for UNION and NULL fields in ReflectData . java and updated corresponding test assertions in TestReflect . java to ensure proper default values
increased the timeout value from 300 to 1000 in the SedaBlockWhenFullTest . java file to allow for more time for
added a null check before calling remappingRClass in ResourceMerger . java to avoid potential NullPointerException when remapping resource resources
added constructors to HapiFhirDialect , HapiFhirH2 , HapiFhirOracleDBDialect , and
camel - 1357 : camel - http - add a connection close header to the http producer so that it can be use to close the
increased the socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to improve test stability by allowing
added an assertion to verify the final _ price _ cts is greater than zero in BaseReservationFlowTest . java to ensure that the ticket
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class for improved clarity to enhance maintainability and readability of the code
remove nestablenode cast from document . getfirstelementchild ( ) . getfirstelementchild ( )
[ optaplanner - 4892 ] fix shiftassignmentpillarpartswapmovefactory . removeif ( ) to return an immutable
[ java ] add waittoshutdown ( ) method to clusternode to wait for node to be shutdown .
change log level from warn to info in elcontextcleaner
added a new content type for " application / octet - stream " in WebdavEntry . java to enable proper handling of octet - stream content
added a method to retrieve the queue size from the delegate in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure that the delegate
improve distanceop to avoid out - of - bounds bound error
rename the ' required ' variable to ' requiredLabel ' in AbstractUITag . java to improve clarity by using a more descriptive
replaced the ` next ( ) ` method with ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to streamline
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to ensure that localVertices does not contain at least 3 points
replaced instances of ObjectMapper with ObjectMappers . newDefaultInstance ( ) across multiple files to improve code clarity and maintainability by using
added a null check for the coeff array and modified conditionals in GeoImplicitCurve . java to enhance robustness by preventing potential NullPointerExceptions
updated the method for reading Unicode names in ExternalNameRecord and added a new test case in TestExternalNameRecord to ensure correct handling of Unicode
updated the description of the JMS Destination description in AbstractJMSProcessor . java to correct the formatting of the description
added logic to exclude username and password prompts from the login prompts in LoginInfoEndpoint to ensure proper handling of login prompts in the
replaced remove method with removeIf for improved clarity to enhance code readability and maintainability
added a switch case for the action toggle spinner in PieChartActivity to enhance the visual appearance of the chart ' s animation
cloudstack - 3892 : kill vhd copy process when copy vhd to secondary storage
hbase - 2329 do n ' t create table if it have quota .
removed unused imports and added a resize method for pressure in AndroidInput . java to streamline import statements and improve memory management during input processing
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and updated the initialization of the ` javaBeanDescriptor ` to
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily skip tests that are always failing and blocking PRs
fix the hopperhock be able to place the item at the end of the block instead of the end of the block .
added authentication dialog functionality for username and password in SsoWebViewClient to enhance user experience by providing user feedback during authentication
added new methods for deleting documents and queries in TestStressIndexing2 . java to improve document deletion and query handling to enhance test reliability
[ flink - 22559 ] [ table - planner - blink ] ignore flink - 22559 test for upsertkaf
replaced ` get ` method with ` computeIfAbsent ` and adjusted the calculation of ` endPos ` in ` ResTable . java ` to improve
added JSON deserialization feature to DefaultEntityMapper to enable single - value - as - array serialization for improved data handling
updated localization information in VersionChangeLogs . java to include additional localization information to enhance localization capabilities for better user experience
updated SHORTCUT _ CATEGORIES initialization to retrieve the " CL . app . categories " resource instead of a hardcoded string to improve
updated ASTBuilderVisitor to use RelExpressionInstanceOfContext instead of ExpressionInstanceOfContext and added a new test for instance of expressions in FE
nifi - 1748 : add mime type to the flowfile write attribute for gethttp
fix npe in resourcehistorytable when create a bundle with conditional update on same resource
rename exit button to doneButton and update related click listeners in HelpActivity and SearchBookContentsActivity to improve clarity and functionality of button interactions
refactor NatsConfiguration class for improved clarity to enhance maintainability and readability of the code
updated the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter and modified related logic to improve code clarity and
improve performance of viewresultsfullvisualizer by not use boundedfifobuffer
updated drawable resource references from " ic _ group " to " ic _ chat _ bubble " in multiple adapters to improve clarity and consistency in
updated method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java `
updated test method names in MocksCreationTest . java for consistency to improve clarity and consistency in naming conventions
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow for more time for the phaser to
removed the ` BuildSlaveFinishedStatusEvent ` class and updated ` DistBuildRunCommand ` and ` DistBuildSlaveEventBusListener ` to
fix findbugs encode issue in vmwarestoragemanagerimpl . java unnecessary string concatenation
added test case for deposit workspace item without workflow
added distinct ( ) to the classpath stream in ClassLoaderSupportImpl . java to ensure that the classpath files are processed as distinct
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unnecessary method calls
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve argument processing and ensure
added a check for external tables before deleting the directory in HiveMetaStore . java and updated tests in TestHiveMetaStore . java to
updated asynchronous execution thread configurations and error handling in HiveConf , SQLOperation , and SessionManager to improve thread management and provide clearer
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use EXECUTE _ TASK _ ROLE instead of a hardcoded string to improve clarity and maintainability of task
added a new variable ` diff ` with the current configuration info in ` OperationSetTelephonyConferencingSipImpl . java ` to
move clearentries ( ) from logmodel to logview . reload ( ) .
added checks for socket shutdown status in ChannelEndPoint . java to ensure proper handling of output and input state during shutdown operations
refactor SetNullableGenerator class to improve code readability to enhance maintainability and readability of the code
camel - 1774 : fixed the issue that camel - example - reportincident do n ' t work with the servlet transport .
replaced multiple specific imports with a wildcard import and modified the form data handling in NettyRoutingFilter . java and FormIntegrationTests . java
added API operation annotations for the ` hello ` method in multiple service classes and modified the method signature to include a parameter name to enhance the API
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to improve thread safety and resource management to ensure
updated FG _ FK color from 90x0 to 200x0 in UIUtil . java to improve the visual appearance of the FG
set mp3 . required to false to disable mp3 audio support in the application
fix SecondaryIndexManagerTest to use systemkeyspace . getbuiltindexes ( ) instead of execute ( )
add ` ` pmd - eclipse - version ' ' and ` ` pmd - label ' ' to display pmd ' s about
[ hotfix ] [ test ] use ` findthrowable ( ) ` instead of ` throwable `
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future updates
added an override for the ` isCellEditable ` method in ` GeneralTab ` to ensure that the ` isCellEditable ` method always returns
added an ` isOnlyPrintCommands ` method to ` AbstractUnusedDependenciesFinder ` and integrated it into the ` JavaBuckConfig ` to
added a static variable ` tmpCount ` in ` VocalTractModifier ` and updated the array size in ` VocalTractScaling
updated import statements for BaseScalarUdfTest in multiple test files to ensure consistency and clarity in import statements
added hashCode and equals methods to UaaAuthenticationDetails class to enhance hash code and equals functionality for better object comparison
update testskeletoncontrolrefresh to use an animComposer instead of an animationchannel
rename ` NodeFilter ` to ` NodeCountFilter ` and update related method names to improve clarity and consistency in naming conventions
changed the condition to check if the sync block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure that
updated the state and type assignments in DebugExpressionParser . java from 365 to 366 and adjusted local context types to ensure correct type handling for
updated the condition for finding dependencies in ExcludeDependency . java to use stream for improved readability to enhance code clarity and maintainability by
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and updated the ` lerp ( ) ` method
initialized the ` args ` array to an empty array in ` GridHubConfiguration . java ` to ensure proper initialization of the ` args ` array
updated linker argument handling in RustBinaryDescription . java and added a new test for linker flags in RustLinkerIntegrationTest . java
simonstewart : add retry for apppage . verifystatus ( )
added configuration for the external DAG name in HiveConf and improved logging in GenericUDTFGetSplits to enhance configuration flexibility and
removed unnecessary import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
pdfbox - 4892 : make escapeprocessingoutputstream and gradledaemonexecutor thread - safe
updated the ` validateQuery ` method to accept an additional ` Object ... ` arguments to enhance error handling by providing additional context for validation failures
updated INDEX _ VERSION from 1 to 2 and refactored repository handling in LuceneExecutor . java to improve code clarity and maintainability
[ hotfix ] [ kryo ] add unit test for default kryo registration
added a null check before removing a property in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure that
refactor Boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for converting strings to Boolean objects to improve code readability and
added a call to hideCustomizationDrawer ( ) in mmm Launcher . java and ppp Launcher . java to improve user experience
refactor warning handling in TermVectorComponent to use a constant for better clarity and maintainability to improve code readability and maintainability by
added optimistic type logging and modified log statements in Compiler . java to enhance debugging capabilities and improve code clarity
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy class to enable unix socket Docker access to improve flexibility in Docker
added JUnit 5 @ Tag annotations to CloseableDoSFilterTest and CloseableDoSFilterTest classes to indicate that the test method does not
camel - 1774 : added reactivestreamsnofactivesubscribessexception to help debug the stack trace .
refactor Vectorizer and TezCompiler to use TezTask instead of MapWork for task validation to improve code clarity and maintainability
updated constructor calls in StringAppender and LogDivertAppender to include an additional boolean parameter to enhance flexibility in handling appenders by allowing the
bugfix : npe in jmetertreemodel when guipackage be null
llvm : add linkage . isweak ( ) to support weak linkage .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add test case for defaulttransactionthreadlocal
added a check for invalid operations handle in HiveStatement . java to enhance error handling for invalid operations in the server side
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - aws - secrets - manager : add a unit test base on user forum issue
refactor SimpleTree class for improved readability to enhance maintainability and clarity of the code
removed the exception message from the error response in UserREST . java to streamline the error response by eliminating unnecessary exception handling
added a new parameter ` subTree ` to the ` fromContent ` methods in the ` Result ` class to enhance functionality by allowing sub -
updated column width calculation in Sheet . java and added unit tests in TestHSSFSheet . java to ensure correct behavior of column width calculations
added configPath parameter to the Commands . less method in Builtins . java to enhance functionality by allowing configuration path for less commands
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
updated the default SSHd container image from " quay . io / testcontainers / sshd @ sha256 : 1.0 . 0
added an assertion to check if hostId is not null in AgentManagerImpl . java to ensure that the hostId is not null to prevent
refactor the handling of multi - valued columns in DefaultGroupKeyGenerator to improve clarity and functionality to enhance code readability and maintainability
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated related logic to improve error handling and ensure
refactor BCSiliconRecipes to use ImmutableSet . Builder for improved readability to enhance code clarity and maintainability by
fix typo in graphhopperconfigmixin # put ( string , object )
updated visibility logic for child in CellLayout and refactored drag exit handling in DragController and Workspace to improve code readability and maintainability
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added a new test for handling empty
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper handling of package accessibility checks in
replaced instances of ` logger . warn ` with ` logger . trace ` in ` LoggingHandler . java ` to improve logging clarity and
refactor prefix extraction logic in WhiteBlackList . java and add a new test case in Issue348 . java to improve handling of wildcard
added new imports and refactored options menu handling in GalleryActivity . java to improve code organization and functionality for managing gallery attachments
refactor MongoDBServiceFactory to use a singleton pattern for creating a MongoDBService instance to improve thread safety and avoid potential null pointer exceptions
added tests for boolean manipulation in InlineConstantMutatorTest . java to ensure correct behavior of boolean values in mutant operations
added a Blackhole parameter to the decode method in RecordTest . java to enhance the decode method ' s handling of double values with a black
fix : update gapic - generator - java with mock service generation fix ( # 119 )
updated the return type of ` getAllUnitStrings ` methods to use ` Map . Entry < String , String > ` instead of ` String `
removed the clear ( ) method call for witnesses in ManagerTest . java to streamline the database manager ' s witnesses management process
do n ' t throw prestoexception when jdbc _ error be throw
removed the " stack " property and replaced it with getter and setter functions in NativeError . java to streamline stack management by eliminating
added a check to return false if the path name starts with " . " in DrillPathFilter . java to ensure that the path is
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added clearIndex ( ) method to BasicFunctionalityTest . java to ensure proper index management during test execution
updated the constant BOLDWEIGHT _ NORMAL from 190 to 0x190 to improve visual representation of bold weights
changed ` fThreadGroup ` to be ` volatile ` and modified ` fLookForStuckThread ` to be ` fLookForSt
removed the ` final ` modifier from the ` getValue ( ) ` and ` setValue ( ) ` methods in the ` ValueResultData ` class
updated hash code and equality checks in FuzzyQuery . java to use superclass methods to improve clarity and maintainability of hash code and equality
removed debug print statements for SIMON target in PushedResourcesTest . java to clean up the code and improve readability
changed return type of several methods from List < SharedRandomAccessFile > to void in SharedOpenFilesCache . java to improve method accessibility and
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest and Schema
updated the method of obtaining attributes and principal creation in PersonDirectoryPrincipalResolver . java to ensure proper handling of principal resolution and improve clarity
changed log level from info to warn for ZigBee USB Gateway and BUS Gateway connection errors to improve logging clarity and provide more
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in hash
added a constructor to ThumbnailGenerationTask that accepts a FileDataStorageManager and Account parameters to ensure that storageManager and imageViewReference are
updated the condition to check if ` nrFound ` is less than ` count ` and ` tries ` in ` GroupSelectionQuery . java `
added a new file ` Bug1933922 . java ` that implements a recursive compilation test with a thread to demonstrate the
removed unnecessary parentheses in conditional statements across multiple classes to improve code readability and maintainability
updated character length check from 33 to 32 in FileResolver . java to ensure proper validation of control characters 0 - 31 and space characters
added a call to requestFocus ( ) in the Display class to ensure proper focus handling in the UI
refactor instructorhomepagetest to use test data instead of test data
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
replaced Crouton notifications with a result intent intent and added onPause method to MainActivity to improve user experience by providing a clearer
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to verify
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced the execution method from ` Runtime . exec ( args ) ` to ` ProcessBuilder ` to simplify the process execution process by removing the
update HintedHandOffTest to use InetAddress . getByName ( " 127.0 . 0.1 " ) instead of InetAddress . getLocal
refactor subsystem assignment logic to iterate through multiple controller names to improve code readability and maintainability by reducing redundancy
added assumptions to skip tests on macOS environments in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on mac
refactor jvmciversioncheck . getrequiredproperty ( ) to avoid npe
refactor Mockito class to improve code readability to enhance maintainability and facilitate future updates
updated TestLargePageUseForAuxMemory . java file to improve performance and readability of the code
updated ` readAllBytes ` method to include ` ctx ` parameter in ` BinaryParser ` , ` PlainTextParser ` , and ` ParsingExecution
added a new enum ` MultiPartFormDataCompliance ` and modified ` HttpConfiguration ` to manage the ` _ multiPartFormDataCompliance ` to enhance
updated GradleDistributionManager to use GradleVersion . version for JDK - 17 to ensure compatibility with the latest Gradle features
added a new ` addType ` method to ` SnapshotControl ` and modified ` DatabaseSnapshot ` to use it to improve the handling of database object
refactor Term class to improve code structure to enhance maintainability and readability of the code
added null and empty check for runWith in ChangeSet . java to ensure that runWith is not null or empty to avoid potential NullPointerExceptions
added unit test to verify that the same resource be the same
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
pdf417 : fix a bug in localblockbinarizer , a suggest by valerybokov
replaced direct assignment of mSnapshotView with a variable mTintAmount for better clarity to improve code readability and maintainability by redu
added a new file ` SumZeroAggr . java ` to implement a custom sum0 aggregation function to facilitate aggregating sum
updated column names from " NOT NULL " to " NOT NULL " in FirstValueFunctionIT . java and NthValueFunctionIT . java
hbase - 2748 bucketcache . getallocationfailwarningstring ( ) should print more information on allocation failure
added a null check for the propName before adding it to the roleObject properties to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotation and modified method visibility in StatusBarTouchController , RecentsView , StartLauncherViaGestureTests , and
add a logcontainerstream ( ) method that keep the stream open indefinitely
mvstore : add performance test for mvstore cache
changed the value of " Long " from " L " to " J " in PrimitiveType . java to correct the representation of the Long type
changed the access modifier of the delegatingApplicationListener method from instance to static to allow subclasses to access the method from other classes
camel - 13946 : camel - rest - make sure we do n ' t set the body to null in the restbindingadvice
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to handle file deletion and functional
move updatesizekeepdrawables out of euclidianviewcompanion to companion . updatesizekeepdrawables
updated byte conversion logic in BitUtil and added comments in Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap to
updated ` sendEventToTest ` and ` sendStateToTest ` methods to use ordinal values instead of a single event tag to improve state
added conditional checks for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on the renderer ' s
refactor error handling in ErrorCheckerService . java for better clarity and functionality to improve code readability and maintainability by avoiding unnecessary
added conditional logic to set the WEST layout based on the " menuButtonTopBool " and " menuButtonBottomBool " theme constant to
added preload and preload options for the Skia library in the Skia . java file to enhance functionality by allowing dynamic loading of the skia
added a constant for the unit test network ID and implemented it in the NetworkParameters class to enable unit testing capabilities for bitcoin bitcoin tests
added error handling for missing format arguments in QueryCommand and corresponding tests in QueryCommandIntegrationTest to improve robustness of query command execution by providing
replaced variable names for capacity and isPositionValid with length - 1 in IntIterator . java to improve code clarity and maintainability by
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified the ` walkRuleAndAdd ` method to
[ netbeans - 4892 ] fix patch module file when source override be false .
[ java ] remove unnecessary check for protocol version in election
added a conditional check for SAML authentication before setting the default policy in OwnCloudClientManagerFactory to ensure that the default policy is only set when
added null checks for mappedTableResource ( table ) in ReadBatch and WriteBatch classes and corresponding test cases to ensure that a mappedTableResource
refactor : use utility . close ( ) to reduce code duplication
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance security context management by utilizing a deferred context
modified the ` removeActor ` method to accept a boolean parameter for unfocusing to enhance flexibility in actor removal by allowing unfocusing
refactor cloudConfig assignment to use a variable for clarity to improve code readability and maintainability by reducing redundancy
added logging support to NettyHttpServer and RoutingInBoundHandler classes to enhance logging capabilities and improve response handling
refactor multiple classes including DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependencies
camel - 1357 : fixed the issue that camel - groovy do n ' t work with the same language .
use set instead of list when resolve plugin dependency
make ` programoptions ` and ` ProgramOptionsUtils ` public to allow access to ` ProgramOptions ` from other classes
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added logic to retrieve the certificate chain from the storage key in HttpsMessenger . java to ensure the certificate chain is retrieved from the storage key
simonstewart : do n ' t swallow exception when convert text to response
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
add block . dropresources ( ) method to allow drop server level .
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable proper handling of spatial location calculations in the application
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor the ` isEmpty ` method in ` TreeTrie ` to use a dedicated method for checking if a node is empty to improve code read
updated foreground and background method calls in AttributedStringBuilder . java to improve clarity and functionality of foreground and background operations
added a conditional check for the " solr . disableFingerprint " system property in PeerSync . java and updated PeerSyncTest . java to ensure
changed the access modifier of the moveFunds method from private to public to allow access to the method from other classes
refactor MongoTemplate to streamline event emission and improve test coverage for MongoTemplate to enhance code clarity and ensure correct behavior of event
fix issue with settransactiontest and add logger to collectioncontainer
close the input stream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
updated the API request to use an array for replica modifications in TestCollectionAPIs . java to ensure compatibility with the latest API features and improve
removed redundant line breaks in the configuration loading process to improve code readability and maintainability
[ # 1748 ] fix typo in test code
[ hotfix ] fix checkstyle violation in core / pipeline / externalworkerservice . java
removed the ' step ' parameter from HmDatapoint and updated related methods in HomematicTypeGeneratorImpl and DisplayTextVirtualData
updated logging messages in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and tracking of shared and exclusive locks to enhance debugging
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling process by eliminating unnecessary lines
simon : fix flaky testgettextcontent . testgettextcontent ( )
refactor Logger to use ThreadLocal for logger management to improve thread safety and maintainability of logger management
updated FunctionInitializer and FunctionInitializerTest to use Mockito instead of JMockit for testing to enhance testing capabilities and ensure compatibility with Mockito
added a new method ` boxedTypeOrType ` in ` Types . java ` and modified type checks in ` Infer . java `
updated the handling of focused task views in RecentsView and TaskView to ensure proper orientation state changes to enhance user experience by preventing
hbase - 2267 remove useless stream in testflushfromclient # testflushfromclient
clear the original repository if a new contract address exists and remove it from the cache if it exists to ensure that the original repository reflects the
updated balance calculation to use dynamic properties for asset issue fees instead of a hardcoded value to improve flexibility in balance adjustment based on dynamic
refactor RealisticRenderStrategy to replace Appearance and Texture caching with URI and URI - based caching to improve texture management efficiency and ensure proper
refactor raster creation and composeing in Blit . java and add a new Bug7049339 . java file to improve code
added ` isUnselectedStyle ` flag and modified ` getStringWidth ` method in ` Label ` and ` DefaultLookAndFeel ` classes to
updated ArrayList initializations and improved action list handling in multiple classes to enhance code readability and maintainability by specifying initial capacity
removed the ` flags ` parameter from multiple ` queryImplicitIntentServices ` , ` queryImplicitIntentActivities ` , and ` queryImplicitIntentContent
refactor PingRequestHandler class for improved readability to enhance maintainability and facilitate future updates
added a new constant for MP4 _ ASSET _ WITH _ INCREASING _ TIMESTAMPS _ URI _ STRING and updated
updated firmware version checks in TradfriGatewayHandler . java to ensure compatibility with the latest tradfri version to ensure compatibility with the latest
refactor AjaxElementLocator class to improve code readability to enhance maintainability and facilitate future updates
updated the condition to check for both " block " and " table - cell " in BoxLayout . java and DefaultLayout . java to ensure
refactor JsonDecoder to handle nested token cases and add a test for reordering fields in TestJsonDecoder to improve code clarity and ensure
updated the listener lambda expressions in BlockCache . java to include removalCause as a parameter to improve code readability and maintainability by reducing
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests related to savepoint functionality
added multiple @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for Mvel parsing functionality
changed fields in ContextRegisterListener from non - final to final to ensure immutability of several fields in the application context
refactor ObjectHashSet to use caching for iterator initialization and improve test coverage to enhance performance and ensure proper initialization of the iterator
added batch byte validation in SparkReduceRecordHandler and ReduceRecordSource classes to ensure batchBytes does not exceed defined limits to improve performance and prevent
changed MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
updated log messages in JdbcProxyGenerator to clarify the purpose of the close method and added exception handling to improve error handling and provide clear
updated workspaceAnim initialization to include an important for accessibility based on the mState to enhance user experience by allowing accessibility transitions based on
changed log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for better debugging
updated scope assignment in UaaTokenServices and added unit tests for the persistRevocableToken method in UaaTokenServicesTests to ensure
updated import statements to use ` java . sql . Connection ` and ` java . sql . DatabaseMetaData ` instead of ` com . sap .
[ drools - 1340 ] add executablecommand interface to kie - api
remove camel - itest - idempotent test from camel - itest - jmeter
added padding retrieval methods for left , top , and right padding in CellLayout and modified bitmap creation in Launcher to improve layout responsiveness
modified the initialization of ` cands ` to conditionally set it based on ` sb . length ( ) ` to ensure ` cands `
updated ` SamlMetadataUIParserAction ` to use ` Action ` instead of ` SamlMetadataUIParserAction ` and added a null
added a method to check open ports for LDAP processes in LdapMockMvcTests . java to enhance testing capabilities for different LDAP ports
log4j2 - 1341 fix checkstyle issue in loggercontext
updated URL handling and logging levels in Fetcher . java and HTMLMetaProcessor . java to improve logging levels and ensure refresh URL is set correctly
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
added support for old Karaf Console API in TerminalServlet to ensure compatibility with old Karaf Console API and improve console initialization
changed the visibility of the ` getVerticesColors ` method from public to private and modified the initialization of ` verticesColors ` to improve encapsulation
added a filter to exclude timestamped reports sub directories in the copyDirectory method and updated test cases accordingly to improve the handling of timestamped reports
refactor DataValidatorTest to use parameterized tests for email validation to improve code readability and maintainability by using parameterized tests
pdfbox - 4071 : remove unused method from pdfparser
added a null check for bindStatus in FieldUtils . java to ensure that the expression is not executed inside the adequate context
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` and modified the ` readField ` method to accept it to allow customization of private
added a replacement for the device name in WebDataHandler . java to improve data handling by replacing specific device names
replaced the direct instantiation of Lookup with a method call to MethodHandles . lookup based on Java 8 types to improve flexibility in obtaining
replaced the method ` weights ( double ... ) ` with ` weightsByDouble ( int ... ) ` in ` ZParams . java `
added the ` Database ` parameter to the ` writeCustomHTML ` method across multiple writer classes to enhance the functionality of the ` writeCustomHTML
removed unnecessary type casting when deserializing keys in BTreeMap . java to improve code clarity and ensure proper handling of null values
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to handle BalanceInsufficientException and InvalidProtocolBufferException
added a conditional check for the profiler heap zerofile before writing to the byte array to ensure that the profiler heap is only written when the file
replaced ` println ` statements with ` sendMessage ` calls in ` Main . java ` and modified error handling in ` ChangeSet . java `
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record handling in Horton
added import statements for ` ItemReadListener ` , ` ItemProcessListener ` , and ` ItemWriteListener ` in multiple Java files to enable
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance code readability and maintainability
removed the retrieval of the title from the document and updated the countOneSegment method to use liveDocs instead of liveDocs to streamline the
updated Test7005594 . java file to improve test coverage to enhance reliability and maintainability of the code
refactor error message formatting in ResourcesValidationProcess . java to improve readability and maintainability of the error message
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
fixed npe in listvirtualmachines api - do n ' t try to find ip address to map to in vm
update gamepad class to use the new mc option utils .
updated method signatures and imports in IterableSubject and IterableTest classes to improve clarity and consistency in method naming conventions
camel - 13946 : camel - http4 - make it easy to configure the header by default
added assertions to verify the count of SQL queries in the ActivityHistorySQLServerStoredProcedureTest class to ensure the correct number of queries in the
added a new ` LargeValueFormatter ` class and updated value formatting in multiple classes to utilize a large value format to improve performance and
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
removed @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to clean up the code and improve readability
updated the formatting of the ` printLir ` statement in ` TraceLinearScanLifetimeAnalysisPhase . java ` to improve code readability and
added TODO comment to Auto - generated method stub in NullAssertionValidator . java to improve code readability and maintainability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in rule key builder
[ net . pms . service ] add system profile directory if it do n ' t exist
refactor createThreadFactory method to use a dedicated createThreadFactory ( ) method to improve code readability and maintainability
refactor message handling in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability by
added a line to set the " accept " attribute to " image / * " in ImageFileInputDialog . java to ensure that the image
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and replaced Headers with ShardId to improve code clarity and ensure
added detailed representation of witnesses and class names in ForkController . java to improve debugging and provide clearer information about witnesses and class names
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of null pointer and empty URL arrays to ensure that the
added a method to find generated source paths using dependencies in BaseIjModuleRule . java and updated IjProjectBuckConfig . java
updated the ` constructWildcards ` method to accept an additional ` Function < String , String > ` parameter for improved wildcard handling to enhance flex
refactor alias validation logic in Vectorizer . java for better clarity to enhance code readability and maintainability by reducing duplication
replaced Mockito ' s MockitoRunner with Mockito ' s JUnit ' s MockitoJUnitRunner in WeatherQueryTest
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values
replaced specific imports with a wildcard import and modified the getLangs method to return a set instead of an array to improve code readability and
removed unnecessary parameters from the assertThat method in LazyTraceScheduledThreadPoolExecutorTests . java to simplify the assertion logic and improve readability
hbase - 2249 add table lock and lock to take / disabled snapshot handler ( jesus camacho rodrigue
[ j2kt ] add ` createplatformisnullcall ` to create platform is null call
added a test to verify that the HTTP RPC endpoint is modified in DockerQuickstartTest . java to ensure that the EXPLORER endpoint
added a volatile boolean variable ` isSuspended ` and modified thread state checks in ` Thread . java ` and ` Test _ Thread . java `
updated Java11JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden instead of Author , since , and added handling for DCTree
camel - 1747 : camel - spring - dsl - add a test case for camel - remoting and camel - proxy
removed multiple redundant @ Override annotations across multiple security - related classes to improve code readability and maintainability
added module import handling and modified test assertions in Java2TypeScriptAdapter , EnumTests , and MyComplexEnumsAccess classes to enhance module
use http : / / www . w3 . org / 2001 / xmlschema instead of http : / / www . w3 .
added content description handling for badged items in BubbleTextView to improve user experience by providing a clearer description for badged items
added mouse wheel event listener to TestMouseWheelScroll . java to enhance mouse wheel functionality for better user experience
pdfboxrenderer , pdfboxrenderer , visualtester : fix resource leak , add a test for positioning absolute
updated currency pair names from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
updated type parameters from Object to String in VacuumController , VacuumFrame , and VacuumView classes to
removed currency conversion logic for DSH , QTM , and QTUM in BitfinexAdapters . java to simplify code by eliminating
replaced HashSet with ImmutableSet and updated message handling logic in JsonFormat . java to improve code clarity and maintainability by utilizing ImmutableSet and
added a check for enum types in JacksonXmlFormatMapper to ensure proper serialization of byte array values in JSON format
updated variable names in VirtualThread . java for consistency and clarity to improve code readability and maintainability by using a more descriptive variable
updated DirectoryTaxonomyWriter and NameIntCacheLRU to use a constant for term term handling to improve code readability and maintainability by redu
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
modify the calculation of the vertical position in BrowserContentPane to correctly account for the height of the screen
pdfbox - 4071 : remove invalidpasswordexception from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
ggb - 1365 show close button in help panel , close button be not show in exam mode .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced direct sleep calls with ThreadHelper . waitUntil for controller state checks to improve responsiveness and maintainability of controller state management
updated condition for checking release status in SwingStartup . java to ensure proper handling of release status and reminder selection based on release status
added a configuration option to include a generated file comment in DbMigrationConfig and updated MigrationXmlWriter to utilize this feature to allow users to
updated command usage strings to include wildcard characters to enhance readability and maintainability of the command documentation
deleted ` BadHdfsThreadsFilter . java ` and ` BadZookeeperThreadsFilter . java ` files to remove unused thread filter classes to
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a condition to check for parallel classes in TestNGContentHandler . java to ensure proper handling of parallel classes in the test suite
do n ' t set enableactingmaster when there be no broker register
refactor : remove static import of enums in ctmethodimpl . java
added serialVersionUID to multiple Java classes to ensure proper serialization compatibility across the project
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a ` CONST _ SEPARATOR ` parameter in ` ShibbolethCompatiblePersistentIdGenerator `
refactor parameter handling in Parameters . java and update conditional logic in TestAction . java to improve code clarity and ensure proper handling of null
added a new class ` Person ` with a private field ` name ` to the ` org . apache . maven . it0074 ` package
remove unused parameter from gossiper . start ( ) .
changed the method call from ` indexOf ( timeStr ) ` to ` indexOf ( timeStr ) ` in ` AbstractClient . java ` to
added unit tests for time column and time unit in SegmentMetadataImplTest and updated segment metadata handling in SegmentMetadataImpl to ensure accurate validation of
updated import statements to use net . sf . openrocket . util . Color instead of java . awt . Color and changed the foreground color
added a disconnectEmitters . onNext ( new Object ( ) ) to the NettyStreamingService class to ensure proper handling of disconnect events during
changed the type of ` scopeHierarchy ` from ` List < String > ` to ` List < Class < ? extends Annotation > > ` to
simonstewart : add a new test to show how to click on an element hidden by double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a custom JNDI lookup for the JTA TransactionSynchronizationRegistry in JtaTransactionManager . java to enable dynamic configuration of the JTA
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
replaced variable ` enabledCiphers ` with ` result ` for clarity to improve code readability and maintainability by reducing redundancy
fix bigquery timestamp value conversion ( # 1193 )
replaced manual null checks with requireNonNull for buffer and userCredentials in Identifiers and DatabaseConnector classes to improve code readability and maintainability by
use inputmap . getordefault ( ) instead of input . get ( )
added additional boundary checks for row and column indices in FlightConfigurablePanel . java to ensure that only valid rows and columns are processed in the
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the selection is visible for the
[ java ] unnecessarylocalbeforereturn : fix false positive
refactor initialization of ScriptEngine in AbstractScriptExecutor to improve code readability and maintainability by eliminating unnecessary null checks
simplified calculations in EuclideanDistanceSimilarity and updated test assertions in EuclideanDistanceSimilarityTest to improve accuracy and correctness of
fix race condition in datatracker # incrementallybackup ( )
added a new method ` relativize ` to ` MorePaths ` and updated tests in ` MorePathsTest ` to ensure proper normalization of
refactor column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve code readability and maintainability
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
rename ErrorHandlerController and its test classes to Error403Controller and update package structure to improve clarity and organization of error handling controllers
replaced calls to ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both Unix
[ netbeans - 4892 ] fix tiny array array array to be a method reference instead of a methodinvocation
refactor connection removal logic to use an iterator for better readability to improve performance and maintainability of the code
updated method names and references from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setDateConverter ( ) `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve readability to enhance clarity of error messages for better debugging
updated LargeStreamletTest to handle reader and writer exceptions more accurately to improve test reliability by ensuring proper exception handling and thread join
updated the logic to increment the number of extra pages based on shared preferences to ensure the correct page is displayed based on user preferences
added error handling for image creation in AndroidImplementation . java and modified the return condition in AndroidImplementation . java to improve robustness by preventing
added @ SuppressSubnodes annotation to the SequenceMatcher return statements in BaseParser . java and modified the label formatting in ImplicitActionsConverter . java
refactor FDFParser initialization to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed
added a shell command for input key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to
added JSON serialization to the filenameToUrl map in FileDumper . java to facilitate the writing of the output file to a JSON
bugfix # 118187 , reset result notified flag in profilerserver .
[ blender2d ] texturehelper now add loaded feature to the blender context .
updated assertions to check for " application " instead of " application : " in multiple test files to ensure correct identification of the application context in the
updated the version number in RandomizersTest from " 9781797745008 " to " 9781797845005 "
updated notification sound handling in AlarmReceiver . java to utilize the ringtone Uri from preferences to improve flexibility in managing notification sound
added a method to report loop count in the RootNode class to enable reporting of loop counts in the call target
added a condition to set the current stack version of a cluster in FinalizeUpgradeAction . java and modified cluster merging in ClusterImpl . java to
fix npe in listip / listip / listip / listregion / listregionid - add regionid to listip / list
updated the order of calls to streamManager . open in ItemOrientedStep . java to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` that generates a string representation of a random integer to facilitate testing of
[ gr - 11919 ] replace varargs with object [ ] in hotspotgraalruntime . executecompiledmethod ( )
[ gr - 13939 ] allow javathread : : _ pending _ speculation to be specify with type long .
updated KafkaStreamsTracing and ITKafkaStreamsTracing classes to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing functionality for better
added a new method to convert a list of points to a comma - separated string representation to enhance code readability and maintainability by encapsulating
replaced DynamicColors . applyToActivitiesIfAvailable with DynamicColors . applyToActivitiesIfAvailable in BaseApplication . java to enhance user experience by providing
added a method to dump all child threads and modified thread handling logic in CloseRace . java to improve thread management and ensure proper termination of
updated the return statement to use ` val . intValue ( ) ` instead of ` val ` in ` IntPointField . java ` and added
updated arcSize from a fixed value to a dynamic calculation based on the width and height to improve the visual appearance of the button ' s
updated the value of veryHighWidth and ratioWidth from 720 to 640 in AddAndScaleMultiImage and ImageBorderCuttingWizard
rename ` setMinifySqlEnabled ` to ` isShrinkWhitespacesInSql ` and update related method names to improve clarity and consistency in
refactor waitForStateTransitionToEnd and waitForState methods in WorkProfileTest and AbstractLauncherUiTest to improve code clarity and maintainability
added imports for ` CasCoreAuthenticationPrincipalConfiguration ` , ` CasTicketIdGeneratorsConfiguration ` , and ` CasPersonDirectoryDirectoryConfiguration ` to
replaced ` raf . readLong ( ) ` calls with ` DataIO . readFully ( buf ) ` for reading single byte arrays to improve performance
camel - 1774 : fix the test error of camel - http4
refactor the creation of the proxy class path to use a separate variable for system and module boot paths to improve code readability and maintainability
add support for audiorem and voicemanager in the main module .
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to manage layer management more effectively to improve layer management
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor and replaced Exception handling with Throwable handling in TezProcessor to improve robustness
refactor the center and center2D variables in CylinderRegion . java for consistency and clarity to improve code readability and maintain
replaced manual exception handling with JUnit ' s ExpectedException rule in TestBadUseCases . java to improve code readability and maintainability
modified the sendOneQuery method to use NO _ PARAMETERS for subqueries and added a test for multi - execution in StatementTest to ensure
do n ' t log ` ` visualvm - security customized security environment ' '
added a new parameter ' rctag ' to the GET endpoint in ReviewInterface . java to enhance the API ' s functionality by including the
refactor Test class to improve code readability to enhance maintainability and facilitate future updates
updated PBEKeySpec to use keyLength instead of blkSize in PBES2Core . java to ensure the correct key length is used for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure that section definitions are properly written to the document
added distance calculation and accuracy checks in GpsLoggingService . java and modified accuracy condition in Maths . java to improve accuracy handling and ensure
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 119 )
replace boolean fields with reference types for rootNameFn , sourceFilterFn , and sourceFilterFn in InsightFilter . java to improve type
simplified the addition of app information in AllAppsList . java to streamline the code by eliminating unnecessary binarySearch operations
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
removed unnecessary whitespace in assertRootArcs ( ) method to improve code readability and maintain consistency
added an assertion to verify the existence and existence of the security policy to ensure that the security policy does not exist or is a file
camel - 14284 : camel - olingo2 - make it easy to configure the olingo2 component - olingo
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to improve test reliability by allowing more time for
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output by eliminating unnecessary parameters
added action to publish an image by http using xmpp .
camel - 14836 : camel - netty - camel - netty - fix potential npe in camel - netty
fix url splitting in balancedclickhousedatasource ( # 4321 )
remove system . setproperty ( ` ` org . apache . jasper . compiler . disablejsr199 ' ' ) from fragmentactiv
added support for handling null strings in CSVRecordReader and CSVRecordReaderConfig classes to enhance flexibility in handling null values in CSV format
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to enable the ` @ Liquibase
updated ` aggregatedScope ` and ` addImportedStaticFieldNames ` methods to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to
added / / topic to item command and state trigger handler ( # 1748 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to standardize
replaced " zkCredientialsProvider " with " zkCredentialsProvider " in SolrXmlConfig . java and updated corresponding assertions in Test
fix the mana tablet ' s damage and durability bar not be display properly .
added a method to set the identifier collection in the mCurrentCallEvent to ensure proper handling of the identifier collection in the state
removed the import of DictionaryCompoundWordTokenFilter from TestRandomChains . java to clean up the code and reduce unnecessary dependencies
updated the thread pool executor name from " - % d " to " - % " in ScryptUtil . java to improve clarity and
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
added a null check for the ' definition ' parameter in the assertNotNull method to ensure that the ' definition ' variable is not null to prevent potential
added visibility setting for shareWithMeIcon in LocalFileListAdapter to ensure the shareWithMeIcon is visible for better user experience
updated the link from " http " to " https " in multiple files to ensure compatibility with the latest URLs for Bootstrap CSS rendering
updated import statements and method calls in RouterFilter , RouterServerListFilter , and RouterDistributorTest classes to improve code clarity and ensure
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context for better debugging and clarity
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
added null check for context in CrawlerSessionManagerValve and introduced a new test for context awareing in TestCrawlerSessionManagerValve to
modified the ` getJspApplicationContext ` method to use a privileged action for retrieving the ` JspApplicationContext ` based on security settings to enhance security by
replaced the variable ` l ` with ` minL ` and ` maxL ` and updated calculations for component length to improve clarity and
updated OpenIDAuthenticationProviderModule to bind NonceService with a SINGLETON scope to enhance security by allowing the nonce service to be bind to a
added a call to ` parent . updateChildLinks ` in ` FileWrapper . java ` to ensure proper handling of child links in the parent
refactor ` doExecute ` and ` buildRealURL ` methods to accept a ` URI ` instead of a ` String ` for HTTP method
updated the timeout value for the publishWithDelay method from 100 to 500 in RetrievalBlockingMessageStoreTests . java to improve test reliability
added a boolean flag ` mShiftCodesAlways ` to control the behavior of the ` isShiftAlways ` feature in ` AnyKeyboard . java
updated heartbeat interval checks to use active cluster coordinator instead of active coordinator node identifier to improve clarity and maintainability of leader election logic
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintainability
updated filter condition from checking if the identity name starts with " / " to checking if it is a reference to ensure that the identity is not
modified the ` newInstance ` method in ` ArtifactCacheFactory ` to accept a ` noop ` parameter instead of ` AbstractCommandOptions ` to enhance
added a sleep delay between IOException and InterruptedException in TestListenTCPRecord . java to ensure proper handling of IO exceptions and prevent potential stability issues
refactor argument handling in PatchExtensionMethod . java to improve clarity and maintainability of the code
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and updated related methods to improve performance and clarity
added support for the ' apply - sequence ' and ' ignore - send - failures ' attribute in the router parser , and updated the channel name
updated ClientKeyPublisherMapping and JwkViewResolver to handle X.509 certificate publishing and view names to improve the handling of X.509
refactor the initialization of SolrIndexReader in QueryComponent . java to ensure proper handling of single readers to improve code clarity and maintainability
updated the parser implementations for " max " and " min " in ValueSourceParser . java to utilize Math . max and Math . min
simplified the return statement in the Container class to simplify the return statement for better readability and maintainability
removed unused variables and updated the next ( ) method signature in TokenSources . java to streamline code and improve readability by eliminating
cloudstack - 4892 : add uuid ( ) to the list of user id in the db
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use @ ConditionalOnWebApplication and @ Qualifier annotations to
updated command parameters and refactored database connection handling in WriteJdbcPTest . java to improve connection management and ensure accurate connection management
removed conditional check for the " editor . laf " preference before registering the look and feel to simplify the code by eliminating unnecessary
replaced calls to ` getDesiredStateEntity ( ) ` with ` desiredStateEntity ` in ` ServiceComponentHostImpl . java `
simplified margin calculations in FloatingTaskView . java to streamline margin calculations for better readability and maintainability
added a condition to handle the running state in RootFolder . java and updated the status line in NavigationShareTab . java to improve user experience
do n ' t increment thread number in cpucallgraphbuilder . getthreadid ( )
set default toolbar to null , remove unnecessary tool . getalltools call .
added NetworkAddressChangeListener interface and updated logger messages in HomekitImpl . java to enhance network handling and improve logging clarity
replaced lease retrieval logic with lease renewal time retrieval in TestHDFSEventSinkOnMiniCluster . java to improve clarity
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` in ` CxxLibraryDescription .
added null check for error message in ExceptionHandlerRegistryFactory and a corresponding test case in ExceptionHandlerRegistryTest to ensure robust handling of null messages
changed the ` nextID ` variable to be ` volatile ` and updated related method calls to improve thread safety and clarity to ensure thread safety
resolve intermittent test failure on slow machine
added HasSourcePath interface and updated AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement
refactor exception handling in Arrays . java for improved clarity to enhance readability and maintainability of the exception message
added a custom index field name to the facet configuration in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to
updated the ` toEpochMilli ` method in ` Instant ` to handle negative values and added data provider tests in ` TestInstant ` to ensure
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use name ( ) method instead of getBufferType ( )
added a check for blocked scripts in CopyPaste . java to control the behavior of the app ' s block update scripts to enhance user experience
added a new file ` TestCMoveLimitType . java ` with methods for testing character movement in a ByteBuffer to facilitate testing
removed redundant reset of temporal attributes in ChannelState and added a contains method in RecordConfiguration , modified audio packet handling in AudioPacketWaveRecorder to
camel - 1745 : fix the issue of camel - sql - stored - parser do n ' t support scale token .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor color handling in Main . java and add a printVersion method in VersionCommand . java to improve code readability and maintainability by
refactored token validation logic in InputStreamBinder and removed the deprecated validateToken method in NextcloudRequest to improve code clarity and maintainability
improve error message when iib . eof . error be throw .
add unit tests for group deletion methods in DefaultGroupProviderTest . java to ensure proper handling of group member deletion scenarios
( chore ) camel - jbang : remove unnecessary new object [ ]
deleted the V2ReplicationProtocol . java file to the functionality is no longer needed for the replication protocol implementation
updated references from ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` to ` ImmutableSet < SourcePath > compileTimeClasspathSource
added two new demo classes , ConstructorArgsDemo , and StrictDemo , and updated the StupidFinal class names to improve clarity and
make the template feature iterator thread - safe to avoid memory leak
updated the response count assertion in WriteResponseHandler . java to accommodate a maximum replication factor to ensure that the response count does not exceed
added null check for indexNumber in ItemRowAdapter . java to prevent potential NullPointerException when indexNumber is not initialized
rename ` showAnchestors ` to ` showAncestors ` across multiple classes to improve clarity and consistency in naming conventions
added a check for app width in KBBase . java to prevent processing when the app width exceeds 12
updated the equality check in ChangeLogParameters and added a new test for parameter value handling in ChangeLogParametersTest to ensure correct comparison of change
changed the loggers map from static to final in LogFactory . java to ensure immutability of the loggers map
updated return statement to use ` p . getBasePlot ( false ) ` instead of ` p ` to ensure the plot ' s base plot is
updated the ` createUploadDir ` method to include an ` initialCreation ` parameter in the ` createUploadDir ` method to control the creation
added a new boolean parameter ` sendStatus200 ` to multiple classes to control the sending of status codes in the ServerGenerator , HttpTransportOver
added a condition to check if the comment length is greater than zero in the multi - line comment condition to ensure that multi - line comments are
added imports and modified file type associations in BuckModule . java to ensure proper handling of file types in the application
replaced multiple specific function imports with wildcard imports and updated method signatures to use ` ComposedToInt ` instead of ` ComposedToLong ` to
added RTM OS error handling and improved error messaging for JVM startup tests to enhance robustness by providing clearer error messages for unsupported CPU
reformatted code for consistency and readability in AccountsActivityTest . java to enhance code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to enable mocking of ChannelTypeUID
fix checkstyle issue in util / polyglot / polyglotexceptionimpl . java
set the system context to null in AndroidTestEnvironment and add a reset method in ShadowFontsContract to reset the system context for testing purposes
added a method to convert a long number to milliseconds in TimeGranularity and updated time handling in PinotDataSourceMaxTime to improve time conversion
refactor control flow analysis logic in ControlFlow . java and Guard . java to improve clarity and maintainability to enhance code readability and
updated assertions in ` Assert . java ` and ` ArrayEqualityAssertTest . java ` to improve error handling and clarity to enhance robustness
added a default case for the default click type in WindowClickLogic . java to ensure proper handling of the default click type in the WindowClick
corrected the calculation of the index in MeshBuilder . java to ensure correctness of the index calculation
nifi - 2641 : remove unused field from standardprocessscheduler
added support for processing Java annotation processors in KotlincToJarStepFactory to enhance plugin configuration handling for KAPT3
updated RESCROLL _ DELAY constant and simplified page snapping logic in PagedView and Workspace to improve code readability and maintainability
added permission checks for shortcut host permissions in the Launcher and DeepShortcutManager classes to ensure proper refreshing of shortcuts based on user permissions
added case HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle search backwards functionality in ConsoleReader . java
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to ensure robustness
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet state is hidden when the map is selected
added error handling in FileSyncAdapter . java to print stack trace to improve error reporting for better debugging
refactor TestMemoryAwareness to use OutputAnalyzer for better error handling to improve code readability and maintainability by reducing redundancy
updated FeedQueues . java to filter feeds based on application settings for heavy load conditions to ensure that feeds are filtered based on user settings for
log warn when defaultdrmsessionmanager be access on the wrong thread .
updated ` AndroidBinaryDescription ` , ` AndroidBinaryBuilder ` , and ` AndroidBinaryDescriptionTest ` to use ` Locale . US ` for
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with application - specific XML
updated variable references from ` INSTANCE . confFile ` to ` INSTANCE . confFile ` to ensure consistent usage of ` INSTANCE . confFile `
changed the timeout value from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest . java to correct the
updated the type of ` numCountDistinct ` and ` getGroupingIdValue ` from ` int ` to ` long ` in ` HiveExpand
added multiple checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper exception handling for head
added a matching check for the current recipe in ExoflameFurnaceHandler . java to ensure the smelt can be smelt
add solverconfig . move _ thread _ count _ none to move thread count
[ fhir - 4892 ] fix npe when search with revinclude = true
added a new test class ` Issue582Test ` to validate the sorting of features using BTreeKeySerializer to ensure the correctness of
[ native ] add test for decimal overflow in native function
refactor LoadingCache class for improved performance to enhance performance and maintainability of the loading process
added a new rule for " avoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to enhance test coverage for non - constructor methods
added error handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by handling StaleElementReferenceException during element selection
refactor ViewExistsPrecondition to use DatabaseSnapshotGenerator for view existence checks to improve code clarity and maintainability by centralizing view existence
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future updates
added translation calculations for task view animations in TaskViewUtils and implemented a logMatrix method in Utilities to improve animation responsiveness and enhance logging
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a ` walk ` method to ` TempFSTTermsReader ` and modified the ` TempTermOutputs ` logic in ` TempTermOutputs
added ` SolrQueryRequest ` parameter to the ` create ` method across multiple factory classes to enhance query handling capabilities in the Solr framework
added new trigger queries for post and announcement updates in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for post and announcement
refactor FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability by centralizing
updated query string formatting in PhoenixQueryBuilderTest . java to use double quotes for consistency to enhance readability and maintainability of SQL
added Spark import and invoked Spark . awaitInitialization ( ) method in RequesterTest . java to ensure Spark is properly initialized before proceeding with
added methods to retrieve and save total storage pool , limit , and used values in DynamicPropertiesStore . java to enhance storage management capabilities and improve
added support for dev mode in AssetsController and updated the method to accept NinjaProperties as a parameter to enhance flexibility in handling different file
updated the condition to check if a map mark key exists in MapMarksManager . java to ensure that the map mark key does not exceed the
added token rewrite stream parameter to ` generateConstraintInfos ` and ` getDefaultValue ` methods in ` BaseSemanticAnalyzer ` and ` DDLSem
removed ` throws IOException ` from several method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Javac
refactor JxBrowserManager to use a local variable for file path and improve logging clarity to enhance code readability and maintainability by
updated string comparison from ` = = ` to ` . equals ( ) ` for format comparisons in ` IOSImplementation . java ` to ensure
[ tomfytahoma ] use thing . getuid ( ) instead of thing . getridgeuid ( ) . id (
disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use static constants for keystore and trust store types to improve code readability and maintainability by centralizing
replaced instances of ` warnThenDebugLogger ` with ` stackTraceWarnThenDebugLogger ` and ` nanGaugeWarnThenDebugLogger ` to
added a method to remove a session ID from the session info to ensure that the session information is removed from the session manager
added hostname setting for alerts in HeartBeatHandler and improved formatting in AlertReceivedListener to enhance code readability and maintainability by
simplified the buffer processing logic in ChannelEndPoint . java to improve readability and maintainability of the code
( chore ) camel - kie - api : move kmodule . xsd from kie - api to kie - api
added unit tests for the seekTo method in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to ensure correct handling of
rename createTask method to createThrowingTask across multiple executor classes to improve clarity and consistency in naming conventions
added a conditional border to the CloseButtonTabbedPane based on the IS _ AQUA _ LAF flag to ensure the close button
added POST request and read timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to improve
( chore ) camel - thoughtworks : add default security to xstreamutils
added a new class DiamondRaw and modified diamond application condition in mmm Attr . java and ppp Attr . java to
refactor RelOptUtil and RelOptUtilTest classes to improve code readability and maintainability
updated argument checks in Http2Settings . java to use logical AND instead of logical AND to improve readability and maintainability of the code
deleted the MapInterfaceTest . java file to remove unused test cases
added error handling for session creation in SessionsPoolTest . java to ensure that session operations are only executed on disposed from a pool
added start and end method calls for JSON writing in GeoJsonWMSBuilder . java to ensure proper handling of JSON data in the root object
updated the method for setting the selected index in PopupMenuButton to use intValue ( ) instead of a method to improve code readability and
added a method ` canCurrentlyManuallyUnstash ( ) ` to the ` TaskbarStashController ` class to check if the
camel - 17575 : camel - route - dsl - fix the issue of camel - route - coverage . xml do n ' t work
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in event mismatch handling by allowing
added a new file ` HeaderFixer . java ` that implements file processing for " data / licence - header . txt " to
added functionality to send loading completion broadcasts based on user preferences to enhance user experience by allowing users to receive a first load complete widget
deleted the SuperJumperAndroid . java file to the implementation is no longer needed for the application
modified the return value of the ` isDistributed ( ) ` method in ` SystemTableScan . java ` and updated query construction in `
replaced KeyValuesProviderAware and ObservationConventionAware interfaces with their respective setter methods to improve code clarity and maintainability by standardizing
improve performance of registrymanager . processidrematches ( )
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the variable ' s base value to long to ensure correct
added caching functionality for format records in HSSFCellStyle . java to improve performance by avoiding unnecessary cache retrieval
updated the query in RemoteAuthenticationEndpointTests to include a filter parameter to enhance query flexibility by allowing users to be filtered based on username
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java `
updated logging to include container information and workspace information in the launcher to improve logging clarity and functionality of the launcher
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest . java which be no longer use
added null checks for newInput and improved marker handling in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness and
added a " Reopen in Browser " menu item and implemented a retry mechanism for opening the server to improve user experience by ensuring the browser is
added a new semantic exception message for multi - time output and improved error handling in the SemanticAnalyzer class to ensure that multiple output outputs are
added null and equal predicate parameters to the addEntryListener method in BasicTest . java to ensure proper handling of null entries in the map
fix coordinatearrays . reverse ( ) to return early if the coord length be < 1
corrected formatting of setOpen method call in ToolbarPanel . java to improve code readability and maintain consistency
added a new boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper handling of
replaced the enterOverviewMode ( ) method with showOverviewMode ( true ) in Launcher . java to streamline the overview mode display
[ java ] set the destination for the message dispatch in networkroutetest .
change the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure that the maximum
fix checkstyle issue in util / nestedarithmetictest . java and add miss @ override annotation
updated the addition of pendingChunks and buff in HttpClientRequestImpl . java and modified buffer handling in HttpTest . java to improve performance and ensure
updated regex patterns in GetMavenDependenciesTask . java to exclude " solr - " prefix from artifact replacement to ensure compatibility with Solr ' s
pdfbox - 4071 : simplify code , a suggest by valerybokov
removed unnecessary print statement from substring method in ReferenceUtil . java to simplify code and improve readability
refactor visibility predicate to accept a query type name as a parameter to improve clarity and maintainability of the visibility logic
added support for HTTP JSON RPC Solidity port configuration in multiple classes to enable dynamic port configuration for JSON RPC requests
added a type check before removing a drop target from the drag controller to prevent potential ClassCastException when removing a folder
refactor stub jar creation logic into a separate method to improve code readability and maintainability by encapsulating the creation of the stub jar path
added a new feature messages for setup wizard and workflow helper in StartPageTopComponent . java to provide clearer guidance on the setup wizard
remove duplicate scheduleWithFixedDelay call in CassandraDaemon . java to improve code readability and maintainability
removed unnecessary null check for available in OnlineTestCase . java to simplify the code by eliminating unnecessary type casting
replaced ReturnAttributes . NONE with ReturnAttributes . ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to accurately reflect the return
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve error handling and ensure
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enhance functionality by allowing non - blocking operations
updated TABLE _ HEADER _ SEPARATOR regex and added multiple test cases in TableBlockParser and TablesTest to improve parsing accuracy and ensure correct handling of
updated the return value from 32.0 f to 31.5 f in Camera . java to align the camera ' s functionality with the latest
added a preference for startonbootup in GpsSettingsActivity and modified return values in Utilities and GeneralLocationListener to improve user experience by
updated the random number for the client secret from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a
updated assertion messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include " enablePassingNulls ( true ) " to clarify
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to a race condition
refactor methods in SegmentGenerationAndPushTaskExecutor to use PluginManager for initialization to improve error handling and ensure proper initialization of PinotFS
added locale - specific date formatting to TimeLineCursorAdapter and TimelineArrayAdapter based on the language to ensure proper date formatting based on the
added MetalLookAndFeel import and set it to UIManager in bug8032878 . java to enhance the visual appearance
refactor message handling to use a synchronized method for thread safety to improve thread safety and ensure thread safety when sending messages
removed throwable . getMessage ( ) from the error message parameter in the ShenyuResultWrap error handler to simplify error handling by elimin
rename variable ' module ' to ' from ' in ModuleTable and PackageTable classes to improve clarity and consistency in naming conventions
updated exception handling in PinotAdministrator . java to use CmdLineException and added logging for exceptions to improve error handling and provide clearer
replaced deprecated ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and ` hashCode ( o ) ` in `
adjusted spacing and formatting in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintainability
updated zoom level limits in BasicMapViewer . java from 10 , 20 , and 7 to 0 to adjust zoom levels for the map view to
refactor admin user and group retrieval to use ImpersonationUtil for improved clarity to enhance code readability and maintainability by central
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor to DelegatedClientAuthenticationAction and updated service resolution logic to enhance argument extraction capabilities in the authentication process
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
fix tile size changer not destroy properly
removed redundant lines of ` addInfoRow ` and ` removeAllViews ` calls in ` CustomPlaybackOverlayFragment ` and ` InfoLayoutHelper `
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` method to ` cleanFeedsWithoutSubscriptions ` and introduce a new method ` clean
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to improve
nifi - 1748 : use temporaryfolder instead of temporaryfile to avoid test failure on window
make sure conic point [ 0 , 0 , 0 ] do n ' t throw npe
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( " unchecked " ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings related to
refactor CImage to use imageToArray for creating CImage instances to improve code readability and maintainability by encapsulating image processing logic
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to ensure compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
replaced manual null checks with ` java . util . Objects . equals ` across multiple classes to improve code readability and reduce redundancy in
renamed the method ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and updated its implementation in ` ClasspathSymbol
added multiple verification tests for location properties in NinjaDefaultTest . java to ensure proper configuration of view properties in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
adjusted padding and list view position offsets in DetailFragment and ListFragment to adjust bottom spacing based on nav bar height and adjust list view position
updated catch blocks to use ` Thread . currentThread ( ) . interrupt ( ) ` instead of ` Exception ` and ` KeeperException ` to
added null checks for field values in HttpFields . java and implemented a test for handling empty headers in RequestTest . java to ensure robustness
added a check for the availability of static nat rules in the network to ensure that the static nat service is not supported in the specified network ID
added multiple calls to resetHeaderScrollingState ( ) and resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure
added a call to remove the extra empty screen from the workspace to ensure proper handling of empty screens in the workspace
added a fixedWidth flag to the BitmapFont class and modified the xAdvances calculation logic to accommodate glyph scaling based on the fixed
removed the boolean parameter ` showTitle ` from ` createFragment ` and refactored the ` createFragment ` method in ` ChangeLogFragment
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state management capabilities for better state management
refactor ConfigDescriptionProvider class to improve code readability to enhance maintainability and facilitate future updates
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to include clientHiveConf to
refactor sorting logic in FacetComponent to use a boolean variable for clarity to improve readability and maintainability of the code
updated the caching file path in CheckstyleReport . java to use a dynamic configuration directory to improve flexibility and maintainability of the cache file
added URL handling and improved error messaging in DeleteInactiveReplicaTest . java to enhance test reliability by ensuring that the Jetty is stopped
added a filename parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to enhance flexibility in displaying file names
updated direction validation logic in CellLayout . java to include external mode to ensure proper direction handling during drop operations
updated API endpoints and path annotations in InnerTransferRequest and AccountAPI classes to ensure compatibility with newer API versions and improve code clarity
fix race condition in sinkstresstestutil # assertjobrunningeventually ( )
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added new visitIdentifier method implementations to enhance code readability and maintainability by using a wildcard import
set action text color to primary dark in AuthenticatorActivity to enhance user experience by providing a more descriptive text
added support for ComparableField in multiple classes and updated the find method in StreamSupplierComponent to enhance functionality by allowing dynamic value retrieval based on Comparable
renamed methods and variables from ` addTestSteps ` to ` createTestSteps ` to improve clarity and consistency in naming conventions
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added a ` cancelClient ` method to ` RpcServer ` and invoked it in ` startDriver ` to ensure that the child process exits before
added getter methods for implicit default value in SkylarkParamInfo , ParamInfo , and ReflectionParamInfo classes and updated related tests to
initialize lastDisplayedUser to Optional . empty ( ) in FileDisplayActivity . java to ensure that the lastDisplayedUser is not initialized
added ` findAll ` method to ` QueryDslMongoRepository ` and created a test for it in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping instances of SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping consensus operations
added a break statement in DefaultPlannerBenchmark . java to exit the warm - up loop in case of a failure to improve reliability of
add xread ( ) and xreadgroup ( ) method to multi - key pipeline .
updated the ` incrReadByteCount ` method parameters in ` LinkedBufferInput ` and ` StreamInput ` classes to use ` nextAdvance
refactor CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to use WebSecurity configuration instead of HttpSecurity to improve security handling and
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to handle
added a method to register content providers in ShadowContentResolver and refactored content provider creation in ContentProviderController to improve content provider registration and
replaced ` Version ` with ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the new class version specification
added keep - alive configuration to the SingleConnectionManager to ensure proper handling of connection timeouts during connection operations
[ java ] rename flowcontrol to flowcontrolsupplier in driver conductor .
g3d locus : fix npe in gbasicstroked . getcurrentpoint ( )
added exception handling for IOException in ChannelEndPoint and improved buffer flushing logic in WebSocketConnectionD13 and WebSocketMessageD13Test classes to improve
refactor selenium driver initialization to use configuration for different driver types and add screenshot handling in HttpWebClient to enhance flexibility in managing Selenium
replaced JUnit ' s assertEquals with AssertJ ' s assertThat in multiple test files to improve code readability and maintainability by
remove deprecate trufflelanguage . getcontextreference ( ) .
updated error handling in StubberImpl and added StubbingWithBadThrowablesTest and UninstantiableThrowableTest classes to ensure proper reset
updated error handling in Actor . java and Group . java to improve clarity and consistency in exception messages
added location permission handling in LocationPickerActivity and modified the getCenter method in ContributionController to improve user experience by providing user feedback during location access
http : / / issues . apache . org / jira / browse / amq - 4891 - add a test case for activ
added import for CookieSpecs and set a standard cookie specification in GetHTTP . java to ensure proper handling of cookie specifications in HTTP requests
simplified the intersection check by using ` r1 . overlaps ( r2 ) ` to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed unnecessary logging in Airspy
added a ` monitoringUrl ` parameter to the ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` classes to enhance the functionality to
[ hotfix ] [ k8s ] remove ' kubernetes . service . create - timeout ' config option
update icon resource handling in NearbyListFragment and NearbyPlaces to support different place descriptions to improve user interface responsiveness by
added a null check for ` type . getPackage ( ) ` in ` DefaultPackageScanClassResolver . java ` to avoid potential NullPointerException when `
added a new file PrintInlining . java that prints " Passed " to the console to demonstrate the purpose of the
fix ( javadoc ) : fix parsing of nested brace in javadoc tag
[ java ] remove unused field from archivetest
updated method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated Timber logging messages to use floating - point values instead of integer values to improve logging clarity and provide more informative output for playback
[ muc ] add roomremoval event when cluster be start .
updated the ' minimize ' property from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure consistency in the test configuration for
added flipY and generateMips properties to the texture key to enhance texture rendering capabilities for better user experience
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParser ` and refactored event handling
[ j2cl ] do n ' t execute the library if it ' s a normalization pass
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest
[ hotfix ] [ runtime ] fix memorymanager # isreed ( ) and memorysegment # isfreed ( )
added JPA Temporal annotations to ConsoleSessionVO . java to enable serialization of timestamps in the console session
added a new Hbs class and its corresponding HbsTest class to facilitate the handling of template templates in the handlebars application
added null and empty checks for hint and message items in ChatMessageAdapter and refactored setUpAvatar method to improve code readability and maintain
changed the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to ensure accurate retrieval of
simonstewart : move test to selenide test
added a null return check for distinct column indices in ReduceSinkDeDuplication . java to prevent potential ArrayIndexOutOfBoundsException when distinct column indices are
replaced URL handling with URI handling in MiscUtils . java and refactored method signatures for clarity to improve code readability and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
corrected the artifact identifier " jetty - websocket - server " and " jetty - websocket - client " to " jetty - websocket
replaced ` Collections . toUnmodifiableMap ` with ` Collections . unmodifiableMap ` in ` SAMLAuthenticatedUser . java ` to improve code
fix for bug # 3558 , repaint header when update sketchcode
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return values in multiple Java files to
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to use ` getTimestamp ( colName
updated the condition to check for " javax . naming . Context " in HtmlJndiTreeReport . java to ensure proper handling of context classes
updated database options handling in StorageUtils . java and improved log message formatting in Manager . java to enhance code readability and provide clearer
changed edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
replaced the static final integer FLAG _ SLIPPERY with a static import from WindowManager . LayoutParams . FLAG _ SLIP
truffleconstantfieldprovider : do n ' t create array dimension for non - array field
added functionality to retrieve and set the Google Drive folder path preference in multiple classes to enhance user experience by allowing users to customize the folder path
[ geos - 5378 ] add a way to shuffle suggestion popup on click
added @ Nullable annotation to method parameters in Truth . java to improve code clarity and prevent potential null pointer exceptions
updated bitwise operations for array creation in ArrayUtil . java to ensure correct bit manipulation for new sizes
added a new test class ` ApiExceptionTest ` and modified the ` ClassInstrumentor ` to check for instrumented constructors to improve error handling and
fix intermittent intermittent failure of streaminmanager and streaminmanager
added a private boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` to enable secure key
added serialVersionUID fields to StringDialog . java to ensure compatibility with updated serialization versions
updated the loop to replace single quotes with single quotes and added a conditional check for the length of ` overrideParts ` to ensure proper parsing of
renamed the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the checkDrained ( ) logic in AsyncFileImpl . java and added a new test case in FileSystemTest . java to ensure
updated LIGHTS _ NUM , LIGHTS _ NUM , and LIGHT _ INTESITY values , modified lightShader initialization , and
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test files to streamline filesystem initialization
changed the type of ` loadRerunFile ` and ` loadRerunFile ` methods from ` String ` to ` PathWithLines `
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to clarify that the TEST _ DIRS array
added a call to close the ParcelFileDescriptor class in ShadowParcelFileDescriptor . java to ensure proper resource management by closing the Par
added a method to reset the prefix index in ` BasisLibrary ` and refactored the prefix index handling in ` Stylesheet ` to
added logging level for HttpConnection in TestDistributedStatsComponentCardinality . java to improve debugging capabilities for HTTP connections
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that the ` throwIfImmutable ( )
added ` @ NotNull ` annotation to ` onApplicationEvent ` and modified ` GrpcClientBuilder ` to use ` URI . create ( )
refactor Graal . java to use a Supplier for workDir and simplify command registration to enhance code readability and maintainability by reducing
fix race condition in insightinstrument and insightpercontext . invalidatefunctionsarray ( ) .
added support for writing XML files on Windows in GenerateManifestStep . java to ensure proper handling of line endings in the manifest file
updated priority from LOW _ PRIORITY to HIGH _ PRIORITY in FindNullDeref . java and added a new class RFE3531
added nullability annotations to getConfigDescription methods in ConfigDescriptionRegistry and ThingResource classes to enhance code clarity and prevent potential NullPointerExceptions
change return type of createcancellationexception from throwable to runtimeexception
pdfbox - 4071 : do n ' t load the cropbox if it be n ' t present .
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to the All
refactor FragmentActivity initialization to use Robolectric ' s buildActivity method to improve code readability and maintainability by using Robole
rename method ` getFileCoordinates ` to ` processFileCoordinates ` and introduce a new method ` getDecimalCoords ` to improve clarity and
rename ` ABCase ` classes from ` ABCase ` to ` TestABCase1 ` , ` ABCase2 ` , and ` Test
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
modified the way the handler is set in OpenRocketViewer to ensure the handler behaves correctly when changes are made
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe for changing Maven dependency groupId and artifact IDs to enhance
refactor file system initialization and add segment path validation in IndexingJob . java and SegmentChecker . java to improve code clarity and ensure
changed the comparison method from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java `
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve code efficiency and maintainability by reducing redundancy
renamed the class ` JsonExamples ` to ` Examples ` in ` JsonExamples . java ` and ` package - info . java ` to
added debug log statements for extraction , moving , and closing streams in ViewExtractor . java to improve debugging visibility and maintainability of the code
refactor FindsByLinkText class for improved clarity to enhance maintainability and readability of the code
added a new file ` Main . java ` containing a main method that prints " java oop entry point hit " to facilitate
fix race condition in operationsetbasicinstantmessagingSipimpl and fix exception throw in sipregistrarconnection .
removed redundant continue statements from NativeScanner . java to streamline code for better readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to align the
refactor dependency resolution in AndroidLibraryDescription to use memoization for improved performance to enhance performance and reduce memory usage during dependency resolution
replaced stream ( ) . count ( ) with size ( ) for remoteContainsResults to improve performance by using size ( ) instead of count
added charset handling to metadata in ExtractingDocumentLoader to ensure correct content encoding is used for metadata processing
updated SQL insert and select statements in DatabaseConfig . java to use placeholders instead of hardcoded strings to improve readability and maintainability of SQL
added a condition to return early if the slot is - 1 in WindowListener . java to prevent unnecessary processing when the slot is - 1
add cli option to control whether to ignore remote repository introduced by transitive dependency
removed redundant declaration of backgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is not initialized
added a condition to break the loop if the matcher ' s start and end are the same to improve performance by avoiding unnecessary processing when the
updated the IntegrationTest annotation to specify the server port in MvcITest . java to ensure that the integration test uses the correct server port for
added a new UDF " reverse " to the FunctionRegistry and created a new UDFReverse class to facilitate the functionality of the Hive
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in
refactor Tracer class to improve code readability to enhance maintainability and readability of the codebase
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase in test
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization to the StarTreeRecordStoreCircularBufferImpl class and a corresponding test in TestStarTreeRecordStoreCircularBufferImpl to ensure
updated the default forecastMinutes , forecastHours , and forecastDays values in OpenWeatherMapOneCallHandler . java to improve the accuracy of
added ` timeout = 1000L ` to multiple test cases and introduced ` previousFetchRequestTime ` in ` AbstractPageOperationTemplateTest ` to
updated RemoteTargetGluer and FloatingHeaderView to improve animation handling and add suggestion mode functionality to enhance UI responsiveness and user experience
replaced ` splitAndMap ` with ` splitAndThenFlatMap ` and updated return statements in ` CucumberPropertiesParser ` to
added new item for various quicker blocks in BotaniaCreativeTab . java to enhance the visual appearance of the creative tab by providing
updated expected size assertions in TestRadioButtons . java to use the correct parameter order to improve code readability and maintainability
added support for file sizes in RCFileCat and implemented a method to retrieve the number of rows in RCFile and RCFile classes to enhance
refactor multiple clustering - related classes to improve code organization to enhance maintainability and readability of the codebase
added multiple check for ndArray parameters in JnaUtils . java to ensure proper error handling for non - closed ndarrays
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
fixed bug 1244447 - unused private method no longer report false positive
renamed variable ` lexicalScope ` to ` lexScope ` across multiple files to improve clarity and consistency in variable naming
added a new test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to verify the behavior of the ` SourcePolling
added methods to retrieve node level and root in the Quadtree and AbstractSTRtree classes , and modified constructor visibility in STRtree classes to enhance
updated version parsing logic to handle minor version numbers correctly to ensure compatibility with different version formats
added a check for non - empty tags before adding to the active item and changed log level from warn to debug to improve robustness by prevent
added a new method ` parseDateTimeStringToEpochMillis ` in ` DateTimePatternHandler ` and a corresponding ` fromDateTime ` in ` DateTimeFunctions
refactor disassemble method to use a dedicated method for cache handling to improve code readability and maintainability by centralizing cache retrieval logic
updated Log4j2ConfiguratorServlet . java file to improve logging functionality and maintainability
replaced the instantiation of HiveException and AuthorizationException with direct instantiation to streamline exception handling by eliminating redundant code
updated CGoCompileStep to use String . join for command prefix and added a new test for Cgo library with prebuilt dependencies to ensure
make customresource non - editable
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added TIMEOUT _ THREE _ HOURS constant to HttpClientFactory and set the socket timeout in HttpConnectionParams to improve connection management by allowing more time
added new event names for raw target node parsing pipeline in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to
simonstewart : add an option to disable everything but trace
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependencies
added error handling for retrieving the username from OwnCloudAccount to improve robustness by handling potential exceptions when retrieving the username
added BatchStatus import and implemented a test for resuming a job in SimpleJobLauncherTests to ensure proper handling of job resume state during job
added null check for cacheConfig before processing in HttpSyncDataService . java and improved data refresh handling in DataRefreshFactory . java to
[ grid ] make dockersession public so that it can be use .
fix compilationunitcontext to use the default java . lang .
pdfbox - 4071 : use nonsequentialparser instead of pdfparser , a suggest by valerybokov
testdistributedlanczosSolvercli : fix checkstyle violation in testdistributedlanczossolvecli
refactor HttpServerTestBase class to improve code readability to enhance maintainability and facilitate future development
added unit tests for the ` getAttribute ` method in ` PortletApplicationMapTest ` and refactored assertions in ` PortletApplicationMapTest `
added tests for ` @ DynamoDbIgnoreNulls ` in ` BeanTableSchemaTest ` and implemented ` NestedBeanIgnoreNulls ` in `
add spring - starter auto - configuration customizer for spring starter
corrected the index calculation in the Indicator class and added a new test class for the Indicator class to ensure correct indexing and validate the functionality of
added new ` execInContainerWithUser ` methods to ` ContainerState ` and ` ExecInContainerPattern ` classes to support user - specific
updated condition checks for WebSocketByteMessages and WebSocketTextMessages in NettyWebSocket . java to improve clarity and maintainability of message handling logic
added unit tests for semgrex attribute handling in SemgrexTest . java to ensure correctness of semantic graph operations and improve test coverage
added a broadcast intent to the HomeFragment to notify the home pull unblocking functionality to improve user experience by allowing users to pull up the pinned
simplified the initialization of scroller and overScroller in TouchImageView . java to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4892 - add flush ( ) method to
camel - 1748 : camel - core - optimize to reduce memory usage in abstractcamelcontext
added FloatingActionButton functionality to manage FAB menu visibility in ShareActivity to enhance user experience by allowing users to click on the FAB
added a new InlineParslet class and modified ToDateTokenizer to handle inline date parsing to improve parsing accuracy and maintainability of date parsing
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated error messages from " tecken " to " token " in XPATHErrorResources _ sv . java and XPATHErrorResources _
added a check for server checked before binding the OperationsService connection in AuthenticatorActivity . java to ensure the server is checked before binding to the operations
updated method calls from ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` to ` getBeginLine ( ) ` and ` getEndColumn
added ` waitFor ( ) ` method to ` ManagedThread ` and invoked it in ` CxxPreprocessAndCompileStep ` to ensure proper
added a new property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` to utilize it to
remove checkifloaded ( ) method from mapcontainer , increase max _ size _ per _ node to 2 minute
added support for configurable SSL protocols in NettyWebServer and related classes to enable or disable SSL connections based on configuration
replaced AtomicBoolean with AtomicReference in SetOnce . java and added a trySet method in TestSetOnce . java to improve thread safety
updated QueryDslMongoRepository to handle null properties and added a test for empty path expressions in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to clarify the expected values of RoundRectBorder to ensure correctness of RoundRectBorder comparisons and
added a check for empty genesis configuration before creating nodes in Cluster . java and updated Bft acceptance test parameters in ParameterizedBftTestBase .
simonstewart : remove flaky paralleltest . java
updated CountDownLatch and ArrayList initialization in PrecompiledContracts . java to use ' min ' instead of ' cnt ' and added a length check
changed the condition from checking if ' windows ' to checking if ' windows ' is not greater than or equal to ' ! ' to ensure correct
refactor methods in MoreCollectors for clarity and consistency to improve code readability and maintainability
added null checks for orderbook and orderbook in BitmexStreamingService and adjusted sleep duration in BitmexManualExample to improve code
added validation for latitude and longitude in GeoPointField . java and corresponding unit tests in TestGeoPointField . java to ensure valid latitude and
updated methods in ` OozieProxyImpersonator ` and ` WorkflowFilesService ` to use ` createFile ` instead of ` createWorkflow
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of the ` getTableDocument ` method based
added functionality to count consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback when uploads without coordinates are present
added caching functionality for profile data handling in ProfileResources . java to improve performance and maintainability of profile data retrieval
refactor property value handling in JpaMetamodelEntityInformation to improve clarity and maintainability to enhance code readability and maintainability by
phoenix - 1774 fix last _ ddl _ timestamp for table / view with index
added support for default exception mappers in AbstractServerFactory and removed them from DropwizardResourceConfig to enhance error handling capabilities by allowing custom exception
added a boolean parameter to the EntryEditor constructor to control the behavior of the storeFieldAction method
added an ` ownerPtr ` parameter to the ` nativeCreateNSWindow ` method and updated its usage in ` CPlatformWindow . java `
updated the SQL statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in database schema management
added a new ` STOCK ` tile type and modified animation behavior in the ` Tile ` class to enhance the visual appearance of the
fixed - rbuckets . set ( ) method do n ' t work with stringcodec
add findunrelatedtypesingenericcontainer detector to typeframemodelingvisitor
refactor LauncherBackAnimationController to utilize BackProgressAnimator for improved animation handling to enhance animation responsiveness and responsiveness
changed the visibility of the ` _ initialPageNo ` variable from ` final ` to non - final and added a new ` ContentLimit `
fix incorrect crc calculation in JedisClusterCRC16 . java and increase total operation count in CRC16Benchmark . java to improve accuracy of crc calculation
added support for parsing comments in FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to enhance SQL change log
removed initialization of ` JarArchiver ` in ` MavenArchiver ` and added import for ` JarArchiver ` in ` AbstractJarM
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling for class usage file loading
refactor conditional checks for aggregations in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability
added checks for unsupported formats and types in GwtGL20 . java to improve error handling and ensure inputed pixel data is of type ByteBuffer
added a new test method ` testDebugInfo ` in ` OutputMemoryTest ` , ` PrintR ` , and ` VarDump ` to
replaced ` UnmodifiableClassException ` with ` Exception ` and added exception handling in ` InlineBytecodeGenerator . java ` to improve error
add class initialization trace report to debug class initialization trace
[ hotfix ] [ runtime ] fix typo in basebrokerrequesthandler
replaced Google Cache with Caffeine Cache for topic route loading to enhance cache management and improve error handling
added a ` readOnly ` parameter to the ` createDataSource ` method in ` MBTilesDataStoreFactory ` and updated its usage in ` MBTiles
updated the regex pattern for invalid source and target release in FindBuildToolFailures . java and added a Fatal error compiling in FailureLogAnalyzer
updated URI construction in DetailFragment . java to include a check for the availability of the location intent to enhance user experience by allowing users to access
added null check for inheritedParameterContexts in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing inheritedParameterContexts
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future updates
added a method to set the origin response headers in ProxyRequestHelper and created a corresponding test in ProxyRequestHelperTests to ensure correct handling of
removed the new ProfileSettingDrawerItem from GpsMainActivity to streamline the setting drawer functionality
added XML validation attribute handling in multiple classes to enhance security by allowing XML validation in the application context
simonstewart : fix the firefox driver to work as expected
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure that the fetch size does not exceed a specified maximum
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` for clarity to improve code readability and maintain
added mouse event handlers for node and mouse press events in StandardVizEventManager . java to enhance event handling for node and mouse press events
replaced direct buffer memory setting with a dedicated zeroBuffer method to improve code readability and maintainability by encapsulating memory management logic
refactor TerminalNode to use a single XorGroup instance for XorGroup assignment to improve code readability and maintainability by centralizing
removed redundant getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elim
refactor path resolution logic in SourcePathResolver to use a helper method for private paths to improve code readability and maintainability by centralizing
[ dstu2 ] fix dstu2 parser state when value be set to ` ` val ' '
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and modified the URI building logic to enhance encapsulation
[ gr - 13434 ] fix test suite name to match test suite name
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve clarity and functionality to enhance code readability and maintain
added import statements for ` IndexReader ` , ` Hits ` , and ` IndexWriter ` in multiple Java files to facilitate
modified the return statement in ConcurrentLinkedStack to handle null values and updated method names in ConcurrentLinkedStackTest for clarity to improve robustness
added ` isMatched ( ) ` and ` setMatched ( false ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
updated gesture condition in RecentsView . java to check if overview state is enabled and first layout is not enabled to improve user experience by
added multiple package - info . java files for various Lucene packages to clarify package structure and improve code readability
added a line to set the visibility of the AutoLeveler panel based on localization to enhance user experience by providing clearer visibility information
added optimization callback handling in DirectUpdateHandler and DirectUpdateHandler2 , and implemented event listener initialization in UpdateHandler to enhance event optimization functionality for
updated compression handling in CompressionMode . java to explicitly set a dummy byte to 0 to ensure consistent compression behavior by explicitly setting a dummy byte to
removed the check for user data in Shaderc . java to streamline the shader processing process by eliminating unnecessary checks
added a check for isLocalMetaStore ( ) in the retry condition to ensure that retries may occur only when the base is a local meta store
updated import statements and added conditional checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to enhance error handling and
refactor Subject class to improve code structure to enhance maintainability and readability of the code
use referencetype . weak and referencetype . strong in abstractserializationservice . typeMap
updated color distance calculation in HSSFPalette . java and added a new test method in TestHSSFPalette . java to ensure correct
chore ( regen ) : update license year for generated file
added unit tests for finding multiple elements by numeric ID and updated method names in ElementFindingTest . java to improve test coverage and clarify
added a flags parameter to the registerReceiver method in ShadowApplication and updated related classes to support additional flags for receiver registration in the shadow instrumentation
refactor FFmpegTest to use Mockito ' s Answer for resource loading to improve test reliability by ensuring proper mocking of resource loading
modified the Ogg and OpenALMusic classes to include a previous input stream handling mechanism to improve resource management and prevent potential memory leaks
replaced hardcoded failure message with a constant to improve code readability and maintainability
[ te ] fix anomaly failure condition in migration migration
refactored toast handling in BaseActivity and DetailActivity to use a new showToast method to improve user interface responsiveness by allowing
updated the method call in TracingFeignClient to include the HTTP method and request template to enhance request handling by including HTTP method and request template
added error handling and validation for LDAP referral in LDAPCertStore . java to improve robustness and robustness of LDAP referral management
refactor the retain logic in GatewayRSocket by extracting it into a separate method to improve code readability and maintainability by centralizing the
renamed the class ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality to improve clarity and
[ hotfix ] [ test ] fix miniclusterwithclientresource in checkpointfailuremanageritcase
remove genericitemuiprovider which be no longer need
added getter and setter for the selected object in the SIPCommSelectorBox class to allow access to the selected object from the menu item
added JUnit Jupiter ' s @ Isolated annotation to MetaInfConfigurationTest . java to indicate the access static method of FileSystemPool
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to HttpServer . java to set the server ' s host to the bind
added conditional logic to set access and refresh tokens based on the configuration for heart mode to ensure proper token validity and refresh behavior based on the
added a new CloverInstrumentationFilter class to determine if a candidate class is a candidate class and updated the condition in SplitLogCounters to
added support for the Smartmi Evaporative Humidifier in MiIoDevices and modified the write statement in ReadmeHelper
change movementhelper . avoidbreak ( ) to calculatorcontext . miningdurationticks ( )
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 1187 . add error log for empty repository list in clusterstack and hoststackversionresourceprovider .
modify the return statement to use logical OR instead of logical AND to ensure correct handling of missing values in the HashSet
added the Serializable interface to the RuleAdministrator class to ensure proper serialization of the RuleAdministrator instance
updated ` CrossOriginFilter ` to replace ` List < String > ` and ` List < String > ` with ` Set < Pattern > `
updated g3dj file references from " g3d / cube _ anim . g3dj " to " g3d / knight
added a validation check for solidifiedPosition in the updateLatestSolidifiedBlock method to ensure that solidifiedPosition is non - negative and prevent
fix npe in execresult when value be null
added a new method ` hasAccess ` and modified error handling in ` HttpServer . java ` to include null checks for the response before sending an error
refactor ClassMirror and StubJar to utilize a new method for obtaining stub class bytes to improve code readability and maintainability by
added a TextView for sharing internal links in FileDetailSharingFragment to enhance user experience by providing a clearer string representation of the share internal link
updated string formatting to use Locale . ENGLISH in PredictionTest . java to ensure consistent locale handling across different locales
updated the condition to check for SATURDAY instead of SATURDAY in ModelZooTest . java to ensure correct comparison of
added IME hiding functionality for device search in AllAppsContainerView and logging in LauncherAllAppsContainerView to improve user experience by
add inmemoryeventstoragerequeststest to make test more robust
refactor BsdFileStore to use BsdNativeDispatcher for retrieving file names to improve code clarity and maintainability by centralizing file
add test case for issue # 1599 ( issue # 1599 )
added x , y , and z parameters to the command in SpawnCommand . java to enhance command execution flexibility by allowing optional parameters for
updated height calculation to use a constant MIN _ CONTENT _ DIMEN and refactored getContentAreaWidth method to improve code readability and
make graalcompilertest . codeinstall final , remove unused import
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added failed checks to the plugin checks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 to improve
refactor Environment class to improve code readability to enhance maintainability and readability of the codebase
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with a BadApple annotation to improve test reliability by
modified the home assignment logic in CodenameOneImplementation . java to ensure the home path does not end with " " getFileSystemSeparator ( )
replaced FLAG _ IGNORE _ HDMV _ DTS _ STREAM with FLAG _ ENABLE _ HDMV _ DTS _ AU
updated import statements and modified resource accessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser classes to improve resource management and
added security properties to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms in the security framework
updated the ` @ Value . Immutable ` annotation to disable ` builder = false ` and ` copy = false ` and ` copy = false `
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` , ` actualStubDirectory ` , and ` actualFull
updated the declaration of the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to improve code readability and maintainability
refactor folder name hint setting logic to check for empty title to improve clarity and maintainability of the code
updated the ` loadClientByClientId ` method calls to include an additional parameter " uaa " to ensure proper handling of the UAA client
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated value retrieval logic in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle closed state correctly to ensure proper handling of closed
refactor MimetypeIconUtil class to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " supportsViewFor " in multiple view provider classes to " supportsViewsFor " to ensure consistency in method naming
added a test for negated parentheses in UnnecessaryParenthesesTest . java and modified the condition in UnwrapParentheses . java to ensure
added a built state and a teleportation method to the Location class to enhance the functionality of the Location class by allowing the invocation of the teleport
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint to improve compatibility with Spring ' s built - in base
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the ` ContainerAnnotation ` interface to ` ContainedBy ` to improve clarity and consistency in naming conventions
added a null check for the ' getId ( ) ' parameter in ObjectIdentityImpl . java to ensure that the ' getId ( ) ' method
refactor the ` setUpRevampedTweet ` method to include a ` isMuffled ` method for better clarity to improve code
added conditional logic to display the verified text based on the user ' s theme to enhance user experience by allowing customization of verified text based on
modified the AbucoinsDigest constructor to remove the static instance variable and changed the timeDiffFromServer variable to final to improve encapsulation and
camel - 14836 : camel - mongodb - add autowired option to mongodb component to make it easy to configure the mongodb
added an ` sourceIndex ` field to the ` AttributeMapping ` class and updated related classes to utilize it to improve the handling of source
log warn when attempt to alter partition statistic
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure security is enabled before proceeding
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 5357 ] escape email in contact email in home page
remove reflections . cache from modulemanagerimpl and move it to terasologyengine
updated the way features are written in JoinModeller . java to use the number of features instead of the length of the means and VARI
[ 3.0 ] check for non - empty string before check for ` ` < math ' '
[ hotfix ] [ kafka ] do n ' t log offset value in resume strategy
updated references to ` ACTION _ SET _ PLAYBACK _ SPEED ` to use ` PlaybackStateCompat . ACTION _ SET _
added functionality to handle ' automatic ' separation in motor configuration and updated relevant classes to enhance motor activation event handling and improve clarity in the
tika - 1187 -- improve error message if ascii name length be < 0 or < 55
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable the test due to JDK 1.7
refactor lock file creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated shared preferences from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple sync interval entries to
added a check to return null if the username equals the Federation _ USER to ensure that the authentication process does not return null for
do n ' t check if the value be an instance of trufflestring in executemethodnode .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
logbackvalve : do n ' t print error status if the filter chain be disabled .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed the import of Version from CreateIndexTask . java to streamline the code by eliminating unnecessary dependencies
added schema handling for missing primary keys in MissingPrimaryKeyChangeGenerator . java to ensure proper indexing and schema management for the comparison database
added MetastoreException to the ` execute ` and ` repair ` methods in ` MsckOperation ` and ` Msck ` classes to
[ hotfix ] [ kafka ] retry kafkaproducer . committransaction in kafkaproducer
added receipthandleprocessor to the forwardmessingactivity so that it do n ' t remove the receipthandle from the request .
added a service list and modified the command execution logic in DockerComposeContainer . java , and created a new DockerComposeServiceTest . java class
fix : use copyset in export , structcontextdecorator and export
removed unused HtmlCleaner imports and simplified XML processing in FeedParser . java to streamline code and improve readability by eliminating unnecessary
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and updated cell layout retrieval in Workspace . java to streamline
changed data types from int to double for various energy - related fields in MeterRealtimeBodyDataDTO . java to improve precision in data representation
added a new file ` bug4150029 . java ` that implements a JApplet with a file chooser to create temporary directories and
added a new boolean field ` isSparkConfigUpdated ` to ` HiveConf ` and modified related methods in ` SparkClient ` , ` Spark
added long press indicator functionality to AppIcon , AppIconMenuItem , and Launchable classes and updated Launchable class to include this method to enhance
added checks for empty polygons in WKBWriter and updated corresponding test cases in WKBWriterTest to improve handling of polygon empty scenarios and ensure
refactor UnflavoredBuildTarget to use a builder pattern using Interner for better interning to improve code readability and maintainability
added a new file MultiplyByMaxInt . java that contains a method to multiply an integer by its maximum value to facilitate
removed the onActionViewCollapsed ( ) method call from OCFileListFragment . java to streamline the code by eliminating unnecessary navigation
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the codebase
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify the
dmn : add message for no expression define for name on node .
replaced instances of ` @ ContainedBy ` and ` @ ContainerFor ` with ` @ Repeatable ` in multiple Java files to ensure
updated the console message to include the duration of the file sending process to improve clarity of the output of the file sending process
updated class name retrieval and access check in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks before class loading
fix readresponseresolver to respect the response count
updated freeSize calculation in StoreDirect . java to ensure freeSize does not exceed 16 - bit limits
fix issue with swipe up to utility keyboard
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility with the latest Ssl
removed the PrivilegedSocket class and simplified the connection initialization in PG _ Stream . java to simplify the code and improve readability by eliminating
refactor InputTest class to improve code readability to enhance maintainability and facilitate future updates
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept a Runnable parameter and added functionality to pause blurs on Windows
updated NearbyMapFragment to conditionally remove the current location marker based on the presence of curLatLng to ensure the current location marker
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( getClientId ( ) ) ` instead of ` client ` to ensure
updated SQL query parsing in SqlSourceBuilderTest to use " @ BeforeEach " instead of " @ BeforeAll " to improve test reliability
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix amq - 4
added unit tests for ` UnknownKeyException ` and ` Unknown rowKey ` in ` SlidingGanttCategoryDatasetTest . java ` to ensure
added null checks and empty list handling in ShenyuTrieRuleListener . java , and added return statements in ZookeeperSyncDataService
add clonefields method to lightcontrol to make it easy to clone field
added ` @ SuppressWarnings ( " unused " ) ` annotations and modified stack trace handling in ` StdErrLog . java ` to improve code cl
replaced direct calls to ` context . publishEvent ( e ) ` with calls to ` getContext ( ) ` in ` HttpSessionEventPublisher `
added a semantic exception for CQ statement change from v0.14 in ASTVisitor . java to ensure the syntax of CREATE CQ statement
[ hotfix ] [ doc ] fix typo in flinkiottdbsink
add a counter to track custom simplification in the canonicalizer .
updated the parameter in the setImageDrawable method call from null to context in ActivityListAdapter . java to enhance flexibility by allowing context to be
updated method call to include schema name in readIdentifierWithSchema and renamed " dropSchema " to " dropIndex " in TestScript to ensure
fix ( bigqueryio ) : add support for ` ` time ' ' schema in bigqueryio
added ` findViewWithTag ` methods to ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest ` to
updated for - loops to use generics in multiple Java files to ensure type safety and avoid unchecked casting
updated import statements in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated enum value retrieval in SpringBootDocBuildTemplate and JavaClassUtil
svm : fix npe in case jar file be miss .
updated CUDA configuration values in cublas . java and changed the PATCHLEVEL constant in cudnn . java to ensure compatibility with the new CUDA
replaced the ResourceLoader class with an import and updated its implementation to streamline the code and improve readability by eliminating unnecessary
fix a bug in redstonetorch . getattachedface ( ) that throw an exception .
added support for VARBINARY in RelToStageConverter to support binary data handling in the RelToStageConverter
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve readability
updated backup status messages and error handling in Backup . java and Captions . java to improve error handling and provide clearer feedback for backup load
ggb - 1369 fix position of simple element in web
updated file creation logic in ShadowParcelFileDescriptor . java to use TempDirectory . create ( ) . toFile ( ) instead of path to
replaced ` offer ` method calls with ` addFirst ` and ` removeFirst ` methods in ` StackBasedSecurityContextHolderStrategy ` to stream
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
improve canonicalization of integerequalsnode for xorutral snippet and xorutral reference
added a static final String _ ARRAY constant to the TypeFactory class to enhance type handling for string arrays in the application
refactor IME hiding logic in AllAppsContainerView and improve logging in LauncherAllAppsContainerView and LiveSearchManager to enhance
add blockstatecontainer . setbits ( ) method to force bit density to fix network issue
updated assertion messages in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for clarity to improve readability and maintainability of
add the maximum texture size to the player usage snooper and add a new method to retrieve the maximum texture size to improve texture performance by
[ java ] : fix typo in trystoplogrecording ( )
added a condition to set startPosn to 0 if isInTransform is true to ensure proper initialization of startPosn based on transformation state
replaced ` StarTreeUtils . isStarTreeDisabled ( queryContext ) ` with ` QueryContext . isSkipStarTree ( )
added a lockNearbyView flag and modified the refreshView method to handle nearby places refresh more effectively to improve user experience by ensuring the
add maptransformer . of ( ) , inverse ( ) , bimap ( ) , and bimap ( ) method to make it easy to
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added a new method to retrieve loaded launcher widget information and updated the LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget retrieval functionality to support
replaced ` ChangeListener ` and ` ChangeListener ` implementations with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes
added methods to manage calling UID and UID in ShadowBinder and corresponding tests in ShadowBinderTest to enhance testing capabilities and ensure proper handling of calling
refactor ExpectationFailure class to accept a Throwable cause instead of a String message to improve error handling by allowing the cause of the Expectation
added a warning log statement for deserializing messages in BitcoinSerializer . java to improve clarity of error handling during message deserialization
pdfbox - 4892 : fix issue with imagereplacedelement when target width / height be - 1
updated escape character handling in Markdown rendering and adjusted buffer appending logic in MarkdownWriter to improve HTML rendering accuracy and ensure correct formatting of escape characters
refactor password handling in SharePasswordDialogFragment to use a new method for clarity to improve code readability and maintainability by centralizing
refactor MAP _ ADDRESS , UNMAP _ BUFFER , and UNMAP _ BUFFER initialization to use a class for reflection access to improve code
replaced instances of ` public ` with ` public ` and ` randomAlphanumeric ` in ` AbstractAssert _ describedAs _ printed _ to
added new command - line options for Slider AM keytab in LlapOptionsProcessor . java to enable dynamic configuration of the Slider AM
updated tearOutGraphViewContainer to accept a JFrame parameter and modified animation control in multiple classes to enhance the functionality of the tear
added synchronization and state management for shortcut binding and workspace loading in LauncherModel . java to ensure proper handling of loader state during the binding process
changed fields in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to be final and modified the isFinished logic
renamed the ` add ` method to ` messageType ` and added a new ` setCheckValid ` method in ` IssueInterface ` , and
added a method to safely retrieve the cipher provider name and improved exception handling in RSAClientKeyExchange . java to enhance error handling and provide
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging for improved performance
updated output formatting in AggregateLifeCycle . java to improve readability and maintainability of the code
changed access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to these constants from other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to temporarily disable the test due to known bugs
refactor curly method to use a dedicated Qtype variable to improve code readability and maintainability by reducing redundancy
camel - 1748 : camel - model - make it easy to load route from xml
set space minimum and maximum values for X - axis in ScatterChart to ensure consistent spacing for chart rendering
updated the formatting of the INTERVAL string in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and implemented it in ` BaseState ` to
added a check for the presence of the UTF8 key in the properties file to ensure that the UTF8 key is not present in the system
updated test annotations and output statements in LuceneTestCase . java and TestReproduceMessage . java to improve test clarity and ensure
added a new UI event for long - pressing an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to improve user
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a new boolean flag ` showSectorLandInfo ` in ` SectorPreset ` and modified the condition in ` Control . java `
updated type casting from ` CompositeType ` to ` CompositeType < ? > ` across multiple files to ensure type safety and improve type safety
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation checks for the ` randomSelection ` parameter
remove temporarycache . getlastupdatetime ( ) and use cachebuilder . expireafterwrite ( ) instead
hide the ` createSQLViewContainer ` and ` createWMSLayerImportContainer ` in ` NewLayerPage . java ` to ensure proper
initialized the ` _ availability ` variable to ` Availability . UNAVAILABLE ` to ensure that ` _ availability ` is set to ` Availability . UN
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` SyncService ` , and ` SyncService `
chore : upgrade gapic - generator - java to 2.1 . 0 and update gax - java to 2.1 . 0 for
rename ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and update related methods in ` DBMaker ` to
changed the visibility of KDC _ OPT _ PROXITIVE , RENEWABLE _ OK , FORWARDABLE , and FORWARDABLE
refactor the initialization of the writer in Json . java to improve code clarity and ensure proper initialization of the writer
reformatted code for consistency and readability in ProfilePager . java to improve code readability and maintainability
renamed the ` paintBackground ` method to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in
added a method to retrieve a value from a class constant in the Configuration class to enhance flexibility in handling constant values in the configuration
added logging for service initialization failure in KafkaService . java to improve error handling for service initialization failures
updated the RESOURCES _ TO _ ALWAYS _ ACQUIRE set to include " usr / share / zoneinfo / tzdata " to ensure
messagebus now allow the ' autocreatechannels ' option for the default channel .
added keywords handling in HTMLDocument and implemented a test for index keywords in TestDemo to enhance document processing capabilities and ensure correct encoding of index results
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional block to initialize the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the _ addresses list is only initialized when
replace instantiation of CorrespondenceSubclassToFactoryCall with a class reference to improve clarity and maintainability of the test code
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
updated ISBNtoBibTeXFetcher to use " www . ebook . de / de / tools / isbn2bibtex
[ polyglot ] increase keep - alive time to 10 second .
added null check for text before firing data change events in TextField . java to prevent potential NullPointerExceptions when the text is null
add a simplified model to the sentiment model so that it can be use .
trim whitespace from the input string in SuffixURLFilter . java to ensure that the input is not empty before proceeding
added a check for Godmode in HandlerCombatInvocationsNotify . java to return early if the layer is in Godmode to
kristianrosenvold : do n ' t register and unregister popups in checkbox creation dialog
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap for consistency and clarity to improve code readability and maintainability by standardizing constructor parameters
removed redundant calls to _ channel . close ( ) in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and modified KeyIndexBuilder instantiation in OrcRecordUpdater . java to
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better readability to improve code clarity and maintainability by
add the ability to set the store checkguard in writenode .
improve performance of bciblockmapping . checkreachable ( )
add a method to get classification disagreement in AbstractCloud and DBCloud classes , and update ViewFilter to reflect this change to improve accuracy of
replaced instances of ` BuildTarget . copyOf ( buildTarget ) ` with direct assignment of ` buildTarget ` in multiple files to simplify code
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to improve clarity and
change spinner type from ProgressIndicator to ConfidenceProgressIndicator in CreateOfferView . java to improve clarity and maintainability of the spinner
replaced " Cling / " with " UMS / " in RequestHandler and RequestHandlerV2 , and added UMS headers in UPNP
make blockindex . iteratebpt ( ) optional to force iteration
added a new constant for view type and modified the onCreateViewHolder method to handle different view types to improve flexibility in handling different view
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in both ` LinuxLibrary ` and ` MacOSXLibraryDL `
fix a bug where CONJP do n ' t match the number of out - of - range
removed the canvas parameter from the insert method and related calls in TexturePacker . java to simplify the image insertion process and improve code readability
replaced the ` getVisitors ( ) ` method with a default ` apply ( ) ` method in ` RefactorModule . java ` and
added methods to retrieve child elements by name , recursive , and array elements in Xml . java to enhance XML manipulation capabilities for child elements
set the Content - Charset header to " UTF - 8 " in HttpSolrServer . java and its corresponding tests in BasicHttpSolrServerTest
added ` @ SystemUiControllerFlags ` annotation and updated UI state management in ` SystemUiController ` and ` TaskThumbnailView ` classes to
removed the private ClientConfigurationService field from IntrospectingTokenService to clean up the code and improve readability
updated the RuntimeException message format in HiveRecordSet . java to improve clarity of error messages for better debugging and debugging
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
renamed ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` and updated its usage in ` SnapshotManager
added score calculation to the merge method in TextFragment to ensure that textEndPos is correctly set based on score
removed the private Digester field from Md4PasswordEncoder . java to clean up the code and improve readability
added a validation check for maximumUnimprovedStepCount property to ensure that maximumUnimprovedStepCount is non - negative to
added a check for empty currently opened edits in EditGcodeFile . java to avoid unnecessary processing when no edits are currently opened
replaced direct calls to ` verify ( ) ` with ` Mockito . verify ( ) ` in ` BDDMockito . java `
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner
updated the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a string representation and added an asynchronous operation for
initialize testloggingutils in abstractsplitbraintransfertest ( # 1841 )
added null checks for logoutConfigurer before adding filters in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointerExceptions when logout is
[ giac ] fix problem with giac [ giac ] [ giac ] [ giac ] [ giac ]
added logging functionality to ` DockerComposeContainer ` and created a new test class ` DockerComposeLogConsumerTest ` to improve logging functionality and ensure
updated the generic type parameter in the testMapping method from Class < ? > to Class < ? > to improve type safety and clarity in
removed unused imports from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to create a ` ThrowingSupplier `
replaced a break statement with a return statement in ConsoleActivity . java to ensure that the method returns a boolean value indicating success
camel - 16750 : camel - platform - http : add support for post with content - type . text
added methods to handle platform - specific path separators in MorePaths . java and updated CopyStep . java and AarWithLibsIntegrationTest
added a null check for authorizationContext . getParams ( ) before processing parameters to avoid potential NullPointerException when parameters are null
replaced the method ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` NativeLibraries . java ` to improve error handling
updated SDK version from " 4611349 " to " 4514284 " and added tests for text speak functionality to ensure compatibility with
queuetransactionlog : add transactionlogkey . hashcode ( ) to make it easy to compare transactionlogkey .
added a boolean flag ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository ` to
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
remove eclipse compiler generic warning and use eventgenerator . fromfunction ( ) instead
updated the variable name from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated the ` getThreadInfo ` method to include a ` STACK _ TRACE _ DEPTH ` parameter in ` ThreadStatesGaugeSet ` to improve
added a transaction log pre - commit handling in UpdateLog and updated sleep duration in LeaderTragicEventTest to improve transaction management and ensure
updated file path from FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1.17 in BukkitPlatform
added null check for input path in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored vertex coordinate retrieval in ` TriangulationHelper `
updated JdbcAuditService to use IdentityZoneId instead of principalId in the find method to ensure that the correct identity zone ID is used for
refactor SpanCollector class for improved performance to enhance performance and maintainability of the code
added a null check for SESSION _ MANAGER . getCurrSession ( ) before accessing its properties to avoid potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved readability to enhance maintainability and facilitate future updates
rename methods and variables from " printLVgroups " to " printLogicalVolumegroups " in OshiController . java
added a variable for the current thread name and set its name to the remote URL to improve clarity and maintainability of the thread ' s
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
simplified the return statement in the LauncherExtension class to streamline the code by eliminating unnecessary initialization of the ArrayList
added a new OverviewToAllAppsTouchController to the list to enhance touch controller functionality in the Recents UI
replaced the scaleHotseatWithWorkspace method with a new getHotseatScaleAndTranslation method in LauncherState . java to
added a check for JUnitRule in the DefaultStackTraceCleaner class to ensure that the filter does not filter elements above the JUnitRule
replaced instances of ` dstBuffer . hasArray ( ) ` and ` srcBuffer . hasArray ( ) ` with ` dstByteArray `
refactor balance listener management in DepositListItem . java to use a local variable to improve code readability and maintainability by reducing
updated color conversion logic in RealisticRenderer to handle both STICKER and STICKER edge modes to ensure proper color conversion based on edge
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization in various test classes to ensure proper handling of null values
remove patternutil . checkpattern ( ) from gl200protocoldecoder
added a check for the last playback time in the FullDetailsActivity to ensure that the last playback event time does not exceed a maximum of 2000
refactor the elliptic node handling in SpanishXMLTreeReader . java to improve clarity and maintainability of elliptic node
added a check for an empty dc value in InstallItem . java to ensure proper handling of empty dc values in the item
updated ReactiveLoadBalancerClientFilter to override the scheme based on the secure status of the server instance to ensure the correct scheme is used based on the
updated byte buffer handling in DefaultMessageStore . java to improve code clarity and maintainability
removed the ` private final ` modifier from the ` fullFilePathFromClassName ` method in ` NativeImageDebugInfoProvider . java ` to ensure
refactor the return statement in ShadowBackupManagerTest to use a lambda expression instead of an anonymous inner class to improve code readability and reduce
corrected the spelling of " isNonUSLocales " to " isNonENLangSupported " in multiple files to ensure consistency with the
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the code by eliminating unnecessary null checks
added minecraftforgeclient . java and modloader . gl11 . gl11 . gl11 . settexture ( ) to
added a return statement in TxCacheDB . java to ensure proper handling of transaction operations
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal
refactor FastDictionary class to improve code readability to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 4892 - change session status to be closed
updated FlightEvent parameters for GROUND _ HIT and SIMULATION _ END in FlightEventsTest . java to improve accuracy and accuracy
( chore ) camel - beam - grpc : migrate protobuf from vendored to vendored grpc - v1.26 . 0
replace ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java ` to
update instructorfeedbackresultspagedata to use getstudentprofilepicturelink ( ) instead of getprofilepicturelink ( )
added a shortRules list to the DefaultPasswordValidator to allow additional rules based on the password length to improve validation flexibility by allowing short rules
simonstewart : increase the default number of capture screenshot to 20 instead of 50
removed the JUnit Test annotation from ProxyClassSerializationTest . java to clean up the test code and improve readability
updated the argument string format for scaling and padding in DLNAMediaInfo . java to improve clarity of the output format for better
remove speculative guard movement phase from truffle runtime compilation
added a condition to check if the context contains the AUTHENTICATION _ MANAGER and is a alias in the AuthenticationManagerBeanDefinitionParser to
updated conditions for handling forwarded host and port in ForwardedRequestCustomizer . java and added new test cases in ForwardedRequestCustomizerTest
added a call to StringBuilder . setLength ( 0 ) in ConsoleReader . java to reset the buffer to avoid potential null pointer exceptions
changed access modifiers of allowedRoles and disallowedRoles lists from private to protected to restrict access to these lists for better encapsulation
update OpenIDE - Module - Specification - Version from 1. 54 to 1.32 across multiple files to ensure compatibility with the latest versioning
hbase - 2649 add tl wrap size configuration for netty rpc server ( # 2649 )
refactor multiple classes including CookieStore , HttpURLPermission , Inet4Address , Inet6Address , InetAddress , SocketOption , and URI to
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added new test cases for tokenizing smaller strings with whitespace to improve test cl
refactor OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding based on SAML constants to enhance security by allowing dynamic binding for SAML2 authentication requests
added AttachedSurfaceControl import and modified SurfaceControl . Transaction handling in DepthController . java to ensure proper rendering of SurfaceControl transactions based on
update version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure
hbase - 2248 addendum fix check for write action in securitymanager
updated the subList method to use a range of 0 instead of the size of maxOpenFileNumInEachUnseqCompaction to ensure correct
camel - 1847 : camel - core - file - converter should convert file to inputstream so that it can be use in camel -
added login functionality to the ShardManager and DefaultShardManagerBuilder classes , and implemented the login method in ShardManager to enhance user experience by allowing
removed unnecessary whitespace in the DeleteGlobalRef method call to improve code readability and maintain consistency
corrected the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to ensure consistency in naming con
added a condition to check if the response is marked before executing the response completion to ensure that the response is only executed when the completion is marked
added a condition to check if the student is a user - student before comparing with the response giver to ensure that the user - specific team
added checks for linked profile permissions and updated profile path handling in BMPImageReader . java to ensure proper profile management and ensure proper
updated the parameter order in the setSimpleCuboid method calls from ' + 1 ' to ' 1 ' in ClassicPlotManager . java
added a wait message and a Runnable to the actionPerformed method in PMDOpenTool . java to improve user experience by allowing users to wait for
refactor grid size setting logic into a separate method and improve code readability to enhance maintainability and ensure proper handling of poster size settings
change return values from false to true in ContributionsListFragment . java to reflect the correct state of the ContributionsListFragment
added a new test method ` testSkipRange ` to ` DistinctPrefixFilterIT ` and modified the ` BaseResultIterators ` to
added unit test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide a way to retrieve the last modified
added a condition to check if the " metaTable " property is valid in HiveIcebergStorageHandler . java to ensure that the file
change the currency field from a TextField to a ComboBox < TradeCurrency > and add a prompt for selecting a default currency to enhance
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all exceptions instead of just IOException
added a new boolean variable ` mStartedEnterAnimation ` and modified the logic for handling item range changes in ` IconRecentsView . java
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID for better
updated action labels and methods in SendMailActions and SendMailWithAttachments classes to improve clarity and consistency in email sending functionality
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` in ` SocketServer . java ` to ensure that the ` isActive
replaced occurrences of ` isDesc ( ) ` with ` isAsc ( ) ` in multiple classes to clarify the purpose of the
added type casting for CharSequence in multiple append method calls to ensure proper handling of CharSequence types in string operations
added a check for the ownCloud app name in the date validation logic to ensure that the app name is correctly validated based on the current name
hbase - 2278 masterfilesystem should set permission to 700 when kerberos be enable .
updated method calls from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class implementation to improve code readability and maintainability
updated state format handling in CollectionsHandler and related test classes to use String instead of int to improve flexibility in state format management and ensure consistent
removed the type variable from logging statements in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java to streamline
added additional exception type check for IllegalArgumentException in PDICCBased . java to ensure proper handling of IllegalArgumentException in exception handling
corrected formatting of conditional statement in AbstractFileResourceSet . java to improve code readability and maintain consistency
maven plugin : fix path translation for file parameter
[ beam - 3892 ] move bytebuffercoderregistrar to extensions . protobuf and add protobufcoderregistrar
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer and added a new test for signed numeric literals in Hql
updated the ` generateLaunchLugFromRAeroRailGuide ` and ` RailButtonFromRAeroRailGuide ` methods to
removed the getNonceFactory method implementation from BitmexStreamingExchange to simplify the code by eliminating unnecessary method implementation
updated logging statements to use placeholder syntax for improved readability to enhance code clarity and maintainability by using placeholder syntax
[ java ] use default timer interval for client liveness and publication timeout in driverconductortest .
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to ensure that
added a call to ` searchField . grabFocus ( ) ` in ` FullTextSearchPanel . java ` to ensure the search field is
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
added a comment to the test case to clarify that the test returns something for a random number to improve code readability and maintainability
updated the expected value assertion in TestSolrConfigHandler . java to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and updated mocking in ` CsrfWebFilterTests ` to enhance test reliability
updated regex pattern in FilterResourcesStep . java to include a fromDensity variable to improve flexibility in drawable matching based on the density
added a buttonUIID variable and refactored component update logic to use a helper method to improve code readability and maintainability by central
removed unnecessary import of DisplayMetrics and simplified the rotation condition in RecentsAnimationDeviceState . java to improve code readability and maintainability
added two new test classes , TestArrayWithDifferentLengthConstness , TestArrayCopyWithConstantArrayLengthAndVariableArrayCopyLength , and
added an import statement for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability by eliminating unnecessary
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential memory leaks
replaced ` get ( iface ) ` and ` get ( iface ) ` with ` getOrDefault ( iface ) ` in ` NetMetrics .
added nonce parameter and claims retrieval in TokenMvcMockTests to ensure the correct nonce is used for token claims
refactor multiple chart editor and axis editor classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for the form layered pane
added maxY method to the BrowserContentPane class to calculate the maximum height based on the owner ' s height to ensure proper height calculation based on
modified the ` openDatabase ` method to return a boolean value indicating whether the database is connected to ensure that the database connection is only opened when
replaced private static final string DOCKER _ COMMAND with a public static constant Platform . DOCKER _ COMMAND in DockerTestUtils .
added null check for input file before reading input in TestIsartorValidationFromClasspath . java to improve robustness by preventing potential NullPointerException
added a color parameter to the drawLeaveBehind method and updated its usage in TaskbarView , CellLayout , and PreviewBackground classes to
add a warning when the flutter plugin do not work with canary version
fix npe in listresponseserializer when table name be null
added methods to enable and disable module persistence in StartArgs . java to enhance command - line argument handling for module persistence
updated argument length check from ` = = 1 ` to ` > = 1 ` in ` GeminiMarketDataService . java `
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to ensure uniqueness of questions in the flow scope
add a test case for the realm to verify that a user do n ' t have a role .
updated JSP files in AuthCheckFilter . java to remove specific JSP files to ensure proper functionality of the setup configuration in the AuthCheck
[ hotfix ] [ runtime ] fix scheduler . postdelayed ( runnable , scheduledtime ) issue
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner classes to use varargs for argument handling to improve flexibility in method
refactor character reading logic in XMLParser . java to handle end - of - stream cases to improve robustness by avoiding unnecessary parsing of
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to ensure that overflow pages
added pivot position adjustments for mArrow based on mIsAboveIcon condition to ensure proper arrow positioning based on icon state
remove printstacktrace on interruptedexecutionexception
refactor updateThumbnail method to include a refreshView parameter for better control over thumbnail updates to improve the responsiveness of thumbnail updates based on
pdfbox - 4892 : remove reference to org . apache . pdfbox . extractor
added a boolean parameter to the InternetAddress constructor and validated the hostname in HostnameFormatSpecifier to ensure that the InternetAddress is created from the parent
removed unnecessary references to ` this ` in multiple activities to streamline code by eliminating unnecessary references to the ` this ` instance
updated ` MatchEntireSegmentDocIdSetBlock ` , ` SizeBasedDocIdIterator ` , ` FilterBlockDocIdSet ` ,
modified the ` promptToOpenFile ` method to accept an additional ` existingFileName ` parameter and updated its usage in ` FilePanelEntry `
updated widget span settings and added page count update methods in AppsCustomizePagedView . java and AppsCustomizeTabHost .
added logic to transform coordinates and coordinates based on active instances in FlightConfiguration . java to improve accuracy of component dimensions in flight configurations
camel - micromemessagerequest : use direct : instead of seda :
added Locale . ROOT to DateTimeFormatter instantiation in TimeHelper . java to ensure consistent formatting across different locales
( chore ) camel - dspace - add filter to the list of permission that do n ' t exist
added a new test method ` testMissingRequired ` to the ` StarTreeConfig ` class to ensure that missing required configurations are handled correctly
camel - 17446 : camel - spring - dsl - add support for dynamic recipient list in frombuilder
refactor InlineLayoutBox and HoverListener to improve parent handling and repaint logic to enhance clarity and maintainability of the repaint logic
replaced the ` DetectAuthenticationMethodOperation ` with a ` OperationsService ` in the ` AuthenticatorActivity ` class to enhance the authentication process by
