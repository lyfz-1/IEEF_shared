replaced the instantiation of SocketAppender with a constructor that sets remote host and port to improve encapsulation and ensure proper configuration of the SocketAppender
refactor header handling in BasicAuthPlugin to use a separate method for retrieving prompt headers to improve code readability and maintainability by reducing
removed the use of RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to streamline code by eliminating unnecessary method calls
fix vm overcommit ratio calculation when vm detail cpu or ram be null .
added a constructor to ShadowPaint that initializes flags and returns anti - alias status to enhance flexibility in handling paint anti - aliasing behavior
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
do n ' t fail the detector test if eclipse be use to compile the project
added a condition to check if the nonce is not empty and updated authentication scheme handling in the AsyncHttpProvider to ensure that the nonce is not
added a listener interface ` RemoteInputListener ` and modified the constructor of ` RemoteInput ` to utilize it to improve responsiveness by
reformatted conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated filter condition to check if the device is enabled before processing the handler to ensure that only enabled devices are processed , improving data integrity
added null check before accessing ` bs ` in ` AuthorizeAdminServlet . java ` to avoid potential NullPointerException when ` bs ` is null
updated assertions in various test classes to use regular expressions for year separators to ensure compatibility with Java 9 and later versions of JSON handling
added JSON string representation of DAG context and description in TezTask . java to provide detailed context and description of the DAG for better
updated time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time tracking
replaced direct calls to ` getUploadCount ` with ` getMWApi ( ) ` in ` ContributionsActivity ` and removed ` RxJava2
remove lock _ mode _ read _ committed and multi _ threaded check for mvstore
[ issue # 5640 ] fix commitlog offset limit ( # 5641 )
added a check to ensure the folder info is marked as open when it is marked as open to improve error handling and ensure proper folder state management
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are processed in ascending order for consistency and
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the
changed parameter type from Object to ItemInfo in UninstallDropTarget . java to improve type safety and eliminate unnecessary type casting
updated the assertion in RequestBuilderTest to use an ' isIn ' method instead of ' hasMessage ' to improve clarity and accuracy of error messages
refactor NearbyActivity to use NearbyListFragment instead of NearbyMapFragment and improve fragment handling to enhance code cl
[ hotfix ] [ runtime ] fix typo in flatprofilecontainerfree
added a boolean field ` send _ zero _ anomaly _ email ` to ` EmailConfiguration ` and configured it in ` EmailReportJob `
[ hotfix ] [ kafka ] fix the invocation order of open method in flinkkafkaconsumerbase
removed user and geofence methods from DataManager . java to streamline database queries by eliminating unused methods
added a constructor to the BlockingResponseListener that accepts a maximum length of 2MB to ensure proper handling of larger data sets in response processing
[ java ] change mcast message handling to use byte array instead of xbytebuffer .
replaced System . out . println with logger . info and refactored snapshot fragment sending in MultiLeaderServerImpl . java to improve logging
removed unnecessary URL parameters from the assertion in LoginSAMLAuthenticationFailureHandlerTest . java to simplify the test case for better readability and maintainability
updated test cases in ConfigMetadataProviderTest . java to improve test coverage for configuration metadata handling
updated import statements in ListFragment and SnoozeActivity to use ' noteToUpdate ' instead of ' note ' to improve code clarity
replaced the custom DirectoryStream . Filter implementation with a static final AcceptAllFilter class to simplify code structure and improve readability by reducing
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
refactor lookupType method to throw ClassNotFoundException instead of throwing a NoClassDefFoundError to improve error handling for ClassNotFoundExceptions during type resolution
added validation for Docker image names and improved error handling in GenericContainer . java , DockerName . java , and DockerNameTest . java
updated the error dialog message from login _ failed _ username and login _ failed _ password to login _ failed _ wrong _ credentials to provide clear
added " autofocus " functionality to multiple form classes to enhance user experience by improving form responsiveness
added unit tests for SAML configuration properties in ` SamlIDPRefreshMockMvcTests . java ` to ensure correct behavior of identity zone properties
added checks for non - digit values in the ComparableVersion class and updated test cases in ComparableVersionTest to ensure proper handling of numeric values and
updated method calls in Sheet . java and added theme properties in UIManager . java to improve layout handling and ensure proper dimensions are returned for better
updated package structure and import statements in RobolectricTestRunner , ParallelUniverseTest , and ParallelUniverseTest classes to organize
replaced calls to ` changeReturnType ( BoundedLocalCache . class ) ` with ` changeReturnType ( FACTORY _ CALL ) ` to
change the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the
added functionality to draw self - loops in the graph to enhance the visual representation of self - loops in the graph
updated the constant name from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve method naming consistency and clarity
added a call to set the translation Y position of the drag handle indicator in AllAppsTransitionController . java to ensure the drag handle indicator is
updated logging statements in CollectionViewer , CommunityViewer , and ItemViewer to include null checks for collection , community , and item IDs to improve
updated query optimization configuration messages to clarify behavior during query optimization to improve user understanding of filter management during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to address build server issues related to itself to address build server issues that may cause
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java to diagnose OSGi bundles
fix activitioptimisticlockingexception when update process instance lock time
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced the @ AddToRuleKey annotation with @ ExcludeFromRuleKey in GenruleBuildable . java to exclude specific Genrule execution
added a method to check for the executable file in the AsyncExecute class and updated FirefoxCustomProfileLauncher to utilize it to improve flexibility
add a check for existence of a column family in the colFamToDynamicColumnsMapping map to ensure that only unique column names are added
[ hotfix ] [ runtime ] remove @ suppresswarnings from hadooptupleunwrappingiterator
added a check for client version and table type in MetaDataEndpointImpl . java to include derived columns and indexes from parent tables to ensure compatibility with
add logic to update googleid if there be an instructor
updated import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest library versions and improve code clarity
added hardness check to LensPiston block check to ensure hardness is maintained during obility checks
added a new file LongPointerPressTest3049 . java to implement a test for the LongPointerPress functionality to ensure that the application
truffle : remove trufflecompileroptions . inlining from partialevaluator .
refactor null checks in BaseBuilder and XMLConfigBuilder for improved readability to enhance code clarity and reduce unnecessary return statements
simplified the condition in ListBlockParser . java and added a new test in SpecialInputTest . java to improve code readability and
added a new abstract class AbstractOptionalAssert and refactored the implementation of isPresent , isEmpty , and contains methods in OptionalAssert to improve code
added JUnit Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue # 1070
[ test ] fix testcaselogger . savemessage to use string . nativestring
updated formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is a video format before executing the WebSubs check to ensure that only videos are processed in the
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to
server : do n ' t create vm with local storage if the local storage pool be managed or the local storage pool of the neighbor .
updated logging statements in ` Driver . java ` and ` QueryResultsCache . java ` to include ` cacheEntry ` and improved string formatting in
added functionality to skip model updates after managing dependencies in the AddManagedDependency and ManageDependencies classes to improve the efficiency of dependency management by preventing
added tests for sending intents with a specified request code in ShadowActivity . java to ensure correct behavior of PendingIntentSender in TranscriptActivity
updated logging statements and refactored graphics creation methods in RocketFigure3d . java to improve clarity and functionality to enhance rendering
added synchronization to the controller listeners list in HydrawiseAccountHandler and HydrawiseControllerHandler to ensure thread safety when modifying controller listeners
added a static method ` beforeClass ` to check if ` EasyMock ` does not work with Java 9 to ensure compatibility with Java 9 while
updated year retrieval logic in TimestampUtils and added a new DateTimeFormatter for local time formatting in SetObject310Test to improve accuracy in date handling
do n ' t try to connect to a jabber server if there be no jabber connection available .
updated the column name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " to improve clarity
replaced ByteChunk with ByteBuffer for buffer management to improve performance and memory efficiency in BufferedInputFilter
added a new method ` toSync ` in ` AsyncUtils ` and a corresponding test class ` AsyncUtilsTest ` to ensure proper handling of
added ActionGraphBuilder support to multiple compiler factories to enhance integration with Buck ' s build rule management
danielwagnerhall : add test for hidden file input in upload
removed redundant try - catch blocks for creating tables in SQLManager . java to streamline the code for better readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure proper retrieval of the local Maven directory when the file does
make sure algebra label do n ' t show if it be hidden
refactor : fix npe in ctelementimpl . getmetadata ( ) ( # 2338 )
change flag from setFlags ( ) to addFlag ( ) in DefaultTrackOutput . java to ensure correct flag is used for buffer decoding
added a check to ensure ordered behavior is only applied when the cache is sorted by ID to improve efficiency by avoiding unnecessary reordering when the
updated error message to clarify the absence of a method call to improve understanding of the error context for better debugging
added null check for backupFolder before logging expiration log to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` Array . newInstance ` with a
added ` @ AddToRuleKey ` annotation to ` toolType ` fields in ` ClangCompiler ` and ` GccCompiler ` to
updated the PINCODE _ TIMEOUT constant to use a constant instead of a hardcoded value to improve code readability and maintainability by avoid
added ` isSampled ( ) ` method to ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample ` classes to
added @ Ignore annotations to multiple test classes to mark tests as ignored due to missing MongoDB server requirement
http : / / issues . apache . org / activemq / browse / amq - 2682 - fix test to work with
updated the condition to check if the table is not artificially formatted to ensure that only non - artifical tables are processed in the
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes in MongoSessionManager . java to ensure that session attributes are only cleared when necessary , improving robust
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
refactor the handling of the stopping latch in AbstractConnector . java to improve clarity and maintainability of the code
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : camel - defaultmessagehistory now calculate the elapsed time if it exist .
refactor subscription logic in DelayedMonoPublisherTest to streamline error handling to improve code readability and maintainability by reducing red
updated assertions in WebsocketTest to fail if the error is not an instance of WebSocketHandshakeException to improve error handling by providing clearer failure
refactor AllAppsTransitionController to use View . OnLayoutChangeListener directly instead of creating a new one to improve code readability and maintainability
refactor variable names for consistency in PolicyBasedAuthenticationManager . java to improve code readability and maintainability
int - 1188 , int - 1188 , int - 1188 , int - 1188 , int - 1
updated cacheSeconds from an integer to a duration - capable string in MessageBundleProperties and CasCoreWebConfiguration to enhance configurability and improve
updated openapi version strings in multiple Java files to ensure compatibility with the latest version of the OpenAPI library
removed the append ( buffer , true ) method from ByteBufferPool . java to simplify the buffer handling process by eliminating unnecessary operations
added a check for the presence of the " alt - rt . jar " file in the classpath before proceeding with the test to notify users
updated user deletion and email assertions in JdbcScimUserProvisioningTests . java to use uppercase user names to ensure consistency in user identification across different
updated options in FlightRecorderProfiler to use ArrayList instead of Arrays to improve performance and compatibility with different Java versions
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebCamInputDialog ` to
added a condition to check if the content view is not empty in HttpParser . java and implemented chunked PUT handling in ProxyServletTest . java
camel - atmos : fix typo find by codespell on fossies . org
added additional conditions to check for " printf " and " print " target method names in Java2TypeScriptAdapter . java to ensure proper handling
added a new file TestCapacityUntilGCWrapAround . java to verify that increasing metaspace capacity does not cause wrap around in 32 - bit
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a condition to increment the end time if the resource is stamped at the start to ensure accurate tracking of sampling metrics based on the resource
added unit test base on user forum issue
tmi - jpeg : fix illegal icc _ profile chunk exception
make sure terra pick and terraform rod do n ' t cause equip animation
added a conditional check to ignore specific entries in SpringModule and refactored the code accordingly to improve clarity and prevent unnecessary registration of certain bean types in the application
use container ' s parentclassloader instead of thread . currentclassloader ( ) to get the parent class loader
bug 60516 - nameupdater . updatenameupdater . updatenameupdater . updatenameupdater . updatenameupdater
added initialization of the ` started ` variable in ` EllipsoidRegionSelector . java ` to ensure proper tracking of whether the ellipsoid
updated URLs from " http " to " https " in JavaSEPort . java to enhance security by using a secure protocol for Codename
[ geos - 8470 ] wfs getfeature throw illegal property name if sortby be invalid
updated null check for grantor variable in AbstractJdbc2DatabaseMetaData . java to improve clarity and prevent potential null pointer exceptions
added imports for GraphicsEnvironment , GraphicsConfiguration , and GraphicsDevice , and updated image handling in DiagramGenerationTest . java to enhance image compatibility
fix npe if modloader do n ' t install minecraft
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
make locktest more robust by use asserttrueeventually instead of countdownlatch
added methods to handle whole - word and joining tokens in StringUtil . java to enhance string manipulation capabilities for better text processing
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 579
updated command parsing logic and highlighting logic in SystemHighlighter . java to improve command handling and ensure correct highlighting behavior based on command index
update version and version date constants from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set pending
updated buffer positioning in StarTreeRecordStoreCircularBufferImpl . java to use dimensionSize instead of index to ensure correct buffer positioning
added functionality to check if drag and drop is ready in the system UI to enhance user experience by providing accurate drag state information during testing
[ log4j2 - 1349 ] skip test that fail on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to enhance security
updated the method to retrieve the long description instead of the description to ensure the description reflects the correct long description for better user experience
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the " value " property in the ScimGroupMember class
refactor HqlQueryRenderer to handle reserved words more efficiently and add a new test for function names in HqlQueryRendererTests to
corrected a typo in the parameter name from " d " to " s " in SubscriptionHelper . java to improve code clarity and
refactor Parser class to improve code structure to enhance maintainability and readability of the code
updated the ` offsetStreamIndex ` method to include an additional ` indexStartsAtOne ` parameter and adjusted track selection logic accordingly to improve stream
tika - 697 -- add mime type for document . cpio instead of text . ar
[ hotfix ] [ table - planner - blink ] remove redundant method getmonotonicity ( sqloperatorbinding call )
added imports for EqualsBuilder , HashCodeBuilder , and ToStringBuilder , and Inheritance strategy in OneTimeTokenAccount and OneTimeToken classes
added a condition to check if the assistant is not launched before executing the touch action to ensure that the touch action only occurs when the assistant is
added a new file SolarisShortDSA . java to implement a Solaris compiler for handling DSA key lengths to address
added a call to toggleSearchLabel ( false ) in ListFragment . java to ensure the search label is not displayed when needed
server : lock volume before create a snapshot to prevent deadlock
refactor FileDetailActivity to implement a new DetailsServiceConnection class to improve resource management and clarify service connection implementation
refactor error handling in HttpClientTLSTest to use AtomicReference for request failures to improve clarity and maintainability of the test code
removed the equals method from ConjunctionScorer class to simplify the comparison logic for Scorer objects
added a null check for the variable ' v ' in bindItems method and logged an error message if it is null to improve error handling and
fix race condition in cpmemberaddremoveretest . waitforleaderelection ( ) .
refactor cache size handling to use a variable for improved readability and performance to enhance code clarity and ensure cache size does not exceed
updated API path from " / api / v2 " to " / api / v3 " and modified order handling logic in multiple classes to
added a method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the collection is empty
added null checks and test cases for empty dictionary pages in AsyncPageReader , TestEmptyParquet , and TestDrillParquetReader to
modified the ` buildChannelName ` method to accept two arguments and improved error handling for invalid market data types to enhance input validation and ensure
add config to disable the charging animation when an item be charging on top of a mana pool .
[ java ] do n ' t try to connect to aeron cluster in case of timeout .
[ hotfix ] [ runtime ] log exception in waitforhelper
replaced conditional checks for directory creation with assumptions in DefaultServletTest . java to ensure the filesystem supports question dirs on non - Windows platforms
apps - 1016 fix the order of inject css resource , which fix the dialog style
updated ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for file
fix arrayindexoutofboundsexception in blockworldvector . equal ( )
updated LongConcurrentLRUMap . java to use ' final ' modifier for fields and variables in CacheEntry . java to ensure immutability and
added regex handling to resource configuration in ReflectionProcessor . java to ensure that the literal string is properly quoted for proper processing
refactor cache retrieval logic in FileCredentialsCache . java and improve error handling in EmptyCC . java to enhance cache management and ensure robust error
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
chore ( ethereum ) : refactored hassufficientpeers ( ) method ( # 1193 )
alexeibarantsev : fix typo in webdriverservlet # attachtocurrentthread
added a check to prevent expanding " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] format expressions to ensure
added a condition to clear pending rendering operations when the implementation is minimized to optimize rendering performance by preventing excessive rendering operations when the implementation
fix flaky test in hazelcasttestsupport . sleepmillis ( )
add writebehindwritedelayseconds to coalescedwritebehindqueue and add unit test
set the icon of a JLabel in GroupTreeCellRenderer to null to save some space to improve visual clarity by removing unnecessary icons
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between strict and non - strict redirects to enhance flexibility in matching redirects based on
added import statements and refactored test methods in ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test coverage for status methods
updated memory size calculation and chunk fill rate handling in RandomAccessStore . java to improve memory management and ensure correct chunk rewriting behavior
refactor field handling in Json . java to improve readability and maintainability to enhance code clarity and maintainability by reducing redundancy
[ hotfix ] [ runtime ] refactored componentclosingutil to use futureutils . ortimeout
server : destroy volume in error state when create snapshot
cloudstack - 5892 : fix the npe in configurationmanagerimpl . getvpcrangefromcidr ( )
updated variable names from userDetailsBeanNames to beanNames in InitializeUserDetailsBeanManagerConfigurer . java to improve clarity and consistency in
increased the timeout duration for leader retrieval in CollectionsAPIDistributedZkTest . java from 15000 to 30000 to improve
( chore ) camel - core : improve logging of invalid parameter
updated drawImage parameters from x and y to - x in URLImage . java to correct image positioning for improved rendering accuracy
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in SolrTestCaseJ4 . java to ensure consistency in
refactor error handling and add a new method to check for item zero high card dimensions to improve code readability and maintainability by reducing
[ hotfix ] [ stream ] include exception in exception message when throw streamtaskexception
refactor Preprocess . java to use a StringBuilder for building the hashtag string to improve performance and readability of the code
modified the formatting of the read method in MessagePack . java to improve code readability and maintain consistency
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
fix ( jsonparser ) : do n ' t encode empty extension list
updated loop condition in Artifact . java and LibraryManager . java to handle cases where external meta without names to ensure that dependencies are only built when
added alias " node _ popup / node _ popup _ scripting " to " node _ popup / node _ popup _ scripting " to
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and added alpha animation logic in Re
camel - jms : fix classcastexception in jmsproducer
[ hotfix ] fix checkstyle violation in fieldselector
deleted the AbstractDelegatedVerb . java and FailureContext . java files to remove obsolete components to streamline the codebase
updated GzipHandlerTest to use ` MicroServlet ` and modified content handling to include a micro content size to enhance gzip functionality by allowing micro content
fix the issue that repeat and distinct do n ' t work in onsubscriberedo .
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and ensure proper handling of component lifecycle events
add dspace - config to load oai config from servletcontext
hbase - 15411 addendum fix npe in storescanner . scan ( )
camel - 16400 : camel - nagios - do not use jmx if camel - test - jmx be not enable .
replaced hardcoded ` / ` with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added YARN binary configuration and app ID retrieval methods in HiveConf , RemoteSparkJobMonitor , and SparkJobStatus classes to enhance Spark job
added support for " maria " database in the database connection logic to enhance compatibility with additional database systems
[ hotfix ] [ runtime ] fix wrong log format in splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a UI test for executing and returning strings to ensure that the application correctly handles
added a new file ` InvokespecialInterface . java ` with interfaces and methods to demonstrate the use of invokespecial interfaces
refactor EvictingBoundedList class implementation to improve performance and maintainability of the eviction process
only set encoding manager if turncost support be enable
added null check for backgroundDisabled and validated selection in SelectBox . java to ensure selection is valid and prevent illegal argument exceptions
hbase - 25836 addendum fix npe in rpcserver . getmethodinfo ( )
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to improve layout consistency by incorporating
replaced key equality logic with a direct retrieval of partition values in ExpressionTree . java to simplify code and improve readability by eliminating
fix serialization of namedtaskdecorator and taskdefinition with version > = 4.1
updated index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for replication
updated the boolean variable ` equal ` from ` false ` to ` true ` and modified the condition for ` isDisplayModeEqual ` to ensure
updated UnicodeToLatexFormatter to handle high - codepoints and added new test cases for high - code point Unicode characters to ensure proper formatting
added null check and trimming logic in OAIDCCrosswalk . java and Item . java to ensure proper handling of ISO control characters
danielwagnerhall : fix npe in seleniumbackedselenium when the window handle be ` ` null ' '
added a clear button to the DataBrowser and adjusted condition checks in StringSearchPanel , BookmarksPanel , and BookmarksPanel classes to enhance
replaced the use of ` UriComponentsBuilder . newInstance ( ) ` with ` UrlUtils . buildFullRequestUrl ( request ) ` to
replaced instances of ` Date ` with ` parseDatetime ` and updated error messages in ` SoftAssertionsTest . java ` to improve date
modified the adaptOrders method to include a reverse parameter for limit orders to enhance flexibility in order adaptation based on user preference
delombok should print ' var ' if the variable name be null or the position be - 1
danielwagnerhall : remove unused import to fix build .
updated the configuration initialization to set a default value to false and removed unnecessary debug logging for Hadoop conf property override
replaced ` drawChildren ( batch , parentAlpha ) ` with ` draw ( ) ` in ` WidgetGroup . java ` to simplify the
added unit test base on user forum issue
replaced usage of ` System . getProperty ( CATALINA _ BASE _ PROP ) ` with ` context . getCatalinaBase (
added unit tests for retrieving JMM date and time patterns in ShadowICU to ensure correct date and time patterns are returned for different locales
added information to the PlotSquared style and updated the color map to include additional color codes to enhance the visual representation of the PlotSquared component by
added ZuulProperties dependency to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance tracing capabilities by integrating
tika - 3746 -- fix unit test for tika - 3751 and tika - 3752
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include ` getBuildTime ( ) `
updated the calculation of xDist to use Math . abs instead of a direct call to getFinalX to improve accuracy in determining the position of
deleted the GUIRWTester . java file to the functionality is no longer needed in the project
removed nullability annotations from ` LazyMessage ` and ` countPlaceholders ` methods in ` StandardSubjectBuilder ` and ` CustomFailureMessageTest `
updated error message format in TestStream . java to include decimal places to improve clarity of error messages for better debugging
move thymeleaf . templateparser . htmltemplateparser and thymeleaf . templateparser . markup to the new package .
added a test method for XPath string evaluation in XPathTest . java to ensure that the XPathBuilder correctly identifies and returns the expected string representation
added nullable annotation to FutureUtils . java to improve code clarity by indicating that certain fields may be null
add warn if invoke dynamic expression be not resolve during call - graph construction .
updated email addresses from " @ gmail . com " to " @ example . com " in ContextTest . java to provide a more d
updated HTTP encoding response handling in HttpConnectionTest . java and modified URIUtil . equals method to return false instead of URIUtil . equals to
implemented the ` getColumnDataType ` method in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a consistent
camel - 15836 - camel - aws2 - * : replace abstract modifier with default value in dynamodb client interface
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long ` with ` Instant ` for time representation in ` Statistics . java ` to improve precision and clarity in time calculations
added version checking and option settings in LibMediaInfoParser . java to ensure compatibility with different MediaInfoLib versions and improve logging clarity
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance proxy functionality for better dependency management
added a new SerialHeap class and updated related classes to utilize it to facilitate serialization of the CPU heap for debugging purposes
added multiple @ SuppressWarnings ( " serial " ) annotations to the $ Gson $ Types class to suppress serialization warnings for the class
use mouse . getposition ( ) instead of mouse . getposition ( ) when send mouse wheel event
updated MongoQueryCreator to handle null parameters and added a new test for findByFirstnameIgnoreCase with a null test to improve robustness of the
[ flink - 20537 ] [ table - common ] add multisettypeinfo interface for the same key type
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` to handle retrieving identity providers based on issuer to improve error handling for
pdfbox - 4892 : improve cmap parser to handle non - whitespace character
refactor ` ContactsBackupJob ` to utilize ` OperationsService ` for file expiration and binding to improve service management and resource management for
updated type constraints in ` Attr . java ` and added new classes ` T6938454a . java ` and ` T6938454
add isconfighidden ( ) method to accountlist and accountid ( # 1193 )
added a check to log an error if the number of displays matches the expected number of supported bounds to improve debugging by tracking inconsistencies in
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure correct retrieval of schema keys and
ggb - 2178 fire passive login on login passive action ( not just load event )
added a new Box2DTest class and modified GDXTester to include it to enhance testing capabilities for the Box2D backend
improve debug output for index and index mutation
[ hotfix ] [ config ] change default buffer request timeout to 5 minute
added default generator names and versions to SpeechSettings . java and updated related test files to improve clarity and maintainability of the code by
added a help button to the OpenOfficePanel to enhance user experience by providing guidance on available options
[ java ] enable tcp _ nodelay by default in netty acceptor and publishdecodingserver .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceTradeService , BinanceTradeService , and BinanceTrade
added a transient Class < ? > classRef and refactored class loading logic in ScanResultObject . java to improve performance by reducing
refactor connection handling in DecodeServlet . java to streamline input stream processing to improve code readability and maintainability by reducing redundancy
datajpa - 435 - add support for querydsl nullhandling in order
added null check for the actor before processing actions in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action processing
reformatted code for clarity and consistency in ctTypeTest . java to improve code readability and maintainability
added synchronization to the sfWriters lock in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its corresponding test class ` JJ ` and ` JK ` to implement
added functionality to revoke an existing agent certificate and updated related tests to enhance certificate management by allowing users to revoke existing certificates effectively
added a check to prevent writing a body after no body response in AbstractHttpTest . java to ensure that HTTP / 1.1 responses do
added error handling for missing < script > tag and language in ScriptTransformer . java to improve robustness and provide clearer error messages for script
added support for " HikariCP " and " DBCP " to the METASTORE _ CONNECTION _ POOLING _ TYPE configuration
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added methods to handle file locking and unlocking in FileMenuFilter and OCFileListFragment to improve user experience by allowing toggling of
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear endpoint cache when create a new keyspace . patch by jbellis
refactor thread state waiting logic into a separate method ` waitForState ` to improve code readability and maintainability by reducing duplication
updated SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContextAttr , and SkylarkRule
douniaberrada : move local and session storage interface to a separate package , to allow for easy reuse
fix nullpointerexception when create or replace view ( # 11954 )
change exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by capturing a broader range of exceptions
updated the query parameter handling in SpellCheckComponent . java to ensure a default value is used when the query is not explicitly provided
added validation for header values in Headers . java and introduced a new checkValue method in Headers . java to ensure header values comply with expected
renamed ` instanceSize ` to ` arrayBaseOffset ` and updated related methods in ` HybridLayout ` , ` HostedInstanceClass
add @ experimental to astcommentcontainer and remove it from apexcommentcontainernode
hhh - 14964 add warn log for fetch = join and lazy = true association with fetch = join
refactor ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , and ` RemoveInternalParamsFilter ` classes to extend ` Abstract
added assertions to verify database name and table name in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java
camel - 7999 : fix timer consumer to not throw exception during graceful shutdown .
added a check to ensure the block is processed before adding to the traces list to avoid adding unnecessary traces when the block is not processed
updated null element check in ProviderManager and added unit tests in ProviderManagerTests to ensure proper handling of null values and improve test coverage for provider
simplified the type check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added local index limit assertions and updated related classes to utilize it to improve query performance and ensure correct handling of local index limits
added a check to prevent adding a collection with the same name in the past to ensure that only unique collection names are added to the past to
updated cursor positioning logic in VDUBuffer . java and vt320 . java to ensure proper positioning of elements within the screen boundaries
removed the static final String USE _ RETRIES from HttpShardHandlerFactory to streamline the code by eliminating unused constants
updated the regex pattern for VERSION _ NUMBER in JavaVersion . java and added a test for it in TestJavaVersion . java to improve accuracy
[ hotfix ] [ stream ] skip processing of empty input group
added a JUnit test method to TestReceivingMessageSourceParserTests to ensure the functionality of the TestReceivingMessageSourceParser class is
added a null check for properties before accessing its value to avoid potential NullPointerException when properties are null
updated IOException handling in FileSystemBlobStrategy . java to include the cause of the IOException to improve error reporting by preserving the original cause of the IOException
ambari - 20613 . fix typo in documentation ( dlysnichenko )
added a txConfidenceListener to manage transaction confidence updates to ensure that the listener is only added once to improve efficiency by avoiding multiple instances
[ netbeans - 4952 ] add support for g1 perm gen ( # 2695 )
removed redundant imports and simplified return statements in NearbyController . java to streamline code and improve readability by eliminating unnecessary complexity
pdfbox - 4892 : make pdfcloneutility public , a suggest by valerybokov
added a condition to check for non - home activities in BaseSwipeUpHandlerV2 . java to ensure that only non - home activities
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants to improve clarity and consistency in naming conventions
changed method names from ` shouldGiveNetworkCountryIso ` to ` shouldGiveNetworkCountryIsoInLowercase ` and updated related calls
updated the unfreeze amount setting in UnfreezeBalanceV2Actuator . java to ensure the correct unfreeze amount is set for the current
updated the description of ` PUBLISHED _ TIMESLOT _ DESCRIPTION ` and ` PUBLISHED _ ROOM _ DESCRIPTION ` to
simonstewart : use commons - io . copydirectory instead of guava - io . copy in firefoxprofile
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
2 . x : fix typo in javadoc of observable . delay ( )
refactor ` pushAll ` method to use a multi - field operation instead of a single DBObject to improve code readability and maintainability
added null check for randomUUID before setting it in hubChangeLog to avoid potential NullPointerException when randomUUID is null
added a default ` onHoverEvent ` method to ` InputConsumer ` and implemented hover event handling in ` OverviewInputConsumer ` to improve
added a check for the presence of " bootstrap _ conf " and adjusted the initialization of the boostrapConf variable to ensure that the configuration
camel - 16400 : camel - netty - http should use the consumer label instead of the default value
hbase - 25836 addendum increase the number of retries for hbase client ( chunhui )
updated file path construction in SourceSnippetHelper . java to use absolute path to ensure consistent file path formatting across different operating systems
make encodedgraphcachetest more robust by retry on failure .
updated queryCommand from " customer _ count " to " all _ tables " and added a new test for query over output to improve clarity
added currency adaptation logic to the KrakenAdapters class to enhance currency metadata tracking for better asset processing
added a ` toString ( ) ` method to ` AnyOf ` and created a new ` AnyOf _ toString _ Test ` class to improve
updated email handling in AlertTaskRunnerV2 to utilize DimensionMap for group name and subject name to improve clarity and functionality of email
[ influxdb ] improve warn log for missing property - measurement / database
rename dotransform method to downcast to avoid confusion .
updated local address filtering logic in NetUtils . java to include unique local addresses to enhance security by preventing invalid local addresses from being processed
refactor column name handling in DataTextFormatter to use a new method for quoting column names to improve code readability and maintainability by central
added methods for setting and setting system properties and improved method signatures in WrapSystem . java , StrUtils . java , and ClassWrapper .
added a constructor to the UpdateRequest class that initializes the parent class with a URL to facilitate the creation of a new UpdateRequest
updated enum declaration from ` static enum ` to ` enum ` in ` ProtoTypeAdapter ` to ensure consistency in enum usage across the codebase
added a warning for experimental response formats in DataImportHandler , ReplicationHandler , and RequestHandlerUtils to inform users that the response format is experimental and
updated debug log message formatting in JpmsUtil . java to improve readability of module names to enhance clarity of debug output by including
add a method to get the default label font , a suggest by martin schr ö der
http : / / issues . apache . org / jira / browse / amq - 4898 - fix defaultbrokerheartbeath
removed redundant null check for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to streamline code by elim
simplified the condition in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
[ drools - 7 ] add equal ( ) and hashcode ( ) to ruleterminalnodelefttuple to ensure proper comparison and hashing of rule
added stage ID rearrangement functionality to TezCompiler to ensure stages are arranged correctly based on configuration
fix jmx mbean name for messagingservice . patch by brandonwilliams , review by jbellis for cassandra - 134
updated memory consumption logic in LotsOfOutput . java to include logging for memory consumption to improve debugging by providing visibility into memory consumption consumption
added imports for document handling in multiple facet field classes to improve documentation clarity and maintain consistency across the codebase
updated ` LdapAutoConfiguration ` , ` LdapProperties ` , and ` LdapAutoConfigurationTests ` , and modified ` LdapAutoConfigurationTests `
refactor DatabaseMetaData class to improve code structure to enhance maintainability and readability of the code
updated the visibility of the EchoInputDoFn class from public to private to restrict access to the EchoInputDoFn class for better encapsulation
added finishMocking method to MockitoSession and updated validation logic in DefaultMockitoSession to improve error handling and ensure proper validation of mock
refactor dependency handling in GoTestDescription and add new test methods in GoTestIntegrationTest to improve code clarity and ensure correct behavior of
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve clarity and consistency to enhance code readability and maintainability
replaced ` BlockLiquid . getStaticBlock ( material ) ` with ` BlockLiquid . getFlowingBlock ( material )
replaced ` putExtra ` with ` setData ` for intent in ` AndroidLocationPlayServiceManager ` and ` BackgroundLocationHandler ` to improve
fix typo find by codespell on fossies . org
[ hotfix ] [ cli ] fix classcastexception in clifrontendplan
updated bitwise operations in CraftingManager . java and simplified shaped recipe retrieval logic to improve performance and readability of the code
[ flume - 2203 ] [ test ] fix flume - 2203 test failure
simplified condition checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern for processing pg _ temp _ . * files in NeuteredLinesFilter . java to improve filtering accuracy for temporary files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the logic for creating ` liquibaseDataType ` based on ` dataTypeName ` to handle both " INTERVAL " and " N
meter registry : do n ' t publish histogram if it ' s already publish
updated ShenyuClientRegisterSpringCloudServiceImpl to set divide upstreams and modified DivideUpstreamUtils to include a
added a new method ` registerListener ` to ` ShadowSensorManager ` for registering listeners with specified parameters to enhance functionality by allowing listener registration with
added multiple test methods to handle SSL exceptions in SelectChannelServerSslTest to ensure that SSL exceptions are properly logged for 400 responses
camel - 16400 : camel - ignite - karaf - karaf - upgrade ignite to 1.5 . 0
added conditional print statements for empty sets and modified the result set handling logic to improve clarity of output messages and ensure correct behavior when reaching
pdfbox - 4892 : catch all exception , a suggest by valerybokov
added tests for setting HDR capabilities in ShadowDisplayTest . java to ensure correct behavior of HDR capabilities across different Android SDK versions
added a finally block to reset the classLoader in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
improve error messages for semantic exceptions in SemanticAnalyzer and SemiJoinHint classes to provide clearer context for expected values during semantic analysis
added a constructor to the Message class to initialize the Message class without requiring parameters
do n ' t report non - serializable object in the idiom if they implement serializationdirectly .
updated ` PhoenixDecimalObjectInspector ` and ` PhoenixObjectInspectorFactory ` to accept ` PrimitiveTypeInfo ` as a
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` and modified the handling of ` CompressionResponseStream ` to
renamed the variable ` WWWAuthenticate ` to ` authenticateHeader ` and updated its usage in the ` Authenticator ` class to improve clarity
removed conditional checks for EJS and specific directory paths in DCD . java to simplify the code and improve readability by eliminating unnecessary
updated thread name retrieval to use a separate method for thread group name to improve clarity and prevent potential null pointer exceptions when accessing thread groups
added logging functionality to MethodInvocationPrivilegeEvaluator for security decision handling to enhance debugging capabilities by providing clearer error messages when properties are set
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` to
updated imports in ChainingRegisteredServiceDelegatedAuthenticationPolicy . java and RegisteredServiceChainOperatorTypes . java to improve code clarity and reduce
server : fix migration for user vms with iso volume
replaced the handling of a signal with a replacement mechanism in SigInt . java and updated the test method names in SigIntTest . java
replaced static import of ArrayUtils . isEmpty with Apache Commons Lang ArrayUtils . isEmpty in NodeTool . java to improve code readability and le
updated AxonAutoConfigurationWithSpringCloudTest to use Spring Boot configuration and added a discovery client bean to improve test setup and ensure proper
added multiple @ Override annotations in ColorRGBA . java to improve clarity and maintainability of the code
planningentityselector : remove deprecate uninitialize ( ) method from solver phase
added a new parameter ` buildTimeMs ` to the ` ArtifactInfo ` builder in ` TwoLevelArtifactCacheDecorator ` and ` ManifestRule
updated the handling of fields in GroupByOperator to use the correct field type and adjusted the condition for numEntriesHashTable to improve accuracy in
added a null check before adding a block appearance to prevent potential NullPointerExceptions when the block is null
added a new currency pair " CNC " and updated currency pairs accordingly to support trading functionality for CNC in the trading system
updated skewAllowance value from 5 to 15 and modified related logic in multiple classes to improve flexibility in managing SAML response skewing and ensure
added sorting functionality to the SongListActivity and Utils classes to improve the organization and accessibility of song items based on their sorting criteria
removed the ` readBodyToBytesIfNecessary ` method from ` Utils . java ` to handle request bodies as ` TypedByteArray ` to simplify the code
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` and updated related classes to utilize it to improve code organization and maintainability
refactor snapshot retrieval logic in IcebergBranchExec . java and add a test for it in TestHiveIcebergBranchOperation
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
fix ( demo ) : remove bounce count and frame number
updated the validation logic for the requirePasswwordChangeRequired property in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProvider
added a call to ` notInitializedInConstructors . removeAll ( assumeReflective ) ` in ` UnreadFields . java ` to ensure that
updated error message to include connection URL when executing SQL to improve clarity of error reporting by distinguishing between closed and non - closed connections
camel - 7999 : camel - spring - mvc - add test case for request body
updated regex patterns for user and password in CredentialInjector . java and modified the jdbc URL in CredentialInjectorTest . java to improve clarity and
added a new menu item " Item4 " and a key binding for the Enter key in ActionListenerCalledTwiceTest . java to support additional
updated print statements and assertion logic in TestCoreParser . java to improve clarity of test output and ensure results are only produced if they are
updated equality checks in SimpleNode . java to use ' id ' instead of ' children ' to ensure correct comparison of nodes based on their identifiers
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
updated MoreLikeThis . java to use long for document count retrieval and added a new test forSmallSampleFromCorpus in TestMoreLike
reformatted code for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ networkbufferpooltest ] make testlogger a static class
updated query construction in MongoSessionDataStore . java to streamline expiration criteria to improve readability and maintainability of the code
[ gr - 16913 ] fix unsafe . getlong call with offset and condition .
update time zone information from ARAST to EET across multiple language files to align time zone representation with current standards
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the logger
hhh - 14529 throw jdbcexception if transactional be rollback - only
update downloadexternalfile . download ( ) to handle case where suffix be empty
bug fix : use screen menu bar on macos
cas integration test : add integration test for piecewise integration
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in `
added a test for modification of the ` hive . metastore . uris ` parameter in ` TestJdbcWithSQLAuthorization ` to ensure that
added a value to the invalidClasses map in EntryLoader . java to ensure proper handling of invalid entries in the entry loader
updated the method to retrieve the target geometry from the player ' s team to ensure the target geometry is associated with the correct player ' s team
updated cookie domain from " comp1 " to " getHostName ( ) " in CookieImplementationTest . java to ensure correct domain is used for
added nullable validation logic to multiple column and table change generator classes to ensure proper handling of nullable values based on search conditions
refactor multiple security token - related classes for consistency and clarity to improve maintainability and readability of the security token service components
updated CustomCollectionTest . java and CompositeIdRouter . java to use static final variables for consistency and clarity to improve code readability and
added snapshot handling for bytea types in ExecutablePreparedStatementBase and introduced a test for blob type changes in PostgreSQLIntegrationTest to improve snapshot management and
updated conditional checks for max _ cached _ files , max _ cache _ size , and max _ cache _ file _ size in DefaultServlet .
added drag - and - drop functionality to the tabbed pane ( # 5338 )
updated description creation and test assertions in ExecutionUnitRunner , CucumberTest , and ExecutionUnitRunnerTest classes to improve clarity and accuracy
replaced ` myVersion . isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for non - empty strings to improve code readability
changed access modifiers from public to package - private in TimeUtils and TimeUtilsTest classes to restrict access to these methods for better encapsulation
added a method to check if the class is a security frame or injected invoker in RefectionMHTests . java to ensure compatibility with newer
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with different file extensions for
[ gr - 22067 ] nativeimagedebuginfoprovider now return the class name of the host method .
added ` getIcon ( ) ` method to ` Data ` class and updated ` ClassDisplayed ` default value in ` DataTableTopComponent ` to
modified the substring method to handle cases where the last occurrence of a period is not found in the name to improve robustness by avoiding potential
updated the replacement logic in FindAndReplace . java and added a test for dollar sign tolerance in FindAndReplaceTest . java to ensure
smack - 142 , smack - 143 , smack - 144 , smack - 147 , smack - 14
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to copy source and destination directories using ` CopyOption ` to ensure that source and destination directories are created
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unknown datum classes
refactor ABI handling in DefaultJavaLibraryBuilder to use a new method for retrieving class and source ABI jars to improve code clarity
simplified height adjustment logic in SelectBox . java to improve code readability and maintainability
normalize database and table names in ObjectStore . java to ensure consistent and valid identifier formatting
added schema handling for Oracle database type in DbSqlSession . java to ensure correct schema is used when the database type is " oracle " and
removed the API client logout handling in HomeFragment . java to simplify the logout process by avoiding unnecessary logout
updated the number of parallel subtasks from 0.0 to 1.0 in multiple test files to ensure tests run with the correct number of
added null check for candidates in FastImportAction . java to ensure robustness by handling potential null values gracefully
updated the logic for determining if a bean was managed in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve
rename iexecutionattributesdialect to iexecutionattributedialect to avoid confusion .
added a call to metadata . clearUnsafe ( ) in AlterTest . java to ensure metadata is properly cleared before operations
updated dayStr , monthStr , and ordinal initialization to handle null loc case to improve robustness by avoiding potential NullPointerExceptions when loc is
added null checks and a new exception handler class for handling exceptions in the DisruptorQueue to improve robustness by preventing null pointer exceptions
deleted the Session2Token . java file to the class is no longer needed for the project ' s functionality
bug cs - 15829 : remove the dest volume if the operation fail to create a volume
added Install class to handle installation functionality in SystemShortcut and InstantAppResolver to enhance the app ' s ability to launch activities without shadowing the
added a constructor to LdapAuthenticationProvider that initializes its constructor with a null authority population to ensure that a default authority array is returned when no authority
updated the handling of the retrolambda jar path in Executor . java and added a fallback mechanism in CN1BuildMojo . java to
replaced the method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to simplify the
replaced FixedBitSet with Bits for sorting live documents to improve performance and simplify bit set management
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 52371
updated import statements and added null and length checks for currentUser authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertions in various test classes for consistency and clarity to improve code readability and maintainability
server : fix typo in error message for vgpu vm snapshot
updated annotation handling in RobolectricTestRunner and Config classes to improve clarity and correctness in merging annotations between classes and methods
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more efficient socket connection implementation
added a method to compare partial partition keys in HiveAlterHandler to ensure consistency in partition key comparison between tables
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER with a value of false to provide a debug option for displaying
removed unnecessary whitespace in the condition check for component activation to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback . Completable in multiple deployment and undeployment classes to improve code readability and performance by utilizing mod
added workspace listener functionality to PreviewControllerImpl and refactored PreviewUIController to use it to improve workspace management and ensure the preview graph is
updated inflation conditions in ReflectionFactory and modified class name checks in ReflectUtil to ensure correct inflation behavior for non - VM anonymous classes
refactor TransportHelper class to improve code structure to enhance maintainability and readability of the code
updated file path format from " file : / / " to " file : " in CatalinaAcegiUserRealm . java to
added logging statements to start server , serverForAgent , and manager in AmbariServer . java to improve visibility into server initialization and manager
added null checks for initialization and modification in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions during JSON processing
refactor method signatures in SliderAppsViewControllerImpl to accept a FileSystem parameter and update user creation logic accordingly to enhance flexibility in handling
added a check to prevent attaching the window if the backgroundManager is already attached to ensure that the window is only attached once to avoid potential
added methods to set the current tab in AllAppsTabbed , Launcher , and PagedView classes to improve tab navigation functionality and ensure
added null check for the URL parameter in BaseDataSource and created a corresponding test in SimpleDataSourceTest to ensure that invalid URLs throw an appropriate exception
added JUnit condition checks for Java versions in PebbleModuleTest . java to ensure compatibility with different Java versions during tests
added a new ` EditNameDialogListener ` to handle directory creation in ` FileDisplayActivity ` to improve user experience by allowing users to create
added support for toggling bar border width in multiple chart activities to enhance user experience by allowing toggling of bar borders
updated SSL URI from " https : / / www . okcoin . com / api " to " https : / / www . okex
jbrules - 2852 add natural score comparator to acceptoragetest so that it do n ' t interfere with
updated file handling to use SeekableByteChannel instead of FileChannel to improve performance and compatibility with byte - based file operations
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` instead of direct calls to ` getValueAccessorById ` to improve
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
updated conditional checks for SERIALIZATION _ TYPES _ KEY and LAMBDA _ CAPTURING _ SERIALIZATION _ TYPE
added imports for ActivityManager and set watch heap limit in QuickstepProcessInitializer . java to enhance debugging capabilities for debug devices
refactor the sumWithCompensation method calls to use a variable for better readability to improve code clarity and maintainability by reducing
log4j2 - 1349 abstractloadbundletest should not throw bundleexception if it can not be resolve
added a conditional check for top - level deletion before serializing it in PrecompactedRow . java to ensure that deletion information is only serialized
updated ICC _ Profile and ColorConvertOp to use bitwise operations instead of bitwise operations to ensure correct handling of rendering intents and improve code
[ micrometer ] properly close meterregistry on shutdown
changed log level from warn to info in ConfigurationUtils . java to provide less severe logging for configuration center issues
added failure handling for generating a certificate with a zero byte array in CertificateFactoryTest . java to ensure proper certificate generation with zero byte values and
camel - 7999 : fix ambiguity in binary operator in predicate parser
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added focus change handling in ` IDEEditor ` to
added user . name to the error log message in AccessLogValve . java to provide more context for troubleshooting access log
updated matrix scaling factors and added null check for submesh names in OgreXmlLoader and SkeletonModelViewer to improve model loading accuracy and
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that the class is outdated and should not be used in new code
added support for generating d . ts files in the JSweet transpilation process to enable users to specify where to place generated d . ts
[ hotfix ] [ kinesis ] set fetchtimeout for streamconfig when consumerfactoryclass be ` kinesisconsumerfactory `
added a new file extension " . html " to the timestamp parameter in StreamingDataflowWorker . java to ensure the timestamp is correctly formatted for
increased the maximum number of metastore server threads from 100000 to 1000 to improve performance and resource management in the Hive metastore
changed the return type of onTaskSnapshotChanged method from void to boolean to enable the method to indicate whether the snapshot change was successfully handled
updated shadow radius from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure consistent shadow radius usage across animations
added unit test for chain nesting and aggregation functionality in ChainParserTests . java to ensure proper handling of aggregator input in message processing
updated loop condition in MarketSellAssetActuatorTest . java to use end instead of limit and added a failure message to ensure proper
change source . isinternal ( ) to source . isinteractive ( ) in polyglotcontextimpl . java .
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to improve clarity and correctness of file path comparison logic
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating display management capabilities
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent handling of root directories in
updated screenSize retrieval from getToolkit ( ) to getDefaultToolkit ( ) in LooksFrame . java to ensure compatibility with the default
change the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > to improve type
added unit tests for ` Cat ` and ` CatColorKindCount ` in ` JPASQLBase . java ` to ensure
updated drag index logic in FreeformFinSetConfig . java to ensure dragIndex starts from 1 if the body is below the point x to
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to incorporate the latest features
updated error message from " constant canotSetCallValue " to " constant cannotSetCallValue . " and added gas spending functionality to
updated error message formatting in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldSatisfy _ create _
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor registration logic in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to use a separate method for registering unsafe plugins to improve code
added @ Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a test for blacklisted modules to ensure
updated mCenterPagesVertically variable from true to false to align the page centering behavior with the user interface
fix migrationrequestoperation # doneprocessing ( ) not call after migration be complete
renamed constants and variables from " ipAddress " to " baseUrl " in KonnectedBindingConstants and KonnectedUPnP
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
updated database references in TestJdbcWithMiniLlap and LlapBaseInputFormat to use " testtab _ nonascii " instead of
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL
added MotionEventCompat and refactored copy mode handling in ConsoleActivity to improve user interaction responsiveness on devices running Android Ice C
refactor ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` parameter to improve flexibility and control over
camel - 16400 : fixed npe in abstractlistaggregationstrategy when exchange be null . thanks to benjamin gra
camel - 16400 : log exception cause by camel - core instead of exchangehelper so we have eip documentation out of the box
move basicconfigurator from logback - classic to classic to avoid confusion
fix an assertion error in the type qualifier dataflow analysis to ensure the target VN is not equal to the source VN
removed unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of methods with specific parameters
refactor BoxAndWhiskerCalculator , DefaultBoxAndWhiskerXYDataset , HistogramBin , HistogramType , and Statistics classes to
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to static and updated equality checks for field comparisons to improve performance and avoid potential null pointer exceptions
changed the access modifier of the IndexFileNameFilter singleton from public to private to restrict access and enhance encapsulation
refactor IfStatementTest to streamline vertex creation and assertion logic to improve code readability and maintainability by reducing redundancy in vertex
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
removed the nullSafe method from TypeAdapter and its usage in StreamingTypeAdaptersTest to simplify the code and improve readability by eliminating
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of entries in the distribution
added a new file EXIFReader . java to handle metadata processing for Exif files to facilitate handling and processing of Exif
return ` ` none ' ' instead of ` ` unknown _ to _ sdk _ version ' ' when unit be unknown
[ drools - 6640 ] fix applypmmlmodel to handle non - serializable parameter
updated message format in FluentProtocol . java to include additional context about repeated CounterCurrencyTransferStartedMessage to improve clarity of error messages for better
added a conditional check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not
[ gr - 16913 ] fix aarch64 architecture to handle branchtargetindexoutofboundsexception
added a try - finally block around the initialization of JDKXRLogger to ensure proper resource management and prevent potential memory leaks
added a ` find ` method to ` TicketCatalog ` , ` DefaultTicketCatalog ` , and ` HazelcastTicketRegistry ` classes , and
updated SSL connection string construction and assertions in TestSSL . java to improve clarity and correctness of SSL connection handling
[ flink - 20613 ] [ runtime ] fix sortmergepartitionreadbufferpool . initialize ( ) in sortmer
( chore ) camel - jms - io : replace read ( ) with read ( null , long . max _ value , null )
added a new parameter ` type ` and ` sort ` to multiple plugin handle queries in ` PluginHandleController ` and ` PluginHandleDTO `
added ` start ( ) ` method to ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` classes to ensure that the span is
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , GLKViewDrawableStencilFormat , and GLKViewDrawable
refactor login tests to use a unified attemptLogin method to improve code readability and maintainability by reducing redundancy
use real ( ) and complex ( ) instead of real ( ) in jniutils . getndarray ( )
refactor the synchronization logic in SynchronizationStatistics . java to use a do - while loop for better readability to improve code clarity and
refactor Implements and ShadowPicker classes for improved code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation to use a new method for setting HTTP / 2 connection pool size and multiplexing limit to improve code readability and
added support for handling dynamic arrays in DynamicStruct and improved type name construction in SolidityFunctionWrapper to enhance type safety and provide clear
added default value for text alignment and size properties in InlineLayout , FontUtil , and InlineLayout classes to ensure consistent behavior when retrieving CSS properties
added constructors to the CopyStep class with a recursive parameter and a corresponding test case to enhance the flexibility of the CopyStep class by allowing
fixed - rsequencetimeout . acquire ( ) and rsequencetimeout . release ( ) method throw illegalargumentexception
camel - 16400 : camel - core - optimize test for camel - core - dsl
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed data types from List < String > to List < ByteString > in WitnessScheduleStore . java from List < String > to List <
added a conditional statement to check if resultsMeta is not empty before printing to avoid printing empty results to avoid printing empty results
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class to enhance the robustness of the ConcurrentLinkedQueue
added a boolean parameter to encode , batchEncode , and batchEncode methods in HuggingFaceTokenizer and HuggingFaceTokenizer classes to
[ hotfix ] [ runtime ] remove unnecessary arraylist creation in taskManagerServices
fix data size in loadsingletsfilenode ( # 10686 )
added session storage context key and updated session storage configuration in DuoSecurityMultifactorWebflowConfigurer to enhance session management and improve
add a test for schema validation in the jspx parser to ensure that schema validation work correctly
added a default constructor to TypeAdapter and modified the Ignore annotation in Java17RecordTest . java and ReflectionAccessTest . java to ensure proper
add preparekill ( ) to allow repl debugger to continue execution
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and clarity of the codebase
remove unused parameter from the createResourcePolicy method to simplify the method signature and improve usability
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerExceptions during resource cleanup
added @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup of test resources after each test execution
updated the MD5 computation to use Normalizer for unicode character normalization to ensure consistent formatting of the checksum by removing " Unknown " unicode characters
refactor command handling in Example . java for improved readability and maintainability to enhance code clarity and prevent potential null pointer exceptions
bugfix # 217440 , make keylistener final and add multiple @ override annotation
replace type casting for objectToSave with DBObject and add a new test for saving JSON in MongoTemplateTests to improve type safety and ensure
added functionality to handle multiple remote addresses in the RequestUtils class to ensure proper extraction of remote addresses from requests that include multiple addresses
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` to enhance flexibility in handling JSON data structures
replaced the use of ` InetAddress ` with ` NO _ PROXY ` in ` CookieManagerTest . java ` and ` UnmodifiableMaps .
modified glyph processing logic in GlyphLayout . java and added a new bitmap font test in BitmapFontTest . java to ensure proper resource management and
added methods to pause or resume splits in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to ensure proper handling
added a new configuration variable for the Hive script operator ID in HiveConf . java and updated ScriptOperator . java to utilize this variable to
refactor the getListedTermCounts method to use a stream - based approach for processing term counts to improve code readability and maintainability by
added a new action class ` UseSeparateStepSizeAction ` to manage step size options to enhance user experience by allowing users to choose between
updated ` FileMenuFilter ` to use ` AccountManager ` and ` FileLockingHelper ` for unlocking files based on user ID to
hbase - 25836 fix test failure in roundrobintableinputformat
updated HTTP request header values from " false " to " 0 " and " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to ensure
pdfbox - 2576 : use ioutils . closeclosesource instead of manual null check
updated GwtApplication and GwtGraphics to handle fullscreen mode changes and modified GwtGraphics to manage display modes to improve responsiveness
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` and modified the ` normalizeResource ` method
added a new test class ` SoulApacheDubboClientConfigurationTest ` for verifying Dubbo configuration properties to ensure correct
updated path resolution in SkinLoader to use ` resolve ` instead of ` Gdx . files . internal ` to ensure compatibility with the updated
updated log level from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple classes to handle potential interruptions during locking
updated package structure in Compiler . java to improve organization and clarity of the code structure
added exception handling for redundant method calls in NullDerefAndRedundantComparisonFinder . java to improve error reporting for specific code exceptions during
rename onmanifesterror and onmanifesterror to onsinglemanifest
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and a method to
updated method signatures from WritableConfig to Configuration across multiple classes to standardize method return types to improve clarity and consistency in configuration handling
added error handling for command payloads in AutoScalingHandler to ensure that invalid command payloads throw a BAD _ REQUEST error
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
replaced the variable ` buf ` with ` b ` for reading bytes from ` gzis ` to improve code readability and performance by redu
bitquare : remove restricted cryptography restriction if necessary
blocknetherportal . spawnportal ( ) now wait for the event to be cancel .
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that the application
updated the initialization of ` vContext ` in ` Vectorizer . java ` to ensure it is initialized before use to improve thread safety and avoid
fix wialon position speed ( fix # 1193 )
hbase - 25850 disable metricsuseraggregate by default ( # 2695 )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
replaced boolean flags mUserPresent , mVisible , and mAttached with boolean flags mAttached , and updated receiver unregistration logic to ensure
refactor AsyncFile , HttpClientRequest , HttpClientResponse , and ReadStream classes to improve code organization and maintainability
added params parameter to the zadd method call in PipelineBase . java to enhance functionality by allowing additional parameters during the zadd operation
[ ds - 3952 ] fix checkstyle violation in unit test
renamed TestAsyncMessages class to TestAsyncMessagesPerformance to clarify the purpose of the test related to performance
refactor ` VersionedTargetGraphBuilder ` to improve handling of optional targets and add tests for ` VersionPropagatorBuilder ` to enhance robustness
updated the range of EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW in TimeZoneProvider . java to ensure correct handling of
corrected the calculation of field picture data length in EscherBlipRecord . java and added a new test class TestOLE2Embed
updated row and column initialization in JSONParser . java to ensure correct starting indices for parsing JSON data
replaced ` JavaType . FullyQualified ` with ` Pattern ` for type matching in ` FindTypes . java ` to improve flexibility
added functionality to retrieve and display local trailers for special and trailers in BaseItemDetailsFragment to enhance user experience by allowing users to play
added a method to remove glyph information from the cache before freeing memory to improve memory management by removing glyph information from the cache
fix process end event not be delete when a process be terminate
camel - 16400 : camel - xml - bind should use the root element name if available . thanks to benjamin
updated the endpoint URL from " http : / / apereo . org / scottb . html " to " https : / /
add an option to reset all preference to default value
hbase - 25850 make hbase - service - thrift a subclass of hbase - service - thrift ( addendum )
[ danfossairunit ] remove deprecated channel ` ` manual _ fan _ speed ' ' ( # 14850 )
use hamcrest assertion instead of junit in testendpoint
removed redundant null check for expansionHelper before stopping it to streamline code by eliminating unnecessary null checks
added null and empty index check in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and improve hash
server : fix root disk size in custom vm detail ( # 4558 )
updated PredictionRowView to conditionally show suggest apps in the drawer based on user preferences to enhance user experience by allowing conditional visibility based on
[ geos - 8470 ] apibboxparser do n ' t throw bad request for invalid bbox
added validation methods for value , position , and depth parameters in LibrustzcashParam . java to ensure input parameters are valid and
mark IThrowableEntity as deprecated to indicate it should no longer be moved to FML cpw . mods . fml . common . registry
added random x and y assignments in NodeDataImpl . java to generate random coordinates for node positioning
updated the ` validateRefreshToken ` method to include a happy case test and added a new test for missing scopes to improve test coverage and ensure
refactor JavacStep to use try - with - resources for better resource management to improve code readability and ensure proper closure of the
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version of the
added a condition to handle deep shortcuts in LoaderCursor to support deep shortcuts in the loader functionality
added hashCode ( ) method to TimeGranularitySpec class to ensure proper functionality for hash - based collections
changed access modifiers of classes BooleanQuery , DisjunctionMaxQuery , and weights from private to protected in BooleanQuery and DisjunctionMaxQuery classes
added a boolean flag ` tryTransparentNTLMProxy ` and ` useProxyResponseCode ` to manage NTLM proxy usage to ensure
[ aarch64 ] use aarch64 . sp instead of aarch64 . sp in aarch64macrossembler .
server : fix vm mem calculation to account for reserved / used / router / consoleproxy
added a null check for maxScore in JSONResponseWriter and implemented a query in TestDistributedSearch to ensure score is included only when the
updated the audio recorder instance from 22050 to 44100 to align with the latest audio codec requirements
updated the calculation of newOriginX to use subjectBounds _ m . getMinX ( ) instead of subjectWidth to ensure correct origin positioning
[ calcite - 1343 ] druidquerybasedinputformat should use default interval when data source be empty or null
added ` ORIGINAL _ TYPE ` to the ` ORIGINAL _ ID ` and ` ORIGINAL _ TYPE ` fields and updated
added a static method ` create ` to create an instance of ` Index ` with specified parent and data to facilitate the creation of
simplified the return statement for boundary period checks to improve code readability and maintainability
updated schema compatibility handling in ` SchemaCompatibility . java ` and added new test cases in ` TestSchemaCompatibility . java ` to ensure correct location
added persistent attribute type checks and modified join logic in QueryUtils . java to enhance entity path handling and improve join accuracy
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety when accessing shared resources
updated method signatures from List < Object > to List < ? > in multiple classes to enhance type safety and eliminate raw type usage in the method
updated exception handling in ViewContextImpl to include InvocationTargetException and improved logging for better debugging to enhance error handling and provide more informative logging for
refactor OAuth2AccessTokenEntity to improve code organization to enhance maintainability and readability of the code
updated error messages to clarify that the service cannot process requests due to STATUS = DOWN to improve clarity and accuracy of error reporting
added iOS resource files for Default - 1024w - 1366h in GdxSetup . java to ensure compatibility with iOS data and mo
updated import statements and added a concurrent merge scheduler in TestSearcherManager . java to improve performance and manage merge operations more efficiently
added null and empty check for SessionState in QTestUtil . java and improved list handling in GenericUDTFInline . java to
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 3640 : prevent the spreadsheet key listener from be click on the first page ( # 3641 )
hhh - 14613 hibernatebundleactivator should unregister osgi sessionfactory and persistenceproviderservice
fix ( pool ) : use connectiontimeout instead of elapsedtimems ( start )
voicecompilertest : move component . xml to a non - packaged resource directory
updated file name handling in Compat . java and FileOpener . java to improve clarity and ensure consistent file path formatting across different operating
changed the return type of the row ( ) method from Cell < T > to void to allow the method to return an instance of the row
improve error message when port be specify multiple time ( # 2596 )
added support for null masking in WebSocket connections to enhance flexibility in masking behavior for WebSocket connections
modified the return type of genUDTFPlan from RelNode to Pair < RelNode , RowResolver > to improve usability by providing
added nodeSelectionStats tracking for bucketed preferred and non - preferred node selections in multiple classes to enhance statistical tracking of node selection performance
added a new class Person with methods for setting and getting the name to provide a way to manage and access the name of a Person instance
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve clarity and functionality
added clock animation handling and lifecycle management in PlaybackOverlayFragment . java to improve user experience by providing a smoother transition effect and managing
remove unnecessary call to ` markDirty ( ) ` in various classes to streamline the code by eliminating unnecessary calls to ` markDirty
changed ` IMPL ` from ` final ` to ` static final ` and improved exception handling for loading ` SegmentReader ` to enhance flex
( chore ) camel - sudoku : ensure cell update event be fire on the Event Dispatch Thread
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and updated related methods in Gson and MiniGson classes to improve type adapter management and
added methods to retrieve double , long , boolean , and string values in the Series class to enhance functionality and ensure proper exception handling for illegal state
changed the option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager .
updated boundary conditions for lat and lon calculations in GeoRelationUtils . java and improved bounds checking in GeoUtils . java to enhance accuracy in
server : fix npe in getdiskofferingbyid ( ) method . patch by jbellis
added cleanup method to HazelcastTest to ensure all Hazelcast instances are properly terminated after tests
added tests for AES encryption modes in BlockCipherTest . java to ensure compatibility with the latest cipher specifications
added filters to print operations logs in QFileClient . java to improve log visibility for better debugging and monitoring
fix a bug where parent interface do n ' t have type parameter
set current connection address to proxy socket address if it ' s not already set
replaced the use of Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to improve code readability and maintain
replaced direct creation of ImageOutputStream with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
replaced direct calls to ` TvApp . getApplication ( ) . showSearch ( activity , boolean musicOnly ) ` with ` StartActivity
removed unnecessary ' this . ' keyword from constructors in SchemaCrawlerCommandLine and GrepOptions classes to streamline code for better readability and maintain
http : / / issues . apache . org / jira / browse / amq - 4892 - add osgi support to the
added an @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable dependency injection for the PersonRepository in the test class
changed the return type of the stop method from Exception to InterruptedException and updated the log message format in TestVertxUIManual . java
refactor case statements in BlockCactus . java to improve readability and maintainability to enhance clarity and maintainability of case handling
added a mouse motion listener to handle mouse events in ThemeSelector . java to improve user interaction by ensuring the current index is updated correctly when the
hbase - 25850 abstractminmulticastflowcontrol . java should extend abstractminmulticastflowcontrolrhspadding , a suggest
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance the functionality
refactor StatTokSentAnnotator to handle null modelFile and multiWordRulesFile more gracefully to improve error handling and provide clearer feedback
added handling for distinct queries in ClusterIntegrationTestUtils and QueryGenerator classes to improve query generation logic for distinct queries
add a method to find the most closely linkage in the native linkage .
fix a typo in the javadoc of jsyntaxtextarea . properties
added a null check for the children list before iterating to avoid potential NullPointerExceptions when children is null
added tokenPosition , currentPosition , and ioContext fields in MessagePackParser . java and implemented current name handling in MessagePackParser . java to
updated AbstractSolrMorphlineTestBase to restore the default locale after tests to ensure consistent locale behavior during tests
removed unnecessary conditional checks for launcher state in LauncherFragment . java to streamline code for better readability and maintainability
added a new test class MetricsReporterTest for verifying metrics registration to ensure proper functionality and reliability of the MetricsReporter class
( chore ) camel - osgi : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for instances of Rectangle
[ hotfix ] [ test ] use a non - existent topic name in streamkafptest
updated DSAParameterGenerator to use BigInteger . ONE instead of BigInteger . ONE for variable initialization to ensure proper handling of prime size constraints and avoid
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related classes to utilize this new method to improve
fix race condition in clientoutofmemoryhandlertest # testclientshutdown
replaced direct calls to ` setObjectId ( shapeId ) ` with a new method ` getCmoObjectId ( shapeId ) ` across multiple
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify fetching of distinct entities from the
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
removed the bindExtensionAdapter and unbindExtensionAdapter methods from ManagedKubernetesClient . java to streamline the code by eliminating unused references
updated subtitles in DetailsDescriptionPresenter to include detailed information for episodes to enhance user experience by providing clearer information about episodes
updated JUnit annotations in TestAuthHandlerBoot and TestRSAProviderTokenManager to use JUnit 5 ' s @ BeforeEach and @ After
do n ' t swallow exception when generate summary html
replaced intPool . reset ( false , false ) with bytePool . reset ( ) to simplify code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added a new ` WindowSessionDelegateU ` class and modified the conditional check for API level S _ V2 to support TIRAMIS
updated URL handling logic to differentiate between standard and non - standard schemes to ensure correct port assignment based on the request scheme and request port
updated conditional checks for OracleDatabase and MSSQLDatabase in AddForeignKeyConstraintGenerator . java to ensure proper handling of foreign key constraints for M
hbase - 25836 fix checkstyle violation in hstore . replacestorefiles ( )
pipe : add filtereventhandler to handle side check event . close # 1181
simonstewart : make htmlidentifier . shouldbeinjected configurable
updated method calls in HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema (
fix thread safety issue in simplebaseplayer and listenerset
updated schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema for improved schema management to ensure correct schema name is used for database
updated color scaling in SpriteBatch , SpriteCache , and AlphaTest classes , and modified color handling in AlphaTest to improve color scaling
fixed - rconnection . tocompletable . join ( ) and rconnection . getsentpromise ( ) . join ( ) method throw class
added a check to prevent duplicate base URLs from being recorded in statisticYearCores to ensure that only valid base URLs are recorded in the statistic year
updated task launching methods to accept a single Task object instead of a TaskHolder to improve flexibility in launching tasks from different views
updated MorfologikFilter to accept a dictionary resource instead of a language code to improve flexibility in handling different dictionary resources
updated sorting options for community and critic ratings in GridFragment . java to improve the organization of sorting options for better user experience
added imports for ViewKt and ListRow and modified visibility logic in CustomListRowPresenter to ensure proper visibility of header view based on item
refactor client type assignment in StressAction . java to ensure proper resource management and cleanup to improve code readability and ensure proper cleanup of
updated HttpClient class to improve connection handling to enhance performance and reliability of HTTP requests
updated type checks in CatalogAndSchema , AbstractDb2Database , and CatalogComparator to use instanceof for DB2Database to improve type safety and
add support for java time module in standardjsr310 .
updated import statement for Log4j from Apache to SLF4J to ensure compatibility with SLF4J logging framework
changed type declarations from TypeBearer to Type in PhiTypeResolver . java to ensure type consistency and avoid potential runtime errors
updated the formatting of the CoinbaseTransactionStatusDeserializer class for consistency to improve code readability and maintainability
added methods to retrieve build targets from BuckConfig and updated ProjectCommand to use this new method to improve flexibility in building targets based on
replaced the initialization of the idle strategy with a garbage collection mechanism to ensure proper resource management and avoid potential memory leaks
updated OCFile and related classes to use ContentResolver instead of ContentProvider to enhance compatibility with Android ' s ContentResolver for improved file
removed unnecessary conditional checks for checkbox selections in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
add a new file ` RemoveCallsToSystemGc . java ` to implement a recipe that removes garbage collection calls to ` System . gc
removed multiple super ( ) calls from multiple exception classes to streamline code and improve readability by eliminating unnecessary super ( ) calls
added a method to set the UIID in the ScaleImageLabel class to ensure the icon is updated correctly when the UIID is set
updated variable names from ` foundEntry ` to ` update ` for clarity to improve code readability and maintainability by using a more d
added support for " - cp " command - line argument handling in the Main . java file to allow users to specify both classpath and cp options
changed the compiler option from options to compiler in avutil . java to ensure compatibility with the latest compiler features and improvements
removed unnecessary whitespace in the initialization statement to improve code readability and maintain consistency
updated Test7196045 . java file to improve test coverage and ensure compatibility with recent changes
changed density and decay from 1.5 f to 1.0 f and changed the decay from 0.9 f to 0.95 f
added withState and stateData properties to OidcConfiguration and updated OidcRedirectActionBuilder to handle state management more effectively to improve flexibility
hhh - 14650 : do n ' t inline unique constraint for non null column
added support for federated sharing in UsersAndGroupsSearchProvider and EditShareFragment to enhance user query functionality based on user sharing capabilities
added an overridden method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to ensure that the ` TestBBoxStrategy `
updated error messages in BufferAlignmentAgent , BufferAlignmentInterceptor , DynamicCompositeAgent , and Java files to improve clarity of error reporting and enhance
added a method ` intForEach ` to ` Int2ObjectHashMap ` for processing null values to facilitate processing of null values
fix scoreboard save data not associate with temporary scoreboard .
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to
do n ' t create mtree snapshot if it ' s too big
update dotProductScore calculation and test assertions in VectorUtil . java and TestVectorUtil . java to improve accuracy and accuracy of dotProductScore
added support for IRREVERSIBLE _ THRESHOLD in multiple classes to manage the last confirmed block number in the database
refactor locale handling in GpsMainActivity , MainPreferenceActivity , and Systems classes to utilize the user - specified locale from PreferenceHelper
added a condition to check if a new database has been created in LauncherClings . java and updated LauncherProvider . java to include
refactor assertions and collection management in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
simplified the condition for determining if the datamodel is null and its OS architecture is 64 - bit to improve code readability and maintain
added a thread check in TestIndexWriterDelete . java to ensure that operations on the current thread are only executed when the current thread is the
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports from ` apiclient . model . dto . BaseItemPerson ` to ` jellyfin . sdk . model . Base
added attribute handling for SVG elements in BatikSVGDrawer to ensure SVG elements are properly imported from the document
replaced the try - catch block with a try - catch block in ConsoleKeys . java to improve error handling for user configuration parsing
added a check for the " WaitForResult " extra in CodenameOneActivity . java to ensure proper handling of the " WaitForResult "
updated constructors and methods in HitQueue , SpanPositionQueue , and PriorityQueue to use a Supplier < T > for sentinel object retrieval to
added functionality to display a description for widgets in the WidgetCell class to enhance user experience by providing context - specific information when available
added a maximum allowed attribute count check in Attribute . java to prevent registering aliases exceeding the maximum allowed attribute count
move predicatestest from com . hazelcast . query to com . hazelcast . query . impl . predicates
camel - 7999 : added case - insensitive option to defaultheaderfilterstrategy for camel - http
updated inline processing logic and improved whitespace handling in Breaker . java to enhance code clarity and ensure proper handling of unbreakable strings
added null checks and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactor the ` shouldInstrument ` method to include ` isFromAndroidSdk ` for better clarity and efficiency to simplify the code and improve
added a condition to return the last column index if the association is insert destination before the source to ensure that the correct column index is returned when
test : fix memory limit in test case ( # 2368 )
replaced instances of ` CxxDeps . of ( ) ` with ` EMPTY _ INSTANCE ` in multiple files to improve code clarity and
added error handling for null rules in JavaTestRule . java to improve robustness by providing clearer feedback when the specified source dependency is not
fix for minecraft 1.9 . 4 and 1.10 . 2 compatibility .
removed negative index check for atIndex in StringUtils . java to ensure atIndex is always non - negative to prevent potential ArrayIndexOutOfBoundsException
increased timeout timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility and control over AssistContentRequester usage
updated witness address encoding logic in VoteWitnessProcessor . java to ensure proper handling of null accounts and improve address formatting
refactor DefaultMethodRegressionTests for improved readability to enhance maintainability and clarity of test cases
refactor WorkloadManagerMxBean to improve code structure to enhance maintainability and readability of the code
updated import statements to use KafkaException instead of KafkaProducerException to ensure compatibility with the latest Kafka library structure
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to ensure proper handling of
[ hotfix ] [ runtime ] improve error message for configbuilder
added ` extraProperties ` parameter to multiple ` TableConfig ` and ` TableConfigTunerUtils ` classes to enhance configurability by allowing
added a check to prevent adding segments that are currently in progress to ensure that only active instances are added to the list of segments to avoid adding
added a check to return null if touchable is disabled to prevent further processing when the touchable component is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw retryablehazelcastexception if cache config be n ' t create yet
refactor NPM installation logic in JSweetTranspiler . java and add a method to check if the node package is installed to improve
added Jetty ' s @ Managed annotation to MBeanContainer and Destroyable classes to enhance monitoring capabilities for MBeans registration and resource cleanup
modified the conditional statement in LongClickableSpan . java to include a comment to improve code readability and clarify the condition ' s
updated string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` equals ` method to improve
updated isReifiable condition in mmm Types . java and added new classes T6558559a . java and T6558
update worldeditlistener to print the current position instead of edit position .
( chore ) camel - kafka : fix race condition in kafkaconsumer
removed the default example method from the Schema class to simplify the class by eliminating unnecessary default implementation
modified thread interruption logic in AgentRunner . java to ensure proper handling of thread status and improve code clarity
remove the time column from dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of dataset dimensions in the aggregation process
removed unnecessary condition for shards in FacetComponent . java to streamline the code for better readability and maintainability
replaced direct calls to ` linker . getParseTimeDeps ( ) ` with ` CxxPlatforms . getParseTimeDeps ( c
added a private String name property and its getter / setter methods to JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to
added output messages and improved error handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to enhance debugging capabilities and provide clearer error
refactor small scan threshold handling in BaseQueryPlan and related classes to improve code clarity and maintainability by centralizing scan range retrieval logic
added " routeId " to the toString ( ) method in RetryGatewayFilterFactory . java to include the route ID in the string representation of
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor ` onOverviewShown ` methods to use ` DiscoveryBounce . showForOverviewIfNeeded ` instead of ` onOverviewShown ` to
removed unnecessary null checks for min and max packed values in CheckIndex . java and added a test for deleting point documents in TestPointValues .
updated the publish method to include an updateLastState parameter to enhance state management by allowing updates to the last state
updated SQL string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper syntax and avoid potential SQL injection vulnerabilities
removed an unnecessary addition of a null value in the SpliteratorCollisions class to streamline the code by eliminating unnecessary operations
danielwagnerhall : add textcasesensitivity ( ) method to condition . text ( ) to make it easy
replaced ` do ( true ) ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code
# 1560 - enh : add fetch size for forward only query ( # 1561 )
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to improve error logging and avoid unnecessary exceptions when the channel is already closed
pdfbox - 4892 : grow arraylist size , a suggest by valerybokov
updated window radius initialization to support rounded corners on windows to ensure compatibility with devices that support rounded corners on windows
refactor DesktopTaskView to use View for background and icon views instead of ShapeDrawable to improve flexibility and maintainability of background and
refactor UpstreamCheckServiceTest to use a new instance of UpstreamCheckService to improve code organization and ensure proper initialization of the upstream
updated log level from warn to debug in AbstractSession . java and AbstractSessionManager . java to improve logging granularity for better debugging without clutter
updated ZooKeeperHiveLockManager to return locks instead of throwing an exception to improve error handling by returning directly instead of throwing an exception
[ hotfix ] [ core ] fix checkstyle violation in javadocs
added a boolean flag ` containsCustomData ` and modified the mipmap generation logic in ` FileTextureArrayData . java ` to ensure
updated assertions in DefaultMaskingFormatterTest to use uppercase ' xxxxx ' instead of uppercase ' xxxxx ' to ensure consistency in character representation
added selectable state management and methods to manage touch events in the List class to ensure proper handling of touch events when the List is not selectable
added a check to return false if the vector ' s value count is zero in LlapArrowBatchRecordReader . java to ensure that the
added file separator handling and improved logging in PolicyContext . java to ensure consistent file path formatting across different operating systems
replaced Set with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and memory usage by using a more suitable data
refactor TLSRestrictions class to improve code structure to enhance maintainability and readability of the code
http : / / issues . apache . org / activemq / browse / amq - 2635 - make sure to close the
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance functionality by allowing for more flexible handling of
added a check to delete a lock file if it exists in RocksdbMavenPomCache . java to ensure proper resource management by
hbase - 25835 fix npe in minizookeepercluster . testhquorumpeer . testhquorumpeer (
added a new method ` getResponse ` to ` RestClient ` to handle ` IOException ` and ` HttpURLConnection ` to improve error handling and logging for
[ hotfix ] [ runtime ] use string [ ] instead of string [ ] in ingestionutils
updated loginStudent calls to use the correct password instead of the account identifier to ensure the test uses the correct password associated with the student
added null check for getActivity ( ) in EnhancedBrowseFragment . java and StdBrowseFragment . java to prevent potential NullPointerExceptions when accessing getActivity
increased the number of strings from 500 to 100 in TestSpecialOperations . java to allow more than 100 strings for processing
replaced the deprecated ` ByteArrayInStream ` instantiation with a new ` ByteArrayInStream ` implementation to simplify the code and improve performance by elim
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if two states are direct substates in AbstractStateMachine . java to improve state management by preventing unintended
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and created corresponding tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enhance functionality by integrating join operations
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to verify that the data issue is
http : / / issues . apache . org / jira / browse / amq - 5035 - verify that closedurablesubscriber return
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` to ` String ` in ` MongoDbConnectionPoolProperties `
fix npe in sdputils . createaudiosoundformat ( ) when sipactivator do n ' t have a mediafactory
refactor filter handling methods and improve filtering logic in FacetProcessor . java to enhance clarity and functionality of filter application based on domain changes
[ java ] do n ' t add timeout handler to the pipeline if it ' s idle
replaced hardcoded value for quick step starting rotation with a constant from QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
camel - 7999 : camel - xpath and camel - xpath - add more logging in xquerybuilder
bug fix : use dataresource instead of class . getresource ( )
pmd : add test for escape backslashes ( # 1751 )
added a validation check for the ' atlas ' property in the AtlasTmxMapLoader to ensure that the required ' atlas ' property is present
camel - 14263 : remove propertyplaceholderhelper from camel - core . this be not need anymore .
added database closure in BlockchainTest and removed unnecessary ReceiveSource initialization in KafkaTest to ensure proper resource management and eliminate unnecessary code
refactor CoreMarkdownNodeRenderer to use a List instead of String arrays for line extraction to improve code readability and maintainability by utilizing
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replace ImmutableList . Builder with Lists . newArrayList and update SQLBindings constructor to use List < Object > instead of ImmutableList . builder to improve code read
added support for OpenJDK in virtual machine detection to ensure compatibility with OpenJDK when running in the application
http : / / issues . apache . org / jira / browse / amq - 4892 - keep the client alive when the
replaced string literals with constants from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve code readability and maintain
camel - 14263 : camel - core - optimize to reduce memory consumption .
modified the condition for retrieving an AccountCapsule in UnfreezeBalanceActuator . java to ensure accountCapsule is not null before proceeding
update version number for 3.8 . 0 to 3.8 . 1 to reflect the new release status .
replaced calls to ` t ` with ` t . unannotatedType ( ) ` for handling unannotated types to improve type handling
updated assertions in StorageGroupProcessorTest . java to reflect changes in sequence file size and configuration to ensure correct processing of tsFile processors and maintain
updated class loading mechanism to use the ee10 environment class loader to ensure compatibility with the latest Jetty library version
added a parameter to set a wait before start in FFMpegVideo . java to allow for longer processing before starting video processing
removed the ` skipCorrupt ` boolean from the constructor of ` OrcEncodedDataConsumer ` across multiple classes to simplify the constructor and eliminate unnecessary
add more test for the listindex ( ) method in accessorstest .
[ fix ] lirgenerator . getframemap ( ) now return the framemap .
replaced JUnit @ Ignore with @ ConditionalIgnore in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to ensure tests
fix botania botania botania botania botania botania botania botania botania
updated the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added methods to handle path assertions in BDDAssertions to improve assertion capabilities for path - based assertions
updated variable names and variable references in ForwardedRequestCustomizer . java and ForwardedRequestCustomizerTest . java to improve code clarity
updated logging level from debug to warn for multiple Kubernetes config files to provide clearer guidance on configuring Kubernetes files
added upload handling methods in FileUploadService , UploadListActivity , and FileStorageUtils to improve file management and upload status management in the application
added a new ` ProviderLoader ` and ` ProviderLoaderListener ` interface , and refactored ` TerminalManager ` to use it to improve
updated imports from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to
updated the ` SelectFromDatabaseChangeLogStatement ` to use a new column configuration instead of a hardcoded value to simplify the database query by
hhh - 14650 - postgresql 1.1 , postgresql 8.0 , postgresql 8.1 , postgresql 8
fix partition count calculation when there be no member
added scheduler state checks and improved error handling in ` ExecutionScheduleManager ` and ` ExecutionSchedulerImpl ` classes to ensure proper scheduling behavior and
simplified InlineBox instantiation by removing unnecessary string conversion to improve code readability and maintainability
updated error messages in StatisticMap . java for clarity to improve readability and maintainability of the code
increased the slide end value from 383 to 500 in the getStagedRectSlideEnd method to improve the responsiveness of the
updated command mode labels to use a bundle bundle instead of a hardcoded string to improve localization and maintainability of the code
updated condition to check for owned plots in BukkitMain . java to ensure road item removal occurs only when the plot is owned
added a test for ` TouchExplorationEnabled ` in ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager ` to
pdfbox - 5328 : fix indexoutofboundsexception in cmaptable . getcharcodes ( )
replaced usage of ` getPropertyAsString ( TestElement . NAME ) ` with ` getName ( ) ` in multiple classes to simplify code and improve
replaced multiple instances of NPOIFSFileSystem with POIFSFileSystem . create in TestNPOIFSFileSystem . java to simplify
added imports for PlotArea and modified return logic in Move . java to handle null plot areas to ensure robustness by preventing null pointer exceptions
updated version check from " 0.[0 - 9 ] + . [ 0 - 9 ] + . [ 0 - 9 ] " to
updated the condition to check if the count is less than or equal to 1 to ensure that the count is always at least 1 to prevent potential
camel - 14263 : camel - kafka - add client id to kafka consumer config . fix # 5368 ( # 5369
updated import statements and added error handling in JavacCompiler . java to improve code clarity and ensure proper exception management during javac execution
mow - 1343 repaint the view if there be no option to close
( chore ) camel - spring - batch : fix checkstyle violation
added a method ` isAnimationFinished ` to check if the animation has finished to provide a way to determine if the animation has completed based on
updated import statements in LoginInfoEndpoint . java and added a new test for custom favicon with line break in LoginMockMvcTests . java
added null check for ` otherUrl ` in ` TimeLineCursorAdapter ` and modified the refreshing text string in ` HomeFragment ` to
ggb - 2118 fix for space character in input box ( space )
refactor ObjectHashSet class to improve performance to enhance efficiency of hash set operations
refactor null checks in DataUtilities . java for improved readability and performance to simplify null checks and enhance code maintainability
fix creative item delete bug ( mc - 12770 )
( chore ) camel - async : add unit test for async resource
replaced " - target - flat - headers . hmap " with " - target - user - headers . hmap " and updated related
added error handling and logging for email sending failures in MailService . java to improve troubleshooting and provide clearer feedback on email
replaced the method ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and `
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior
added a new line to the FileListListAdapter class to enhance code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
corrected the index of the child in the removeViewInLayout method from 1 to 2 to ensure the correct child view is removed from the
removed unnecessary dependencies from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline dependencies and improve code clarity
change the default value of the policy parameter from true to false in S3Request . java to align with the intended behavior of the S3
jfxradiobuttonskin : do n ' t call updateanimation if timeline be null
updated the logic for parsing DeweyNumber to handle both zero and one split cases to improve error handling and provide clearer feedback when parsing
refactor category string handling in MwVolleyApi . java to replace " Category : " with " Category : " to improve clarity
corrected the spelling of " Invalid close control status code " to " Invalid close code " in WebSocketClientTest . java to ensure accuracy
added a null check for classLoader and updated the expected length assertion in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure robust
hhh - 14650 remove duplicate code in persistentattributetransformer . addinheritpersistentfields ( )
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added a new test class TestPorterStemFilter for testing PorterStemFilter functionality to ensure that the PorterStemFilter functionality behaves
added a success parameter to the postBatchMutate method and modified its logic to handle writes only if the mutation was successfully written to ensure that
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix thread safety issue in chat window manager .
removed redundant calls to Sys . touch ( ) across multiple files to streamline code by eliminating redundant touch calls
updated HgCmdLineInterface , NoOpCmdLineInterface , and HgCmdLineInterface classes to include " - mardu "
camel - 14263 : camel - netty - make it possible to configure the timeout handler on the endpoint . thanks to jo
changed several fields in DirectionalLight , PointLight , and SpotLight to be final in DirectionalLight , PointLight , and SpotLight
added a maximum of 1 to the width and height variables in X11GraphicsConfig and WGLGraphicsConfig to ensure that only valid dimensions are
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a way to retrieve
added a new ` AnnoFilterTreeSet ` class and methods to handle annotations in inner classes to improve annotation processing efficiency by filtering out inner
modify the handling of newLength in BytesColumnVector . java to ensure newLength does not exceed Integer . MAX _ VALUE to prevent integer overflow
fix flaky test in writebehindmapstorewithevictionstest . testwritebehindmapstorewithevictionstest
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI .
add function . isEqual ( polyfunction ) to compare two polynomial function
added a null check for the table before retrieving the column class to avoid potential NullPointerExceptions when the table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException to improve robustness by preventing application crashes due to
added methods to retrieve ` buckConfig ` and ` getOptionalPathWhitelist ` in ` DistBuildConfig ` , and updated related classes to
add warning text for ofx and qif export if double trace be enable .
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to tracking down issues
change return type of ` doJoin ` methods from ` void ` to ` boolean ` and update related logic in ` JoinTemplate ` , `
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unused methods
updated intent flags in LauncherTimelineCursorAdapter to include FLAG _ ACTIVITY _ NEW _ TASK to ensure that the activity starts in a
added a new method ` checkPagingOrderBy ( ) ` in ` SpiQuery . java ` to enhance paging functionality in query processing
updated repository URLs in RepositoryConventionPluginTests from " https : / / repo . maven . apache . org / " to " https : /
add a new file for the pubsub affiliation task to track and manage affiliate .
improve error message for invalid uri .
changed access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes
added array and array update functionality in CacheKey . java and updated test cases in CacheKeyTest . java to improve array handling and ensure consistency
added FileTypeDetector implementation to multiple file type detector implementations across different file system providers to enhance file type detection functionality across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
refactor ShadowVirtualDeviceManager to use reflective access for VirtualSensorCallback and VirtualSensorDirectChannelCallback to enhance flexibility and maintainability
added a condition to check if the session context is not equal to the default context before execution to ensure that the security context is not removed from
rename the variable ` lch ` to ` loopback ` and update related logic in ` NetUtil . java ` to improve clarity and functionality
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated related variables for clarity to improve code readability and maintainability
added secure validation checks and improved exception handling in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to
added a check to ensure the icon change listener is only applied once to avoid redundant action listeners to improve performance by avoiding unnecessary action listeners
added Russian language support to the Language class to enhance localization support for Russian users
hhh - 14613 fix duration precision in sqm to sql conversion
added a call to frameState . disableStateVerification ( ) in SubstrateGraphKit . java to ensure that frame state verification is properly
added reset system properties for " robolectric . enabledSdks " and " robolectric . alwaysIncludeVariantMarkersInTest
added support for the " org . slf4j . " system class in the ViewClassLoader and its corresponding test in ViewClassLoaderTest to
added a check for the default packaging in ChangePackaging . java and implemented a corresponding test in ChangePackagingTest . java to ensure
simonstewart : filedownloadviahttpgettest and filedownloadviaproxytest fail on window
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer during
renamed ` defaultUnits ` to ` preferredUnits ` and updated related methods to improve clarity and consistency in unit handling
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
removed redundant return statements in Terminator . java to improve code clarity and maintainability
updated error messages in FileSystem , LocalFileSystem , and DistributedFileSystem to provide clearer error messages for invalid file URIs to improve clarity of error
make jabrefframe . showtrackingnotification run in one minute instead of schedule
updated FtpReconnectAttemptServerStoppedIT to increase reconnect attempts and added a method to count active sessions in FtpEmbeddedService to improve reli
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve thread safety and performance in a more efficient manner
added a ` ignore ` method to multiple log classes and a method to check if a throwable is ignored to enhance logging control by allowing ignored exceptions
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions when accessing runningTaskView
removed unnecessary type casting for damage in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed the call to GraphicsUtil . cleanImage in PanelManager . java to streamline image processing by eliminating unnecessary image cleaning
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to handle directory mapping and unmapping to improve performance and flexibility in directory operations
added a null check before creating the BaseColor instance in PdfCleanUpProcessor . java and updated test cases in PdfCleanUpProcessorTest .
updated the assertion in QueryEqualityTest to use " field1 _ s " instead of " maxDocFreq " to ensure correct comparison of the
refactor ExtendedOperatingSystemMXBeanImpl to improve code readability to enhance maintainability and reduce technical debt
added functionality to install left commands in the SideMenuBar to enhance the user interface by allowing customizable command display in the title area
added a new boolean variable ` advanceWindowed ` and modified window setup logic in ` TweetActivity ` and ` UserProfileActivity ` to
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] notify the leader ready when a recording be complete to ensure that the leader be ready before proceeding .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to prevent premature termination of the method execution
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server in the ListenHTTP class to handle potential exceptions when starting the server gracefully
camel - 15836 - camel - aws2 - s3 : fix checkstyle issue in camel - aws2
[ hotfix ] [ runtime ] rename parameter _ tm _ id to task _ manager _ id _ key in webmonitor
bug 10363 : db upgrade - drop keys that do not exist in 228 to 229 version of the db
added a new test class TestThriftCLIServiceSecurity and modified password handling in TOpenSessionReq to ensure that the password is not logged in
added a new variable ` maxEnergyLimit ` and updated its assignment logic in ` VMActuator . java ` to utilize it to
added a ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and updated ` HttpClientPluginConfiguration ` to
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
added two new test files , RunCucumberTest . java , StepDefinitions . java , and RunCucumberTest . java to
added error handling for JSON parsing in TypeJsonUtils . java and updated corresponding test cases in TestArrayOperators . java to improve robustness and
updated the part3 byte array from " 656469746564 " to " 808065646964 " in Utf8
added a check for parameter values before appending them in Params . java and modified path handling in RestInvocationHandlerTest . java to ensure only valid
camel - 16400 : camel - circuit breaker - add max number of output to circuit breaker load balancer
updated document frequency assertion in TestIndexWriterExceptions . java to ensure maximum buffered documents does not exceed configured limits
replaced ` hasher . putUnencodedChars ( ) ` with ` Sha1HashCode ` for hash calculations to improve performance and reduce memory
removed unused enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code by eliminating unused functionality
add a few more biome tag to make it easy to use .
refactor asyncimageloader to use a thread pool instead of a separate thread to improve performance and scalability of image loading
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager from private to protected and refactored related methods to improve accessibility
replaced occurrences of " ي ر ر ر ر ر ر �
replaced ` . equals ( varName ) ` and ` . equals ( vn ) ` with ` hasImageEqualTo ( varName ) ` and
camel - jbang - add -- repos to run - dcamel . jbang . version to make it easy to run camel from a different
added handling for NaN scores in CrawlDbReader . java to improve robustness and prevent potential errors when score is NaN
added a cleanup method to delete temporary files after tests to ensure proper resource management and avoid potential memory leaks
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and added focus
[ hotfix ] [ runtime ] make checkpointscleaner implement auto - closeableasync
added a new file ` XPathWhiteSpaceTest . java ` for testing XML schema validation to facilitate testing of XML schema validation forWhiteSpace
fix ( bonsai ) : do not override trieloglayer when get mutable with rollback
refactor FilledNewArrayInstruction class to improve code structure to enhance maintainability and readability of the code
increase timeout for simplenetworktest to reduce flakiness
updated the return statement in OCFile . java to check if the parentPath ends with a slash to ensure the method correctly handles cases where the
added error handling for skin file loading in JavaSEPort . java to improve debugging by providing clearer error messages when skin file loading fails
added functionality to mark and filter the accumulator in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to improve accumulator handling and
added a constant ` UNDEFINED ` to the ` Result ` class and updated the return statement in ` TestStep . java ` to improve code cl
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null values in callback registration
implementifieddataserializable interface for uploadjobmultifileoperation ( # 2321 )
if ignoremissingjournalfiles be set to true , do n ' t recover data at position
bug fix : make verticalnodeviewlayoutstrategy more flexible
modified the ` DataOutput2 ` class to use ` sizeMask ` instead of ` volatile ` and modified the ` ensureAvail ` method
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
replaced the variable ` targets ` with ` endpoints . size ( ) ` and updated the array initialization to use the size of ` endpoints `
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated transform function types in TransformFunctionType . java and TransformFunctionFactory . java to use lowercase strings to improve consistency and readability of the
added method overrides for getSimpleName ( ) and getEnclosingElement ( ) in VariableElement . java and package - info . java to enhance code cl
updated RFC3280 to RFC5280 in multiple Java files to ensure compliance with the latest standards for RFC standards
fix classcastexception in searchannotationvisitor so that it do n ' t cast to char
replaced HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and memory efficiency in handling selected items
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve compatibility with URL - based resources and ensure correct file path formatting
updated PreviewPositionHelper to accept a Context parameter and modified device insets handling in TaskViewSimulator and TaskThumbnailView to improve context management and
[ java ] only publish new leadership term if necessary .
added error stream logging and updated assertions in PMDCoverageTest . java to improve clarity and accuracy of error messages in tests
refactor ByteArrayInputStream to improve byte skipping logic and introduce a new Skip class for testing to enhance functionality and ensure correct behavior of skip operations in
simplified the condition for prompting updates in UpdaterTask . java to improve code readability and maintainability
changed the ` MAX _ HEADERS ` constant from ` final static ` to public and added a conditional check for header size in ` Peer .
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional resource loading for the
refactor connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
updated parameter retrieval methods to use ` Utils . Prop . PATH _ TYPE ` and ` Utils . Prop . PATH _ TYPE ` to improve code
added a check to prevent sending an error response if the response has already been committed to improve error handling by avoiding unnecessary error responses that are
updated conditional checks for hold and connection queue size in HttpSession . java to improve code clarity and ensure proper handling of hold conditions
updated fade - out functionality in HomeGestureTutorialController and added new gesture navigation tutorial features in SwipeUpGestureTutorial
feat ( prefab ) : fix typo in log
removed unnecessary ScimGroupExternalMembershipManager and ScimExternalGroupBootstrap initialization in LdapMockMvcTests . java to streamline group creation process
modified the initialization of ` thirtyDays ` in ` FreezeBalanceActuator . java ` and added a validation check in ` TransferAct
updated path handling in FileResolverTestBase to use File . separator instead of ' / ' to improve compatibility across different operating systems
ggb - 2178 fix keyboard button show when no error message be present
updated GpsMainActivity to include session description in the GpsMainActivity and modified AnnotationViewFragment to utilize EventBus for event tracking
added a conditional check for the number of pages in JsoupNonVisualRegressionTest to display a PDF file if it does not already
[ jme3 ] deprecate androidbufferallocatorjme in favor of androidnativebufferallocator
added handling for flag names starting with " ! " in Main . java , PrimaryItem . java , and Util . java to improve flag validation
no effective change - no functional change
modified the conditional check for item use operations in BattlePassManager . java to improve readability and maintainability of the code
refactor QueuePriorityTest to use a dynamic item count and add a toString method for the PriorityElement class to improve test readability and ensure
remove unit test for create / delete affinity group
added null check for the command and modified argument checks in Main . java to enhance error handling and improve command argument validation
change LightOutputStream size from 7 to 4 in multiple classes to improve performance by reducing the frequency of output streams
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and updated conditional logic in ` ClassWriter . java ` , and created a new class ` T8032
removed assertion check for the length of the Person object to streamline the code by eliminating unnecessary assertions
added null check for file extensions in VirtualFile . java to prevent potential NullPointerExceptions when checking file extensions
replace return statement with continue statement in ContactRightButtonMenu . java to improve flow control and prevent fall - through behavior
fixed potential npe in simpleslot . returnallocatedslot ( ) .
simplified the loop structure in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor socket binding logic in PlainSocketImpl to use a delegate socket instance to ensure proper resource management and prevent memory leaks
added functionality to manage and clear removed items from bookmarks in the BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by
corrected a typo in the log message from " center of element " to " in - view center point " to improve clarity in
added a new file ` bug4865918 . java ` implementing a GUI for verifying scrollbar block increment to address bug 48659
replaced VelocityEngine with Velocity in ADKerberosOperationHandler . java to simplify dependencies and improve code readability
replaced specific imports with a wildcard import and added group triggers functionality in QuestCommand . java to streamline imports and enhance quest command
start xml file chooser in accounts activity to avoid crash when no file manager be available
add miss @ tostring ( callsuper = true ) to make it easy to debug
updated the configuration URI in CloudService . java to use a constant for the configuration URI to improve maintainability and readability of the configuration URI
removed setViewportComponent and setJScrollPane calls from BrowserPanel . java to streamline the code by eliminating unnecessary components
added support for the FORWARD _ DEL key in LwjglInput , ParticleEditor , and TWL input classes to enhance
added a condition to conditionally index mime type parts based on configuration to improve flexibility in handling mime type parts based on user preference
added a regex pattern for identifying author comments in JSDoc . java to ensure only relevant author information is included in generated comments
updated metrics constants to use CREATE _ TOTAL _ DATABASES and CREATE _ TOTAL _ TABLES instead of DELTA _ TOTAL
refactor HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for accessing table names to improve
updated oauth2LoginLinks method to accept a MultiValueMap containing query parameters to enhance functionality by allowing error handling in the login process
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
added support for firefox in WebAudioWrapper . java to ensure compatibility with browsers that do not support these features
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed an unused constructor ` InterceptorConstants ` to enhance server configuration flex
added default charset to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with database schema changes
removed unnecessary whitespace in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] replace allocationtimeout with timeout
added a boolean field ` hasFrom ` and corresponding getter and setter methods in ` Delete ` , ` DeleteDeParser ` , and ` Delete
updated synchronization logic to differentiate between success and multi - status status to improve clarity and functionality of synchronization handling
refactor test matching logic into a new method ` applicableListTests ` in ` RecipeScheduler . java ` to improve code readability and
updated regex pattern in LogAnalyser . java to improve date parsing accuracy to enhance accuracy in identifying valid log entries
camel - 16400 : camel - test - infra - google - cloud - integration - add support for google - cloud - integration -
fixed - rsearch . value ( ) and rsearch . setminexclusive ( ) and rsearch . setmaxexclusive ( ) do n
updated type declarations and logic in CCLicenseStep . java for improved type safety and clarity to enhance code readability and maintainability
added a null check before storing the global ID in the guidIndex to avoid potential NullPointerExceptions when accessing the global ID
updated equality check in OptionalAssert to use a comparison strategy to improve flexibility and maintainability of the comparison logic
added a check for the size of fontSize before setting it in multiple classes to ensure LAST _ MARGIN _ BOTTOM is only set when it
added a new file TestArrayCopyToFromObject . java with a test method for array copying to ensure that ArrayStoreException is thrown when destination and
updated Python path formatting in BuckPythonProgram . java to use Escaper . escapeAsPythonString for better handling of special characters to
fix ajp / ppp / apr / pppnio / apr / pppprotocol # isasync ( ) to check
deprecate findfiles ( modcontainer , path , boolean visitallfiles , boolean defaultunfoundroot , boolean visitallfiles ) ( #
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to mark the test as un
modified the request handling in TestInternalInputBuffer to check for null exceptions before verifying response status to ensure that the client handles cases where an
added autoload locking mechanism to prevent concurrent loading of classes to ensure thread safety during class loading operations
added a method to check if a server version is equal or greater in CustomPlaybackOverlayFragment and updated PlaybackController to retrieve HLS support
updated KDC , OneKDC , and BasicKrb5Test to use canonical host names instead of " localhost " to ensure consistency in
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a JS
updated import statements in MP4Parser . java for better organization and clarity to improve code readability and maintainability by reducing redundancy
added a new constant HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to include the proxy user to enhance
added support for SnappyCodec in HdfsCompressionCodec and created corresponding tests in HdfsProducerTest to enhance compatibility with Snappy
added a sleep duration of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during tests
fix bug # 49966 - do n ' t notify array formula change part of an array formula
updated glyphs calculation and buffer appending logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve accuracy of glyphs and enhance
refactor ISTIO version and binary path handling in Fabric8IstioIT . java to improve code readability and maintainability by
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getPlaybackManager ( ) . reportPlaybackStart
use bufferedinputstream instead of bufferedinputstream in simpleauthority . load ( )
do n ' t hit eviction on initial load if record store do n ' t exist in memory
updated the return statement in ResponseFlag . java to correct the bitwise operation to ensure proper handling of error conditions in the response flag representation
add check for read policy and add anonymous policy if not find .
added a SoftReference to manage CompositeFont instances using ConcurrentHashMap to improve memory efficiency by avoiding repeated instances of CompositeFont
updated the calculation of prefHeight in Tree . java to simplify height adjustment logic for better readability
drools - 3745 dmn feel validation : improve error message for unknown variable error
removed unnecessary import statements across multiple Java files to improve code clarity and reduce unnecessary dependencies
changed access modifier of finishRunningRecentsAnimation method from private to public and updated long press handling in various input consumers to allow external access to
added null checks for node ID and edge type in ElementFactoryImpl and Improved edge handling in ImportContainerImpl to ensure robust error handling
[ beam - 10686 ] drop unknown instruction and state response from rpc client ( # 10685 )
nifi - 5338 : fix npe when create bin file that be larger than the bin limit .
replace geometry . findClosest method with a loop to find the closest core to improve efficiency by using a linear search for the closest core
added content - length handling in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to ensure that the content -
updated case handling in Java2TypeScriptTranslator and modified transpilation logic in SyntaxTests to improve type conversion accuracy and enhance test coverage for
updated filter sizes and sample sizes in multiple classes for better performance to improve UI responsiveness and accommodate larger data sets
hbase - 24479 add - allregion command to canary to allow - all - regions to be run on a regionserver
[ hotfix ] [ cassandra connector ] remove node . environment from testcassandraconnector
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the cursor position is reset before processing new data
added minimum size of call dialog and one - to - one call panel to ensure that the call window does not exceed the defined size of the
fix loss of state information during world gen
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSetup instead of JUnit ' s Test to improve
added a dependency injection for KerberosPrincipalHostDAO and modified the removal logic for KerberosPrincipalEntity to improve code clarity and ensure proper
removed the ` true ` parameter from the ` getTableSnapshot ` method call to simplify the method call by eliminating unnecessary parameters
improve error handling and logging in aprendpoint . poll ( ) .
updated the error message in AndroidGradleBuilder to clarify the requirement for the android . licenseKey to provide clearer guidance on
updated the method for creating a VirtualFolder from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java
[ drools - 7 ] fix package name resolution in kie - ci
added a conditional check for the runtime version in CheckIndexTest . java to ensure compatibility with Java version 19 and above
removed the ` context ` parameter from the ` assignTargetsForSplitScreen ` method in ` AbsSwipeUpHandler ` and ` RemoteTarget
refactor LeaderLatch class to improve code structure to enhance maintainability and readability of the code
added methods to initialize ZKSNark parameters in SolidityNodeHttpApiService . java to initialize ZKSNark parameters
refactor transaction confidence handling to use a ListenableFuture for better management of depth in transactions to improve performance and responsiveness by avoiding
refactor ` longtitude ` and ` longitude ` variables for consistency and clarity to improve code readability and maintainability by standardizing
set platformName to " ios " in JavaSEPort . java to ensure compatibility with iOS by default
doc : generate sample code in the java microgenerator ( # 44 )
simplified conditional statements in Graphics2D . java to improve readability and maintainability of the code
pdfbox - 4071 : fix typo find by codespell on fossies . org
added error handling for outgoing frame processing in AbstractExtension . java to improve robustness by logging failures when an outgoing frame fails
replaced the try - catch block with a privileged action in ContextHandler . java to improve security by using privileged actions when accessing the
added logic to remove parent categories from all child categories in the FeedCategoryDAO to ensure that only child categories are removed from the database
updated ContributionManagerDialog to use a dynamic title based on contrib type to improve user experience by providing descriptive titles based on contrib type
added a vwap field and corresponding getter / setter methods to the Ticker class and updated the Ticker class to include it to enhance
added functionality to display a ' no widgets ' view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to improve user
add rendergraphapi to make it easy to add tintnode to the render graph
added primary color to NCFirebaseMessagingService to enhance the visual consistency with the application ' s theme
updated ShadowUsbManagerTest . java to improve test coverage to enhance reliability of USB manager functionality
updated parameters in AbstractDifferenceRecommenderEvaluator and added logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve clarity
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration reflects changes
added a maximum of 1 to the width and height calculations in AndroidGraphics . java to prevent potential off - by - one errors when the stroke
replaced HashMap with LinkedHashMap in multiple classes to maintain the insertion order of options for better retrieval
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a pool
( chore ) camel - core : migrate camel - main to junit 5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement and validate WebSocket client functionality to ensure proper
[ ds - 3640 ] remove unused test case for dsm . getservicebyname
refactor authentication equality check in AbstractCasWebflowEventResolver to use a new method ` areAuthenticationsEssentiallyEqual ` to
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
refactor method calls to use a local variable callNodeType instead of accessing its type directly to improve code readability and maintainability by reducing
added a new annotation ` @ Insecure ` and modified the ` MessageBuffer ` class to include these methods to enhance security by restricting access to
added new configuration variables for various Hive settings in HiveConf . java to enhance configuration flexibility for Hive operations
initialize ` scopes ` and ` policies ` with ` HashSet ` and add null check in ` DefaultResourceSetService ` to ensure ` scopes `
changed the ` decrefOnClose ` variable to ` final ` and updated the constructor of ` MultiReader ` to include ` readerFinishedListeners
updated multiple socket implementations in SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 classes to
danielwagnerhall : remove test that be break in 2.49
updated the ` getFirstTypeArgument ` method to use ` final class ` instead of ` $ Types . getFirstTypeArgument ` across multiple classes
changed the return type of keySet ( ) and values ( ) from Set < Integer > to KeySet and Collection < Integer > to improve type
added duration parameter to the FlipTransition constructor and updated related methods to improve clarity and functionality of the FlipTransition class
removed conditional logging for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary trace logging
updated major and minor version numbers in ForgeVersion . java to reflect new release releases and improvements
replaced System . err . println statements with LowLevelLogUtil . log for unsupported multi - release JARs to improve logging consistency and cl
update javaparser to support jdk 16 +
updated conditionals in ExpansionViewHelper to set padding based on the index to improve UI responsiveness by adjusting padding based on the
do n ' t invoke replica anti - entropy if there be no namespace for v3.9
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information associated with seed URLs
added a null check before creating a cloned pattern in PatternBuilder . java to avoid potential NullPointerException when declaration is null
hbase - 25836 addendum fix typo in testcoprocessorwhitelistmasterobserver javadoc
ww - 4352 add package name to actionconfig . getpackagename ( ) if available
updated assertions in ` IterableTest . java ` to use ` Arrays . < Object > ` for null handling to ensure type safety and correctness
added default Stream and Spliterator methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase classes to enhance flexibility and usability
clone the notifInfo object before returning it to prevent unintended modifications to the returned list
ggb - 2171 fix for key not find in command set .
refactor AEADBlockCipher class implementation to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for resource ID in PackageResourceTable . java and changed the default resource mode from best to legacy in Robolectric
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving the table buffer in ` TrueTypeFont . java ` to
updated SignPlugin to accept a list of HttpMessageReader < ? > instead of a static list for message readers to enhance flexibility in handling
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added validation check for MavenDeployer in StandardMavenAuthenticationProvider to ensure only MavenDeployer artifacts are processed to enhance security by preventing
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and error handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and improve error handling during connection failures
added imports and refactored HiveFunctionRegistry to utilize Java Streams for string manipulation to improve code readability and performance by leveraging
http : / / issues . apache . org / jira / browse / amq - 4898 - fix mbean name in discoverynetwork
updated the ` getBuildTargetForAlias ` method to handle both an alias and a possibly flavored alias to improve the method ' s functionality to
camel - 16400 : fix odata2 consumer to return 0 for empty feed
added support for a map of equivalent version strings in MetaStoreSchemaInfo . java to ensure compatibility with both 0.13 . 1 and 0
server : fix a bug where expunge vm do n ' t work when the vm be expunge .
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in new code
updated ONDashClockExtension and AlarmReceiver to use a new method for generating alternative titles to improve code clarity and maintainability by
updated column types in GoogleAuthUserConfigTable from " varchar " to " nvarchar / varchar " and modified assertions in TotpEndpoint
replaced ` commit ( ) ` with ` apply ( ) ` across multiple classes to improve performance and consistency in preference handling
added a new ` TestIdleListener ( ) ` class and modified the session initialization in ` AsyncTimeoutTest . java ` to utilize it
bqio : make testbigquerytable a unique identifier for easy debugging
set the background resource of the icon and reset its state in HotseatPredictionController and BubbleTextView to improve visual consistency and
mondrian : rename getflushafterquery to flushafterquery to avoid confusion .
add abstracttestnativesystemqueries and testprestonativeworker to test
[ api ] fix limeexplanation . getactivefeatures ( ) to return all output
added a new argument list to the AppleSimulatorController and InstallCommand classes to allow users to specify additional arguments during the installation process
refactor code to use GenericStyledArea for retrieving current paragraph and line start and end positions to improve code readability and prevent potential null
added a condition to check if the manager ' s lifecycle state is available in ContainerBase and StandardContext classes to ensure that the manager ' s
added clipping to outline for the QSB background in QsbWidgetHostView to improve visual appearance by removing unnecessary background elements
added flag processing and logging functionality in SQLManager , modified string splitting in PlotArea , and modified string formatting in BlockTypeListFlag to improve
replaced specific OpenGL imports with a wildcard import and added conditional depth function based on the floating text ' s ccluded state to streamline
rename target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ libffi _ libffi _ lib
updated JdbcAggregationRepository to use a configurable propagation behavior instead of a hardcoded value to improve flexibility and control over transaction propagation behavior
update base layer regularization to support l1 and l2 regularization
added error handling for reading and writing in AbstractChecker . java to improve robustness by catching potential exceptions during readWrite operations
changed the access modifier of the colorStack array from static to instance variable to allow external access to the colorStack variable
changed the default value of ` getMappedStatement ` and ` hasStatement ` methods from ` false ` to ` true ` to enable the functionality
convert tradable identifier to lowercase in BTCEDepth retrieval to ensure consistent retrieval of depth information regardless of case sensitivity
updated the MQTT publish value assertions to reflect changes in the channel state to ensure tests reflect the correct versioning of the MQTT
remove dependency on versionedhash from enginepayloadparameter ( # 5338 )
reset the trigger price when the price field be reset
do n ' t redirect to home page if there be an error
removed debug print statements in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 10627 addendum fix npe in hstore . debuglog ( )
no effective change - add test for bean state change
added a boolean field ` _ alwaysSaveUri ` and its getter method in ` FormAuthenticator . java ` to control whether to always save URIs
added methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to enable layer type and
replaced specific AWT imports with a wildcard import and modified the firePopupMenuWillBecomeVisible method to improve code readability and
removed redundant null check for ` insert ` in ` StressProfile . java ` to streamline code by eliminating redundancy
replaced calls to ` JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple classes to standard
added null checks for requests in MockServerEventLog and enhanced logging for request handling in HttpForwardObjectCallbackActionHandler to improve robustness and
added a warning log statement for loading properties file in DefaultEnvironment . java to improve debugging by providing clearer error messages when properties file cannot be
refactor session data handling in ClientMain . java to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a check for multicast support and network status in SetOutgoingIf . java to ensure that outgoing connections are only allowed on valid NICs
updated SQLCommand initialization to limit the length of the command to ensure that sqlCommand does not exceed the specified length limit
replaced multiple calls to ` setLatestConsumeTime ` with ` setLatestConsumeTimeForEnergy ` in ` UnDelegateResourceActuator
added a method to set and retrieve an InvalidSessionStrategy in SessionManagementConfigurer to improve session management by allowing customization of invalid session strategies
protoc - serializer : improve error message when token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify key existence in map assertions to ensure correctness of map assertions
updated JdbcProxyGenerator to use a new DelegatorGenerator and added JDBC4TemporaryPreparedStatementMethods interface to enhance proxy functionality by integrating reflection -
added a method to ensure WebSocket components and modified the context handling in the ServerWebSocketContainer class to ensure proper initialization and avoid potential null pointer exceptions
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to utilize a more suitable data structure for
pdfbox - 4892 : fix npe in getcurrentpoint , a suggest by valerybokov
added a static final array ` EMPTY ` to the ` MethodHook ` class and refactored the ` hooks ` array initialization to improve code
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` constructor and modified return logic to handle access denial to improve flex
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enable the listener to invoke the ` afterJob `
added a condition to check if a file is writable and canExecute before proceeding to ensure that operations are performed only when the file is writable
feat ( freezev2 ) : add hastimeseriesquerylanguage ( ) method to time seriesquery ( # 269 )
refactoring : use sampleevent instead of sampleresult in saveservice
added new constants for battery level , annotation , time with offset , and profile name in BundleConstants . java and updated CustomUrlManager .
change the parameter type of applyRule from Hashtable to Map in SearchExpression . java to improve flexibility in handling different data types
rename ` ` move ' ' to ` ` move ' ' for good readability
updated texture and container configurations in ProjectiveTextureTest . java and JoglGraphics . java to enhance texture filtering capabilities and ensure correct dimensions
modified the method signature of ` setResourceToDelegate ` to return a ` File ` object instead of void to ensure the output file is writable and
camel - 16400 : fixed issue with intercept from property component . thanks to benjamin graham for the patch .
updated the condition to check if the current time exceeds the last attempt time in ActionScheduler . java to ensure that attempts are only attempted when they
updated dbg _ zip assignment to use a temporary directory and added null check for debug _ log to ensure proper directory structure and avoid potential NullPointerExceptions
fix renderingdebugconfig . hud _ hidden event in notificationoverlay .
reset pipe gate before mark a block need update . close # 1181
added locale management for TestSupplementary test execution to ensure consistent locale usage during test execution
updated team ID from " team # " to " team # " in Team . java to adjust the color range for better visual distinction
replaced HashSet with ArrayList for activeMatchedStates and updated state removal logic to improve performance and enable more efficient iteration over matched states
simplified the condition for checking expected exceptions in SoftAsserts . java to improve code readability and maintainability
updated error message formatting in StorageResources . java and added logging in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance
refactor call tree printing code into a separate method ` toCsvFile ` to improve code readability and reduce redundancy
added null checks for ` note ` and ` noteTmp ` in ` DetailFragment . java ` and ` WidgetProvider . java ` to ensure
added logic to calculate the fractional loaded value based on the number of peak tasks and adjusted the return logic accordingly to improve accuracy of asset loading and
danielwagnerhall : set the default firefox driver to enable native event on window
added new metadata names for Nutch score and fetch interval in the CrawlDatum class to enhance functionality by allowing customizable score and fetch
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ` Scim
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and a corresponding test in ` TestCoreContainer ` to
updated size calculations in multiple classes to use boolean parameters for better precision to improve accuracy of memory usage tracking and provide clearer output for segment sizes
updated assertions in VersioningTest . java to assertNull for version1 _ 2 to ensure proper handling of null values in JSON deserialization
updated SQL query to include type not null checks for domain columns to ensure accurate retrieval of non - null values for domain columns in PostgreSQL
[ java ] check for new leadership term event before append new leadership term event .
removed the method ` buildMediaType ` from ` WebClientPlugin ` to retrieve the content type from the request headers to simplify the code by elim
replaced method names from " fill " to " fillSlice " in multiple classes to improve clarity and consistency in method naming
added compaction logic and a new test for both IOW and major table compaction in AcidUtils . java and AcidUtils . java to
set default value for storage scheme and qualifierEncodingScheme in PTableImpl . java to ensure proper handling of null values to avoid potential NullPointerExceptions
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customized and cutomized
replaced the use of " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability
replaced AesGcmSivKeyManager . register ( ) with AesGcmSivProtoSerialization . register ( ) to
fix miss wooden _ slab in ore dictionary . close # 1193
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc and overview ( rc1 )
hhh - 14663 fix test failure due to different dialect name
updated the positioning of the sprite batch drawing in HelloWorld . java to correct the positioning of the sprite batch for better rendering accuracy
refactor permission checks in PlayerFunctions and improve region formatting in PlotId and WorldGuardListener classes to enhance code readability and maintain consistency in
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version should no longer be used in favor of an alternative
updated print statement format in SSLSocketImpl . java to improve readability to enhance clarity of log output during socket closure
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL queries with signed integers can be
refactor dependency type handling in CoNLLUOutputter to use an enum instead of a string to improve code readability and maintainability
refactor methods in NoSuchBuildTargetException and ParseContext to streamline target description generation to improve code readability and maintainability by reducing duplication
replaced the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
updated the array size for configBlocks from block . blocksList . length to 256 to optimize memory usage and improve performance
updated logging messages and modified version checks in BukkitMain . java for PlotSquared and CraftBukkit support to improve clarity of
added support for escaping Postgres question mark operators in SQL statements to ensure proper SQL generation for PostgreSQL queries
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` B
pdfbox - 4892 : fix typo , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4898 - fix nhcmqttconnection
updated the way ChangeSet is retrieved by using the root database change log to ensure a valid ChangeSet is retrieved even when the root change log
updated method calls in StaticMethodInterceptor and modified response body handling in RocketMQGlobalPluginHandler to improve code clarity and ensure correct response
added database drop functionality in TestHiveMetaStorePartitionSpecs . java and improved logging in TestObjectStore . java to enhance database management
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to
deleted the SSEFluxWebConfig . java file to the configuration class is no longer needed in the project
updated JsonBuildHelper and IDocBuildTemplate to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName
updated YAML _ READER variable name and added a new GET endpoint for listing YAML and YAML in YamlResource . java to improve code clarity
removed public access modifier from equals and hashCode methods in Marker . java to restrict access to these methods for better encapsulation
refactor thread factory to use lambda expressions and introduce awaitTermination method to improve code readability and reduce redundancy in thread creation
added unit tests for ` MongoTemplate ` and created a new ` PersonWithAList ` class to validate the functionality of ` PersonWithA
do n ' t resize applet panel if there be no view
updated toolbar visibility logic in DrawerActivity to use a delayed handler to improve user experience by ensuring the toolbar is fully visible after a delay
refactored the handling of overlapped pages in SeriesReader . java to improve code readability and maintainability by reducing duplication
server : do n ' t try to save password if vm be not run
initialize ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to false in ` Response . java ` to ensure
added a check to skip assignment side effects in GroupDialog to improve performance by avoiding unnecessary processing
refactor JSON handling in JSONObjectConvertor . java to improve code readability and maintainability
corrected a typo in the condition for icon dimensions in FileUploadApiController . java to ensure proper validation of icon dimensions based on maximum
refactor fetchPublicKey method to use JcaPEMWriter and improve readability to enhance code clarity and ensure proper handling of empty public keys
added methods to check file content types based on the operating system and operating system to enhance mime type validation and improve error handling for non - Windows
update netty connection to use jzlib compression instead of system . out
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored the ` Class ` and ` MethodHandles `
removed the ` doConnect ` method from ` ChannelProvider ` and ` ProxyChannelProvider ` to streamline the connection method by eliminating
added a test case for handling an empty final column in TestCsvHeader . java to ensure proper handling of empty final columns in CSV processing
added compassGravity and compassMargins to NearbyMapFragment to improve layout alignment and spacing of map elements
added unit tests for distance calculations in GeoPath class to ensure accuracy of distance calculations between legacy and legacy GeoPath formulas
added exception handling for unsupported Parquet filter types in LeafFilterFactory and ParquetFilterPredicateConverter to improve error handling and provide clearer debugging
added a condition to set the language for video streams in LibMediaInfoParser . java to ensure proper language handling for video tracks when available
added a warning log for schemas greater than the old version in MicroserviceRegisterTask . java to prevent compatibility problems due to schemas in the old
refactor code to use ` addAll ( array , offset , length ) ` instead of ` System . arraycopy ( array , ... ) ` to
reformatted the closing of the connection in DataSourceProxy . java to improve code readability and maintainability
added null checks and initialization methods for client registrations in InMemoryClientRegistrationRepository , InMemoryReactiveClientRegistrationRepository , and InMemoryRe
added a method to reset the UI state in SchemaUpgradeHelper . java to ensure the UI state is correctly reset during schema upgrades
added logic to handle pending exceptions in JUnitReporter and corresponding test cases to improve test reporting accuracy by distinguishing between strict and non - strict
add playerselector . java to allow dot in entity selector . close # 1188
added Closeable interface to the Selector class to ensure proper resource management and prevent memory leaks
replaced hardcoded parallelism , runs , and iterations with a custom connection pool factory in MaxConcurrentStreamsTest . java to improve connection management and
added multiple stringType ( ) methods to CoreOptions . java to enhance functionality for handling string types in the application
updated HqlQueryRenderer to handle both character and parameter contexts in token addition to improve query parsing accuracy and compatibility with EclipseLink ' s
updated status checks in HttpGenerator , HttpChannel , HttpChannelState , and StatisticsHandler to use HttpStatus . NOT _ SET _ 000 instead of
pdfbox - 4892 : use localdestoutputprofile instead of destoutputprofile , a suggest by valerybokov
fix test that fail on slow ci server
updated ParquetFormatPlugin and ParquetGroupScan to improve metadata handling and organization to enhance code clarity and maintainability by centralizing metadata
changed the success state of Jsr199Javac from false to true and modified the compilation task handling to ensure successful compilation checks and improve
added a base model listener to DefaultSortedTableModel to notify listeners when a table changes to enhance the responsiveness of the DefaultSortedTable
updated the threshold condition from 49152 to 65535 in ServerConfig . java to allow for a broader range of input values in the server configuration
added support for document provider authority notifications in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running KitKat and improve user experience
removed the startLogging method call from MainApp . java to streamline logging functionality for improved performance
added error handling for wrapped RequestRejectedException in FilterChainProxy to ensure proper handling of wrapped RequestRejectedException to improve robustness of the filter
updated the copying logic in StringBuilder to use ' this . length ' instead of ' length ' to improve clarity and maintainability of the code
added a check for empty filterList in Filter . java and implemented a corresponding test in TestFilters . java to ensure that an IllegalArgumentException is thrown
added a new file ` TbStopWatch . java ` that extends ` StopWatch ` and provides methods to retrieve total and last task time times
removed unnecessary whitespace in PListStore . java to improve code readability and maintain consistency
added @ Deprecated annotation to multiple Continuation classes to indicate that these classes are outdated and should not be used in new development
[ hotfix ] [ zeppelin - 4640 ] fix classloading issue in remoteinterpreterserver
fix an npe in commandsourcestack . isplaying ( ) ( # 6640 )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
corrected the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the timerIdForSlot method to improve code
# 1343 - add simplename to query plan and element descriptor ( # 1344 )
updated response URLs from " wro / all . js " to " static / all . js " and added a new WroSass
added a new test method ` showLatestTimeseriesTest ( ) ` to validate the functionality of the ` showLatestTimeseries ` database query
renamed the configuration parameter from " appContextLocation " to " contextConfigLocation " across multiple files to standardize the configuration parameter name for
updated exception handling in OCSPChecker to use a more explicit type check for CertPathValidatorException to improve code clarity and ensure proper exception
benchmarker : add option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815 . java ` with a test class ` Test _ 815 ` for testing slice size functionality to
added a shapeless recipe for pipe water proof and slime ball in BuildCraftTransport . java to enhance the game ' s c
fix index out of bound exception when iterate non - zero element
added metadata handling for Shulker entities in BukkitMain , EntitySpawnListener , and EntitySpawnListener classes to ensure proper
added getDebugLogger method to DIHWriter and SolrWriter classes to provide access to the debug logger for debugging purposes
http : / / issues . apache . org / activemq / browse / amq - 2695 - prevent name truncation in multi
modified the UpToTagChangeSetFilter initialization and added a method to check if a specific tag is seen to improve error handling and provide feedback when
replaced instances of ` LinkedList ` with ` ArrayList ` in multiple files to improve performance and reduce dependencies on external libraries
updated the BrokerRoutingManager class to improve routing logic to enhance performance and reliability of routing operations
updated volumePaint and upPaint values from gray to GRAY in CandlestickRenderer . java to improve visual distinction of
refactor layout parameter handling in InsettableFrameLayout to use a more descriptive variable name to improve code readability and maintainability by
added a new method ` duration ( ) ` to ` BuildTargetDurationListener ` and updated corresponding test cases in ` BuildTargetDurationListenerTest
replaced ` @ Profile ( " db " ) ` with ` assumeTrue ( ` ` db profile to be enabled ' ' ) `
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when user is null
camel - 16400 : camel - test - add option to replace from endpoint with advicewith
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve thread safety and performance in a concurrent environment
server : fix listpublicipaddresses api to return all public ip address by source network id
added methods to manage battery optimization status in ShadowPowerManager to enable testing of battery optimization behavior in the power manager
updated the way the Jetty version is retrieved by using __ buildProperties to ensure consistent retrieval of the Jetty version from the build properties
added unit tests for number of invocations in order verification in NumberOfInvocationsInOrderVerifierTest . java to ensure correct handling of verification modes
modify debug force evaluation logic in TRegexExecNode . java to improve clarity and correctness of evaluation logic
added a " - foreground " argument to the startProfile method call in NewProfileExtensionConnection . java to ensure the profile starts in the foreground
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related logic
updated logging method to use getFile ( ) . getName ( ) instead of getFile ( ) and added null checks for actionsList in EditorTextAction
added detailed error messages for skipped entries in ClassFileReader . java and simplified warning message in JdepsTask . java to improve clarity of skipped
added LinkStorage and updated storage handling in Fetcher and FetcherMain classes to enhance document storage capabilities and improve code organization
updated the populateBubble method to include a nullable parameter for existing BubbleBarBubble to improve performance by avoiding unnecessary object creation and
[ hotfix ] [ runtime ] throw illegalargumentexception when route have no start / stop / resume time specify
refactor method signatures in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsServiceBeanPostProcessor to simplify
[ java ] use feedbackdelaygenerator for loss handler .
replaced GsonBuilder with direct Gson creation and added properties for client details to improve code readability and facilitate JSON serialization for client
added a check to ensure the order ' s field amount is greater than zero before setting the average price to avoid potential division by zero errors
removed the private method ` rawExecutionReports ( ) ` from the ` BinanceStreamingMarketDataService ` class to streamline the code
added a ` fail ( Exception e ) ` method to ` LdapTimeoutTest ` and modified error handling in ` ReadServerTimeoutTest ` to
fix npe if the installed / installed folder do not exist
updated password handling logic in AmbariServerConfigurationHandler . java and modified assertions in RootServiceComponentConfigurationResourceProviderTest . java to ensure
added a check to skip parsing if a segment is already parsed in ParseSegment . java to improve efficiency by avoiding redundant segment parsing
[ flink - 20537 ] [ yarn ] set the time window for application attempt failure interval when restart the am
handle classnotfoundexception in geoserverinitstartuplistener when driver be not included
hbase - 25835 add default readtype for snapshot - based inputformat ( addendum )
added fixed height and width options to LoginInstanceRequest to enhance instance login configuration options
added a cornerRadius parameter to several update methods in ActivityControlHelper , ClipAnimationHelper , and LauncherLayoutListener classes to enhance visual
added new commands " DESC ( RIBE ) ? " and " SHOW ( RIBE ) ? " to the COMMANDS _
refactor connection handling in TxnHandler to retry on a connection pool to work around a BONECP bug to improve reliability of database connections
queuecontainer . txnensurereserve rename to txncheckreserve and add txnpollreserve and txnprepareoperation .
added a new field ` strings ` with a value of ` char [ ] [ ] ` to the ` FirstOfStringsMatcher ` class to
updated SQL statement strings in CostBasedDecisionIT and DeleteCompiler to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS "
refactor exception handling in BaseServiceException to include a retryable check for SocketException to improve error handling by distinguishing between SocketException and IOException
added support for rapid installation types in AdbHelper , AndroidDevice , and RealAndroidDeviceTest classes to enhance functionality by allowing users to
updated the pattern for generating a seed in SortTest . java to allow additional characters in the seed string to enhance flexibility in random number generation
refactor MultimapSubject to use a new factory methods for iterable values and improve string representation to enhance clarity and maintainability of the code
adjusted the calculation of the display size based on device orientation to simplify the logic for determining the top position of the launcher object
added support for the ` transmux ` boolean parameter in the ` Transformer ` and ` TransformerInternal ` classes to enable conditional transcoding based
added localization support for string arrays in Picker . java to improve user experience by ensuring localized strings are displayed
camel - 2343 fixed the issue of camel - cxfrs and camel - cxf
hhh - 14613 add support for hibernate ' s lock acquisition and pessimistic locking
updated SQL query ID handling in TestJdbcDriver2 . java and modified imports in HiveStatement . java to improve test reliability and clarity
[ beam - 8470 ] add usesunboundedpcollections category to pardotest for unbounded pcollection
updated the formatting of the filename text in GpsSimpleViewFragment . java to improve readability and consistency of the displayed filename
[ java ] remove unused leadershiptermid parameter from joinlogasfollower method .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and its tests to improve clarity
added null check for the tree before retrieving marker IDs and updated marker handling logic to improve code robustness and prevent potential NullPointerExceptions
patch from josh from bug # 49532 - use double instead of float for font size
refactor email handling in AddressBookDoCoMoResultParser to accept an array of emails instead of a single email string to improve flexibility
updated the handling of exclusions in RawMavenResolver to use a set instead of a stream - based approach to improve efficiency by avoiding unnecessary
added handling for quoted and base currency pairs in DSXAdapters and DSXBaseService to improve currency pair management and provide clearer error handling
updated test cases in TestBlockingIO , TestParsingTable , and TestValidatingIO classes to improve test coverage and ensure reliability of I /
[ drools - 90 ] avoid incremental build failure when kiemodule pom be invalid
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before invoking ` copy . define
rename JacksonDataFormat and JacksonXMLDataFormat classes to improve clarity and consistency in naming conventions
truffle / field / hostfielddesc : use unreflectgetter / unreflectsetter instead of findgetter / unreflectsetter
added a method parameter for the " completedStage " annotation in DefaultNullnessAnnotations . java to ensure proper null handling for completion stages in the
increased the freeze checkpoint value from 9000 to 10000 in PlaybackController . java to ensure that the freeze checkpoint reflects the correct
removed the implementation of the ` run ` method in ` PowerMockRunner ` from ` AbstractCommonPowerMockRunner ` and ` PowerMockRunner
pdfbox - 4892 : use realtype ( ) instead of typecode for unmarshalling
added conditional checks for ` J . MethodInvocation ` and ` JRightPadded < Expression > ` in ` TabsAndIndentsVisitor
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter . java to align with the current testing framework standards
modified the output format of the ` write ` method in ` HtmlProcessInformationsReport . java ` to include a ` wrappedText ` class
updated execution context handling in JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to improve clarity and maintainability of execution
added a conditional check to prevent adding a new media folder to the root folder if the configuration allows hiding of a new media folder
updated widget management logic in SplitPane to handle null actors to improve error handling and prevent unintended behavior when setting widgets
added handling for JavaType . Parameterized and its type parameters in RemoveUnusedImports . java to ensure only valid JavaTypes are stored in the types
fix npe in uniquemodlistbuilder when modinfo or modinfos be empty
changed the logger variable from instance to static to improve performance by avoiding unnecessary instantiation of the logger instance
updated the timeseries root path from " RLE . 81 " to " RLE . 81 + 12 " in PhysicalPlanTest . java to
added a method ` isValue ` to check if a value is present in ` AttrData ` and updated error handling in ` Converter ` to improve
added handling for character international PCM in CPlatformResponder . java and introduced methods in LWCToolkit . java to improve character
[ java ] add aeron _ publication _ connection _ timeout env var to ctestmediadriver .
added a condition to check for specific URI prefixes in GTVGFilter . java to prevent processing of specific CSS , images , and favicon requests
added assertions to verify APK installation success in TestUtil . java to ensure that the installation process correctly verifies the device ' s rooted state
no effective change - remove oracle sql limiter ( no effective change )
updated assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect the correct number of enabled secure transport protocols to ensure tests reflect the correct
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java from e3506ff7c11f638458d08
added a boolean flag ` mIsDismissHapticRunning ` to manage haptic state to improve responsiveness by preventing
fix the explosion explosion explosion explosion cause .
added ` setHasStableIds ( true ) ` to ` SymbolInputAdapter ` and implemented ` getItemId ( int position ) ` method to
updated Bitfinex API path from " ? limit _ bids " to " QueryParam " and changed limit values from 10 to 50 in BitfinexPolling
camel - 16400 : camel - stax - fix test failure on window
added a ` toString ( ) ` method to ` KubernetesLeaderElectionDriver ` and corresponding tests in ` ZooKeeperLeaderElectionDriverTest ` to provide
refactor SqlSessionFactoryBean to improve session management to enhance code maintainability and readability
[ 3.0 ] fix triinvoker . getpureargument ( ) for generic call ( # 10385 )
replaced error handling in PolygonRegionLoader to throw a GdxRuntimeException instead of a generic error to improve error management by providing a more appropriate
added a method ` isStarted ( ) ` to check if a timer is started in ` Deadline ` and updated ` RawStoreProxy ` to
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages related to closed channels
added a null check for generation before setting the text in ItemListActivity to avoid potential null pointer exceptions when displaying genres
[ hotfix ] [ checkpointing ] fix master hook reset in checkpointcoordinator
add unit test to verify that the collection of mapped container be not empty .
updated the logic for calculating the oldest unpinned MemTableInfo in WALNode . java to handle null values to improve robustness by prevent
added a test for retrying the same host on callback failure in HttpTest . java to ensure proper handling of asynchronous operations on the same host
fix checkstyle issue in package - info . java
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server query escaping to ensure correct handling of special characters in post title and title
( chore ) camel - jooby : fix npe in joobybeanrepository
replaced the synchronized block with a utility method for waiting in JavaFXSEPort . java to improve code readability and reduce boilerplate
changed package declarations from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
refactor ` finishViewSetup ` and ` createCropperBehaviour ` methods in ` CropperUtils . java ` to improve type
removed app name parameter from configuration methods in InputRC and LineReader classes to simplify method signatures and improve code readability
[ gr - 16913 ] check that install / uninstall command do n ' t require dependency .
danielwagnerhall : replace setheadless ( true ) with addarguments ( ) in chrome - related test
replace value assignment with interning of the value to optimize memory usage by avoiding unnecessary object creation
added support for " MOVE " status in the connection status check to ensure compatibility with additional database operations
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME in FixedDateFormat . java to
replaced the import of ` org . apache . curator . shaded . com ` with ` com . google . common . Lists `
[ hotfix ] [ network ] remove unnecessary check when start spill
updated permission checks for untrusted visit flags in Plot . java to ensure only authorized players can visit untrusted plots
do n ' t try to connect to a jabber server if it ' s already registered
updated condition in BasicURLNormalizer to include additional braces to enhance URL normalization to handle additional braces correctly
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to restrict access to these methods for better encapsulation
added a conditional check to compare lock rates in EncodingConfiguration . java to ensure consistent comparison of lock rates between different encoding configurations
added a method to retrieve the project path and updated related classes to return an ImmutableSet of generated project paths to enhance functionality by allowing retrieval of generated
updated the logic for setting zero digit and improved calendar ID handling in HostLocaleProviderImpl . java to enhance code clarity and prevent potential
added a new file MSwingUtilities . java that contains utility methods for image scaling and exception handling to provide a centralized way to handle
camel - 16400 : mailproducer should use async instead of default . thanks to michael klink for the patch
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties at runtime for better configuration
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement scripting functionality in the SchemaCrawler tool to enhance the integration of scripting with
added a condition to check if the input state is __ NONE in the MimeTypes . FORM _ ENCODED request to ensure correct handling of
modified BitmapFont , Group , FlickScrollPane , SelectBox , and SelectBox classes to improve descent calculation and add a method to check
replaced direct usage of ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a new test in ` Deployment
modified the ` stackToString ` method to accept a ` forceIgnore ` parameter and modified the logic for generating the ` wildKey ` string to
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test reliability by allowing more time for thread sleep
updated import statements in LoincHandler . java to use wildcard imports and added a check for non - blank short names to simplify import statements
update jolly day holiday to use the class loader instead of a hardcoded classpath
added a new utility class ` FieldUtils ` for reflection - related field access and setter methods to improve code organization and facilitate easier
removed redundant assertion in DeferredAttr . java and added a new DoubleStaticImport . java file with a test method in DoubleStaticImport . java
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to improve UI consistency
do n ' t sync xabber account if there be an error load from net
added a new method ` setvar ` to handle command - line arguments for setting variables to improve usability and provide a convenient way to set
fix animal tame not be send to catentity . close # 1560
improve error message for unsigned range range frame
pdfbox - 4892 : add test to verify that we do n ' t have the help font
added a call to set the application mode in PageListController . java to ensure the application uses the correct mode settings
added methods to manage Docker file paths and build arguments in ImageFromDockerfile . java and created a new test class DockerfileBuildTest .
added a null check before creating an instance of ThreadInfo to prevent potential NullPointerExceptions when accessing thread information
updated condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to improve precision in floating - point
[ hotfix ] [ checkpointing ] add debug log for single checkpointbarrierhandler
added multiple table types to the Schema class to support additional data structures in the application
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated FuzzyTermEnum to include it to enhance the functionality of Fuzzy
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
[ logback - 1342 ] add immediateflush property to outputstreamappender so that it be set within outputstreamappender
updated AutoConfigureAfter annotation to include additional auto - configuration classes to ensure compatibility with additional auto - configuration classes in the application
modified the null check in JLayer . java and added a new test class bug6875716 . java to ensure proper handling of null
replaced imports from ` shaded ` to ` com . google . common . base ` in multiple Java files to eliminate dependency on shaded
refactored block mapping logic in BciBlockMapping . java and added methods to retrieve return and unwind blocks in GraphBuilderPhase .
added a legacyRenderer property and modified conditional checks in Label . java to allow dynamic rendering of icons based on the legacyRenderer state
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added a null check for mObserver in the NavigationModeFeatureFlag class to prevent potential NullPointerException when mObserver is null
[ jdk8033590 ] fix a typo in comparator . thencomparing ( )
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated anomaly result setting to set the end time based on the current bucket millisecond to ensure the anomaly results accurately reflect the current bucket
added error handling for NumberFormatException in the VisualScoreTagTest class to ensure robust parsing of input values to avoid runtime exceptions
added a classloader parameter to the enhancer configuration in MockFactory . java to ensure proper class loading for mocking functionality
added a new ` OriginalFormat ` class to handle enum formatting in the ` ConverterWithEnumFormat ` class to improve the handling of enum values
replaced hardcoded string " yyyy / MM / " with a constant named PATTERN _ YYYY _ MM to improve maintainability and readability of
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and reduce memory usage
camel - 15836 - camel - aws2 - * : improve test coverage for the auto - discover client
server : return next available mac address if mac address can not be generate for the network
modified the condition to check for " Authorization " in ProxyServlet . java to ensure proper handling of authorization headers in the ProxyServlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to ensure proper execution of commands in the context of the
added getDetails ( ) method to multiple authentication classes and updated getDetails ( ) method in UsernamePasswordAuthenticationToken to provide detailed authentication details for
updated the condition for generating random use points in SolrTestCaseJ4 . java to improve test variability by adjusting randomness based on
replace ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to standardize the method name for better clarity and
updated TimeFormat methods to use Locale . US for locale - specific formatting to ensure consistent time formatting across different locales
refactor import statements and add handling for named argument processing in GroovyParserVisitor . java to improve code readability and ensure correct ordering of named
added bounds checking for bottom , left , and right inset dimensions in the Border class to ensure that bottom and left inset dimensions remain within
refactor GestureState initialization and state handling in TouchInteractionService . java to improve code readability and maintainability by centralizing gesture state
replaced ` DateTime ` with ` Instant ` and ` DateTimeFormatter ` in ` LlapServiceDriver . java ` to improve compatibility with modern
updated openblas . java and openblas _ nolapack . java files to improve code organization and maintainability
do n ' t try to close the piece storage in case of exception
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
updated timeout values in AbstractDistribZkTestBase and AbstractFullDistribZkTestBase from 15000ms to 40000ms
added a new file SearchResults . java to handle search results to provide a structured way to retrieve search results from multiple documents
bugfix # 25332 , do n ' t create threadcpurefresher if threadcpu be null
do n ' t attempt to initialize the frame body if it ' s null
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the App
added a new API endpoint to retrieve tenant pools for the current instance to enhance functionality by providing access to instance pool information
lucene - 1748 : fix early termination on docid and prefix sort
updated the method in InlineBytecodeGenerator to check if the interface is a string and added new test cases for mock interfaces to ensure proper handling
added debug logging statements to CxxCompileStep and CxxPreprocessStep for compiling , preprocessing , and preprocessing processes to improve
add stringutil . removecharacter ( string , char to remove ) .
[ 3.0 ] fix metadata service protocol ( # 10303 )
[ drools - 7 ] add datatransformertest interface to facilitate the compilation and transformation of the process expression
changed the type of ` objval ` and ` num ` arrays from ` Object [ ] ` to ` Number [ ] [ ] ` to
remove the ` interesting ` flag and simplify the conditional check in ` FormatStringChecker . java ` to improve code readability and maintainability
updated the initialization of SolrCore in ElectionContext . java to ensure proper initialization of the core variable
refactor ITestDbTxnManager class for improved transaction management to enhance code readability and maintainability
refactor database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a method to test the MapModel in CodeFirstPojoClient and CodeFirstPojoIntf to enhance testing capabilities for the Map
pdfbox - 4892 : simplify code , a suggest by valerybokov
refactor selection logic in ScaleDialog to simplify item listener handling to improve code readability and maintainability by reducing duplication
do n ' t update player step status if it ' s null .
pdfbox - 4892 : do n ' t throw ioexception when there be no appearance stream
replace SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order for keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and modified
updated preload values in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to
added a check for agentSupport before setting all constructors to public and created a new test class for mocking static methods with private constructors to ensure
pdfbox - 4892 : avoid duplicate object , a suggest by valerybokov
add a method to define the AWT WM _ CLASS string in MainFrame . java to allow customization of the application title based on
modify depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth value is set based on the color model ' s
added error handling for unsuccessful responses in OkHttpDataSource . java to improve error reporting and provide clearer context for unsuccessful responses
added a new static method ` exit ` to ` TopLogging ` and updated its usage in ` TopThreadGroup ` to improve error handling by
updated the calculation of the start index in NativeRegExp . java to ensure correct starting index based on the regexp ' s global state
ignore optaplanner - 468 test until upgrade to optaplanner 6.3 . 1
updated the allocation index from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to ensure the correct allocation is used
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to facilitate the removal of entries without feeds in
change return type of appendToLabel method from void to AtomicCounter to allow method chaining in other classes
[ java ] add no - op idle strategy to lowlatencymediadriver to avoid deadlock .
added handling for HTTP status code NOT _ MODIFIED in CacheControlHeadersWriter and related tests to ensure proper header writing for non - modified responses
rename instrumentationpartialevaluationtest . constantvalueinertsplicenode to constantvalueinerttoolevaluationtest . constantvaluein
modified the paintTabArea method to use insets from the tab pane to ensure correct rendering of the tab area by using the appropriate rectangle dimensions
modified the ` getKrakenDepth ` method to accept an additional ` Object ` argument and adjusted related calls accordingly to allow for more flexible
camel - 16400 : added file . getfileseparator ( ) and file . isAbsolute ( ) methods to fileendpoint and remotefileendpoint
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to include ` dependencies ` and ` test
added trace logging for Hive functions , UDFs , and non - deterministic UDFs in HiveFunctionRegistry . java to improve traceability and debugging
increased the loop iteration from 100 to 200 in CloudStateUpdateTest . java to increase test coverage and ensure more comprehensive
catch unknowncolumnfamilyexception instead of unserializablecolumnfamilyexception . patch by jbellis
added a check to skip writing if the output file is still writable to improve error handling by providing clear feedback when the output file is still writable
added package information retrieval and logging in LauncherModel . java to ensure the application is enabled before proceeding with package information retrieval
cloudstack - 6892 : database upgrade should throw exception instead of nullpointerexception
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test case in FaultTolerantChunkO
replaced ` startsWith ( completed ) ` with ` regionMatches ( option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl .
added imports for SourcesFileErrors , SourcesFileResults , and new global data table lists in Recipe . java to enhance data table management by
added Overview import and task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when the
fix : db upgrade to 4.14 . 0 to 4.15 . 0 - upgrade to 4.14 . 0 - db upgrade
removed unnecessary null checks for the connection object in LdapClient . java to simplify connection handling and improve code readability
refactor index handling in SequenceAction . java to use a local variable for clarity to improve code readability and maintainability
patch by jbellis ; review by brandonwilliams for cassandra - 1212
added a check to skip synthetic fields in ReflectUtils . java to ensure that only non - synthetic fields are processed during reflection operations
added LoggerProvider to facilitate logging functionality within the application to enable better logging capabilities for the Ninja application
changed the type of ` ImmutableMap . Builder ` from ` String ` to ` ImmutableMap . Builder < String , Object > ` and updated port handling
added deprecation warning for multiple glue classes that configure the spring context to inform users that they attempt to configure the spring context
added a new method ` deepStart ` to ` Startables ` that accepts a stream of ` Startable ` to facilitate the
removed the reservePrimitiveExtensionArray method from the Shape class and its implementation in ShapeImpl to eliminate outdated code and improve maintainability
implement ilasertargetblock for laser table , close # 1181
simplified the object name validation logic in AbstractJdbcDatabase . java to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the setExpireMessagesPeriod method in MemoryLimitTest . java to ensure that the test does not exceed 2 * pageSize mem
updated conditional checks for handler name and handler name in RequestHandlers . java to improve clarity and correctness of handler name handling
updated logger name handling to replace hyphens with periods in the servlet name to ensure consistent logging behavior for servlet names containing hyphens
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to improve clarity and maintainability of environment variable management
updated audio format checks and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness and provide clearer error messages
added null check for enums before returning an Optional to avoid potential NullPointerExceptions when enums are null
updated error message formatting in CommitLogReader . java to provide more context for unexpected end segments to improve clarity of error reporting for better debugging
added assignment of the policy in WebSocketSession to ensure the session has the correct policy associated with the container scope
updated the logic for determining static fields in the Java2TypeScriptTranslator to ensure correct formatting of variable declarations in the TypeScript translation process
updated the context creation to use a configurable web root instead of a hardcoded directory to enhance flexibility by allowing users to specify a custom web
( chore ) camel - spring - test : migrate to junit 5 ( # 4530 )
[ netbeans - 3390 ] use registry . focusedcomponent ( ) instead of registry . getmostactivecomponent ( )
renamed the method ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in method naming
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and provide a
added multiple calls to ` buffer . reset ( ) ` in ` ReduceRecordProcessor . java ` to ensure the buffer is reset before processing new
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated the condition for decExp in FloatingDecimal . java and added a new ToString . java file to ensure correct validation of decimal exponent values
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java for validation to ensure proper type handling
removed the maxVersion parameter from the getVersions method call to simplify the code by eliminating unnecessary parameters
added a check to ensure the ORIGIN header is only set if it does not already exist to ensure that the ORIGIN header is only set
refactor modal animation handling in RecentsView and TaskView to improve animation behavior based on task overlay state to enhance user experience by ensuring
enhanced error messages in ORCRecordReader for better debugging to provide clearer context for illegal field types and improve code clarity
add sample for tearsofsteel and bipbop 4x3 variant to demo
removed unused imports and simplified string literals in PersistenceProvider . java to improve code clarity and maintainability by eliminating unnecessary complexity
updated log class references in ExecRPCInvoker and WritableRpcEngine classes to use more descriptive log names to improve clarity and consistency in logging
avro - 1343 . java : fix compilation of union and fixed field with - xlint : all
modified websocket session handling in WebSocketEndpoint . java and added a new test for session closure in WebSocketIT . java to ensure proper session management and
updated delays and method names in multiple services for consistency and clarity to improve code readability and maintainability by using more descriptive names
ww - 4351 update xwork dtd to use apache struts instead of opensymphony group
added conditional handling for stream stopping in WebCamInputPanel to ensure proper handling of video streams based on their state
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
update gml example to use geotools instead of eclipse
updated substream method from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - add a method to retrieve the identifiergenerator from a simplevalue
rename ` ` find ' ' action to ` ` download ' '
refactor URI registration logic to include host and port information from data to improve clarity and functionality of URI registration process
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDb hash before retrieving the API result to avoid potential errors when the OSDb hash is blank
added token transfer functionality in RuntimeImpl and MUtil classes to support token transfer in smart contracts
added functionality to handle stepwise file deletion in FtpOperations to ensure the current directory is updated correctly when using stepwise file operations
( chore ) camel - jackson : fix typo in jackson ldap configuration
added validation for join results and modified conditional logic in MapJoinOperator and HybridHashTableContainer to ensure proper handling of join results and improve
refactored HTTPSPDYAsyncConnectionFactory to accept an additional AsyncEndPoint instance and updated related methods to use it to improve encapsulation and
added extra data for tweet IDs in multiple adapters and fragments to ensure that tweets are properly associated with their IDs
added proxy handling and refactored disconnect logic in HttpURLConnection . java to improve proxy disconnection logic and ensure proper handling of proxy authentication
replaced an integer with an AtomicInteger for the number of child requests in TraceContext . java to ensure thread - safe incrementing of the number
removed unused JWT and RESPONSE instances from multiple classes to improve code clarity and maintainability by eliminating redundancy
disabled the test in ValueTypeTests to prevent the test from running during the test suite execution
resolve split - packages : rename resourcefactoryserviceimpl to kieservices
replaced instances of ` PredicateType . IN ` and ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` in multiple
updated exception handling and improved account display logic in FileActivity , Preferences , and ReceiveExternalFilesActivity to enhance error handling and provide clearer
added null check for witnessService before calling validateWitnessPermission to prevent potential NullPointerException when witnessService is not initialized
updated the method of constructing the taggedCol string to use getExprString ( ) instead of getExprString ( ) to ensure the correct expression
added a check to ensure the item ' s Javadoc is not already present before setting the JavaDoc to avoid potential null pointer exceptions when accessing the
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java ` , and added a
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) for smoother transitions to enhance user experience with smoot
[ hotfix ] [ connector / kafka ] return unregistered metric group instead of unsupportedoperationexception
updated the calculation of y in Polygon . java to use a local variable for x to improve code clarity and maintainability by avoiding repeated
updated cache creation to cast to Configuration < Object , Object > to ensure type safety when creating the cache
fix # 2974855 : check for non - empty string before call getresource
refactor ShadowCookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie handling
added a new configuration option to disallow dropping external tables in StorageBasedAuthorization to ensure proper permissions are enforced when dropping external tables in
added a condition to skip WebGL type checks in Stage . java and adjusted the drawing position in ProgressBar . java to improve performance by avoiding
sulong : cache byte order for llvmlanguage to improve performance
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the URL loading logic to allow dynamic configuration of the
corrected the spelling of " Paramter " to " Parameter " in the ExecutorException message to ensure accurate error reporting for JDBC type requirements
camel - 14263 : camel - audit - do not require the ' after ' parameter to be optional
renamed ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` to improve clarity and consistency in naming conventions
added functionality to remove soft bodies from the dynamics world to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ table - common ] make interface public for source / sink function and output / inputformatprovider
[ zeppelin - 4892 ] fix log message for remote websocket error
add a test case to verify that the jingle namespace be not redundant .
fix nullpointerexception in BCStatCollector when redplasma be not load .
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
refactor conditional checks in Remove . java for better readability to improve code clarity and maintainability by using consistent naming conventions
updated delimiter construction and formatted output in SimpleReport . java to improve readability and accuracy of output messages
added a method to set the " - XDignore . symbol . file " option in JavapTask . java and created a new
rename ` TickerDemo ` to ` StreamingTickerDemo ` and remove the ` TickerDemo ` class to better reflect the purpose of the
added checks for contract creation and address retrieval in Runtime . java to improve error handling and provide clearer error messages for unknown contract types
g3d - 310 : do n ' t create input3d in applet if feature . intel _ reALSENSE
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
scripttagpayloadreader . parsepayload should return false instead of throw an exception
updated the method name from ` getRepositoryFactoryClassName ( ) ` to ` getRepositoryFactoryBeanClassName ( ) ` in ` JpaRepositoryConfigExtension
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to improve flexibility
replaced ` this . x ` , ` this . y ` , ` this . width ` , and ` this . height ` with `
removed UploadPathActivity and updated related imports in ComponentsModule . java to streamline the codebase by eliminating an unused activity
update return statements in SimpleTextFieldsReader to handle document - only index options to ensure correct frequency calculations when indexOptions are set to - 1
fix ( constructor ) : set implicit constructor on parent ( # 2338 )
updated ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods to include ` Database ` parameter to ensure that only OracleDatabase instances
refactor Database class to improve code structure to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
removed unused indexOptions variable and updated iterator assignment in PointInSetQuery . java to improve code clarity and ensure proper iterator assignment
removed the substring limit from rawName in SchematicHandler . java to streamline the code by eliminating unnecessary substring operations
added a switch statement to handle specific collection types in AbstractCollectionAssert . java and updated CollectionAssert _ isUnmodifiable _ Test . java to improve
changed the visibility of the Option enum from static to non - static to allow access to the Option enum from other classes
added a twitlonger dialog to the Compose and ComposeActivity classes to enhance user experience by preventing accidental actions
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` FileOperationsHelper . syncFile ` to streamline
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added a new file ` ControllerCounter . java ` and ` DBCallback . java ` with getter and setter methods to provide a structured way to
added ' final ' keyword to the parameter of the deleteTicket method to improve code clarity and enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a migration test for the Flyway database configuration to facilitate
replaced ` isEmpty ( ) ` method calls with ` size = 0 ` in ` HashMap ` and added a new class ` NotEmptyHashMap
update VERSION from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to reflect the
hive - 25850 : add null check for orc compression modifier in compressioncodec ( sergey shelukhin ,
added null check for mainValue and improved jar creation logic in LauncherHelper . java and TestHelper . java to ensure robust error handling
renamed test classes from " test " to " test " in multiple files to improve clarity and consistency in naming conventions
update hotspotprofilinginfo to support jvmci ir size instead of graal
bug 59745 : make xssfsheet . cellcopypolicy . clone ( ) non - cloningable
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and refactored it in ` Launcher .
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated the method to retrieve the bottom margin based on the device ' s orientation to ensure proper layout behavior for landscape and portrait orientations
deleted the AddAdapter . java file to remove unused code to streamline the project
added a check to return early if constructorCodeList is empty before processing to avoid potential null pointer exceptions when accessing constructorCodeList
refactor ` processSortCols ` variable initialization and streamline bucket column handling in ` OpTraitsRulesProcFactory . java ` to improve code
refactor TestLogWatcher to use a looper method for message validation to improve error handling and clarity in message registration checks
added a print statement for the " < any > " type in Java2TypeScriptTranslator . java to enhance TypeScript translation output for better
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor . java to ensure that the proxy
removed a conditional check for singleton lock in TypeCachingBytecodeGenerator to simplify the logic by eliminating unnecessary checks
renamed responseClassCallback and forwardClassCallback to responseClassCallbackWithClass and forwardClassCallbackWithString to clarify the purpose of
htmlreporter : add ` ` append ' ' to output file if it ' s ` ` true ' '
updated MavenExecutionContextView to check if MavenSettings equals settings and refactored MavenRepositoryMirror logic to improve the accuracy of repository mapping and
added a ` name ` parameter to the ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and implemented its getter / setter methods
updated service redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController . java and added a new test case in OAuth20CallbackAuthorizeEndpointController
replaced instances of ` values ( ) . toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with ` AnnotationParser . toArray ( annotations )
updated method calls in UserManagerCompatVL to remove unnecessary type casting to improve code clarity and eliminate unnecessary type casting
updated the default line separator property in GlobalConfiguration . java to provide clearer guidance on the default line separator for output output
add a test to verify that bestpathaccuracytracker be a derived class
add a method to sanitize user input in BaseController . java to enhance security by preventing XSS vulnerabilities
chore : update java and python dependency ( # 7 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and modified the test to validate the functionality
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
replaced return statements with direct assignment of containerType in AllAppsRecyclerView and updated logDeepShortcutsOpen method in UserEventDispatcher to
hbase - 25810 add deprecation warning for configuration key in bytebuffallocator
[ native ] fix native join and window query for native
replaced the method ` getGenericParameterTypes ( ) ` with ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated
refactor TestFSTs . java for improved readability to enhance maintainability and facilitate future development
ggb - 1358 make input box label height calculation more robust
hbase - 25815 increase increasingtoupperregionsplitpolicy to allow initial size to be specify ( chunhui )
removed loading state reset and loader initialization in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
replaced the initialization of keys and updatesList with new lists and updated the formatting of updatesAt to improve code clarity and ensure consistent date
added functionality to exclude specific datasource beans in SpringDataSourceBeanPostProcessor to improve datasource management by allowing specific beans to be processed
added undo functionality to TableValuesView and removed unnecessary null check in TableValuesPanel to simplify code and improve performance by eliminating unnecessary null
camel - 15836 - camel - aws2 - * : improve error handling for aws kinesis client
refactor VelbusSensorHandler to process channel presses and release events using a loop to improve readability and maintainability of the code
updated ` LocalCacheSelectorCode ` , ` BoundedLocalCache ` , and ` BoundedLocalCacheTest ` classes to clarify
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure that
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are properly cleared during garbage collection
rename ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and update related calculations to improve clarity and consistency in
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the XENSERVER _ NETWORK _ LABEL constant from " xenservernetworklabel " to " xennetworklabel " to ensure consistency in
updated libGDX and libGDX nightly versions from " 1.5 . 5 " to " 1.5 . 6 "
removed the private Set < String > metricNames and its getter method from SolrCore . java to simplify the code and improve performance by elimin
replaced URI class with Path class for path handling in MavenManifestFactory . java to improve type safety and clarity in handling resource URLs
replaced direct call to ` System . getProperty ( " os . name " ) . toLowerCase ( ) ` with a static final boolean ` IS
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the codebase
added functionality to clear and update the slotList in the Frame class to ensure the slotList is consistently updated with the other ' s slot
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure the predicate count starts from a valid state
added imports and overridden the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to ensure that configuration properties are correctly merged based on the
updated setupLogging method to accept a ` org . slf4j . Logger ` instead of a ` Logger ` object to improve flexibility
replaced HashMap with LinkedHashMap in multiple classes to maintain insertion order for aliases to ensure predictable iteration order
added logic to determine the JDBC handler map if the type is a Class or Object to ensure proper handling of JDBC type handlers in the type registry
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter to improve traceability
updated the parsing logic for Locale . LanguageRange to handle trailing semicolons correctly to improve accuracy in parsing language ranges by removing trailing semicol
replaced ` closeHandler . handle ( null ) ` with ` handlerContext . executeFromIO ( ) ` in ` VertxHttp2
make xssfworkbook . gettables ( ) cache xssftable to improve performance
updated schema text formatting logic to check for BASIC type instead of VERBOSE to ensure accurate representation of schema text detail in the output
updated MongoNamespaceReplicaSetTests to use MongoClientFactoryBean instead of MongoFactoryBean to ensure compatibility with the new MongoDB client implementation
replaced HashSet with LinkedHashSet for roots and leaves sets in SparkWork . java to maintain insertion order and maintain insertion order
added a check to ensure the operator tree is properly cloned before proceeding to avoid potential null pointer exceptions during join operations
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService . java and updated JsonFileRegisteredClientService . java
added a clear method for the AchievementList field _ 187981 _ e in StatList . java to ensure the Achievement
initialize string fields to empty in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set to avoid null pointer exceptions
updated permission resource from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissions
added LongBuffer support to ByteBuffersDataInput and ByteBuffersIndexInput classes to manage long data reads efficiently to improve performance by reducing
updated time representation in UnixFileAttributes to use seconds and nanoseconds instead of milliseconds to improve clarity and accuracy of time representation
added a new file TestNoEagerReclaimOfHumongousRegions . java that includes a class for testing humongous memory
added search bar visibility control to the AllAppsContainerView based on user preferences to improve user experience by allowing or disabling the app search bar
[ feature ] fix envrouterfeature to use routes instead of router
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class and integrated it into the menu to allow users to reload the application ' s page dynamically
changed log level from info to warn for unsupported entries in SQLManager . java to provide a more severe logging level for non - existent entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for the selected configuration type in UpgradeHelper . java to ensure that the configuration type has a selected version before proceeding
use serviceloader instead of factoryregistry to load extension point
added closeTable ( ) method and ensure proper resource cleanup in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added a new method ` stopStatementExecutor ( ) ` to ` JdbcConnector ` and implemented logging for setting updates in ` HiveViewImpl `
updated XML feature settings and variable initialization in multiple classes to ensure compliance with XML standards and improve code clarity
replaced JdbCommand . cont with Jdb . contToExit and updated output analyzer in JdbStopThreadidTest . java to
added ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` and ` ShadowContentResolverTest ` to
updated variable names and method calls in ExpressionThreadPoolManager . java to improve code readability and maintainability
updated the HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct HTTP
replaced ` addCaptureListener ( ) ` with ` addListener ( ) ` in ` buttonTable . addListener ( ChangeListener ( ) ) `
updated the default batch size from 10 to available processors in NewSessionQueueOptions . java to optimize the default batch size based on the number of
[ hotfix ] log error when establish resource manager connection in task executor
refactor error handling and return logic for null ClassFile in LambdaRewriter . java to improve robustness by ensuring a fallback mechanism is returned when
updated the error message to include the minimum and maximum values in the IllegalArgumentException to improve clarity of the error message for better debugging
updated method signatures to include ' owner ' parameter across multiple classes to enhance message handling by associating messages with their owners
added new interfaces for ` Cursor ` , ` Database ` , and ` Row ` , and created a new abstract class ` Database ` and `
refactor assertions in AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories classes to improve code organization and
# 263 - enh : add setbeanid ( ) method in ebeanserver ( # 263 )
update xmlFileTemplater . transform method to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to improve code
added a new List < RequestMatcher > matchers to the HttpSecurity class to enable the addition of multiple request matchers to the security configuration
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper object comparison and hashing functionality
move getrequest ( ) to abstractprocessor and remove it from abstracthttp11processor
updated logging messages and error messages in FileManager . java to improve clarity of logs and enhance error reporting for better debugging
added teardown method to TestJdbcDataSource and TestIndexSearcher classes to ensure proper cleanup of resources after tests are executed
updated import statements in SyntaxTests . java for consistency and clarity to improve code readability and maintainability by standardizing file references
refactor ConnectionModel and ModeledConnection classes to improve code organization to enhance maintainability and readability of the code
replaced temporaryresources with a fallback parser in the parserdecorator to simplify the code and improve the handling of different media types
do n ' t allow fml security manager to call the parent class if they do n ' t exist
removed unused parameters from AccountUtils , IndexedForest , and CustomPopup classes to clean up the code and improve readability
updated parameter from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApiMapping
added a new test method ` testJsxComment ` and modified parsing logic in ` Parser ` to improve handling of JSX comments and enhance
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for test case b / 195263971
added error handling for missing Buck configuration in BuildEndToEndTest , CxxEndToEndTest , and EndToEndWorkspace to
added physical memory checks and output messages in TestStringBufferAndBuilderGrowth . java to ensure the test does not exceed the available resource limits
updated the conversion service usage in MapToLocalDateConverter to use a new ConversionService instance to improve code maintainability and encourage the
added a success flag with a value of true in HiveMetaStoreClient . java to ensure successful execution of the operation
updated string comparison for include value in ResourceReferenceInfo . java and modified bundle instantiation in Dstu2BundleFactoryTest . java to improve
updated condition checks to include " amp . twimg . com / v / " alongside " vine . co / v / "
added @ Deprecated annotation to AreaReference class to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the code
added assertions and modified reference kind handling in MemberName . java to improve error reporting and ensure correct reference kind handling
changed the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization around the runChange method to
modified conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of MouseEvent instances
camel - 7999 : fixed the issue of beanexpression when use static method . thanks to michael klink for the patch
http : / / issues . apache . org / jira / browse / amq - 4892 - fix javadoc warning
refactor exception handling in AgentRunnerTest . java for clarity to improve readability and maintainability of the code
add description for adddependency , addplugin , removeproperty , and adddependency to the pom . xml
refactor face addition logic in ObjLoader . java to improve clarity and maintainability to enhance performance by reducing redundant calls to activeGroup
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future feature additions
corrected the spelling of " reentrant " to " lock " in multiple files to improve code readability and maintainability
updated ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` to include `
updated back ( ) method to pass the event component to the back ( ) method to ensure the back operation operates on the correct component context
refactor certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
updated type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes for better type safety to improve type safety and clarity in
updated method calls from NutchConf to getConf in Fetcher , Generator , and Injector classes to ensure consistency in accessing configuration objects
removed the boards pane from the tab and modified the assembly selection logic in StubsController . java to improve tab management and handle cases where
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and updated time interval values in ImporterGEXF
removed the " - logLevel INFO - serverPort " command from the command line to simplify the command for better readability and maintainability
updated error logging to include the exception message to improve error reporting clarity by providing more informative error messages
replaced robotshonoringpolicy with crawlingmetadata in favor of crawlingmetadata
added JUnit @ Ignore annotation to the ITSystemTest class to temporarily disable tests that are not ready for execution
camel - 16400 : fix test which fail on window
added a method ` alternativePath ( ) ` to ` ExpectNewDemo ` that returns an ` ByteArrayInputStream ` or ` DataInputStream ` to handle potential
logentryparsetester : call firstfilter . init ( ) instead of input . init ( )
[ java ] add protectiondomain parameter to bufferalignmentagent constructor .
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable external table optimizations and operations in Hive to improve performance by avoiding unnecessary optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
added FLAG _ SHOW _ WALLPAPER to the window and adjusted wallpaper offset from - 30 to 0 to improve user experience by
modified return values in SybaseASADatabase . java and modified sequence query logic in SequenceSnapshotGenerator . java to ensure correct behavior for Sy
nifi - 3745 : fix npe in putsql when autocommit be set to false
added directory creation and validation for XSL directories in SnapPuller . java and corresponding test cases in TestReplicationHandler . java to ensure proper
updated AppTarget ID from " id : launcher " to " launcher : " in AppEventProducer . java to ensure consistency with naming conventions
refactor frame methods to include an output buffer parameter in Framer and related classes to improve memory management by allowing multiple output streams to be
removed unnecessary parameters from multiple constructors in OAuth2 - related classes to simplify constructor signatures for improved readability and maintainability
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to provide clearer guidance on delimiter
updated the formatting of the ` INSTANT _ STAMPLE ` string and modified the ` appendInstance ` method to truncate the time to milliseconds to
updated the timeout constant and added a retry mechanism for agent closure in AgentRunner . java to improve reliability by allowing more time for agent closure
replaced reflection - based access with direct method invocation for private lookups in ClassLoadingStrategyHelper . java to simplify code and improve readability by
updated Mockito library version to ensure compatibility with the latest features and bug fixes
changed logging message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the event file ' s
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to insufficient sample results
corrected a typo in the error message in GridLayout . java to ensure that the number of rows and columns must be greater than zero
updated string concatenation and string concatenation in DecisionNode . java and WagonCART . java to improve readability and maintainability of the
added functionality to sort and print BoundSheetRecords in XLS2CSVmra . java and TestBOFRecord . java to enhance data organization
refactor variable names and calculations in ThrustCurveMotor . java for improved clarity to enhance readability and maintainability of
updated inputSys initialization to use inputManager instead of a default instance to improve flexibility by allowing different input managers
refactor hashCodeFieldOffset logic to ensure offset is non - negative and improve clarity to enhance code reliability by ensuring offset is non -
deprecate block . getmesh ( ) , remove deprecate method
[ hotfix ] [ yarn ] fix typo in yarnapplicationmanagerrunner
added EMPTY _ WORD _ OPTIONS option and modified matchers logic in LineReaderImpl . java to handle empty words to improve flexibility in matching input
updated the condition for pushing view replica updates in the Keyspace class to ensure correct handling of write commit logs during view replica updates
added functionality to set clipboard and button ID based on user preferences in CaptureActivity . java to enhance user experience by allowing automatic automatic opening of web
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to verify batching behavior of Hibernate in
added handling for EntityExistsException in JpaPersistenceService to improve logging clarity by differentiating between EntityExistsException and other errors
deprecated the ` -- format ` option and its usage in ` CucumberOptions ` and ` RuntimeOptionsFactory ` to encourage the
removed the save ( ) method from PMS . java to streamline code by eliminating unnecessary method calls
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
modified the ` ensureCapacity ` method in ` AbstractStringBuilder ` and added a new ` Capacity ` class with multiple size tests to ensure consistent and
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve code
patch from david mollitor , add endnote relation to xwpfdocument .
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and updated related test cases to include client - specific information to enhance event
added a test method to check GDAL version in BridjOGRDataStoreTest . java to ensure the correctness of GDAL version
added a new file ` Lifecycle . java ` to handle network errors in the application to improve error handling and user feedback during network operations
updated the ` addURLToDownload ` method to include a ` getDACookie ( ) ` and added a retry mechanism for 404 status to
removed unnecessary import statements in BodyTubeShapes . java and RocketFigure . java to streamline code and improve readability by elimin
added support for retina mode in PJOGL and updated viewport and scissor calculations to enable dynamic scaling of graphics based on retina
make create project offline auto - select if pub available ( # 3396 )
replaced PackedInts . Writer with BlockPackedWriter in DiskDocValuesConsumer . java to streamline code and improve performance by util
replaced ArrayList with SortedSet for routesByStatus in DefaultRouteBuilder . java and updated the toString method in DefaultRouter . java to improve performance
removed unnecessary data list and data frame tracking in GoAwayTest . java to simplify the code and improve performance by eliminating unnecessary data
added property handling for fluent beans in ReflectionUtils and created a new FluentSetterBean class to enhance bean population capabilities for fluent fields in objects
change the return type of the post method from ListenableFuture < ? > to ListenableFuture < HttpResponse > in BlockingHttpEndpoint . java
camel - 16400 : camel - filesorter - add test for sorting of file in case of case insensitive sort
updated the print statement to use ` getLastAppearedTaskId ( ) ` instead of ` mLastAppearedTaskTarget ` to improve
added support for write image scaling and pdf conformance in rtfdocumentsettings
added conditional logic to display aggregate function name based on the processor ' s parameter to enhance functionality by allowing dynamic aggregation of paths based on the execution
replaced LuceneTestCase with WithNestedTests . AbstractNestedTest and added cleanup methods in TestSystemPropertiesInvariantRule to improve test
added functionality to select the XCap enable box and updated the xCapServerUri value in the presence panel to ensure the correct display of the
ww - 4352 add support for exception handle in dispatcher
added methods to stop text editing in multiple classes to improve user experience by allowing immediate termination of text edits
nifi - 5338 : fix npe in controlrate when group attribute name be not specify
updated the ` showDialog ` method to accept a ` isNewComponent ` parameter and added a ` alwaysOpenPreset ` checkbox in the ` Component
added error logging to the chat annotation to aid in troubleshooting and troubleshooting chat - related issues
added a check for the operating system type in HTMLDataFlavorTest . java to ensure the test is only executed on Windows to avoid errors
added SQL _ SERVER _ SNAPSHOT constant to the TransactionIsolationLevel class to enable SQL server snapshot functionality for improved transaction management
modified the way new recids are offered and added a check for closeInProgress to ensure that newRecids are not offered multiple times
use runtime . version ( ) . feature ( ) instead of java . util . compat . jar . jar .
added a null check for the command class in the RegisteredServiceSimpleFormController to ensure that the command class is only set when it is not
use ignore instead of best _ effort for disk _ failure _ policy . patch by jbellis
changed method visibility from public to package - private in RipperInterface . java and RipStatusHandler . java to restrict access to methods
peerdiscoveryagent : do n ' t try to connect to a non - ipv6 address .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unnecessary functionality
updated import statements and modified partition assignment logic in PinotSegmentRebalancer . java to enhance rebalancer efficiency by utilizing ClusterDataCache for
simonstewart : remove the delete ( ) method from v140docker and remove it from v140docker
simonstewart : fix parsing of pipe - separated command
added a new MultipleAttemptsRule to the CreateGlossaryTests class to enhance test reliability by limiting test execution attempts
updated schema references to use constants from Components . COMPONENTS _ SCHEMAS _ REF to improve code readability and maintainability by using
refactor EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve code readability and maintainability by reducing redundancy
added a check for a specific GOP value in FormatConfiguration . java and updated related imports in LibMediaInfoParser . java to ensure proper
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate performance testing of profile return
added locking mechanisms for configuration updates in ParseConfigUtils . java to ensure thread safety during concurrent access to configuration management
added support for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent memory leaks
simonstewart : remove the @ ignore annotation from the firefoxprofiletest
added @ return annotations to the HasAndroidDeviceDetails class and changed the return type of getSystemBars ( ) from String to Map < String
remove dead bug from projectstats . addbug ( buginstance )
[ netbeans - 4952 ] use label . disabledshadow and label . disabledforeground in gtk import panel
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check to return the next time based schedule execution time if the recurrence is empty to ensure the scheduled action returns a valid date in the
refactor upload button handling in ShareActivity to use an action menu instead of a button to streamline the upload task execution process and improve code
refactor multiple classes related to message handling to improve code organization and maintainability
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an input
added a WritableSerializer to handle various Writable types in CrawlDbReader to enable proper JSON serialization of Writable types in the CrawlDbReader
remove testjaspicbasicauthenticator since it be n ' t use anymore
added a service configuration for the DiscoveryService in MDNSDiscoveryService to facilitate the configuration of the MDNS discovery service
added a null check for messageItem before scrolling to the layout to avoid potential NullPointerException when messageItem is null
refactor ForkJoinPool initialization in BPIndexReorderer . java to use a custom ForkJoinWorkerThread to improve thread management and
removed redundant assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest . java to streamline test code by eliminating unnecessary
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and refactored ` writeObject ` to ` dedupWithTableInfo (
reformatted code for consistency in formatting across multiple files to improve code readability and maintainability
added matrix transformation and flipping functionality in BitmapFontTest . java to improve rendering accuracy and ensure proper texture rendering
[ hotfix ] [ python ] exclude built - in aggregate from streamphysicalpythongroupwindowaggregaterule
do n ' t send statuschange event for already pending echo to avoid premature shutdown .
added a method ` getUnreachableTokenOwners ( ) ` to ` Gossiper ` and updated method names in ` StorageProxy `
[ geosymbolic ] make sure we do n ' t change x ^ 2 to x ^ ( x ^ 2 )
updated content type handling in FormAuthenticator and SavedRequest classes to ensure the correct content type is set for saved requests
modified access modifiers of ` _ display ` and ` localEnv ` variables in ` XToolkit . java ` to enforce immutability and
refactor RecommenderJob and AbstractJob classes for improved clarity to enhance maintainability and readability of the code
use reentrantreadwritelock to avoid deadlock
added a new test method ` testReadIdentityProviderInOtherZone ` to verify the creation of identity providers in a specified identity zone to ensure correct
replaced the job schedule with an ExpireJob in ObjectTypeNode . java and added a null check in PointInTimeTrigger . java to
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance change
chore ( core ) : add ` ` detached . mkdir . mode ' ' property to cairo _ detached _ mkdir _ mode (
[ java ] do n ' t send message to slow down follower when there be a slow follower to restart .
[ auth ] [ year ] change default label pattern for jabrefpreferences
refactor DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing parse - time dependencies to
camel - 14263 : camel - google - tts : properly dispose the service when the component be deactivate
camel - 7999 : do n ' t delete file with name ` ` { file : name } ' ' on completion . thanks to
added a boolean flag to reopen readers in SolrConfig and modified the conditional check in SolrCore to ensure readers are reopened based on configuration settings
include the dialect version in the map writer if available
added methods to retrieve the current date and timestamp in the Update class to enhance functionality for handling date and timestamp fields in MongoDB updates
added a method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest .
refactor Condition implementation to use lambda expressions instead of anonymous classes to improve code readability and reduce boilerplate
replaced TermQuery with ConstantScoreQuery and modified expected value type in TestFacetsCollector . java to improve query performance and ensure correct integer
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a method to provide shared preferences for direct nearby uploads in CommonsApplicationModule to facilitate easier access to shared preferences for
added support for the " SYSDUMMY1 " mode in the database parser and related classes to ensure compatibility between DB2 and Derby
updated logging statements and added sampler configuration properties in multiple classes to improve logging clarity and enable conditional refresh behavior based on configuration properties
patch from josh from bug # 49599 - add lastpid to poixmlproperties . getlastpid ( )
[ geotiff ] fix npe when read float . neg _ infinity
refactor CliDriver to use a separate executeDriver method and update SessionState to use UUID to improve code clarity and ensure proper resource management
refactor MockRestAdapter to use rx . schedulers instead of rx . util . concurrent . Executor to improve concurrency handling and error management
feat : partition ruleidset into a single list to reduce the number of call to selectbyruleidset
added a method ` addExitDescription ` to ` ExitStatus ` and refactored stack trace handling in ` AbstractJob ` , ` Abstract
minecraftforge / fml / multiblockrenderhandler . java do n ' t allow the multiblock to click on
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in variable naming
removed unnecessary import of Collections in PlotConfiguration . java to streamline code by eliminating unnecessary imports
refactor DefaultIOSInput to use a custom UIAlertController instead of a custom UIAlertView to improve code readability and maintainability by
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct build target is
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
added an assertion to check if a message is not null in AdvServiceTest . java to ensure that the service does not return a message
refactor key handling in MappingMongoConverter to improve clarity and functionality to enhance code readability and maintainability by simplifying key conversion logic
updated Timber logging format in NearbyMapFragment . java to ensure consistent formatting of log messages for better readability
camel - 14263 : camel - core - optimize to reduce memory usage
added null check for terms in FuzzyLikeThisQuery and created a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to include a boolean parameter for tabular list display to enhance flexibility in displaying application links in different display
[ ds - 3952 ] use identifierservicefactory instead of dspace . getidentifierservicebyname ( ) to get the identifier service
replaced ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ` method calls to ensure consistency in accessing the
changed the return type of getDisplayScript method from abstract to non - abstract to allow the method to be overridden without an abstract implementation
alexeibarantsev : fix key press and release in remotewebdriver
pdfbox - 4892 : grow arraylist size , a suggest by valerybokov
added a check for empty activeInterfaces list and a null check for dbusConn in NetworkManagerListenerImpl to ensure proper synchronization and prevent potential null
fix bug # 45538 - handle nested object in hssfworkbook
removed the import of Shdr from ShaderNodeLoaderDelegate . java to eliminate unused dependencies and streamline the code
replaced ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to better represent role - specific
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font names
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
updated ` LiveTvGuideActivity ` to use ` mCurrentGuideStart ` and modified date handling logic in ` ProgramListAdapter ` to improve
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes in ` Main
added dlopen calls for specific library paths in JREUtils . java to load necessary library files for compatibility
refactor variable substitution logic in FunctionParser and introduce a new method for handling multi - variable functions to improve code clarity and maintainability
add protect non - overflowing unsigned guard to guardsafepointelimination .
fix class . isinstance ( ) to check if the class be a reference type .
added a new static class LocalizedString and refactored type argument handling in multiple Java files to enhance localization support and improve type safety in
added a ` disableClasspathSearch ` boolean field and its getter / setter in ` ServerConfig ` , and updated the logic in ` DefaultContainer
replaced manual array copying with Arrays . copyOf for audio format handling to improve code readability and performance by utilizing built - in array operations
change default value of retries ( ) from 2 to 1 in Reference . java and update related test cases in AnnotationPropertyValuesAdapterTest . java
added settings handling and updated usage instructions in TexturePacker . java to improve flexibility in processing settings based on user input
added AppCompatTextView and AppCompatTextView elements to AchievementsFragment for displaying uploaded images and used by Wikimedia
added mock and logger variables in TranslatingJavacPhaseTracerTest . java to enhance logging for better traceability during annotation processing and parsing
added a new ` CategoryInfo ` class and updated the URL in ` CategoryInterface ` and ` MwQueryPage ` to include it to
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error handling
added AccessibilityManager and modified taskbar timeout handling in TaskbarStashController . java to improve accessibility features and ensure consistent timeout retrieval
added a condition to check for the ' ^ ' character in the signature parsing logic to ensure proper handling of the ^ character in the signature parsing
updated access flags in ClassVisitorDriverFromElement and added new test cases for stubbing interfaces , enums , and abstract enums in StubJarTest
added null checks for input variable in IntervalFilter and LowpassIntervalsSource to ensure input is not null to prevent potential NullPointerExceptions
added tests for iterator behavior in MapInterfaceTest . java to ensure correct behavior of entry set iterators in the map implementation
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
[ api ] use second instead of millisecond for image creation time
added f2m locus support and updated locus command handling in the SingularWebService and CASTranslator classes to enhance the accuracy of
added import for EncryptionUtils and called deleteKeyForAccount method with private and public keys to ensure account keys are removed when they are no longer
refactor keep - alive header handling in JDKAsyncHttpProvider and NettyAsyncHttpProvider to use a dedicated utility method to improve code maintain
fix postjoinmapoperation when no interceptor and lite member join
add inlining processor for text , java script , and CSS in the dialect to improve code readability and maintainability by eliminating
removed the ` spillEnabled ` parameter from multiple constructors in ` BaseHybridHashTable ` and ` LongHybridHashTable ` to
refactor EnvironmentVariableHelper to use Optional for process environment map retrieval to improve code readability and reduce boilerplate code
pdfbox - 4892 : fix checkstyle violation in defaultactionmapper
added import for SerializableMode in Mockito . java and modified formatting in PluginSwitch . java to enhance mock functionality and improve code readability
fix : field injection point should not be set to null if nullable
added isolation level handling in select statements and updated related test cases to improve database query compatibility and ensure proper handling of isolation levels in select statements
updated HiveConnection . java to use constants for configuration variables to improve code readability and maintainability by avoiding repeated calls to HiveConf
added a method ` isCacheable ( LeafReaderContext ctx ) ` to ` GlobalOrdinalsWithScoreQuery ` to indicate that the
added a new file TestStrangeControl . java that implements a thread - safe implementation of StrangeControl to facilitate testing of
updated file naming from " % s . json " to " % s . jsfile " and " % s . jslib " in Js
added selectionStart and selectionEnd fields with methods to set and retrieve the start and end selections in ShadowEditText to enhance functionality for managing text
refactor grpc server handling to use try - with - resources for better resource management to improve resource management and ensure proper shutdown of gRPC servers
added a method to Jooby ' s use method and improved parameters in Jooby . java and Jooby
added a null check for the fst variable in FreeTextSuggester . java to ensure that lookup is not supported at this time , prevent
updated line separator handling in T4975569 . java and improved URL construction in T6729471 . java to ensure consistent line
added ABI writer class loading logic in JavacInMemoryStep . java to ensure proper instantiation of processors based on the provided name
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings about the use of the method
added a check to ensure the service is not stopped before executing the scheduled task to avoid potential runtime exceptions when the service is stopped
refactor EnergyEndpointer class to improve code structure to enhance maintainability and readability of the code
refactor the handling of displayed columns in ComponentPresetChooserDialog to use a list instead of an array to improve code readability and maintainability
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase to clean up the code and improve readability
camel - google - sheets : fix switch / cases indentation see camel - 14540
added an ` getExportedHeaderStyle ` method to ` CxxLibraryDescription ` , ` CxxLibraryMetadataFactory ` , and ` C
deleted the file Constants . java and distanceUtils . java to remove unused components to streamline the codebase
refactor key extraction logic in RandomPartitioner . java to improve readability to enhance clarity and maintainability of the code
[ gr - 16913 ] fix build - time initialization of native image .
added a test method for creating a RoleBinding in the RoleBindingTest class and refactored the create method in RoleBindingOperationsImpl to
added debug logging statements to UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configuration processes
updated FILE _ NAME _ PREFIX calculation to use calendar . day _ of _ year instead of LOG _ DAYS to ensure the filename accurately reflect
update condition in ObservableBlockingSubscribe . java to use a variable ' v ' instead of ' o ' to improve code readability and maintainability
added error handling for invalid options in JavapTask . java and created a new T8033711 . java file to improve user
replaced instances of ` Collectors . toList ( ) ` with ` toList ( ) ` across multiple files to simplify collection method calls and improve code
updated logging levels from error to warn and modified return logic in TaskDriver . java to handle shutdown scenarios to improve error handling and provide clearer
[ hotfix ] [ network ] add support for enable tiered storage in singleinputgatefactory
replaced a constant SUCCESS _ CODE with a static method isNotSuccessStatus to improve code readability and encapsulate status validation logic
fix ( cuboc ) : enable lwjgl 2.0 for cuboc desktop
removed unnecessary check for VoidType in JimpleBody . java to simplify code logic for better readability and maintainability
refactor OutputMacroExpander to use Arg and AddToRuleKey instead of DefaultSourcePathResolver and improve command line argument handling to enhance
corrected the spelling of " assertNoJobsLeftEventually " to " assertNoLightJobsLeftEventually " in multiple test files
added a check for the end of the file path in the duplicateWords condition to ensure that the input file path does not contain the \ build
update instructorfeedbacksessionresultsbundle to use a map instead of a bundle .
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements a test for object escaping to ensure that object escaping behaves as expected under various
replaced ` stream . skip ( start ) ` with ` IOUtils . read ( stream , bytes ) ` in ` FilePreviewService . java
added error handling and connection pool initialization in ConnectionPool , JdbcInterceptor , DataSourceProxy , and TestSlowQueryReport classes to improve connection management and
change catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching broader range of exceptions
hbase - 25850 lrublockcache . getcurrentsize ( ) should return 0 if eviction be not in progress
removed unnecessary check for zero task count in RecentsView . java to simplify code by eliminating unnecessary return statements
updated sleep duration in HelixBrokerStarter and HelixServerStarter from 1000ms to 5000ms in HelixServerStarter to
added a new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` and updated ` CoinmateExchange ` to
improve error message when systempath reference to project . basedir
pdfbox - 4892 : update object key if they do n ' t change , a suggest by valerybokov
[ beam - 8470 ] fix npe in ptransform . setdisplaydata ( ) .
replaced ` Truth . THROW _ ASSERTION _ ERROR ` with ` assertThat ( ( Object ) null ) . check (
removed the " jdk . certpath . disabledAlgorithms " security property from ClientJSSEServerJSSE . java to allow the use of
updated error messages for subcommand group and option types in OptionData . java to improve clarity and accuracy of error handling for subcommand groups and options
updated module - info . java files for mmm and ppp modules to ensure consistency and clarity in module dependencies
added error handling and improved connection ensurement in IOSImplementation . java to enhance robustness by providing a clearer error message when connection
updated sCheckingEvents initialization in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
refactor exception handling in FileSinkOperator and add close methods for writer and record writer closures to improve error handling and resource management during file
added diagnostic logging functionality to SchemaGenerator . java to enhance visibility into diagnostic results for debugging purposes
replaced SemanticException with OptiqSemanticException in SemanticAnalyzer . java to provide a more specific exception type for semantic errors
updated DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a set to track loaded resource paths and modified resource scanning logic to optimize performance by avoiding unnecessary scanning of loaded resources
[ hotfix ] [ test ] fix npe in testserviceutil
added null check for the object before processing and updated response handling logic to ensure proper error handling and response assignment when the object is null
added nullability for natIp and improved log message formatting in EkeyUdpPacketReceiver to enhance debugging capabilities by providing more context on
replaced ` io . netty . buffer . ArrowBufAllocator ` with ` arrow . memory . ArrowByteBufAllocator ` in multiple files
rename CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve clarity and consistency in naming conventions
added a condition to set the state for the HttpParser when no headers or bodies are provided in HttpConnection . java to ensure proper handling of
refactor subscription handling in MultiTimeout to use AtomicReference and AtomicLong for upstream and requestedInitial to improve clarity and maintainability of the
skip compaction of starved sstables if they do n ' t overlap the starved sstables
added @ Test annotation to TestOrcTimezone1 . java to enable unit testing for the timezone functionality
updated conditional logic in Debug . java to include additional substrings for enabled metrics and timers to enhance functionality by allowing matching of enabled metrics and timers
added error handling for JSON processing in PinotSegmentRestletResource . java and simplified return statements in TraceContext . java to improve robustness
updated JTable renderer to handle null superclass cases and added a new Test6888156 class for testing to improve robustness of renderer retrieval
added a conditional check for the existence of the environment SHELL file before adding it to the arguments to ensure that the application does not attempt to
increased the number of deleted feeds from 10 to 1 in DatabaseCleaningService . java to optimize deletion process by reducing the number
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code readability to enhance maintainability and ease future updates
added transactionDisable ( ) method to BTreeMapTest . java to ensure proper transaction management during tests
modified iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to ensure proper iterator behavior and
removed stack trace printing from exception handling in DefaultRemoteProxy . java and updated exception handling in JMXHelper . java to improve error handling clarity
[ hotfix ] [ rocksdb ] update default writebuffer size to 64mb
removed the ' true ' parameter from the constructor of the Style class to simplify the constructor signature for better usability
updated method call from addArgument to addArgumentNoEncoding in FacebookShare . java to ensure proper handling of message encoding in the request
[ beam - 8470 ] remove unused json graph configuration in samzarunner
* use mouseinput . button _ left instead of vector3f . zero instead of vector . zero .
[ hotfix ] [ doc ] fix typo in looprotatebadnodebenchmark . java
added type information handling to the convertToMongoType method across multiple classes to improve type conversion logic and ensure proper handling of nested polymorphism
ggb - 2178 make sure imaginary unit be display correctly in input box
http : / / issues . apache . org / jira / browse / selenium - server - handler - sendkeys - to - activeelement
added methods to create a multi - image instance and reduce dimensions based on their dimensions to improve image scaling efficiency and handle cases where target dimensions are
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( engine ) ` in ` DBMaker . java ` to stream
add call to updateshiftstatenow ( ) in order to make sure shift state be update .
removed the DETECTED _ ACTIVITY constant and updated related methods in multiple classes to maintain backward compatibility while maintaining backward compatibility
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed the import of Buildable from AaptPackageResources . java to streamline dependencies and reduce unnecessary dependencies
added comments to ` file . readUnsignedShort ( ) ` for unused indices in multiple Java files to improve code clarity by indicating that these indices are
updated the exception message in WebSocketUpgradeHandler to include the status code to provide clearer error context for invalid upgrade protocol errors
corrected formatting of the assignment of blockMode in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed redundant condition checks for plot ownership in Merge . java to streamline code for better readability and maintainability
removed deprecated ` getConversationID ( ) ` methods from multiple classes to streamline the code by eliminating outdated functionality
replaced ` com . sun . speech . freetts . en . us . CMUVoice ` with ` dfki . lt .
refactor stripQuotes method in BaseSemanticAnalyzer , PartitionSpec , and PlanUtils to utilize PlanUtils for string manipulation to improve code
refactor rendering update methods in DLNAResource and Request classes to streamline rendering handling to improve code readability and maintainability by redu
updated repository handling in DefaultPluginManager to include remote artifact repositories to ensure all relevant repositories are included in the resolution group and project
( chore ) camel - cxf : fix resource leak in unit test
refactor PhysicsClient to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failure
added a new File object instantiation in ZipFile . java to facilitate file handling within the ZipFile class
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
add unit test to ensure that channel be initialize by the default constructor .
added a new ` StackTraceUtils ` class and integrated it into ` GenericDAOImpl ` , ` ForumServiceImpl ` , and ` ReflectionUtils
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary test annotations
refactor unparse logic in ` FunDefBase ` , ` ParenthesesFunDef ` , and ` BasicQueryTest ` to
updated ` GET _ CONFIGS _ SELECTED _ MORE _ ONCE _ QUERY ` to use ` Multimap ` for retrieving configurations to
replaced ` supressWarnings ` with ` suppressWarnings ` and added conditional checks for ` jdk . internal . misc . Innocu
updated JsonTreeReader to handle unexpected JsonToken states to improve error handling and provide clearer error messages for unexpected JSON elements
added support for " -- " command - line arguments in TestCommand . java and a corresponding test in ExternalTestRunnerIntegrationTest . java to
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality for Solr operations
[ flink - 20613 ] [ example ] [ table - planner - blink ] [ table - planner - blink ]
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure a clean database state before each test execution
updated Progress handling to include a showPercentage parameter and adjusted related logic to improve progress display control and ensure proper resource cleanup during disposal
added a check to ensure the parent file exists before proceeding with operations to avoid potential errors when the parent file does not exist
pdfbox - 4892 : add write and close method , a suggest by valerybokov
updated print statements to include carriage return characters in JavaBuild . java to improve readability of output by adding carriage return and formatting
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods in ` ITextRenderer ` to
added user search functionality in CustomQueryFilterFactory and updated test transport ports in TestLdapAtnProviderWithMiniDS to enhance security by
added default ports handling in NettyHttpServer , DefaultRouter , and FilteredRouter classes to ensure proper routing and port configuration for HTTP requests
updated status updates in SnmpTargetHandler and related tests to ensure proper initialization and verification of status information to improve code clarity and ensure proper
update instructorfeedbackeditpageaction to show only instructors with submit permission .
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new development
refactor path handling logic in FileResolverImpl . java and add WarFileResolverTest . java to improve clarity and functionality of path
updated string formatting in DocumentsWriterPerThread . java to include documentstores to improve clarity of flushed size information for better debugging
use unlocalized name instead of func _ 149739 _ a ( ) to improve clarity of output
corrected the spelling of " stripWhitespaceX " and " stripWhitespaceY " from " stripWhitespaceX " to " stripWhitespaceY
increased the lock size in FeedRefreshUpdater from a fixed number of threads to a fixed value of 1000 to ensure that the locks are
updated ` MetadataIndexNode ` to include an ` exactSearch ` parameter in ` TsFileSequenceReader . java ` and added a test for
removed the ` dateFormat ` parameter from the ` makeResultFromDelimitedString ` method signature to simplify the method signature by eliminating unnecessary
added preferred size calculation for the pane in NavigationShareTab . java to ensure the pane is sized correctly within its available space
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom KeywordAttribute in TestBeiderMorseFilter to
refactor multiple Upnp - related classes for consistency and clarity to improve maintainability and readability of the codebase
fix flickering in lenswarp . close # 1193
test : add json . tostring ( ) method to jsontest ( )
refactor MutableContextDataSupplier class for improved readability to enhance maintainability and clarity of the codebase
changed exception handling from Exception to Throwable and added logging for LogWatcher loading to improve error handling robustness and provide more informative logging when Log
updated KubernetesMockServer constructor to include HTTPS as a parameter to enable secure communication for the Kubernetes mock server
compute the stamp of the foreign call node to ensure the correct stamp is used for mathematical operations
updated HTTP ALLOW header from METHOD _ NOT _ ALLOWED to METHOD _ NOT _ ALLOWED and changed response status from NOT _ FOUND _
tika - 3746 -- fix for tika - 3748 , use locale . us for decimalformat
solr - 3972 : fix showfilerequesthandler to not log a warning in the ( expect ) situation of a file not find
added exception handling methods in ReflectorClassWriter and a corresponding test in ReflectorTest to improve error handling and ensure proper exception propagation in the
added a clamp method to the Vector2 class to allow clamping vector elements based on specified minimum and maximum parameters
added client scope check and modified access token creation logic in ChainedTokenGranter . java to ensure requested scopes are validated correctly and improve
refactor BC _ instanceof to improve code readability to enhance maintainability and facilitate future development
replaced setSaveFlags ( SAVE _ ALL ) with a static final logger in EditorBottomSheetBehavior . java to improve logging practices
updated UaaUrlUtilsTest to use JUnit 5 annotations and modified method visibility from public to package - private to migrate to JUnit 5
hhh - 14613 fix type inference issue in nativequery
added caching mechanism for font AAT information in SunLayoutEngine . java to improve performance by reducing redundant calculations for font AAT
use intarraylist instead of intbigarray in typedset . getinstancesize ( )
danielwagnerhall : rename / session / : sessioId / : context / window _ handle to / session /
[ hotfix ] [ runtime ] fix typo in brokerrequestutils javadoc
refactor InjectorBuilderImpl to utilize a map for instance tracking and reordering to improve code clarity and maintainability by centralizing instance
updated method calls in BuildTargetToRawTargetNodeTransformer to use buildTarget . getBasePath ( ) instead of getAbsolutePathToBuildFile to improve
added a null check for the input before parsing and assigned a default value to improve robustness by handling potential null values and providing a default value
add keepalivesmanagertest to ensure keepalivesmanagertest do n ' t leak connection
changed the default load factor from 0.67 f to 0.67 in IntHashSet . java to ensure consistent initialization of the default load factor
added a method to retrieve all physical variations in VectorizationContext and updated Vectorizer and Vectorizer classes to utilize them to improve data handling
changed package of HtmlAssetTranslator and StringsResourceTranslator from ` com . google . zxing ` to ` com . google . zx
refactor layout logic for vertical bar layout in OverviewState . java to improve readability and maintainability of the code
added @ Entity annotation to BaseActivityEventEntity . java to enable persistence of activity event entities in the database
added tracing for TouchInt interactions in multiple classes to improve debugging and monitoring of touch interactions
added a new file ` InvalidOptions . java ` to handle error messages related to javap options to improve error handling and provide clearer guid
added a check to log an error if the number of displays matches the expected number of supported bounds to improve debugging by tracking inconsistencies in
refactor ` getClientIdAndClientSecret ` method from protected to public static in ` OAuth20UsernamePasswordAuthenticator . java ` to improve accessibility
set the unwrapServletException to true in ErrorPageErrorHandler and set it in AsyncContextTest to enable unwrapping of servlet exceptions for improved
added status setting for ShortcutInfo in PackageUpdatedTask . java to ensure proper status is set for default shortcut information
camel - 16400 : seda component should use a configurable size for the queue . thanks to benjamin graf
added batchUpdateStart and batchUpdateEnd methods to Kernel and App classes to enable batch processing of updates in the application
added HttpClient configuration to ThirdEyeApplication . java to enable HTTP client management in the application
added sorting functionality to JobInstanceFetchRequest and updated batch size handling to enhance data retrieval capabilities by allowing sorting capabilities
updated the ` CryptoFacilitiesTradeService ` to return a ` NotAvailableFromExchangeException ` instead of throwing an exception to improve order cancellation
ggb - 1342 hide the keyboard on click in algebraviewweb .
sulong : use native function handle for memcpy in llvm heap .
reformatted code for consistency and clarity in BindLdapAuthenticationHandler . java to improve code readability and maintainability
make tooltip blockable by default
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance ( ) for date formatting and improved GsonBuilder ' s dateStyle handling to enhance
updated playerSet string format from " < UID : " to " ( " for consistency to improve clarity and consistency in player identification
added a check to return the current instance if the list is empty to prevent unnecessary processing when the list is empty
added handling for InvocationTargetException in ParametricCallable to wrap CommandException to improve error handling for command execution failures
updated the getLikeExpression method to accept a boolean parameter for the ' isLike ' parameter to enhance functionality by allowing differentiation between regular expressions
added ` start ( ) ` and ` stop ( ) ` methods to ` StreamSupplierComponent ` and ` NativeStreamSupplierComponentImpl ` to
added listener handling to the runChild method in LuceneTestCase to ensure consistent locale settings for test cases
refactor multiple PG - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization to use a separate method for clarity to improve code readability and maintainability by reducing duplication
camel - 16400 : camel - osgi - blueprint - add unit test for routebuilder reference
nifi - 6697 : fix test to work with jdk 1.6
refactor return type substitutability methods to improve clarity and handling of covariant return cases to enhance code readability and maintainability by
added ` ThrottleType ` enum and updated processing logic in ` TestExecutor . java ` to manage character throttling to improve performance by controlling
replaced pixel assignment with direct assignment of rgb [ i ] in ColorBleedEffect . java and added a conditional check in Sprite
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the codebase
added a new interface ` Model ` and modified the ` Sheet ` and ` Workbook ` classes to implement it to enhance functionality by providing a
camel - 7999 : camel - http - header - filter should use camel _ filter _ pattern instead of camel - http - header - filter
added a ` clearEntityManager ` property and its getter / setter in ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to
added null checks for ` ShortcutInfo ` and ` Intent ` in ` InstallShortcutReceiver ` , ` LauncherModel ` , and `
updated the constructor of TwoDimensionalCollectionValuedMap to include a true parameter to enable the creation of a new TwoDimensionalCollectionValuedMap
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and child in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness and prevent potential NullPointerExceptions
added null check for ` files ` in ` SegmentInfos . java ` and created a test for ` IndexReader ` after deleting files to ensure
( chore ) camel - test - infra - elastic - search : fix invalid date format
updated the calculation of the percent value in DeviceHandler . java to handle negative values correctly to ensure that the percent value is always non - negative
updated limit validation from ` < 1 ` to ` < 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to
camel - 16400 : improve logging of additional route builder from registry to directory .
fix off - by - one error in getnextchunk ( )
updated test classes to extend LuceneTestCase instead of TestCase for NumericRangeFilterBuilder and NumericRangeQueryBuilder to ensure compatibility with Lucene
added a new utility class ` StatefulMapper2 ` and updated ` StatefulOperatorTest ` to handle grouped states to improve state management and
remove null check for fill and stroke in area and line classes to simplify code and improve readability by reducing unnecessary null checks
removed dependency on LevelDbDataSourceImpl and added dbExists method to Blockchain class to streamline database existence checks and improve code clarity
trim whitespace from the group value in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing spaces
set socket ' s asynchronous mode to false in Http11AprProtocol . java to improve performance by reducing the frequency of asynchronous operations
ggb - 1188 fix divider positioning in webview ( # 4698 )
added health check metrics for OK and BAD CALLS in the PinotController health checks to enhance monitoring capabilities for controller health checks
hide sharedAvatars view in LocalFileListAdapter to improve UI responsiveness by hiding unnecessary views
[ web ] remove @ clientbundle . source from mebis resource
updated argument length checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes to
added a conditional check for log level before executing commands in LogInterceptor to optimize performance by avoiding unnecessary execution when log level is not fine
replace CountDownLatch with a more concise assertWaitUntil in EventBusTracingTestBase . java to improve readability and maintainability of
removed locale parameter from QueryParser and updated related methods accordingly to simplify locale handling and improve code clarity
refactor : use linkedhashset instead of arraylist in entrycustomizationdialog
jbrules - 2852 : fix bug where betanodeconstraint be not support
added OcspUnauthorized class and updated case handling in OCSPResponse . java to improve error handling and provide a mechanism for unauthorized OCSP
replaced a fixed sleep duration with a dynamic server state check and added a check for server failure to improve responsiveness and prevent multiple failures
added methods to track and manage the number of open connections in SourceCounter and AvroSource classes to enhance monitoring and management of source connections in the
add a builder to the interface type , so that it can be pass to the builder .
refactor ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of creating a ` DefaultJavaPackageFinder `
replaced the Writer instantiation with a PrintWriter in ScriptExecutable . java to enhance output handling by utilizing PrintWriter for better output management
[ hotfix ] [ test ] use unique file name in filesourcetextlinesitcase
added handling for DataTable in JRubyStepDefinition to correctly convert DataTable instances to Ruby arguments for better integration with Cucumber ' s DataTable processing
updated visibility settings for author in SearchImagesRenderer . java and refactored image node retrieval in ApacheHttpClientMediaWikiApi . java to improve
refactor ReadSentimentDataset class to improve code readability to enhance maintainability and facilitate future updates
improve error message when formula parse fail
added bindAddress getter and setter methods for the SocketAddress in WebSocketClient . java to enable flexible binding of the WebSocket connection to a specified
[ java ] clean up archive and aeron directory on shutdown .
refactor width and height handling in WidgetGroup to use a new method for setting the size to improve code readability and maintainability by redu
updated the comparison of sessionFixationAttribute to use Boolean . valueOf for better readability to enhance code clarity and prevent potential null pointer exceptions
fix : lalogiclinesfragment do n ' t work with digital channel ( # 1193 )
danielwagnerhall : add exponential backoff to chromebinary to make it more stable .
added URI template handling to ` TraceExchangeFilterFunction ` and updated ` ClientResponseWrapper ` to include method and HTTP route to enhance tracing capabilities by
patch by jbellis ; review by brandonwilliams for cassandra - 1186
updated ICC _ Profile and ColorConvertOp to use bitwise operations instead of bitwise operations to ensure correct handling of rendering intents and improve code
[ 1.19 . x ] update contribution question edit form to be noture ( # 1193 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink . java and removed Serializable interface from KafkaRecord . java to address findbugs warnings related
added PGConnection to the Proxy in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java to enhance
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for missing token encryption secret and changed log level from warn to trace to provide clearer information about the configuration
marked the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated AmbariManagementControllerImpl to handle unlimited key JCE requirement and added TopologyUpdateEvent handling in FinalizeKerberosServerAction to
added support for reading and writing iterators in NamedListCodec and a corresponding test in TestNamedListCodec to enhance functionality and ensure correct handling of
fix potential npe in migrationmanager . assigncompletelylostpartitions ( ) when state be null
added schema inclusion rule to ApiExample . java to enhance schema accessibility by restricting access to public schemas
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected value for
[ geot - 6640 ] fix sddo _ polygon to handle edge case with closed ring
added methods to retrieve the base name and dimension count in the ConstantPool class to improve functionality for retrieving the base name and dimension count in the
added a method to set debug evaluation output for the next formula in multiple classes to enhance debugging capabilities for formula evaluation outputs
refactor : migrate test to junit 5 ( # 4433 )
removed the ` isLiveTv ` parameter from the ` ExoPlayerProfile ` instantiation and modified the playback logic in ` PlaybackController
added a return statement to the DynamicStyleBar class to prevent further processing in the code
added SLF4J logging statements in Utils . java to facilitate debugging and monitoring of database property settings
refactor ReactiveAuthorizationManager to improve authorization handling logic to enhance security and maintainability of the authorization process
added a check for boolean types in MethodEmitter . java to ensure proper handling of boolean types during type casting
change null class name from llvmbitcodeobjectcode to llvmbitcodeaddress . fromlong ( 0 ) in llv
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
test : add unit test for transaction aware cache proxy
added a method to calculate the bounding box in the Mesh class to enhance the functionality of the Mesh class by providing bounding box characteristics
added a target - hash - function option to determine the hashing algorithm to use for computing target hashes to improve flexibility in hashing by allowing users
refactor DefaultConfigurationProperties class to improve code readability to enhance maintainability and facilitate future updates
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight paint alpha in BarChart to improve visual distinction of
removed duplicate entry for pgSgPathPlanMap in sgPathPlanMap to streamline code by eliminating redundancy
updated InfinispanRemoteProducerIT . java to change the expected value from 2 to - 1 to ensure compatibility with the latest Infinispan API changes
added checks for existence and locking in MavenArtifactFetcher and MavenDependencyResolver to improve reliability and prevent concurrent access issues during artifact fetching
updated the fragmentShader string to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES when using the fragment shader
hbase - 25850 fix npe in rsgroupconfiguration ( # 2536 )
added error handling for loading ` JspPage ` in ` TagLibConfiguration . java ` and changed log level from warn to debug to improve robust
updated CustomAnalyzer and TestCustomAnalyzer to use LowerCaseFilter for version - aware token analysis to enhance compatibility with different Lucene versions and improve
added a test for retrieving application information from setPackageArchiveInfo in ShadowPackageManagerTest . java to ensure that the ` getPackageArchiveInfo `
replaced direct method invocation with MethodUtil . invoke for package access checks to enhance security by ensuring package access before invoking methods
added progress event handling for project configuration and task tasks in GradleBuildService and Main classes to improve progress reporting and categorize task and
douniaberrada : remove unnecessary synchronization in androidwebdriver . java
do n ' t throw poolinitializationexception if initializationfailtimeout > 0
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the ` isNative ` field from ` isNative ` to ` transient ` and updated its value in ` JMethodIdTable . java `
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
change class name from ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in ` coremodulehandlerfactory . java ` ( #
refactor TagSupport and related classes for improved clarity and consistency to enhance maintainability and readability of the code
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity for authentication requests and enhance debugging information
[ hotfix ] [ kafka ] fix typo in kafkatabledynamictablefactorytest
added null check for repository registrant in UsersPanel . java to improve error handling and provide user feedback when the repository cannot be found
added support for " . OTF " and " . OTF " file names in SunFontManager . java to ensure compatibility with additional font
refactor type matching logic in AnnotationMatcher . java to improve clarity and functionality to enhance readability and maintainability of the code
updated error message from " OFF " to " SEVERE " in Grep . java to improve error reporting for better debugging
added debug checks before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug logging is
[ surefire ] fix npe in surefireplugin . addexcludes ( )
added methods to determine if the folder should move to the default screen when the home intent is triggered to improve user experience by ensuring the home intent
change maximum bitrate from 110 to 30 in PMS . java to improve performance and reduce resource usage
replaced the method ` getOptions ( ) ` with ` optionsMap . values ( ) ` in ` CommandLineParser . java ` to streamline
trim whitespace from the description returned by MutableDatabaseProperty . java to ensure consistent formatting by removing leading and trailing spaces
changed the output filename path in XOMParserTest . java from " filePath / " to " j8022548 . out " to simplify
( chore ) camel - besu : remove unused pid parameter
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to loaded music , sound ,
removed unnecessary imports from OnBeanCondition . java to streamline code and improve readability by eliminating unnecessary dependencies
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
set the default value of lrPauseButton to false if it ' s not null in CPUFeature . java and MemoryFeature . java to ensure
refactor account preference handling by replacing ` PreferenceCategory ` with ` mAccountsPrefCategory ` and replacing ` PreferenceMultiline ` with ` Preference
fix : do n ' t send ' available ' packet if it ' s not already available .
refactor StringBuilder initialization to use a conditional initial capacity based on utflen to ensure that the initial capacity does not exceed Integer . MAX _ VALUE
added a property value " spring . metrics . export . statsd . enabled : false " to the configuration in WebEndpointsAutoConfigurationIntegrationTests
refactor InterruptedException class to improve exception handling logic to enhance code readability and maintainability
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future updates
refactor connection handling logic in ConnectionCheckOperation . java to streamline SSL connection checks to improve code readability and maintainability by reducing
http : / / issues . apache . org / jira / browse / amq - 4898 - fix argumentarraymessagemapper to
added a check to ensure ` idxObj ` is an instance of ` IndexableDSpaceObject ` before processing to prevent potential ` ClassCastException `
replaced ` sExemptOfPasscodeActivites . add ` with ` i . setFlags ( Intent . FLAG _ ACTIVITY
refactor : remove deprecate @ deprecate from patternparameterconfigurator ( # 2338 )
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added a null check for the drawable to
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added a null check for the root variable and collected components in DynamicStyle . java to avoid potential NullPointerExceptions when the root is null
add a method to update confusionmatrix in testclassifier and test sentence
change variable name from ` lastSampleInError ` to ` lastSampleOk ` for consistency to improve code readability and maintainability
added unit tests for ` getConnectedDevices ` and ` getConnectionState ` methods in ` ShadowBluetoothHeadsetTest ` and ` ShadowBl
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java and Property
added " clone " and " finalize " methods to the set and introduced a constant for the finalize method to enhance functionality by allowing the final
added null checks for counters object and improved logging messages in IntegrationTestBigLinkedList . java to ensure appropriate logging and handling of null counters
do n ' t call cangetinstanceinfo if instance info be not support
updated the ` setRegisteredServiceFilter ` method to use ` serviceId ` instead of ` service ` to ensure that only valid service IDs are processed
added null check for getActivity ( ) before calling runOnUiThread to prevent potential NullPointerException when getActivity ( ) is null
( chore ) camel - axon : use logger instead of logger
added setter and getter methods for stringType in DatabaseAdaptor and JDBCSessionDataStore classes to allow customization of the string type used for database operations
updated UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " and added exception handling
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods in ` SessionState ` to improve code
refactor TaskletAdapter class to improve code readability to enhance maintainability and facilitate future updates
[ drools - 2200 ] fix dmntableimpl . evaluateall ( ) to return an empty map
texturemap : make sure texture map creation finish before move on
added a tooltip text to the showCGCP checkbox to enhance user experience by providing context - sensitive information
replaced calls to ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( i ) ` in EnumFactory
add mnemonic text to retarget action ( # 3390 )
do n ' t try to use a simple label if it ' s not a simple one
changed the value of BRIGHTNESS _ FACTOR from ` intValue ( ) ` to ` doubleValue ( ) ` in ` BindingConstants .
add ` ` context ' ' and ` ` date ' ' to ` ` revision ' ' history entry
added a admin parameter to the createUser method and implemented listUsers method in HomekitAuthInfoImpl to enhance user management functionality by allowing admin users to
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new Test
( chore ) camel - dynatrace : remove unnecessary ' % s ' from log statement
updated method signatures in Context and Response classes to improve clarity and consistency to enhance code readability and maintainability
added setcapabilitiesFromSpongeBuilder method to set capability from NBTTagCompound to ensure proper handling of capability data from NBTTagCompound
updated the assertion in LifecycleUtilsTest to compare the execution ID using the binding object instead of a default value to ensure the test accurately verifies
added contract type validation and modified the contract creation process in Wallet . java , updated contract response handling in GetContractServlet . java , adjusted transaction handling in TriggerSmartContractServlet . java , and improved error reporting in Util . java to enhance contract validation logic , streamline contract retrieval , and improve error handling for better maintainability and debugging
added multiple package - info . java files for the ` com . ibm . dtfj ` and ` com . ibm . lang . management
replaced synchronized block with a while loop for adding nodes in DocumentsWriterDeleteQueue to improve performance and ensure thread safety when modifying the tail
added a check to prevent duplicate JavaFileObject entries in JavadocTool . java to improve efficiency by avoiding unnecessary parsing of duplicate files
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to ensure correct IPv
added support for adding new user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in handling OAuth token password grants
added a new constant ` c ` and updated language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to enhance language handling
replaced instances of ` MoreExecutors ` with a new ` MoreExecutors ` class and refactored related imports to improve code organization
added HTTP headers for caching and expiration in LoginService and FormAuthenticator classes to improve response handling and ensure proper caching behavior in the application
updated error logging to include exception message to improve debugging by providing more context in error messages
updated imports and test class names in HSSFTests and TestEmptyDocument classes to improve clarity and organization of test cases related to H
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added a null check for the output file before retrieving the absolute path to avoid potential NullPointerExceptions when the output file is null
added import for ExternalResourceControlPriority and set access controller priorities in Java2DRenderer . java to ensure proper execution order of access control processes
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the build does not fail on unsupported fonts on Windows machines
changed the visibility of the HotspotThreadMBean from private to private final and refactored CPU time retrieval logic to enhance immutability
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that whitespace checks are only performed when there are no comments
updated assertions in SimDistribStateManager and TestTriggerIntegration to use greater than 100 values instead of equal values to improve clarity and accuracy
updated file path comparisons to be case - insensitive in DatabaseChangeLog , RanChangeSet , and NotRanChangeSetFilter to ensure case -
added a method ` getString ` to retrieve a string value from the ` map ` to provide a default value when the key is not found ,
updated time formatting to support military and non - military timestamps based on locale settings to enhance flexibility in displaying time
nifi - 12690 return empty list if no connection to process
refactor keyboard focus handling in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
updated the canonical path handling in the App . java file to ensure proper formatting of the file path to avoid potential issues with path separators
make sure we do n ' t create a new matrix , a suggest by valerybokov
added import statement for Message class in GenericMessage . java to utilize Message functionality in the application
[ flink - 20513 ] [ sql - client ] fix sql query in postgresconnector .
updated filter handling in AquaFileChooserUI to include a check for file filters before setting the file filter to ensure the filter is only
fix synchronization issue in p2p transport manager
updated Boolean handling in ArrayPtg . java and added a new test method in TestPtg . java to improve boolean representation and ensure correct
refactor import statements in PGtokenizerTest . java to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes to improve clarity and functionality of variable trans
added a sequence SQL statement to create a default value for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment functionality
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative byte values and prevent potential issues with negative
added assertions to check for " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " in ImageParserTest . java to ensure
updated parent assignment in Component . java to ensure proper retrieval of the parent component ' s parent
updated import statements in multiple Java files for consistency to improve code readability and maintainability
replaced occurrences of ` NativeCrypto . ENGINE _ finish ` with ` NativeCrypto . ENGINE _ free ` and added ` NativeCrypto . ENGINE
added methods to handle iteration events in InterleaveControl , CounterController , CounterConfig , and IterationListener classes to improve event - driven architecture
refactor resource management in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper release of resources to prevent memory leaks
added a call to delete logs in TestRecovery . java to ensure logs are properly cleaned up after recovery processes
added a check to launch a new activity if the URL contains " twitter : / / " to enhance user experience by allowing direct access to external
added a client instance and awaiting the host status in DeploymentGroupTest . java to ensure the host status is verified before proceeding with tests
changed logResult from false to true in VisibilityController . java to enable the logging of label listings
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to allow more flexible connection management
removed System . out . println statement from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve code
added support for handling " fraction " resource in the Resources class to enable support for fractional resources in the application
removed file write confirmation check from BasicFrame . java to streamline code by eliminating unnecessary checks
added assertions for tagGroupId and tagArtifactId in the findNewerDependencyVersion method to ensure that the tagGroupId and tagArtifactId are
hbase - 25850 namespacestatemanager should throw quotaexceedexception if a table can not be create in a namespace (
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
updated TestFuzzPreLoop . java file to improve test coverage for fuzz functionality
added a conditional check to set f0 to 0.0 if it is less than 0.0 to ensure f0 does not fall below
updated connection catalog retrieval logic and added null checks for primary column and foreign key columns to enhance robustness and prevent potential NullPointerExceptions
make encoders thread - safe by use a synchronized map
added SharedPreferences support for handling empty screens in Workspace . java to improve user experience by preventing unnecessary processing of empty screens
added a warning log for deprecated cucumber - needle in NeedleFactory . java to inform users about using cucumber - cdi
refactor theme management in ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime to improve code clarity and functionality to enhance
updated error messages in VerifyFast . java to use ` Arrays . toString ( array ) ` instead of ` String ` for better readability to
no effective change - remove @ system _ versioning _ alter _ history
added a condition to check if the property node is an IdentNode and updated prototype property access methods to enhance type safety and improve prototype property access
added a random ( ) parameter to the shuffle method in TestFilterDirectoryReader . java to ensure consistent shuffle behavior with varied randomness
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to differentiate between remote and known users to improve user experience by providing clearer
updated path handling in CookieRetrievingCookieGenerator to ensure a default path is used when it is blank to improve robustness by preventing potential
removed redundant closing braces in Jvm and JvmJvmstatModel classes to improve code readability and maintainability
changed the variable declaration from ` cacheName ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to ensure that the
updated comparison logic in ValidationResult . java to compare against the variable ' ve . pageNumber ' instead of ' = = 0 ' to ensure that the
added a condition to check if the focused widget is equal in UIDropdown . java to ensure that highlighted items are only highlighted when the currently
fix formatting of method parameters in SoundUtil . java to improve code readability and maintainability
refactor ` getPlatformFlavorsOrDefault ` method to utilize ` getAppleCxxPlatformFlavorDomain ( ) ` instead of
simonstewart : add test to verify that the sql syntax be correct
corrected the spelling of " onConnect " to " onAccept " in ServerSessionListener . java and AbstractHTTP2ServerConnectionFactory .
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test security policies and logger retrieval to ensure proper error handling and thread context management during
added a data field and its getter method in PathSharingContext , modified sharedMap initialization in ScriptedProcessor , ScriptedDecideRule ,
fix unsafe . getobjectvolatile to use castexact instead of unsafe . getobject .
added support for " NEXT VALUE FOR " functionality in NextValExpression and updated related tests to enhance functionality for handling multiple row values in SQL queries
improve error message for non pre - cached resource bundle
refactor BoundedLocalCache to improve buffer management and add a test for clearing pending writes to enhance cache efficiency and ensure pending writes do not
added exchange - specific parameters for Leverage _ Level in QuoineExchange and implemented a new order direction in QuoineNewMarginOrder
added a method ` boundInitialization ` in ` PropertyDescriptor . java ` and created a new class ` Test7192955 . java ` with
replaced the usage of failsafeWidth and failsafeHeight with a new SetDisplayModeCallback interface in LwjglApplicationConfiguration to
added null check for buttonsAwatingRelease in Tabs . java to prevent potential null pointer exceptions when interacting with the parent form
refactor wrap width calculation in LineCell . java and set wrapWidth to Double . MAX _ VALUE in StyledTextAreaSkin .
updated formatting in XSLTErrorResources _ it . java to improve code readability and maintain consistency
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for parameter values
danielwagnerhall : use string . format instead of string concatenation for string concatenation
replaced the use of ` getNamespaceContext ( ) ` with ` getNamespace ( ) ` in ` StaxXmlPullParser . java ` to
added configuration for nested joins in TestBase , TestNestedJoins , and TestOuterJoins classes to enable conditional execution of nested joins based on configuration
server : do n ' t query root admin only if the caller be the root admin
added support for caching class paths in SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to enhance compilation task management
added Hive configuration for Hive authorization manager in TestMsgBusConnection . java to ensure proper configuration for Hive authorization settings
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s assertThat
fix nullness warning in util . createhandler ( )
fix offset mem size calculation in symbolmapreaderimpl . fix # 2690 ( # 2691 )
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and improve readability
removed the Reflection . java and TypeConverters . java files and updated the TypeConverters . java package structure to streamline the codebase by elimin
refactored ` ThreadlessExecutor ` to remove the ` sharedExecutor ` parameter and added getter / setter methods for ` finished ` and `
refactor error handling in DateTimeFormatter and add new test cases in TestDateTimeParsing to improve robustness of date formatting and ensure proper handling of null
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related method calls to improve clarity and accuracy in handling KB
added a new class ` T7034495 ` with interfaces ` A ` and ` B ` with generic types ` C ` to prevent
replaced a do - while loop with a while loop in LotsOfEvents . java to improve code readability and efficiency by elimin
refactor conditional checks in TransclusionDecideRule . java for clarity to improve readability and maintainability of the code
( chore ) camel - micronaut : remove unused method
added unit tests for NameRecord and Area3DPtg in TestBugs . java to ensure correct handling of name definitions in Excel workbook
updated MindIcon creation to handle cases where the name contains a slash to ensure that the description is only included when it does not contain a
updated onHomeIntent method to accept a boolean parameter for internal state handling to improve flexibility in handling home intents based on internal state
replaced direct usage of ` getPreferDependencyTree ( ) . orElse ( false ) ` with a boolean variable ` preferDependencyTree ` to
added a method to show file details with an active tab parameter across multiple activities to enhance user experience by allowing specific tab display options for files
corrected the spelling of " $ apply " to " apply " in multiple Java files to ensure consistency and accuracy in function naming conventions
added randomization logic in MinimalEncoder . java and updated assertions in HighLevelEncodeTestCase . java to enhance randomness and correctness
updated header descriptions and parameters in SourceBuilder . java to include required , since , and type values to enhance clarity of parameter descriptions and improve
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates when data changes
removed the method setDefaultWALSyncMode from ShadowSQLiteConnection . java to streamline the code by eliminating unnecessary functionality
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct handling of
remove unused methods from DefaultS3CrtAsyncClient to improve code readability and maintainability
updated test cases in ParserTest . java to reflect the correct number of stream out - of - bounds lengths to ensure tests accurately reflect the
updated assertion message to include the collection content to improve debugging by providing more context about the collection size
[ fix ] if condition be not equal to truesuccessor , bailout should be bailout or graalInternalError .
ggb - 2118 fix image2d render issue on android
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` limit ` to the ` getOrderBook ` method and updated related classes to accept it to allow users to specify a limit
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple files to align with the new package structure for better
added stream read constraints to the ObjectMapper factory in StandardDataFlow . java to ensure proper handling of string length limits in JSON processing
updated the retrieval of the engine string to use an empty string instead of a configuration string to ensure that the engine configuration defaults to an empty string
renamed ` FullIterator ` to ` WheelIterator ` and updated references in ` TimerWheel . java ` and ` TimerWheel
improve error message when a bug pattern can not be find
added a constant WAIT _ CHUNK _ IS _ READY _ IN _ SECONDS and refactored the loop condition in LocalChunkProviderTest to
changed the visibility of the menu item from true to false to ensure the menu item is not displayed in the user interface
refactor DefaultResultSetHandler to improve handling of discriminator results and add a new Contract class to enhance code clarity and facilitate contract
added null check for defaultHome and unregistered the receiver if it is null to ensure proper handling of null cases and prevent potential null pointer exceptions
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary dependencies
removed unnecessary cast from FileDisplayActivity to direct method calls in FileDetailFragment and OCFileListFragment to simplify code and improve readability by
removed leading and trailing spaces from the token in ConfigAttributeEditor and added a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure
modified ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux files to refactor code structure for improved readability and maintainability
svm : make dynamichub . singlemodulereference public and add unnamedmodule method to target _ lang _ classloader
added conditional logic to determine the relationship type based on the existence of " pg _ " in DatabaseMetaData . java to ensure correct identification of database
chore : deprecate agent . tier _ ENTERPRISE _ PLUS _ VALUE and rename agent . tier _ ENTERPRISE _ PLUS _
updated the RQST field ' s case value from - 1 to 1 in ThriftHiveMetastore . java and HiveMetaStore
added a new module - info . java file containing module exports and requires for the ` com . speedment . runtime . core ` module to
added flush state handling and fill state management in SslConnection . java to improve data flushing and fill state management during SSL connections
updated Log4j2LogDelegateFactory to return a boolean and modified LoggerFactory to create a new NoExceptionInInitializerErrorTest class to
refactor ExecutionEnvironment and TestHelper to introduce server VM checks for improved test reliability to ensure tests are only executed when the server
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
updated the class name from " org . postgresql . ssl . LibPQFactory " to " org . postgresql . ssl . LibPQ
disabled the @ Test annotation in TestInterProcessSemaphoreEdges . java to prevent the test from failing due to a known issue
sort theme keys in EditableResources . java to ensure consistent ordering of resource names for better readability
added a new OSvTerminal class and updated TerminalFactory to handle OSV terminal support to enable improved terminal functionality for MacOS users
added support for additional file extensions " . gs " , " . gr " , and " . grs " in ClassType . java to
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to ensure predictable iteration order and maintain predictable iteration order
added a condition to iterate over the size of names and values in XPathEntityProcessor . java to ensure that the loop does not exceed the size
updated WebSocketPolicy . java for improved WebSocket handling to enhance performance and reliability of WebSocket connections
changed ` readPhoneStatePermission ` and ` accessWifiStatePermission ` from static to instance variables in ` ShadowTelephonyManager `
standardmessagelogger : do n ' t use template and origin - based resolution if they do n ' t exist
updated the instantiation of ` TraceMethodVisitor ` , ` TraceClassAdapter ` , and ` CheckClassAdapter ` to use ` Class < ?
added a new file ` LoggingAuditService . java ` and ` UaaAuditService . java ` to implement user authentication and auditing functionality
added null checks for temperature properties and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robust
fix a bug where beandefinitioninjectprocessor do n ' t work for abstract class in aop proxy
camel - 16400 : camel - http - add support for http . proxyhost and http . proxyport system property .
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to support new features and
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of ` jdkSerialFilter
improve log message about the pool size of camelcontext .
replaced the ` forceFinished ( true ) ` method with a direct call to ` forceFinishScroller ( ) ` across multiple classes to
updated the method ` ensureRealtimeClusterIsSetUp ` to use ` ConfigUtils . applyEnvVariables ` instead of ` TableConfig ` to
added methods to check if a validation report is an error and updated error status handling in multiple classes to improve error reporting and provide clearer error
refactor inline QSB handling in InvariantDeviceProfile . java to improve clarity and functionality to enhance readability and maintainability of the
updated the ` createClassPath ` method to include ` throws Exception ` and modified URL decoding logic to improve error handling and ensure proper decoding of URLs
updated regex patterns for ' 10 ' and ' ( . * ) ' in TransformSteps . java to enhance flexibility in matching different input formats
fix npe in toolkit and javac22d when no image be set
updated timeout parameters in FaultToleranceTest . java to use a constant instead of a hardcoded value to improve code readability and maintainability by
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environment class to ensure the application connects to the correct Docker image for configuration
[ jbrules - 2852 ] fix flakiness in knowledgeparsertest
renamed AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve clarity and consistency in naming conventions
replace createHardLink with copyFile in SnapshotTaker . java to ensure target directory exists before copying to avoid errors during file operations
updated method names from ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in method naming
[ pytorch ] add device check to mxnetmanager ( # 1188 )
added a conditional check for XML document type before calling visit methods to ensure that only XML documents are processed to avoid potential errors during XML processing
updated test classes to use JUnit4 and InstrumentationRegistry instead of InstrumentationTestCase to ensure compatibility with the latest testing framework and improve
added new GasLimitRule and ParentGasLimitRule instances to the CommonConfig class to enhance the system ' s capability to manage gas and diff
changed the visibility of ` setupData ( ) ` from public to private in multiple test classes to restrict access to ` setupData ( ) `
renamed the variable ` autocommit ` to ` runInTransaction ` and updated related logic accordingly to better reflect the purpose of the variable related
added null checks for listener in TripleServerStream . java to improve robustness by preventing potential null pointer exceptions
[ hotfix ] [ runtime ] update restartstrategy documentation to include site url
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing for discount categories to
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor launcher event logging in Launchable . java to use try - with - resources for better resource management to ensure proper closure of resources and
refactor StreamExecDeduplicate class implementation to improve code readability and maintainability
[ hotfix ] [ kafka ] log error when send kafka message to topic
resolved - issue batch - 130 : simpleelasticsearchpersistententity and simpleelasticsearchpersistentproperty should not be immutable
do n ' t set undefined in segment3d if point be infinite
added gesture scroll handling and velocity tracking in AskGestureEventsListener . java to improve user experience by enabling smoother scrolling with respect
hunspell : do n ' t consider the order of the key in the ngnramestimator .
updated imports from ` cucumber . runtime . ScenarioScoped ` to ` io . cucumber . core . runtime ` across multiple
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and functionality of folder icon information
updated the method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to
added a new file TestSkeletonPredicates . java to implement a testing framework for loop predicates to ensure correctness of loop unrolling and stress
modified the ` SelectionHighlighter ` class to replace ` selectionEndNode ` with ` Box ` and added a setter for the ` handler `
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to use it for string conversion
camel - 19751 : disable test that do n ' t run reliably on the apache ci
updated the condition in ` WaitForSingleObject ` from ` ! = 0 ` to ` ! = 0 ` in ` JansiWinSys
added null checks and buffer capacity before setting methods in BufferUtils . java to prevent potential NullPointerExceptions during buffer operations
updated the data directory path assertion from " data / " to " data / File . separator " in TestSolrDiscoveryProperties . java to ensure
updated platform detection logic in AutoUpdaterServerProperties . java to handle Windows and macOS environments to ensure compatibility with macOS by adding support for
updated Lock constructor to accept a String lock name instead of a File object to improve clarity and usability by using a more descriptive variable
replaced " android . widget . TextView " with " apps _ view " in the waitForLauncherObject method to improve clarity and accuracy of
updated variable references from ` this ` to ` ClientDatagramEndPoint . this ` for consistency to ensure proper reference to ` ClientDatagramEndPoint
updated GET _ STEP _ EXECUTIONS string to include " order by STEP _ EXECUTION _ ID " to improve the order of results returned
replaced the return value of ` Buttons . LEFT ` with ` - 1 ` and updated button handling in ` LwjglInput
added validation for submit _ approve and submit _ reject parameters in TaskRestRepositoriesIT . java to ensure that the workflow behaves as expected
replaced hardcoded logger references with a static logger instance across multiple classes to improve consistency and maintainability of logging across the codebase
updated access token expiration time handling in ` SsoAccessTokenProvider ` and added a new test method in ` SsoAccessTokenProviderTest ` to
[ geos - 8470 ] skip test setup on window
added default return statements to GreetResourceMockedTest , OciMetricsCdiExtensionTest , and OciMetricsCdiExtensionTest
refactor conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
added null check for MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE 0 command to avoid potential NullPointerException when accessing MediaDatabase
updated the ` metricsContext ` reference from ` metricsContext ` to ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure
updated conditions for setting the output string based on filesCount and foldersCount in OCFileListFragment . java to improve clarity and functionality of
changed the default value of " HashKnownHosts " from " yes " to " no " in ScpServerTestSupport . java and updated
refactor SourceVersion class to improve code structure to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` for verifying thread name and thread group behavior to ensure that the thread factory behaves correctly
refactor lock period retrieval to use a dedicated method for better encapsulation to improve code maintainability and ensure correct lock period handling based on dynamic
added a new TicketModel instance in EditTicketPage . java to initialize the ticket model for further processing
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimiss apps from predicted list
updated constructors in multiple assertion classes to include specific class types to ensure compatibility with various assertion types for improved functionality
added a new menu item for quote functionality and updated related constants in TweetActivity . java to enhance user experience by allowing users to quote twe
add comment to make sure we do n ' t have to wait for interrupt .
renamed the variable ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related methods accordingly to improve clarity and
added a conditional check before offering and closing failures in ServerHTTP2StreamEndPoint . java to ensure failures are only processed when the result is
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to clarify
added ThreadSafe annotation to CheckpointsCleaner . java to ensure proper thread safety for concurrent access
updated import statements and method signatures in MockRestAdapter , RestAdapterTest , and RestAdapterTest to use Subscriber instead of Observer to improve code
reformatted the code for creating the ` components . yml ` file in ` ComponentPresetManager . java ` to improve code readability and maintain
added a new configuration option for unique column names in Hive result sets and updated column qualifier handling in TestJdbcDriver and TestJdbcDriver2 to
refactor voice and audio effect handling in MaryGUIClient . java to improve code organization and maintainability by separating concerns
added session validation to throw an exception if the session is invalid to ensure proper error handling for invalid sessions and improve test coverage
remove unused exceptionhelper . java ( no longer use )
updated the key pair generator initialization from 256 to 255 to accommodate longer key pairs for improved security
added a call to set the codec in TestBlockPostingsFormat3 . java to ensure compatibility with the always postings format for improved
[ hotfix ] [ runtime ] log empty header list in checkpointrangeaddr
added support for RSA / ECB / OAEP algorithm in OperatorHelper . java to enhance compatibility with OAEP algorithms and improve error
douniaberrada : replace darwin _ aarch64 . class with macos _ aarch64 . class
added a warning log for IOException and SecurityException in DebugSourcesResolver . java to improve error handling and provide informative logging for source resolution failures
removed unnecessary conditional check for UNIX OS in AbstractTest . java to streamline code logic for better readability and performance
added exception handling and improved file management in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to enhance error reporting and ensure
replaced instances of ` BufferUtils . newDisposableByteBuffer ` with ` BufferUtils . newUnsafeByteBuffer ` across multiple files to optimize memory
set the USE _ PIPELINE _ DOWNLOADER flag to true in FastSyncChainDownloader . java to enable the use of pipline
removed ZONE _ OFFSET setting in DateFormat . java and added a new test class Bug7130335 . java for Moscow
refactor code to remove unnecessary ` mRollo . mState ` references and improve readability to enhance code clarity and maintainability by
cloudstack - 10363 : fix npe in vr router if default hypervisors do not exist
refactor StringBuffer class for improved performance to enhance efficiency of string concatenation operations
added a line to set the rule UID to the rule object to ensure the rule reference the correct UID for proper functionality
added a null check for the listener before unsubscribing and removed it from the registry to avoid potential NullPointerExceptions when the listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to allow customization of JSON output formatting
change access modifier of ACCESS _ TABLE array from private to public to allow access to ACCESS _ TABLE from outside the class .
updated error message formatting in DataSourceInitializer . java and DataSourceInitializerInvokerTests . java to improve clarity and consistency in error reporting
make xmpptransport . run ( ) protect so that it can be override by subclass .
refactor multiple control - related classes to improve code organization to enhance maintainability and readability of the codebase
added a new parameter ` isUpgradeSuspended ` to the ` AmbariManagementControllerImpl ` class to track upgrade suspension state
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers .
removed the declaration of wfields in Resolver . java to streamline code by eliminating unnecessary variable declaration
added default key size settings for encryption and signing in OAuthProperties to ensure consistent encryption and signing configurations across the application
hbase - 25836 addendum fix npe in htableprocedure # getcolumnfamilycount ( )
replaced the ` AllowedResourceAliasChecker ` with a lambda expression in ` SampleWebJspApplicationTests . java ` to simplify the alias checking
refactor ObjectInputStream , ObjectOutputStream , and Serializable classes to improve code organization and maintainability
[ java ] add reset ( ) method to cluster interface .
updated the incrementing of currentChunkID in ChunkedWriter . java to ensure the correct file path is used for chunk processing
added a new abstract class AbstractJobExecutor to provide a base class for job execution handling to provide a base class for batching operations that require
added replayFuture variable assignment and modified return statement in RecoveryStrategy . java to ensure proper handling of replaying futures and improve control flow
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added service ID retrieval logic in AbstractConsulClient to ensure service IDs are only returned when discovery is enabled
replaced instances of ` Float . floatToIntBits ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for hashSalt to
add option to verify runtime compilation framestates during bytecode parsing .
added aggTimeBucketMillis to currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure accurate time calculations by accounting for
added abstract method handling in CallsRealMethods and created tests for AbstractThing in CreatingMocksWithConstructorTest to ensure correct answering of abstract
refactor methods in NashornScriptEngine and Context to use Class directly instead of String for package access checks to improve code readability and
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration tests to improve test setup and ensure proper initialization of plugin data
renamed ` dtm ` to ` model ` and updated font handling in ` ContributionListPanel . java ` to improve code clarity and
added functionality to check for the " has - touch - interaction - service " request in multiple classes to improve the handling of interaction status based on
removed unnecessary try - catch block in ConnectAction . java to streamline code for better readability and maintainability
updated type parameters from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` and related methods to improve type specificity and
added new classes ` ArrayHelper ` , ` Comparables ` , ` Enums ` , ` NativeRegExp ` , and ` Objects ` to
added handling for HOME and END commands in the Less . java file to improve user interaction by allowing home and end operations on the terminal
removed synchronization around retrieving connected plots in PlotHandler . java to simplify code by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use Intent . createChooser for launching a chooser to improve code readability and maintainability
removed the public modifier from the Roster constructor to enforce encapsulation within the Roster class
added support for basic constraints in certificate generation to enhance security by ensuring only valid basic constraints are accepted
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address the failure caused by incorrect
simplified the assignment of precisionStep in TrieDateField and TrieField classes to improve code readability and maintainability by reducing red
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to simplify the codebase by eliminating unused components
added a new file ` ArrayLength . java ` that tests reflection for array types to ensure that the ` getField ` and ` getDeclaredField ` methods
wait for the hazelcast process to finish before shut down it
replaced ` @ Singleton ` with ` @ PostConstruct ` and refactored the ` save ` method in ` ApplicationSettingsService ` to
change assertion from ` value > = 0 ` to ` value > 0 ` and adjust the logic for setting ` newValue ` to ensure correct handling
updated thread name field type from charArrayToString to stringOopToString to ensure compatibility with Java ' s String type for better performance
updated the DEFAULT _ RAND _ SEED constant from ` System . currentTimeMillis ( ) ` to ` 42 ` in Lucene90Hns
add stroke and font to java2d to allow customization of stroke and font
[ calcite - 2231 ] support window and group by with dynamic star column name ( jesus camacho rodrig
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find nested children records to facilitate
added import for Messages and set a status code in HTTPServer . java to enhance user experience by providing a specific warning icon
fix mouseevent . getmodifiers ( ) and mouseevent . getmodifiersex ( ) , remove deprecate method
node cost : fix cycle for amd64countleadingzeronode and amd64counttrailingzeronode
( chore ) camel - as2 : fix npe when disposition notification be not set
updated Locale class to improve localization support to enhance user experience by providing better language options
added a clearLogButton and clearLog method to ErrorConsoleController , ErrorConsoleViewModel , and LogMessages classes to provide a way to
removed unnecessary whitespace in mRecentsAnimationController initialization to improve code readability and maintain consistency
replaced ConsolePlayer with LocaleHolder for caption retrieval and updated method signatures to use Set instead of Map to improve localization support and simplify caption management
add connectionpooling ( ) method to abstracttest and increase execution count to 50
danielwagnerhall : add support for opera blink in the default driver session
do n ' t show error dialog when download fail
added new Lifx product entries and updated feature settings in LifxProduct . java to enhance the product model with additional options for improved visual
added asynchronous request setup and completion handling in OverseerCollectionProcessor , CollectionsHandler , and CollectionsAPIAsyncDistributedZkTest to improve
refactor PostgresDatabase and PostgresDatabaseTest to use assertPrimaryKeyName method instead of getBytes for primary key name generation to improve code read
updated LogPanel and SummaryPage to use objectId as a reference variable instead of a hardcoded value to improve clarity and ensure consistent retrieval of
changed the unit of the parent tail vector from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure correct
added a ` browserDestroy ` method to the ` AndroidImplementation ` class and modified the deinitialize method to ensure proper cleanup of the browser component
added a call to ` waitForActiveCollection ( " readApiTestViolations " , 1 , 6 ) ` in ` AutoScalingHandlerTest .
updated loop structure in ScreenTerminal . java and removed unused imports in Tmux . java to improve code readability and maintainability while ensuring
updated the method to check for controller states in SoftResetAction . java to ensure accurate detection of controller states during soft reset operations
disable on - disc stream cache to speed up texture pack reloading
added logic to retrieve the DLNA resource for the ` parentFolder ` variable in ` Request ` and ` RequestV2 ` classes to
server : fix typo in networkofferingvo . ispersistent and return persistent instead of ispersistent
added a close method to the FileOutputStream to ensure the temporary file is deleted on exit to prevent resource leaks by ensuring the temporary file is deleted
added handling for HTTP 403 responses in StandardGitHubRepository . java to improve error reporting for forbidden responses in the repository
log4j2 - 1349 add a method to get the original message factory for the messagefactory2adapter
suppress brokenserializableread warning in test
updated regex pattern in Version . java to include minor version numbers to ensure compatibility with the latest version formats
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience by allowing more time for tooltip updates
refactor ProjectCommand to use passedInTargetsSet instead of getArgumentsFormattedAsBuildTargets for improved clarity to enhance code readability and
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time in UTC timezone
refactor MediaSessionConnector class for improved session management to enhance performance and maintainability of media session handling
use endpoint . getsslengine ( ) . getsslsupport ( ) instead of jssefactory .
updated accuracy display in GpsLoggingService to use the accuracy instead of the altitude to ensure accurate accuracy representation in the user interface
added a check for futures enabled in BinanceExchange and updated BinanceAccountService to check for it before adapting future account information to ensure
refactor admin account management to use table instead of account data to improve organization and clarity of data structure
added a call to set the accept queue size in ThriftHttpCLIService to allow dynamic adjustment of the maximum worker thread count for improved performance
replaced the use of ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
added a check to return true for SSL schemes in JmsFactory to ensure proper handling of SSL schemes in JMS connections
replaced ` UserException . parseError ` with ` UserException . validationError ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration variable in GCInspector . java to improve accuracy in determining the duration of garbage collection
fix : do n ' t return empty optional for method with line comment
replaced direct memory access with a native method for reading reserved memory to simplify code and improve readability on macOS environments
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 20613 hbaseadmin . getprocid should be protect to allow subclass access to hbase procid
camel - 14263 : camel - cxf should set the service class when invoke the soap service factory bean .
refactor YamlChangeLogSerializer to use a list of maps and dump as a map for database change logs to improve code readability and maintain
updated print statements in SchemaPrinter . java to include a newline character to improve formatting of output output for better readability
removed unnecessary chunk regeneration and improved message messaging in DebugRoadRegen . java and modified SchematicHandler . java to
replaced ` getContext ( ) ( ) ` with ` getActivity ( ) ( ) ` in ` HomeFragment . java ` to ensure proper context
added ` @ GenericGenerator ( name = " native " , strategy = " native " ) ` annotation to multiple classes to enable automatic generation of
removed country parameter from getSystemTimeZoneID method calls to simplify method signature and improve readability
updated BZip2Codec and TestBZip2Codec to include position and remaining in the output stream and modified ByteBuffer allocation in TestBZip
move startlogger ( ) from appw to appw and remove it from web
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified Value . java to use this constant to improve code clarity and maintain
updated string comparisons in GroupManager to use ` equals ` method to improve readability and avoid potential null pointer exceptions
updated Liquibase . java and LiquibaseDropAll . java files to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetGraph ` that returns a new instance of
corrected the spelling of " getMinRowCompactedSize " and " getMaxRowSize " to " getMinRowSize " and " getMe
added a custom type adapter for ArtifactVersion in MetadataCollection . java and changed parentMod and childMods to transient in ModMetadata . java
refactor array manipulation logic in NativeArray . java to handle previous entries more effectively to improve efficiency by avoiding unnecessary deletion of elements when the
updated file handling logic in FileUploader . java to use remote parent path instead of local path to improve file management by ensuring the correct parent file
added a new file UTF8ReaderBug . java to test handling of supplementary characters in UTF - 8 encoding to ensure proper parsing of sup
added unit test base on user forum issue
updated API references from " btcusd @ ticker / dashbtc " to " btcusd @ bookTicker / dashbtc "
added resetAllocation method to SimpleParallelizer and initialized initialAllocation and maxAllocation to ensure proper resource management and initialization of memory allocation
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced ` configProps ` with ` sysProps ` and ` props ` in ` Agent . java ` , and added a new test class
refactor ModelUtils class to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert to improve code readability to enhance maintainability and facilitate future updates
added checks to ensure indices outside the bounds of mLabels before calculating their width and height to prevent potential ArrayIndexOutOfBoundsException when processing labels
added testDelay ( ) and testAbort ( ) methods to multiple classes to enhance testing capabilities for handling delay and abort scenarios
replaced ` get ` method with ` getValues ` for retrieving values in ` MoreLikeThis . java ` to improve performance and readability by
replaced CxxLink with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by using a
disable botania versioning when versioning be disable .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to track the number of files
removed the " - b " argument from the command line arguments in AidlStep . java and updated the format string in GenAid
fix #79 - delete obligation in case of null check
added a comment to the FakeHttpLayer class to indicate that this functionality should no longer be tested
[ hotfix ] [ runtime ] remove unnecessary error handler from embeddedleaderservice
[ scb - 2171 ] use reactivex . list instead of reactivex . list in compositediscoveryclient ( # 3
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ config ] improve jobmanager option description
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` in ` WidgetsFullSheet . java ` to improve code cl
fix classnotfoundexception when woodstox be not present on classpath
refactor test setup in AuditAliasCommandIntegrationTest to use a private ProjectWorkspace variable to improve code organization and ensure proper initialization of test cases
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to streamline code and reduce unnecessary logging
( chore ) camel - cxf : disable test that do n ' t work in this scenario
added error handling for periodical refresh in CachedStore . java to improve robustness by logging exceptions during refresh failures
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and refactored
added a method to check for the default background fill in HSSFCellStyle and updated related color handling in HSSFPalette to ensure
updated ZonedDateTimeFormatterBenchmark . java to improve benchmark accuracy to enhance accuracy of date and time formatting in tests
refactor the buffer update logic into a separate method ` shouldBufferUpdate ` to improve code readability and maintainability by encapsulating the logic
added a null check for motor and stage in SimulationListHandler . java to ensure robustness by preventing potential null pointer exceptions
make / editreplace / editscript / editreplace / editscript more descriptive .
refactor ExtendedMasterSecretExtension to improve code structure to enhance maintainability and readability of the code
changed the declaration of the ` processor ` variable from ` List ` to ` final InputProcessor ` to ensure the variable cannot be reassigned after
added an event listener to handle end of stream when writing fails to improve error handling and provide feedback when the stream has reached the end of the
added " CUBE " to the MySQLDatabase class to support compatibility with the CUBE database
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the rm operation
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to
updated DefaultOkHttpClientFactoryTest to retrieve connection timeouts , followRedirects , connection pool , and hostname verification methods directly to improve code readability and
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor to prevent potential NullPointerExceptions during processing
ggb - 2118 fix for av view with no split pane
modified the jailerMain method to include a boolean parameter for clarity to allow more flexibility in error handling when the data model is
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread notifications in TalonPullNotificationService to enable tracking of pull unread notifications for better user experience
fix nullpointerexception when check if the parent be an object of type object .
updated parameters in Box2DTest , Pong , OrthographicCamera , and OrthographicCamera classes for better memory management to improve
refactor layout manager initialization in ViewPostDetailFragment . java for tablets and landscape orientation to ensure proper handling of null mCommentsRe
changed log level from trace to warn for background operation aborted in CLIService . java to better reflect the severity of the aborted operation
do n ' t print method instance name and flags if the method be abstract .
ggb - 1188 mousetouchgesturecontroller w . runpointercallback ( ) for ie10 +
updated the ` getNotificationUsers ` method to include a device ID parameter to improve user identification by associating notifications with specific device IDs
updated the baseUrl string from " droppr . org / srtm / v4.1 / 6 _ 5x5 _ TIF
updated MotifFileChooserUI to remove property listeners and added a new bug6520101 class for testing JFileChooser behavior to improve
bugfix : do n ' t swallow exception in hollowuirouter
refactor BuildRuleResolver methods to improve type safety and error handling to enhance clarity and maintainability of rule resolution logic
added a condition to hide the transport spinner based on the makingShortcut flag to improve user interface responsiveness by ensuring the transport spinner is displayed
added null check for attributes _ field in ` Attr . java ` and created new classes ` B ` and ` T7043371 .
added backPressed methods to return true if the back button is clicked in multiple fragments to improve user experience by preventing further actions when the back
added support for long view index feature in QueryServices and updated MetaDataClient to use getViewIndexDataType ( ) to enhance flexibility in handling view
corrected the spelling of " v " to " v " in SDRTrunk . java to ensure consistency with Java naming conventions
updated the path handling in PrivateKeyParserTests to use StringUtils . cleanPath to ensure the path is properly formatted before processing messages
simplified the ` diffDropColumn ` method signatures by removing the ` columnPosition ` parameter to simplify the method signature and improve code read
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest
hbase - 25835 add option ` ` no . strict ' ' to disable column family check ( addendum )
[ java ] replace logRecordingChannel with logSubscriptionId in consensus module .
replaced direct calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) `
added a condition to return early if the JSON node value equals " i " in PoloniexStreamingService . java to optimize performance by
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
updated resource bundle application to include default locale and system class loader to ensure resource bundles are applied correctly across different locales
[ j2kt ] add normalizationpass for kotlin array creation .
updated PerSegmentSingleValuedFaceting . java to handle missing counts more effectively to improve efficiency by avoiding unnecessary incrementing when no counts are
fix authorlist not be null when there be no author
added OSGiTest class and modified module - info . java to include dependency checks for Gson annotations to ensure proper functionality and reliability of
nifi - 5338 : fix concurrency issue when enable controller service
hbase - 25836 htable . waitforallpreviousopsandreset should not clear buffer on failure ( chunhui )
fix ( annotation ) : fix checkstyle violation in ctscanner
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and its implementation in ` Property ` and ` SimpleFeatureImplTest
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify error handling by eliminating
refactor RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future updates
added a method to enable logging in the JavaCompiler class to ensure consistent logging behavior across different components
added a new class ` InJavaSourceSet ` and updated ` UsesJavaVersion ` to use ` Optional ` instead of ` Nullable ` to
updated resource loading in TestGDALParser . java to use a variable for the FIT filename and added a check for external parsing to ensure
added a new method ` createGetter ( Object obj , String attribute , boolean true ) ` to the ` ReflectionHelper ` class to provide a
removed the conditional check for useExternalStorage in DirectUpload . java to simplify the code by eliminating unnecessary conditional logic
added a new constant ` INDEXER _ NO _ COMMIT ` and modified cache handling to use ` NutchConfiguration ` instead of `
fix createvolume command to fail if disk offering id be not specify
updated assertions in ToHtml . java and BaseTestCellComment . java to check for non - empty notes instead of emptiness to ensure
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle specific error types in ` Issue382 . java ` to improve error handling
replaced the use of ` RuntimeException ` with ` Integer . signum ` and simplified the return statement in ` PositionUtils . java ` to improve
added a condition to hide the text holder when certain conditions are met to improve user interface by hiding unnecessary text when not needed
fix ( ast ) : fix bug in ctimportimpl . getimportkindfor ( ctreference )
danielwagnerhall : use getprofile ( ) instead of getprofile ( ) in firefoxdriverservice
make liquidblock extend bucketpickup , close # 54688
http : / / issues . apache . org / jira / browse / amq - 2902 - make sure we do n ' t
updated the time zone to use " America / Los _ Angeles " instead of " PST " to ensure accurate representation of the
rename ` existingObservation ` to ` distinctObservation ` for consistency and clarity to improve code readability and maintainability by using a
updated LuceneTestCase to include annotations for Nightly , Weekly , AWAITSFIX , SLOW , and BADAPPLES
renamed the method ` createLogger ` to ` getOrCreateLogger ` and updated logger initialization logic in ` SQLEditorSupport . java
[ fix ] graalcontext . getproxy ( ) should deny access to certain class .
improve performance of image . getrgb ( ) / setRGB ( ) / get ( ) in pgraphics2
updated verifyAndAddTransactionalProperties calls to include partition data to ensure transactional properties are correctly associated with the partition data
refactor overlay scroll logic in Workspace . java to improve readability and maintainability to enhance clarity and maintainability of the logic for handling
hhh - 14650 - add unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator to facilitate
replaced calls to ` shouldNotReachHere ( ) ` with ` shouldNotReachHereUnexpectedInput ( string state , object input ) `
added a test for spying on a class retaining state in PartialMockingRetainsStateTest . java and created a new MockWith
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing of
modified SecurityUtil to handle null UserGroup instances more gracefully to improve robustness by handling potential exceptions during action execution
added error handling for audio buffer allocation in OpenALMusic . java to improve error reporting by including the error code for better debugging
camel - 14263 : camel - endpoint - add support for resolve reference parameter in quartz component
updated precision and scale handling in RexNodeConverter . java to improve accuracy of decimal type creation based on precision and scale
replaced direct calls to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional . ofNullable ( ) ` to
updated the ` updateAccount ` method to use ` Long . toString ( now ) ` instead of ` String . toString ( ) ` to ensure
replaced AxialStage with RocketComponent in BasicFrame . java and refactored related selection handling in DesignPanel . java to improve
added a long running time parameter to the Args class to allow configuration of the execution time of the virtual machine
updated condition in FindRefComparison and changed priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in RefComparison
updated import statements and improved exception handling in HttpServerProvider , HttpsServer , and ScriptEngineManager classes to enhance code clarity and ensure
mondrian : fix decimal binding to use tostring ( ) and toplainstring ( ) .
removed unnecessary import statements and improved assertion formatting in TestRestClientRequestImpl . java to streamline code for better readability and maintainability
added a condition to check if the reference database is equal to the comparison database before proceeding with unique constraint checks to ensure proper handling of unique
refactor Android property handling in IjProjectTemplateDataPreparer . java to improve readability and maintainability of the code
replace assertEquals with await for request assertions in DuplicateCookieTest . java and SessionRenewTest . java to improve test reliability by ensuring request
added user _ args and is _ daemon attributes to the ImmutableMap builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance trace build
svm : use cached resource bundle for jdk 11 +
corrected a typo in the log message from " match limit " to " match order " to ensure the log accurately reflects the
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata to provide an example of how to
changed class declarations from ` FloatingDecimal ` to ` strictfp ` in ` FloatingDecimal ` , ` FormattedFloatingDecimal ` ,
simplified the append method for column names in ColumnStatsSemanticAnalyzer to improve code readability and efficiency by eliminating unnecessary un
added a test for replacing variable declarations in JavaTemplateContextFreeTest . java and updated contextFreeTemplate method signatures in BlockStatementTemplateGenerator .
added a check to ensure the method is non - synthetic before proceeding with static instantiation to prevent instantiation of synthetic static classes
replaced projectFilesystem . getPathForRelativePath with basePath in WorkspaceAndProjectGenerator . java to simplify path retrieval and improve code readability
added handling for pending rescues in IkStepDefinition . java to improve error management and ensure proper handling of control flow pending resc
changed ` equals ` and ` hashCode ` methods from ` final ` to ` final ` in ` AbstractType ` and added overridden implementations for these
added a method to retrieve the SyncLevel from a string or default to FLUSH to improve flexibility in sync level configuration and handle potential errors
test : fix flaky test in controlcommandstest # testpause ( )
added a condition to check if the slice state is not the RECOVERY state in RecoveryStrategy . java to ensure that recovery operations are only
swapped the width and height parameters in the create function for OpenCV image processing to ensure proper image dimensions are used during image creation
added a new ` sdkPath ` field and updated the ` makeProcessExecutorParams ` method to accept an ` ExecutionContext ` parameter to enhance
[ flink - 20613 ] [ runtime ] remove lock from transientblobcache # cleanup
server : fix typo in error message when create static nat
refactor PasswordEncoder and StandardPasswordEncoder classes for consistency to improve code maintainability and readability
added conversion logic for row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper conversion of row types
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future updates
updated servlet context proxy retrieval to use the class loader to ensure compatibility with different class loading mechanisms
updated version handling logic in MainWindow , ConnectionSettingsPanel , and startup classes to use version . isNightlyBuild ( ) instead of version
added support for handling OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements by removing unnecessary trailing slashes
add a flag to findbugs . nullderef . assumensp to determine if a value should be null or not .
fix ( jolokia ) : use different port for jolokia test
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and modified timing calculations in DrawAudio
added a method to set a DuoSecurityMultifactorAuthenticationProviderBypass in DuoSecurityMultifactorProviderBypass
corrected formatting of method parameters in MaxRectsPacker . java to improve code readability and maintainability
[ drools - 7 ] fix checkstyle violation in kie - ci
added methods to set and retrieve the help page in PMS and refactored the updateContents method in HelpTab to improve help page management
added new files GeocodeProviderFactory . java and Constants . java , along with a new interface ConstantsBase . java to implement geocoding
updated import statements in LuceneAnalyzerUtil . java and LuceneTokenizer . java to use the correct package to ensure compatibility with the latest L
refactor exception handling tests in OptionTest , ResourceManagerImplTest , and ResourceManagerOptions classes to improve clarity and maintainability of exception
[ pytorch ] fix memorycommand . deleteobject ( ) to delete object that be not the protocol object id .
updated conditions in ` SegmentsInfoRequestHandler . java ` and modified collection name in ` CollectionsAPISolrJTest . java ` to improve cl
updated the calculation of numPredictiveAppCols based on device type to ensure correct app column selection for phone devices
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related classes to utilize it to improve code readability
add a new abstract class blockbuildcraft to make it easy to remove block from their inventory .
updated layout parameters for layout parameters in DeviceProfile . java to improve layout positioning for drag - and - drop functionality
replaced ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to ensure proper execution of the
added null checks and improved error handling in HiveMetaStoreClient and HiveMetaStoreStore classes to enhance stability and prevent potential null pointer
updated getDisplayScript method to use Category . DISPLAY instead of getDefault ( ) and added a test for the bug7079486 to ensure that
updated import statements for ZkStateReader . BASE _ URL _ PROP and ZkCoreNodeProps . CORE _ NAME _ PROP to
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance and reduce dependency on ThreadLocalRandom
added a check for the launcher ' s readiness before backuping items in LauncherBackupHelper . java to ensure that backup operations are only
updated error messages in Cell . java to include the actual space value to improve clarity and context of error messages for better debugging
( chore ) camel - resilience4j : add unit test base on user forum issue
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - core : use junit 5 instead of junit 5
added multiple debug logger entries in Grasscutter . java to improve logging granularity for better troubleshooting and troublesh
changed the visibility of ` highlightCnstScrRngQuery ` and related methods to static in ` SpanScorer ` , and updated
updated state checks in Launcher . java and added a method to return the current workspace state in Workspace . java to ensure proper handling of workspace
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for cacheable flag before notifying the new template in SnippetTemplate . java to ensure templates are only processed when caching is enabled
added SCOPE _ SOLR _ CORE constant and updated related methods to manage core scope session to enhance scope management and improve data handling in the
added primary key assertion for the measurement table in DatabaseMetaDataTest . java to ensure the measurement table has the correct primary key information
corrected the spelling of " -- permissions - config - path " to " -- permissions - config - file " in PantheonCommand
updated session handling logic in HttpSessionContextIntegrationFilter . java to improve clarity and functionality to ensure proper session creation and storage behavior based on the
added a new file TestIfWithDeadRegion . java that includes a method to retrieve a string from a Supplier to facilitate testing
rename english _ ud . gz to english _ usd . gz in dependencyparseritest
refactor synchronization in SnowflakeIdGeneratorTest to use try - finally blocks for concurrent access testing to ensure proper timing and resource management during concurrent
added a static UI setting and modified the toast bar visibility logic in MainFragment to enable dynamic UI behavior based on user settings
replaced the ` Privilege ` implementation with a lambda expression that
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added conditional logic in ` WhitelistLogoutHandler
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve user experience
tika - 3746 -- add mime type for ooxml and vnd . openxmlformats - officedocument . spreadsheetml
refactor Runner , FeaturePathFeatureSupplier , and FeaturePathFeatureSupplier classes to improve logging clarity and type safety to enhance debugging capabilities and
camel - 16400 : camel - eip - documentation - enricher - camel - xsd - eip - enricher - camel -
add - dccj . skip _ schema _ check = true to the migration coordinator .
added debug logging for stored playback devices in DeviceConfiguration . java and refactored audio device handling in PortAudioAuto . java to improve trace
added WebsocketConfig to manage WebSocket connection settings to allow configurable maximum frame payload size for improved performance
fix cachevalidationlistener . onstart ( ) to get all failed percentage test result
trim content length before adding it to the document to ensure that only non - empty content length is included in the document
replaced synchronized block with a synchronized method solvingTerminated in DefaultSolverJob . java to improve code readability and maintainability
added error handling when creating a non - existing time series in MManager . java to improve robustness by preventing application crashes due to
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to access the result of the
changed access modifiers of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
cloudstack - 5338 : do n ' t finalize the owner if the caller be in the reserved state .
initialize _ valueString to an empty string instead of null in HttpParser . java and update related test cases in HttpParserTest . java to simplify
replaced the method ` completeInitialization ( ) ` with a static method ` threadCompleteInitialization ( ) ` in ` J9VMInternals
added an ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created corresponding tests in ` EnvironmentTest ` to facilitate
[ drools - 7 ] fix type coercion in mvel 2.1 . 0 . drools9
removed unnecessary import statements and improved formatting in logging configuration to enhance code readability and maintainability
added exception message to log in ActionNode . java to improve error reporting for better debugging
fix issue with email address format in siputil . gettelephone ( )
modified visibility logic for shared with - me icon in FileListListAdapter . java to ensure shared with - me icon is only visible when the
deprecate ` hive . optimize . sort . dynamic . partition ` in favor of ` hive . optimize . sort . dynamic . partition . threshold
hive - 20613 : log queryid and sessionid in log ( ashutosh chauhan via ashut
refactor methods in BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use Arrays . asList instead of Lists . newArrayList to
updated assertion to compare type names instead of names in OGRDataStoreTest to ensure consistency in type comparison between object types
removed the ` onErrorInStep ` method from ` StepListenerSupport . java ` to simplify error handling by returning null to improve code clarity
wallet : fix typo find by codespell on fossies . org
camel - 14263 : camel - netty - http should use http : / / instead of http : / / localhost : { port
replaced System . out . println statements with log statements in TestNonBlockingAPI . java to improve logging consistency and facilitate easier
added a check to return false if the row index exceeds the connection list size to prevent potential ArrayIndexOutOfBoundsException when accessing connection lists
add a new file ` MethodWithSameNameAsEnclosingClass . java ` that checks if a method have the same name as the enclosing class
added ExtendedPlatformComponent for managing MBean instances and introduced a new ExtendedPlatformComponent class to enhance management functionality by allowing the retrieval of platform - managed
replace SQL statements with single quotes in BasicQueryTest . java to ensure proper SQL syntax handling for query execution
updated response paths in BleutradeDtoTest , BleutradeDtoTestSupport , and BleutradeExtendedDtoTest to
refactor TextEscapeUtils class for improved readability to enhance maintainability and reduce technical debt
added a FILTER _ PARAM constant and modified the return statement in AbstractSpatialFieldType . java to handle filter parameters to improve query flexibility based on
removed progress visibility checks in GpsLoggingService and added a callback for updating email sent results in AutoEmailHelper to streamline the progress handling and ensure UI updates occur after email sending
replace ArrayList with HashSet and implement iterator methods in Inlinks and LinkDb classes to improve performance and ensure correct iteration over Inlink objects
added synchronization and modified the stopScan method in TradfriDiscoveryService . java to ensure proper cleanup of older results based on the
updated filter handling in HiveMetaStoreClient and TestFilterHooks to accept a filterAtServer parameter to enhance flexibility in testing partition retrieval based
added an " Abandoned " status to the workflow statuses in the TicketModel and TicketsPage classes to track and manage ongoing states more effectively
updated the initialization of columnAliasPrefix across multiple platform classes to ensure consistent handling of column alias prefixes across different database implementations
updated data types in LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to use BytesWritable instead of Text to improve
add a warning to the user when run on a 32 - bit JVM on a 64 - bit system .
refactor conditional checks for PdfName . PARENT and PdfName . B in PdfCopy . java to improve readability and maintainability of the code
added a new option DAON to the OptionEnum and implemented daemon mode functionality in TerminalClient to enable the application to start in daemon mode
added a new class ` FlushIndexTask ` for flushing index writes to facilitate the flushing of index data during benchmarking
patch by jbellis ; review by brandonwilliams for cassandra - 1186
added a condition to check for SEASONS in the MediaLibraryFolder class to ensure that SEASONS output is correctly handled in
added a new file LocalSocketAddress . java to test IPv6 availability and binding of a DatagramSocket to ensure that IPv6 is unavailable and
updated grid size points in GridSizeMigrationTask . java to correct the positioning of grid size steps
replaced calls to ` getName ( ) ` with direct calls to ` get ( fieldId ) ` in ` SerializerPojo . java ` to
added read - only context checks and initialization methods in Context . java to ensure transactions are only executed in read - only contexts to prevent illegal state
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future feature additions
update calculation of lastRunEnd to use ceiling instead of floor to improve accuracy in determining the last run index
added support for EOFException in GracefulStopTest to ensure proper handling of EOFException in the test case
refactor concurrent access to HTTP connection and listener management in NetJavaImpl . java to improve concurrency handling and reduce code duplication
refactor NetworkParameters class to improve code structure to enhance maintainability and readability of network parameters
removed conditional check for account asset optimization in DynamicPropertiesStore to streamline the code by eliminating unnecessary checks
added a new constant J9 _ GC _ POLICY _ NOGC with a value of zero to manage garbage collection strategy effectively
added validation for contract data in TransactionCapsule . java to ensure only valid contract data is processed to improve error handling and prevent processing of invalid
[ java ] remove unused exceptiontypechecking . java file
updated localization handling in HelpContent . java and improved error logging in HelpContent . java to enhance user experience by falling back to English when
added a new file ` ProcessorInfo . java ` to determine the number of CPU CPUs available and masking based on system properties to improve
add -- html -- stylesheet option to generate html output
logback - core : remove optional from logger . config ( # 5365 )
updated ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` classes to handle cluster ID and service component recovery events to improve cluster management
updated ` SleuthTagPropagationAutoConfiguration ` and ` SleuthTagPropagationAutoConfigurationTests ` to improve default behavior and test coverage
refactor RustCompileUtils to use a switch statement for setting rustDepType based on depType to improve code readability and maintain
updated oauth2LoginLinks method to accept a MultiValueMap containing query parameters to enhance functionality by allowing error handling in the login process
hbase - 10727 addendum fix npe in halfstorefilereader ( ted yu )
hhh - 14616 deprecate ` ` always ' ' value in generated value generation
fix ( gradle ) : add test for gradle ' s layernorm ( ) function
replaced direct calls to ` showShareFile ` with ` getFileOperationsHelper ( ) . showShareFile ` across multiple activities to centralize
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to verify the functionality of the ` LiquibaseUpdate
convert proxyType to uppercase before setting it to ensure consistent handling of proxyType values in case sensitivity
add minecraftforge a mod _ minecraftforge so it can be load by mod _ minecraftforge .
refactor JdbcDatabaseSnapshot to handle caching of table columns more effectively to improve efficiency and clarity in fetching database columns based on case sensitivity
added a container with a border and label to the CSSBorderTest class to enhance the UI with a customizable border and label appearance
added a new RetryableStatusCodeException and updated related classes to handle status codes to improve error handling and provide clearer configuration options for retry scenarios
changed the superclass constructor from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to align layout behavior with the new layout requirements
updated the calculation of the parentTaskName to use ` System . currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to ensure the correct
added error handling for invalid AddServiceRequest parsing in ServiceResourceProvider . java to improve robustness by throwing an IllegalArgumentException for invalid input
simplified the condition for checking if a file is accepted based on the environment ' s indexVersionedFilesOnly flag to improve code readability
[ giac ] make sure round ( x ) work with a list of 2 element .
refactor AnonCipherWithWantClientAuth class to improve code readability to enhance maintainability and facilitate future updates
http : / / issues . apache . org / activemq / browse / amq - 2175 - deprecate the producertemplate
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flakiness of evictedentrylatch in test ( # 18922 )
replaced the internal method ` encodeInternal ` with a direct variable ` saltedPass ` in ` Md5PasswordEncoder . java `
replaced direct access to ViewTreeObserver with direct calls to mTaskRecyclerView . getViewTreeObserver ( ) to improve code readability and
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
use long . max _ value instead of long . min _ value in sstablemetadata . readlong ( )
set the preferred size of the security panel to 200k instead of 60k .
added null and empty checks for replies in both TweetActivity , TimeLineCursorAdapter , TimelineArrayAdapter , and TweetView to
added ` toString ( ) ` and ` hashCode ( ) ` methods to ` HitbtcBalance ` and modified ` Hitbtc
fix ( sql ) : fix where clause with in clause
updated return statement in RetriesExhaustWithDetailsException . java to use addrs . toString ( ) instead of returning a string to improve
replaced direct call to ` closeOpenFile ( ) ` with ` open ( ) ` in ` EditGcodeFile . java ` to
updated import statements and modified HttpClient configuration in JsonToGrpcApplicationTests . java to use the new package structure to ensure compatibility with the latest
pipe power wood : fix energy loss in pipe power wood
added a check to delete the temporary output file if it exists to ensure that the temporary output file is properly cleaned up after use
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added new test cases for trade and ticker
added time limit checks in ReplayProcessor and ReplaySubject classes and implemented corresponding tests in ReplayProcessorTest and ReplaySubjectTest to
updated the formatting of the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and consistency
added SQL insert statement and modified SQL query syntax in MediaTableFiles . java to improve code readability and maintainability while ensuring proper handling of
g3d - 364 : do n ' t show equation definition in exam if the feature be show _ definition _ for _
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when accessing the component
added caching logic for the meta scan when startrow is null and scanRoot is false to improve performance by reducing unnecessary scans when the start
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance performance and maintainability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a debug option for enabling the transient
[ hotfix ] [ runtime ] fix typo in accessexecution and archivedexecutionvertex
added a condition to set density to 3f when scaling is 3 to ensure consistent density across different screen resolutions
rename ` optional ` to ` vararg ` in ` Parameter . java ` to improve clarity and consistency in variable naming
hbase - 25850 regionstateservice should log exception instead of just log message
refactor assertTrueEventually to use a lambda expression for better readability to improve code clarity and reduce boilerplate
updated logging message in AsyncHttpConnection . java and refactored test classes in AsyncContextTest . java to improve clarity of logs and
added a boolean parameter ` showArrow ` to the method signature in ` SearchUiManager . java ` to provide more control over the visibility of
added a break statement in Database . java and modified lock mode assignment logic in TestRowLocks . java to ensure proper handling of read - committed
llvm : skip test that only fail on linux / amd64
added type checks for Integer , StringValue , and IntValue in Scalars . java to improve handling of input types and ensure proper string conversion
updated error handling for primary key specifications in CreateTableStatement . java to provide clearer feedback on requirements for primary keys
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to enhance visual
improve error message when there be no isolate to query for flutter view ( # 3038 )
added new header writer methods for content type options , xssProtection , cache control , http strict transport security , and frame options in HeadersConfig
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the code
[ grid ] rename smoketest to distributedcdptest
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to facilitate event collection by allowing
added support for package prebuil libraries in Python binary to ensure proper resolution of prebuilt libraries during the binary execution
updated client authentication handling in NetServerOptionsConverter and HttpServerOptions to utilize ClientAuth instead of a boolean to improve flexibility in client authentication
updated directory paths in HiveConf and MetastoreConf to use " $ { system : user . name } / repl / " instead of
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency to enhance readability and maintainability of the
increase timeout for unit test to reduce flakiness
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
change variable name from ` controller ` to ` flowController ` in multiple files to improve clarity and consistency in naming conventions
updated operator tree generation to set the final exchange number correctly and added a new test for consumption of all child operators in the pipeline builder to ensure
added use of ClassLoaderHandler in module - info . java to enable class loading functionality in the application
added a method to set the working solution in the SolutionBusiness class and updated the SolverAndPersistenceFrame to return the best solution to improve
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure that the code only executes when throwable is not null
refactor query info retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench not show progress when there be no recipe
fix ( gl200 ) : fix hdop not set if parser have end - of - stream
renamed timeColumnName and timeFieldSpec variables to incomingTimeColumnName and incomingTimeFieldSpec to improve clarity and consistency in naming conventions
replaced multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` with multiple calls to ` HttpM
ww - 4365 add support for inject initializers in container .
use longtasktimer . sample instead of timer . start ( ) in meterregistrycompatibilitykit
changed the data type of SYNC _ DELTA _ RATE from float to double and updated interval calculations to improve precision in time handling
add deprecation warning for fragment expression in abstractfragmentinsertiontagprocessor
changed the type of the _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared data structures
resolve http : / / issues . apache . org / activemq / browse / amq - 2696 - fix amq -
added new color constants and updated method signatures in ColorExtractionAlgorithm . java to enhance color extraction functionality and improve error handling for unsupported dark text hints
added accessibility checks for the data folder in SketchBuilder . java to ensure that only valid data folders are included in the srcFolderPathList
updated the ` appendContent ` method to include a title parameter and modified related logic to enhance flexibility in handling title inclusion based on configuration
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization process
added logging for reconnection success and failure in NettyStreamingService to improve error handling and provide better visibility into connection status
replaced ` ProxyFactory ` with ` JavassistProxyFactory ` in multiple test files to utilize ` Proxy ` instead of `
replaced ConcurrentLinkedQueue with ConcurrentHashSet in QueuedThreadPool . java to improve performance and reduce memory overhead by using a more suitable data structure
refactor SocketExceptions to use String . join for message concatenation and add InetAddress check in ExceptionText to improve clarity of error messages and ensure
added a check to ensure the view path is under the repository before proceeding to avoid errors when the view path is under the repository directory
remove drag - and - drop functionality that do n ' t work ( # 8727 )
8274237 : [ testbug ] add - xx : + usecompressedoops to test / java / lang / string /
removed error logging for non - active or replay state in PeerSync . java to streamline error handling for non - active update logs
deleted the ConnectionHook . java file to remove unused code to streamline the project
removed the ` waitForReplicasInSync ` method and its usage from multiple test classes to simplify the code and improve clarity by eliminating
( chore ) camel - swagger - java : fix checkstyle violation
updated versioning in ApexLanguageModule to use the current external version instead of a hardcoded value to ensure compatibility with the current external version
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated AggregateEngine and OverflowQueryEngine to use a dedicated thread pool and improved thread management to enhance performance and scalability by utilizing
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve buffer management by utilizing the configured ByteBufferPool
added scrollToPositionWithOffset logic to adjust the thumbnail ' s position based on index values to improve user experience by ensuring the thumbnail ' s
chore ( sql ) : fix ( sql ) : timestamp column should not be overwrite by other column alias ( # 2321 )
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation for improved readability to enhance code clarity and maintainability
added a conditional check to disable the default user agent in the HttpClient configuration to ensure proper handling of user agent settings in the HTTP client configuration
added pubsubhubbub functionality to FeedRefreshUpdater and ApplicationSettings classes to enable conditional handling of pubsub events based on user settings
changed the visibility of the finalize method from public to protected to allow subclasses to access and override the finalize method
updated the method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a check for
add dspacewebapp to make it easy to use rest api
added null checks for ` leftTableAlias ` and ` getTableAliasContainingColumn ` in ` CalcitePlanner ` , and implemented a method to
[ hotfix ] [ runtime ] fix triggerkey name in jobgenerator
updated log messages in Wallet . java to improve clarity and consistency to enhance log readability and provide more informative log messages for transaction broadcast
increase timeout for basicmaptest . testmap ( )
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` and `
added a new enum ` TlsClientCertPolicy ` and updated ` GitBlitServer ` to handle client certificate policies to improve flexibility
removed a sleep mechanism for subscription failure in KrakenFuturesStreamingService . java to simplify the code and improve performance by eliminating unnecessary
added WebSocket protocol handling to ProxyWebSocketHandler to support customizable WebSocket protocol configurations
added debug logging for fetchReq in HiveQueryResultSet to improve traceability and debugging of query results
updated the formatting of dimensions in HolidayEventFormatter to remove the use of String . format for better readability to improve code clarity and
updated test methods in FinalizePrivateFieldsTest and modified inner class field handling in FinalizePrivateFields to improve clarity and functionality of inner class field
updated the UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
deleted the ` module - info . java . extra ` file and modified the ` buttonShouldBeOpaque ` assignment in ` Aqua
replaced ` maxFreq ` with ` maxCost ` in ` DrillSidewaysQuery ` and ` DrillSidewaysScorer `
added a new class reference for GeoDegeneratePath in StandardObjects . java to facilitate the creation of GeoDegeneratePath objects
removed the ` preFill ` parameter from multiple ` ParticleEffectPool ` , ` FlushablePool ` , and ` Pool ` classes to
added a check for ` isInLauncher ` before updating the taskbar state in ` TaskbarLauncherStateController ` and modified flags in ` Task
added null check before comparing the default style in CascadeDeleteVisitor . java to prevent potential NullPointerException when accessing default style information
refactor GuiUtil to use a unified setSize method and update MarqueeLabel initialization methods to improve code readability and maintainability
refactor icon assignment logic in FileTreeViewHolder . java to streamline code for better readability and maintainability
updated assertions from ` isEqualTo ` to ` contains ` for qualifier checks in ` ParallelUniverseTest . java ` to improve flexibility in
added synchronize when iterate over synchronizedmap a per java
add a new test class TestNativeProbabilityFunctionQueries to facilitate testing of native probability function queries
deregenerate shutdown thread in clientcontainer to prevent memory leak
hhh - 14613 - introduce a method to drop a temporary table after use sybase
danielwagnerhall : ignore htmlunit test that do n ' t support rgba color
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated hexadecimal string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better
do n ' t refresh source info when there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for better readability to improve code clarity and maintainability by avoiding
updated the string resource for frequency from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced ` putAll ( includedLabelSets ) ` with ` newInstance ( includedLabelSets ) ` in ` TestLabelOptions . java ` to
fix npe in vertexlighterflat when there be no normal element
added tags for grpc . message _ sent . visible and grpc . message _ received . visible in multiple classes to enhance tracing capabilities and ensure proper
refactor time zone handling in ScheduledTrigger and related test files to improve clarity and maintainability of time zone management
added AsyncBucket and InMemoryExtension classes and updated related methods in Bucket4j and ConfigurationBuilder to improve performance and manageability of bucket operations
refactor class path handling in resexhausted003 . java to utilize regex pattern matching to improve flexibility in locating test classes
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability to enhance maintainability and facilitate future updates
refactor web server port creation logic to use an optional webServer to improve flexibility in server configuration management
renamed ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static import for ` SolrHttpClient ` in
added a check to clear the thread allowlist if it is not empty to ensure that the thread allowlist is properly managed and log an error
updated method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity and
[ drools - 6640 ] fix dmndtanalyser # findgaps and dmndtanalyser # find
added a test for sliding window combine in the CombineTest class to ensure that the combine function works correctly with sliding windows
added a check for allAppsDirty before binding apps and improved logging messages in LauncherModel . java to ensure apps are only bound when
camel - 16400 : camel - managedfilewatcherreloadstrategytest should check if the mbean server be run
reformatted code for better readability and organization to improve maintainability and clarity of the code
refactor AquaMenuBarUI to use a separate method for screen menu bar retrieval to improve code readability and maintainability by redu
do n ' t set fall distance if fall = 0 ( fixes # 87 )
refactor query logic in SimpleJpaRepository for improved clarity and efficiency to enhance query performance and maintainability by using a consistent query
added timestamp , parent hash , nonce , and number fields to BlockUtil . java and updated BlockUtil . java to utilize these new fields
use safepointinsertionphase instead of loopsafepointinsertionphase .
hbase - 25836 fix npe in zkprocedurememberrpcs when there be no child
changed access modifiers of methods in ArtifactResolver from package - private to public to allow access to these methods from outside the same package
added thread stopping and disposal logic to BulletPhysics and ChunkProcessingPipeline classes to ensure proper resource cleanup and prevent potential memory leak
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is greater than or equal to 1 to prevent illegal
added handling for the login status in the LoginActivity to manage the current login state during configuration changes
added null checks for source and value extraction in Pump . java and implemented a test for UUID sorting in PumpTest . java to ensure
changed access modifiers of several methods in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to allow subclasses to access and
updated order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added DefaultAuthentication
added imports for Jetty server and HandlerList in TestJNDI . java to enable handling of context handlers for the Jetty server
refactor code for improved readability and consistency in SortedDynPartitionOptimizer . java to enhance code clarity and maintainability while ensuring correct
modified the return statement in FileStreamChannel . java to always return true to ensure that the method always returns true for non - blocking operations
updated the logic for setting the number of nulls in StatsUtils to ensure that the new number of nulls does not exceed the existing row count
camel - 18131 : camel - jbang - export - use camel - kamelet instead of camel - dsl for camel - jbang -
replaced OkHttpOAuthConsumer with AuthState and added authorization checks for OpenStreetMap upload to enhance security by ensuring only authorized users can upload
make basicptxtest . main ( string [ ] args ) so that it can be run in a separate thread .
added a clientAuth property and its getter and setter methods in IoTDBRestServiceConfig , along with corresponding logic in IoTDBRestServiceDescriptor
removed the initialization of ` mocksToBeInjected ` and added a new test class ` ChildWithSameParentFieldInjectionTest ` to simplify
refactor BloomUriUniqFilter to implement InitializingBean and modify expected size and hash count properties to improve flexibility and maintainability
updated getCursorAdapter from false to true in HomeFragment . java and added a shared preference for refresh functionality in TweetPager . java to
updated the intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple Java files to implement a new event class for handling recompilation
added support for determining if system hosts are pre - prepped in multiple classes to enhance the management controller ' s ability to determine if the system
added a new parameter ` logEveryUnknownChangeLogFormat ` to the ` include ` method and modified the ` include ` method to include every
added a loop to delete trailing slashes from the location string to ensure that the location does not contain a slash
added property handling for entities and scores in StaticPipeline . java to ensure properties are present and validate the expected number of scores to enhance functionality by
updated filename handling and source retrieval in Frame . java , added configuration for Whoops . enabled in WhoopsModule . java , and
[ geos - 8470 ] catalogrepository . getdatasource ( ) return null if the datasource can not be find
refactor assertions in Assert . java for improved readability to enhance maintainability and facilitate easier debugging
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
( chore ) camel - activemq : fix intermittent test failure
refactor TsFileWriteAlignedWithTSRecord and TsFileWriteWithTablet to remove unnecessary list initialization to simplify code and improve readability by
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory management during garbage
updated logging jar file from " slf4j - log4j12 " to " slf4j - reload4j " to
( chore ) camel - hue : use waitforassert in huebridgehandlerosgitest ( # 11345 )
updated package structure for multiple activity classes from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities
[ drools - 1276 ] disable kie - containersolverfactorytest until drools - 1276 be resolve
added a constructor to PullRequestMergedEventsStream that reads an Avro schema from a file to facilitate the processing of merged events from a
refactor AbstractExpressionPart class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
replaced ` ChannelFutureListener . FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and `
added error handling when releasing a lock in MoveTask . java to ensure proper resource management and logging of lock release attempts
refactor JRubyBackend to use a ResourceBundle for loading properties to improve flexibility and maintainability of the code
replaced the static final byte array ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY for receiveAddress to improve code clarity
reformatted the class loading logic in ClassGraphClassLoader . java to improve code readability and maintainability
added test setup and teardown methods for the BlobStorageDirectory in JobManagerStartupTest . java to ensure that the blob storage directory is correctly configured
chore : [ clouddatastream ] update java and python dependency to v1a ( # 1 )
added a Bundle builder to FileDisplayActivity to enable the use of additional data associated with the activity
changed the loop condition from break to continue in ParticleEmitter . java to ensure the loop continues processing when the particle is not null
updated expect values in AmbariManagementControllerImplTest and AmbariManagementControllerTest to use 1 instead of 2 to align test expectations
removed nullable nullable from the SERVICE column in TransientSessionTicketImpl . java and added logging for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file to fix functionality related to bug 4823811
replaced direct usage of patternToDelete with a pathRelativizer function in RmStep . java to enhance flexibility by allowing dynamic
[ deconz ] add initial request to requestfullstate ( ) ( # 11345 )
refactor ShibbolethCompatiblePersistentIdGenerator to use a customizable attribute instead of a byte array to enhance flexibility in generating persistent
updated the injection annotation in RequestValidationService . java to ensure consistency in annotation usage across the application
refactor keyboard handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by centralizing logging logic
removed redundant lines in FileNodeProcessor . java and enhanced MManager functionality in MManagerBasicTest . java to improve code readability and ensure
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test method to verify that slurpfile work correctly with utf - 8 encoding
added @ FunctionalInterface annotation to multiple Java files to indicate that these classes are intended to be functional interfaces and improve code maintainability
refactor span retrieval logic in TraceWebFluxTests to use a new method ` spanWithName ` to improve code readability and maintainability
added support for conversion of date types in ETypeConverter and HiveSchemaConverter to enhance data handling capabilities for date types in Hive
updated the split method to use Patterns . COMMA _ SEPARATOR instead of string literals to improve readability and maintainability of the code
ggb - 2171 show error message if invalid input do n ' t work
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance error handling for column mismatches in dynamic
updated assertions and logic in WANDScorer . java to improve clarity and correctness of score update logic to enhance code reliability and
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to include necessary Java classes to improve code clarity and reduce potential naming conflicts
initialized ` curPixVal ` to a default value and added a new test class ` WhiteTextColorTest ` to ensure ` curPixVal `
change biome dictionary to use supertypes instead of subtypes
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and
updated test stability rule annotations in TaplTestsLauncher3 . java to enable more granular control over test flavors during the test
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to avoid potential errors when processing empty log file suffixes
refactor PythonBuckConfig class to improve code readability to enhance maintainability and facilitate future updates
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryName ` methods in ` ShadowPackageManager ` to ensure
updated MeiligaoProtocolDecoder to correctly handle time formats and extended information to improve accuracy of time parsing and enhance the meiligao
added a null check for the tile object before calculating the battery capacity to avoid potential NullPointerException when tile is null
added asynchronous cache trimming functionality to the PrefFragment and IOUtils classes to improve cache management and provide user feedback upon cache size changes
chore ( deps ) : upgrade dependency from google . api . client . util to google . common . collect
updated exception handling in BasicAuthAccessControlFactory and related classes to throw NotAuthorizedException instead of returning false to improve error handling by providing a clear ind
refactor schedulePeriodically method signatures to return Subscription instances instead of using t2 to simplify method signatures and improve code clarity by elimin
replaced ` refreshListOfFilesFragment ( false ) ` with ` getListOfFilesFragment ( ) . onItemClicked ( ) ` to
added a check for multiple InputStreams and improved error handling in StreamUtil . java to ensure a single InputStream is returned when multiple streams match
refactor methods in SessionHiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext for table creation to simplify method signatures and improve
added an ` aborted ` flag and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker . java `
updated indentation logic in multiple parser classes to include a minimum of 4 characters to ensure proper handling of indentation in various parser implementations
add network wifi status change event to autoplay video if you ' re on it .
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility for the collapse handle view in WidgetsBottomSheet to ensure the collapse handle view is displayed in the UI
added new file ` Issue475 . java ` and ` XSS . java ` to implement HTML and JavaScript escape functionality to enhance security by
added a condition to return early if units to scroll is zero to prevent further processing when there are no units to scroll
changed the condition from checking if the contract list size is greater than one to checking if it does not already contain a single contract to ensure that
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes to enhance functionality for adding and updating enums in JSON
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for comparing hash codes to ensure consistent behavior of hash code
replaced instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2
payment : do n ' t try to connect if transaction have no platform fee .
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix buffer subsample data before call
changed access modifiers of several classes from public to package - private to enforce encapsulation within the same package for better encapsulation
added import statement for Retrofit in Part . java and PartMap . java to utilize Retrofit functionality in the code
refactor JsonBuildHelper and ParamsBuildHelper to streamline JSON handling and add common parameter handling to improve code readability and maintainability while
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of floating views in AbstractFloatingView . java to enhance the floating view functionality
fix : update gapic - generator - java with mock service generation fix ( # 2382 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the argument from the createRenderScript method call in AllAppsView . java to simplify the render script creation process by eliminating unnecessary
pmd : fix typo find by codespell on fossies . org
refactor system bundle handling by introducing a new method ` isSystemBundle ` to improve code readability and maintainability by centralizing system
reformatted import statements and formatting in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replaced hardcoded value of 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE to improve code readability and
refactor configuration handling in Overview . java to use a local variable for default configuration to improve code readability and maintainability by reducing
fixed npe in agentmanagerimpl . ishost ( ) when check if a host have an agent .
added a null check before converting the value in DefaultRecordStore to avoid potential NullPointerExceptions when the value is null
cloudstack - 5339 : improve error message when agent setup fails
updated error messages in ParamAction . java to include specific names and values to improve clarity and context of error messages for better debugging
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to use ` Object ` instead of ` InvocationContainer
refactor method to strip method parameters from method names and create a utility method to improve code readability and maintainability by encapsulating method parameter
updated VERSION _ NAME and VERSION _ CODE from " GreatVoyage - v4.2 . 1 - 56 - gaff23
mondrian : use set instead of list to improve performance
[ geot - 6640 ] symbolizer now support graphic resize and label - all - group
ggb - 2175 resize popup when there be no overlap feature
updated error messages in ValidationSuite . java for consistency to improve readability and maintainability of the code
refactor StartingWindowListener to use a separate class for managing transition manager to improve code organization and maintainability by encapsulating listener logic within a
added a comment inherited from MBeanServerConnection in MBeanServer . java to document the usage of the doc comment inherited from MBeanServerConnection
updated exception messages in CheckPackageAccess . java to reflect the expected PackageAccess and PackageDefinition SecurityException to improve clarity and accuracy of error handling
increased the timeout from 30 seconds to 90 seconds and added an assertion to verify the thread termination status to ensure that the test does not
changed the loggingEnabled variable from a boolean to a Boolean and added a null check for loggingEnabled to ensure logging is only enabled when it is
added @ JsonIgnore ( true ) annotation to Schema . java to exclude certain fields from JSON serialization
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
updated method signatures and variable names in SimpleNaiveBayesClassifier . java for consistency and clarity to improve code readability and maintain
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and ` CheckHelperAuditModule ` and added a new ` CheckHelper
refactor Prototype class for improved readability to enhance maintainability and facilitate future updates
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure that the table is marked as transactional to avoid potential null pointer
[ java ] remove unused writefragment method from recordingwriter .
update cea decoder and subtitles to handle negative timeus
fix the issue that datastoremetricquery . getalias ( ) return null
updated currency pairs in VaultOfSatoshiBaseService to use " USD " instead of " CAD " and added new currency pairs
hhh - 14663 fix resource leak in unit test
updated import statements for KafkaSender from ` zipkin2 . reporter . kafka11 . KafkaSender ` to ` zipkin2 . reporter .
added new files ` GwtBinaryIntegrationTest . java ` and ` A . java ` to implement integration tests for Gwt binary builds to
added a condition to hide loading causes label in BrowserContentPane and refactored ResultSetRenderer usage in SQLConsole to improve user experience by ensuring
refactor randomizer retrieval logic in EnhancedRandomImpl . java and add a new test cases in EnhancedRandomImplTest . java to
added XML _ SECURITY _ PROPERTY _ MANAGER to multiple configuration classes to improve security property management for XML processing
added a new file InlineDefaultMethod . java with interfaces and classes implementing default methods to demonstrate the use of default methods in interfaces
updated SQL query patterns in SqliteFieldPredicateView to match " GLOB " instead of " LIKE " to enhance filtering capabilities for better accuracy
drools - 3353 dmnassemblerservice : change access modifier of getdmnprofiles from private to protected
fixed - rscript . loadlua ( ) method throw npe if slave node do n ' t exist . regression since 3.13
refactor code to improve readability and maintainability to enhance maintainability and reduce complexity in field management
updated debug log messages in multiple classes to use ` verbose ` instead of ` debug ` format to improve log readability and provide more detailed information
fix memory leak in fmloutboundhandler . sendproxy ( )
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration to use it to improve configurability by allowing
replaced a HashMap with an ArrayList for removed shortcuts and updated shortcut information handling to improve clarity and efficiency in managing shortcut information and ensure proper
remove unnecessary type check for string value in defaulthttpclientbinderregistry
removed the case for the home screen in DetailFragment . java to streamline navigation functionality for improved user experience
added a condition to check if the AndroidMarket is present before processing play services to ensure playback services are only included when a valid market is
updated cell start and end calculations in TableBlockParser . java and added new test cases in TablesTest . java to improve parsing accuracy and ensure
added support for a bridging header in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and ProjectGeneratorTest to enhance
refactor PotentiallyDeadCode . java to improve method handling and source path management to enhance code clarity and maintainability by using a more
added diamond detection functionality and new classes for improved type inference to enhance type safety and warn users about redundant method calls in type inference
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed unused imports and added a debug log statement for registering cachemetrics to streamline code and improve performance by eliminating unnecessary logging
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure that AuthenticationException is properly propagated to the caller
updated the calculation of the zero variable in Test6796786 . java to correctly compare negative values to ensure accurate floating - point comparisons
added " logback . dev . xml " to multiple configuration files in JoobyMojo . java and Main . java to ensure
added a new file JaasEventCheck . java to handle JaasAuthentication failed , successful , and failed authentication events to provide a mechanism to
refactor QuickstepTransitionManager to use a list for managing visible views to improve code readability and maintainability by reducing redundancy
updated string distance comparison in ConjunctionSolrSpellChecker and added a new test class for handling non - identical StringDistances to ensure that
replaced ` HashMap ` with ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure consistent usage of the ` fetchers `
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
server : add a timeout for modify storage pool command ( # 4568 )
updated JDBC table and schema parameters in AbstractJDBCConnectorProvider . java to ensure correct database context is used for JDBC connections
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and accuracy in the SQL
replaced ` WeakHashMap ` with ` Collections . synchronizedMap ` for schemaTypeCache to improve concurrency handling and simplify schema retrieval logic
modify header handling logic in StaticServerHttpHeadersWriter to check for existing headers before writing to improve efficiency by avoiding unnecessary header writing when headers
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to files available only within CMU
added directory creation for the storage directory in TestCollector . java to ensure that the storage directory is available for testing
added a method to set chunked streaming mode in StarTreeJobUtils to improve performance by optimizing streaming operations
add new basic syntax checker and test for basictype
hbase - 26017 addendum fix checkstyle issue in hbase - protobuf
added a new ` Node ` class and a test for populating beans with recursive structure to ensure that the populator does not cause stack overflow
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper error handling when retrieving the remote name
updated exception handling in UserAccountManagerImpl , ClientFactoryImpl , ConnectivityServiceImpl , and ClientFactoryImpl to use HttpClient instead of Ow
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and enhance test coverage
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure compatibility with AspectJ ' s Protection Pointcut definitions
updated import statements and added hostname verification logic in Connection . java to enhance security by controlling hostname verification behavior based on system property
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enable item
updated method invocation from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) `
refactor joint management logic in World . java to ensure proper destruction of joints to improve resource management and prevent potential memory leaks
fix npe in searchfilter when filterstring be null
[ hotfix ] [ test ] add license to sourcereadertestbase
refactor exception handling in DocumentsStorageProvider . java to include a try - catch block for better error handling to improve robustness by ensuring
added new interface ` HookDefinition ` and ` JavaHookDefinition ` , and created corresponding test class ` JavaHookTest ` to implement and verify
refactor flushIfDeadlockRisk logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintain
updated setExoOptions method to include a boolean parameter for timestamp handling to enhance flexibility in setting video playback options based on user preferences
removed user identifiers from the identifier collection in DMRDecoderState . java to streamline the code by eliminating unnecessary identifiers
added an INVISIBLE color constant and updated the toString method in Color . java and RailButtonShapes . java to improve code readability and
updated null handling logic in CountAggregationFunction and added a new test for total count with null handling query options to enhance query flexibility and ensure
initialize the ' deep ' variable to - 1 in InternalTransaction . java to ensure proper handling of transaction deep state
escape the name in the XML string before appending it to the buffer to ensure proper XML formatting and prevent potential issues with special characters
updated file path initialization to use a configurable directory instead of a hardcoded string to enhance flexibility by allowing users to specify a custom directory for
added functionality to mark rules as deprecated when the " deprecated " attribute is present to ensure proper handling of deprecated rules in the application
make amd64directcallop use jmp instead of jmp .
changed ` minStamp ` and ` maxStamp ` fields to static final and added checks for ` allTime ` in ` TimeRange ` to
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated emitMetricsJson method to improve code readability and maintainability by reducing
updated condition checks in DetailFragment and GalleryActivity for better readability and functionality to improve code clarity and ensure proper handling of video attachments in
blocktank : do n ' t drain tank if it ' s not remote
updated CsharpLibrary . java to handle RuleAnalysisLegacyBuildRuleView and improved source path resolution for DotnetLibrary to enhance compatibility
of - 2261 : do n ' t send pep request for get message . jm - 226
added a null check for runtime in IntrinsificationPhase . java to ensure that intrinsicGraph is only initialized when runtime is not null
updated conditional statement to check if the active object is not empty before refreshing active work to ensure that refreshing active work is only performed when
pdfbox - 4892 : update bfsearchCOSobjectkeyoffset to check if the end of the file reach the end of the
added a constructor to LwjglAppletApplication that initializes a canvas with its configuration and resets the LwjglNativesLoader to
updated the string representation logic in EnvironmentAndSystemPropertyClientProviderStrategy to handle null DockerClientConfig to improve robustness by avoiding potential NullPointerExceptions
refactor ldap authentication and account state handling in LdapAuthenticationHandler and AccountStateHandler to improve code clarity and maintainability by consolidating logic
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added a private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and set its value in ` LdapUtils ` to enhance LDAP
refactor Readable class to improve readability to enhance code maintainability and readability
updated PDF document creation in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT to ensure proper font handling
updated the icon resource for the share menu in CaptureActivity . java to improve consistency and clarity in the menu appearance
updated JRE _ IS _ MINIMUM _ JAVA8 and JRE _ IS _ MINIMUM _ JAVA9 based on the JVM version to
updated the ` IS _ JDBC41 ` variable to check if the connection timeout is greater than or equal to ` Integer . MIN _ VALUE `
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList in Enclosed . java to improve performance and memory usage by using a more suitable data structure
added multiple @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
reformatted the list of png , jpg , and gif parameters in ChartProvider . java to improve code readability and maintainability
fix ( file ) : use file . getparent ( ) instead of file . getpath ( )
removed unnecessary block return in JavacParser . java and added ExtraSemiTest . java for testing Java source files to simplify the code
added support for " AFTER " and " BEFORE " keywords in JpaQueryCreator and User classes to enable querying users by their created time in
updated Test15FloatJNIArgs . java file to improve functionality and maintainability of the code
updated version output messages in the plugin . java file to improve clarity and consistency of version information displayed to users
nifi - 3745 : fix issue with mockprocesscontext . encrypt ( ) and mockprocesscontext . decrypt ( )
[ java ] ensure archive callback do not require reentrant .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions when accessing dependencies
added a timeout parameter to the @ Test annotation in SslBytesServerTest . java to ensure tests have sufficient time to complete and avoid premature
peer : fix typo find by codespell on fossies . org
updated RealtimeIndexingCoordinator and RealtimeSegment classes to replace ` toImmutable ( ) ` with ` toHistoricalIndexSegment ( ) `
updated FailureWatcher to check for null exportedData before calling writeTo to avoid potential NullPointerException when exportedData is null
refactor popup positioning logic in RecyclerViewFastScroller . java to use a dedicated method to improve code readability and maintainability by
updated command and action handling in BuckWSServerPortUtils and added a check for tool window instantiation in BuckEventsConsumer to ensure proper
added a conditional check for Windows before adding the " preventSleep " checkbox to ensure that the " preventSleep " checkbox is only available on compatible
updated import statements from ` javax . servlet . http ` to ` jakarta . servlet . http ` in ` HttpConfigurationAuthorityOverride
updated crop handling in QuickstepAppTransitionManagerImpl and FloatingIconView to accommodate vertical bar layout to improve layout responsiveness
added fullScreenExclusiveModeState functionality to XWindow and XWindowPeer classes to manage and manage full - screen visibility to improve user experience by
fix stringindexoutofboundsexception in ums . playeddurationstr ( string )
added credential handling methods to DagUtils and TezTask classes to enhance security by ensuring necessary URIs are included in the DAG
( chore ) camel - core : use map . entryset ( ) instead of keyset ( )
trim whitespace from the last element in the array of names to ensure consistent handling of thread names by removing leading and trailing spaces
updated the error message in GpsMainActivity to clarify that the description cannot be added to a file to improve user experience by providing
[ hotfix ] [ doc ] fix typo in job . java
added a new abstract static class ` Unused ` and implemented a test for the ` AutoValue _ Main _ Unused ` class to ensure
ambari - 20686 . upgrade hbase - master to hbase - master - addendum ( swagle )
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused code to streamline the project
modified the ` performJoin ` method to return a list of ` GenericRecord ` records instead of a single ` GenericRecord ` to enhance flex
updated the logic for validating the maximum delegate lock period in ProposalUtil and related classes to ensure only valid values are accepted to maintain data integrity and
changed the data type of ` networkRateMbps ` and ` networkRate ` from ` int ` to ` Integer ` in multiple classes
added initialization of services and updated the applySpecification method in CmcExchange to ensure proper initialization and handling of exchange specifications
updated configuration handling in GossipLocalNode . java and changed constants in Constant . java to improve clarity and consistency in configuration file naming conventions
add system property ` ` hazelcast . client . tpc . enabled ' ' to disable tpc
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple classes to ensure compatibility with the latest
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverse to improve performance by avoiding unnecessary operations
modified the logic for generating the key based on the presence of a name in NamedObjectList . java to ensure that the key is set to an
updated cleanup methods to use ` cleanupEmptyTableDir ` instead of ` cleanupEmptyDir ` for better clarity to improve code readability and
refactor AsyncCache and Cache classes to improve code organization to enhance maintainability and readability of the codebase
added import for RCFileInputFormat and registered it with kryo in SerializationUtilities . java to enable serialization support for RCFileInputFormat in
added methods to retrieve Java types and categories for a given column in TypeMapperComponent to enhance type mapping functionality for better integration with runtime configuration
added error handling for invalid host headers in Request . java and updated related tests in RequestTest . java to improve robustness and ensure proper response
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for reflection - based method calls to improve compatibility with newer Android versions and enhance
removed the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods from the ` StandardOp ` class to streamline the code by elim
lucene - 1342 : fix a bug in segmentcorereaders . tostring ( segment , numdocs ) .
implement hasmainthreadprofile ( ) method to check if a transaction have a main - thread profile
added error handling for annotation definitions in a Buck rule with required _ for _ source _ abi to ensure that annotations are not allowed for source
updated the constant name from " greekLowerCase " to " greekLowercase " and " irishLowerCase " in multiple filter
updated HSSFSheet and Sheet classes for improved functionality to enhance performance and maintainability of the code
use discovery search request processor instead of lucenesearchrequestprocessor since dspace 4.0
added a list of locale IDs and removed specific " America / Dawson " , " America / WhiteHorse " , and
updated SurfaceSyncGroup instantiation to include " TaskBarController " to improve clarity by specifying the context of the SurfaceSyncGroup
updated GridFsTemplate to use getId ( ) instead of getObjectId ( ) in GridFsTemplate . java and added a new test for UUID
added tests for retrieving total size , total size , and bytesSoFar in ShadowDownloadManagerTest . java and updated ShadowDownloadManager . java to
refactor text insertion logic to use a boolean flag for ENTER _ DESKTOP and ENTER _ ANDROID to improve code readability and
added a conditional check to return early if the target is the same in GroupNodeViewModel to optimize performance by avoiding unnecessary processing when the
refactor afterSetStatements method in Lower . java and BlockLexicalContext . java to improve statement handling logic to enhance code clarity and
added hashCode methods to IntervalXYDelegate and XYSeriesCollection classes to ensure consistent hashing behavior for instances of IntervalXYDelegate and XYSeriesCollection
refactor clientqueuedisruptiontest to use junit ' s @ after annotation instead of @ before
updated formatting in CloudWatchAppender . java and refactored test method names in CachingAttributeRepositoryTests . java to improve code readability and
updated serialization method name from " useSpecialDoubleValues ( ) " to " useSpecialFloatingPointValues ( ) " in Gson . java to
added multiple calls to ` HttpMethed . waitProduceOneBlock ` and ` WalletTestZenToken007 . waitProduceNext
added checks for non - empty subtags and improved language tag handling in Locale . java and LocaleEnhanceTest . java to enhance robust
cloudstack - 6892 : add kvm . ssh . to . agent configuration option to disable ssh to agent .
[ hotfix ] fix checkstyle violation in schedulerwhen
updated import statement for PagerSlidingTabStrip from ` com . astuetz . viewpager . extensions ` to ` com . astuet
added a condition to exclude the " - " character in the filter condition to ensure that the filter does not contain specific characters
updated sort column text from " natural order " to " natural column order " in BrowserContentPane . java and refactored statistics retrieval in
removed array copying method from Utils . java to simplify code by eliminating unnecessary array copying
updated the method to encode the remoteAddr in HtmlSessionInformationsReport . java to ensure proper HTML encoding to enhance security by preventing XSS
fix item state trigger for smarthome / items ( # 5396 )
removed unnecessary synchronized blocks in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
added concurrent move file handling and improved error management in Hive to enhance performance and responsiveness during file movement operations
added methods to trigger a timer with specified period in WrapTimer . java to enhance the flexibility and control over timer scheduling behavior
added support for additional SQL _ DATE , SQL _ TIME , SQL _ TIME , and LOCAL _ DATE _ TIME types in TypeStringUtils . java
added a verbose error logging option to the AbstractStatusReporter to provide more detailed error logging based on user preferences
added menu toggle functionality to the Header and ItemControls classes to ensure proper menu state management when the application is displayed
s2s vpn : do n ' t allow vpn connection between same account ' s gateway and domain
updated error handling in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to ensure proper exception handling and improve test coverage
pdfbox - 4892 : do n ' t attempt to create / extract thumbnail if the pdf be encrypted
[ 3.0 ] fix deadlock in zk zk client ( # 10385 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code clarity and maintainability
updated variable names and method calls in HostsList . java for consistency and clarity to improve code readability and maintainability
refactor Java6Assertions and Conditions classes for improved clarity to enhance code maintainability and readability
change the return type of replaceOrderBulk method from Collection to String and update the parameter type from Collection to String to improve type flexibility and
replaced the method ` enterDefault ` with ` enterIdentNode ` and ` enterFunctionNode ` in ` FindScopeDepths . java
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to include a ` getLong ` method to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for multi - threaded verification to ensure proper handling of concurrent
of - 2599 : add ability to remove resource from roster .
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a method to
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for ` extTypeCustomDesers ` in ` MessagePackFactory ` and updated related tests in ` MessagePackFactoryTest `
remove system . setProperty ( " mockserver . logLevel " , " WARN " ) that set the log level to " WARN " to reduce unnecessary
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test code by eliminating unnecessary test annotations
removed unused imports and simplified the createJetty method in AbstractSolrMorphlineZkTestBase . java to improve code clarity and reduce
updated scoreMap to use termScoreMap instead of scoreMap to improve clarity and maintainability by using more descriptive variable names
updated conditional checks in U64 . java to use negative values and added a new ` eq ` method in ` U64 . java ` to
updated headline style settings in MainViewModel . java to improve text visibility and aesthetics in the user interface
updated notifyChange condition to include support for dark text to ensure notifications are only notified when the dark text is supported
[ flink - 20613 ] [ checkpointing ] do n ' t enqueue queued checkpoint trigger on too many pending checkpoint
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS to KEEP _ ALIVE _ TIME _
refactor filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use anyMatch instead of filter to improve readability and simplify the
added testRequirements . notWindows ( ) and TestRequirements . notArm ( ) to OpenCVImageFactoryTest . java to ensure compatibility with
http : / / issues . apache . org / activemq / browse / amq - 2698 - allow to specify a prefetch
fix py4j protocol . getreturnvalue to throw throwable instead of throw an exception .
added a new annotation ` Issues ` to the ` Issue . java ` interface and annotated it with ` Issue . TYPE ` and ` Issue
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
refactor socket connection logic to use a resolved socket address if the socksProxyHost system property is not set to improve flexibility by allowing
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to eliminate unnecessary dependencies and improve code clarity
replace HashSet with LinkedHashSet in SslContextFactory to maintain insertion order for protocols and ciphers
added a static variable ` systemResource ` and its retrieval logic in ` Resources . java ` to improve resource management by ensuring ` systemResource `
added a constant for the extra size of the plaintext segment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test for circuit breaker invalid fallback in ServerMvcIntegrationTests . java to ensure proper exception handling for invalid fallback URIs
added SSLConnectionSocketFactory and SSLContexts to the HttpClient configuration to enhance security by enabling hostname verification in HTTP connections
replaced the call to resetBytesReadCounter with a call to setSizeLimit in PerformanceTest . java to ensure proper handling of input size
moved the ` preferAES ` boolean field from ` ProtectionPolicy ` to ` StandardProtectionPolicy ` to streamline the code by elim
( chore ) camel - opentelemetry : replace system . out . println with log . info
[ ec2 ] remove elb integration test that be break by a previous commit .
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to improve code readability
added error handling for file creation in DiacriticTest . java to improve robustness by providing informative feedback when file creation fails
hhh - 14601 skip timeout test on oracle 11 when use ojdbc6
updated file handling in TextureUnpacker to check for existence and absence of the atlas file to improve error handling and provide clearer error messages
added locking mechanism for cluster global locks in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to shared resources
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet does not close the statement to ensure proper resource management and prevent potential resource leaks
refactor InputStreamBodyGenerator and ChunkingTest to improve input stream handling and add new test cases for buffer sizes to enhance input stream functionality and
added logic to remove pre - deleted databases from the schema response to ensure that only relevant databases are removed from the schema map
added a check to remove the " chunkedWriter " pipeline and simplified the write operation to improve efficiency by avoiding unnecessary flushing of the chunked writer
added a check to ensure the last deleted item ID matches the base item ID in EnhancedBrowseFragment . java and implemented item deletion in Full
added RuleBank interface and refactored RuleFinder class to improve rule management and encapsulation to enhance code maintainability and facilitate
make jcatlscrypto . dofinal throw a fatal alert if initialization fails
added TestMonomorphicObjectCall . java and Object . java files with native methods to facilitate testing of monomorphic object
replaced the method ` removeMetaDataSource ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop .
hbase - 25864 fix npe in hbase - memstore . shouldseek ( scan , store store )
[ hotfix ] [ runtime ] rename localstate _ sub _ directory _ root to file
updated the constructor of AlterTimeSeriesStatement to use a final boolean for alterView to ensure immutability of the isAlterView variable and
updated regex pattern in ` Condition . java ` and added unit tests in ` MatchTextConditionTest . java ` to enhance flexibility in matching
do n ' t swallow exception when try to retrieve the routing table builder
updated HttpClientIntroductionAdvice to handle null values before adding them to the paramMap to ensure that null values are not added to
( chore ) camel - jms : use char [ ] instead of string for password
server : fix search for child domain in case of recursive search
removed redundant equals and isUniformDistribution methods from Counters . java and CountersTest . java to simplify comparison logic and improve code readability
updated the ` initialize ` method to accept a ` SimulationStatus ` object and set warnings from an existing ` BasicTumbleStatus `
sulong : use getcurrenttimemillis ( ) instead of currenttimemillis ( ) in llvmamd64
updated the handling of variable references in PrettyPrinter . java to improve clarity and maintainability of the code
updated LRUDictionary to ensure indexToNode is initialized only if it does not already exist to optimize memory usage by avoiding unnecessary object creation
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic to enhance code clarity and ensure proper handling of datagram packets
test : migrate testquerydns to junit 5 ( # 4534 )
added a new class NutchServerInfo with properties for start date , configuration , and running jobs to provide a structured way to handle server
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
added timestamp functionality to CqlInserter , ThriftInserter , and SettingsColumn classes to allow users to specify a timestamp when writing
updated DSAParameterGenerator to use BigInteger . ONE instead of BigInteger . ONE for variable initialization to ensure proper handling of prime size constraints and avoid
refactor NumberUtils and Numbers classes to use private methods for better encapsulation and functionality to improve performance and maintainability of the code by
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added error handling for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
http : / / issues . apache . org / jira / browse / amq - 4687 - remove setzeroifnotfound
added methods to insert tabs and refactored tab creation logic in Tabs . java to enhance tab management functionality and improve code organization
updated array initialization from size ( ) to new Array [ 0 ] across multiple classes to improve code readability and performance by avoiding unnecessary array
[ hotfix ] [ test ] add support for taskmanagerruntimeinfo in mockenvironment
refactor conditional checks in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated mock variable names from " MOCK _ NAME2 " and " MOCK _ NAME _ UPDATE " to " MOCK _ NAME _
added a new file FormatCheckingTest . java to validate Java class name format errors to ensure proper error handling for illegal class names in the application
replaced ` statement . getLineNumber ( ) ` with ` lineNumber ( ) ` in ` CodeGenerator . java ` to ensure consistency in line number
added a try - catch block around the retrieval of the service configuration to handle potential exceptions during configuration retrieval
added methods to create a new RadioButton with specified text , icon , and command parameters to enhance flexibility and usability for creating radio buttons
increased the cache size from 100000 to 10000 in LRUCache . java and updated the metadata cache size in MetadataQuerierBy
int - 1181 , int - 1186 , int - 1187 , int - 1188 , int - 118
http : / / issues . apache . org / jira / browse / amq - 4358 - fix npe in osgi
add a system property ` ` usemode ' ' to load mode from resource
[ flink - 20613 ] [ yarn ] fix flakiness in yarnsessionfifitcase
renamed ` projectRoot ` to ` androidManifestPath ` and updated related methods in ` RobolectricTestRunner . java ` to improve
http : / / issues . apache . org / jira / browse / amq - 4898 - fix selective header propagation when
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enable the Arg class to include test targets for better build
updated placeholder and error resources in FileMessageVH . java to use a more descriptive placeholder for better user experience
updated OnExitTest . java file to improve test coverage and reliability
added a method to handle user preference changes in TaskbarManager to ensure the taskbar is recreated when user preferences change
refactor HeapDump to use reflection for heap dump methods based on IBM JVM dump type to improve compatibility with J9 and enhance compatibility with
( chore ) camel - mybatis : ensure session be close even if commit fails
danielwagnerhall : use the ie driver instead of the firefox driver
updated imports and modified trigger patterns in IteratorToFor . java for improved type safety to ensure compatibility with Java 5 and enhance type safety in
added a call to set the application state to Stateful . STATE _ UNAVAILABLE to ensure the application is stopped when it is not available
updated position and limit calculations in ByteBufferAs , Heap , StringCharBuffer , and StringCharBuffer classes to ensure correct handling of position and limit
replaced ` toUri ( ) ` with ` toString ( ) ` in ` split ( ) ` method to simplify the code by elimin
added ` setEmpty ` methods across multiple array data types and updated deletion logic in ` NativeArray ` , ` ArrayFilter ` , ` Deleted
changed enum access modifiers from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
updated document addition logic in TestMultiPhraseQuery . java to reflect changes in document structure to ensure correct handling of multi - phrase queries and improve
do n ' t assign pending ticket reservation for offline payment
added handling for onTimeout thread in HttpChannelState . java to ensure proper synchronization and state management during timeout events
updated logging statements in multiple test classes to use debug level logging instead of printing stack traces to improve log clarity and reduce verbosity during debugging
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated consistency level logic in read method to use LOCAL _ QUORUM instead of LOCAL _ SERIAL to ensure correct read behavior based on the
updated model manufacturer check to include " Home " alongside " Denon " in HeosDiscoveryParticipant . java and added player ID property
added a new ` Wait ` class and updated ` PlainSelect ` to utilize it for managing a wait time in SQL queries to enhance the
updated Neo4j attribute handling in gephiNode and gephiEdge to utilize AttributeController for node and edge data attributes to improve
updated null check for from and serverName in SessionManager . java to ensure proper handling of null values to avoid potential NullPointerExceptions
nifi - 1748 : move rocksdbmetronome into controller repository instead of rocksdb
updated the method to retrieve the " IS _ GRANTABLE " value from the results object to ensure the correct retrieval of the " IS _
added logging functionality and improved URL validation in JavaScriptContext . java to enhance debugging capabilities and ensure only valid URLs are processed
camel - cxfmtom : fix test that fail on macosx
hbase - 26490 loadtesttool do n ' t allow modify a column in the same cf ( liu shaohui
added Disposable interface to Texture class to ensure proper resource management and dispose of texture objects
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper and modified OSGiAppProvider to set extractWAR
( chore ) camel - besu : make goquorum compatibility mode configurable
replace IOException with Throwable in HttpInput . java to improve error handling by capturing a broader range of errors
added a condition to skip the " JP " country in LocaleTest . java to address potential issues related to locale changes in era
updated API operation annotations to use HostResponse . HostResponseWrapper instead of HostResponse . Wrapper to improve clarity and consistency in API documentation
added boost comparison and hash code calculations in FilteredQuery . java to ensure accurate query equality and hash code generation based on boost values
reformatted the constructor of FileMenuFilter for consistency to improve code readability and maintainability
ggb - 2175 make sure we do n ' t show symbol table when debug flag be set
added a new file TestCMSClassUnloadingDisabledHWM . java that tests CMS class unloading behavior to ensure that the CMS class un
check for empty entity list before create a forgeevent to avoid npe .
renamed ` KeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related method signatures to improve clarity and consistency in
make test more robust by use abstractbounds instead of range
added a null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added support for SpEL in OperatorEnum and created SpELJudge class in OperatorJudgeFactory to enhance the functionality of the Condition data
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 205276 , use openide . util . lookup instead of service . providers
updated multiple Java files related to Conscrypt to improve code consistency and maintainability across the codebase
updated attribute resolution logic in AttributeResolution9 . java and changed variable declarations in ShadowArscAssetManager9 . java to improve clarity and
hive - 13686 : upgrade hivesource and target from 1.5 to 6 ( siddharth seth , review
changed access modifier of extractMetadataColumns method from private to public and refactored project handling in PushProjectIntoTableSourceScanRule to allow
updated AboutActivity to sort the localized names before displaying them to improve user experience by ensuring the spinner is displayed in the correct order
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to set the " should _ refresh " preference based on live streaming setting to improve user experience by controlling refresh behavior based on
added exception context to the exception thrown in AuditConfiguration . java to improve error reporting by including the original exception cause
( chore ) camel - file : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest to use wildcard generics to enhance type safety and eliminate raw
added support for transport checks in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to enhance transport support detection and improve code
added delegation name logging for various input consumer classes to enhance traceability and debugging capabilities for better user experience
added null check for mavenMetadata and updated version handling logic in ChangeParentPom . java to improve robustness by handling cases where mavenMetadata
added a check for the " Large Page Support : ( \ \ w * ) " and modified logging statements in TestLargePageUseFor
cloudstack - 2187 : skip migration if the database do n ' t exist
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix test failure on window
added a new file TestObjectStreamClass . java for testing ObjectStreamClass functionality to facilitate testing of serialization and deserialization of Object
modified the condition for data center info checks in ZoneAwareDiscoveryFilter . java to ensure proper handling of null values to avoid potential null pointer exceptions
change log level from error to warn in OpenTracingTracer . java to reduce noise in logs for non - critical issues
added a toString ( ) method to the Generator class to provide a readable string representation of the generator ' s state
refactor URI handling to initialize doquote and dontquote based on the presence of a colon to improve clarity and correctness of URI parsing
added a check for null or empty resources in ClusterControllerImpl and implemented a test for NoSuchResourceException in ClusterControllerImplTest to ensure that resources
added error logging and improved response extraction logic in AccepttoApiUtils . java to enhance robustness by handling null responses gracefully and providing clear
removed conditional logic for ByteBuffer allocation in VertexBufferObject . java to optimize memory usage for Android versions below 5 and improve performance
refactor SybaseASADatabase class to improve code readability to enhance maintainability and facilitate future updates
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor to ensure backward compatibility while maintaining backward compatibility
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` object for
added new flags for mutable and immutable PendingIntent in AndroidImplementation . java to enhance security and ensure compatibility with newer Android SDK versions
added methods to append read column IDs and updated configuration handling in HiveFileFormatUtils . java and HiveInputFormat . java to improve clarity
[ hotfix ] [ network ] rename getupnpaddress ( ) to getipv4multicastaddress ( )
added multiple ` DisplayTemporaryToast ( ) ` calls to ` DisplayTemporaryToast ( ) ` in ` SavedExperiments .
added version handling logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service info has a valid version when it is null
added a new test class RawSerializationTest for Gson serialization tests to ensure correctness of JSON serialization for various collection types
simonstewart : implement sslcertificategenerator interface for generate ssl cert for logging host
updated the handling of replies in ExpansionViewHelper to use an index - based loop instead of a loop to improve performance and ensure proper padding
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access errors
added a test method for the NGram filter payload decoding in TestNGramFilters . java to ensure that the token stream correctly processes and
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
added tests for different array sizes in EasyRandomTest . java and removed redundant code in SeedParameterTests . java to improve test coverage and ensure
bug 10363 : do n ' t throw exception if vm can not stop
added a ThreadLocal for handling tryWriteAgain in SslConnection to manage thread - local state to ensure proper handling of try - write - against
added a method to check if an actor is an ancestor and updated its visibility handling to improve code readability and ensure proper visibility checks for actors
added a log statement to indicate a failure during the rolling - update process to provide better visibility into failures during the rolling - update process
[ hotfix ] [ table - common ] fix checkstyle violation in table - common
added handling for BadCredentialsException in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent class to improve authentication error reporting and facilit
updated AtMostXVerificationTest . java file to improve test coverage for verification functionality
updated default query type to use QParserPlugin . DEFAULT _ QTYPE instead of OldLuceneQParserPlugin . NAME to ensure consistency with the
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and ` JavaLanguageServer ` , and created a new ` Locals
updated the parameter of ` test _ fetch _ token _ from _ authorization _ code ` from ` idToken ` to ` shouldHaveIdToken
added methods ` beginTransaction ( ) ` , ` setTransactionSuccessful ( ) ` , and ` endTransaction ( ) ` to ` DatabaseAdapter `
replaced byte array with ByteArrayOutputStream for reading and writing bytes to improve performance and reduce memory usage during string conversion
fix for http : / / issues . apache . org / activemq / browse / amq - 2175 - improve exception message
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a source file is an instance of ` J . Compilation
added configuration parameters for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance and resource management during index writing
added witness management functionality and a test for updating witnesses in the Manager and NodeDelegateImpl classes to ensure the witness data is correctly updated and
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing potential NoSuchElementException during iteration
remove flumenode . logversion and flumenode . logenvironment ( log , level . info ) from flumeshell and flume
updated basic authentication and authentication metrics in BasicAuthIntegrationTest . java and DaemonStream . java to enhance collection reindexing functionality and improve thread management
changed the implementation of ` nodes ` from ` HashMap ` to ` LinkedHashMap ` to ensure predictable iteration order in the graph structure
fix ( jersey ) : log 500 instead of 500 when jersey throw an internal error
refactor header validation to use a separate method for better readability to improve code maintainability and reduce duplication in header validation logic
added a switch statement to handle additional system property keys to ensure proper handling of system properties based on Java specifications
changed method parameter types from String to CharSequence in StringSubject . java and added corresponding tests in StringTest . java to improve flexibility in handling
add tojfr intrinsics for jvm . countertime ( ) , jfr . getClassid ( ) , and eventwriter ( )
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated DataSource assignment logic in PersistenceManagerProvider . java to handle compaction to ensure correct datasource is created based on configuration settings
refactor DeploymentOptions class to improve code structure to enhance maintainability and readability of the DeploymentOptions class
modified the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and adjusted drawable bounds to
updated resource management in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve performance and simplify resource management
added support for coalesce function in RexNodeConverter and registered it in SqlFunctionConverter to enhance the functionality of the RexNodeConverter
( chore ) camel - hl7 : fix the unit test of camel - hl7
updated context class loader usage in JavassistProxyFactoryFactory and modified exception handling in JavassistProxyFactoryFactory to ensure proper
updated DefaultDateTypeAdapter constructor and synchronized access modifiers in DefaultTypeAdapters . java to improve thread safety and ensure consistency in date formatting
reformatted code for consistency and readability in DocumentUtil . java to improve code maintainability and adhere to coding standards
refactor HttpClientRequestBase to simplify URI setting and query handling to improve code readability and maintainability
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to optimize the handling of feed entries that exceed a maximum of 50 entries
hbase - 25815 log level of walappender should be warn instead of fatal
refactor NodeMap to implement a new class NodeMapIterable to improve code organization and clarity to enhance maintainability and readability of the
updated import statements and variable names for predicate definitions in DiscoveryClientRouteDefinitionLocator . java to improve code clarity and maintain consistency in naming con
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator
of - 2599 : add " admin " to the admin list if it do n ' t already exist .
replace usage of MultiFields with SolrIndexSearcher ' s getSlowAtomicReader method in IGainTermsQParserPlugin and SignificantTerms
updated the method to return the class name and hash code instead of the bean ' s string representation to improve clarity of bean representation by including
refactor primitiveType assignment logic in GroovyParserVisitor . java to simplify null check to enhance code readability and maintainability
svm : remove uninterruptible method from frameinfoqueryresult . hashcode ( string ) .
increased timeout values for blockWhenFull and blockingBar in SedaBlockWhenFullTest . java to allow more time for the
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
updated the logic for determining the read length in MessageUnpacker . java to ensure the read length does not exceed the buffer size to prevent potential
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated SQL query to include the user identifier in the query to ensure that the icon ' s associated user is correctly filtered by the user ' s
[ issue # 5390 ] fix back pressure for async send size ( # 5391 )
do n ' t allow whitelisted resource for classfiles that do n ' t have a classfile
fix baremetal _ dhcp _ devices _ nsp _ id and baremetal _ pxe _ devices _ pod _ id foreign key conflict
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying when audio track is tear down to ensure proper
added a scheduled executor for upstream tasks in UpstreamCacheManager to improve task execution control and control over upstream tasks
refactor StreamType class to improve code structure to enhance maintainability and readability of the code
updated assertion message in Recording . java to include an additional context to improve debugging by providing clearer context on the assertion failure
updated FilestorePage and RootPage to check user role before displaying filestore statistics to enhance security by restricting access to filestore statistics
( chore ) camel - elasticsearch : temporarily disable test in camel - elasticsearch - rest
added a check to ensure the method ' s declaring class is valid before processing the method to improve robustness by avoiding potential null pointer exceptions
updated button text from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and "
camel - 16400 : camel - restlet - do not allow path prefix to be match on the consumer context path . thanks to
block : fix typo in createnextblock and createnextblockwithcoinbase ( )
removed Serializable interface from BTreeMapJava and updated related test cases in ConcurrentSkipListMapTest to simplify serialization behavior and ensure proper exception handling
added a null check for the cause before logging errors in RuleEngineImpl . java to improve error logging clarity by avoiding null pointer exceptions
refactor conditional logic in Main . java for clarity to improve readability and maintainability of the code
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to ensure consistency
deleted the PlainVerifier . java file to remove unused code to streamline the project
added a condition to close system windows when triggered from the Alt Tab to ensure proper user experience by closing the relevant windows when triggered from the Alt
updated bottom sheet dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve dialog behavior and ensure proper state
updated MimeUtil ' s charset parsing to include UTF - 8 encoding to ensure consistent character encoding handling across different platforms
added a call to super . deinitialize ( ) in the TextField class to ensure proper resource cleanup and prevent memory leaks
refactor testSerialization method to use TestUtilities for serialization to simplify code and improve readability by utilizing a centralized serialization method
updated parameters in LogicalGenerator and GroupByFillDataSet , and added a new test for grouping fill 7 to enhance functionality and ensure correct handling of
added checks for negative array size and improved argument handling in JAXWSExceptionBase . java to ensure proper exception handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4425 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for thread termination in
[ hotfix ] [ test ] change default default value of legacy to region
added title handling methods and removed i18n - safe annotations in ShadowActivity , ShadowAlertDialog , ShadowTextView , and ShadowToast
replaced Apache Commons Logging with Apache POILogFactory and POILogger in POIFSFileSystem . java to improve logging consistency and
[ ipcamera ] fix issue with empty object code in alarm and pir .
add latency when delete a map ( # 11879 )
refactor status check in Response . java to use a switch statement for better readability to improve code clarity and maintainability by using a
refactor javac location retrieval in CheckResourceKeys . java to use a local variable to improve code readability and maintainability by reducing
fix project name for stable channel platform ( # 3396 )
added a new test class deprecatedStubbingTest to validate stubbing behavior in Mockito to ensure proper functionality and behavior of stubbing methods in
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server
hunspell : fix typo in the suggestion for nbn - adv
add system property to allow RSA key exchange by default
fix resource leak in perforce history parser and repository
added OAuth factory and access token handling in PubSubAPI and SDMAPI classes to improve service management and ensure proper cleanup of OAuth services
changed the interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to
added handling for UpdateRegionLocation in ConfigPhysicalPlan and improved logging messages in ProcedureManager and RegionMigrateProcedure to enhance logging clarity and
added a new file ` FileDialogLeakTest . java ` that tests the finalization of a FileDialog to ensure proper resource cleanup and
hbase - 16400 addendum fix package name conflict in testopentableincoprocessor
trufflefeature : check for uninterruptible annotation in implementation method .
[ hotfix ] [ protobuf ] remove unused splitmethod call in pbcodegenrowdeserializers / serializers
updated the condition to check for non - null ` disi ` in ` DrillSidewaysScorer . java ` to ensure that the
improve the stability of the test by wait for the source info to be refresh .
added support for Java 9 in Constants . java and updated Helper . java to check for minimum Java version to ensure compatibility with different Java versions and
updated FileReporterTest to cast null to String and File types to ensure proper type handling for null inputs
changed the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for checking end - to - end encryption keys to ensure the
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing back navigation in the action bar
added GET _ USER request handling and updated protocol version from 5 to 6 and introduced getUser method in RpcUtils to enhance user retrieval functionality and improve
added a system property check for " os . arch " in TestJdbcPluginWithMSSQL . java to ensure compatibility with both AMD
replaced the variable ` startClass ` with ` originalStartClass ` in the ` notFound ` method call to improve clarity by preserving the
updated error message format and added local creation for parameter register numbers in DexBody . java to improve clarity of error messages and ensure proper
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
fix nimbus look and feel when switch to nimbus look and feel
updated version string replacement in AppPage . java to ensure consistent version formatting across the application
refactor animation listener listeners in LauncherAppTransitionManagerImpl to use local variables for alpha and translation to improve code readability and maintainability
dumpedprivatekey : fix typo in error message
fix npe in editoffermodel when create new offer
updated milestone parameter handling in TicketPage to distinguish between open tickets and repository to ensure correct parameters are passed based on milestone state
updated the RFBattery value from 640 to 80 in PipeItemsWood . java to adjust the battery status for improved performance
added a new method ` getClusterKey ` to store cluster names and revisions in the ` clusters ` map to improve code clarity and maintainability
initialized ` downgradeAllowed ` to true and added a test for downgrade functionality in ` UpgradePackTest . java ` to ensure the upgrade
replaced occurrences of ` NameType . ATTRIBUTE ` with ` NameType . ELEMENTSTART ` and ` NameType . ATTRIBUTENAME `
add a configuration option to emulate system load library in lwjgl .
replaced the usage of ` App _ NAME _ COMPARATOR ` with ` LauncherModel . getAppNameComparator ( ) ` and ` Launch
modified output stream handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and ensure the directory exists
updated the doTest method to include additional parameters and improved assertion messages in TestSecretKeyCredentialHandler . java to enhance test readability and provide
( chore ) camel - core : refactored routebuilderfinder to use springcontext instead of applicationcontext
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 25836 testfulllogreconstruction . testfulllogreconstruction fail on slow box
added support for address reuse in DatagramSocketOptions to enhance network configuration options for improved performance
fix server shutdown message to be more descriptive .
http : / / issues . apache . org / jira / browse / amq - 3874 - remove deprecated interface from org . open
updated error messages for field validation in VersionInfo . java to improve clarity and accuracy of error messages for better debugging
renamed ` equalityPredicateColumns ` to ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
modified the initialization logic in HandshakeHandler . java to ensure proper handling of unexpected identity to improve the stability and reliability of the channel
updated formatting in Navigator . java to improve code readability and maintain consistency
changed access modifiers of constants and registered ParquetRecordReaderClass to static final in RecordReaderFactory . java and added a new test class Record
added case handling for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests to enhance query
refactor SQL expression selection logic to include a check for group by expressions outside the GROUP BY list to improve clarity and prevent SQL compilation errors
updated MappedByteBuffer , FileChannelLinesSpliterator , and Files classes to support atomic buffer unmapping and resource cleanup to enhance memory management and prevent
refactor code to replace direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` to improve code readability and
added a schedule method to CircuitBreakerImpl and updated its usage in CircuitBreakerTest to improve scheduling functionality and enhance test reliability
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from the intent flags set in Launcher . java to simplify intent
rename " ajax " to " progressbar " in SubmissionController and FileUploadRequest classes to improve clarity and consistency in naming conventions
added @ Disabled annotation to TableExtRetrieverTest . java to disable tests that allow for retrieval strategy for column privileges
added synchronized keyword to methods in EntityGraph . java to ensure thread safety when accessing the exported count
updated import statement for IntRangeUtil1 from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative
updated character validation logic in HttpParser . java and added a new test for encoded headers in HttpParserTest . java to ensure proper handling of
updated the activity layout from trends _ activity to configuration _ activity to align the UI with the new configuration design
updated the print statement to include the position of the SLWT found in the document to improve clarity of log output by providing more context
refactor ForceLeaderTest and HttpPartitionTest to utilize a timeout mechanism for determining document count to improve test reliability by allowing for potential
refactor Thread class methods for improved performance to enhance efficiency of thread management operations
added a new set of template file suffixes and initialized it with a default value of 11.0 f to improve flexibility in template file handling
camel - 16400 : fix camel - cxf to correctly set the namespace on the payload element .
updated formatting in YamlRepresenter . java for consistency to improve code readability and maintainability
updated string formatting in ToChar . java and added new test functions in TestFunctions . java to improve readability and ensure correct handling of date
added imports for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits . java to configure transaction configurations to ensure compatibility with
refactor JsonSerDe initialization to use isEmpty ( ) method instead of length checks to improve code readability and performance by avoiding unnecessary object
hotfix for issue 293 ( reset book / sheet to binary spit out error )
refactor SSTDeserializer and TestSSTDeserializer to improve string manufacture logic and add a new test case for handling non - continuation
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant instead of a hardcoded value to improve code readability and
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to provide clearer context on line - break character discrepan
added a boolean flag ` waitingForKeys ` in ` DecoderInputBuffer ` and updated related logic in ` ClippingMediaPeriod ` to
removed the " / api / margin / v3 " prefix from the API path annotations in OkexV3 . java to streamline API
refactor conditional checks in LineUtilitiesTests for better readability to improve code clarity and maintainability
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
log warn if defaultdrmsessionmanager be use on wrong thread
added a new METHOD type and modified the handling of member access and method calls in VariableContext . java to enhance the functionality of the VariableContext
added unit tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java and removed the asNullableBoolean method in ExperimentJSONParser
[ java ] use buffer . position ( ) instead of buffer . capacity ( ) in piece . java and sharingpeer . java .
added HttpClientProperties to manage response timeouts in NettyRoutingFilter and RetryGatewayFilterFactory to enhance HTTP client configuration flexibility by allowing custom timeouts
refactor ` NativeLinkTargetGroup ` and ` NativeLinkTargetInput ` methods in ` CxxLibraryFactory ` and ` NativeLinkTarget
( chore ) camel - main - add unit test for restconfiguration
added support for RexFieldAccess in ASTConverter and updated RexNodeConverter to convert ExprNodeFieldDesc to RexNode to enhance
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
add noproxy predicate to webclientrequestbuilder # relativizenoproxy ( ) ( # 10385 )
refactored certificate chain handling in PKCS12KeyStore . java and added certificate loading in StoreSecretKeyTest . java to improve code clarity and
added reflection access checks and refactored methods in ReflectionCheckLinker and NativeObject classes to improve security by ensuring proper access control for reflection
removed the ' public ' modifier from the constructors of the CollisionMap class to enforce encapsulation within the package
deprecate getrawinputfromtransactioninput ( ) , remove @ notnull annotation
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability
server : fix region _ id and user _ id in configurationserverimpl
bug 60284 : throw encrypteddocumentexception when extract old excel file
[ gr - 32913 ] add -- add - exports = all - unnamed benchmark to mx _ benchmarks . py
modified the visibility setting of the image holder in TimeLineCursorAdapter . java to ensure the image is displayed correctly when certain conditions are met
increased the sleep duration from 10 milliseconds to 50 milliseconds in BatchingStateChangeUploadSchedulerTest . java to avoid all attempts timing out
refactor file deletion logic in ShadowContext and add a new test method in ContextTest to improve directory management and enhance test coverage for named directories
replaced ` ExceptionFactoryImpl ` with ` Class . forName ` for ` AssertionFailedError ` and ` ComparisonFailure ` to improve compatibility and
increased the WAIT _ TIME _ MS constant from 10000 to 60000 to provide more time for wait operations to complete before timing out
updated ConnectOAuth2RequestFactory and ConnectTokenEnhancer to use a custom audience parameter instead of a static claim to enhance flexibility in
camel - 14263 : camel - kafka - allow to break on first error by default
added a new constant selectableItemBackground with a value of 0x10a13 to provide a customizable background color for selectable items
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and provide a
updated event type assignment logic in TxnSetOperation . java to ensure correct event type assignment when record is null
move resumeexternaldownload to a separate listener so that it can be reuse .
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad .
added support for setting formats in HSSFDataFormat and updated related assertions in TestWorkbook to ensure correct data format handling and improve test accuracy
[ hotfix ] [ kafka ] [ flink - kafka ] [ connector / kafka ] deprecate flinkkafkaprodu
updated the condition to check for the maximum compressed length in CompressedInputStream . java to ensure that the compression length does not exceed the maximum allowed
added idempotent repository for camel - redis . thanks to benjamin graham for the patch .
fix vanilla do n ' t use metadata if vanilla do n ' t use metadata .
fix legacylocalrepositorymanager to only return the local repository if it ' s the layout
added checks for the initialization of the TaskManager and improved error handling in LocalTaskManagerThread , JobManager , and TaskManager classes to
added detailed deployment details in AbstractArtifactResolutionException . java to enhance error handling and provide clearer guidance on deploying files
replaced direct calls to ` FileStorageUtils . getTemporalPath ( ) ` with ` FileStorageUtils . getInternalTemporalPath ( ) `
refactor FeedEntryStatusDAO to use a dedicated method for fetching by entries and subscription to improve code readability and maintainability by reducing
added thread execution logic in ContextImpl and refactored deployment options in BlockedThreadCheckerTest to improve responsiveness and maintainability of
updated the ` instantiate ` method to accept a ` formatterString ` parameter and added a null check for the ` ctorArg ` parameter to improve
updated file input stream handling in LoadContactsTask . java to support Android O and above to ensure compatibility with newer Android versions while maintaining functionality
replaced multiple instances of ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignment of ` remoteAddress ` and ` remoteHostname `
added a null check for the realClass in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements to
added a check for ` configuration . tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySsl
updated imports in BasicHttpTest . java to include ISO _ 8859 _ 1 and added a test for SSL exceptions to ensure proper handling of
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to these methods for external use
updated formatting in PageChangeListener and FrameRenderer classes to improve code readability and maintainability
corrected a typo in the warning log message from " email " to " SMS " to ensure the log accurately reflects the intended
no effective change - add query optimization for draftable element
added retry logic for resource temporarily unavailable in MultipartBody . java to improve robustness by handling potential IO exceptions during file transfer operations
fix checkstyle issue in java / lang / string / executablefactory / zipfolder / zipfolder . java
refactor multiple classes related to endpoint configuration , SPEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix ` ` work directory not find ' ' error ( # 4649 )
added LoadOptionsBuilder and SchemaInfoLevelLevelBuilder to SchemaCrawlerOptionsBuilder to enhance configuration flexibility for loading schema information
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace throw statement with return null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set the name , enabled , and expanded states of the prototype in ProjectProperty . java to ensure the project property reflects the
refactor connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
refactor DataStreamJob class to improve code readability to enhance maintainability and reduce complexity
updated file output stream handling in TestContentProvider . java to use try - with - resources for better resource management to ensure proper resource management and
camel - 16400 : camel - cxf should use classhelper . getrealclass ( ) instead of getclass ( ) .
modified the protocol check in HTTP2ServerConnectionFactory to include a conditional check for H2 - 14 protocol to ensure proper handling of HTTP / 2
refactor MethodSymbol handling in LambdaToMethod . java and add a new boolean for lambda detection in ClassFileVisitor . java to improve clarity
tregex : fix typo in sbarq rule
increased the timeout duration for file copying in DL4JInceptionV3Net . java from 5000 to 60000 to allow
added a method to set phraseSlop in QueryParser to enhance query parsing accuracy by incorporating phrase sensitivity
increased LONG _ PRESS _ DELAY from 10 to 100 in LongPressMouseListenerTest . java to allow more time for the
increased the timeout value for metricsServers from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink
refactor : replace ` GameScheduler . parallel ( ) . schedule ( ) ` with ` ScreenGrabber . scheduleParallel ( ) `
updated visibility logic in EditShareFragment to conditionally show or hide the compound view based on the availability of edit options to ensure the compound view
update progress calculation in DepthController . java to ensure progress does not exceed 1.1 f for better user experience
remove packetreceived ( ) from clientsession and componentsession , since it be no longer use .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service before accessing its methods in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
added ` hidden = true ` to the ` arity ` and ` account level permissions ` message in ` PantheonCommand . java ` to
do not instrument ` ` androidx . room . CoroutinesRoom $ Companion ' ' class in ` ` androidx .
removed unnecessary context class loader retrieval in NegotiateAuthentication . java to simplify the code and improve readability by eliminating unnecessary synchronization
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization of the datasource factory bean
camel - 7999 : added bean name for queue reply manager to help identify the thread
refactor AuthenticationProvider and TargetObject classes for improved consistency to enhance code maintainability and readability
added handling for tagged PDF documents in PdfDocument . java to ensure proper management of text block elements when tags are present
http : / / issues . apache . org / activemq / browse / amq - 2698 - add test for patternselector
danielwagnerhall : launch the test runner in hta mode instead of throw an exception
added a new class ` MwThankPostResponse ` and updated the ` thank ` method in ` Service . java ` to implement
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to implement it to enhance socket handling capabilities in the Jetty IO framework
updated revokingStore initialization and max size setting logic in Manager . java to ensure proper enabling and disabling of the revoking
added unit tests for implicit joins in HQLTest . java to ensure correct retrieval of call and LocalDateTime data from the database
normalize line breaks in assertions in NonVisualRegressionTest to ensure consistent line endings across different operating systems
refactor IndexWriter and MockDirectoryWrapper to handle file references more effectively to improve resource management and prevent unreferenced files during index commits
removed ' final ' modifier from several public methods in BaseError . java to allow method overriding in subclasses
added validation for the user resource percent in ConsumeUserResourcePercentActuator to ensure that the new percent is within the valid range of 0 to
added a condition to check if the legacy login display is enabled based on a system property to improve flexibility in displaying legacy login options based on
rename streamnetworkthroughputbenchmarktests to streamnetworkthroughputbenchmarktest
removed conditional logic for setting the response page in EditTeamPage . java to streamline the user navigation process and improve user experience
updated debug log message from " error with cred file during startup " to " error initializing plugin credentials " to improve clarity of error messages for
refactor shutdown logic in ConnectionManager . java to ensure proper handling of server socket channel closure to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
refactored dynamic partition specification logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing
replaced the ROUND _ HALF _ UP _ FACTOR calculation with a new method ` getRoundHalfUpFactor ` in ` StringTemplate
added ` visitDirectory ` method to ` JarDirectoryStep ` and ` DirectoryTraversal ` classes to handle directory traversal and prevent duplicate entries to improve
added a new class JWKSetEditor to handle JWKSet input to enable customization of JWKSet values in user input
refactor term finishing logic in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter classes to simplify
truffle : fix partial evaluation of klass in invokeespressonode .
change default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher thread limit for improved
simplify the conditional check for setting timeToLiveOfQuery to ensure correct behavior when transactionTimeout is less than queryTimeout
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to enable proper hashing
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
server : fix initial delay for network usage stats update task
updated interpolators in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and AllAppsTransitionController to use FINAL _ FRAME instead of
adjusted the height of the navigation bar based on the display density to ensure proper positioning of the nav bar relative to the launcher ' s
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and exports for better modularization
added null check for value in JsonType . java and refactored variable names in JsonTest . java to improve code robustness and maintain
removed unnecessary parentheses in context initialization in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] change default value of checkpointingoptions . tolerantfailurenumber to 0
refactor InnerClassesTable to use ElementKind instead of TypeElement for inner class references to improve accuracy in identifying inner class references within a package
added space to the command string in TimestampCheck . java to ensure proper concatenation of the options for the test tool
replaced FluentIterable with MoreCollectors for listing files to improve code readability and leverage modern Java features
[ 3.0 ] fix dubbo service registration ( # 10350 )
added onSettingsChanged method to end all sessions when the security otr mode be disabled to ensure that all sessions are closed when the security mode
added support for customizable node label outlines in the PreviewProperty and NodeLabelRenderer classes to enhance customization and customization of node label
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the method call from ` false ` to ` true ` in ` Win32FontManager . java ` to enable font management functionality in the
added a null check before executing the visit method in TreeVisitor to avoid potential NullPointerExceptions during the visit process
added error handling policy to JDTBatchCompiler based on the compiler ' s environment to improve error handling behavior based on the compiler ' s
added contentAlignmentPoint and textAnchor properties to LabelBlock and updated related methods to enhance label rendering by allowing customizable alignment points
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
added Locale parameter to the fromRfc1123DateString method to allow date formatting based on the specified locale
updated the file download assertion in FileDownloadViaProxyTest to include a file extension to ensure the test verifies the correct file format for downloaded PDF
nifi - 1748 : output a flowfile even if no hit find for query
server : fix the calculation of the one - hour cost per minute in the quota
[ java ] add try / catchup / follower / canvass / nominate / follower / follower _ catchup _
fix ( core ) : remove uncheck run from readfilesp and streamfilesp
refactor widget event handling logic in PageChangeListener . java to improve clarity and logic flow to enhance readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added error handling for unregistering invalidated sessions in PluginMonitoringFilter . java to improve robustness by logging exceptions during session unregistration
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " false " to " not reachable " in HueLightHandler . java to clarify the reason for reporting
do n ' t create fmlclienthandler if it be already load ( # 74303 )
updated return statements in UI , BlockInventoryFragment , and UI classes to use a bundle for millions , and thousands units to improve
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for querying users with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that querying
added unit tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps in JSON format
added logic to increment x2 and y2 if they fall below the offset to ensure that the geometry ' s position respects the specified offset
refactor sorting order dialog handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by standardizing sorting order
added error handling for empty test plan in StandardJMeterEngine to ensure that the application gracefully handles cases where the TestPlan is not found
updated method names from " public _ ( ) " to " public _ ( ) " in GeneratedEntityTranslator . java and JdbcManagerSupportImpl
modified argIdent assignment logic to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only assigned when appropriate
updated the default protocol setting in JettyHttpComponent9 from " SSL - HTTP / 1.1 " to use the configured protocol from the
volume vos : set default displayvolume to true
refactor version method to accept a boolean parameter and improve message retrieval to enhance flexibility in versioning based on user input
changed the size check from ` found . size ( ) = = 0 ` to ` found . size ( ) > 0 ` and modified the
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical issues
hhh - 14601 skip test that cause exception during sql string formatting
replaced multiple calls to ` startHandshake ( ) ` and ` setSoTimeout ( socketTimeout ) ` with a call to ` sslSocket
updated action bar size calculation to account for popups in multiple fragments to ensure correct action bar size is applied for non - popups in the
changed the default value of ` CHA ` from false to true and changed class declarations from ` DefaultClassHierarchyOracle ` to ` NoOp
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix thread context class loader
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions instead of DataProvider for generating random values to improve test readability and
added a conditional check for SERVLET _ MAJOR _ VERSION before retrieving required resource schemas and updated resource URLs accordingly to ensure compatibility with
fix : do n ' t throw an exception if a node be not ready
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure correct handling of endpoints in the handler context
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version of the RPC
added a null check for security manager before checking package access in ObjectStreamClass and ObjectStreamField classes to enhance security by ensuring package access checks
removed unused imports and updated method implementations in Utils . java , and changed UGSCommandCount to private in XLCDCommunicator .
updated DefaultMetricsTagProvider to return an unmodifiable map of tags instead of an immutable map to enhance immutability and thread safety of the tags
updated the addition of a test suite in ClientDriverSuite . java to ensure the MockBrowserTest class is correctly included in the test suite
change default logging level from Level . OFF to Level . ERROR to improve error reporting for better debugging
changed fields from private to private final in IconNormalizer . java to ensure immutability and improve code readability
added a flag to control the first - call prepare functionality in the PrepareInterceptor class to enable or disable the first - call preparation feature based on
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality of workspace and overview display logic
( chore ) camel - auth : use singleton instead of eager singleton
updated incomingAssociations method to include a boolean parameter for ignoring invisible associations to enhance flexibility in handling associations based on user preferences
bug cs - 15729 : remove private _ ip capacity from the db when delete a pod
updated the profiler command message in ProfileServlet . java to clarify usage instructions for Linux 4.6 + to provide users with guidance
refactor ModelResolver to improve required property handling and add a new RequiredRefFieldModel class to enhance schema validation logic to ensure required properties are
renamed multiple configuration classes to " CasCoreConfigurationWatchConfiguration " and " CasCoreStandaloneBootstrapConfiguration " to " CasCoreConfigurationWatch
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
[ hueid ] fix unique value for large hueid ( # 3560 )
added functionality to set a bitmap wrapper if the picture is available in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image is
hive - 23737 : disable minor compaction on insert - only table ( ashutosh chauhan via ashutosh
added a null check for mWaitingToSend . getStoragePath ( ) in the conditional check to ensure that the storage path is not null before proceed
refactor resize checks in VectorMapJoinFastBytesHashMap and VectorMapJoinFastHashTable to use a new checkResize method to improve code
updated LDAP connection logic in LDAPConnectionService . java to enhance security and improve connection reliability
camel - 14263 : camel - aggregate should not require a required attribute and deprecate it
added debug logging statements in TouchInteractionService , RecentsAnimationDeviceState , and No _ BACKGROUND _ TO _ OVERVIEW _ TAG to
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility
updated assertions in TestMultiSearcher to compare the length of hits2 and hits3 instead of the hits array to ensure tests accurately reflect
added a new file ` LucenePackage . java ` with a private class ` LucenePackage ` to provide a centralized way to access
adjusted the addition of sizeInBytes in RAMDirectory . java to correct the logic for updating the sizeInBytes value
mondrian : make genericudafbloomfilter and genericudafkfilter . estimate ( ) final .
added null check for getDrawerToggle before invoking onDrawerSlide to avoid potential NullPointerException when getDrawerToggle ( ) is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings about unused declarations in the method
added logic to handle classpath scanning based on overrideClassLoaders in Scanner . java to ensure that enableSystemJarsAndModules ( ) is called
add latex - free field support for corporate msbib export ( # 10650 )
added a method to cancel core recovery in CoreContainer . java to improve resource management and error handling during core shutdown
refactor time measurement and position difference calculations in bug5070081 . java to improve accuracy and readability of time measurement logic
modified the logic for handling single authentication control options in RepoEditView . java to improve clarity and functionality of the authentication process
updated connection parameter messages in PGProperty . java for clarity to improve user understanding of connection parameters in the application
added new imports for trust resolver , role hierarchy , and permission evaluator , and default role prefix in SecurityEvaluationContextExtension to enhance security expression configuration
added a check to set exponentSize to primeSize - 1 if it is zero to ensure proper handling of exponentSize based on primeSize
replaced direct usage of ` File ` with direct usage of ` FileStorageUtils ` for space retrieval to improve code readability and maintainability
replaced the ` combine ` method with a for loop for accumulateing values in ` DistinctSqlAggregation ` to improve performance by reducing
added a test method to verify post - login activities based on successful authentication to ensure that the UserService correctly executes post - login activities on successful
extractorspanishstrippedverb now take a path , so that it can be use by the extractorframerare .
refactor CharArraySet and TestCharArraySet classes for improved clarity and functionality to enhance code readability and maintainability while ensuring correct
updated error messages for track count and track type checks in MuxerWrapper . java to improve clarity and correctness of track format validation
refactor JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid for better type handling to improve code clarity and maintainability
updated character encoding in PinotClientRequestServlet and StringDictionary to use UTF - 8 encoding and improved string handling in StringDictionary to enhance
updated case name from " Logical Analyzer " to " Logic Analyzer " and replaced applications array with tile - based icon resources to improve code
added instanceClassName and instanceClass variables to manage object instantiation more efficiently to improve performance by reducing redundant instantiation of Vector instances
removed the method syncMetaLeader ( ) from CMManager . java to streamline the code by eliminating unnecessary method call
update feedback question detail html to include perceived response , not claim to instructor
added TestLoggingExtension to DiagramRendererTest . java to enable logging capabilities during testing
camel - 16400 : add support for map _ to _ camel _ to _ camel _ to _ camel _ to _ camel _ to
added support for VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enhance compatibility
refactor the retrieval of SSL session data in SecureRequestCustomizer . java to improve code readability and reduce redundancy
added a new file CreateNewSpreadsheet . java to implement functionality for creating a new spreadsheet using Apache POI ' s HSSF to
replaced ` Duration ` with ` long ` for TTL and time - to - live in ` CacheProperties ` and related tests to improve precision
changed the content URI type from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and LauncherModel to
update wiremock version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest
replaced synchronized block with synchronized ( this ) in SunFontManager . java to ensure thread safety when accessing shared resources
updated condition to check for character ' < ' in DocClassUtil . java to ensure correct handling of single - character literals in the code logic
removed String . format call from the return statement in Workspace . java to simplify the code and improve readability
added error message for no validation errors found in ValidateCommandStep . java to inform users about the absence of validation errors
updated IntegrationTestContextLoader to utilize DefaultResourceLoader and FileSystemResourceLoader for resource loading to improve resource loading flexibility and ensure proper servlet
updated component retrieval methods to use getComponentAt instead of getResponderAt in multiple classes to improve clarity and consistency in component accessibility
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated client ID references to use ` String ` instead of ` Long ` to improve clarity and
updated pattern replacements in CellContentConverter to use $ \ n1 instead of $ 1 to ensure proper formatting of expressions with line breaks
simonstewart : fix typo in glob transformation error message
mondrian : fix typo in mondrianproperties . java
added error handling and stack trace printing in ProcessTools . java and updated launcher permission checks in CustomLauncherTest . java to improve debugging capabilities and
removed the test method ` testEmbeddedImage ` from ` TumblrRipperTest . java ` to streamline the test code
added a check to ensure the store type has a slot before converting it to avoid potential errors during method conversion
fix a bug that cause extractorwrapper . init ( ) to always call subrange ( nextloadposition )
replaced the import of ` IndexWriterConfig ` with ` PrintStreamInfoStream ` and updated the ` BaseLockFactoryTestCase ` to util
tika - 3745 -- add support for dynamic service loader in tika config
added error handling for unexpected package - info comments in DocLint . java and refactored ArrayList initialization in DocLintTester . java to
added a new constant IMPORT _ CMD and updated condition checks in DataImportHandler . java to support both DELTA _ IMPORT _ CMD and
added a test to verify that inner classes do not modify definitions when ignoreDefinition is true to ensure correct behavior of inner classes when ignoreDefinition is
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
updated the ` checkItemPlacement ` method to accept ` ArrayList < Long > workspaceScreens ` as a parameter to enhance the functionality to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 487 & threadid =
refactor realtime segment data handling to use a list for transformed rows to improve code readability and maintainability by reducing repetition
added a condition to skip processing for Windows - specific display names to ensure compatibility with Teredo devices in the application
added a check to return early if the protocol provider is not registered before adding a contact to improve user experience by notifying when a contact is
replaced bean registration with bean component registration in AuthenticationConfigBuilder . java to improve clarity and maintainability of the registration process
updated the drawBitmap method to use a null r parameter instead of the left and top coordinates to simplify the drawing operation by eliminating unnecessary
updated date format in MeitrackProtocolDecoder and TotemProtocolDecoder from " ( dd ) ( dd ) ( dd ) ( dd
changed access modifiers of getFontPath methods in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used in new code
[ flink - 20613 ] [ test ] fix flaky test in clientmapstoretest
added a configuration option to keep empty sentences in multiple classes to enhance flexibility in handling empty sentences during processing
improve error message when fetch artifact from local maven repository
removed the IDELazyTreeLoader class and updated JavaLanguageServer and JavaCompilerService to use NO _ MODULE _ COMPILER to simplify
added a null check for the answer variable in DirectAgentAttache . java to ensure that a valid answer is returned when the resource returns null
added exception handling to the sendEmail method in Emails . java to improve error handling and logging for email sending failures
added a new API package - info . java and modified the PipeItemsObsidian . java file to include null checks for contained and stack
updated DateFormatEvaluator to accept a Locale parameter for date math parsing to ensure consistent date formatting across different locales
added a boolean field ` includeDecals ` and its getter / setter in ` StorageOptions ` , and implemented a checkbox for including decal
updated generateDocumentation method to accept a null parameter and modified the getImplementedDatabases method signature in LiquibaseTest to enhance flexibility in
updated performance logging in HiveProtoLoggingHook and refactored related methods in TestHiveProtoLoggingHook to enhance performance tracking and improve code
removed unnecessary whitespace in multiple classes to improve code readability and maintain consistency in formatting
updated output message to include the major version check to ensure accurate reporting of the class file version in the output
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure proper functionality of LDAP attributes in the application
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler . java to utilize footer scan functionality to improve performance by util
fix npe in saveall notification ( # 3396 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
reflector : do n ' t reconnect a pod if it do n ' t reconnect
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure compatibility with Sparklines when dealing with dynamic column data
added null checks for groupId , version , and plugins in RawPom . java to ensure required parameters are not null to avoid potential NullPointerExceptions
updated API assignment logic in V2HttpCall . java to handle null APIInfo gracefully to improve robustness by avoiding potential null pointer exceptions
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added disposal methods and shader resource management in PhotoPanel , FlameRenderer , and PhotoPanel classes to improve texture management and facilit
updated scene size and added context menu functionality in FxWindow , InsnListEditor , and InsnProxyListEditor to improve user interface
updated conditional logic in CSSParser . java to handle edge cases to ensure proper handling of character boundaries and prevent potential ArrayIndexOutOfBoundsException
added a check for the ' isLookAndFeelDecorated ' property in UIServiceImpl . java to enable or disable the default look
removed unnecessary ' NOT EXISTS ' clause from SQL query in HostRoleCommandDAO . java to simplify SQL query and improve code readability
updated function references from F5 _ UNKNOWN to F5 _ TRANSPORT _ TEST _ REPLY and F5 _ TRANSPORT _ TEST _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize color storage functionality in the application
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
removed unused Logger imports and initialized logger in various classes to improve code cleanliness and reduce unnecessary dependencies
added a method to retrieve global entries from the map to provide a way to access global data associated with the map
added multiple assertions to the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method beh
test : migrate cufiltertest to junit 5 ( # 4534 )
replaced hardcoded path separator with a constant value from the system ' s path separator to improve code readability and maintainability by avoiding
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow external access to the augmentSuccessViewModelObjects method
updated field assertions in InheritanceTest and TestUtil to use getDeclaredField instead of getField to ensure proper presence checks for properties in the metamodel for
removed unnecessary ` getConf ( ) ` parameter from ` Outlink ` constructors across multiple files to simplify outlink creation and improve code readability
removed the ` LexicalContext ` parameter from several methods in ` Lower . java ` and ` FunctionNode . java ` to simplify method signatures
added unused imports and modified the return statement in UseLambdaForFunctionalInterface . java and TypesInUse . java to improve code cleanliness
removed the method ` appendClassSelector ( createFileSet ( ref ) ) ` from the ` m _ classFilesets ` list to simplify the
removed unsupported root input check in HiveCardinalityPreservingJoinOptimization . java to streamline code by eliminating unnecessary checks
fix npe if a registry be n ' t register in the registry pool . close # 3560
reformatted variable assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods for SBE decoding in MessageDecoderFlyweight to establish a foundation for future implementation of SBE features
refactor Elasticsearch version handling to use a constant instead of a hardcoded version string to improve code readability and maintainability by avoiding magic
gracefully copy the torrent message to avoid concurrentmodificationexception
refactor cluster name and version handling in ClusterDefinition and GSInstallerClusterProvider classes to improve clarity and consistency in managing cluster versioning
camel - 14263 : remove unused setconfiguration method from camel - ftp
[ zeppelin - 4892 ] load dependency from zeppelin . properties file and set status to READY
added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure that local variables cannot be reserved for
added a check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints to ensure proper handling of uninitialized basic constraints and
added JDBC initialization logic for PostgreSQL version 9.4 and above to ensure compatibility with PostgreSQL versions prior to 9.5
updated WebSocket configuration and added buffer size validation in AbstractWebSocketConnection to ensure proper handling of input buffer sizes and improve error handling
lucene - 1748 : fix bug in indexreader . undeleteall ( ) when there be no pending delete
added null checks for scope in ClientRegistration and updated related test cases in ClientRegistrationTests to ensure that scopes are not null and improve error handling
added null checks for orderBy before adding it to the parameter and explanation to avoid potential NullPointerExceptions when orderBy is null
[ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t show back - up snapshot if the user be in kvm mode
added a debug log message to the initialization of HiveLog4j to improve traceability of the initialization process for better debugging
added a check for tasks size before accessing it in AssetManager . java to avoid potential NullPointerException when accessing tasks
change the return type of deleteNode and deletePubkeysListNode methods from void to boolean in PubSubManager and OpenPgpPubSubUtil to
fix null pointer exception when delete relation entity ( # 1193 )
added checks for empty barcode in Code128Reader , Code39Reader , and false positives in false positives to ensure robust error handling for
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to maintain insertion order for cipher suites
added a method to check for control characters in the Escaper class to ensure proper handling of control characters in the escape sequence
modified SqlProvider to support both String and CharSequence return types in SqlSource and SqlProviderTest classes to enhance flexibility in SQL source creation and
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to calculate the layout transition offset for a given page index to improve scrolling behavior by accurately
refactor variable names and improve code readability in JavaTemplate . java to enhance code clarity and maintainability by using descriptive variable names
added method . setAccessible ( true ) to WidgetInterceptor . java to ensure the method is accessible for accessibility
added a condition to set literal initializer only for non - " database . server . id " field configuration to ensure that the default value is not
updated the browser version from " Macintosh " to " Windows NT 10.0 " in AbstractRipper . java to ensure compatibility
added a web interface menu item to display the current server URL to enhance user experience by providing easy access to the application ' s web interface
added actualValueName to the AtomicReference handling in HandleGetter . java and updated related code in HandleGetter . java to improve clarity and
added error handling for record building in EncryptedSlideShow . java to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] improve logging of checkpointio
removed unnecessary call to loadBattlePassManager ( ) in Player . java to avoid null pointer exceptions during avatar postLoad
updated SSHD version from 1.0 . 0 to 1.1 . 0 and modified command line options in PortForwardingContainer . java to
added a new ` bigObject ` array and a call to ` System . gc ( ) ` in ` ThresholdTest . java ` to ensure
updated conditional checks and logging in StdErrLog . java and added new test cases in StdErrLogTest . java to improve logging accuracy and
fixed - rremoteservice . getremoteserivce ( ) method throw npe if service name be specify
added methods to retrieve and set the selected state of a RadioButton and CheckBox in MultiButton . java to enhance functionality by allowing checkboxes
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align the code with the
( chore ) camel - broker : remove unnecessary whitespace
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for health check to ensure Redis connection is properly closed after health check is performed
refactor theme color retrieval methods in ProgramGridCell and Utils classes to use resource ID instead of theme attributes to improve flexibility and maintainability
renames occurrence of ` participantTransportAddressChanged ` to ` peerTransportAddressChanged ` in CallPanel , CallJabberImpl , and
refactor the registration of multiple type adapters in ToolingApiLauncher . java to streamline the code for better readability and maintainability
updated the expected values in TestPayloadCheckQuery . java from a fixed value to a fixed value to ensure accurate testing of payload checks in the
updated ConsoleReader to handle character masking and added a new test for readLine with mask to improve character printing functionality and ensure correct behavior with mask
http : / / issues . apache . org / jira / browse / amq - 4892 - display user and command line when
[ fix ] update test package to org . graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to determine if the Java version is not emulate Java 8 in StreamExInternals . java to ensure compatibility with Java 8
updated texture paths in DecalTest , MusicTest , and SimpleDecalTest to use " sys . png " instead of " wheel
added unregistering of the mCloseSystemDialogsReceiver in the Launcher class to ensure proper resource management and prevent potential memory leaks
updated import statement for Cluster class in HostsRemovedEvent . java to ensure proper functionality of the Cluster class in the code
added support for allowing introspection in ClientDetailsEntity and updated related classes to enhance client introspection capabilities and improve error handling for token introspection
replaced direct calls to ` write ` with ` htmlEncode ` in ` HtmlSessionInformationsReport . java ` to ensure proper HTML encoding
added link for ` PhrasePrefixQuery ` and ` SpanQuery ` in the ` Query ` class to enhance the documentation for better clarity
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter ` and ` CommentsParser `
refactor method calls in NoValueOfOnStringType . java to improve clarity and functionality to enhance readability and maintainability of the
updated method signatures in AbstractAssert , Assert , DateAssert , and ExtensionPoints classes to use Object instead of A to improve type flexibility and
updated imports and interfaces to reflect the new package structure to improve organization and clarity of the codebase by aligning with the new package structure
added methods to get and set uploader behaviors in AppPreferences , PreferenceManager , and UploadFilesActivity to improve flexibility and maintainability of the
fix ( prettyprinter ) : do n ' t print final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s API for Bitmap
updated method name from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve cl
updated the page marker icon resource from ` pageindicator _ add ` to ` pageindicator _ current ` to accurately reflect the current page indicator
added a volatile int for reinvocations and updated logging messages in BasicInvocation . java to track and track the number of reinvocations for
updated calculations for topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure correct vertical
added a break statement in Recognize . java to ensure fall - through behavior in a switch - case structure
added HapticFeedback functionality and preference handling in Workspace , FolderNameEditText , and SystemShortcut classes to enhance user experience by providing t
updated conditional checks for formula types in ExcelBatchReader and added new test cases in TestExcelFormat to improve handling of formula types and ensure correct
fixed bug 138238 - immutablefield : do n ' t allow assignment of an anonymous inner class .
added a user agent field to CommaFeedConfiguration and modified HttpGetter to retrieve it to ensure the user agent is set dynamically based on application
added @ XmlAttribute ( required = true ) to AvroDataFormat and BarcodeDataFormat classes to ensure that the XML attribute is mandatory for
changed log level from info to debug for file not found messages to reduce log verbosity and improve performance
renamed QueueTest to QueuedPipeTest to clarify the purpose of the test class related to queued pipe functionality
updated version check logic in BukkitMain . java to check for OfflinePlayer ' s unique ID to ensure compatibility with newer server versions and
camel - 16400 : fix npe in defaultroutescollector when includepattern be empty / false
added vertexColor property and updated color rendering logic in PShape3D . java to enable or disable the vertex color functionality based on its value
updated the ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` classes to include a ` isPkColumnFiltered ` flag and updated
removed shadow extraction from matrix values in ShadowMotionEvent . java to simplify code by eliminating unnecessary shadow extraction
updated package structure for MetaRules and removed unused imports from PythonDslProjectBuildFileParser and its test files to streamline the codebase by
refactor class definition handling in GroovyEngine to improve clarity and functionality to enhance readability and maintainability of the code
( chore ) camel - hawtio : move plugin context listener to io . hawt . branding . plugin
removed redundant print statement in NativeCodeGenerator . java to streamline output for better readability and performance
replaced multiple calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to
added a new test method to verify behavior when both actual and expected causes have different types to ensure that the assertion correctly handles exceptions with different types
removed duplicate flattenName and packName variables in AutomaticDependencies . java to streamline code by eliminating redundancy
change variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to clarify the purpose of the variable related to scope
simonstewart : add a test to make sure we can set the profile in the firefox driver
camel - 14263 : camel - jbang - add support for managedroute . getdescription ( ) to retrieve route description .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a method to set the weight of the edge in ImporterCSV . java to enable dynamic adjustment of edge weights based on user - defined
fix tariff cost calculation on the current month ( # 4365 )
updated SQL query to select attributes from pg _ attrdef instead of from pg _ attribute a . adrelid = c . attnum =
added a null check for the binarized variable in SentimentAnnotator . java to ensure that binarized sentences are not built by
updated the User class to include detailed information about the user ' s attributes to improve debugging and provide clearer insights into the user ' s
updated the method to extract the message body as a string and added a null check for the body to improve error handling by providing a clearer
updated method names from ` TaskDeploymentDescriptorFactory ` to ` fromExecution ` for clarity to improve code readability and maintainability by using
improve roster access check by check if a user be a member of a group
added a reference to the " maven . test . classpath " reference in AbstractJRubyMojo . java and removed the @ Override annotation
updated assertions in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to ensure correct type comparisons and improve
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTML
updated width and height checks in URLImage . java to use ` ! = ` operator to ensure that image dimensions are not equal to the placeholder
added a check to ensure the class name does not start with " META - INF / " and updated package name extraction logic to ensure that only
added background task scheduling for createImageToFileSystem and createImageToStorage methods in ImageDownloadService . java to ensure tasks are executed on the UI thread
updated assertions and log message formatting in StackWalkerTest . java to ensure compatibility with version 22 and above in tests
changed method visibility of ` addViewportJob ` from protected to public to allow access to ` addViewportJob ` from other classes
removed the ' partitions ' parameter from the buildFlow method and related tests to simplify the method signature and eliminate unnecessary parameters
updated server configuration settings in TestDatabase . java to improve database server behavior during application shutdown
added null and empty check for block in NodePathsConvertOperator and modified child index handling in SchemaQueryMergeOperator to improve robustness and prevent
add total harvestingtime to ice to track harvesting time
updated font drawing parameters in ParticleEditor . java to improve visual representation of particle states for better user experience
added Hadoop environment property handling in UpgradeCatalog240 and updated related tests in UpgradeCatalog240Test to ensure " keyserver _ port " is set
added transparent background color to the SvgViewerFactory to enhance visibility and aesthetics of the SVG elements
removed ` minSdk = M ` from ` ShadowKeyguardManagerTest . java ` and ` ShadowKeyguardManager . java ` to simplify
updated the method signature of ` containsExactly ` to use ` asList ( varargs ) ` instead of ` accumulate ` and added a new test
updated the Bandwidth builder to include capacity and refillGreedy parameters and added a key check for bucket creation to enhance flexibility in
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and facilitate easier
added hooks set to the Generator class and modified transformations in QueryProperties , Optimizer , and SemanticAnalyzer to utilize postExecHooks to enhance
added handling for NoClassDefFoundError in REngine . java to set support to Boolean . FALSE to handle potential NoClassDefFoundError
refactor span handling in TraceWebFilter to utilize SpanAndScope for improved span management to enhance span management and ensure proper scope closure
updated exception handling in AbstractUpdateCommandStep to fallback to the exception message if the cause is null to improve error reporting robustness by providing a
updated exception handling to include the base URL in the exception thrown to improve error context for better debugging
updated landscape behavior in HSSFPrintSetup . java to correct the logic for setting landscape to ensure correct display behavior based on the
added a null check for the object before returning a NullWritable to avoid potential NullPointerExceptions when the object is null
added a validation check for argument names in ArgDesc . java to ensure that invalid argument names throw an appropriate exception
added in - memory background location listener to manage location updates to improve performance by avoiding unnecessary requests when the Android activity is not active
updated the conditional check for primitiveType in MeshBuilder . java to ensure proper equality check for GL _ POINTS
trufflestring : do n ' t convert byte [ ] to byte [ ] for string comparison .
added a method call to set the command list in ComboBox to ensure the ComboBox reflects the current state of command lists
nifi - 6892 : fix filename escape issue in tl toolkit stand alone
updated ZkCLI command to use " zkcli . sh - zkhost " instead of " sh - cmd " for connecting to localhost to
updated comparison logic in FirmwareUpdateProgressInfo and WemoLightHandler to use ` . equals ( ) ` instead of ` ! =
added a conditional check for remoteGrpcStatus before posting a severe event to ensure events are only sent when the remote gRPC status is OK
reformatted method signatures in multiple Java files for consistency to improve code readability and maintainability
added entity ID to tick if it ' s an entity entity to ensure that the tick ' s entity has a valid entity ID before processing
added a method to convert error codes to string representations for various EGL errors in GLSurfaceViewAPI18 . java to improve error
added a method to retrieve supported locales and updated error handling in the InfoRequestHandler to improve localization support and provide clear error responses for unsupported locales
updated the server URI format in RFC2616BaseTest . java to use " http : / / " instead of " / " to ensure
added addToHelperList ( ce ) to the helper list in Construction . java to enhance helper management functionality
added handling for - 2 length escape sequences in GlyphLayout . java to ensure proper processing of escape sequences when the length is - 2
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring proper context class loader access control
refactor file path handling and folder management in ReceiveExternalFilesActivity . java to improve robustness by ensuring a valid file path is used and
fix npe in testng when serviceloaderclassloader be null
removed unnecessary logging statement in BarrowmanCalculator . java and adjusted the deltap calculation in TubeCalc . java to streamline code and
updated column addition logic for Node and Edge tables in TimelineControllerImpl . java to ensure proper handling of node and edge columns based on the
http : / / issues . apache . org / activemq / browse / amq - 2698 - register brokeradminapiapplication
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to verify the correctness of
peergroup : do n ' t use witness protocol version if available
fix infinite loop in abstractbuilder due to infinite recursion
updated the ` configNodeSimpleConsensusSnapshotTriggerThreshold ` property and related methods in ` ConfigNodeConfig ` , ` NodeManager ` ,
updated multiple Java files to ensure consistent formatting to improve code readability and maintainability
added a check for ManagedService annotation before unregistering JMXHelper instances to ensure JMXHelper is only unregistered when the class is annotated with ManagedService
tika - 3745 -- hanlde non - unicode entry name should be detect by encodingdetector
added a new file TestSplitThruPhiDivMod . java with methods to evaluate modular division operations to ensure that division results in SIG
added methods to lookup generic types and their superclasses in TemplateRegistry . java to improve type handling and registration for generic types in the template registry
updated the constructor call from 512 to 1028 in ByteArrayOutputStream . java to optimize memory usage for improved performance
added comments for Chinese , Hindi , Korean , and Farsi symbols not yet available in the languagesExcluded array to
modify byte array initialization and transfer logic in TransferCompletionHandler . java to optimize memory usage to improve performance by reducing the number of byte transfer
fix a bug that cause the popup menu to not be open when open .
added a null check for the source node before throwing a SemanticException to avoid potential NullPointerExceptions when the source node is null
fix aABB positioning in skeleton renderer ( # 4358 )
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added @ ComponentScan annotation to SpringWebConfig . java to enable scanning of components in the Spring framework
added a method to retrieve the user ' s account to ensure compatibility with the user ' s platform account representation
added a test for installing packages in ShadowPackageManagerTest and updated related logic in ShadowApplicationPackageManager to ensure proper handling of package information
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule fields and methods to the TransactionTrace class to enhance transaction management capabilities within the application
add client . shuffle . member . list config option to disable shuffle member list .
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` in ` SegmentReader . java ` to improve type specific
fix the javadoc of jsondeserializer . deserialize ( ) ( # 2243 )
refactor ` TsfileDBConfig ` to use ` ThreadLocal ` and modify fetchSize handling in ` QueryProcessExecutor ` to improve thread
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify that the
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string to avoid potential null pointer exceptions when the title is not initialized
added a default empty body to the response builder in AsyncHttpClientCall . java and created a test for it in AsyncHttpClientCallTest . java
deprecate embeddedserverinstance since it be deprecate .
move registermacevents to jabrefframe instead of create a new macadapter
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
added a return statement to the ` toEnum ( type , s ) ` method in ` HandlerLibrary . java ` to ensure that the method
changed the visibility of the hideUnprivilegedObjects variable from private to private final to ensure immutability of the hideUnprivilegedObjects
change log level from info to fine in ThreadedAcousticScorer . java and update audio file handling in AudioDataSourcesTest
added a conditional check for Android Q and saving Giphy video URLs in IOUtils . java to ensure compatibility with Android Q and save video URLs
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : fix
refactor multiple Java classes related to ticket management to improve code organization and maintainability
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent method to simplify code and improve readability
hbase - 17474 remove dataoutputoutputstream since it ' s no longer use
removed the " hive . stats . column . autogather " configuration and updated resource paths in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity and improve performance during development
updated OpenSSLProvider and SSLSessionContextTest to use a new method for retrieving the default provider name to improve flexibility in provider naming based on
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to ensure only annotated Captor fields are processed
added checks for enabled classes and test methods in TestSuiteBuilder . java to throw an IllegalArgumentException if no test cases are found to improve error handling
updated GroovyAutoComplete . java and GroovyLanguage . java to improve prefix handling and clean up unused imports to enhance code readability and maintainability
fix import to use osm instead of graphhopper
danielwagnerhall : add retry configuration to handle session failure
changed the visibility of the mHideSysUiScrim variable from final to non - final and added functionality to control the visibility of the
added cancellation logic and updated method names for better clarity in Call and OkHttpCall classes to improve error handling and ensure proper cancellation of calls
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
extend org . springframework . security . web . util . matcher . requestmatcher to allow custom matcher implementation
added IF parameter to the DeferredAttr class and created a new ImplicitLambdaConsideredForApplicabilityTest class with multiple methods to enhance
move boxed and devirtualized type test to j2cl - integration - tests
added unit tests for setting display metrics with and without density qualifiers to ensure correct handling of display metrics based on their default and non - compat
replaced ` IOException . class ` with ` RuntimeException . class ` and replaced ` LocalDateTime . now ( ) ` with ` System . currentTimeMillis (
updated the icon resource in RootCursor from a drawable to a mipmap to improve the visual appearance of the icon in the user interface
added a method to set the error text in the error builder to ensure the error builder displays the correct content when an error occurs
refactor ConcurrentHashMap class for improved concurrency handling to enhance performance and reliability of concurrent access operations
added methods to adapt UserTrades and AbucoinsFill arrays in the AbucoinsAdapters , AbucoinsTradeService , and Tra
updated economy claiming logic in PlotSquared . java and modified player clearing logic in Delete . java to ensure proper handling of player
danielwagnerhall : add proxy support to htmlunitdriver
added handling for VARBINARY data type in BlobType . java to ensure correct database data type is returned for VARBINARY types
updated cookie version checks in SetCookieSupport . java for improved clarity and functionality to ensure correct handling of cookie versioning and enhance cookie
added synchronization to the initialization of simple and array map types in LibFFIContext . java to ensure thread safety when accessing shared resources
replaced ` Vertx ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer ` to improve context handling and ensure correct
updated timeout handling in LdapTimeoutTest and modified killSwitch method to accept a timeout duration to improve test reliability and ensure timeout mechanisms are
corrected the spelling of " UnicodeData . txt " to " UnicodeData . txt " in CharacterName . java to ensure accurate usage
camel - 7999 fixed the unit test error of camel - cxf
refactor multiple UI classes to improve code organization to enhance maintainability and readability of the codebase
added handling for BoosterSet in ComponentAssemblySaver . java and changed return value from true to false in BoosterSet . java to
added proxy support to jabref . getpasswordauthentication ( ) ( # 10385 )
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT " in
replace InternalError with a return value of false in Class . java to provide a fallback mechanism for compilation stub invocations
updated import statements and logging mechanism in TestIPCUtil . java to use a unified logging library to improve code readability and maintainability by
removed the transfer encoding check and simplified the request handling in NettyRoutingFilter . java to simplify the code and improve readability by elimin
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that token attributes are reset before processing new data
added pollingPeriod parameter to VerificationAfterDelayImpl and updated related classes to enhance verification logic by allowing configurable polling period for better control over verification failures
added compaction functionality to SessionState and updated masking condition in SemanticAnalyzer to enhance security by controlling compaction behavior during query processing
[ zeppelin - 4892 ] fix interpreter copy of jar file ( # 4893 )
reformatted the method for retrieving table regions in HBaseAdmin . java and TestThriftServer . java to improve code readability and maintain consistency in
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the calcXBounds method in BarLineChartBase , CombinedChartRenderer , Renderer , and BarLineScatterCandleBubble
refactor XML parsing to ensure resources are released properly to improve resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of the ` UseDiamondOperator `
added a null check before closing the result set in JdbcExecutor . java to prevent potential NullPointerExceptions when attempting to close a closed ResultSet
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 in DerbyDatabase . java to reflect the new driver version
fixed bug 138365 - usestringbufferlength no longer throw an npe when there be no literal
removed error logging statement from RemoteSparkJobMonitor . java to streamline error handling and reduce unnecessary log noise
modified the createDb method to return a Connection object instead of void to ensure proper resource management and prevent memory leaks
refactor CreateCustomMetric , ListResources , and ListResources classes to improve code organization and maintainability
hbase - 25835 add support for off - peak compaction in hbase - hstore ( addendum )
updated BitstampDepositAddress to handle JSON JSON unmarshalling and added tests for deposit address handling to improve robustness of deposit address
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener . java to improve error handling by using response ' s abort method instead of throwing an exception
updated the method to use ` toAbsolutePath ( ) ` for linking deleted directories to ensure the link path is correctly resolved relative to the
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and modified ` DefaultMetricsRegistry ` to use ` InvocationType ` instead of `
refactor network interface retrieval to check for multicast support to improve clarity and ensure only supported network interfaces are returned
refactor checksum validation logic to use a loop for better readability to improve code efficiency and maintainability by reducing redundancy
added a clone ( ) method to BufferedChecksumIndexInput to indicate that the clone ( ) method is not supported in this implementation
replaced ` Math . sqrt ( x * x + y * y ) < = 0 ` with ` Math . sqrt ( x * x
updated frequency band assignment logic in P25Channel . java and added multiple @ Override annotations in P25ExplicitChannel . java to ensure proper handling
refactor ` GestureDetector ` to use ` tapRectangleWidth ` and ` tapRectangleHeight ` instead of ` tapSquare ` to improve
change default _ reuse _ on _ write from true to false to disable duplicate write operations
added a ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` and ` CryptoFacilitiesTradeServiceRaw ` classes to allow
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes to provide a convenient way to access the delegate
refactor error handling and synchronization logic in FileActivity and FileDisplayActivity to improve code clarity and ensure consistent synchronization behavior across fragments
added stream writing functionality in ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to enhance stream management and error handling
added a boolean parameter to the method call in JavascriptContext . java to enable conditional execution of JavaScript actions
replaced multiple instances of Align . left , 0 , Align . left , 1 with a direct parameter in TableCell constructors to simplify the constructor
added a new configuration class ` TracingAutoConfiguration ` for tracing in the ` org . cloudfoundry . identity . uaa ` package to
replaced the direct addition of content to a Para with a method call to add a parameter to improve code readability and maintainability by
updated ` getPrunedQueryableSegments ` method to accept a list of ` List < IndexSegment > ` and adjusted segment retrieval logic to
refactor VertxBufferTest class for improved readability to enhance maintainability and facilitate future updates
fix a bug in hsmf parsing of message submission chunk with extra hyphen
changed the visibility of mContext from private to protected in PredictionAppTracker . java to allow subclasses to access and override the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to utilize it for data integrity violations to improve data integrity
re - add the missed return statement ( # 21117
updated the ` bitsToHumanReadable ` method to accept a variable number of bytes instead of a bit to human - readable string to enhance flex
updated MergePolicy instantiation in TestUpgradeIndexMergePolicy and added a test for no pathological merges in TestMergeOnFlushMergePolicy to simplify
added a conditional check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
improve error message when binaries cannot be run on a cpu without instructions
updated ` loadSettingModels ` and ` contextInitialized ` methods to accept an ` InputStream ` parameter for reference properties to enhance flexibility by allowing
added null checks for incoming Fields , Terms , and DocsEnum in FilterLeafReader . java to ensure robustness by preventing NullPointerExceptions
camel - 16400 : added key size provider to jcecrmfencryptorbuilder .
updated IOException handling in NetSocketReader and SoftEndOfStreamException to include a message parameter to improve error clarity and provide more informative error
removed the Inject annotation from multiple classes to streamline dependency injection process for better code maintainability
updated the expected size in BundledDistributionTest and added assertions for database user attributes in PostgreSQLTest to ensure tests validate the correct number of database
[ flink - 20613 ] [ stream ] add pipeline name option to streamexecutionenvironment .
refactor scale calculation logic in OverviewState . java to differentiate between two - panel and non - panel layouts to ensure correct scaling behavior
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and adjusted the temperature and rainf
removed unnecessary timezone parameters from getMinTime and getMaxTime methods in DataUpdateManager and StorageUtils classes to simplify method calls by eliminating unnecessary
[ j2kt ] introduce isqualified flag to be able to determine if the type be fully qualify .
updated regex pattern in XhamsterRipper . java to allow spaces in URLs to enhance flexibility in URL matching for xhamster
do n ' t use getall ( ) for each entity in the world so that it do n ' t break
hhh - 14663 fix oracledialect to use the correct schema name
fix a typo in the console filter ( # 3396 )
added support for selecting and deselecting all files in the FileMenuFilter class to enhance user experience by allowing users to select or deselect
[ java ] update termoffset to use termlengthmask instead of termwindowlength .
fix a typo in the javadoc of guildupdateownerevent .
added checks to ensure inPortalTicks count is based on whether the player is a creative or not to improve stability by preventing in -
added compression functionality to the ClusterMonitorTileSkin and updated chart spacing calculations to improve visual presentation by accommodating compressed data and adjusting spacing
refactor multiple codec template classes to improve code organization to enhance maintainability and readability of the codebase
changed the data type of ` lengthDataBits ` and ` numberQuartet ` calculations to use ` long ` instead of ` int ` to
removed unnecessary null check for renderer and header in RendererConfiguration . java to simplify the condition for better readability and maintainability
volume : skip disk offering change if they have the same custom service offering
updated import statements in HitbtcAdapters and Order . java to use LimitOrder . Builder instead of Builder to improve code clarity and
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to improve clarity and consistency
updated the annotation from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to improve clarity and
updated variable name from name to displayName in ConfigCategory . java to improve clarity and consistency in naming conventions
updated condition in ParticipateAssetIssueActuator . java to include a check for negative exchangeAmount values to ensure accurate handling of exchange amounts
updated the loop condition in FeedUtils . java to limit the number of iterations to 10 to optimize performance by reducing unnecessary iterations
added a new test method ` testHDF4 ` to ` HDFParserTest . java ` to ensure compatibility and correctness of HDF4
added a new boolean flag CALCITE _ 6092 _ FIXED and modified casting tests in SqlOperatorTest to check for invalid TIME values
removed unnecessary whitespace in conditional statements to improve code readability and maintain consistency
added a method to quietly close all AutoCloseable objects in CloseHelper . java to improve resource management by ensuring all closeable objects are
updated confirmation button resource in RemoveFileDialogFragment . java to use a common yes confirmation instead of a remote confirmation
added a check for non - zero width and non - zero dimensions before applying the image to ensure that the image is only drawn if they are
replaced ` ReflectionHelpers ` with ` ReflectHelpers ` for invoking ` defineClass ` in ` UnsafeAccess . java ` to improve compatibility with
updated regex pattern in GUIUtil . java and added new test cases in GUIUtilTest . java to improve regex accuracy and ensure compreh
replace boolean conflicts with long conflicts in CachedRowSetWriter . java to track multiple conflicts more effectively to improve synchronization handling and track the number of
fix nullpointerexception when try to access pubspec . yaml file ( # 4373 )
modified the reference handling logic in ReferenceMemory . java to improve clarity and prevent unnecessary assignments when the reference is the same instance
added seed file handling and improved error logging in Injector . java to enhance robustness and provide clearer error messages when injection fails
added a condition to hide the original view if the condition is met to ensure that the original view is only shown when the condition is met to
update maxNodes calculation and condition in DefaultLoopPolicies . java to ensure maxNodes does not exceed the maximum allowed size to prevent potential issues with
added logging for unsupported texture coordinate types in CombinedTexture and UVCoordinatesGenerator classes to improve error handling and provide feedback for unsupported texture coordinates
added error handling for file deletion in EncodeActivity . java and improved argument validation in DecodedBitStreamParser . java to enhance robustness
camel - 14263 : camel - tracing - add seek and close method to tracingconsumer and camel - tracing - producer
updated the substring calculation in the UPDATE statement and added a query setting for the old prefix length to ensure correct handling of prefix lengths and improve query
replaced ` addAll ( collection ) ` with ` ArrayList ( collection ) ` in ` JSONSerializer . java ` to improve performance by reducing
[ hotfix ] [ runtime ] deprecate abstracttimer constructor
added a warning dialog for nightly builds in MainWindow . java to inform users about potential bugs related to the Universal Gcode Sender build
add sorting of response by recipient team name and return user body text if team name be null .
updated return message from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to improve clarity and accuracy of error reporting
deleted ` CacheApplication ` and refactored ` CommonsApplication ` to use ` CacheController ` instead of ` Application ` to streamline
replace references to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java ` to
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
update RuntimeEnvironment to use ResourcesManager for configuration updates on devices running KitKat or higher to ensure compatibility with devices running KitK
added a constant for stack repository update link existence in VersionDefinitionResourceProvider . java and created a corresponding test in StackManagerTest . java to
updated ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe in cfmetadata . getindexes ( ) when index name be null . patch by jbellis
added multiple package imports in CheckPackageAccess . java to ensure proper access control for XML resolver components
rename jobrepository . save ( stepexecution ) to jobrepository . add ( stepexecution ) for clarity
fix graphutil . removeloopinput ( ) when exit node be a loopexitnode
replaced RecyclerView with WidgetsRecyclerView and updated related methods in SearchAndRecommendationsScrollController . java to improve layout handling and
added a conditional check for terminal support in ConsoleReader . java to ensure functionality only occurs when the terminal is supported
changed the data type of ` timeAllowed ` from ` long ` to ` int ` and added time timeout handling in ` LBHttpSolr
added session validity check before flushing on response commit in AbstractSessionCache . java and updated session attribute handling in RemoveSessionTest . java to ensure
refactor column handling in ChangedIndexChangeGenerator to improve null checks for " columnNames " to enhance code robustness and prevent potential NullPointerExceptions
replaced Vector with ArrayList for managing radio buttons to improve performance and maintainability by using a more suitable data structure
added support for NYCMR1 and above in UserManagerCompat and UserManagerCompatVL classes to enhance compatibility with newer Android versions
added methods to retrieve database major and minor version in MockDatabase , HibernateDatabase , and ReorganizeTableStatement to improve database version handling
updated ActionGraphCache to include a maximum number of mismatched rules to print and improved error messages to enhance clarity of mismatched rules
added LockDatabaseDesc and UnlockDatabaseDesc classes to handle database lock and unlock operations to facilitate the management of database states in the
refactor RankingTopComponent , RankingUIModel , and RankingToolbar classes to improve code readability and maintainability
added handling for DisconnectMessage in HandshakeHandler and updated NodeImpl to log disconnect reasons to improve connection stability and provide better feedback during disconnection
added a test for setting and deleting a storage group in IoTDBAuthorizationIT . java and implemented the DELETE _ STORAGE _ GROUP privilege in
chore : [ cloud ] update java and python dependency to v1beta2 ( # 1 )
refactor variable type validation logic in Assertions and FindMissingTypes classes to improve error handling for missing variable types to ensure accurate type validation and
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to enhance test lifecycle management for better
[ java ] reduce memory usage in counter manager .
updated the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to remove unnecessary string concatenation and ensure consistent logging
added a cloning mechanism for joinKeys in JoinDesc . java to ensure that the joinKeys array is not modified externally to prevent un
added PrincipalResolver dependency and updated registration method in WebAuthnConfiguration . java to enhance authentication handler registration with a default principal resolver
added a searchPaths parameter to the addSettingsFromFile method in XcconfigStack . java and updated related tests in XcconfigParserTest
added ' final ' modifier to various lists and fields in Oracle . java to enforce immutability and improve code safety
[ hotfix ] [ doc ] exclude unaligned checkpoint option until rescaling of unaligned checkpoint be complete
throw unsupportedoperationvisitor for order _ by , explicit _ table , map _ value _ constructor , and unsupportedfeaturestrategy ( # 2
remove TTY . println ( ) from compiletheworldtest . java ( graal - 471 )
removed unnecessary type check for LocalVariable in LambdaRewriter . java to streamline code by eliminating unnecessary exception handling
added support for MySQL in the CreateTableGenerator to append " NULL " for timestamp columns to ensure proper handling of timestamp columns in MySQL databases
added context class loader handling in EnvConfiguration . java to ensure proper context class loader management during execution
added a conditional check for stageNr in SimulationListHandler . java to set an Ejection delay if stageNr is zero to ensure proper
renamed FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig and updated related methods to improve clarity and consistency in runner configuration handling
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
updated issuer validation methods to accept ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to enhance flexibility in issuer resolution
added null check for the DocCollection before returning its string representation to improve robustness by providing a clearer error message when the collection reference is
change method call from ` getStyle ( ) . setAlignment ( align ) ` to ` getAllStyles ( ) . setAlignment ( align ) `
added methods to retrieve foreign database and schema names in ForeignKeyColumn and ForeignKeyColumnMutator classes to enhance functionality by allowing configuration of foreign database and schema
[ java ] do n ' t use aeron . election . init in case of failure .
replaced the static import of Shadows . shadowOf with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBl
updated FileSelection and TestBugFixes to handle null and empty root cases and improved path selection logic to enhance error handling and ensure correct
[ iforge ] deprecate oninventorytick in favor of onarmortick .
do n ' t write war resource when export to zip
added a null check before invalidation options menu in SingleUploadFragment to avoid potential NullPointerException when getSherlockActivity ( ) is not initialized
updated widget binding logic to handle bind options more effectively to ensure proper binding behavior when options are not available
added CAPABILITY _ AIR _ PRESSURE , AIR _ QUALITY , and VOC _ PPM CAPABILITY _ CO
no functional change - code cleanup - remove unnecessary whitespace
added environment variables for AAPT and AAPT2 in Genrule . java and updated test cases in GenruleTest . java to ensure correct
dump access table only when truffleinstrumentBranches . value be set to true .
added a null check before disposing of the message object to avoid potential NullPointerExceptions during message disposal
changed the access modifier of the ` db ` field and made it final in multiple classes to ensure immutability of the ` db ` field
updated log warning messages in CoreContainer . java to clarify the reason for disabling LogWatcher to improve error handling and provide clearer
replaced stack trace printing with return statements in CategoryPlotTests . java to streamline error handling and improve test clarity
refactor IOSImplementation to use SmallByteArrayOutputStream and add a new SmallByteArrayOutputStream class to improve performance and manage memory efficiently
* use intmap instead of hashmap for attribute retrieval in shaders
changed the connection configuration from " close = true " to " shutdown = true " in AbstractDIHJdbcTestCase . java to ensure proper
modified the handling of ` FirstExchangeCompletedTimestamp ` and ` LastExchangeCompletedTimestamp ` to handle null values safely to improve robustness by prevent
updated javadoc and test cases in TestHtmlTag and TestUseOption classes to include default language and improve output checks to enhance documentation clarity and
added a condition to check if the result is incomplete and the number of items is greater than 10 to ensure that the result does not exceed the
updated usage instructions in HybridClusterIntegrationTestCommandLineRunner to include timeColumnName as a parameter to enhance functionality by allowing specification of a time column
added support for different output formats in SiteSnapshotVariationsTest and OutputOptions to ensure correct file extension is used based on the output type
updated condition to check for QSBEnable when minQsbMargin exceeds hotseatBarBottomSpace to ensure proper handling of QSB margin
added ` Objects . equals ` and ` hashCode ` methods to ` AnimationList ` for better null - safe comparison to improve code readability and
added a ` _ date ` field and its setter method in ` AbstractGenerator ` , ` Generator ` , and ` HttpConnection ` classes to
replace Adler32 with CRC32 in Store . java to optimize performance by using a more efficient CRC32 implementation
xenheartbeatinterval default value should be null instead of string # of seconds
added a new constant ` ZERO _ AREA _ FIN ` and updated geometry warning handling in ` FinSetCalc . java ` to improve cl
[ beam - 8470 ] fix json serialization of documentmetadata in elasticsearchio
hhh - 14613 add trunc ( ) and datetrunc _ trunc ( ) function to h2dialect
added handling for memory pool not found error in MetricUtils and updated error message formatting in MetricUtilsTest to improve error reporting and clarify
modified the ` ensureSignedUp ` method to include a ` useJavaScript ` parameter and improved error handling in ` UserContext ` to enhance
updated error messages to include enclosing names for annotations in ValidationTask . java to improve clarity and consistency in error reporting for annotated types
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " to standardize the backfill endpoint for
replaced instances of DataWord ( ) . getData ( ) with new DataWord ( 1 ) . getData ( ) in PrecompiledContracts .
updated the handling of app information and badge updates in AllAppsContainerView . java to improve code clarity and ensure proper processing of child views
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated context start statements in ResourceHandlerTest . java and ServletContextHandler . java to correct the behavior after ContextHandlerCollection is started to ensure correct
removed conditional check for ` mDrawIdentifier ` in ` Cling . java ` to simplify the logic for determining if the workspace is custom
trufflejdkservices : remove assertion that be n ' t need .
updated method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrumented
updated import statements to use the correct package structure for ItBitExchange and its service classes to ensure compatibility with the latest version of the ItBit
ww - 4892 fix npe in profile and scope interceptor
added private constructors to several classes to enforce singleton pattern to prevent instantiation
cloudstack - 1343 : fix potential ioexception when read user account from file
workaround for svg issue in the designer which fail due to some odd batik exception .
added tableNameWithType to the warning log message in RetentionManager . java to provide more context for the warning when retention time is invalid
added trimming to the first element of fragmentList in QueryExecutorImpl . java to ensure that fragmentList does not contain leading or trailing spaces
update exception message to use modFile ' s getFilePath ( ) instead of the path to ensure the correct file path is thrown for ResourcePackFile
refactor node and edge transformer builder handling in PartitionToolbar . java to improve code clarity and maintainability by using more descriptive variable names
modified condition checks in RecentsView . java to include a null check for the task view before displaying as a grid to improve logic flow
updated return types from Map < String , String > to BMIViewObject across several classes to encapsulate BMI calculation results and related metadata in a dedicated object
removed the comparator from thenComparing in QueryCommand . java to simplify the comparison logic for better readability and maintainability
implement that haybales reduce fall damage ( # 1690 )
refactor environment variable handling to use a list instead of a list for clarity to improve code readability and maintainability by using a more
added support for custom plugin configuration in the options parser to enhance flexibility in configuring free form properties
updated the condition to check if the hashTable is not empty instead of null to ensure that the condition verifies if the hashTable is not empty
fix ( sql ) : fix timestamp . tostring ( ) when seconds be negative
[ java ] do n ' t reuse archivecontext in cluster service .
added a condition to check if the compiler is not compiled before executing the compilation check to ensure that the compilation logic only executes when not already compiled
added two new test methods for image2 and image2 _ joined in multiple test classes to enhance testing coverage for image - related functionalities
refactor TogglableFlag and BaseFlags to improve default value handling and change listener functionality to enhance code clarity and ensure proper initialization
updated logging statements in DockerClientFactory . java to use placeholder syntax to improve readability and consistency of log messages
added a conditional check to return early if the current platform is not Android to optimize performance by avoiding unnecessary processing on unsupported platforms
updated assertions in RoutesTest . java to use assertThat instead of assertEquals for better readability to improve test clarity and maintainability by
added new functional interfaces BytePredicate , FloatToLongFunction , ShortPredicate , and ShortToLongFunction to the common function package to provide a unified way
updated ` getSubsColor ` methods to return a string instead of an integer for color values and added logging for video bitrate limits to enhance
added a conditional check before deregistering the invocation to ensure the invocation is only deregistered if the future is complete to avoid potential null pointer exceptions
replaced the method ` flush ( ) ` with ` output ( null , nop , close ) ` in ` AbstractWebSocketConnection . java `
added a conditional check for the " Redirected " flag in LoginActivity and updated intent handling in SignupActivity to ensure the WelcomeActivity
added ShadowCheckedTextView class and integrated it into Robolectric to enable testing of the CheckedTextView functionality in the application
added Serializable interface to ParserState and changed access modifiers in AccessorProperty , AccessorProperty , and Property classes to enable serialization of ParserState
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to ensure compatibility with IDentrust certificate
removed redundant attribute settings for TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
fix occupant . getnick ( ) in multiuserchattest .
updated QuicConnection and QuicSession classes to include a context map and connection object to enhance connection management by allowing context - based access to
updated method calls to use writer . getConfig ( ) instead of writer . setMergeScheduler ( ) and writer . setMergePolicy ( ) to
refactor variable names and improve readability in ICU4JImpl . java and TextPosition . java to enhance code clarity and maintainability
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to improve default value assignment
refactor NbtScoreboardIoService to improve code organization to enhance maintainability and readability of the code
resolve service provider metadata via classpath if it do n ' t exist
changed the visibility of the ` printer ` variable from private to protected and refactored the printer creation logic in ` GraphPrinterDumpHandler `
added mathematical operations to divide and set average price in HuobiAdapters . java to ensure accurate financial calculations for order
updated ProjectionOperation and TypeBasedAggregationOperationContext to use ` Field ` instead of ` String ` for projections and improved type handling to
modified the implementation of the addViewer0 method to check if the player is already present in the viewers list to improve efficiency by avoiding
added constant state handling in FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve performance and maintainability of drawable state management
refactor SPDYClient to use a controller variable for connection creation to improve code readability and maintainability by reducing duplication
fix nullpointerexception in protostuffobjectoutput ( # 10385 )
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
added a conditional check to prevent further processing when axes are not visible to improve performance by avoiding unnecessary processing for non - visible axes
replaced ` setFilter ` and ` setWrap ` methods with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods to improve performance and
fix a typo in the returnToWorkspace method call to improve code readability and maintainability
added SSL connection handling based on the protocol in CustomUrlJob . java and created a new CustomUrlTrustEverything . java file to enhance
[ fix ] display used clock rate string for g722 encoding
refactor TextureAtlas class for improved performance to enhance texture rendering efficiency
updated method to use getModuleName instead of getProductNameForBuildTargetNode and added a method to set the module name in AppleLibraryBuilder
[ hotfix ] [ runtime ] fix concurrentmodificationexception in testslot
# 164 - enh : add support for findids with inheritance ( # 164 )
updated WebSocketServletRFCTest to use a buffered ByteBuffer for reading from the input to improve code clarity and ensure proper handling of connection headers
[ wasm ] fix memory leak in reference stack .
[ type : fix ] add ttl option to clickhouselogcollectconfig ( # 2598 )
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD and updated related methods in CustomChangeWrapper and XMLChangeLogSerializer to
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection instead of Jetty ' s QueuedThreadPool to improve thread management and
added error handling for Fresco initialization in CommonsApplication . java and NearbyController . java to improve application stability by logging
modified the return statement to check if objectName is not null or empty before trimming it to enhance robustness by preventing potential null or empty
updated error messages in UserDataException to include the exception message to improve debugging by providing more context on file access issues
[ hotfix ] [ table - planner - blink ] replace string literal with constant
renamed variables and updated subject handling in KeyTool . java and Resources . java to improve code clarity and ensure default values are used when
added a deprecation annotation to RuntimeOptions . java to indicate that the class is deprecated since version 23.0 for removal
replace character buffer encoding with direct byte conversion for string to simplify code and improve performance by directly using string . getBytes ( utf8Charset )
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for permission evaluation
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` and ` LineReaderImpl ` classes
[ hotfix ] [ core ] do n ' t allow master to connect to non - online server
updated P2pException types to use BLOCK _ SIGN _ ERROR instead of CALC _ MERKLE _ ROOT _ FAILED to
refactor ExpandWar . java to use URLConnection instead of JarFile and streamline input stream handling to improve code reliability and maintainability
improve error handling in defaulthttpclient and fullnettyclienthttpclientHttpResponse ( # 5365 )
changed the container ' s position from centering to centerAbsolute in Picker . java to ensure the wrapper is centered relative to the spinner
[ hotfix ] [ runtime ] fix interruption in networkbufferpool . requestmemorysegments
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve resource management and prevent potential memory leaks
replaced JUnit runner annotations with a custom RetryTestRule in AbstractIT . java to improve test reliability by allowing retries on failures
refactor auto - commit handling in CallTask and QueryStateMachine classes to streamline transaction management to improve code clarity and maintainability by
[ net . hydromatic . optiq . test ] add package - info . java file
added support for " javax . microedition . khronos . opengles . gl " in the InstrumentationConfiguration to enhance
[ hotfix ] [ test ] remove unnecessary generic in streamtasktestharness
refactor URI handling in Request . java and add a new test for HTTP CONNECT method in RequestTest . java to improve code clarity and
changed the access modifier of KEY _ LAST _ SEEN _ VERSION _ CODE from private to public and refactored storage point retrieval logic to
added methods to handle session availability and unavailability in SessionManager to improve session management by centralizing session handling logic
added a method to scan for the " liquibase . pro " package to enhance package scanning capabilities for Liquibase Pro
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify the
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments instead of a single object to enhance functionality by allowing more flex
updated the way relative paths are handled in FastPathResolver . java to streamline the path matching logic to improve code readability and maintainability
updated ` weigher ` method to use ` toIntExact ` for retained size to ensure accurate size retrieval for slices in HiveClientModule
corrected spelling errors in method names from " isExceedRandomizationDepth " to " hasAlreadyRandomizationDepth " to improve code
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor and created a corresponding test case in TestWindowFrame to
added a call to clear the headers in the proxyRequest to ensure a clean state before processing new requests
added a check to skip processing if SA attach is not expected to work to ensure that the test only runs when the SA attach is expected to
added null check for bgColor in GraphicsDevice . java and implemented fullscreen window translucency functionality in TranslucentWindow . java to
added null checks for user information and improved error handling in UserInfoActivity to ensure proper user information display and provide user feedback when no information is
added a custom serialization mechanism for Precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers cannot be used on different machines
[ flink - 18552 ] [ connectors / kafka ] add support for append mode in table source sink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named output groups in various scenarios to ensure that the build
updated regex pattern in FileSettings . java and added content handling logic to ensure consistent formatting of settings while maintaining original content integrity
nifi - 1745 : fix npe in statelessflow and statelesscontrollerserviceinitializationcontext ( # 5338 )
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a taskbar mode switch annotation in TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added new device status entries for leaving dock and energy save mode to enhance device status tracking for better user feedback
improve error message when item model can not be load from the blockstate
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pdfbox - 4892 : do n ' t call getcurrentsurfacescale ( ) for 2x graphics
renamed RussianLowerCaseFilter class to improve clarity to enhance code readability and maintainability
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT . java and simplified server port extraction in QueryUtil .
replace File . separatorChar with File . pathSeparatorChar for displayName to ensure consistent file path formatting across different operating systems
* add a resettableinputstream so that we can seek wav file .
added a boolean parameter to control the repeating of the first line indentation in ColumnText . java to improve indentation handling by allowing repeated lines in
cast the ` oid ` object to ` Object ` before comparison to ensure proper type handling and avoid potential runtime errors
refactored the initialization of HikariPool to check for null configurations before setting their properties to improve code clarity and ensure proper configuration
use controlflowanchored instead of controlflowanchornode to avoid infinite loop
added functionality to disable focus painting for buttons in WindowsPlacesBar to improve user experience by reducing visual clutter in the interface
updated the condition to check for both UniqueConstraint and ForeignKey in DatabaseSnapshot . java to ensure proper handling of backing index for unique constraints in Oracle
added a new method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to include pagination
[ cst - 5338 ] check for dc . title when post group to admin group
fix an npe in gapinsertiondetector when there be no utterance
added unit test base on user forum issue
updated thread count from background threads to database update threads in FeedRefreshUpdater . java and added getter / setter methods in ApplicationSettings . java to
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to improve performance
update SystemClassName to use " Ljava / lang / System ; " instead of " System . class . getName ( ) " to ensure consistency
hhh - 13644 - provide a way to retrieve the result stream of a storedprocedure call
added a null check for the API properties in RestSwaggerSupport . java to avoid potential NullPointerExceptions when accessing API properties
added new files BinaryFrameGenerator . java and TextFrameGenerator . java to handle binary and text WebSocket frames to enhance WebSocket frame generation functionality for
danielwagnerhall : use webdriverwait instead of findelement ( ) . until ( presenceofelementlocated ( )
refactor random coordinates and radius generation in RandomGeo3dShapeGenerator . java to use random boolean values to improve variability and randomness
added a keepAlive method to manage ClassLoader references to prevent potential memory leaks during class loading operations
changed the return value from false to true in SQLiteDatabase . java to ensure the method correctly indicates a successful operation
improve handling of concurrent signature in findjsr166lockmonitorenter
added MkdirStep method to create temporary paths for file outputs across multiple Java files to ensure that the output directory is created when they do not exist
updated coordinate comparisons and error messages in MeshLeveler . java to include x and y coordinates to improve debugging by providing clearer error messages for
[ drools - 5358 ] skip kie - pmml - pmml parsing and compilation if jpmml library be not available
corrected the spelling of " locationMode " to " thermalStatus " in ShadowPowerManager . java to ensure accurate representation of the
mountablefile : use / tmp on macosx instead of ` ` java . io . tmpdir ' '
disable memory map on window ( # 1367 )
added a null check for the organization in the plugin model to ensure that a Plugis organization is provided in the pom . xml file to
updated contributor license agreements in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused class to streamline the codebase
updated the method to retrieve the class path from the system property instead of an empty string to ensure the process executes with the correct class path configuration
replace ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java ` to
added JUnit Pioneer annotations and a test method ` dontChangeJavadoc ` in ` AddLicenseHeaderTest . java ` to ensure Javadoc
changed the default value of LAUNCHER3 _ PHYSICS from false to true to enable the launcher functionality by default
added a new ` < div class = ' noPrint ' > ` element in ` HtmlThreadInformationsReport . java ` to remove unnecessary
updated Lucene main version from 3.1 to 4.0 and updated test version from LUCENE _ 31 to LUCEN
added symbolicator and task fields to BsdDebuggerLocal for macOS X support to enhance debugging capabilities for macOS users
fix memory leak in fmlindexedmessagetotmessagecodec .
log mut network dispatcher exception if connection reset by peer
[ java ] initialize adminbuffers and conductorcommandbuffer only if conductorbytebuffers be null .
added a break statement in TouchImageView . java to ensure proper flow control in the code execution
chore : [ dialogflow - cx ] update googleapis / dialogflow - java to v3.17 . 0 ( # 5 )
do n ' t flush on sslhandshakecomplete if we do n ' t have a ssl engine
added conditional checks for type variable assignments in TypeUtils . java to ensure correct handling of generic type variables in type inference
use concurrentskiplistset instead of nonblockinghashset in memtablespendingflush
added null check for errs in MemberEnter . java and modified error handling in JavaCompiler . java , and added new classes ParseErrors . java
changed the browser configuration from SWT . NO _ BACKGROUND to SWT . NONE in BugInfoView . java to simplify the browser ' s
updated the negative button from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the correct
fix integerstamp . div to handle negative value .
added a method to read an InputStream into a byte array and updated the Image instantiation to use this method to improve code readability and encapsulate
added functionality to define and undefine variables in CaseStmtToken and modified scope handling in ExprGenerator to improve variable management and ensure proper handling of
added exception handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions related to cipher provider availability
added ` psapi . lib ` to the ` AdditionalDependencies ` attribute in ` WinGammaPlatformVC10 . java ` to ensure compatibility with
replaced hardcoded newline characters with system - dependent newline handling in StringUtilsTest . java to ensure consistent line separator across different operating systems
added compatibility and improved encoding settings in TemplateEngineFreemarker and updated malicious javascript string format in ApplicationController and ApplicationController
refactor byte array handling in CRDGeneratorTest to use a string representation of byte array to improve readability and facilitate debugging
make instance variable final in samplesenderfactory so that it can be reuse
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the reporter is only added
added quote handling logic in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to improve command parsing accuracy and ensure correctness through unit testing
removed ` public ` access modifier from interfaces in multiple Java files to enforce package - private visibility for better encapsulation
added a call to set the number of reduce tasks based on the number of fetchers to ensure the job uses the correct number of reduce tasks
fix schema generator to return default value from object field ( # 2596 )
updated FILEVERSION from " 505365 " to " 532077 " in SaveService . java to reflect the new version of the
added support for " GL _ ARB _ texture _ float " and " GL _ ARB _ texture _ float " extensions in FloatTexture
add write ( ) and close ( ) method to fileserver so we can write to a file
added a null check for output directory and jarStream before setting the output directory to ensure that output directory is set correctly when both outputDirectory and jar
added performance measurement for sqlite submission in ShadowSQLiteConnection to enhance performance tracking during database operations
updated JDK tool references from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest .
[ geos - 7018 ] add resourceerrorhandling enum to avoid ogc _ exception _ report
updated bufferPosition calculation in RAMInputStream and added EOFException handling in TestRAMDirectory to ensure proper handling of input / output streams and improve error
updated error handling in DefaultServlet and JspServlet to include request URI and localized error messages to improve user experience by providing clearer context for missing
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and added AccessControlContext class for permission testing to enhance thread
updated CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging statements in checkFreeMem ( ) to improve memory checks and enhance
hbase - 25836 testsplittransaction should use openhregion instead of getregioninfo ( )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when accessing currentSelectionArea
added a new test method ` testJaasDemo ` to the ` DemoModulesTests ` class to verify the behavior of the Jaas
added conditions to check if spanX and spanY are 1 before creating a folder and updated the calculation of the hypot calculation to ensure that
refactor CacheOffHeap class to improve memory management to enhance performance and reduce memory usage
mondrian : throw an exception if a table depend on another table that depend on a higher id .
added a check for row and column indices before setting tiles in TiledLoader . java and improved data validation in TiledLoader . java
make setworkingset synchronized to avoid race condition .
added a new file ` Solution . java ` to implement a solution that calculates and displays multiple steps based on input values to implement a solution that
add address checker interface to track if an ip be a bad address
fix multilayermodel . gettranslucentmovingblock ( ) bug ( # 8731 )
remove default tag from ` ` comment ' ' element in ` ` guiconfigentry ' ' toolTip
change the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` , ` Capability ` , and
added a null check for recieptents before sending messages and adjusted time conversion from seconds to milliseconds to improve robustness by preventing potential
refactor the single check logic into a separate method ` isSingle ` to improve code readability and maintainability by reducing duplication
updated DockerClientFactory to accept a failFast parameter and improved logging mechanisms in RemoteDockerImage and ImageFromDockerfile classes to enhance
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to
fix issue with date truncation in historicprocessinstancequeryimpl ( # 8727 )
changed the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure the correct core
added handling for CommandFailedException in LiquibaseCommandLine to print the best message to improve error reporting for command failure scenarios
refactor TreeMap class implementation to improve performance and maintainability of the code
added methods to enable and disable asynchronous stack traces in the EdtException class to improve error handling and debugging capabilities for asynchronous operations
added a method to set the glow color in BubbleTextView and set it in Folder to allow customization of the glow color
set the style classes for link and desc in LinkedFilesEditor to ensure consistent styling of file row elements in the LinkedFilesEditor
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " instead of " java . lang . Short " and added a test
removed file deletion logic from Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify the code by elimin
added null check for _ info before determining if the connection is upgrading to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to facilitate initialization with a specific provider string
updated the condition for setting maxRAM to include a check for device RAM values less than 2048 to ensure that maxRAM is only set
fix empty _ local _ map _ stats when there be no data
added logging functionality to the FileProfileActivator class to enhance debugging and monitoring of file activation status
improve error message for invalid pdf body name
replaced Collectors . toList ( ) with Collectors . toSet ( ) in GuildImpl . java to ensure that the roles list is not a
updated upload array length check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure
added unit tests for ` dashboardUserMapper . delete ` and ` delete ` methods in ` DashboardUserMapperTest . java ` to ensure that
update instructorfeedbackresultspagedata to include primary participant instead of giver to response
sulong : add auto - deref address handling to truffle node .
added a method ` getBufferSize ( ) ` to return the buffer size to provide access to the buffer size for external use
added usage help for the terasology command and updated the headless option description to improve user guidance and clarify the command '
added functionality to update the action bar title based on the current item ' s position in DrawerActivity . java to enhance user experience by providing
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added interpolators for animations in ALL _ APPS and ALL _ APPS _ CONTENT _ FADE _ MIN _ CLAMPING _
replaced the method ` Character : : toUpperCase ` with ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to
added native methods for setFrame , frame , and release in CWrapper . java to enable better handling of native object memory management in the application
added constant validation in ` Checker . java ` and created ` ValueTest . java ` with error handling in ` ValueTest . java ` to
updated MontgomeryMultiplyTest , TestMulAdd , TestSquareToLen , and TestSquareToLen classes to improve test coverage
removed unnecessary null check for constructors in PojoUtils . java to simplify the code and improve readability
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future updates
updated string concatenation for error , coverageFailed , and error responses in UploadBuild . java to improve clarity and consistency of error reporting
updated bounds settings in DeviceProfile . java to use getSearchBarTopOffset instead of zero to improve layout positioning by accounting for search bar
do n ' t try to connect to pulse audio if idletimeout be 0
replaced direct calls to ` openRecents ( ) ` with ` getLauncher ( ) . runOnUiThread ( ) ` to
added a method ` getSourceGroupOptional ( ) ` to retrieve an ` Optional < Pair < String , ImmutableList < AppleSource > > >
increased the timeout duration from 220000 milliseconds to 320000 milliseconds in TestSimTriggerIntegration . java to allow more time for trigger latch
updated variable names from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to improve clarity by
fix npe in abstractnodecostsearch when distfromstartsq be squared
added a check to skip processing for components " com . codename1 . ui . Form " or " com . codename1 . ui
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint and initialized it to the latest commit when it is null to ensure that the replication process uses the latest commit
added unit tests for ` getImei ` and ` setImei ` methods in ` ShadowTelephonyManagerTest ` and
added debug debug statements for HTTP requests in SimpleHostRoutingFilter . java to improve traceability and debugging capabilities for HTTP requests
added ` destory ( ) ` method to multiple classes and invoked it in ` IndexSegment ` , ` BitmapInvertedIndex ` , and
[ issue # 5048 ] fix the test failure of normalmessagemessagesendandreceiveit ( # 5049 )
replaced Charset with StandardCharsets for UTF - 8 encoding to improve code readability and maintainability
hbase - 25836 bulkload fail if multiple hfiles exist in the same bulkload table ( chunhui )
added a nullable ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated ` RippleWithdrawFundsParams `
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
refactor catch blocks in LoadSolrBuilder and SolrLocator to handle both IOException and SolrServerException to improve error handling clarity and reduce redundancy
added a check for abstract overloaded methods in Java2TypeScriptTranslator and updated overload handling in OverloadTests to ensure proper invocation of abstract
added a try - with - resources statement to manage logging to ensure proper resource management and prevent potential memory leaks
added Serializable interface to SqlDataType and refactored entities class to use instance variables instead of static maps to ensure serialization compatibility and improve encapsulation
renamed SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null check for claimRequestString and improved error handling in ConnectOAuth2RequestFactory . java to enhance robustness by handling potential null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the filter set optimization
updated the ` processTypeHintForNestedDocuments ` method and added null value mapping tests in ` UpdateMapperUnitTests ` to improve handling of
replaced instances of ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and
initialize transformers and locators to an empty list to ensure that transformers and locators list is ready for use and avoid potential NullPointerExceptions
refactor error message construction in AbstractQuerydslProcessor . java to improve readability to enhance code clarity and maintainability
improve error message in pe graph decoder .
replaced instances of ` setOf ` with ` copiedSetOf ` and ` setOf ` in ` RestTemplateBuilder . java ` to
camel - 16400 : use objecthelper . getidentityhashcode instead of dumpmessage to avoid npe .
http : / / issues . apache . org / activemq / browse / amq - 2175 - fix npe in Pref
replaced ` getIdentifierName ( ) ` with ` getIdentifierName ( ) . setIsPropertyName ( ) ` in ` Parser . java ` to ensure
add a new activity to show the wave generator in the app
added null check for the m variable and improved error handling in KeyedProperties . java and SheetOverlaysManager . java to enhance robust
test : add test for exec and log in podit
added a new test method ` testNoWriter ` to ` TestReplicationHandler ` to verify that no index is detected and create a new index
[ fix ] graalkitests . dispatchmethodkernelokra should call super . dispatchmethodKernelokra
added sorting functionality to the DefaultMxRecord class and changed the type of records from List < Object > to List < DefaultMxRecord
refactor thread creation to use a privileged action for clarity to improve code readability and maintainability by encapsulating thread creation logic
added validation in SelectBox . java and set the dropdown to " Linux6 " in UITest . java to ensure the dropdown reflects
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing more detailed stack trace information
updated the ` createState ` method to include a ` parentSplit ` parameter in ` FlowBuilder ` and ` SplitState ` classes to enhance
changed the connectionState variable to be volatile and updated its usage in the return statement to ensure visibility of changes to connectionState across multiple threads
( chore ) camel - polling : change default polling period from 10 to 1000
refactor memory allocation methods for ASCII , UTF8 , and UTF16 to use nmalloc instead of malloc to improve memory handling efficiency and
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and
[ java ] unusedmodifier : add support for enum class
replaced lambda expressions with method references in multiple Java files to improve code readability and reduce boilerplate
added a parameter name to the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to improve clarity on SSL configuration in test cases
added exception handling for illegal format exceptions and improved logging messages in TransformationHelper . java to enhance error reporting and provide clearer context for exceptions
updated variable name from ` userPermissions ` to ` getActiveConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and
replaced direct equality checks with a custom EqualsBuilder in Point . java to improve code readability and leverage Apache Commons Lang ' s
added null check for outputRoot in the process method to prevent potential NullPointerException when outputRoot is null
pdfbox - 2576 : allow to filter out duplicate annotation , a suggest by martin schr ö der
refactor StackTraceCleaner class to improve stack trace handling to enhance code readability and maintainability
added content type handling for CSS and JavaScript files in PluginServlet to ensure proper content type is set based on the requested file extension
hhh - 14613 skip testliteralinselectexpressiontest on oracle 8.0
updated the parameter name from ' slot ' to ' slotSize ' and modified the upgrade logic to improve clarity and ensure proper handling of version
added ` getStats ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` DocBuilder ` classes , and
[ scb - 2276 ] add long polling option to kie client ( # 2278 )
replaced direct calls to ` mLauncher . waitForIdle ( ) ` with ` mLauncher . scroll ( ) ` and ` mLauncher .
updated the initialization of ` unlocks ` in ` UI . java ` and added a button in ` PausedDialog . java ` to improve
clear the drop list in PlayerEventListener to ensure the player ' s drop state is reset before processing new drop events
added a default parameter for the input name in StreamResult . java to provide a clearer and more descriptive parameter name for the input input
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to improve error handling by providing more specific exception types
updated print statements in TsFileSketchTool . java to include chunk header type and adjusted PlanIndex skip logic to improve clarity of output and
added a set to exclude specific Swift . h headers in UmbrellaHeader . java and updated assertions in ProjectGeneratorTest . java to
corrected a typo in the method signature of onHttpHeaderError to improve code readability and maintainability
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of request data for processing
mondrian : do n ' t return float for sql query with db2
added password validation in LdapAuthenticationProviderImpl and created a new TestLdapAuthenticationProviderImpl class to ensure that a null or blank password is provided
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a condition to clear the complexWriters in ProjectRecordBatch . java to ensure that no stale writers remain during processing
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress warnings related to serialization in the codebase
changed the visibility of ` ClassGraphClassLoader ` from public to package - private and modified the logic for checking class presence to improve encapsulation and
added a check for " _ errors " in ErrorResponseException and modified return statement formatting in ErrorResponseException . java to ensure proper handling of schema errors
added a constructor to EventSourcingRepository that accepts an EventStore and SnapshotTriggerDefinition as a parameter to enable initialization of EventSour
refactor symbol definition logic in mmm Attr . java for improved clarity to enhance code readability and maintainability by reducing red
updated search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search text to improve user experience by providing clear
do n ' t send all _ off message if standby mode be on ( # 1193 )
tmi - tiff : fix typo find by codespell on fossies . org
close the input stream in itemlisttag so it do n ' t leak resource
refactor laser and crafting tables to use a new utility class for average calculations to improve code organization and maintainability by centralizing
added two new files SigInt . java and SigIntBarrier . java to manage signal handling in a concurrent environment
refactor graph handling in ExporterGEXF . java to support hierarchical graphs and improve edge retrieval logic to enhance compatibility with hierarchical graphs and
refactor TCTLSeparatedProtocol to use Text instead of byte arrays for string processing to improve performance and memory efficiency by utilizing
[ 1.19 . x ] fix index out of bound exception in rubric response ( # 1193 )
updated the condition in CatalogComparator to compare against the original schema and catalog case to ensure accurate comparison of catalog cases based on the current schema
simonstewart : make browsermobproxytest clean up before / after test
update criticalErrors to use Integer . toString for line and column to ensure accurate formatting of error messages for better readability and debugging
removed redundant call to reset ( ) in InPlaceEditView . java to streamline code by eliminating unnecessary duplication
refactor internalbytearray and truffleliteral classes to improve code organization and readability
[ hotfix ] [ graph ] replace tuple3 with tuple2 in graph . foreachedge
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the file ` ClassA \ 314 \ 201 . java ` and created a new test class ` DiacriticTest . java
[ java ] use a cyclic barrier instead of countdownlatch in cluster membership test .
added error handling for component lookup in DefaultMaven . java and updated project collection logic in DefaultGraphBuilder . java to improve robustness and
updated SSL scheme check in ServiceRegistryConfig . java and modified IP port assertions in TestServiceRegistryConfig . java to improve clarity and correct
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure that the ` Servlet ` instance is properly instantiated
updated BinanceExchange and BinanceBaseService to improve server time handling and logging to enhance server time management and provide better insights into server
[ ci ] add support for ` ` nonstop ( tm ) servlets for javaserver page ( tm ) javaserver page ( tm )
added a null check for the component form before deregistering animated component to avoid potential NullPointerException when the component form is not initialized
updated ` decodeResource ` , ` decodeResource ` , ` draw ` , and ` describeDrawBitmap ` methods in ` ShadowBitmapFactory `
[ java ] update examplepublisher and examplesubscriber to use a constant for number of message .
added functionality to prevent multiple clicks and updated text display logic in TimelineArrayAdapter to improve user interaction and enhance the visual presentation of tweets
added " text " to unmodifiable data types in PostgresDatabase and modified NumberType to return a new DatabaseDataType with parameters to enhance data type
fix entryprocessorbouncingnodetest . testentryprocessorbouncingnodesstest ( # 3683 )
updated method calls and state handling in AmbariManagementControllerImpl and AmbariManagementControllerTest to improve clarity and accuracy of state
[ mielecloud ] fix bridge reconfiguration fail ( # 14850 )
refactor methods in PreconditionEnforcer and CrawlServer to use a synchronized variable for validity duration and robots expiration checks to improve thread safety and
added null check for display name in multiple classes to avoid potential NullPointerExceptions when checking for " Teredo "
updated SpriteBatch and ImageButton classes to use a default shader program instead of creating shaders to improve flexibility in shaders
added synchronous commit option to properties in TestUtil . java to enable synchronous commit functionality for improved performance
added type coercion logic to handle duplicate elements in SortedSet to improve error handling by throwing a CoerceFailedException for duplicate elements during coerc
updated message string identification based on file type and favorite status in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality of
added a conditional check for the character index in URLPathEncoder . java to ensure that only valid characters are processed to avoid potential errors
added port number to the address and replaced it with a dynamic port assignment to improve flexibility by allowing dynamic port assignment based on the current time
updated the expect method in HostResourceProviderTest to return an empty map instead of returning an empty map to ensure that the test correctly verifies the
[ hotfix ] [ yarn ] remove logger from yarnentrypointutils . loadconfiguration
refactor SIPCommFrame to use init methods for color and background initialization to improve code readability and maintainability by encapsulating initialization logic
removed the ShadowHtml class from RobolectricBase and updated test assertions in HtmlTest to simplify the codebase by eliminating unnecessary shadow
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated Jetty logger configurations to use " org . eclipse . jetty . http3 " and " org . eclipse . jetty
changed the access modifier of the ` addListeners ` method from private to public in ` MockSettingsImpl ` and added a new test for listener
[ hotfix ] [ runtime ] fix typo in statehandlestore javadoc
replaced the import of ` org . eclipse . jetty . http . security . Constraint ` with ` org . eclipse . j
[ # 7030 ] instructor : add default student section ( # 7041 )
use try - with - resources instead of try - with - resources to avoid resource leak
camel - 1145 : camel - test - make it possible to get a specific port if it be not available
added ` BuildTarget ` as a parameter and updated related methods in ` JarBuildStepsFactory ` and ` AndroidPrebuiltAar ` to
corrected a typo in the error message in TrustEverythingTrustManager . java to improve clarity and accuracy of the documentation
bug 10363 : remove getpagesizeval ( ) method from listcapacitycmd
added handling for the CLOSED case in IteratingCallback . java to prevent further processing when the callback is closed
added a boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` to track authorization status to ensure accurate tracking of access control
added a conditional check for AbstractOSGiApp before sending deployment events in OSGiDeployer . java to ensure that deployment events are
added support for handling tiff formats in DLNAMediaInfo . java to ensure correct MIME type is used for tiff files
replaced ` result ` array with ` types ` and ` assumption ` variables in ` OptimizedCallTarget . java ` to improve clarity
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` and ` MapRenderer . java `
updated file path construction in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure the test uses the correct directory structure
added a call to trashbinListAdapter . removeAllFiles ( ) in TrashbinActivity . java to ensure the trashbin list is reset
updated method call from org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) to com . sun . jdi . Bootstrap
sulong : make checkglobalvariablestoragenode . execute ( ) return a boolean instead of a pointer .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and updated related logic to include component information to enhance event processing by
[ java ] reduce the amount of burn from 546 to 100000 .
refactor UniqueConstraintSnapshotGeneratorSnowflake to streamline import statements and enhance the snapshotObject method to improve code readability and maintainability
refactor item assignment logic in DMLTransformer . java to handle empty insertStatementBuilder to improve clarity of schema selection output based on the
updated JUnit import statements and changed the PGT URL parameter from " http " to " https " in ServiceValidateControllerTests . java to
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and modified its logic to handle default function names to ensure proper
refactor JarLauncher class to improve code structure to enhance maintainability and readability of the code
updated generic type parameters in multiple classes to use generics to improve type safety and clarity in the codebase
added dimension specification and improved type checking for media handler in CallGTalkImpl and TransportManagerGTalkImpl classes to enhance flexibility in
added tests for updating PGobject objects in ResultSetTest . java to ensure correct functionality of date updates with PGobject objects in the database
added a check for empty results before returning a response entity in PasswordResetEndpoints . java and created a corresponding test in PasswordResetEndpointsTest .
replaced the call to getChildNodes ( ) . item ( 1 ) with getDocumentElement ( ) in XMLUtils . java to retrieve the document element
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
rename timeInSec and prevTimeInSec variables to timeMillis and prevTimeMillis in Isochrone and SPTResource classes to improve
fix bind to light relay only if it ' s valid
added a new class ` Chainer ` and updated the ` contains ` method to return a ` Chainer < T > ` instance to enhance
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated recordedTime calculation to include a fixed value of 619315200000 to ensure accurate representation of recorded time in the application
added a condition to resize the status for Windows terminals in LineReaderImpl . java to ensure proper handling of terminal status for Windows - specific
updated state management in UpdateDesiredStackAction . java and modified references in RepositoryVersionState . java to ensure host version state is only updated when
move jre _ bundle _ deploy . jar from third _ party to com / google / j2cl / transpiler / javat
updated collections to use linkedhashset instead of hashset in multiple classes to ensure predictable iteration order and improve consistency in artifact resolution handling
replaced exception handling with a final variable for the Operation instance to improve code clarity and ensure immutability of the Operation instance
reformatted the method call in KnativeEnvironment . java for consistency to improve code readability and maintainability
corrected a typo in the JMXEnabledThreadPoolExecutor name from " commitlog _ archiver " to " CommitLogArchiver " to
added a test for the CloudSolrClient ' s uploadConfig method in TestCloudSolrClientConnections . java to ensure that the CloudSolrClient
ensure thread safety when adding and removing bindings to avoid potential race conditions during concurrent access
added methods to clear temporary files and cache in ShadowContext . java and refactored file handling in RobolectricTestRunner . java
added LinkedHashSet and TreeMap to the list of styles in SecureXStream . java and updated related tests in XStreamPersisterTest . java to ensure
[ drools - 6640 ] allow to pass a kiemodulemodel into the kiebuilder and kiehelper ( # 3
added filtering for Farmland instances in the soil event handling to ensure soil can only be dryed if the current moisture is
added a default implementation of the ` getLocalIp ( ) ` method in ` FinishedSpan . java ` to provide a default implementation that returns null
updated serialization method in JdbcStepExecutionDao and added new test cases in AbstractStepExecutionDaoTests to improve data handling and ensure correct execution context
updated code calculations in AbstractDictionary , BigramDictionary , BiSegGraph , and WordDictionary to improve clarity and correctness to enhance code
added " python37 " resource to the resource list and modified extension handling in tensorflow to include additional Python resources and ensure compatibility with the latest Python
added a refresh button and refactored the table initialization logic in PluginTab . java to improve user experience by allowing users to refresh the table
changed log level from info to warn for reloading , saving , and trimming history files from debug to warn to provide a less severe logging
server : fix npe in vmwarestorageprocessor when vm be not find
camel - 18552 : camel - sftp - allow to stop sshd in test . thanks to benjamin for the
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
updated GpsSettingsActivity , Session , and HttpUrlLogger to use GetBuildSerial ( ) instead of Build . SERIAL to ensure compatibility
refactor SwapGBuffers class for improved performance to optimize memory usage for improved efficiency
added null checks for spatial and skeletonControl in AnimControl . java to ensure proper handling of null values when spatial is not initialized
added functionality to set smart replies in ShadowRanking and updated ShadowRankingTest to utilize Reflector for setting channel and smart replies to
[ java ] do n ' t list archive archive segment if they do n ' t already exist .
updated the retrieval of the carrot2ResourcesDir variable in CarrotClusteringEngine . java to streamline the code by eliminating
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java to address potential NullPointerException
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
pdfbox - 4892 : throw a tasteexception instead of null if the key be null .
added clientInfo field and updated SurrogateAuthenticationEventListenerTests to include client information to enhance test data by including client - specific information
added a boolean variable ` isUserView ` initialized to false in ` CardPresenter . java ` to ensure that the user view state is properly managed
updated method names and import statements in multiple classes to improve clarity and consistency to enhance code readability and maintainability by standardizing naming con
added variable for constructBatch and syncLogTimePerRequest histograms in LogDispatcherThreadMetrics . java to improve code readability and maintainability by
added a new module - info . java file for the sqlite connector to define module dependencies and exports for better encapsulation
added a sleep duration of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " new " web type and simplified the initialization of permissionsManager to streamline the code for better readability and maintainability
refactor DateParser and TestDateParser classes for improved date parsing functionality to enhance code readability and maintainability
added a method ` getDepth ( Context context ) ` to ` SpringLoadedState ` that returns a value of 0.5 f to provide a
refactor BinaryDecoder to use Arrays . copyOfRange instead of System . arraycopy for better performance to improve code readability and maintainability by using
[ hotfix ] [ doc ] fix typo in executiongraph javadoc
removed the notification feature and removed the swipe layout from the NotificationActivity and NotificationRenderer classes to streamline the notification handling process and eliminate unnecessary swipe
updated exception handling in DefaultExceptionConverter and modified exception messages in ExceptionsTest , EndpointTest , and EndpointTest to improve clarity of error messages
fix nullpointerexception in glowcontainer # setlock ( string )
replaced MethodHandle with reflection . Method for setting a field in ProxyMaker . java to improve compatibility with Java ' s reflection API
mondrian : use integer . intValue ( ) instead of integer . min _ value in mathtest . java
updated string concatenation for metrics and datasets in BaseEmailContentFormatter . java to simplify the return statement for better readability and performance
added functionality to display a simple panel or a property sheet panel if it exists to improve user interface by ensuring the correct panel is displayed based on
added a null check for the location variable in the ServerCallable class to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and readability
added a null check for key parameters in the BasicChecker class to ensure that a valid key parameters are provided to avoid runtime exceptions
refactor MediaTypeRequestMatcher to use a new method ` shouldIgnore ` for ignoring specific media types to improve code readability and maintainability by
updated debug log messages to include task number from taskAttemptId instead of a hardcoded value to improve clarity and traceability of log messages
added a property to Spring Boot test configuration to allow bean definition overriding in Spring Boot tests
added null check before closing indexReader in DeleteDuplicates . java to avoid potential NullPointerException when indexReader is not initialized
removed the ` public ` access modifier from several classes in the BTCMarketsStreamingAdapter , BTCMarketsStreamingExchange , and B
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the code rendering correctly
added a new file CompatibilityTest . java that tests internal DTD and properties files to ensure compliance with Java ' s Compatibility
added PushUtils and SecurityUtils classes for managing push registration and signature verification processes to enhance the application ' s capability for managing push notifications and security
fix tablerebalancer . getnextsinglesegmentassignment ( ) to return the maximum number of replica
bump version to 2.7 . 0 and update version number to 2007000
[ log4j2 - 1343 ] use line separator for regex and extendedthrowablepatternconvertertest
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : a
set default values for friction , restitution , and sensor in FixtureDef . java to zero to ensure default values are set
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to clarify the purpose of the
added error handling for shell command " am wait - for - broadcast - idle " in LauncherInstrumentation . java to improve robustness by
added unit tests for font and link tags in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure correct retrieval of
fix npe in guistatscomponent . patch because it be n ' t use anymore .
added phone call permission handling in Launcher . java and a new utility method in Utilities . java to ensure proper request and access for phone calls
updated return values in SimulationPanel . java and modified method signatures in BasicEventSimulationEngine . java to include flightData in PlotDialog .
changed access modifiers of BUF _ SIZE _ LONG and fromBytes methods in GeoEncodingUtils and GeoPointInPolygonQuery classes to enhance encaps
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to ensure thread safety when accessing the Docker client
added a new constant VPX in CodecTypes . java to support VPX codec format in the application
added coordinatorAddress option to DistBuildFactory , DistBuildRunCommand , and AbstractDistBuildExecutorArgs classes to allow users to specify a remote
added a method ` match ` to ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality and
added a conditional check to ensure that only non - zero values are added to the labelValues collection to avoid adding empty values that could lead to
ggb - 2118 fix for npe when result be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline the test suite by eliminating unnecessary tests
added functionality to set materialization time in ObjectStore and a test for it in TestObjectStore to ensure that the creation metadata correctly reflects
added handling for UnsatisfiedLinkError in VoskSTTService . java and updated model loading methods to include error logging to improve
remove one - week property and use stringappend instead of stringappend to make it easy to read
updated break weight logic in GlyphView . java to use GoodBreakWeight instead of BadBreakWeight to improve clarity and correctness of break
refactor byte reading logic in RCFile . java to use a buffer for better performance to improve efficiency and reduce memory usage when reading sync data
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 that requires
refactor data handling to include steps and processors in ToePool . java to improve clarity and organization of displayed information
removed unnecessary parameters from ` DataFlavorComparator ` and related methods in ` DataTransferer ` and created a new test class ` DataFl
hbase - 26400 add - infoport to testthriftservercmdline to avoid port collision
added a condition to check if the end of the file is reached in the RegExpScanner class to ensure proper handling of end - of - file
refactor conditional checks for enabled metrics and timers in Debug . java to improve performance by reducing unnecessary method calls to Boolean . getBoolean
added a null check for the nickname before comparing with the resource to avoid potential NullPointerException when the nickname is null
improve error message for missing or empty filename ( fixes # 539 )
refactor refresh token creation logic into a separate method for clarity to improve code readability and maintainability by encapsulating refresh token creation logic
updated error message formatting in BuckConfig . java to improve clarity to enhance readability and maintainability of error reporting
[ hotfix ] [ yarn ] remove unused lock in yarnapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ( ) ` in ` ShadowNativeImageReaderSurfaceImage . java ` to provide a placeholder
set SSL URI to " https : / / data . btcchina . com " in BTCChinaExchange . java to ensure secure
pmd : fix cpd task to use absolute path
added OauthController and Oauth2PluginTest classes for OAuth2 integration tests to facilitate testing of OAuth2 functionality in the application
refactor SemgrexPattern class to improve code structure to enhance maintainability and readability of the code
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed the ` flatMap ` method from ` EntryStream `
added logging for invalid parameters and improved exception handling in ExceptionToProducerResponseConverters to enhance error reporting and provide clearer error messages for better
updated the condition in RobolectricClassLoader to include a comment for clarity to improve readability and maintainability of the code
change condition to check if the sdp is not already transmittable before checking if it is in the transmittableAudioEncodings list to ensure that
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator ` and added a
add station _ gml32 and station _ gml31 test ( wfs )
added a volatile boolean field and updated related methods in NetworkTestUtils and UaaHttpRequestUtilsTest to track whether the HTTP server was invoked and
refactor ColumnarDataSource , RowProcessor , and BinaryResponseProcessor to use unmodifiable collections and improve handling of regex mappings to enhance code safety and
updated the ` splitIntoThirtyParts ` method to use a constant for seeking seconds and improved the handling of seek positions to enhance
added XLCDCommunicator and XLCDController classes , and refactored FirmwareUtils to use it to improve command handling
[ drools - 5358 ] use kie - api xsd instead of kie - api xsd ( # 5358 )
added retry logic to check for non - empty transaction messages in multiple classes to ensure that retry conditions are enforced before proceeding with operations that
replaced thread state assertions with thread join methods in WorkerProcessPoolTest . java to simplify thread state handling and improve code readability
updated the equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to enhance object comparison
increased the values of FREEZE _ V2 , UNFREEZE _ V2 , and DELEGATE _ RESOURCE from 2
updated method signatures and exception handling in DownloadPlugins . java to improve code clarity and ensure proper configuration management
deleted the SpringTransactionHooks . java file and changed the target type from SpringTransactionHooksTest to AbstractSpringTransactionHooks to simplify the codebase
refactor AbstractClassAssert class to improve code readability to enhance maintainability and facilitate future updates
added a new file GetUninitializedStringValueTarg . java to test the functionality of the GetUninitializedStringValue class to ensure that the un
added functionality to handle provided dependencies in AndroidLibraryDescription and corresponding tests in AndroidLibraryDescriptionIntegrationTest to enhance dependency resolution and improve test coverage for
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to allow users to enable keyboard
added a boolean flag ` sSavedBugreport ` and modified the logic for saving bug reports to ensure bug reports are saved only once to improve
added a new constant CINEPACK in FormatConfiguration . java and updated LibMediaInfoParser . java to handle " cinepack " format
added camera bobbing configuration and updated animation offset logic in Player . java to enhance player control over hand movement animations based on configuration settings
updated the data mapping method from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlob
deleted the HSQLDBServerFilesFilter . java file and updated the file listing logic in TestUtility . java to streamline the code by
added a condition to check if restoreFromSeed and restoreFromKey are both null to ensure that operations are only performed when both seed and key
updated API call from ` APIUtils . getApiVideoVersion ( ) ` to ` APIUtils . getApiDataSeriesVersion ( ) ` and added
added a method to check if a type already exists in the method invocation to optimize performance by avoiding redundant method invocations
updated array size handling in AmbientCubemap . java to use a constant for the number of values to improve code readability and
[ netbeans - 4952 ] profiling : add mode reset message if session be in progress
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskShowFirstN to ensure
refactor derbyblockstoretest to use a temporary folder instead of a hardcoded file
add itemstack . isitemstackdamageable ( ) and getHasSubtypes ( ) to allow itemstack to damage
fix ( mc - 167447 ) : fix line _ width not be set in renderstate
danielwagnerhall : set the browser . startup . page preference to ` ` 0 ' ' instead of ` ` 1
updated condition in Http1xClientConnection to handle both CONNECT and GET requests to ensure proper handling of connection status codes for different HTTP methods
updated task accept method from " compile " to " process - classes " to clarify the purpose of the task for processing classes
bug 58335 - make httpclient . closeidleconnections ( ) thread - safe
added a condition to check if the metric name does not have a suffix to ensure metrics are only created when the metric name does not already have
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to utilize this method to improve fullscreen management functionality
added a new Java class to calculate the frequency of integers based on input to provide a solution for counting integers based on input frequency
initialize socketchannel to null in ClusteredAgentManagerImpl . java to ensure socketChannel is properly initialized before use
refactor MutisignOperationerGodicTest . java for improved test coverage to enhance reliability and maintainability of the test
refactor read methods in StaxEventItemReader to handle NoSuchElementException and restart at the end of the file to improve robustness by preventing
replaced specific imports with a wildcard import and updated return logic in ShadowTextView . java , and added a null check in TestAttributeSet
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
added support for AIX operating system family in OS . java and updated PKCS11Test . java to include it to ensure compatibility with AIX
cs - 16400 : use routercontrolip instead of privateip for router / ip / ip / ip / ip / router / ip
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate synchronous execution of RunnableWithResult
remove unnecessary test that be n ' t use anymore
replaced instances of ` int ` with ` Math . round ` for rectangle calculations in ` PortraitPagedViewHandler . java `
refactor KMeansDriver and FuzzyKMeansDriver calls in TestClusterDumper . java to improve code readability and maintain consistency
updated the return statement in KeyValue . java to include additional size calculations for rowCache to improve memory alignment and ensure proper handling of rowCache
camel - 16400 : camel - core - optimize to reduce memory consumption .
added import for ConditionalTask and implemented dispatching for conditional tasks in SparkCrossProductCheck . java to enable processing of conditional tasks in the Spark
updated action handling in Launcher and LauncherModel classes to forceReload ( ) to ensure proper reload behavior when a profile is added or removed
updated the condition in ` LoginInfoEndpoint ` to check for JSON responses and added new test cases in ` LoginInfoEndpointTests ` to ensure
hbase - 25801 add todescriptivestring ( ) method to make it easy to debug assignment
renamed ` message ` to ` msg ` and ` result ` in ` HuobiAccountInfo ` and updated related methods in ` H
added support for the " PERIOD " column in MariaDB database and created a test for adding a new " PERIOD " column to
[ beam - 8470 ] improve description of portable worker default environment .
added new instructions for launcher shortcuts and dictionary loading mechanisms in VersionChangeLogs . java to provide users with accurate information about the launcher shortcuts and
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public to allow access to NUM _ MILLIS _ IN _
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check if aeron client be use conductor agent invoker before invoke aeron client to ensure that the client be
updated type validation logic in mmm Attr . java and added NoWarnOnImplicitParams . java with generic interfaces to improve type safety and suppress
refactor menu item visibility and visibility methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by encapsulating menu
added additional currency types to BTCETransHistoryResult and updated corresponding tests to ensure accurate representation of currency results in the application
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of elements
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated LastQueryExecutor to handle sequence time conditions and added a new test for unseqTimeLarger than sequence time in IoTDBLastIT
corrected the formatting of the request string in HttpResponse . java to ensure consistent line endings across different operating systems
added a static block to set the SLF4J logging system property to ERROR to improve error handling and logging for HTTP wire errors
added safe area setting for the title bar in Sheet . java to enhance user experience by preventing potential layout issues
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure that the last element in the list is processed
added SQL parsing and deparsing for renaming columns in AlterTest . java to ensure that the ALTER TABLE command can correctly handle renaming columns
changed the visibility of the copyState method from package - private to public to allow access to the method from other classes
fixed - rservice . executecallable ( ) . toCompletableFuture ( ) method throw classcastexception . # 3506
add a constant for suffix split file to make it easy to override
[ flink - 20613 ] [ table - planner - blink ] fix checkstyle violation in rc
added a null check for valueArg and nameArg in CompareFunctionsProcessor . java to ensure proper handling of null values in comparison functions
fix compaction task to reduce scope when there be insufficient disk space
removed several ` toString ( IndexReader ir ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTerm
added a check for handler invalidated state in AbsSwipeUpHandler and unregistered task stack listener in TaskAnimationManager to improve stability by
added methods to retrieve and set lock timestamps in AppPreferences and PreferenceManager to improve code modularity and encapsulation by centralizing lock timestamp management
refactor artist retrieval logic in MediaInfoParser . java to use a dedicated method to improve code readability and maintainability by centralizing artist
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 10650 : fix npe in splittext when there be no header marker
added support for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time for
added a conditional check for the result code of FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure proper handling of file not
added interpolation options to the Slider class to improve animation control and visual feedback during user interactions
updated assertions in LineSeparatorProcessorTest to use ` lineSeparator ` instead of ` eol ` to improve clarity and consistency in variable naming
increased maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve texture packing capacity for better performance
added a test for negated Ternary not unwrapped in UnwrapParenthesesTest . java and modified the return condition in UnwrapParentheses .
camel - 16400 : fixed npe in hazelcastqueueconsumer . poll ( )
added a new TextFeedbackTest class and modified TestRunner methods to use it to improve test coverage and ensure proper functionality of text operations
replaced Math . round with Float . compare for score comparisons to improve precision and consistency in score comparison
updated DENSITY _ 560 , DENSITY _ 2HD , and DENSITY _ 4K cases in AddAndScale
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets `
log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4
added remote SCM support functionality to Configuration and RuntimeEnvironment classes to enable or disable remote SCM communication in the application
added state check for STATE _ END and STATE _ RINSE _ HOLD in MieleApplianceHandler . java to ensure proper
replaced instances of StatsLogCompat with SysUiStatsLog for logging launcher events to standardize the usage of the SysUiStatsLog class
corrected the spelling of " log " to " LOG " in LocalZookeeper . java to improve code readability and maintainability
added unit tests for ` ProjectGenerationEvent . Finished ` and ` ProjectGenerationEvent . Started ` in ` EventSerializationTest . java ` to
ggb - 2178 remove special point when select a poly function in selectionmanager
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
hbase - 25850 integrationtesttimeboundedrequestswithregionreplicas should throw an exception if no time remain for the test to execute
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test suite
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list to support additional garbage collection options
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added corresponding tests in SpringCloudCircuitBreakerFilterFactoryTests to improve URI construction
refactor multiple test classes for consistency and organization to improve maintainability and readability of the test suite
patch from josh from bug # 49564 - improve readability of sharedstringstable
added a method to retrieve the account network from a specified address and updated the HttpMethed class to utilize it to enhance functionality for
added a null check for availTextWidth in SwingUtilities2 and modified GTKLookAndFeel initialization in Test6635110 to
refactor FlatteningIterator to simplify object handling and improve clarity to enhance code readability and maintainability by reducing redundancy
replace HTML tags with spaces in TweetLinkUtils ' s removeColorHtml method to ensure proper HTML formatting for better readability and user experience
doc : generate sample code in the java microgenerator ( # 48 )
update instructorfeedbackeditquestionionsuitest to reload and delete any existing question
updated return values in HSSFSheet . java to return 0 instead of - 1 and added new assertions in BaseTestSheet . java to
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to enhance security by ignoring malicious intents
[ java ] do n ' t send event when a session be connect to a cluster .
added hashCode ( ) method to AbstractParquetMapInspector and simplified equality checks in AbstractParquetHiveMapInspector to improve hash code generation
added a condition to flush the QuicSession when the connection is remotely closed to ensure proper resource management and prevent potential memory leaks
added AutoCloseable to the SplitReader interface to ensure proper resource management and prevent memory leaks
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unnecessary copy creation logic
sulong : do not throw npe if llsourcemap do n ' t exist
refactor file handling in RestClientRequestImpl to use CompletableFuture for asynchronous file operations to improve performance and simplify asynchronous file operations
updated the dispatchStatusString method call in GrblController . java to ensure consistent handling of controller status updates
added a new class ` SearchingClassLoader ` and modified the ` MockFactory ` class to utilize it to combine multiple class loaders to improve
* add a test to see if a bug be fix or not .
hive - 20613 : constantpropagateprocfactory . constantpropagateprocfactory . constantpropagateprocfactory #
refactor response and request completion checks in HttpReceiver and HttpSender classes to improve code readability and ensure proper termination logic based on response status
replaced ` arrayLengthOffset ` with ` arrayOopDescLengthOffset ` across multiple files to correct the method name for better clarity
fix for http : / / issues . apache . org / jira / browse / amq - 4892 - make the broker test
updated multiple Kerberos - related Java files to improve consistency and organization to enhance maintainability and readability of the codebase
added a check for running state before calling appCtx . stop ( ) in CrawlController . java to ensure appCtx is only stopped when
changed the return type of the drawItem method from void to GlyphLayout to allow subclasses to override the drawItem method for better usability
refactor SpringmvcClient to utilize MetricsPublisher for metric publishing to improve code maintainability and leverage MetricsPublisher for metric monitoring
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE and simplified the return statement in AccountAgeWitnessService . java to
refactor code formatting and improve readability in StructureHeader and StructureReader classes to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to support exclusion of ResourceUrlProviderExposingInterceptor in
add dexreturninliner to dexbody and dexreturninliner . dexpler . dexreturninlin
updated ruleresource and enrichedruledto to use getProperties ( ) instead of a generic rule to improve code clarity and facilit
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated symlink handling in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - planner - blink ] remove sqldialect from executioncontext
refactor ` AndroidBinaryGraphEnhancer ` and ` AndroidPackageableCollection ` to use ` Supplier < ImmutableSet < String > > `
add unit test for astpackagedeclaration , deprecate @ deprecated
added a configuration property for the minimum cross compaction unseq file level in IoTDBDescriptor . java to ensure the unseq file level is dynamically
[ hotfix ] move activeresourcemanager to active package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI creation logic in ZipResource . java and added unit tests in ZipResourceTest . java to improve error handling and ensure correct parsing of
refactor ExpandableUploadListAdapter to improve code readability and enhance thumbnail handling for images to enhance user experience by ensuring proper thumbnail generation and
refactor configuration handling in RobolectricTestRunner and add new test cases in RobolectricTestRunnerTest to improve test coverage
added a predicate to filter blocks and items based on their registry name before creating new lists to ensure only non - null registry names are processed
removed ` abstract ` modifier from methods in ` AbstractDataChangedListener ` , ` AbstractDataChangedListener ` , and ` WebsocketCollector `
updated JSONPojoConvertor to handle enum types and added color handling in tests to improve type conversion logic and enhance test coverage for color functionality
added a deprecation warning for the ` -- view ` option in IjProjectCommandHelper . java to inform users that the ` -- view `
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated the handling of character encoding to improve memory
added orientation correction functionality to GyroControl to improve responsiveness during device orientation changes
updated BIOME _ LIST _ SIZE from 256 to length of BiomeGenBase . getBiomeGenArray ( ) . length to
updated function calls from " println " to " print " in GetInterfaceTest . java to ensure consistent output formatting and improve code readability
updated the initialization of the Environment variable in FileCompilerConfig . java to ensure the correct environment is used for compilation
added a new interface ByteToLongCollector with methods for generating ByteToLong to facilitate the collection of byte - to - long functions in
added a preload parameter to MMapDirectoryFactory to allow customization of map loading behavior based on user - defined settings
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components in the application
refactor QuickConnectREST class to improve code structure to enhance maintainability and readability of the code
added aspect ratio and default card image in CardPresenter . java to ensure proper display of the default card in the UI
do n ' t increment auth method count if it ' s implicit
updated cloning logic to handle empty arrays for long , double , and byte values in VectorHashKeyWrapper . java to improve robustness by prevent
added tests for the " System . nanoTime ( ) " functionality in TimeChangeTest . java to ensure correct handling of JIT nanotime
trim whitespace from line input in MultiPartFilter . java and add a print statement in MultipartFilterTest . java to ensure leading and trailing spaces
fix entitylivingbase . dropexperience ( ) not fire when a player drop the experience .
updated error handling and status updates in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity of error messages and ensure accurate status updates
[ flink - 20613 ] [ sql - planner ] remove unsupportedopsperator from query planner
added RdepsFunction and modified graph handling in GraphEnhancementQueryEnvironment and GenruleDescriptionIntegrationTest to enhance dependency resolution and improve test
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a flag to select the index of the selection option based on whether a Rocket component is a entire rocket to ensure the selection option
removed unnecessary ` Arrays . toString ( bytes ) ` calls from assertion statements in UpdateableResultTest . java to simplify code and improve readability
added time boundary attachment logic for offline and realtime tables in BaseBrokerRequestHandler . java to improve handling of time boundary information for hybrid tables
do n ' t add socketref to poller if the endpoint be not pause
updated regex pattern and modified title handling for free porn comics in EightmusesRipper . java to improve accuracy in title
replaced calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to standardize
added a condition to check if the device is not in landscape mode to ensure proper layout behavior for phone devices in non - landscape orientation
updated assertions in PartTreeJpaQueryIntegrationTests to use ` QueryImpl . class ` instead of ` PROPERTY ` to ensure compatibility with the
replaced ` Files . readAllLines ( ) ` with ` readMatchingLines ( param ) ` and added a new method ` readMatchingLines
added a dynamic check for the result stream in JpaQueryExecution to enhance functionality by allowing retrieval of the result stream from a JPA query
added null check for entity before processing to avoid potential NullPointerExceptions when processing entities
clear map when value attribute be equal to 0 ( # 15411 )
add an operation set for the jitsi - meet room , if the jitsi - conference - room header be present .
updated color handling in Utils . java and modified HTML message format in UtilsTest . java to ensure correct color representation and improve message formatting
fix : disable menu item and normalize name when text be empty ( # 5369 )
updated path format in ` Aapt2Link . java ` to use a relative path instead of a hardcoded string to improve clarity and
replaced instances of ` new Capture ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
ggb - 2118 update selection after clear the geos list
added error handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve robustness by providing clearer error
added isCanceled ( ) method to multiple Call and ExecutorCallAdapterFactory classes to standardize cancellation handling across different call classes
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to standardize the method usage and improve usability across different classes
added a default implementation of the ` removeAllWidgets ` method in ` UILayout . java ` to provide a placeholder for future implementation of the
[ hotfix ] [ test ] fix flaky yarn test
opensslcipher . getoutputsizeforfinal should use max ( inputlen ) instead of getoutputsizeforfinal ( )
added support for high - resolution content transcoding in Fire TV Stick playback to improve performance by reducing transcoding of high - resolution
[ beam - 8470 ] fix the bug of readsourcetranslatorbatch and readsourcetranslatormockbatch
replaced specific imports with a wildcard import and modified listener handling in GpsLoggingService to streamline import statements and improve listener management based on
changed the data type of putString from boolean to byte for fullwidths and added wide attribute measurement logic to improve compatibility with JNI and enhance
added handling for BaseItemDragListener in FolderIcon . java to improve drag - and - drop functionality for better user experience
added ` createEmptyArtifact ` methods to differentiate between String and its type to improve flexibility in artifact creation for different connector configurations
updated formatting in RabbitMQPublisherImpl . java for consistency to improve code readability and maintainability
removed unnecessary calendar checks in VideoViewerActivity . java to simplify code logic for better readability and maintainability
camel - 16400 : fixed sftp operation to work on window . thanks to michael klink for the patch .
updated mock assertion in BaseWeatherConsumerTest to include a timeout of 20 seconds to improve test reliability by allowing more time for mock endpoint
renamed ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
added support for lARGE _ FERN as a species condition in BlockDoublePlant . java and BlockType . java to ensure proper
changed focus behavior of the tree component from focusable to request focus to improve user experience by preventing unintended text input
do n ' t swallow virtualmachinemanagerexception in case of failure .
removed license acceptance logic from DB2TestSystem and modified condition checks in DockerDatabaseWrapper and TableIsEmptyGenerator to streamline license handling and
refactor unit handling in DoubleModel and related classes to improve unit management to enhance flexibility and maintainability of unit management in the model
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations involving Bitcoin Z
added functionality to set the number of samples in TestPBRLighting to ensure the PBRLighting uses the correct number of samples based
updated parameter names in assertTasklet calls in StepWithSimpleTaskJobParserTests . java to improve clarity and consistency in test assertions
changed variable declarations from ` UsernamePasswordCredential ` and ` Service ` to ` final ` in ` CentralAuthenticationServiceImplTests . java `
updated string concatenation syntax for the ggbabs function in ExpressionNode . java to improve readability and maintainability of the code
added multiple ` addServiceOutput ( ) ` methods in ` DDLSemanticAnalyzer . java ` to handle service output processing to improve the
fix bigdecimal type coercion for objectcreationexpr ( # 1193 )
added a comment to hide JDT used by Jetty in WebAppContext . java to clarify that JDT is not used by J
modified the return statement in NegotiateAuthentication . java to set cacheSPNEGO to false to simplify authentication logic by avoiding unnecessary caching
change namespace assignment from a hardcoded value to a capitalized value to ensure consistent casing of the namespace value
camel - 16400 : direct component now throw directconsumernotavailableexception instead of directexchangeexception .
added a null check for the ZooKeeper variable before setting it to null to avoid potential NullPointerException when zooKeeper is not initialized
updated progress bar message formatting in Loader . java to improve code readability and maintain consistency
replaced direct calls to ` mVibrator . cancel ( ) ` with a method ` runOnUiHelperThread ( Runnable runnable
added a method to update the last remote stream ID in the HTTP2Session class to ensure the session reflects the correct remote stream ID for
added text antialiasing setting to Graphics2D in EditorHeader . java and EditorToolbar . java to improve text rendering quality for better
[ java ] : use current window size instead of term window size in driver publication .
refactor : remove static import of enums in ctannotationimpl . java
updated ExoPlayer . java file to improve functionality and performance of player interactions
replaced the native method ` getRGBPixelImpl ` with a new method ` getRGBPixels ` in ` WRobotPeer . java
refactor print stream creation to use a new method for encoding to improve code readability and maintainability by centralizing encoding logic
increased the vibration rate from 1 to 25 in TouchableMovementMethod . java to improve user experience by reducing vibration
improve code quality by add checkstyle rule
removed the executor parameter from the WebSocketClient constructor and added a default constructor to ensure proper initialization of WebSocketClient without requiring an executor
danielwagnerhall : fix i18n test that fail on travis
refactor error handling methods from ` handleIllegalArgumentException ` to ` handleLoadConstantException ` in ` BytecodeParser ` and ` SharedGraphBuilder
[ hotfix ] [ test ] restore auth system state in xmlworkflowserviceit
added a custom comparator for string comparison in CoNLLUFeatures . java to improve sorting behavior for null values
refactor JavadocTool to improve handling of source files and streamline parsing logic to enhance code readability and maintainability by reducing redundancy
simonstewart : fix the issue that the toggle ( ) method throw an exception if the option be not support in a multi -
added a validation check for the length of keys in HighestKvno . java to ensure that the count of keys matches the expected length
added error handling for attribute retrieval in HDF5BatchReader to improve robustness by logging a warning when attributes are not found
[ beam - 8470 ] replace pdone with writeresult in write / writewindowedtobigquery and write
fix createtemplaterequestentity and copysnippetrequestentity in processgroupresource . java ( # 3550 )
8014251 : jdk / jdk / internal / asm / objectweb / array / testmultianewarray . java
add secondary . storage . vm config to allow secondary storage to be configure on the management server
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve readability and maintainability to enhance code clarity and ensure
added a call to set the theme of the preview tab in PreviewTabView to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle time configuration in ConnectorTimeoutTest . java and modified server idle timeout settings in ServerConnectorTimeoutTest . java to
add miss property for dictionary , dictionarypmi , and signatures . this be useful for debug purpose .
replaced the ` readIdentifier ( ) ` method with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
removed unnecessary type casting for parameter values in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code readability
changed log level from warn to debug for child node name logging to reduce log verbosity and improve performance during normal operations
refactor color extraction logic to use a dedicated method for hotseat palette retrieval to improve code readability and maintainability while ensuring compatibility with
added default data table entry and cell transformers to TypeRegistry to enable customizable transformation options for data table operations
removed an assertion from AtomicRemainder . java to streamline the code by eliminating unnecessary assertions
chore ( regen ) : regenerate with update license year ( # 4382 )
added a private boolean field ` projectGenerated ` and its getter method ` isProjectGenerated ( ) ` in ` ProjectGenerator ` and ` Workspace
updated conditional check for USER _ PROPERTY and AUTH _ HEADER in DriverUtils . java to ensure proper authentication handling for user properties
added a new route for the " contactForm " endpoint and integrated it into the ApplicationController to enhance the application ' s capability to handle contact
guacamole - 162 : fix simpleuser to return objectpermissionset instead of permission objectset .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version of the IconCache class
[ drools - 7 ] fix checkstyle violation in traitfactory . setmode ( )
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` and updated related references to
replaced manual closing of perDocConsumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper . java to ensure the menu updates correctly when the overflow button is clicked
updated error messages in tests for null and non - null optional scenarios to improve clarity and accuracy in error reporting for null and non - null
ggb - 1358 update line height of help button ( for input tree item )
move protobufferutilitiestest from p2p network to util package
fix split pane divider position on window ( # 4640 )
count cross reference entry in aux file when generate a new aux file
refactor geoserverfeaturelocking and geoserverfeaturestore to use metadatamap instead of map
changed the parameter name from extractTypes to dataTables in RecipeDescriptor . java to improve clarity by using a more descriptive variable name
fix metacontactavatarupdate event not fire when update metacontact avatar .
updated import statements in ShellCommand and ShellFactoryImpl to use the correct command class to ensure compatibility with the latest SSHD library structure
added a test method to validate the cleanup of a audit log table based on post parameters to ensure that the audit log table is cleaned up correctly
changed the type of the ` inject ` method from ` T ` to ` Object ` in ` ComponentContext . java ` to ensure type safety
refactor comment parsing logic in ACLFileParser to improve validation and error handling to ensure comment lines start with ' # ' and enhance robustness
updated MapRDBFormatMatcher and MapRDBSubScan to use DynamicDrillTable instead of FormatSelection to enhance functionality by integrating
added an ` HashMap < String , String > ` for ancestor dimension values in ` StarTreeImpl ` and ` StarTreeNodeImpl `
added user unlock check in TouchInteractionService and refactored closeOpenViews method in Launcher to improve user experience by ensuring proper handling of
updated condition to check for positionStr instead of widthStr to ensure correct handling of positionStr in the Photo class
refactor PKIXValidator logic for improved clarity and structure to enhance code readability and maintainability
[ flink - 26011 ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` integratedtest . alibaba . dubbo ` to ` org . apache . shenyu .
do n ' t skip project network if specifyipranges be set to true , we do n ' t need to specify ip range in the
updated the way type fields are retrieved from JSON in RuntimeTypeAdapterFactoryFunctionalTest to ensure correct retrieval of type information from the JSON object
added methods to store undo information for properties to enable or disable the storage of undo information for properties
added a privileged action to retrieve the " sun . sun . xrgradcache " system property in XRCompositeManager . java to ensure
updated StreamCloseTest to use Awaitility for checking stream count to improve test reliability by ensuring all streams are closed within a specified time
removed the ` doAfterFlush ( ) ` method from ` DocConsumer ` , modified ` perFields ` initialization in ` DocFieldProcessor `
updated configuration metadata generation to filter out deprecated properties and improve error handling to ensure only non - deprecated properties are processed in the configuration metadata
updated capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap to improve immutability and correctness of
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in Hive . java to
improve error handling and logging in ParallelNioSender . java to enhance debugging capabilities by providing more context on exceptions
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when the context is null
svm : fix native - image - build - server to use the correct classloader
modified the return type of the ` modifyGrantedAuthorities ` method in ` SwitchUserAuthorityChanger ` and ` SwitchUserProcessingFilter `
refactor ` JaxrsIntegrationTest ` to extend ` JaxrsIntegrationTestBase ` and introduce ` JaxrsSpringMain ` to
fix # 167 by add special detection for whether query timeout be support by the driver
added data providers for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to facilitate easier testing
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence data types in MariaDBDatabase and updated conditions in CreateSequenceGenerator to enhance compatibility with MariaDB and ensure proper
removed unnecessary spacing in error messages across multiple classes to improve code readability and maintain consistency
replaced the import of ` BrokerResponse ` with ` TableDataManagerProvider ` and set server metrics in multiple test classes to ensure consistent metrics
added support for both MFLN and MFLN extensions in SSLExtension to enhance flexibility in configuration by allowing both MFLN and
refactor ObjectHashSet to remove generic type parameters and simplify iterator initialization to enhance code readability and maintainability
updated character remaining count from 22 to 23 in Compose . java and TweetFragment . java to increase the character limit for shortened URLs
add ttl to kairosdb datastore so that it can be use in test .
updated ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and improved error handling to enhance flexibility
added a method ` getTerrainAtCell ` to retrieve terraingers at a specified cell coordinates to facilitate access to
added default value handling in Pretty . java and created a new class T6665791 . java with Java compiler tests to facilit
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve robustness by logging errors when the quest keys
modified the return statement to include a check for push support to ensure that only non - push requests are processed when push is not supported
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
added a method to sign local witnesses in BlockUtil . java to ensure the block capsule uses the correct private key for signing
modified return statement in FileSystemView . java to handle empty roots case and added security checks in Win32ShellFolder2 . java to improve robust
updated row height calculation and modified row copying logic in ColumnText and PdfPRow classes to ensure accurate row height calculations and improve handling of last
added SparseArray for managing undo notes and refactored note removal logic to use SparseArray to improve performance and maintainability of the undo note
[ # 6321 ] uploadbackupdata : adjust id of response comment and question ( # 6342 )
removed null check for transfer data in bug8024061 . java to ensure proper handling of non - null transfer data
no effective change - remove unused pstmtdelegate interface
replaced ` Padding ` with ` Rect ` in ` AppWidgetResizeFrame . java ` and ` Launcher . java ` to util
refactor NashornBeansLinker to use a static lookup for method handles and add consStringFilter method to improve code readability and
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
renamed ` latch ` to ` goAwayLatch ` and updated its usage in ` IdleTimeoutTest . java ` to improve clarity
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve read
replaced ThreadLocal with null for the currentBook variable across multiple classes to improve memory management and prevent potential null pointer exceptions
added support check to contactsecurityvoter to prevent illegalargumentexception
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added an AtomicInteger to track the number of rows affected and updated the postUpdateLog method to accept it to enable tracking of the number of rows
ggb - 2178 fix margin of suggestion in ggb - 2175
initialize foregroundFPS and backgroundFPS with default values to ensure consistent frame rates for better application performance
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and tracking of transactions
replaced the use of ` DefaultWebSocketFrame ` with a ` ChannelFutureListener ` for WebSocket frame writing to improve code clarity and ensure
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and added ` OnStateMachineError
replaced intent creation with a method to set the list background to improve code readability and maintainability by encapsulating background setting logic
updated import statements to use OpenHAB ' s StringUtils and added null check for line to ensure compatibility with OpenHAB ' s utility and
added a new ` accumulate ` method in ` JavaUserDefinedAggFunctions ` to calculate average values based on specified weights to enhance the flexibility
[ hotfix ] fix typo in put . java and replicationsink . java
replaced Set with a Map for regular expressions caching to improve performance by reducing redundant pattern compilation operations
added a reset method to the GameThread class to facilitate resetting the game thread state
added a realm check in the login method in DigestAuthenticator to ensure that only users with the correct realm are authenticated
refactor parameter handling in SavedRequestAwareWrapper to improve parameter merging logic to enhance parameter management and prevent potential null pointer exceptions
updated InfoStatus messages in multiple classes to use ' lc ' instead of ' hiddenSingleton ' and improved log message formatting to enhance clarity
replaced ` countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and ` HAService
added a check for Android O and updated image view condition in PhotoViewerActivity and UserAutoCompleteHelper to ensure compatibility with devices running Android O
updated SchemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerOptions to enhance schema information accuracy during testing
replaced ` zipOut ` with ` BufferedOutputStream ` in ` SaveTask . java ` to improve performance by reducing the number of write operations
updated TestPayloads . java to use UTF - 8 encoding and improved byte - length string conversion to enhance performance and ensure correct handling of
fix ( mc - 103516 ) : fix entity not find in the list
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 7 ] fix array . equals ( ) and arrays . deepequals ( ) in protobufinputmarshaller
refactor case statements in NowSearchTerm and SearchTermBuilder for improved readability to enhance maintainability and clarity of comparison logic
pdfbox - 4892 : make class public , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for URL resolution to enhance flexibility by allowing dynamic HTTP method and headers based
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that the task manager receives notifications during tests
added a method ` recomputePreviewDrawingParams ( ) ` to ` FolderIcon . java ` and modified its usage in ` PreviewItemManager .
refactor LukeRequestHandler to use CharFilterFactory instead of TokenFilterFactory to improve code clarity and maintainability by using a more
replaced null argument checks with a new utility method ` ParamChecks . nullNotPermitted ` to improve code readability and reduce boilerplate
added verbosity handling to the ` createSubContext ` method in ` JavacStep . java ` and ` ExecutionContext . java ` to
added a check to convert the schema to uppercase if the database type is Oracle to ensure consistency in schema handling for Oracle databases
update context description in AsyncLoggerAllThreadContextImplementationsTest to include class name to improve clarity of context information for better debugging
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to facilitate testing of
replaced string splitting with Splitter for splitting custom packages to improve code readability and performance by utilizing modern Java features
updated the ` AnalyzingInfixSuggester ` to use ` context ` directly instead of using ` utf8ToString ( ) `
updated the handling of localAttachment to use a local variable for better clarity to improve readability and maintainability of the code
[ zeppelin - 4892 ] strip provenance should print jsonresult instead of provenancehash
pdfbox - 4892 : remove null check , a suggest by valerybokov
changed FORMATTER constants from ` private final static ` to ` static final static ` in multiple test classes to improve performance by avoiding unnecessary static
updated UDFRound class to use BigDecimal and RoundingMode for rounding and improved null handling to enhance precision and prevent potential null pointer exceptions during rounding
refactor configuration retrieval to use ConfigParser for better readability to improve code clarity and reduce redundancy in handling configuration values
changed class declarations from package - private to public in Test1 and Test2 to allow access to these classes from other packages
updated event permission handling by replacing String . valueOf ( Permission . PERMISSION _ ADMIN _ ENTRY _ DENIED ) with String . valueOf ( Permission
modified the ` getAdditional ` method in ` ConditionAndOr ` , ` ConditionInConstantSet ` , and ` ConditionInConstantSet ` to
replaced ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` Base
added random box and circle creation and friction setup in Box2DCharacterControllerTest . java to enhance test coverage and ensure fri
8274237 : [ testbug ] add test for jfr / threadbuffersize option
removed multiple assertion for " must be a power of 2 " in ObjectAlignment . java and Options . java to streamline the code by elim
added functionality to retrieve the target package name from a manifest file to enhance the instrumentation tests by allowing users to specify a target package for better integration
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
initialize acceptablethrowawayitems to a new ArrayList instead of an array to ensure that the acceptable throwaway items list is not modified externally
updated method calls to use ` invokeExact ` directly instead of generic type declarations to improve code readability and reduce casting overhead
removed unnecessary whitespace in MessageHandler . java to improve code readability and maintainability
[ java ] fix typo in inflection javadoc .
added methods to get and set the locale in the EvaluationContext class to enable dynamic locale management for the el context
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in the DrawerActivity class to prevent fall - through behavior in a switch - case structure
updated import statements in MongoQueryCreator . java to use wildcard imports and improved debug log message formatting to enhance code readability and maintainability
ww - 4351 add system property xwork . loggerfactory for loggerfactory
renamed method ` adminAddPeerFailsWhenP2PDisabled ` to ` adminAddPeerHasNoEffectWhenP2PDisabledOn
updated bean names in multiple configuration classes for LivenessStateHealthIndicator and ReadinessStateHealthIndicator to improve clarity and consistency in bean naming
fix ( localpstoreprovider ) : do n ' t create local pstore if write be disable .
changed the access modifier of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced instances of Provider with ServiceProvider in ServiceLoaderSpliterator . java and TypeUtil . java to improve clarity and consistency in handling
truffle : do n ' t throw illegalargumentexception in javainteropreflect . setfield .
added toolchain creation checks in AbstractCell and related classes to ensure that daemon processes are invalidated when toolchains are present to ensure proper handling of
do n ' t remove the context if it be already add to the engine .
updated string checks from ` - 1 ! = indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability
updated PrebuiltCxxLibraryDescription and related classes to use exported linker flags instead of linker flags to enhance flexibility in managing linker flags for
replaced the internal method ` onConfigurationChangedInternal ` with ` updateRecentsRotation ` in ` AbsSwipeUpHandler . java `
updated type checks in multiple classes to use generics for better type safety to enhance code clarity and prevent potential ClassCastExceptions
updated the object array to include the hash of the block header to ensure accurate representation of the block header ' s hash
http : / / issues . apache . org / activemq / browse / amq - 2698 - fix defaultmessag
refactored the instantiation of JvmGcMetrics and JvmHeapPressureMetrics to use a try - with - resources statement to improve resource management
http : / / issues . apache . org / activemq / browse / amq - 2696 - track total time of get
added @ Deprecated annotations to multiple query classes to indicate that these classes are outdated and should not be used in new code
added a method to check if a system UI object exists and executed a shell command for the " keyguard _ status _ view " UI to
changed logger and principals variables to be final in SessionRegistryImpl . java to ensure immutability of these variables to prevent unintended modifications
added a check for empty cookieJar in InMemoryCookieStore . java and updated test cases in NullUriCookieTest . java to ensure that
fix ( bonsai ) : improve bonsai world state update ( # 2596 )
changed the parameter type of the ` getText ` method from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexible
[ java ] disable marionette test for firefox
added a finally block to return a connection to the destination in SocketConnector . java to ensure proper resource management and handle potential IO exceptions during connection
rename WindowsCommandLineEscape to WindowsCreateProcessEscape and update related references to improve clarity and consistency in handling process escape commands
added synchronization to the heartbeat executor service initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a method ` updateFirstLineShowing ( ) ` in ` TextArea . java ` to fix the issue of text selection outside the
added Hadoop ' s Path utility for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure consistent file path management across different Hadoop
refactor graphics configuration retrieval logic in Component . java to improve clarity and reduce redundancy to enhance readability and maintainability of the code
tika - 3746 -- upgrade to tika 3.0 . 1 and add test for oom in legacy mode
( chore ) camel - pipeline : remove the doProcess method from the pipeline class
refactor PrintTagList to accept a model file and collect tags and states from the command - line arguments to improve flexibility in model loading
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 4898 - fix test failure
[ java ] fix startfromtruncatedrecordinglogtest to check for cluster ready .
updated the calculation of the outer rectangle in LineBorder . java to improve accuracy of the rounded rectangle representation
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when accessing galleryImages
updated the ` DEPLOYMENT _ ID ` field in ` StandardChangeLogHistoryService ` and ` CreateDatabaseChangeLogTableGenerator ` to
pdfbox - 2576 : move fdf and setfield from pdfbox - examples to pdfbox - examples - interactive
removed the ` moreColumnOk ` parameter from method signatures in ` AlterTableAddConstraint . java ` to simplify the method signature and improve
added functionality to manage and manage provisional engines in QuickfixjComponent to improve engine management and ensure consistent behavior when multiple engines are added
added displayZoomControls property and modified mixedContentMode handling in RoboWebSettings . java to enable or disable display of zoom controls based on
add corporea _ block , corporea _ brick , corporea _ slab , and corporea _ block , and
refactor ConnectionFactory methods for improved connection management to enhance performance and maintainability of database connections
added a method to enable / disable menu items in GpsMainActivity to control the visibility of menu items based on user settings
updated the message in ExtendedListFragment to use a new favorite headline and filter list instead of a server search string to improve clarity and
hhh - 14613 fix test failure on oracle
updated MotorMountConfigurationPanel and MotorConfigurationPanel to use subpanel instead of this in MotorConfigurationPanel to improve
updated the line separator retrieval method from ` System . lineSeparator ( ) ` to ` System . getProperty ( ` line . separator ` ) ` to
added getter and setter methods for creator and subject in POIXMLProperties . java and created corresponding test cases in TestPOIXMLProperties .
modified the doStop ( ) method call in HandlerWrapper . java to ensure proper execution of the superclass ' s doStop method
[ java ] check for empty cnc file in aeron .
renamed ` NonMarkedFoo ` to ` Command ` and updated related classes to improve clarity and consistency in naming conventions
added methods to check for JMod files and de - class names in ClassFileSourceImpl . java to improve handling of JMod files and ensure
changed ` PostEnterCanonicalizer ` to ` @ Nullable ` and modified return statements in ` TreeBackedElement ` , ` TreeBacked
initialize tokenRequest with PublicTokenRequest and set requestParameters in Saml2TokenGranterTest and UserTokenGranterTest to
fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
added sync method calls to ZKAssign and ZooKeeperWatcher classes to ensure data consistency and integrity during ZooKeeper operations
fix glutil . getcurrentcontext ( ) to return ` ` no current gl context ' '
[ drools - 7 ] fix npe when remove ruleflowgroup
added a return statement to the HystrixDashboardConfiguration class to ensure the method exits early under specific conditions
removed exception handling for ` PipeNotExistException ` in ` DropPipeProcedure ` and added a failure assertion in ` IoTDBPipeIT ` to
refactor clientqueuedisruptiontest to use junit ' s @ after annotation instead of @ before
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated import statements in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointNumericTermsEnum classes to
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to provide a mock implementation for testing
updated conditions in GuiIngameForge . java and UniversalBucket . java to use isEmpty ( ) instead of null checks to improve code
updated variable names from " path " to " timeseries " in TSParser . java and updated corresponding test cases in SQLParserTest . java to
added a check to return 0 if the v is less than EPSILON in TubeCalc . java to ensure that negative values do not result
replaced calls to ` getBucket ( gcsUri ) . create ` and ` getBucket ( gcsUri ) . get ` with ` _ storage .
removed redundant block closing of the transport in the finally block to ensure proper resource management and prevent potential memory leaks
added methods to create and recreate history views in the DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance the functionality for
updated the parameter in the checkEngine method from 2 to 3 in CarrotClusteringEngineTest . java to adjust the test to reflect the
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test due to it needs to be rewritten
added a new class ` ParserStateObjectInputStream ` and updated ` ParserCacheCommand ` to utilize it to improve error handling by restricting
added null checks and retrieval for objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure proper handling of object quoting strategy
replaced ` parse ` method with ` fromXmlStream ` method in ` SliderAppsViewControllerImpl . java ` to improve file parsing
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed in the project
added a method to quote path strings in the endorsed argument to ensure proper handling of path separators in the endorsed argument
added scrim animation functionality to manage background transitions in the launcher to enhance user experience by providing smoother transitions during action screen off transitions
updated parsing logic in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to improve accuracy of type inference and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added handling for UNC and ABSOLUTE path prefixes in WindowsPathParser . java and updated path operations in PathOps . java to improve path
replaced InetSocketAddress instantiation with a direct instantiation of MulticastSocket to simplify code and improve readability by eliminating unnecessary parameters
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
changed return statement to clone nBits before returning it to ensure that the original nBits array is not modified externally
changed the access modifier of the deriveCollectorName method from private to protected and added a new test for custom collector names in TestProfilerCollector to
refactor type hint handling in MappingMongoConverter to use a dedicated method to improve code readability and maintainability by encapsulating type hint logic
added performance measurement for creating proxy factories in ProxyMaker . java to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings and improve code clarity
added exception handling for ConnectException and PortUnreachableException in TCPConnection . java to improve error reporting and provide more context for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to use the workspace instance to improve widget management consistency across different workspace implementations
added a new file ` DeleteInsideFileDialogTest . java ` that demonstrates the use of the right - click popup menu to
* lwjglabstractdisplay : do n ' t flush the buffer if auto flush be enable .
add image to instructorstudentlistpageuitest . testshowphoto ( ) to show the photo of a student
added environment variable handling for ignored tests in TestIgnorance . java to improve flexibility in ignoring tests based on environment variables
removed the ' pointer ' parameter from the ' fling ' method signature in ScrollPane . java to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository and created a corresponding test in QueryDslJpaRepositoryTests to ensure
added computeMemorySize method to MemoryManager to handle memory size calculations based on fractions to improve memory management functionality by allowing fractions for
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test timeouts .
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
updated the handling of the ` previousIndex ` variable in ` StreamingAggTemplate . java ` to ensure proper initialization of the ` InternalBatch `
throw a graalerror if a null check be require for a plugin receiver .
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` to enhance performance by utilizing
updated logging messages and error handling in MediaMonitor . java to clarify file movement status and add a retry mechanism to improve error handling and
refactor InjectorProxy , ReflectionUtil , StandardInjectorProxy , and related classes to use public access methods instead of private access to enhance accessibility
[ hotfix ] [ streaming ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for handling unsupported SQL statements in ShowCreateTable , UnsupportedStatementTest , and CreateTableTest to ensure correct parsing and deparsing
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of
updated the list of names in the CruiseControl test to include Quality Distribution and Inc . to improve clarity and accuracy of test
updated WebSocket connection handling and improved connection state management in DeconzBridgeHandler and WebSocketConnection classes to enhance connection reliability and clarity
replaced ` setAttribute ` calls with ` removeAttribute ` calls in ` AbstractProcessingFilter . java ` to improve session management by eliminating unnecessary
hbase - 25850 addendum fix testregionreplicastoreplicareplicationendpoint # testreplicastorexception (
added PMS initialization and configuration to FormatRecognitionTest . java to ensure proper initialization and configuration of the PMS component
do n ' t create ova data disk template if ova template be create .
replaced SpringRunner with JUnit4 for unit testing in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit4
added multiple @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated SQL statements and variable names in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability by using
added a check to ensure the number of deleted documents matches the segment document count in SegmentReader . java to prevent corruption by throwing an exception
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 548 . add logtrace
updated the FilamentFactory to use a shorter length of 0.9 instead of a hardcoded value to ensure the FilamentFactory
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatform
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` in ` CsrfFilterTests . java
replaced static class ` Fields ` with instance variable ` field ` in ` HotSpotObjectConstantImpl . java ` to improve code read
updated method names from ` add ` to ` addFrequency ` in multiple spell - check classes to improve clarity and consistency in spell - check
[ beam - 8470 ] fix fileio . withwatermark ( ) to set watermark
hhh - 14850 - allow ctedefinition to be non - final .
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality in query compilation tests
updated library command to include root directory to improve output clarity by including the project ' s root directory
updated the slider value from - 180 to - Math . PI in RailButtonConfig . java to ensure accurate representation of the angle in the
corrected the vertical position of the encloser and modified the saving process in Saves . java to improve visual alignment and enhance error handling
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for expression language in Kerberos configuration
removed null checks for remoteMountPointComponent before setting the translation and rotation angle to simplify code and improve readability by eliminating unnecessary checks
updated setupViews and related classes to include ScrimView as a parameter to enhance functionality by allowing smoother transitions by integrating scr
[ flink - 20613 ] [ state - backend ] add option to enable periodic materialization for state changelog
added a ` value ` field with getter and setter methods in ` ProtocolParameter ` , and updated ` ParamTagHandler ` to set it to
add a unit test for chunkingservlet with head url .
added a new boolean field ` isBumped ` and updated parsing logic in ` CheckRouterAnswer . java ` to handle bumped status
added Content - Type header with " application / x - www - form - urlencoded " in SwitchToPostInterceptor and SearchRequestUnitTest
refactor EmbeddedClientConnector class to improve code readability to enhance maintainability and facilitate future updates
added logging for ignoring setFetchSize ( " rows " ) in PhoenixResultSet . java to improve debugging by providing a warning when
added null initialization for AndroidNet in AndroidDaydream . java to ensure proper resource management and prevent potential null pointer exceptions
updated the formatting of the numRowsConsumed variable in LLRealtimeSegmentDataManager . java to improve code readability and maintain consistency in formatting
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 25850 remove prefixtreecodec from tablemapreduceutil ( # 2698 )
added a boolean flag ` inflationFailed ` and modified the ` root ` variable in ` XMLLayoutInflater ` to improve error handling and
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future feature additions
loweringtool : do not process lowerable node in the control flow graph .
updated the error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to clarify
added support for carriage return and carriage return in Makefiles . java and MakefilesTest . java to enhance parsing capabilities for new line
replaced direct calls to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` to improve
replaced the superclass ' s setTransformRefresh ( ) method with a call to setBoundRefresh ( ) to improve code clarity and ensure
[ gr - 14511 ] do not insert safepoints for c method .
added framebuffer size callback functionality to manage window size changes to ensure proper cleanup of resources when the window size changes
replaced ` translationX ` with ` centerTaskParallaxToRight ` and ` otherAdjacentTaskParallaxOffscreen `
updated LiteralNode to use NullLiteralNode instead of NodeLiteralNode for better handling of null values to improve clarity and functionality by distinguishing
added length adjustment logic in CompoundFileWriter , FSDirectory , and IndexOutput classes , and implemented the setLength method in FSDirectory and IndexOutput
updated manifest handling in AndroidNdkScriptGenerator and modified GdxTest instantiation in LwjglDebugStarter to improve compatibility with different
chore ( aws - s3 ) : fix deprecation warning ( # 8597
added permission handling for " * " role in RuleBasedAuthorizationPlugin . java and updated test cases in TestRuleBasedAuthorizationPlugin . java to
updated ZookeeperClientServerRegisterRepository to improve URI registration handling and event type management to enhance code clarity and ensure proper handling of JSON data
renamed methods and variables from ` makeDeepMock ` to ` deepStub ` in ` ReturnsDeepStubs . java ` to improve cl
added a condition to return a Byte instance if the call value is empty to ensure that a non - empty string is returned when the call value
fix debug message in bibentry . date ( ) ( # 5338 )
updated PKCS12KeyStore and PBETest to use " PBEWithHmacSHA1AndAES _ 128 " and " PBEWithDE
tmi - tiff : fix end - of - file exception for invalid offset .
added validation for job parameters in CommandLineJobRunner and created a corresponding test in CommandLineJobRunnerTests to ensure that job parameters are valid and improve
update message content assertions from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
replaced synchronized methods with AtomicLongFieldUpdater for lastSequenceId to improve thread safety and performance in handling sequence IDs
added a new file Test . java with a static method ` sum ( ) ` to calculate the sum of elements in a loop to provide a
updated configuration from ` minSdk = Q ` to ` maxSdk = R ` and refactored access modifiers in ` WifiUsability
added a new file ` Solution . java ` that includes a solution for determining if a matrix meets a specified key to implement a solution that
patch by jbellis ; review by brandonwilliams for cassandra - 1186
refactor taskbar recreation logic into a boolean variable for clarity to improve readability and maintainability of the code
refactor SyncFutureCache class implementation to improve performance and maintainability of the code
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and adjusted the LO
[ java ] improved usessstringvalueof rule to handle literal literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the functionality
add ability to configure target max type shard size in hollowproducer
added new version strings " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated database location handling in TestSemanticAnalysis and DDLTask to improve clarity and functionality to ensure correct database location is displayed in test mode
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to clear the database change log table to ensure that changes are
added version handling and updated URL construction in RestClient , CallPath , and CallPathProviderTest classes to improve version management and ensure accurate path
updated exception messages in PhoenixDriver . java and added closed check in PhoenixDriver . java to improve clarity of
mow - 1343 fix typo , throw unsupportedoperationexception instead
added an ` @ After ` annotation to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT
do n ' t remove input when dev mode be enable .
added a check to return early if the string length is less than 2 in StringHelper . java and implemented a test for removing leading and ending quotes
refactor query type handling in JpaQueryCreator and ParameterMetadataProvider to improve readability and maintainability to enhance code clarity and ensure
do n ' t set push branch id if auth duration exceeds 25 second
added dispatching of P25Message in P25MessageFramer . java to ensure proper handling of message data during message processing
added null check for the handler before calling checkClosed ( ) in WebSocketImpl . java and created a new test in WebsocketTest . java
[ ds - 3952 ] fix typo in indexeventconsumer and discoveryit
updated widget padding resources in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to use internal padding values to ensure consistent
added methods to hide all apps in Taskbar UI controllers and updated the closeOverlay method in BaseActivityInterface to improve user experience by ensuring the
removed ` synchronized ` modifier from the ` launch ` method and replaced it with ` launcher . join ( ) ` in ` CrawlJob .
updated zoom calculation in JavaSEPort . java to correctly account for canvas positioning to ensure correct positioning of the component relative to the canvas
refactor notification handling in UploadService to use startForeground method instead of notificationManager to improve code clarity and ensure foreground is stopped when uploading
fixed bug 129635 - excessive public count test fail on jdk 1.5
hbase - 25850 testthrifthbaseservicehandler # testthrifthbaservicehandler # testthrifthbase
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance during debugging
added error handling for ` FileNotFoundException ` in ` ResourceUtils . java ` and changed log level from debug to trace in ` AbstractCipherExecutor .
added a new method ` getTickers ` to ` Bittrex ` and integrated it into ` BittrexMarketDataServiceRaw
refactor enumConstants retrieval in EntityEntry . java to improve type safety and encapsulate related methods to enhance code clarity and maintainability by
refactor registerSession method to accept an instance instead of a class to improve flexibility in handling different endpoint instances during session registration
added escape sequences to the char array in FileUtils . java to ensure proper handling of Unicode escape sequences for improved user experience
added support for setting and getting stylesheets in ResourceService and updated related methods to enhance resource management and improve stylesheet handling in the application
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
updated method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with pointer - based architecture
updated the database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockro
simplified the condition for name comparison in ObjectStreamClass . java to improve code readability and maintainability
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and add a new class SymbolNotFoundError . java to improve error handling by providing
added logic to handle cases where only pseudo fields are needed in BinaryResponseWriter . java to ensure correct document creation based on the presence of pseudo
added handling for PING and PING case in WebSocketImplBase and implemented a test for WebSocket pause functionality to ensure proper WebSocket behavior during ping
updated the NON _ IDENT _ ESCAPES regex pattern to include an additional character to ensure proper parsing of escaped identifiers in regular expressions
updated DnsResolverProvider and HostnameResolutionTest to accept a cache option for DNS resolution to enhance flexibility in DNS server selection by allowing configurable TTL
added conditional annotation to check for MessagingTracing class to ensure tracing functionality only occurs when the messaging tracing class is present
mondrian : fix mondrian - food - mart loader to use quoteidentifierstring for db2
updated import statements in multiple Java files to reflect the latest version of the Sora library to ensure compatibility with the latest version of the Sora
added a condition to set the status to VERIFY _ CLOSE _ TAG when the character is a closing tag to ensure proper handling of closing tags
removed the setVisibility ( GONE ) method from TouchCharInput . java to improve user interface responsiveness during touch input handling
added a null check for the current user before comparing the ID in Group . java to avoid potential NullPointerException when the current user is not available
refactor JSObjectLinker to improve index handling and member assignment logic to enhance code clarity and ensure proper assignment behavior for JSObject members
updated constructors and methods in DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use setSuffix instead of prepareTicketSuffix to
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should not be used in new code
added @ Deprecated annotations to multiple Java classes to mark these classes for future removal to indicate that these classes are obsolete and may be removed in future
deleted the JoglDebugAdaptor . java file and modified GuiceStartup . java to modify debug logging behavior to streamline the code by
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagationTest ` , and ` ExtraFieldPropagationTest ` classes
added PendingIntent to FileDownloader and FileUploader classes to ensure the notification ' s content intent reflects the current state of the notification
added a private method ` set ( ) ` to the ` nextOrd ` method in ` Lucene80DocValuesProducer ` to improve code
refactor DateTimeFormatter class to improve date formatting to enhance readability and maintainability of date handling logic
removed class loading check for " sun . awt . shell . Win32ShellFolderManager2 " in desktopProperties to simplify code and improve read
added null and empty checks for administrator credentials in setAdministratorCredentials method to ensure valid credentials are provided to avoid runtime exceptions
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and updated width calculation logic for tablet and two - panel
fix pgl . endrender ( ) to use sketchwindowcolor ( )
refactor hashing methods in Hashing . java to improve code readability and maintainability
updated the accept method to check if a file is part of a folder instead of a file name to ensure that only valid file names are accepted
updated the ` addToListIfNeeded ` method to include a string resource for user information and updated the icon content description to enhance user experience by providing
removed redundant null check for type in J . java to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY from 500 to 800 to allow for a longer delay before starting the activity
refactor SolrJettyTestBase to use a constant for the web application home path to improve code readability and maintainability by centralizing
removed redundant diameter assignment and initialized selectedMotorSet to null to simplify code and ensure proper state management for motor selection
added import for BufferUtil and clearing it in ByteBufferPool . java to ensure that the buffer is properly cleared before reuse
fix notification rule not work with rest api
updated LDAP configuration keys from " authorization " to " authentication " in Configuration . java to align with updated security standards for LDAP authentication
http : / / issues . apache . org / jira / browse / amq - 4748 - delete exchange and queue from durable
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to handle connection failures more gracefully to improve error handling and provide clearer feedback on connection issues
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and facilitate future updates
updated Quartz2Adapter . java file to enhance functionality and improve performance
added a try - catch block around the execute method to handle IllegalStateException to improve robustness by preventing application crashes due to illegal state exceptions
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
updated method signatures to use ` NameResolver . Args ` instead of ` Helper ` and modified ` DiscoveryClientNameResolver ` to utilize `
added conditional handling for non - empty annotations in JavacParser . java and created a new earlier method in TestAnnotatedAnonClass .
added a new package name " com . sun . naming . internal . " to CheckPackageAccess . java to ensure proper access control for internal
changed the ` strict ` variable from false to true in ` StaxEventItemReader . java ` to enable strict mode for better event processing
added an ` isExhausted ` flag and modified the ` readPartition ` method in ` OfflineSorter ` to improve handling of exhaust
refactor ActionResetingPool class to improve resource management to enhance performance and maintainability of the reset logic
added a check for if the light state is in the XY mode before returning the HSB type to ensure that the conversion only occurs when the
refactor folder creation radius calculations to use a target cell array to improve flexibility and maintainability of folder creation logic
updated loading dialog handling in FileOperationsHelper and removed redundant calls in FileDetailFragment and OCFileListFragment to improve user experience by ensuring loading
added null checks for ` uigestureFile ` and ` xmlLogs ` before loading to avoid potential NullPointerExceptions when ` uigestureFile
updated FieldNamingPolicyTest to use Locale . getDefault ( ) instead of toUpperCase ( ) for name matching to ensure consistent behavior across different locales
added a call to set the listeners in the result object to ensure the result has the correct listeners available for processing
added a new method ` loadWithNewGlobal ` to ` Global ` and ` Context ` classes to facilitate loading a new global
added methods to convert StarTreeIndexSpec from JSON strings to strings and updated tests accordingly to improve JSON handling and ensure correctness of configuration
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer and OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and Server
replaced backslashes with backslashes in file handle operations to ensure consistent handling of backslashes across different operating systems
[ kie - issues # 241 ] fix in operator to handle null value ( # 244 )
added import for FieldCache and purged it in TestDistributedSearch . java to avoid FC insanity issues during distributed search operations
act - 1058 add test for boundary message event on subprocess and inside subprocess multi - instance
updated method parameters in ` resolveInterfaceOrVirtualCall ` and ` PointerAnalysisImpl ` to use ` target ` instead of ` method ` to
fix for http : / / issues . apache . org / jira / browse / amq - 4649 - add support for bucket
added constants for NETSCAPE _ SLOT _ ID , PRIVATE _ KEY _ SLOT _ ID , and FIPS _ S
added Alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance widget addition
[ hotfix ] [ test ] ignore unalignedcheckpointitcase until fix
added import statements for SoundMIDI and updated type checks in JDK13Services . java to ensure only relevant classes are processed to avoid potential
added a check to prevent duplicate entries in keywordToReference to ensure that only unique keywords are added to the reference map
[ java ] add size calculation for collection < processorexchangepair > in multicastprocessor .
remove unused constructor ( no longer need )
escape telegraf character ( fixes # 644 )
added udp port support to memberimpl and memberserialization to enable udp communication on the same address .
rename ` OperatorMulticast ` to ` OperationMulticast ` in ` Observable . java ` to improve clarity and consistency in naming
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message transmission to complete
added a try - finally block around the latch count down in VertxTestBase . java to ensure proper resource management and avoid potential memory leak
added an import statement for ListIterator and synchronized the destroy method in SessionFactoryServiceRegistryImpl to ensure proper cleanup of the cached event listener registry
danielwagnerhall : fix test failure on travis
[ api ] add test for tuple and map of tensor in ivalueutilstest ( # 1188 )
added a task stack listener in RecentsView . java and removed the onEnterAnimationComplete method from BaseActivity . java to ensure proper
pdfbox - 4892 : improve performance , a suggest by valerybokov
camel - 14263 : camel - cxf should initialize the factory bean if it do n ' t already exist
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added debug logging and adjusted play time calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime is calculated correctly based on
added a ` BailoutOnException ` option to handle exceptions during compilation to provide users with a clearer error message when exceptions are encountered
changed default values for signup and passwd from " / forgot _ password " to null in Links . java and updated assertions in IdentityZone
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations
renamed the ` onlyFormat ` variable to ` format ` and updated its usage throughout the ` TimeConverter ` class to improve clarity
added NoDataContainer property handling in GeoTiffReader and its corresponding test in GeoTiffReaderTest to ensure NoDataContainer is correctly
sulong : fix npe if function start node do n ' t have a source section
replaced ` out . toString ( ) ` with ` out . toByteArray ( ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecution
replaced client . blockUntilConnected ( ) with CountDownLatch in TestPathChildrenCache . java to avoid PathChildrenCache connected events
added null checks for array handling in ArrayTypeHandler . java to improve robustness by preventing potential NullPointerExceptions
replaced the regexp tunnel class with reflection - based prefix retrieval in JakartaRegexpCapabilities . java to improve performance and maintainability by
updated application selection logic to use Application class instead of null to ensure correct application type is used for configuration handling
[ drools - 7 ] do n ' t throw npe on mutable global rule
added validation for asset names , URLs , and descriptions in AssetIssueActuator . java to ensure only valid asset names , URLs , and descriptions
do n ' t copy paste textfield if it do n ' t already exist
updated status messages and descriptions in LGWebOSActions , LGWebOSHandler , and LGWebOSUpnpDiscoveryParticipant classes
replaced setSeedNodes ( ) with getActiveNodes ( ) and getTrustNodes ( ) in TronNetService . java to ensure
updated assertions in BaseTokenStreamTestCase to include additional context and added failure handling in AnalysisThread array to improve debugging capabilities and ensure thread safety
log4j2 - 1349 modify timebasetriggeringpolicy to use calendar . increment instead of calendar . add
refactor ` performItemClick ` and ` findItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added after method scope handling in GraphDecoder and PEGraphDecoder classes to improve method scope processing and facilitate debugging
refactor HttpSessionDestroyedEvent to improve session attribute handling and add unit tests for security contexts to enhance session management and ensure correct behavior of security contexts
added a test to verify that changing the service name in Zipkin to the manually provided service name to ensure that the service name is correctly set
added logging for excluded classes and improved spooling - to - jar behavior in JavaInMemoryFileManager and JavacToJar
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated related imports to improve clarity and consistency in
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for lock acquisition to complete successfully
added default cache capacity and improved method signatures in ConfluentSchemaRegistryDeserializerProvider to enhance flexibility by allowing cache and schema registry configurations
renamed ` remind ` to ` checkAtStartup ` and updated related checkbox properties in ` UpdateInfoDialog . java ` to improve cl
added multiple method definitions for key strength , weak , and soft values in NodeGenerator . java to enhance the NodeGenerator to support additional configuration options
hhh - 14529 fix transient property value bug in cascadingactions
added methods for retrieving and setting proto properties in ScriptObject . java to enhance object extensibility checks for improved type safety
updated the default read mode from " heap " to " mmap " and improved logging for segment loading success to enhance performance and provide better visibility
added import for ByteArrayTemplate and implemented a specific case for byte class in ArrayTemplateBuilder to enable proper handling of byte templates in the ArrayTemplate
added Hipchat support to SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enable the integration of H
replaced List with Set for commandRegistryUrls and updated resource retrieval logic to improve performance and ensure uniqueness of command registry URLs
updated warning messages to include the current context of the uncovered HTTP methods to improve log clarity by providing more context for uncovered
camel - 16400 : camel - sftp - allow to log in if it ' s n ' t already log in
camel - 16400 : camel - jms - do not create a transaction manager if the session do not have a transaction manager . thanks
server : fix checkstyle issue in vmwareresource . java
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replace OVERWRITE _ EXISTING with APPEND _ TO _ ZIP in DefaultDefectReporter . java to ensure the output stream is appended to
removed deprecated constants from UAX29URLEmailTokenizer and TestUAX29URLEmailTokenizer to clean up the code and encour
removed unnecessary Map < Object , Object > declarations from ScriptObject class to simplify code and improve readability by using a more descriptive variable name
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future feature additions
[ ds - 3952 ] do n ' t use eperson language if no language specify
updated JaversTransactionalDecorator to implement InitializingBean and modified the ensureSchema method to ensure schema is set after properties are set to improve
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null checks
added multiple setServer calls to handler0 and handler1 in ScopedHandlerTest . java to ensure correct server configurations for multiple handlers
fix calltimeoutexception when wait - notify be set to retry _ response
replaced ` StringUtils . isBlank ( ) ` with ` StringUtils . isEmpty ( ) ` for username and password checks to improve code readability and
change permission check from ` Objects . equals ( permissionNode , " " ) ` to ` equals ( " * " ) ` to ensure proper
rename ` encoding ` to ` sourceCharset ` and update setter methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` across multiple classes to allow for more flexibility
refactor simulation handling in GeneralOptimizationDialog to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
camel - 13850 : camel - jbang - allow to turn on context reload by default .
updated console configuration settings in CommonTestUtils . java to improve logging consistency and clarity
updated PrologSizeSanityCheck . java to improve performance to enhance efficiency of Prolog size checks
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for input stream content type in RequestBody and implemented a test for unsupported input streams to ensure proper handling of input streams and validate
added a condition to check if the embedded settings are enabled and improved debug logging conditions to enhance the robustness of the Neo4j
movementdebugcommands : restore default speed value from prefab
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted its logic accordingly to improve clarity and correctness
updated GsonParser and MetricsResourceTest to handle zero timestamp validation instead of invalid timestamps to ensure proper caching behavior and improve error handling for query metrics
updated the parameter names for sorting properties and directions in ApacheHttpClientMediaWikiApi . java to improve clarity and understanding of sorting parameters
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract ` and `
replace ReentrantLock with a direct instance of PipeTaskCoordinatorLock and introduce a new class PipeTaskCoordinatorLock to improve concurrency handling
modify DefaultSdkProvider to conditionally create DependencyJar based on the ` robolectric . usePreinstrumentedJars ` system property
danielwagnerhall : do n ' t swallow ` ` silent ' ' flag in execdriver
added validation for default and required dynamic fields in IndexSchema . java to ensure proper error handling for unsupported attributes on dynamic fields
removed the randomlyReadRepair check from the repair logic in StorageProxy . java to simplify the code for better readability and maintainability
replaced ImmutableSortedSet with Iterables for adding system include roots in PrebuiltCxxLibrary . java and added a test for includesDirs in
refactor AdaptableX509CertSelector and ForwardBuilder to handle subject key identifiers and serial numbers more effectively to improve flexibility in certificate selection
log4j2 - 1349 refactor nosqlappender to use abstractappender . parseint ( stringbuffersize , int )
added an @ Deprecated annotation to GuiScreenEvent . java to indicate that the method should no longer be used in version 1.16
added methods to add , remove , and add new categories in CategoryEditSearchRecyclerViewAdapter to improve category management functionality for better user experience
# 1343 - enh : add support for collection and natural key cache ( # 1344 )
propagate overridden mass and center of gravity properties to child components and reset the overridden values of the parent component to ensure child components inherit the correct properties and maintain a clean state in the parent component after the changes
[ netbeans - 4892 ] JavaCompilerService , JavaDiagnosticProvider , and JavaCompilerService . java should destroy the compiler on
refactor Task class to use a Supplier for lazy evaluation to improve code readability and reduce boilerplate
make wan replication executor thread - safe
added null checks for table location and session state in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to ensure robust
refactor code to use lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and reduce
added a new test class ` FilesTest ` and a method ` delete ` in ` Files ` to verify file deletion functionality to ensure robustness
removed exception handling for closing sockets in ServerSocketAdaptor and SocketAdaptor to simplify code by eliminating unnecessary exception translation
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList . clear ( ) with addWorkingDir ( f . toString ( ) ) for adding a working directory to improve cl
added null check for ' cn ' in ItemInfo . java and updated workspace insets in Workspace . java to ensure proper handling of null values and
changed the visibility of the String constant from public to private to restrict access to the String variable for better encapsulation
removed unnecessary URLs for CSV and JSON jar files in SimplePostTool . java to streamline code for better readability and maintainability
ggb - 2178 fix for max / min command with symbolic toggle
refactor client container startup logic in JavaxWebSocketClientContainerProvider and implement doStop method in JavaxWebSocketClientContainer to improve
updated conditional check for ` type ` in ` Linux . java ` to ensure proper handling of null values to avoid potential null pointer exceptions
make sure web application context be clean up after each test
added search string handling and updated resource navigation in RemoteBrowseHandler to enhance user experience by allowing dynamic search functionality based on query parameters
removed the visibility of the neutral button from the SetupEncryptionDialogFragment to improve user interface by hiding the button when not needed
refactor countitems ( ) method to support includearchived / includewithdrawn parameter
updated SQL statement syntax for creating views in DDLTask . java to ensure compatibility with SQL Server ' s syntax conventions
added logging functionality for OAuth2 exceptions in CheckTokenEndpoint . java to enhance error handling and improve debugging capabilities
updated multiple Java classes to implement the ` lookupSeriesPaint ( ) ` method in the ` AbstractRenderer ` class to enhance code clarity and
updated ` IdentityZoneEndpointsIntegrationTests ` and ` JdbcIdentityZoneProvisioningTests ` to use ` ParameterizedTypeReference < Void > ` instead of `
updated tooltip delay from 20000ms to 10000ms and added tooltip text for variable substitution in SQLConsole to improve user experience by providing more int
update actionproviderimpl to use junit 5 for run single test method
replaced HumanReadableException with RuntimeException for IOException in WorkerShellStep . java to improve error handling by providing more specific runtime exceptions
[ hotfix ] [ table - common ] add @ experimental annotation to datastreamutils and socketstreamiterator
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated index validation in List . java to ensure index does not exceed the bounds of the array to prevent index out - of - bounds errors
updated the assertion in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure compatibility with the new SQL parser ' s expression
added confirmation to the debugpaste command in the DebugPaste class to enhance user experience by enabling confirmation of the debug paste command
replaced calls to ` . get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clear
ggb - 2118 fix for focus issue in quill ggb
replaced ` Arg ` class with ` AbstractGoBinaryDescriptionArg ` and updated related imports and methods to utilize ` AbstractGoBinaryDescription
updated environment variable retrieval logic in Jooby . java to use a dynamic logback . xml resource to improve flexibility by allowing dynamic
updated SimpleRetryExceptionHandler to implement RetryListener instead of RetryListenerSupport to simplify retry listener implementation and improve code maintainability
use decimal instead of nan for counter ( # 498 )
updated the Contribution class to use final fields for email and author to ensure immutability of email and author variables to enhance immutability
replaced a for loop with a do - while loop in JUnitFormatter . java to improve code readability and ensure proper formatting of output
modified the initialization of the elements list to handle non - LinkedList instances to ensure proper handling of non - LinkedList instances to avoid potential ClassCastException when accessing
updated error messages in ` StaxEventItemReader ` to include the URL in exception messages to improve clarity of error messages for better debugging
make testmultireadtarget more robust by use a pointlight array instead of a single pointlight
added null check for currentProfile and updated client result assignment logic in DelegatedAuthenticationClientLogoutAction . java to improve robustness by handling cases
updated method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure the namespace declaration is
added BigInteger and DSAParameterSpec imports to KeyStoreManager . java to support additional cryptographic parameters for improved security
replaced calls to ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape .
fix bpmndeployer and bpmndeployertest for activiti - 5
updated property names from " resource . loader . class " to " resource . loaders . class " and " resource . loader . file . class
updated thread verification logic in CEntryPointSnippets and VMThreads classes to enhance thread management to ensure proper thread attachment verification and prevent unint
updated GenericUDFMapValues to handle null maps and added a new TestGenericUDFMapValues class to improve robustness by preventing
updated the test name from " interceptors " to " handlerInterceptors " to clarify the purpose of the test related to handler interceptors
added support for oil well generation rate and enable oil spouts in the BCEnergyConfig and OilGenerator classes to enhance flex
added a cleanup mechanism for the " . clean - me " directory in ImportContext . java and updated condition checks in JobQueue . java to
updated exception message to use a localized string instead of a hardcoded string to improve localization support and maintainability
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability by eliminating redundancy
added support for extended ZIP constants in ZipConstants . java and ZipEntry . java to enhance functionality and support for extended ZIP files in the application
refactor the ` newFileSystem ` method to improve file existence checks and error handling to enhance robustness by ensuring only regular files are created ,
updated the width calculation for conditionPanel in IfControllerPanel . java to improve layout alignment for better visual clarity
added an override statement to the createConnection method in FailoverUpdateURIsTest . java to ensure proper connection handling in the test environment
added Gson @ SerializedName annotations to ServiceOsSpecific . java to ensure proper serialization of fields for JSON processing
fix : add deletebook ( ) method to database adapter
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
fix a bug in abstractajpprocessor . processresponse ( ) that could lead to an out of bound exception .
smack - 129 , smack - 129 , smack - 129 , smack - 129 , smack - 12
refactored the handling of binary and text message consumers in WebSocketImplBase . java to improve clarity and maintainability of the code by
added configuration properties for device ID transformation method , enable ID table , and log file in IoTDBDescriptor . java to enhance configuration flexibility for
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test coverage and accom
updated the condition for mockTsp to check if getAccessError returns a non - null value to ensure that the test accurately verifies if the
replaced instances of ` scriptCode ` with ` witnessScript ` for clarity to improve code readability and maintainability by using a more
updated the expression in IndexSchema . java to include both " / schema / types / fieldType " and " / schema / types / fieldType "
updated the Completers class to include a null check for valueCompleter and added a new OptionCompleterTest class to enhance the functionality
chore ( s3 ) : fix typo in s3utils . listobjects
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger integer values for
do n ' t try to upload zip file if it do n ' t already exist
updated the visibility of the reply button from 5 to 1.0 in TweetFragment . java to improve the visual appearance of the reply
[ log4j2 - 1349 ] fix accesslogsupporttest failure on window
fix marycachetest failure on window
simplified the logic for handling subscribers in SettingImpl . java to improve code readability and efficiency by eliminating unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder . java and modified imports in AbstractSaml10ResponseView . java to improve error
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve logging consistency and enhance error handling
added a check for the existence of a static directory in the dev mode before processing assets to ensure that assets are handled correctly when the static directory
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend . db
corrected the constant name from " value - tag - index " to " value - index " to ensure consistency with naming conventions and improve
fix incorrect hint for dijkstrabi in mainactivity
fix ( besu ) : set default value for native secp256k1 and altbn128 to true
rename DuclsSandboxTest to SandboxTest to improve clarity and consistency in naming conventions
camel - 4646 : cameldestination should use exchange . setexception instead of log a warning
change the visibility of the method forwardPropagateTree from package - private to public to allow access to the method from other packages
updated SQL query to include additional parameters for time grouping in JDBCExample . java to improve flexibility in grouping results based on time intervals
provide a warning when interpolate $ { project . * } expression during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future feature additions
added zoom functionality to ShareActivity to handle back navigation to improve user experience by allowing users to zoom out from within the ShareActivity
added a condition to skip reading deprecated fields based on annotations in Json . java to improve handling of deprecated fields during JSON processing
added animation functionality for showing and hiding send layouts in LauncherFragment to improve user experience by providing visual feedback during sending operations
reformatted method calls in Utils . java for consistency to improve code readability and maintainability
added Progressable parameter to multiple methods in Utilities . java and related classes to enhance progress tracking during sequence file writing operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove the contribution from the panelByContribution list and update panel ordering and color updates to ensure the panel reflects the current contribution state and
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated URL suffix checks to improve clarity and consistency in
added a check to set dPath to the user ' s directory if it is empty to ensure dPath points to the current user ' s
defaultaudiosink : set default sample rate to 48000 if no value
log4j2 - 1349 mapfilter should use stringmap . contains ( ) instead of stringmap . getdata ( )
updated VerificationInOrderWithCallsTest . java file to improve test coverage for order verification functionality
updated the parameter name from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to accurately reflect the
rename COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to improve clarity and consistency in
add a test to verify that listener be connect at start
bugfix # 5355 - fix documentation for union and functio
refactor support for one - handed mode in RecentsAnimationDeviceState to use a boolean variable to improve code readability and maintainability
added onDetachedFromWindow method to cancel pending tasks when the view is detached to ensure proper resource management and prevent potential memory leaks
added dictionaryResource parameter to MorfologikAnalyzer and updated MorfologikFilter and MorfologikFilterFactory to
removed redundant count and thrown variable assignments in ResultSetTest . java to streamline exception handling logic by eliminating redundant count checks
updated the message format in GradleBuildService from " debug " to " " to improve clarity by removing unnecessary debug information
replaced AtomicReference < Boolean > with AtomicBoolean for preventedByLocking and added MVCC detection logic in ExceptionUtil to improve handling
refactor tooltip text application to use a separate method for clarity to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in the await statement from 5 seconds to 10 seconds to allow more time for the
disable deviantart login if username or password be not provide
refactor Google package key handling to use constants instead of string literals to improve code readability and maintainability by avoiding magic strings
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description handling in EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to enhance user experience by providing clearer email descriptions
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to ensure correct language code retrieval and improve error reporting for
refactor Liquibase . java to use a unified method for creating update visitors to improve code readability and maintainability by reducing
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added support for customizable text for no chart data available in the Chart class to enhance user experience by providing a clearer indication of chart
added synchronization to check for head writing in Http1xServerResponse , Http2ServerResponseImpl , and HttpTest classes to ensure thread safety
refactor the chunking logic in NettyResponse to use a separate chunkHandler method to improve code readability and maintainability by reducing
added a new header " : scheme " to the headers in Http2TestBase . java and updated test methods in TestHttp2Limits .
fixed - rlocalcachedmap . getallkeys ( ) and getallvalues ( ) return null if storemode = localcachemode
camel - 14263 : camel - jpa - do not initialize entitymanagerfactory / transactionmanager when start jpa component . thanks
corrected the spelling of " fallSpeed " to " jumpSpeed " in PhysicsCharacter . java to ensure accurate representation of jump
added a condition to check if reparsedFunction is null before proceeding with syntax extensions to ensure proper handling of cases where reparsedFunction is
updated logging variable names and improved order book handling in BitstampPusherService . java to enhance code readability and maintainability by standard
deprecated getOldUploadSegmentHttpURI and getOldUploadSegmentHttpsURI methods in FileUploadDownloadClient . java to encourage the use
updated the MongoDbTailTrackingManager to include a filter parameter to enhance filtering capabilities during database operations
camel - 14263 : camel - juel - add test case for juel predicate
added a range check for the alpha value in RecentsView . java to ensure alpha values remain within the valid range of 0 to 1
updated the formatting of the " Import - Package " attribute in ManifestReversion . java to ensure consistent formatting of version information in the output
updated DataSyncConfiguration . java for improved synchronization handling to enhance performance and reliability of data synchronization operations
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to ensure proper initialization of JavaSnippetRepository for snippet functionality
added a loop to iterate over timeBuckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are only updated
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
( chore ) camel - pg : use try - with - resources for prepared statement . thanks to benjamin graf
replaced ` java . util . Iterator ` with ` com . rometools . rome . rome . feed . synd `
added Content - Length header handling in TransferCompletionHandler and updated NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap to improve header processing
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the overridden constructor from EnhancedRuntimeException to streamline the code by eliminating unnecessary complexity
[ log4j2 - 1343 ] fix socketappendertest failure on window
( chore ) camel - event - admin : remove unused class
updated exception handling and method signatures in ByteArray . java to improve robustness and clarity of the comparison logic
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 : disable restlet test until camel - 6770 be fix
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method signature in ` HashTableTemplate . java ` to simplify
move modulepath test from com . hazelcast . tests to com . hazelcast . test . modulepath
added a method ` getSourceDirs ( ) ` to ` JavaLanguageServer ` and updated the ` getCompiler ( ) ` method to include source
updated menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve user
rename ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotDescendantOf ` and update related
fix an off - by - one error in the worldeditplayer . gety ( )
added PathNotExistException handling to multiple method signatures in InsertNode . java to improve error handling for missing measurement schemas during data insertion
updated the closing brace in JavaCompiler . java to correct a syntax error in the code
[ hotfix ] [ operator ] remove unused mailboxexecutor from operatorfactory
hbase - 25836 hbase - 25836 add test for settablestateinmeta ( ) and fixmeta ( )
updated method references and formatted output in GatewayMetricFilterTests . java to improve code readability and enhance output formatting for better clarity
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) instead of getTestClass ( ) to ensure correct class type is used for
[ drools - 7 ] use lasttimedata instead of remoteitems in kiewatcher
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to ensure proper layout by accounting for additional
[ hotfix ] [ core ] add a constant for parent _ first _ logging _ PATTERNS in coreoptions
updated lastScoredDoc assignment from ' doc ( ) ' to ' this . doc ( ) ' in BooleanScorer2 . java to
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
changed the return type of the close ( ) methods from Connection to void in multiple classes to simplify the interface and indicate that the close ( )
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
updated exception handling logic in SchemaValidatorTask . java to check if the exception is null instead of printing the stack trace to improve error handling cl
replaced ` UncheckedIOException ` with a more general ` IOException ` catch block to simplify error handling by using a more general ` IOException `
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
ruby flavor : use quantifier instead of string for emit snippet
changed logging level from warning to debug in DerbyDatabase . java and added null checks in BaseLiquibaseTask . java to improve
remove the usecaches property and remove it from the endpoint class .
refactor ` CasGeoLocationConfiguration ` to use ` CasConfigurationProperties ` instead of ` MaxmindProperties ` and streamline database reading
update test for instructorfeedbackresultspageuitest to use new view name
hive - 20613 : fix qualifier list optimization for raw scan ( jesus camacho rodriguez , review
removed public access modifier from several methods in ApprovalStore , ApprovalsControllerService , and ApprovalStore classes to enhance encaps
added a boolean flag to track whether the download has started and updated the notification manager to cancel the download progress notification to improve user experience by prevent
updated method names and logic in TaskbarDragLayerController and AbstractFloatingView classes to improve clarity and functionality to enhance code readability and
updated project version from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest release and
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
updated GsonBuilder . java for improved JSON parsing to enhance performance and maintainability of JSON handling
add a null check for centerGeo before adding it to circleCenters to avoid potential NullPointerExceptions when centerGeo is null
remove espresso . espresso . home option from graalvm .
doc : fix typo in javadoc ( # 2390 )
changed the visibility of the DeleteSessionAction class and related methods to enhance encapsulation and improve session management logic
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
updated JoinQParserPlugin , SolrIndexSearcher , and TestJoin classes to handle edge cases and improve code clarity to enhance robustness
added a file parameter to the triggerMediaScan method call to enhance media scanning functionality by associating it with a specific file instance
removed conditional printing of test results based on verbosity level to simplify test result printing logic for better readability and performance
added custom G - code settings to MainWindow to enhance user experience by allowing custom G - code settings
camel - 18131 : camel - additional - jaxb - map should use utf - 8 encode for outputstreamwriter
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and ignored specific exceptions in TestBadConfig . java to enhance test robustness by ensuring specific exceptions are
added a method to remove fragments and the action bar in GpsMainActivity to improve user experience by hiding the action bar when no fragments
fix tokenizeritest to use ( ) instead of ( )
replaced instances of ` Range . asByteRange ( ) ` with ` Range . Byte ( ) ` and updated related method calls to improve
updated gcodeFile path and enhanced object bounds logging in VisualizerCanvas , while modifying translation depth , along with expanded G - code matching in GcodeViewParse to improve debugging output and functionality by providing clearer information on bounds and accommodating various G - code commands
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
updated formatting in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a condition to close the exchange client if the query is completed and the output stage is null to ensure proper resource management and avoid potential null
fix IntegrityCheck and IntegrityCheckTest to ensure that file path be correct .
removed unused SolrClient variable from ChaosMonkey . java to streamline code by eliminating unnecessary dependencies
added null check for ` fas ` before accessing ` useDatabaseConfig ` to prevent potential NullPointerException when ` fas ` is null
reformatted the addition of subFolders in the NestedRepositoryTreePanel class to improve code readability and maintainability
changed constructor visibility of ` ExtensionTypeHeader ` from ` byte ` to ` int ` and added a validation check for ` type ` to ensure
pdfbox - 4892 : remove unnecessary try - catch block , a suggest by valerybokov
rename ` deleteOnShutdown ` to ` pushOnShutdown ` and update related getter and setter methods to improve clarity and consistency in the configuration
[ hotfix ] [ runtime ] propagate state machine error to trigger callback in reactivestatemachineexecutor
added a test for handling multiple Python executable paths in BuckConfigTest . java to ensure that the correct interpreter path is used when multiple Python
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user experience by allowing sign - in accounts
added a new configuration option ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN ` in ` HiveConf
updated error logging to include exception details for better clarity to improve error reporting by providing more context on email issues
move reflection class to util package to avoid conflict with reflection class
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding unit tests in ` Oid
removed the private Vector2 center field from Circle , Ellipse , Polygon , Polygon , and Rectangle classes to streamline the code by elimin
removed unnecessary conditional check for ` pcollection ` in ` RegisterAndProcessBundleOperation . java ` to simplify the condition for better readability and
refactor SslContextFactory to improve SSL configuration handling to enhance security and maintainability of SSL connections
( chore ) camel - config : remove maxexpectations ( ) from configurationproperties
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer error handling for access confirmation errors
added a new class ConsumerClassLoaderFilter to manage class loader context during service invocation to ensure proper context class loader is set for the application context
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method and updated related logic to
rename the method ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to improve clarity
refactor grid translation handling in TaskViewUtils , TaskViewSimulator , and RecentsView to improve code clarity and maintainability
refactor assertions in Assertions . java to improve code readability and maintainability
added null checks for ` currentDateTimeFunction ` across multiple database classes to ensure consistent behavior by returning ` currentDateTimeFunction ` when it ' s
added a method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling for anonymous
updated the ` call ` method to include a ` contentDescription ` parameter and updated the ` DigitalWellBeingToast ` to
[ hotfix ] [ table - common ] fix race condition in catalogtracker
refactor LineNumberTagAggregator and TestDominance classes for consistency to improve code maintainability and readability
return stateconverterutil . defaultconversion ( state , typeClass ) instead of null
added integration provider and additional properties for Hibernate integration in BidirectionalOneToOneNPlusOneTest . java to enhance compatibility with Hibernate
added functionality to remove extra empty screens in Launcher and updated startSearchPageIndex initialization in LauncherModel to improve user experience by
updated HashMap and HashSet initialization in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and prevent potential
updated string formatting in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to ensure proper handling of decimal values in
refactor wait logic in SendingAccountor . java to improve clarity and error handling to enhance code readability and ensure proper handling of
hbase - 25850 walprettyprinter : add option to seek to the file ( # 2536 )
updated the port initialization from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure that the transceiver
make simplereport sort event by start time before generate report
added a test for retrieving CSV lines with double quotes in CSVFileLoggerTest . java to ensure correct formatting of CSV lines with escaped quotes in
add coref . scorer / v8.01 / scorer . pl and coref . useconstituencytree to the
of - 2651 : do n ' t send iq message to remote server .
removed the @ JniImpl annotation from the VM . java file to eliminate unnecessary implementation details
updated fetcher2 to use protocol constants instead of hardcoded strings to improve code readability and maintainability by using defined constants instead of hard
added a condition to check if the video HDR format is " dolbyvision " before processing the SID to ensure that the S
updated package name from " other _ package " to " other _ package2 " in AstTests . java to clarify the purpose of
fix worldborder . update ( ) to handle percentage > 99 .
hbase - 25836 addendum fix npe in hmaster . getwalgroupsreplicationstatus ( )
ggb - 2276 remove the view from the login operation if the login fail
refactor instance configuration handling in RoutingTableTest to use a new method for generating multiple instance configurations to improve code readability and maintainability by
changed the class modifier of FieldAttributes from final to public to allow access to the FieldAttributes class from other packages
add a test to verify that an erroneous maven project contain a reference .
removed unnecessary null checks for proto properties in PropertyMap . java to simplify the code logic for better readability and maintainability
refactor ` getControllerId ` method to accept a ` configId ` parameter and streamline relay addition to improve code readability and maintainability
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition for generating refresh token prompts in OidcConsentApprovalViewResolver . java to simplify the consent approval validation logic for better read
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the extractor method with a NoopGetter in BaggagePropagation . java to improve code readability and maintainability by using a
refactor ConditionalOnEnabledResourceChain class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if the treeRoot is a Rocket instance and its child count is greater than zero to ensure that only non -
pdfbox - 4892 : use unfilteredstream instead of filteredstream , a suggest by valerybokov
updated log statements to use " CN1 " instead of " System . out . println " and modified session state handling in FacebookImpl . java
updated return statements in ShadowICU . java and added new test cases in ShadowICUTest . java to improve code clarity and ensure
removed KeyguardManager dependency and simplified condition checks in TouchInteractionService . java to streamline code and improve readability by eliminating unnecessary
cloudstack - 5339 : fix npe in default disk offering ( # 5338 )
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` to improve performance and responsiveness
refactor SigInt and SigIntTest classes to remove unnecessary try - catch blocks and simplify signal handling to improve code readability and maintainability
ggb - 2175 text controller : remove updatebyboundingboxresizing , use prepareboundingboxresizing instead
change return value from - 1 to 0 in Asset . java to ensure the method returns the correct value instead of an error
optimize computebenchmark to reduce memory usage
added onRefreshListener to UploadListFragment to notify the adapter when data changes to improve user experience by notifying the UI when data changes
refactor file handling in bibdatabasecontext to use java . io . path instead of file . tofile ( )
replaced instances of ` emitters . items [ i ] ` with ` emitters . get ( i ) ` for better encapsulation to
refactor service and engine retrieval logic in Tomcat . java for improved clarity and functionality to enhance the reliability of service and
added a period at the end of certain string literals in BuildRuleFactoryParams and BuildRuleFactoryParamsTest to ensure consistency in string
added a check to return early if the playback state is not PLAYING to prevent further processing when not in PLAYING state
replaced the retrieval of ServiceComponentDesiredStateEntityPK with a direct ID retrieval method to simplify the code by eliminating unnecessary dependency on
refactor Java2TypeScriptTranslator and add InnerClassFieldClash class to improve error handling and test for inner class field clashes to
added logging and follow - redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enable or disable logging based on configuration settings for Docker
added locking mechanism for display changes in XToolkit . java to ensure thread safety during display operations
hhh - 10183 - fix nationalizedscalarquerytest for sql server 2008
pdfbox - 4892 : close the input stream in a try - finally block to ensure that the zip header be close even if the
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
updated assertions in SingletonSortedSetDocValues and added a new TestSortedSetDocValues class to ensure correct handling of missing values and improve test
updated error messages in CGIHandler . java and added JavaVMCallbackHandler in JavaVM . java to improve clarity of error messages and
added additional characters " \ n \ 033 [ m " and " \ n \ 033 [ 0m " to the string validation to
change the return type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` and update related methods to use ` ImmutableSet `
added a check to return early if the mesh vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when no
refactor verification methods in IncorectBindingPuzzleFixedTest and add error handling for verification failures to improve clarity of verification failures and
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root
remove unused import to fix checkstyle violation
refactor JsonObject class to improve code structure to enhance maintainability and readability of the code
updated conditions for idle time handling in SelectChannelEndPoint . java and modified connection timeout logic in HttpConnection . java to ensure correct max idle time
fix farmlandblock . cansustainplant not be call on a plantable state . close # 3569
added support for multi - tenant tables and updated related queries in multiple classes to enhance functionality and improve database metadata retrieval for multi - tenant tables
updated SimpleDateFormat instantiation to include Locale . US and added a new test class for cookie expiration to ensure consistent date formatting across different locales and validate cookie
added null check before closing the database connection to prevent potential NullPointerException when closing the database connection
increased the poll timeout from 2 seconds to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for polling messages to complete
[ fix ] add trace phase to economyallocationstage if tracera be enable .
add save _ database keybinding to source tab ( # 8727 )
updated ObjectMapper initialization to use a system - dependent line separator to ensure consistent line endings across different operating systems
updated path handling in NativeEnvironmentRepository to change Windows paths to ensure consistent path formatting across different operating systems
refactored test classes to use the Application instance directly instead of a static resource to improve resource management and ensure consistent application state during tests
[ java ] remove record log validation from record module .
replaced GroupName with ErrorGroupName in ITSystemTest . java to replace GroupName with ErrorGroupName to improve error handling by using a more
fix flakiness in testfuzzoptimizations when run on travis
replaced the initialization of ` reverseImage ` with a local variable ` sharedPreferences ` to streamline code by eliminating unnecessary shared preferences
refactor code to use ` equals ` method instead of ` equals ` for string comparison to improve readability and reduce potential null pointer exceptions
msmmatchlinkservicetest : do not overwrite goldenresourceattributenresourceattributenresourceattributen
updated JUnit annotations and method visibility from public to package - private in AuthenticationSuccessListenerTests . java to align with the latest JUnit 5
replaced the usage of ` New . arrayList ( ) ` with ` ArrayList < > ( COUNT ) ` and refactored the code
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated triggerTime assignment to use LocalDateTime with default time zone to ensure consistent date formatting across different time zones
added method handle creation for abstract method errors in MethodHandleResolver . java to enhance method handle handling for method signatures with varargs support
camel - 16400 : fix invalid ognl expression in camel - catalog . thanks to franz for the patch .
removed an empty check for toExplore in AbstractParser . java to simplify the code by eliminating unnecessary complexity
camel - 14263 : camel - jclouds - copy input stream to avoid concurrentmodificationexception
camel - test - infra - camel - consul : remove @ ignore from camelconsultest
added a check for ACC _ STRICT access flag in the Check . java file and created a new CheckACC _ STRICTFlag
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` with constants for language source and header files to provide a centralized list of language - related
updated ThreadLocalDateFormat implementation to use a clone method instead of creating a new instance to simplify thread - local date formatting by eliminating unnecessary
8274237 : remove deprecate experimental test from vmdeprecatedoptions . java
added displayName to Pac4jBaseClientProperties and modified DelegatedClientIdentityProviderConfiguration to utilize this new property to enhance client customization
replaced runtime exceptions with a custom EarlyTerminationException across multiple operator classes to improve error handling by providing a more specific exception for early termination
removed unnecessary whitespace in targetFunction . apply ( messageStream ) to improve code readability and maintain consistency
improve handling of httpconnection . consumeresponse ( ) and httpconnection . getresponse ( ) .
fix npe in capability dispatcher when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by excluding unnecessary exceptions
marked SubmitOrderedCompletionService as deprecated to indicate that the service should no longer be used in favor of an alternative implementation
updated the length variable in HyphenationTree . java to correctly reflect the original length to ensure the original length reflects the original length after
added a delay of 200 milliseconds in the IQRegisterHandler to ensure proper timing before proceeding with operations
add image to resource so that it can be use by the plugin .
updated the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to correct a typo in the
added a flag ` providersChanged ` to track changes in configuration to ensure that configuration updates occur only when providers have changed
added a method to quote token strings in the SemanticAnalyzer class to ensure proper handling of quoted identifiers in the token rewriting process
pdfbox - 4892 : skip non - name entry , a suggest by valerybokov
updated type casting and variable assignments in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
modified boundary conditions for hit detection in Window . java to ensure proper positioning of the hit element within its parent hierarchy
added a null check for appManifest before setting the targetSdkVersion to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to streamline JSON deserialization and adjusting configuration metadata to improve code clarity and maintainability
added userName property to the Driver class and its associated methods in HiveSemanticAnalyzerHookContext and SQLOperation classes to allow customization
added setter methods for setTransformerFile , setTransformerURL , and getTransformer ( InputStream ) in XsltBuilder and updated XsltComponent to
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and related classes to enable the use of Hadoop shim functionalities in the
updated the enqueue method calls in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to simplify the code by elimin
fix npe in coyoteadapter . logaccess when context be null
updated logging behavior in ThroughputLogger to return early if startTime is zero and improved message formatting in ThroughputLoggerTest to enhance
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning for debug builds and added VMOptionWarning class for testing to ensure VM options are only
[ scb - 2261 ] remove unused meterstatisticsmanager . statisticsoperationmap . clear ( ) from defaultlogpublisher .
updated logging configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback configuration file
added @ NotNull annotation to multiple methods in CipherExecutor , CookieValueManager , and DefaultCasCookieValueManager classes to enforce non - null
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in multiple files to support Windows command
refactor container initialization in AbstractWaitStrategyTest and HttpWaitStrategyTest to use try - with - resources syntax to ensure proper resource management and
lucene - 6892 : fix test to work with jdk 1.6 .
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method ` generateShieldAddress ` to ` RpcApiService ` for generating a shield address to ensure that the shield address
changed the return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` in multiple terminal classes to standardize
updated regex patterns for presubmit and postsubmit in TestStabilityRule . java to improve accuracy in regex matching for stability rules
updated DefaultSolrHighlighter and HighlighterTest to handle multi - valued fields and improve fragment limits to ensure correct highlighting behavior for multi -
modified the ` tryToLogin ` method to accept credentials and username in the ` tryToLogin ` method to enhance functionality by allowing credentials to
updated imports and entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp classes to improve code clarity and ensure
( chore ) camel - jms : fix checkstyle violation
replace ` wrapCollection ( parameter ) ` with ` update ( statement , parameter ) ` in ` DefaultSqlSession . java ` to streamline
added logging for unknown currencies in BTCEAdapters . java to improve error handling and logging for unknown currencies
refactor subscription name handling in DurableConduitBridge . java to use a variable for candidate subscription name to improve code readability and
pdfbox - 4892 : adjust default value for averagechartolerance and spacingtolerance , a suggest by valerybokov
[ hotfix ] [ test ] add tenant support to hybrid cluster test
simplified the return statement to directly cast the response value to a Map < String , Object > to improve code readability and reduce unnecessary
added a condition to check if the attribute size is greater than or equal to 4096 to ensure that the attribute size is greater than or equal to
added methods to retrieve jdk name , jdk type , and language level from BuckConfig in IjProject and IjProjectWriter
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and
added test cases for resolving ACLs with user details in GrantedAuthorityEffectiveAclsResolverTests . java to ensure correct handling of user roles
fix method resolution in javaparser to use the solved java language object instead of the reflection model .
added a constant for the number of buttons and updated the return statement to limit the number of buttons to a maximum of 24 to ensure that the
updated import statement for Asserts . assertEquals from jdk . testlibrary . Asserts . assertEquals to com . oracle . testlibrary
added a new class ` MessagePackFactory ` and refactored ` MessagePacker ` to use it for creating different input types to improve
add a new biome tag ( ` ` is _ desert ' ' , ` ` is _ cave ' ' , ` ` is
renamed the method ` present ( deltaTime ) ` to ` draw ( deltaTime ) ` across multiple screen classes to improve method naming consistency
added conditional logic to set layout based on horizontal state and updated UIIDs accordingly to improve UI responsiveness and ensure correct element UIID assignment
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( matcher ) ` with ` matcher . matches ( ) `
updated the return statement in AndroidInput and AndroidLocklessInput to use hasMultitouch instead of AndroidMultiTouchHandler to simplify the code
[ java ] fix checkstyle issue and take a good approach to track the commit position counter in the service container .
added UserSite and UserSiteId classes to store and retrieve user information to facilitate the management and retrieval of user - specific information
improve error handling in httpconverterregistrar when the address be not a valid url
bug 10363 : do n ' t include storage _ allocated / storage _ stable capacity in listcapacity api response
replaced IOContext . close ( ) with fileLength ( ) in NRTCachingDirectory . java to improve resource management by using file length
updated the ` JavascriptCompiler ` class to use ` generateClass ` instead of ` beginCompile ` and ` endCompile ` methods to improve code
added synchronization to the ` store ` method in ` UISettings ` class to ensure thread safety during the saving process
added a conditional check for native text input and changed the access modifier of the fireDataChanged method from private to public to improve input handling and
added emulator error message to the retry logic in SpannerIO . java and updated test cases in SpannerIOWriteTest . java to
( chore ) camel - test - infra - compiler : use diamond operator
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure correct handling of short arrays
updated nonce claim handling in OIDCAuthenticationFilter to use getStringClaim method instead of getClaim method to improve type safety and clarity in logging
fix a bug in dcsinputset . isrelationfield ( ) when the field type be ` ` relation . ' '
added functionality to store and retrieve server slogan capability in the database to enhance user experience by providing clearer capability information
refactor conditional check for menu item state in DrawerActivity . java to improve code readability and maintainability
updated SolrRequestParserTest to use Assume . assumeNoException instead of failing to improve test reliability by avoiding exceptions during network connection checks
added a check to return early if there are no missing symbol events to optimize performance by avoiding unnecessary processing for missing symbols
added two new line characters " Data " and " Data 5 - 4 " to the StringHelperTest . java file to support additional data formats in
updated DataProviderHolder initialization and added warning log for empty data providers to improve error handling and provide feedback when the data provider returns an empty array
( chore ) camel - core : replace ` Collections . EMPTY _ SET ` with ` Collections . emptyList ( ) `
bug fix : selection style not apply when freeplane version be 1.9 . 8
updated method call from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to ensure consistency in
added AutoFtpActivity and FtpHelper classes to handle FTP send notifications to enable automated testing of FTP send operations in the application
refactor token type handling in BaseSemanticAnalyzer to use a local variable for clarity to improve code readability and maintainability by redu
added getter and setter methods for component state in ImageViewer , OnOffSwitch , and Component classes to enable better management and retrieval of component state
added a new class ` RemoteExecutionEnabled ` that implements custom field serialization and deserialization for ` RemoteExecutionConditional ` to enable and disable remote execution
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` imports in multiple files to ensure proper handling of character
added assertWorkingScoreFromScratch ( ) method to assertShadowVariablesAreNotStale ( ) method to ensure shadow variables are not stale
updated the value of SEMIJOIN _ CONVERSION from " enable . semijoin . conversion " to " optimize . semijoin . conversion "
added debug logging for non - byte [ ] , byte [ ] , and Serializable types in multiple decoder and encoder classes to improve traceability and
replaced file removal with directory removal in SynchronizeFolderOperation . java and updated related logic in FileDisplayActivity . java to improve directory management
added assertions to verify the presence and existence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly set
schemaregion : deprecate ischemaregion . constructschemablacklist ( ) and testdeletetimeseries ( ) in favor of ischemaregion
added null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided to avoid runtime exceptions
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
fix serialization issue relate to j . identifier and j . modifier backwards - compatibilty constructor
added SQLFeatureNotSupportedException check for view type in MetaDataClient . java to indicate that creating an index on a view is not supported and will be
added a new ` Website ` class and corresponding test cases in ` PopulatorImplTest ` to facilitate the population of website
added a setup method to set the default locale in BSFormatterTest to ensure consistent test results across different locales
add log for badly download jar file in coremodmanager
updated assertion in MultiPartParsingTest to use Matchers for better case - insensitive comparison to improve readability and maintainability of the test code
added a check for single parameter in SimpleExprGenerator . java and updated the handling of variable expressions to ensure proper handling of single - parameter parameters
added a volatile boolean flag ` createdVertx ` and modified the conditional check for ` vertx ` to ensure ` vertx ` is only
updated method calls to use userObject instead of null for attribute writing to improve code clarity and maintainability by using a more descriptive variable
updated log message from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a boolean field to indicate if the unread flag is ignored in the request to ensure all entries are returned regardless of their read status for better
replaced MavenTestingUtils with MavenPaths for resource resolution in TestAnnotationConfiguration and WebAppContextTest to improve code clarity and maintainability by
added validation logic for URI and MetaData register data in RegisterServerConsumerExecutor and removed unused imports in URIRegisterExecutor and URIRegisterExecutorSubscriber to
updated the logic for determining playback state in GwtMusic . java to ensure playback state is correctly determined based on sound availability
added a new permission constant ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` MainCommand ` and ` Captions ` classes
replaced ImmutableMap with HashMap and modified query options handling in ServerRequestPlanVisitor . java to improve code readability and maintainability by encapsulating
updated condition checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to use
refactor attribute retrieval to use a variable for pure emoji and text to improve readability and maintainability of the test code
replaced the NMTWaitForDataMerge method with a new NMTOverflowHashBucket method and modified the NMTMallocWith
[ flink - 20613 ] [ serializer ] introduce javaeitherserializersnapshot for backward compatibility
updated AddressResolver and AddressResolverOptions to use constants from AddressResolver to improve clarity and maintainability by using defined constants instead of hardcoded
fix npe when call super . __ associate ( ) in rocker
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML resource paths from " liquibase / parser / core " to " www . liquibase . org / xml /
truffle - api : move commonmimetypelocator to test directory
changed the repository version state from INIT to NOT _ REQUIRED across multiple classes to indicate that the state is not required for service operations
updated the CompareControl instantiation in GenerateChangeLogTask . java to include schema comparison to enhance the comparison process by incorporating additional schema
updated import statement for TestBackwardAnoamlyFunctionUtils from org . junit . Test to org . testng . annotations . Test
added a new file ` ProgressiveJPEGTest . java ` to test the rendering and disposal of JPEG files to facilitate the
updated MaterialLoader to set the alpha discard threshold and reset related variables to improve clarity and ensure proper handling of material data
skip native - image build on window that only support 32 - bit architecture .
added a null and empty check for the text before setting the size to avoid potential NullPointerExceptions when the text is null or empty
update readVarInt ( ) method to use a divisible value of 1 _ 000 _ 000 to ensure correct handling of varint values in
added a private constructor to the PushUtils class to enforce singleton pattern to prevent instantiation
simplified the calculation of the length in RocketPanel . java to improve code readability and efficiency by directly using the current length configuration
removed unnecessary type casting for MockDirectoryWrapper to simplify code and improve readability
updated the file pattern in the load method call from " . * CSV " to " ( ? i ) . * CSV " to ensure correct
added conditional checks for duration and app status in multiple classes to ensure accessibility announcements are only made when the application is in accessibility mode
replaced the use of ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) `
pmd : add a test to verify that only one jdk1.3 and 1.5 be target
replaced PowerMockito with MockitoJUnitRunner and modified test setup in QuotaResponseBuilderImplTest to improve test readability and
added methods to set standard output and error streams in TestSchemaToolCatalogOps . java to ensure proper handling of system output and error streams
added DFSClient parameter to FanOutOneBlockAsyncDFSOutputSaslHelper and updated SaslNegotiationHandler to include a
updated MongoQueryMethod and MongoRepositoryFactoryBean to use RepositoryMetadata instead of Class < ? > to enhance query method flexibility by allowing metadata
refactor Digester to use EntityResolver2Wrapper for better handling of property source properties to improve compatibility and maintainability of the code
removed redundant import statements from MetaDataEndpointImpl . java to streamline code and improve readability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added retry logic in TxnHandler . java to improve transaction
updated XAxis variable names and adjusted line width calculations in BarChartActivity , LineChartActivity1 , and YAxisRenderer to improve code read
added methods to check printable characters in FsUtils . java to ensure only valid Unicode characters are processed to enhance compatibility and prevent errors related to printing
renamed ` Selenide . in ` to ` using ` in ` and ` SelenideRunner . using ` in ` and `
added processPluginConfiguration property and updated exception handling in DefaultMaven . java , DefaultProjectBuilder . java , and DefaultLifecycleExecutor . java
updated return values in ProxyConnectionManager and ServerTrafficCounter to use ` d ` instead of ` milliseconds ` to ensure precision in byte transfer calculations
updated the RESOURCES string to conditionally use the existence of " google - cloud - vision " or " src / test " to ensure
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and added remoteHost retrieval in AuthenticatedUser to improve connection handling and provide
add admin _ button attribute to communitylistservlet if user be admin
added a counter for long and short compaction threads in CompactSplit . java to improve thread identification for compaction processes
updated package name retrieval to use resources instead of application context to improve resource management and maintainability by using resources directly
updated the method to retrieve players in the plot using a dedicated method to improve code readability and maintainability by encapsulating player visibility logic
refactor multiple Java files related to AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
updated test cases in MlibOpsTest . java to improve test coverage and ensure reliability of the MlibOps functionality
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant named OPERATING _ SYSTEM _ IMP
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test method in SchemeGenerator
removed unnecessary null checks for key and initialization vector in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary checks
added @ Stability annotation for Local and PLATFORM _ POSTSUBMIT flavors in WorkProfileTest . java to track the stability
added a check to skip processing if bucketing version is not set to optimize performance by avoiding unnecessary processing for non - bucketing tables
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
refactor ` LockFreeBucket ` to extend abstract classes and add ` LockFreeBucket _ finalFields _ CacheLinePadding ` and ` Lock
print thread pool pending task statistic instead of ring command . patch by jbellis ; review by brandonwilliams for cassandra -
updated max bitrate setting to use user preferences instead of direct calls to ` Utils . getMaxBitrate ( ) ` to ensure bitrate settings
refactor ZipkinHttpSpanExtractor to introduce new methods for handling trace and span IDs to improve code readability and maintainability while ensuring
move getuserpaymentaccounts ( ) method to abstract to allow subclassing
fix right - aligned flag for dart - server suggestion ( # 3038 )
added a call to set the project in the LauncherUtils class to ensure the file system uses the correct project configuration
updated JsBundle and JsLibraryBuilder to include ProjectFilesystem parameter for better filesystem handling to enhance flexibility in specifying the filesystem root used for build
updated multiple Java files related to Envelope , Databinding , DatabindingFactory , DatabindingFactory , JavaCallInfo
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future updates
refactor VersionBuckConfig to remove the VersionConfig interface and update its implementation to optimize memory usage and improve code readability
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException during
changed the access modifier of the validateTypes method from static to public to allow external access to the validateTypes method for type validation
fix : update gapic - generator - java with mock service generation fix ( # 1 )
added SLF4J logging for the SimulationStatus class to enhance logging capabilities for better debugging and monitoring
updated VERSION _ POSITION _ Y from 138 to 150 and changed font size from 9 to 14 to reflect the new release version and ensure proper
updated notification addition to run on the Event Dispatch Thread to ensure that notifications are added on the Event Dispatch Thread for better responsiveness
updated the ` ReturnsElementsOf ` class to include a new test case to enhance test coverage and improve test coverage
[ hotfix ] [ table - common ] fix typo in error message
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the handling of line - file documents
added a method ` getVersionCode ( ) ` to ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNewActivity
camel - 7999 : fix ambiguity in ambiguous bean request body . thanks to benjamin graham for the patch
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added buffer ownership checks to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper disposal of buffers only when the buffer is
added a new transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing users to
refactor JerseyClientConfiguration to improve code organization to enhance maintainability and readability of the code
int - 1349 rename charstreamreadingmessagelistener and charstreamwritingmessagelistener to org . springframework
updated print statements to use ` o ` instead of ` s ` and changed return types from ` singletonList ` to ` List . of ` to
added logic to adjust column and row indices in StringDict and Table classes to ensure proper handling of empty arrays in the StringDict and Table classes
deprecated deprecated methods and implemented AutoCloseable in GenericContainer to enhance resource management and allow customization of container command creation
changed logging level from info to error in MediaInfo . java and updated test methods in RendererConfigurationTest . java to improve error handling and ensure
added support for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection configuration flexibility
fix npe in unwrapsslsessionimpl when id be null
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve code readability and maintainability
refactor Base64 class implementation to improve code readability and maintainability
sulong : add fallback method to llvmglobalcontainer to avoid npe .
danielwagnerhall : ignore a test that fail on iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
changed the parameter type of ` resName ` and ` resId ` from ` ResName ` to ` int ` in ` AttributeResource `
resolve tls file in dockercontextmetafile ( # 2368 )
( chore ) camel - elasticsearch : migrate to junit 4 . x
refactor type variable handling in ` mmm Attr . java ` and add a new class ` T6450290 . java ` with
added support for configurable logging levels in LoggingFlags and LoggingOptions to enhance flexibility in configuring logging behavior
added logging statements to various classes for better tracking of package removal and uninstalling processes to improve traceability and debugging capabilities during package management operations
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added new methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` for processing operations with BiConsumer and BiFunction to
updated the calculation of numPredictiveAppCols based on device type to ensure correct app column selection for phone devices
updated StringUtils to use UTF - 8 encoding for content to ensure proper handling of character encoding in string processing
added new files RequestMatchers . java and RequestMatchersTests . java to implement request matcher functionality to enhance the security framework ' s ability to handle
make sure input box do n ' t go into applet
updated calculations for positioning the knob dimensions in the ProgressBar class to ensure correct positioning by accounting for the background bottom height and width
[ native ] fix external function definition path in presto spark native query runner
added final fields to extra _ L0 , extra _ L3 , extra _ L4 , and extra _ L4 parameters in Br
added a condition to check if the state handler is invalidated before proceeding with gesture state checks to ensure proper handling of gestures that are
updated layout constraints for landscape and portrait orientations in CellLayout and Workspace classes to improve layout handling for landscape and portrait orient
added a condition to check if the redir ' s file matches " / robots . txt " in HttpRobotRulesParser . java to ensure
add warning icon to nb - javac library
updated subscription button names from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to improve clarity
added a null check for division by zero in UDFOPDivide . java and created a new test class TestUDFOPDiv
refactor code formatting and improve readability in AbstractJob , FlowJob , and StopAndRestartFailedJobParserTests to enhance code clarity
added a matcher for the " requiresAuthenticationRequestMatcher " bean definition in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to enhance the flex
unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource cleanup after activity destruction
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency with the updated
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to ensure proper configuration of RPC request timeout for improved reliability
updated logging level from error to debug and refactored resource degrade logic in TsFileResourceManager . java and ResourceManagerTest . java
added system properties to the MavenModuleLoader to ensure the model source is set for better configuration management
add metric for readiness check ok and bad ( # 10785 )
added model registration for the " animatedtorch " side in the BlockAnimatedTorch class to enable custom item handling for the " animated
added a null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a utility method to retrieve Hive configuration from a directory to streamline configuration management for testing purposes
added a new link to the Muting Users feature in the FeaturesActivity to enhance user engagement by providing direct access to muting users
added a property " jdk . reflect . useDirectMethodHandle " with a value of " false " to control the use of direct method
hbase - 25850 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 20613 ] [ yarn ] fix empty plugins / lib folder in yarnclusterdescriptor
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) for retrieving pronunciations to improve
updated JSON structure in JsonUtilsTest . java to remove unnecessary newline characters to streamline JSON output for improved readability and performance
added extra data for tweet IDs in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure correct identification of tweets
log a warning if underlying ring buffer data relate to reliable topic be lose .
improve error message when no class be find to analyze
replaced Key with PublicKey in KeyFetcher . java to utilize public key functionality in the KeyFetcher class
initialize isIncompatible variable to true in DLNAResource . java to ensure compatibility checks are properly handled
updated the parameter type of the createAccount method from Account to AccountCreateContract to ensure proper handling of account creation in the RpcApiService
pdfbox - 4913 : treat empty range like miss range to avoid arrayindexoutofboundsexception in shadingcontext . converttorgb ( )
http : / / issues . apache . org / activemq / browse / amq - 2698 - fix ack message listener to
enable off - heap format in StarTreeIndexSpec and update default star tree format version from " ON _ HEAP " to " OFF _
modify title handling to limit the length of the title to a maximum of 2048 characters to ensure the title does not exceed the maximum allowed length for
updated JColorChooser and BasicColorChooserUI to utilize the preview panel from ColorChooserComponentFactory to improve the handling of the preview panel
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during development
added a check for a reusable bitmap before retrieving it from the reusable set to avoid potential null pointer exceptions during bitmap loading
added layoutParams field and its getter method in FakeView . java to enable retrieval of layout parameters for better view management
added a check to prevent throwing an IllegalStateException when attempting to call an iterator on a closed cursor to ensure proper error handling and prevent operations on a
pdfbox - 4892 : avoid a classcastexception , a suggest by valerybokov
temporarily disable the jmsclienttest until it can be fix
added a timestamp field with getter and setter methods to the Message class to store and manage the timestamp associated with the message
refactored exception handling to use a new utility class to improve code organization and maintainability
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor from other packages
remove legacy parameter from isochrone resource ( # 1752 )
updated class visibility from public to package - private for several test classes to enhance encapsulation and restrict access to test classes
refactor CSRF handling by introducing a separate method for setting the CSRF token to improve code readability and maintainability by centralizing CSRF setting
fix lombok . launch . ShadowClassLoader to work in bootstrap mode .
jbrules - 2852 : add support for disable numeric cell in rule sheet .
changed log level from info to debug for default value logging in HiveConf . java to reduce log verbosity and improve performance during debugging
added null checks for axes and buttons in Lwjgl3Controller and implemented polled controllers in Lwjgl3ControllerManager to
updated import statements for ObjectFactory from cucumber . api to io . cucumber . core . backend in WeldFactory and W
refactor port forward saving logic to use a local variable for host database to improve code readability and reduce potential null pointer exceptions
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration ` , and updated
updated SyncedFolderObserver to check for a non - null file before scheduling the job to improve job stability and prevent potential null pointer exceptions
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future updates
simplified condition checks for trackpad gestures in StatusBarTouchController . java to improve code readability and maintainability by redu
refactor VectorReader and related classes to remove the ` VectorReaderImpl ` interface to simplify the code structure and improve readability
updated import statements to replace ` ArgumentMatchers ` with ` Matchers ` across multiple test files to ensure consistency in usage of Mockito ' s
updated method names and references from ` getRelativePathName ( ) ` to ` getRelativePath ( ) ` across multiple files to improve clarity and consistency in
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to enhance flexibility
added a null check for the extractor variable before instantiating it in ControllerMethodInvoker . java to ensure extractor is only instantiated if it is already
server : fix volume limit limit for unlimited storage
add potion shift event to inventory effect renderer . close # 1188
[ hotfix ] [ runtime ] remove cold _ reads _ to _ omit from size tiered compaction strategy
added a call to leech . stop ( ) in ClientTest . java to stop the leech process to ensure proper resource management and prevent
[ issue # 5330 ] fix metric not be report when retry be enable ( # 5331 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
rename ` EventLoopGroup ` to ` NettyDriver ` in ` MongoReactiveAutoConfiguration ` and ` MongoReactiveAutoConfigurationTests
added WebSocket upgrade request and response handling in UpgradeConnection and ClientConnectTest classes to enhance WebSocket connection management and ensure proper handling of upgrade requests
added timeout support and setter methods in AndroidImplementation . java to enhance connection management by allowing configurable timeout values
updated user and team access permissions methods in GitblitClient and RepositoriesPanel to improve permission handling to ensure only users and teams have the appropriate
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL queries with quoted cast expressions can be
updated assertions in Misc . java to check if the file is writable or executable based on the root directory to ensure correct validation of file permissions
added logging for executor groups and threads in FixedThreadExecutor . java and refactored executor selection logic in FixedThreadExecutor . java to improve
added null check for field before checking for " catalogname " to avoid potential NullPointerException when field is null
replaced instances of ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to align with the new Spring framework ' s initialization
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in DeflaterOutputStream to ensure proper resource cleanup and prevent potential memory leaks
added a new file ` gsp001 . java ` to test JVMTI GetSystemProperty functionality to ensure that the system property agent
refactor bean definition processor to use ` concreteClassMetadata ` instead of ` annotationUtils ` to improve code readability and maintainability by reducing
* add miss read / write methods for camcontrol , lightnode and camcontrol to jme3 export
refactor popup window handling in PopupNotificationPanel to use SwingUtilities for better clarity to improve code readability and maintainability by redu
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` for consistency to improve clarity and
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type from ` int ` to ` long ` in the ` after ` method from ` int ` to ` long ` to accom
added onBuild and executionDriver properties with getter and setter methods in ContainerConfig and Info classes to enhance configurability and provide access to these
updated icon setting logic to differentiate between right - to - left and left - to - right orientations in Toolbar and FlowLayout to
added a boolean field ` enablePositionIncrements ` to ` StopFilterFactory ` and modified the instantiation of ` StopFilter ` to allow configuration
replaced direct assignment of ` from
added a boolean variable ` mTryShareAgain ` and initialized it to ` false ` to control sharing behavior in the file activity
added functionality to retrieve the terminal name based on the Jansi native PTY version to ensure compatibility with different JVM versions and improve error handling
refactor bandwidth calculations to use a more descriptive variable name for clarity to improve code readability and maintainability by using a more d
replaced direct calls to ` then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
updated API endpoint URLs to use a constant for API endpoints to improve maintainability and reduce hardcoding of API URLs
updated sleep duration in KafkaIOIT and added startup attempts in KafkaContainer to improve responsiveness and increase startup attempts for Kafka integration
updated the matchers in SearchResultMatcher to use a more descriptive method name to improve code readability and maintainability by using a more descriptive
added SSL certificate trust management and SSL session factory in OkHttp . java to enhance security by ensuring only trusted SSL connections are used
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController for improved clarity and functionality to enhance user
added a new file HyperlinkFormula . java and modified StringPtg . java to use int field 1 _ length instead of byte to support
added nullability checks for workingDirectory in ShellStep . java to ensure that stdout and stderr values are set to null to avoid potential NullPointerExceptions
increased the timeout duration from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous operations to complete successfully
refactor escapeDatabaseObject methods to include object type parameters for better clarity to enhance the functionality of the escapeDatabaseObject method by providing more
added a boolean variable ` inputChanged ` to track input changes in ` MaterialRenameDialog . java ` to ensure the input field reflects the
added a test for state change in ShadowDisplay and implemented state change in ShadowDisplay to ensure correct behavior of ShadowDisplay when using postKitK
[ geos - 8470 ] add direct invocation service to allow concat operation to be invoke multiple time .
added support for key codes KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to enhance keyboard input handling for better user interaction
updated SQL query construction in PgDatabaseMetaData . java to handle PostgreSQL versions below 9.0 to ensure compatibility with PostgreSQL versions prior to 9.
http : / / issues . apache . org / activemq / browse / amq - 2698 - fix npe in queue
updated the method signature of ` getPathsFromResource ` to use ` URI ` instead of ` String ` for URI construction to improve clarity
added support for monitoring and aggregation applications in the CollectorServer class to ensure proper handling of monitoring and aggregation contexts for Jenkins applications
refactor HeadersBeanDefinitionParser to use a helper method for resolving attribute values to improve code readability and maintainability by centralizing attribute resolution
refactor error handling and logging in ProtobufLogReader . java to improve clarity and functionality to enhance error handling and provide clearer logging for
updated destroy method calls in DefaultApplicationDeployer and added shutdown logic in NacosRegistry to ensure proper resource cleanup and handle potential Nac
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status codes to improve code clarity and maintain
updated AuditEvent and AuditEventTests to improve JSON output formatting to enhance readability and maintainability of the code
modify the return statement in the Interpolation class to handle edge cases where the input is less than FLOAT _ ROUNDING _ ERROR to prevent potential
fix default folder path in forgeworldedit . java ( # 6640 )
refactor code to use a variable for the dx executable path to improve readability and maintainability of the code
added unit tests for ` PointRangeQuery ` type checks in ` TestPointQueries . java ` to ensure type safety and correctness of query
hbase - 11346 testhfilecleaner fail on hudson due to change in hbase - 11346
added a conditional check to display the file name if the download file name differs from the file name before updating the file label to ensure that the
do n ' t swallow exception in jedisclustercommand # execute ( )
[ hotfix ] [ table - common ] add chainingstrategy to rowtimeminibatchassgineroperator
updated the ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap
added new benchmark methods for HashMap and FastMap in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWrite
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B with
added a check for empty fields and refactored identifier completion logic in GroovyEngine . java to improve handling of empty fields and enhance code read
set drawable to false for geo angle to ensure that the number ' s drawable is not visible in the user interface
added new configuration options for server socket timeout and TCP keepalive in HiveServer to improve server connection reliability by allowing configurable timeout settings
renamed the method from ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction .
no effective change - remove unused import
refactor time formatting in RealtimeSegmentRelocator to use a lambda expression instead of a custom ThreadFactory to simplify code and improve read
vpc : do n ' t wait for vpc to be start if there be a failure to start .
updated window alpha calculation and shape reveal progress checks in WindowTransformSwipeHandler . java and FloatingIconView . java to ensure proper
update Spring Security schema error message from 3.2 to 4.0 to ensure compatibility with the latest Spring Security version
updated various Proto - related classes and removed redundant checks in ProtoSubjectTest . java to streamline code and improve readability by eliminating
added ' final ' modifier to several fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immut
added a new file TestConfigureUDF . java and modified ExprNodeGenericFuncEvaluator . java to use it to test the configuration of the
updated regex pattern matching in LogMessageWaitStrategy and added test cases in LogMessageWaitStrategyTest to improve matching accuracy and enhance test coverage for
replaced multiple logger calls with direct calls to ` logger . debug ( msg , throwable ) ` and ` logger . info ( msg , throwable
updated method names from " updatePurgedShardNodes " to " deletePurgedShards " and updated related SQL queries accordingly to improve clarity
added support for Java version 17 and 17 - preview in JavaLanguageModule to ensure compatibility with the latest Java features and improvements
added a constant for waiting for compression jobs and updated the handling of asynchronous compression jobs in TimeBasedRollingPolicy . java to improve job management and
do n ' t assert in volatilereadnode when there be only one usage of memory
added a method to retrieve steps and adjusted formatting for consistency to improve code readability and ensure immutability of the steps list
removed redundant ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl
refactor currency pair handling in BitstampAdapters . java to improve code readability and maintainability
updated measurement measurement to use baseTimeUnit ( ) instead of TimeUnit . NANOSECONDS in LongTaskTimer and added assertions in MeterRegistryCompatibility
[ euphoria - flink ] [ euphoria - euphoria - euphor
refactor value handling in HostEditorActivity to use CharSequence instead of String for better flexibility to improve compatibility with various preference types and enhance code
rename incompatibledatabasehandler to databaseversionhandler to avoid confusion .
added a constant MAX _ TWEETS _ IN _ CONVERSATION to the while condition in ExpansionViewHelper . java to limit
increase the refresh interval for the LDAP authorization map to allow more time for map operations to complete successfully
http : / / issues . apache . org / jira / browse / amq - 4898 - fix persisted byte size for deleted
fix possible npe in glowserver # getimplementationtitle ( )
refactor the grow method in DataIO . java to use a separate method for resizing the buffer to improve code readability and maintainability
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted filename from the ` part ` to provide access to the submitted file name
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure read actions are properly marked for loading
added ClassNotFoundException to the main method and modified the instrumentJar method to handle negative array size exceptions to improve error handling and provide clearer diagnostics when
added a new method ` checkForSpillPossibility ` to handle spill possibility checks in ` HashAggTemplate . java ` to ensure
updated codecDocStoreFiles to use a single variable for the data source name to improve code clarity and reduce redundancy in parameter handling
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure support for name ID formatting in SAML profiles
added error handling for password change aborted in ChangePasswordPage . java to improve user experience by providing feedback when password changes are aborted
removed redundant braces in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to the file was deemed unnecessary as its functionality is no longer required
[ rrd4j ] ensure that start ( ) > end ( ) do n ' t return current time when query rrd4j
added a check to return early if numVectors is negative to avoid unnecessary processing when there are no vectors to process
test : migrate executablereftest to junit 5 ( # 4534 )
added null checks for view and glassPane in JLayer . java and created a new test class bug6994419 . java to
camel - 7999 : added wiretap expression to route . thanks to benjamin graf for the patch .
changed the visibility of the ` setAction ` method from public to protected to restrict access to the method for better encapsulation
added a new option validator for the TOPN setting in PlannerSettings and its implementation in PushLimitToTopN to enable top - n
[ java ] remove unused property aerondirectoryname in test .
fixed - redissonconnection . setqueued ( false ) and redisqueuerequesthandler . pingconnection ( ) method do n ' t
refactor HiveConf to use a temporary URL instead of a byte array for configuration variable to improve resource management and avoid memory leaks
replace Device . defaultDevice ( ) with criteria . getDevice ( ) in the model creation process to ensure the model uses the correct device context for
updated the ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer . java ` to ensure proper menu infl
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : fix
added a condition to return SINGLE _ SPACE when there are no comments and whitespace is empty to ensure proper handling of whitespace when no comments are present
changed mClosed , mActualDictionary , and mNativeDict fields to be volatile across multiple classes to ensure thread - safe access to these fields
removed printStackTrace ( ) call from ContextHandler . java to improve error handling by avoiding stack trace printing
move customitemdroptest into integration test so it can be run by integration test
added partition existence check and handling in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to ensure partitions are only created if
updated input reading logic in NfsSecondaryStorageResource . java to improve efficiency and ensure proper reading of data in the input stream
[ java ] remove unused controlrequeststreamid from auction cluster node .
added support for spatial operator in the capability parser to enhance functionality by enabling spatial operations in the application
added LuceneTestCase . AwaitsFix annotation to BasicDistributedZkTest . java to mark the test as awaiting a
modified the condition for preface processing in Http11InputBuffer . java to improve clarity and functionality of preface parsing logic
[ java ] change the default value of the isIngressExclusive flag from true to false .
replaced hardcoded keys with an array of keys for HBASE cache properties to enhance flexibility in configuration management by allowing multiple cache keys
updated the record number handling in JSONRecordReader to use a dedicated method to improve clarity and maintainability of record tracking logic
added a filter to remove specific year items from mergedItems in CategorizationFragment . java to ensure only valid year items are processed in the
updated drawColor calls to use 0 instead of 0x00000000 in CacheableTextView , CellLayout , and HolographicOutlineHelper
added a check for OpenGL ES 2.0 availability in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering methods
ww - 4892 reset actioncontext to null in backgroundprocess
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database name in table names to enhance table name handling
added connection timeout configuration in TestConnections . java and changed the visibility of the count variable in StubConnection . java to improve connection stability and
added multiple test cases for ` approx _ percentile ` and ` clerk ` in ` TestHiveAggregationQueries . java ` to ensure
updated the default idle timeout value from zero to 30 seconds and refactored timeout handling in WebSocketChannel . java to improve clarity and consistency
updated the method to retrieve shares using the user ' s platform account instead of the local account to ensure compatibility with the current user ' s account
updated import statements and type safety in Inet6Address . java to enhance code clarity and prevent potential runtime exceptions
refactor PlaybackControlView to use a new method for enabling buttons to improve code readability and maintainability by reducing duplication
updated method parameters from ` Session ` to ` long sessionID ` in ` Session . java ` and ` Token . java ` to improve clarity
updated the method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary .
change default value for useexceptionprobability to ___ _
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve
guacamole - 103 : remove password encryption and permission check service from mysqluser . touserwithblobs ( ) .
added " centre " alias to the aliases in Middle . java to provide a more accurate representation of the middle position in the application
added DirectUpload dependency injection in CommonsApplicationComponent and changed DirectUpload class visibility from package - private to public to enable dependency injection for better
updated spacing for left and right axes in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to improve chart layout consistency and
added a list of HasJavaAbi . CLASS _ ABVOR and HasJavaAbi . SOURCE _ ABVOR to the flav
added operation event status handling in OnlineHubService and initialized services list in CompositeLogService to improve event status tracking and ensure services list is
added debug print statement and a check for annotation presence in MethodParameter to improve debugging capabilities and ensure visibility annotations are only added if not already present
( chore ) camel - jms : rename @ startbundle and @ finishbundle to @ setup
refactor classpath handling in SortedArrayStringMapTest to use a string builder to improve readability and maintainability of the code
updated path separator handling in PackageResourceLoader . java to ensure correct file path resolution for Android and non - Android resources
[ flink - 20613 ] [ table - common ] remove unnecessary ' this ' from DataSet # minby and ' maxby '
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to issue b / 243855320
added escapePercent method to stack trace formatting in ` ShouldHaveMessage ` and created a new test method ` should _ create _ error _ message
fixed - jcache . geturi ( ) throw npe if jcache . getcachemanager ( ) return null
reduce log level when exception be a activititaskalreadyclaimedexception
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
use getbasevalue ( ) instead of getvalue ( ) in entitypropertiespacket
update sonosaudioprocessor to use thinghandlerhelper . ishandlerinitialized ( ) instead of thingstatus . online ( #
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds in multiple test files to allow more time for the latch to
changed log level from info to debug for effect light type determination to provide more granular logging for troubleshooting issues related to
add db . db . maxactive to asyncjobmanager # returnitem ( item id ) to return it to the queue
updated exception messages in Reporter and related classes to include the object parameter to improve clarity and context of error messages for better debugging
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to ensure type
updated package - info . java and module - info . java files for consistency and clarity to ensure consistent formatting and improve code readability across
added a check for non - empty physical column names in OrcPageSourceFactory and created a new test for handling empty file cases to ensure
change to sound library to re - enable build the project
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and added new test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to
simplified the condition for checking presence of leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
[ wasm ] fix nullpointerexception in stringtemplate . ismatrixmatrixmultiplication ( )
simonstewart : add ' find ' and ' findall ' to the search criteria
defaultaudiosink : set default sample rate to 48000 if no value
added getter and setter methods for formula text in XSSFName . java and updated related classes to enhance formula handling functionality and improve code cl
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to adjust the target
updated condition in SimpleTypeGT to check for length 0 instead of length 1 and added a new test method in GMLParserTest to ensure
added a new test class ClassPathXmlJobRegistryContextTests for verifying job retrieval in the job registry to ensure that the job registry correctly
use long instead of float in motionpausedetector to avoid overflow
camel - 12320 - camel - restlet should not require a label , deprecate restlet endpoint
camel - 14263 : remove showout ( boolean ) method from logendpointbuilder
refactor ChromeTraceBuildListener to use a new method ` writeChromeTraceMetadataEvent ` to improve code readability and encapsulate metadata event
added a check to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to
added pixel offset calculations and validation for image layout in LCMSImageLayout . java to ensure correct handling of pixel sizes and prevent layout errors
fix ( ruby ) : convert timestamp to rubyutil . newrubytimestamp ( )
added a path check in ContextHandler and a corresponding test in WebAppContextTest to ensure that relative paths do not exist in the application context
updated the variable name from " TypeErrorThrower " to " TypeErrorThrower GETTER " in ScriptFunctionImpl . java to improve clarity
fix issue with text field scroll on macos
added a null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure that stage flags are only
test : migrate sniperprettyprinterjavaxtest to junit 5 ( # 4523 )
replaced direct instantiation of ` URLOutputStream ` with a try - with - resources statement in ` URLOutputStreamTest . java ` to ensure proper
added entity annotations to Mail . java to facilitate the creation and deletion of Mail entities in the database
updated default values for tablespace in Main . java and added a new parameter to enable or disable the tablespace option to allow users to include
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for external use
added a boolean flag to manage the reading of an empty JSON file in ScanBatch . java and a corresponding test case in TestJsonReader .
updated failure handling in StringSubject and added a test for string named equality in StringTest to improve clarity in failure messages when comparing strings with
added a regex pattern for matching library names in LibUtils . java to improve flexibility in identifying Cuda libraries during runtime
updated catch blocks in JrtJavaBasePackages . java and PackageHelper . java to catch a broader range of exceptions and errors to improve
hbase - 17413 add check for file system safemode in masterfilesystem ( chunhui )
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and exception message to improve debugging by providing more context
( chore ) camel - maven - plugin : remove unused code in defaultplugincache
do n ' t send contact status change event if the presence status change .
remove requestdetails . withresourceandparams ( string , requesttype , set < string > paramname ) , which be n ' t need
added a new file AccountInfoFetchIntegration . java to validate the fetching of account information from the BTCE exchange to ensure that the account
added mouse wheel functionality to VDUInput , vt320 , and TerminalView classes and updated mouseWheel method in VDUInput and Terminal
refactor library path handling in Natives . java to use a variable for clarity to improve code readability and maintainability by reducing
no effective change - remove deprecated @ columnhstore annotation
fix player _ skin _ flags not be set in the metadata index ( # 762 )
fix loadbalancerwithservicetests to use master url instead of requestfieldmatcher
do n ' t create a member if the caller do n ' t exist
replaced System . getProperty with AccessController for accessing system properties to enhance security by using AccessController for property access
added a configuration constant for the Freemarker file suffix and updated file suffix handling to allow dynamic configuration of the file suffix based on
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
add animation callback to make toolbar styling more responsive
replaced ` EasyBind . bindConditionally ( ) ` with ` EasyBind . when ( hasCaret ) . bind ( ) `
added ` CxxBuckConfig ` and ` declaredPlatforms ` fields to multiple classes to utilize ` CxxBuckConfig `
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple classes to enhance query parameter handling and improve code consistency
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer . java to avoid potential NullPointerExceptions when passwordAttribute is not set
added array default value handling for byte and string arrays in DataUtilities . java and implemented a test for it in DataUtilitiesTest . java to
modified SSL engine creation logic to handle null address cases to ensure correct host name verification when client authentication is required
hbase - 25850 testfstabledescriptors . testfstoredescriptor . testfstoredescriptor . testcachehits
danielwagnerhall : move cookie deletion from the ie driver to the ie driver
added a boolean flag ` mHasEndedLauncherTransition ` and modified controller recreation logic in ` AbsSwipeUpHandler . java ` to
added utf - 8 character encoding to the HEAD tag in HTMLListWriter . java and HTMLWriter . java to ensure proper rendering of HTML elements
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored the stats
modified the arrowButton addition in BasicComboBoxUI and added a new class bug6337518 to ensure proper functionality of the arrow button in
updated TestRandomAccessBuffer . java file to improve test coverage for random access buffer functionality
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added imports for HomeContentProvider and updated broadcast notification in multiple services to ensure consistent updates to the content URI across services
added functionality to handle background invalidation and state management in BubbleTextView and Launcher classes to improve user experience by allowing toggling of
added Throwable parameter to the getFallbackResponse method across multiple classes to enhance error handling capabilities in fallback policies
removed conditional check for ` env . _ compile _ only ` in ` DumpBytecode . java ` to simplify the condition for better readability
[ java ] fix npe in channeluri when tag be null .
updated JAVA _ REGEX _ SPECIALS to include a period in the regex pattern to allow for more flexibility in matching SQL patterns
added functionality to manage and restore the action bar title in FileActivity and FileDisplayActivity to ensure the action bar title reflects the current state
updated type conversion from ` Iterables . getOnlyElement ( convertedElements ) ` to ` Iterables . getLast ( convertedElements ) ` in ` Python
updated the Schedule annotation from " * " to " 0 " in CleaningService . java to ensure the schedule starts at the correct time zone
refactor TransactionalValidationListener to handle partitioned tables and improve table path retrieval to enhance data integrity checks and error handling for partitioned tables
added a comment about enabling polling in the ReplicationHandler and SnapPuller classes to improve code readability and provide clarity on the
changed the data type of generatedKey from int to long and modified SQL execution in ShadowSQLiteDatabase . java to improve handling of generated keys
simplified the return statement in SimpleReferenceCache . java to improve code readability and maintainability
updated output messages in TestInlineUnloaded , InliningBase , and ResolvedClassTest to use " failed to inline " instead of "
( chore ) camel - web - client : increase default keep - alive timeout
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed exception handling from Exception to Throwable in Dispatcher . java and refactored test cases in DispatcherTest . java to improve error handling robustness
camel - 7999 fixed the issue of defaultcxfbinding . getin ( ) . getattachments ( ) when dataformat = cxf
added support for the ' ~ ' command in the ClientUtils class to enhance functionality for user authentication
camel - slack : fix camel - slack to be compatible with java . time . duration
fire block harvesting event when drop a block . close # 1193
updated the layout parameters in TranscodingTab . java and modified the JCheckBox string concatenation in TranscodingTab . java to improve layout spacing and
added a new file ` bug8057791 . java ` implementing a GUI with a JList and a Nimbus Look and Fe
refactor flags _ field logic in LambdaToMethod . java and introduce LambdaInterfaceStaticField . java to improve clarity and functionality of
fix ( api ) : add support for add eth subscription
replace length ( ) > 0 with null check for ' to ' in ComposeActivity . java to prevent potential NullPointerException when ' to ' is
refactor ParquetFixedWidthDictionaryReaders to use a conditional read method for reading values based on dictionary usage to improve code clarity and maintain
refactor calculations for positioning and divider dimensions in PortraitPagedViewHandler . java to improve layout handling for landscape orientation and
added Log . java and LogInterceptor . java files with aspectj logging functionality to enhance logging capabilities for better traceability and debugging in the application
updated the formatting of the dump string in QueuedThreadPool . java to handle potential empty trace cases to improve readability of the dump output by
updated CacheGenerator and CacheProvider to include implementation handling to enhance flexibility in cache generation by allowing specification of implementations
updated the creation of the ReferenceMap to include total frame size to ensure that the reference map accurately reflects the actual frame size for better
refactor TypesafeConfigurator class to improve code readability to enhance maintainability and facilitate future updates
camel - 16400 : camel - karaf - add karaf test base on user forum issue
modified the main method to include multiple methods for handling BigDecimal values to provide functionality for testing BigDecimal values in the RFE2891944
replaced URLEncoder . encode with direct appending of keys and values in HttpClientIntroductionAdvice . java to simplify encoding process and
refactor unsupportedPlatformTool to a private class for better encapsulation to improve code readability and maintainability by using a more descriptive class
updated recovery loop count calculation to use int instead of double and adjusted recovery delay calculation to improve clarity and accuracy of recovery delay logging
added a size ( ) method to the FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the size of the map
[ drools - 6640 ] fix address manager test when index be empty ( # 358 )
updated column specifications and spacing in VLCVideo . java for improved layout consistency to ensure proper alignment of components in the user interface
updated URLs in multiple Java files to use " https : / / github . com / bisq / bisq " instead of " https :
updated the AUTHORITY constant from " com klinker . android . talon . provider " to " com klinker . android
updated user configuration directory structure and improved file handling in MBoot . java and MavenCli . java to enhance code clarity and ensure proper
added binding of the GL _ ARRAY _ BUFFER to the bufferHandle in VertexBufferObjectWithVAO . java to ensure proper binding of the
refactor ServerHttpSecurity class for improved security handling to enhance code maintainability and readability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and updated CasCoreHttpConfiguration to utilize it to improve HTTP header management and ensure proper configuration of HTTP headers
fix passwordviolatedexception when password be not valid .
deleted the NoOpConfigPathGetter . java file to the class is no longer needed for configuration path retrieval
replaced Codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve performance and reduce dependency on external libraries
updated float property handling and inline block positioning in FloatUtil . java to ensure proper handling of float values and improve inline block positioning
jbrules - 2852 : add import statement for planning entity , fact , and solution class
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` in ` RestUtils ` and ` WebsocketUtils ` to improve header
replaced ` String ` encoding with ` Charset ` in multiple classes to standardize character encoding handling across the codebase
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced Long . valueOf ( ) with Long . compare ( ) for comparison to improve performance and readability by eliminating unnecessary boxing
fix : jdk http client error log on successful response ( # 9710
updated import statements in LegacyAuthenticationHandlerAdapter . java to use namedAuthenticationHandler and UsernamePasswordCredentials instead of wildcard imports to improve clarity and
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check to ensure the filter is owned before removing it from the network to improve security by preventing invalid filter removal from the network
relate to github # 1188 : add static method wrap ( inputstream ) in pgpkeyring .
replace DataOutputStream with BufferedOutputStream for data output stream handling to ensure proper resource management and avoid potential memory leaks
added a new test method ` testSelectAllFromView ` and modified column handling in ` HiveBaseResultSet ` to improve test coverage and ensure
refactor FocusTransitionTest class to improve test coverage to enhance reliability of focus transition functionality
gwt : use gwt . core instead of gwtproject . core in sharecontroller
added a condition to check if the sourceTask is an instance of MapRedTask before obtaining job counters to improve error handling and prevent potential
updated the null check for the readListener variable to ensure that the readListener is not null to avoid potential NullPointerExceptions
refactor color change logic in AppearancePanel . java to use ChangeListener instead of direct method calls to improve code readability and maintainability
updated the constructor parameter from ` false ` to ` hidden ` in ` TaskHelper . java ` to enable the use of the ` hidden `
http : / / issues . apache . org / jira / browse / amq - 4898 - fix test failure
pdfbox - 4892 : fix resource leak when create from file , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler functionality in the scripting framework
lsra spill optimization : do n ' t try to optimize spill interval if the def loop depth < spill depth .
[ micronaut ] add test to compile groovy script ( # 8796 )
fix ( pgwire ) : make closeoncompletion volatile ( # 113 )
set default value of serviceAdvisorType to PYTHON to ensure proper handling of service advisor type in the application
refactor resolver management in GenericDatumReader to use ThreadLocal for improved thread safety to enhance performance by reducing contention on the resolver
replaced ` Collection ` with ` List ` for ` subpaths ` and updated related classes to use ` ArrayDeque ` and ` Deque
replaced byte array instantiation with a random byte array for outputs in SendCoinShieldTest . java to improve test reliability by avoiding
added a new method ` setPersonalisation ` to ` SkeinParameterSpec ` that formats email and distinguishers to facilit
removed duplicate code for checking argument count in CodeGenerator . java to improve code readability and maintainability
removed the float parameter from the scroll method signatures across multiple classes to simplify the scrolling logic by removing unnecessary complexity
changed the access modifier of the ' pointer ' variable from private to public and added methods for resetting the pointer to allow external access to the pointer
renamed ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to clarify the purpose of the class related
fix castexpression to handle boolean and null correctly
refactor accepts handling in AbstractResource to use a boolean flag for better clarity to improve code readability and maintainability by using a boolean
added a new boolean variable ` false ` in the ` TaskView . java ` class to control the behavior of the ` TaskView ` class
added isAutoIncrement method to LiquibaseDataType and overridden isAutoIncrement method in CreateTableChange . java to provide functionality for handling auto -
initialize errorText to " Command failed due to Internal Server Error " to improve clarity of error reporting for better debugging
updated imports in DeadListenerTest . java and LocalManagementTest . java for improved performance configuration to enhance test performance and maintainability by util
replaced ` add ` method calls with ` push ` for ` toSimulate ` in ` BasicEventSimulationEngine . java ` to ensure
added support for an AJP port in the GitBlitServer class and integrated it into the Build class to enhance the server ' s capability
added type handling for intersection type coercion in TransTypes . java and created a new Intersection03 . java file to ensure type safety
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to better reflect the purpose of the test class
added a native method to start the toolkit thread only if it does not already exist to improve thread management by avoiding unnecessary thread creation
optimize bundle content by use a parallel compression pool .
hide the surface on window ( fixes # 1193 )
updated the temporary directory path in AbstractRecordExtractorTest from " RecordTransformationTest " to " getClass ( ) . getName ( ) " to ensure
added support for enabling HTTP services based on configuration settings to improve flexibility and control over service addition based on user - defined settings
added a service property to the GoogleCloudFirestoreTicketDocument and implemented the countTicketsFor method in GoogleCloudFirestoreTicketRegistry to
refactor Generate . java for improved code organization to enhance maintainability and readability of the code
json _ format ( null ) should return string null instead of null
updated badge rendering logic to include a conditional check for the DOTS _ ONLY flag to ensure proper handling of text and icons based on the DOT
changed the ` getConfiguration ` method from ` final ` to non - final in ` FreemarkerManager . java ` to allow for
add a test to ensure that ognlutil . setexcludedpackagenames ( string ) throw an exception if the excluded package name pattern be
updated deviceUdid assignment logic based on platform name and added a check for " iphone " in IdbRunTestsStep to ensure correct
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use ProduceProcessorManager and improved response handling to enhance error logging and ensure proper response processing
added checks for ` mScript ` before binding root script and executed ` mInvokeResetWAR ` in ` AllAppsView . java ` to
added a boolean flag ` TEXT _ BURN ` and modified the condition to check line count to ensure shadow layers are set correctly based on the
added teardown methods to drop database tables and views in TestColumnAccess and TestReadEntityDirect to ensure proper resource cleanup after tests are executed
added a method to retrieve the parser by name to improve parser management and enhance code clarity
updated the conditional check in ` BoundedLocalCache . java ` and added a new test method in ` BoundedLocalCacheTest . java
updated WebSocket connection interface to extend WebSocketConnection and added complete and flush methods to enhance WebSocket functionality and improve frame processing efficiency
added multiple test methods for asserting all assertions in SoftAssertionsPerfTest . java to enhance test coverage for the SoftAssertionsPerfTest
added a new constant for TEST _ FAILURES _ EXIT _ CODE and modified the execution result handling in PythonRunTestsStep . java to improve
refactor xAdvances handling in GlyphLayout . java to improve readability and maintainability to enhance code clarity and ensure proper rendering of
refactor score comparison logic in TestBooleanRewrites . java to use Java Streams for better readability and performance to improve code maintainability and
updated the logic for obtaining the enclosing class in TypeHandlerRegistry . java to ensure correct superclass is used for anonymous classes
remove unnecessary cast to playerconnection in updatemanager . flush ( )
added a check to prevent multiple invocations of removeOnDrawListener in Launcher and LauncherAnimUtils to ensure that listeners are only removed once
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated import statements in ReplicaAssigner . java to use wildcard imports and modified conditional check for matchStatus to simplify import statements and ensure proper handling
changed the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to enable media info parsing by default
add support for @ round _ type interceptor in @ beandefinitioninject processor ( # 5338 )
added assertions and verification for table partition operations in FolderPermissionBase . java to ensure proper permission verification and existence checks for partitioned tables
added a boolean parameter ` dueToRegistrationStateChanged ` to ` handleProviderRegistered ` and ` publishStatusInternal ` methods in ` GlobalStatus
updated the color calculation logic in PastelColor . java to use a base color base to improve color distinction between different colors
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated the handling of bitmaps in HolographicViewHelper to include original and outline bitmaps to improve the visual representation of the state
refactor request method handling to use ` HttpMethod . fromString ( requestMethod ) ` and add null check for ` requestBody ` to improve robustness and
add a way to infer the position of the phrase where the phrase contain the tag
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
updated class loading logic in Table . java to handle Hive PassThroughOutputFormat to ensure proper output format is retrieved when using Hive PassThrough
refactor ChunkListener , AfterChunk , BeforeChunk , and AfterChunk classes to improve code organization and maintainability
added a length validation check for the character ' s length in DOMBuilder . java to ensure that the variable ' s length does not exceed the
updated conditional statements in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , and HitsUI to improve clarity
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file PublicStaticInterfaceMethodHandling . java that implements an interface with static methods to demonstrate the use of static methods
camel - 16400 : camel - core - optimize defaultkeyselector to support property placeholder .
replaced instances of ` Throwable ` with ` ThreadDeath ` across multiple catch blocks in ` LogResolverBean . java ` and ` Resource
updated multiple Java files related to key management and certificate handling to improve security and maintainability of the codebase
updated JGit version from " 201106090707 - r " to " JGit 1.1 . 0 ( 20110911
refactor client key handling in HttpClientIntroductionAdvice . java to improve clarity and maintainability to enhance code readability and
int - 1181 add a transformer configuration and a unit test for it .
updated BACK _ FACTOR to REWIND _ TIME and modified conditions in ResumeObj . java to improve clarity and accuracy of duration handling
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` , ` Button ` , and ` JavaSE
updated usage formatting in UtilityCommands and DocumentationPrinter to handle empty usage cases to improve clarity of command usage output and ensure proper handling of empty
corrected the spelling of " collections . map " in the request attribute assignment to ensure proper handling of the collection map in the request
removed the setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource . java and updated size retrieval in RewriteCrossSpaceComp
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic in ProjectPropertiesModelImpl . java to streamline the rebuild process and improve clarity to enhance code readability and maintain
fix synchronization issue in abstractsootfieldref . getfield ( ) .
make elastic meter registry more flexible ( fixes # 259 )
added methods for managing ControllerListener , GcodeCommandCreator , and jobLines in IController , and updated BackendAPI to use IController to
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to ensure that the rendering logic correctly handles large
replaced System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
refactor multiple classes related to POST and REDIRECT to improve code readability and maintainability
changed the condition from checking if frameLength is zero to checking if it is less than zero to ensure that the code handles cases where frameLength
updated return statements in IntFloatMap and IntIntMap to return default values instead of zeroValue to ensure consistent behavior by returning default values instead
refactor image handling in ImageDownloadService to use a Runnable for thread safety to ensure UI updates occur on the UI thread for image updates
added a null check for registered in HandlerRegistration . java to prevent potential NullPointerExceptions during execution
removed the hasNextSibling ( ) method from multiple node classes and updated return statements in IeNavigator . java to streamline the code by elim
fixed - npe cause by redisdistributedmapcacheclientservice . getmapcacheclientservice ( ) . getmapcachec
added logging statements for MobFileCache initialization and disabled states in MobFileCache . java to improve visibility and clarity of cache configuration
refactor ColConvCCMTest . java for improved readability to enhance maintainability and facilitate future updates
refactor variable assignments and method calls in Check . java for clarity and consistency to improve code readability and maintainability by reducing red
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` asString ( ) ` and added a new ` X `
added a return statement to the GenericFileConsumer class to ensure the method exits early under specific conditions
added a Runnable to invoke the EventQueue on the Event Dispatch Thread to ensure UI updates occur on the Event Dispatch Thread for thread safety
updated the calculation of maxSize from ` getMaxTextMessageSize ( ) ` and ` getMaxBinaryMessageSize ( ) ` to ` getMaxBinary
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to correct steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve code readability and leverage built - in security
updated JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversion to improve accuracy and consistency in handling date and timestamp types
updated version from 2 to 3 and refactored metadata reading logic in ParseData . java to ensure compatibility with the latest versioning standards
added FlywayInitializerJpaDependencyConfiguration and corresponding test cases in FlywayAutoConfiguration and FlywayAutoConfigurationTests to improve
added a sorted ( ) method to ClassesImpl . java to ensure classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and modified ` AbstractLauncherUiTest ` to utilize
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
8014246 : test / java / lang / class / resourcescope / testclosescope0 . java fail on jdk16
updated test parameters from 500 to 5000 in AdaptServerSocket . java to increase test timeout for better reliability
updated CaptchaChannelProcessorTests . java file to improve test coverage and ensure accuracy of validation logic
added logic to update the ownership of a collection in MetadataImport . java to ensure that the item ' s ownership is updated correctly when changes occur
added retry mechanism for saving properties in AbstractRegistry . java to limit the number of attempts to save properties to ensure that the system does not exceed
updated the constructor of TrackingDirectoryWrapper from ` mergeDirectory ` to ` directory ` to ensure the correct directory is used for tracking operations
fixed bug 138175 - unusedimports : use targetjdk1.5 instead of targetjdk1.4
added validation for sink descriptors in HiveIcebergStorageHandler to ensure that insert overwrite queries are only performed on bucketed Iceberg tables
updated assertions in BootstrapTests to reflect the correct number of keys and added a check for legacy SAML keys to ensure correct validation of SAML configuration settings
updated method names and conditions in Excluder . java to include non - static local checks to ensure accurate identification of anonymous and non -
renamed the address variable from ` theAddressie ` to ` addressees ` and updated its usage in ` getAddressVector ( ) `
removed multiple comments from CommentsParser . java to streamline code by eliminating unused comments
added LockReleaseFailedException class and updated release methods to throw IOException to improve error handling and provide clearer exception management during lock release operations
updated package name from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align package structure with the
updated SpelExpressionTransformer and related classes to check for unary operators and streamlined return statements to improve expression transformation logic and enhance code readability
replaced ByteBuddy instantiation with TypeValidation . DISABLED to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added ` ErroneousAnnotations
updated lock handling in ` LockModePessimisticReadWriteIntegrationTest ` and modified timeout in ` MySQLTableLockTest ` and `
updated logging application listener to use system properties directly instead of passing the LogFile parameter to simplify method calls and ensure logging properties are only applied when
added a method to check for HTTP redirects and modified the connection handling in ServiceApiRequest . java to improve error handling for excessive HTTP redirects and
added new constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants . java and refactored microservice
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
changed DB _ PATH _ REGEX to static in BaseAndroidTestCase . java and modified database deletion logic in GeocodeHelperTest . java to
updated return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread data for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method to improve clarity
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and updated related classes to limit the number of orders returned to
added a null check for the user before retrieving user settings to avoid potential NullPointerExceptions when accessing user settings
updated the method for retrieving the absolute file path in LocalFileSystem and added a new test for relative wildcard matching in LocalFileSystemTest to ensure accurate
added MAX _ WIDTH and MAX _ HEIGHT constants and modified bounds handling in ComponentBuilders . java to ensure that the instance does not exceed the
added logging functionality and deprecated method to CommonsHttpSolrServer to improve error handling and provide better logging for connection management issues
removed unused import statements for ExceptionHandler in PrintController . java to streamline error handling for document creation failures
refactor filename formatting to use lambda expressions for better readability to improve code clarity and reduce boilerplate for file existence checks
added validation for word length in SpellChecker and created a test for number separators in SpellCheckerTest to ensure that the spell checker correctly
corrected formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added a method to show file actions in FileDisplayActivity and refactored the file display logic to improve code organization and enhance file action handling
added error handling to log replication time and configuration files in SnapPuller . java to improve robustness by logging exceptions and preventing application
removed unnecessary parameter from the update method call in StoreCachedTest . java to streamline the code by eliminating unnecessary parameters
refactor StreamerLoader constructor to use MaterialHolder instead of MaterialHolder to improve code clarity and ensure proper cleanup of MaterialColumnParser instances
added detailed information for various components in DependencyBank . java to enhance clarity and usability of the DependencyBank class for better user understanding
added methods to set maximum recyclled views for various device profiles in AppsContainerRecyclerView to optimize recycling of views based on
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process
fix baritone cancelling if there be no location for the given mining
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance the functionality of the CreateProcedureChange
added null handling logic in FilterOperatorUtils and corresponding test cases in FilterOperatorTest to improve query performance and ensure proper handling of null values in
added validation for the number of parameters in the bootstrap method signature in JDynamicInvokeExpr . java to ensure correct argument types are used for dynamic
increase the port to 9000 in jmshttpjmstest to avoid port conflict
updated CucumberInstrumentation . java to clear formatter settings to ensure consistent formatting behavior during instrumentation
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related code to ensure type safety
added padding logic to hide workspace labels based on cell padding to ensure that workspace labels do not exceed defined padding factors
updated assertions in ReplicationFactorTest to use a new assertRf method instead of hardcoded strings to improve code readability and maintainability by
sulong : do n ' t call context . initialize if pre - initialization be call during llvm initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java
replace RuntimeException with JsonIOException in Gson . java to provide more specific exception handling for JSON - related issues
replaced Integer . valueOf ( ) with Integer . parseInt ( ) for value and value2 assignment in VisualScoreTagTest . java to improve
updated error messages in Copy . java for clarity and modified file traversal parameters to improve error reporting and ensure proper handling of file operations
refactor segment name validation in HLCSegmentName , LLCSegmentName , and SegmentName classes to use isLowLevelConsumerSegmentName
added methods ` startActivity ` and ` startActivityForResult ` to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
updated the return statement in DueDateBusinessCalendar . java to use clockReader ' s current time instead of the current time to ensure accurate
updated TargetCpuType to include " - target " and " x86 _ 64 - none - linux - android " to ensure proper CPU type
added a method ` deleteAllFiles ( ) ` to ` FileDataStorageManager ` for deleting files associated with an account to enhance file management capabilities
updated help message format from " - ? % n " to " - h % n " in SchemaCrawlerCommandLine . java to improve clarity
added a new method ` createSuiteDescription ` to create descriptions with a unique identifier and updated related tests accordingly to enhance functionality by allowing descriptions to
replaced the direct decoding of a bitmap with a barcode decoding method to simplify the code and improve performance by directly using the barcode decoding
removed the ImmutableList < String > sources parameter from the constructor of BuckTarget and related classes to simplify the constructor and eliminate unnecessary dependencies
added unit tests for range pasting end and start in GWCZoomContextFinderTest . java to ensure correct functionality of zoom context retrieval
added a new configuration key for dependency tracking in JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enhance dependency tracking
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure accurate
do n ' t try to create a new keyspace if it already exist
refactor WelcomeWindow to manage image rendering more efficiently to improve performance by reusing image objects instead of background images
updated tuner configurations and error handling in multiple classes to improve tuner configuration management and ensure proper resource management
added HasTests interface to AbstractShBinaryDescriptionArg and a new test method in ShBinaryRuleIntegrationTest to enable testing of sh - binary
added a condition to include " db : hsqldb " in TestFilter . java to ensure compatibility with HSQLDB database connections
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize exception if stack trace be empty .
do n ' t export jvmci when there ' s only one provider
added test for duplicate command handler resolution in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ stream ] add support for fine - grained resource management in batch job
fix entityfish hook not apply to block that be n ' t in the block state . close # 3649
camel - 14263 : fix javadoc warning for camel - ftp and camel - ftp
rename methods from ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` and update related methods in ` GangliaReporter ` to improve clarity
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when there are no items to display
added conditional bean definition for REPORTER _ BEAN in ZipkinAutoConfiguration . java to ensure that the bean is only created if
log4j2 - 1349 improve xmllayout to use mdc property instead of stringbuffer
added support to omit the " responseHeader " parameter in multiple writer classes to enhance flexibility in managing response headers during processing
replace the method ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperty . java ` and add a new test class
replaced direct calls to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and maintain
modified the method numberer removal process in ` SootClass . java ` to call ` scene . modifyHierarchy ( ) ` to ensure the
fix npe in tradedatavalidation . testifdisputetriesreplay ( )
added ` getObjectHash ( ) ` method to ` AbstractNamedObject ` , modified method signatures in ` TableRetriever ` , ` TableRetriever `
wallet : set confidence type to not _ seen _ in _ chain for send tx .
refactor HttpClientIntroductionAdvice to handle both Body and Header annotations more efficiently to improve code readability and maintainability by
added a check for root and valid JSON files before processing conditions in CraftingHelper . java to ensure only valid JSON files are processed , impro
hbase - 15411 region . close ( ) should log a warning if we get an exception while open the region
refactor length comparison logic in Credential . java to use a local variable for better readability to improve code clarity and maintainability by redu
[ java ] do n ' t try to send a message if the image be already present in the subscription .
modified the destroy method to use ` destroyForcibly ` instead of ` destroy ` to improve process destruction reliability and error handling
added oracle support to the condition in TestDefaults . java to ensure compatibility with additional database systems
camel - 7999 : do n ' t try to connect to the mailstore if it be n ' t connect
throw parsecancellationexception if there be more token in the query that have not be consume
camel - 16171 - aws - translate : list all available language in the enum - start with ` ` k ' ' complete
added a method to retrieve the data file name in the Model class and updated model initialization logic in Voice . java to improve data file handling and
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow configuration and retrieval of email domains for
added configuration constants for read and connect timeout in Configuration . java and updated related methods in ViewRegistry . java to improve configurability and allow
skip processing of deferred concept if there be no link to save later
added RedisCategory import and category annotation to RedisServiceRegistryTests to categorize Redis tests for better categorization and management
updated the ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` classes to accept a ` String ` parameter for the ` typePattern `
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the
removed unused imports from multiple configuration classes to improve code clarity and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule , LogEventWrapper , and LogEventTriggerCapsule classes to include event signature full to
updated file name filtering from contains to endsWith to ensure only valid file names ending with the session ID are processed
replaced the manual clearing of a rectangle with a fill method that sets the background color to enhance the visual appearance by using a dynamic background
jbrules - 2852 : fix checkstyle violation in packagebuilder . java
removed unnecessary debug print statements from multiple Java files to improve code cleanliness and reduce unnecessary console output
added a condition to check for NaN scores in TestFieldCacheSort . java to ensure that score comparisons are only checked for valid score values
[ java ] copy entity key set to avoid concurrentmodificationexception .
added handling for zeroTime strings in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure that zero - time
replace ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` taker
updated type parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector
[ drools - 5334 ] fix the bug that the kiesessionconfiguration can not be edit when a session model be edit (
updated HiveMetaStoreClient initialization to use the current configuration object to ensure proper context is used for HiveMetaStoreClient initialization
added a condition to return early if mModalness equals modalness to optimize performance by avoiding unnecessary processing when the modalness is the same
added unit tests for codec capabilities in ShadowMediaCodecListTest . java and implemented global settings in ShadowMediaCodecList . java to ensure correct
fix focus issue when enter key be use ( issue # 5460 )
added validation for width and height in SunVolatileImage . java and improved error handling in XRSurfaceDataProxy . java to ensure
updated the thousands separator from " . " to " \ u00a0 " in the FormatData _ uk . java file to ensure
refactor AsyncStressTest and StressTest to use AtomicInteger and AtomicInteger for thread - safe access to improve concurrency handling and ensure consistent concurrency
added support for beta flavour selection in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when achievements
added access , name , and description properties to the SearchMethodVisitor class to ensure that the SearchMethodVisitor correctly stores context - related information
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve synchronization
reformatted code for setting media duration in DLNAResource . java to improve readability and maintainability of the code
removed the required attribute from the @ XmlRootElement annotation in ResequenceDefinition . java to simplify the XML configuration by eliminating unnecessary
refactor transaction handling methods in TableReader and TableReaderScoreboardInteractionTest to improve transaction management and prevent multiple acquisition attempts
flume - 212 . use ssl . keymanager . algorithm instead of context . getstring ( keymanagertype , trustmanageralgorithm )
replaced JavaVisitor with TreeVisitor and modified getSingleSourceApplicableTest method to utilize Applicability to enhance type - checking capabilities for better
fix tab key bug in blockmania . close ( )
replace ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to clarify the intended use of the
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for better clarity to improve code readability and provide clear
updated variable assignments for stripes and stripeStats in OrcInputFormat . java to ensure correct retrieval of stripe statistics based on the order of
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs from " http " to " https " in MyhentaicomicsRipper . java to enhance security by using secure
added a version command - line option to show the current version of the application to provide users with easy access to the current version of the application
fix bug with export list with space in the applet list
updated rotation handling in ConsoleActivity and TerminalView to improve user experience by ensuring consistent rotation settings based on keyboard settings
changed the type of ` hq ` from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` to ensure type
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 15836 : camel - jolokia - allow to specify the name of the headersmapfactory for camel - jolokia
updated formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistency in formatting
int - 1186 add a parser for the jms outbound gateway in the namespace handler
updated index parameter from ' i + 1 ' to ' i2 ' in ArrayFunctions . java to correctly reference the expected index in the array
added null check for additionalClasspathURLs and improved error handling in AbstractScriptProcessor and InvokeScriptedProcessor to enhance robustness and provide better
added support for PGStatement in PooledConnectionImpl and created a new test for Statement and CallableStatement in ConnectionPoolTest to ensure compatibility with
refresh size estimation after each test ( patch by yukim review by jbellis )
changed log level from error to warn in AtomicRemainder . java to better reflect the severity of the memory limit being logged
remove unnecessary sorting of candidates and add a test for aggressive expiration . patch by jbellis ; review by jbellis for cassandra
fixed - rblockingdeque . polllastasync ( ) and rblockingqueue . pollfirstasync ( ) method return wrong result . #
removed unnecessary string concatenation in JobInspectCommand . java to streamline output formatting for better readability
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
updated the return statement in ChildHolder . java to use a stream - based approach for sorting children to improve performance and readability by lever
[ rocketmq - acl ] use sessioncredentials instead of requestextfields in aclclient
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling of
[ hotfix ] [ notebook ] do n ' t print stacktraces to stderr
use lt instead of funn instead of funn in expressionnodeevaluator .
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods to enforce encapsulation and restrict access
server : improve error message when create snapshot policy fails
changed access modifiers from public to package - private in ItemWriter . java to restrict access to these methods for better encapsulation
updated the mock variable name from " " to " test " in RoombaHandlerTest . java to provide a more descriptive identifier for testing
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replace ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to improve performance by using an efficient memory directory
added a static float variable ` mLineHeight ` and modified the calculation of ` lineHeight ` to ensure the line height does not exceed the
walletappkit : fix typo find by codespell on fossies . org
[ netbeans - 4892 ] remove hat _ js _ nashorn from oql engine impl
remove the menu item from the button group in ChatTransportSelectorBox . java to ensure the correct menu item is removed from the button group
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
added nullability handling for BlockChainExplorer and improved null safety checks to enhance code robustness and prevent potential NullPointerExceptions
added getter and setter methods for session attributes in StandardSession . java and StandardSession . java to enable retrieval and modification of session attributes for better
added assertions to verify the name and along properties of the plain bean in TestDbJson _ List to ensure the correctness of the plain
updated the array initialization from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure correct allocation of averages based on
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future feature additions
added datasource and transaction manager beans to BatchMetricsApplication . java to facilitate database interaction with HSQL in batch processing
implement httpservice instead of unauthenticatedhttpservice ( # 1308 )
pdfbox - 4892 : use non - stroke java composite , a suggest by valerybokov
removed unnecessary synchronization around the close method in DocumentsWriter and added synchronization in DocumentsWriterPerThread to improve performance by reducing unnecessary notifications
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance UI component functionality by allowing retrieval and setting of validation constraints
replaced calls to ` setReflectively ` with ` builder . setReflectively ` for ` dexStore ` , ` dexSplit
save : only update the stored copy of the tree for a full save
tweak the affix parser to use a pattern instead of a string .
updated variable initialization and string concatenation in KrakenAdaptersTest . java to use diamond operator to improve code readability and maintainability
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees . java for improved readability to enhance maintainability and clarity of the codebase
removed unsupported encoding check from VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary error handling for unsupported encoding
updated logging conditions in HttpSolrCall . java for consistency and clarity to improve log readability and ensure proper logging behavior during the gradle
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy resources
fix infinite recursion in defaultentityqueryrepository .
updated the message construction in HubChangeExecListener . java to include a null check for the changelog ID to improve clarity of communication failure messages
added try harder hint support to abstractblackboxtestcase .
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` to improve error handling by utilizing `
updated the handling of the maximum number of events in ObjectStore . java to simplify the loop structure and improve readability by eliminating unnecessary
simplified the validation logic in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability by reducing complexity
clean up temporaryblockentities after each call to removeblockentities ( )
[ fix ] intrinsifyarraycopyphase do n ' t use exact type for array copy .
[ test ] remove unused logger . gethandlers ( ) . gethandlers ( ) .
replaced WantedAnywhereAfterFollowingInteraction with a more descriptive string representation in Reporter . java and HasStackTrace . java to
added null checks for ownerAddress , account , and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure contract
refactor scriptlauncher to use a sortedmap instead of a comparator
chore : [ lifecyclesciences ] update go link to v2bet ( # 1 )
replaced ` addProperty ` with ` setProperty ` for metadataProperties in ` BaseSingleTreeBuilder . java ` to ensure consistency in property handling across metadata
updated AsmLibraryLoader to use the parent ClassLoader for class loading to ensure proper class loading based on the parent class loader for better flexibility
pdfbox - 4892 : optimize rlineto and rrcurve , a suggest by valerybokov
updated export and declare statements in Java2TypeScriptTranslator . java to ensure correct formatting based on the definition scope state
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to implement a request handling mechanism to ensure that requests are properly marked as handled
updated input listener methods to include " Left " , " Right " , and " Rotate " alongside " Pause " to enhance functionality by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : abstract
updated package structure for multiple test classes to improve organization and clarity of test classes
refactor image creation logic in AwtCanvas . java to improve handling of different image types and filter logic to enhance performance and maintainability by
[ gr - 32913 ] make native image location qualifier configurable .
[ beam - 8470 ] remove unused dataflowportabilityapiunsupported from pardotest
replaced ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl .
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
renames occurrence of callstack . getcall to callstack . getcall so that it would well reflect our new call architecture that also include
log a warning if the max size configuration do not allow any data in the map
corrected the spelling of " AST " to " LST " across multiple files to ensure consistency and accuracy in terminology across the codebase
refactor scoreable calculations and improve readability in ThreadedAcousticScorer . java to enhance code clarity and maintainability
replaced an AssertionError with a return statement in NetHooks . java to simplify error handling by returning null instead of throwing an assertion failure
update applicationcontrollerfluentleniumtest to use window ( ) instead of getserveraddress ( )
added default makeString method implementations across multiple iterable classes to enhance string manipulation capabilities across different iterable types
replaced the hardcoded ordering of ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` to
added a weakAssociationRule predicate to the WeakAssociationsAnalyzer constructor and updated related tests to enhance the flexibility and validation of weak associations based on
refactor Deflater class for improved performance to enhance efficiency of compression operations
added error handling for throwable exceptions in Font . java to ensure proper IOException is thrown when an exception occurs
added a null and empty check for the content variable in VersionTypeBinding . java to prevent potential NullPointerExceptions when content is null or empty
refactor NearbyListFragment to return a list of Place objects instead of storing them in a local variable to improve code readability and
changed content type check from lowercase to lowercase in MailConverters . java to ensure case - insensitive matching for content types
change visibility of AUTH _ MAGIC to public and modify format retrieval in OpenSSHPrivateKeySpec to allow external access to the AUTH _ MAGIC
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for folder name binding to improve flexibility in handling folder name
replaced specific Hibernate annotations with a wildcard import and added JPA entity retrieval in InheritanceCacheTest . java to simplify import statements and
updated import statements in ConnectOAuth2RequestFactory . java and added a method to retrieve user approval request parameters in TofuUserApprovalHandler
updated InfluxNamingConvention to use delegate . tagKey ( key ) instead of delegate . tagKey ( name ) and added a new test
simonstewart : add dump ( string , double ) method to make it easy to understand
updated cookie key check from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure correct handling of multiple cookies in the request
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage throughout the ` Subject ` class to
added preference management for clearing all tasks in OverviewActionsView to enhance user experience by allowing users to clear all tasks easily
updated timeout values and error handling in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to enhance code clarity and ensure proper initialization of
deleted the MemoryLeakTest . java file to remove unused test class to streamline the codebase
updated the return statement in ServletTester . java to include the local host address if localhost is true to improve flexibility in connecting to different
added a condition to check if PlotSquared is hooked into MvDWPlaceholderAPI to ensure compatibility with MvDWPlaceholderAPI
fix abstractpartitionassignmentcorrectnesstest . testclustersizeeventually ( int , Collection < hazelcastinstance > instances )
added a singleton holder for FFIProvider and implemented JNA support in FFIProvider to improve flexibility in loading FFI providers based on
tika - 2276 -- add test for hierarchical w file list in batchprocess
added null checks and updated ID property retrieval logic in MongoTemplate . java to improve robustness and prevent potential NullPointerExceptions during saving operations
change the return type of the Position constructor to NODE _ LIST instead of 0 when index exceeds directInputCount and directSuccessorCount to improve
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , and updated related tests in ` B
updated log messages in RealtimeSegmentDataManager and AvroUtils to use parameterized logging for better readability to improve logging clarity and maintainability
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for header and data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex
update copyright year to match last edit in the copyright year .
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during transition processing
try to fix intermittent unit test failure on travis ci
updated the condition to check if ` beginCycle ` exceeds ` currentCycle ` to ensure that ` beginCycle ` does not exceed ` currentCycle
increased the length of the random value string generator from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in Code
added a check for unique constraints in StandardObjectChangeFilter to ensure correct matching behavior for unique constraints
updated string processing logic and improved language code handling in MediaDetailFragment . java to enhance code readability and maintainability while ensuring accurate parsing
improve error handling for arrayindexoutofboundsexception and classcastexception
added reference and key filters to the ListImagesCmd and ListImagesCmdImpl classes to enhance functionality to filter images based on reference and key parameters
camel - 14263 : camel - jms - do not allow bridgeerrorhandler to be configure on jms endpoint , throw an exception if bridge
added a condition to check for specific lines in OpExclusionUtils . java and log a message if no ops are found for exclusion to improve
added return statements to the DatabaseCommand class to ensure the method correctly indicates a failure condition
replaced multiple Politician instances with new ones named " p1 " , " p2 " , " Prime Minster of
[ zeppelin - 4892 ] fix npe in beanshell initialization
updated RestletComponent to conditionally format the URL based on the port value to ensure that the URL is formatted correctly when the port is non
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline code and improve clarity by
added a system property for maximum query length in QTestUtil . java and removed overridden configurations in SessionState . java to optimize query performance and
changed access modifiers of userName and security manager , and refactored HTTP configuration methods in WebServer . java to enhance encapsulation and improve code
updated method names from " writeHdfs " and " writeKafka " to " hadoopSink " and " kafkaSource " across multiple files
updated HiveConf to check for " spark . app . name " before setting it in HiveSparkClientFactory to ensure that the application name
corrected the spelling of " whiteName " to " includedName " in ManagedClassFactory . java to ensure accurate filtering of properties based
simonstewart : add support for maximize window in the remote server
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to improve clarity and functionality to
added an assertion to check for the presence of " entity expansions " in the exception message to ensure that the exception message accurately reflect
added masking for table offset and length in TrueTypeFont . java to ensure that only ASCII values are set to prevent potential overflow issues
added an assertion to verify that the custom form is not null to ensure that the custom form is properly initialized before use
refactor buffer handling in LineChartRenderer to use a variable for number of floating - point values to improve code readability and maintainability by
refactor flavors handling in AndroidBinaryDescription and AndroidBinaryFlavorsIntegrationTest to use a loop to improve code readability and maintain
updated buffer assignment from ` offset ` to ` i ` in ` LwjglGL11 . java ` to ensure correct buffer indexing for
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` to handle LinkageError to improve error handling
disable shutdown hook if groupproperties . shutdownhook _ enabled . getboolean ( ) be true .
updated FilterChainProxy to use FilterChjainProxy and removed the ` url ` parameter from the ` VirtualFilterChain ` constructor to simplify
replaced Collections . sort with Arrays . sort for intermediateResult to improve performance and maintainability of the code
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that tables are loaded only when
initialize baseType to null and initialize literalPrefix and literalSuffix in MutableColumnDataType to ensure default values are set to null and improve clarity in
updated link links in multiple Java files for consistency to improve readability and maintainability of the code
replaced instances of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and ` BooleanNotEqualEvaluator ` with ` final static
updated configuration references from " osx " to " osx _ config " across multiple files to standardize naming conventions and improve clarity
added sound effect handling in AllAppsView . java to improve user experience by enabling sound feedback on app launches
changed the main method to throw IOException instead of Exception to improve error handling by explicitly indicating potential IO issues
enable granularity features for the left axis in BarChartActivitySinus to improve data representation accuracy for better user experience
refactor version comparison logic in GdxSetup . java to use a new method ` compareVersions ` to improve code readability and maintainability
updated file path handling in ContextHandlerGetResourceTest to use a test root directory and added OS _ ALIAS _ SUPPORTED check to improve test
added close methods to Connection , JsonAsyncHttpPinotClientTransport , and PreparedStatementTest classes to ensure proper resource management and prevent potential connection leak
log4j2 - 1343 refactor socketremotetest and mockappender to use a linkedblockingqueue
[ beam - 4142 ] improve error message when try to access non - directory resource
removed redundant import statements in IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by elimin
removed redundant call to unbindHandle in ItemServiceImpl . java to streamline the code by eliminating unnecessary duplication
rename Config . java and Attribute . java files to improve clarity and consistency in naming conventions
simplified conditional statements in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated navigation button tint handling in NavbarButtonsViewController . java to utilize configuration for dark and non - dark themes to improve
replaced ` abort ` method with ` throw ` in ` PolyBenchLauncher . java ` to ensure proper error handling by throwing an exception
replaced individual short and short index extraction with a byte reference kind assignment in ClassWriter . java to improve clarity and correctness in handling member
updated findBox and findElementBox methods to include a BlockFormattingContext parameter to enhance rendering capabilities by incorporating block formatting context for
added a method to retrieve standard error output from the launched process and refactored error handling in WorkerProcess and WorkerShellStep to improve error
added null checks for the operator in CheckedListReplaceAll . java and improved error handling in Collections . java to ensure proper handling of null
added a test for writing on connection and modified fillInterested ( ) logic in SslConnectionTest . java to improve test coverage and control flow
refactor DeviceFlag and FeatureFlags to manage device configuration change listeners to improve listener management and ensure immutability of default values
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
update instructorfeedbackeditpage to use javascript for focus on the end date box
added synchronization to the ownTradesObservable and userTradeObservable initialization in KrakenStreamingTradeService . java to ensure thread safety when accessing
changed system . err . println to system . out . println in ChangeableUrls . java to ensure proper logging of class - path entries for
added a boolean parameter to the constructors of ` SparseRowMatrix ` for creating random access vectors to enhance flexibility in matrix creation by allowing different
bug cs - 15729 : do n ' t delete usage event for a volume that have a poolid
refactor file input stream handling to use a dynamic path based on the HADOOPJT configuration to improve flexibility and ensure correct
[ beam - 8470 ] updatetestprovider use guava v26 _ 0 _ jre instead of guava v26 _
mondrian : fix bug in memorycallgraphbuilder # resetinternalstate ( )
add null check for multiuserchat operation set in conferencechatmanager to avoid npe .
added file write validation to ensure that the output file can be write before proceeding to prevent illegal user actions
added FolderSyncActivity to handle folder sync functionality in the DrawerActivity and created a new FolderSyncActivity class to enhance user experience by providing
[ hotfix ] [ test ] refactor sequentialchannelstatereaderimpltest to use try - with - resources
spanishtreenormalizer now handle ' % ' as well a ' % ' a valid word separator .
replaced the use of ` pointReader ` with ` heapPointWriter . getPackedValueSlice ` in ` SimpleTextBKDWriter
added LocaleRandomizer and its test class for generating random Locale values to facilitate locale - based randomization functionality in the application
tika - 2635 -- add mime type detection for font printer metric and font type .
[ netbeans - 4952 ] support version 10.0 and 9.0 in installation and auto - upgrade
reformatted code for better readability in TCPTransport . java to enhance maintainability and clarity of the code
added a default read timeout to the socketWrapper ' s read method in Http2AsyncParser . java to ensure that the read operation has a
updated the WATCHER _ INITIAL _ DELAY value from " 120 " to " 600 " in TimelineMetricConfiguration . java to adjust
updated the column name in the error message to include the previous column name to improve clarity and accuracy of the error message for better debugging
added support for parsing date strings in ThirdEyeJiraClient to enhance date handling capabilities in the issue builder
refactor priority generation to use a separate method for generating priority frames to improve code readability and maintainability by reducing duplication
added a constant for the maximum scalar replacement code size and updated the condition to include it to ensure that scalar replacements do not exceed the defined maximum
updated projection test to include DATE _ TAKEN instead of DISPLAY _ NAME to ensure compatibility with the latest MediaStore API changes
updated image drawing parameters in TexturePacker2 . java to correct positioning of images to ensure correct rendering of images with respect to dimensions
added WebSocketUpgradeFilter and improved context handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to enhance WebSocket upgrade functionality and
added shutdown calls to validateSignService and trxHandlePool in Manager and adjusted the Timer initialization in NodePersistService to ensure proper resource cleanup
added a new ` RawJsonRequestBodyAnnotationProcessor ` class and integrated it into the ` JaxrsSwaggerGeneratorContext ` and ` Echo `
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to ` LoggerUtils ` to facilitate the creation
updated the return type of ` ListBeanContainer ` to use ` ArrayList < > ( entries ) ` and added a new test class ` Bean
hbase - 25835 addendum fix typo in testmetricsregionserver # testblockcounthitpercent
camel - 16400 : fixed memory leak in cachedoutputstream . close ( )
set the device id for the position in TeltonikaProtocolDecoder to ensure the position has the correct identifier for processing
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` to
added a null check for the operator in JCAssignOp and created a new test class FailOver15 with a generic method to ensure operator is
added a boolean flag ` enableAccountHandling ` to control account handling behavior in ` FirstRunActivity ` and ` BaseActivity ` to ensure account
use heuristicallyfindmainconnectedcomponent to avoid infinite loop
updated ` DrillViewTable ` to include a ` List < String > ` path parameter and modified ` WorkspaceSchemaFactory ` to include a
updated PooledByteBufAllocatorL to include configuration parameters for memory allocation and caching to enhance flexibility in memory allocation configuration based on system properties
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure correct handling of short arrays
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads in the low - level IO thread pool to allow
added checks for Java version 8 and 11 in SecurityServicesFeature . java to rerun initialization for substitutions for specific Java classes to ensure compatibility with
updated latLonGrid and TestLatLonGrid to improve range validation and added a new test for growing polygons to ensure proper boundary checks and
danielwagnerhall : add miss ` ` invisibility ' ' and ` ` refresh ' ' method to expectconditions
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated related logic accordingly to support insertion overwrite behavior in the file
added a test for the ` SomeInnerClass ` class and its enclosing object in ` ReflectorTest . java ` to ensure the correctness
updated configuration settings in IjProjectBuckConfig to use " auto _ generate _ android _ facet _ sources " instead of " disable _
updated message formatting in updateHub and updateHubForRollback methods to improve readability and maintainability of the code
added properties field and getter / setter methods to the Link class and corresponding test cases in QuickLinksConfigurationModuleTest to ensure properties are correctly inherited
updated the ` toString ` method in ` YamlConfigFileDTO ` from ` @ EqualsAndHashCode ` to ` @ EqualsAndHashCode ` and added
updated generic type parameters in ` AwaitableServerClientCallConfiguration ` to include ` ReqT ` and ` RespT ` to enhance type
refactor ` forName ` methods to use ` @ CallerSensitiveAdapter ` and ` forNameHelper ` instead of ` ClassLoader ` to enhance class loading
updated Hamcrest assertions in RequestItemRepositoryIT . java to use ` IsEmptyString . emptyOrNullString ` instead of ` Matchers
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using a more
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor TimeStepdefs to use Calendar instead of HumanTimeConverter and update related imports and methods to improve clarity and functionality of time
updated the number of patterns for " spark _ isolated " , " spark _ recessive " , and " src " in ModBanners
updated multiple service classes to use ` getUri ( ) ` instead of ` ExchangeSpecification ` for proxy creation to ensure that the correct URI is used
updated print statements in RecordGenerator . java to include the suffix to improve clarity of generated record outputs for better debugging
http : / / issues . apache . org / activemq / browse / amq - 2698 - fix kafka consumer auto commit
updated SQL statement handling in LoggingExecutor and added a boolean flag in StandardLockService to improve database change log locking functionality and ensure proper state management
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and AuthorizeTagCustomGrantedAuthorityTests . java to improve type safety and suppress warnings related to
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety during concurrent access to the page store operations
refactor property resolution logic in SpringBootAutoConfigurationMojo to use ResolvedProperty class to improve code readability and maintainability by reducing
updated the currency reference from ' baseSymbol ' to ' counterSymbol ' in the VirtExMarketDataService to ensure the correct currency
camel - 16400 : camel - core - optimize the unit test for camel - core - dump
replaced UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety when accessing shared resources
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap height scale setting from 256 to heightScale to allow dynamic adjustment of height scale based on user - defined values
removed unnecessary type check for String in SecurityConfig . java and updated assertion in SecurityConfigTests . java to simplify comparison logic and ensure consistency in
set default value of dumpPartitionId to false in StdoutSink . java to ensure default value is used when the property is not set
added unit tests for UTXO handling in UTXOSetTest . java to ensure proper functionality of UTXO output management in the
[ java ] check for unused variable name before java 9 .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for job parameters overriding previous restart parameters in JsrJobOperator to ensure correct handling of job parameters during job execution
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ( ) ` to
removed duplicate code for principal initialization in JaasAuthenticationHandler . java to streamline code for better readability and maintainability
refactor core shutdown to use a separate executor service for improved thread management to enhance performance and responsiveness when shutting down Solr cores
added a null check for mActionsView and visibility based on fullscreenProgress to ensure mActionsView is only shown when there is a valid
refactor parameter handling in RunIdIncrementer to use a local variable for clarity to improve code readability and maintainability by reducing
refactor BasicEntity and TestUtil classes for improved code organization to enhance maintainability and readability of the code
added two assertions to validate the number of matched devices in SchemaRegionBasicTest to ensure that the getMatchedDevices method returns the expected number of
[ 3.0 ] fix metric event not be invoke ( # 10385 )
updated EigenvectorCentrality . java to handle zero max values and added EigenvectorCentralityBuilder . java to
updated registry port handling in multiple classes to use a dynamic port value to improve flexibility in registry configuration by allowing dynamic port selection
refactor geometry data creation to use databaseSession directly instead of direct buffer creation to improve code clarity and maintainability by reducing redundancy
set the amplifier of the entity beacon to 0 instead of 2 to ensure the entity be adequately be adequ
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
changed the enabled property from true to false in HttpClientConfiguration . java and refactored the health check task scheduling in ServiceHttpClientFactory . java
changed the type of ` DEFAULT _ GROUPS ` from ` List < Class > ` to ` List < Class < ? > > ` and
updated annotations in bug8057791 . java to include a key headful and a timeout of 500 milliseconds to improve testability and manage
updated the scheduled executor to use a lambda expression for thread creation to allow for daemon threads to allow speedment applications to exit via main method completion
fix parsing of version string in itemlexicon .
added a call to ReflectionCheckLinker . checkReflectionAccess for type access to enhance security by ensuring proper access control for reflection operations
( chore ) camel - test - infra - mina : fix typo
updated the initialization of the IO context in multiple record readers to include an additional RecordReader parameter to enhance flexibility in handling different record readers during
deleted ClassLoaderHolder and LoaderManager classes to remove unused components to streamline the codebase
added a method to handle configuration changes and improved file validation checks in FileStore and JavaLanguageServer classes to enhance file integrity checks and ensure
added try - catch blocks to register and unregister session callbacks in PackageInstallerCompatVL . java to handle potential exceptions during session callback registration and
removed the " src / test / org / apache / lucene / index / index . cfs " and " src / test /
[ hotfix ] [ test ] add a constructor to akkarpcserviceutils
hbase - 25836 addendum set maxattempts to 3 in testexportsnapshot
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class ` SslConnectionTest ` for verifying SSL connection closure to ensure proper handling of SSL connections and prevent potential issues during
added validation for IPv4 and IPv6 address families in InetAddress and NetworkInterface classes to ensure proper handling of invalid address types and families to prevent runtime
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure proper handling of time zones and locales during JSON serialization
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
nifi - 5338 : fix npe in putdatabaserecord when firstkey = = 0
updated loop condition in TableOutput . java to correct the calculation of the running width to ensure that the loop does not exceed the defined maximum width
pdfbox - 4892 : avoid unnecessary null check , a suggest by valerybokov
change format string checker to use high priority instead of normal _ priority .
[ java ] ignore non - final local variable in a for - each statement .
added PDF version and full compression settings to PDFExporter and modified preview properties in PDFExporterTest to enhance PDF export capabilities and improve preview property management
added unit tests for LdapUserDetailsMapper to ensure correct mapping of role attributes to authorities in the LDAP user details mapping process
cloudstack - 8289 : ldap . read . timeout should be configurable in milli sec instead of hardcoded 500
updated TestDescription . java and TestDescription . java files for consistency to improve code maintainability and readability
updated Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable related to
added a condition to check if the state handler is invalidated before proceeding with gesture state checks to ensure proper handling of gestures that are
updated maximum distance calculations for folder creation in Workspace . java to improve UI responsiveness during folder creation
updated property handling in OciConfigConfigSource . java to use ConfigProviderResolver instead of ConfigProvider to improve configuration management and ensure default sources
updated Testjsig class for improved functionality to enhance performance and maintainability of the code
adjust the mana calculation logic in multiple classes to use the stack ' s count directly to ensure accurate mana calculations based on the current stack
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field from P11TlsPrfGenerator . java to eliminate unnecessary serialization warnings
refactor ts file validation logic and error handling in DataRegion . java to improve clarity and robustness of file validation logic
added new files ` Switch21 . java ` and ` Switch19 . java ` with methods for pattern matching , null , and length checks to
updated error messages in ComparableSubjectTest to use " test . MyTest . ComparableType " and " test . MyTest . RawComparable
updated StreamHelper to use XML standalone flag and added a new TestStreamHelper class for testing to enhance XML processing capabilities and ensure proper functionality through
updated size validation logic and improved equality checks in Int2ObjectCache . java to ensure the capacity does not exceed the maximum array size and
replaced security filter chains with web security customizers and added a test for ordering on bean definitions to ensure correct ordering of security filters based on
removed TimeInForce . GTC from the order type in BinanceTradeService . java to simplify order type handling for market orders
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update default values to improve code maintainability and ensure minimum and maximum values are
changed KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to support tab -
camel - 14263 : camel - jms - provide documentation and parameter json schema for the jms component .
added error handling for bound retrieval in SourceUtils and created a new test class for bound retrieval to improve robustness and ensure correctness of bound
refactor LeafFilterFactory to use a separate method for building FilterPredicateLeafBuilder based on Parquet type to improve code readability and maintain
modified the originalArtifactName assignment logic and added cleanup methods in JobContextFactoryBeanTests and StepSynchronizationManager to ensure proper resource management and prevent potential
updated SSL certificate handling in HttpsSegmentFetcher to read multiple certificates at once to improve certificate management and provide better visibility into certificate serial numbers
changed the return type of ` getDefaultBooleanValue ` from ` boolean ` to ` String ` and added a new class ` DnsFallback ` to
ww - 4352 add more information to exception when tag write fails
changed the data type of the ` success ` variable from ` boolean ` to ` String ` in ` DepositAddress . java ` to
replaced the ` Privilege ` implementation with a lambda expression that
removed " address " from the list of scopes in CommonOAuth2Provider and CommonOAuth2ProviderTests to simplify the scope selection by removing unnecessary
added a new ` Start ` class and modified the submit method in ` ManagedSelector . java ` to improve synchronization handling to ensure that the selector
added constants for hue65535 and saturation255 in WLedHandler and updated request logic in WLedBindingConstants and WLedHandler to
replaced the method ` isValidCaller ` with a static final set of valid caller names to improve code readability and maintainability by using a
added a new method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to handle different JSR
add transactionmanager to the subscriptionactivatingsubscriber to ensure that subscription be register in a transactional context
refactor database update and insertion logic to use a StringBuilder for prepared statements to improve readability and maintainability of the code
removed elevation setting from ContactItemInflater for devices running Lollipop or higher to ensure consistent elevation behavior across different Android versions
renamed the variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in variable naming
replaced manual file reading and writing with a privileged action in SandboxFileManager . java to enhance security by ensuring that file access is
updated GroovyParserVisitor , GroovyPrinter , G . java , GSpace . java , and GSpace . java to handle the " [ "
updated warning log message to include the class name of the exception to improve clarity of warning messages for better debugging
updated character handling in RecordInputStream and UnicodeString classes to use byte instead of char to improve handling of compressed characters and ensure correct data type conversion
added a test for downloading a file with Norway characters in the name to ensure that the download functionality correctly handles file names containing special characters
replaced ` RuntimeException ` with ` CancellationException ` and added cancellation checks in ` AsyncResource ` , ` FingerprintScannerSample ` , and
added a null check for statistics before handling the cache call to avoid potential NullPointerExceptions when statistics is null
refactor MongoTemplate and MongoDbFactory annotations and add a new test method for removing objects from an explicit collection to improve code clarity and
update copyright year to 2022
corrected formatting of the return statement in Coder . java to ensure consistent line endings in error messages
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and refactored scroll logic in ` RecentsView
refactor HiveIcebergMetaHook to use a standardized map for HMS parameters to improve maintainability and readability of the code
added a method to check if an address is already in use in multiple classes to improve error handling by preventing duplicate address conflicts
added a command - line argument for the test class path in TestNestmateAttr . java to specify the path for the test class
updated logging mechanism in Grep . java to use a more descriptive variable name to improve code readability and maintainability by using a more
fix checkstyle issue in java . rmi
# 1745 - enh : add support for nested nested savepoint in nested transaction
replaced ` int ` with ` ThreadLocal ` for fetching size in ` QueryProcessExecutor ` to improve thread safety and management of fetch size
[ java ] do n ' t use shared network idle strategy for embedded ping pong .
refactor HttpClientIntroductionAdvice to use a new method for handling blocking calls to improve code readability and maintainability by redu
added support for setting and logging HDP _ VERSION in SliderAppsViewControllerImpl . java to ensure the application uses the correct HDP
refactor JavacProcessingEnvironment to improve ServiceLoader handling and close logic to enhance resource management and prevent potential issues during service reloads
updated ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize DeepCloner for object cloning to improve object
bind the Boolean class annotated with WebServer . JETTY _ SHOW _ STACKTRACE to false in ResourceBase . java to disable stack trace
added a check to return null for the object type in NativeObject . java to handle cases where the object is an OBJECT type to avoid potential
replaced instances of ` OopField ` with ` BasicTypeDataBase ` and introduced ` wellKnownKlasses ` to improve type
updated JwkKeyListView to register RSAPublicKey and ECPublicKey classes with base64 encoding for modulus and exponent to enhance data handling
[ gr - 32913 ] use only writable boot image heap when spawn isolates = false .
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage for unsupported MBean features
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unnecessary dependencies and improve code clarity
added getOwnerAddress ( ) method to multiple Actuator and TransferActuator classes to enable retrieval of owner address for enhanced transaction validation
http : / / issues . apache . org / activemq / browse / amq - 2858 - add a demo app for
updated ZCOUNT , ZRANGEBYSCORE , and ZREVRANGEBYSCORE commands to handle min and max values with " - inf "
added checks for empty indices in node and edge builders in ProtobufAnnotationSerializer . java to ensure that empty indices are correctly set for nodes and edges
[ java ] remove the correlation id from the command id set to avoid race condition .
added saveConflict method calls in FileDataStorageManager and updated related files in FileDownloader and FileUploader to ensure proper handling of file conflicts
added generic type parameters to multiple classes for improved type safety to enhance code clarity and prevent unchecked cast warnings
replaced imports from ` org . apache . solr . common . util . strutils ` with ` lucene . analysis . charfilter `
added logic to set remarksReporting and useInformationSchema for Oracle and MySQL drivers to enhance compatibility with Oracle and MySQL databases
updated the constructor of ` MethodInterceptor ` to accept a ` handler ` parameter and added a serialVersionUID to the ` mockedMethods ` set to
replaced the use of ` Date . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time calculations to improve accuracy of time
refactor execution context handling by replacing ` TableEnvironment ` with ` wrapClassLoader ` in multiple files to improve clarity and consistency in class loading
added buffer change handling in TerminalView and TerminalTextViewOverlay to ensure proper scrolling behavior when the buffer changes
added a line breaks and improved formatting in the processConfigFile method to enhance code readability and maintain consistent formatting
refactor freeze operation logic in OperationActions . java and remove the disabled freeze operation in OperationRegistry . java to improve code clarity and ensure
added an ` _ insecure ` flag and corresponding getter and setter methods in ` TlsConfig ` , and updated trust manager creation logic in `
refactor package search logic in JavadocTool . java and add a new class T7091528 . java to improve code readability and
updated the handling of edgeColumns in ExporterGDF to use case - insensitive comparison for title comparisons to ensure case - insensitive matching for edge
added cascade to the @ OneToOne annotation in DefaultUserInfo . java to ensure that related entities are automatically persisted in the database
replaced hashCode ( ) and hashCode ( ) methods with equals ( Object o ) and Arrays . equals ( Object o ) to improve object comparison
updated character encoding in AsyncProvidersBasicTest from " ? ? ? ? ? ? ? ? " to " \ u017D \ u
[ hotfix ] [ rocksdb ] remove unused method iskeyserializertypevariablesized
added a method ` getStaticPermissionsField ( ProtectionDomain pd ) ` to ` ProtectionDomain ` and updated ` SubjectDomainCombiner `
added null checks in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers classes to
refactor parsing logic in Parser . java to improve readability and maintainability to enhance code clarity and ensure proper handling of braces during parsing
added ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` , ` UploadMediaDetailsContract ` , and ` UploadMediaPresenter `
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to check for unsupported media types to ensure proper handling of
updated bitwise operation to use long literals instead of bitwise operations to ensure proper handling of larger bit indices in the NodeBitMap
refactor ImportLayoutStyle class for improved readability to enhance maintainability and facilitate future updates
refactor ConsoleUIService to utilize terminal configuration and streamline input handling to improve readability and maintainability of the code
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito for account manager callbacks to improve test readability and maintainability
replaced the private final enclosingType with a direct reference to wrapped . getEnclosingType ( ) to simplify the code and improve readability by
renamed methods in Pairs , InPairsExpression , and TestCacheViaComplexNaturalKey3 to " entries " and " concatSeparator
hbase - 25835 fix npe in putallcallable ( # 4338 )
fix npe in mqclientinstance when there be no consumer
[ java ] generate source identity from source address when create a new correlation id .
added a new file ` TopTabAction . java ` to implement a toolbar that displays a lalal tab to enhance user interface by providing
camel - 16400 : fixed dynamicrouter endpoint to work with all match mode .
updated import statements and added JUnit annotations in AggregateItemReaderTests . java to improve test structure and ensure proper setup for each test class
added generic parameter ` < T > ` to the Procedure constructor in ` AbstractObjectValueTypeMap . java ` to improve type safety and flexibility
updated import statements and added methods for retrieving Wikidata edits in AchievementsActivity , NetworkModule , and OkHttpJsonApi
added a validation check for the length parameter in OfflineSorter . java to ensure that the length does not exceed the Short . MAX _ VALUE
use absolutevalueaccumulator instead of integer . max _ value for long . min _ value
refactor multiple dataset classes for consistency and clarity to improve maintainability and readability of the codebase
added detailed error messages for invalid credential types in ProvisionClusterRequest . java and updated tests in ProvisionClusterRequestTest . java to improve clarity
updated random float value generation in TestVectorUtil . java to ensure consistent behavior and prevent out - of - range range errors
changed the return type of the compareBy method from int to long and refactored the time comparison logic to improve performance and clarity in
added SSL property handling in TestUtil and modified test assertions in PGPropertyTest to enable SSL configuration and ensure proper testing behavior
danielwagnerhall : enable safebrowsing by default in ChromeDriverFactory and add unit tests for file downloads on
added null check before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding settings based on renderer
updated DataTable , TableDiffer , TableDifferTest , and TableDifferTest to handle empty and non - empty lists to improve robust
added a new constant ` CustomIgnoreTag ` and a condition to remove it from the section ' s native code if it starts with it to
camel - 16400 : do n ' t throw a stale record version error if we fail to update a record
add support for parent config property . fix # 3036 ( # 3037 )
updated PreferencesActivity to extend LimitlessIDEActivity and added onInsetsUpdated method for toolbar and fragment padding to ensure compatibility with LimitlessIDE
deleted the ClusterNodeInfo . java file to remove unused class to streamline the codebase
updated return statement in ShieldedTransferActuator . java to ensure consistency in return values
added debug print statements for standard and legacy ciphersuite in ServerHandshaker . java to facilitate easier troubleshooting
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates more effectively to improve user experience
added functionality to handle duplicate node labels in ImportContainerImpl and updated related logging in ImportContainerParameters to improve error handling and provide clearer logging
added a new file R2303044ListSelection . java that implements a list selection functionality to demonstrate item selection in a
[ java ] avoid duplicate correlation id in the publication registration map .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure correct handling of compound properties in
refactor row count calculation in StatsRulesProcFactory to use a single list to improve efficiency by directly utilizing the row count from parentStats
added path and path parameters validation in SpringBootDocBuildTemplate . java and refactored stream processing in DocUtil . java to improve path
improve performance by avoid unnecessary object creation
changed the type of ` cachingBuildEngineDelegate ` from ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` and updated
improve error message when json parse fails
added a debug check before logging the filtered and not added widget tray message to reduce log verbosity and improve performance by avoiding unnecessary string formatting
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase and added a new test for discount overlaps boost in TestSimilarityBase to improve accuracy
replaced direct calls to ` mailSender . send ( aryEq ( items ) ) ` with ` verify ( mailSender ) . send (
added exit and quit methods to Global . java and removed it from ScriptingFunctions . java to streamline the code by consolidating exit and
refactor application context initialization in LoanBrokerSharkDetectorDemo . java to improve code readability and maintainability by reducing duplication
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
[ vmware ] fix npe if no cookie be find in vw - web service request context
corrected spacing in assertions in ResinAcegiAuthenticatorTests . java to ensure consistency and correctness in authority assertions
updated bigIntegerToBytes calls to include 32 bytes for r , s , and r to ensure proper size for 32 - bit values in ECKey
changed the property name from " fml . disabledMods " to " fml . modStates " in the Loader class to reflect the
refactor account selection handling in ReceiveExternalFilesActivity to use a dedicated method to improve code readability and maintainability by encapsulating account selection
[ hotfix ] [ stream ] improve exception message when client can not connect to the stream
added a check for an empty result from the validator smart contract call to ensure that an exception is thrown when an unexpected result is encountered
updated TexturePackerFileProcessor to handle empty JSON files to improve robustness by avoiding potential null pointer exceptions
removed conditional check for datasource and datasourceJNDI in PooledConnection . java to simplify connection handling when no datasource is specified
updated the TARGET _ MB and WINDOW constants , and modified the count calculation in TestRefprocSanity . java to optimize memory usage and
added null checks for ` currentConsole ` before calling ` write ` in ` EditorConsole . java ` to prevent potential NullPointerExceptions when ` current
added a call to set the credentials refresh delay in KinesisConfigUtil . java to ensure that credentials are refreshed for improved reliability
refactor dialog handling by introducing a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
renamed the loop parameter from " priv " to " pack " and added a " - package " argument to enhance clarity and control over
update jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest and TestBadUseCases
updated import statements and added a check for dependency requirements in PluginBundleManager . java to improve code clarity and ensure only required dependencies are processed
added a set of ZipFileInputStreams and modified releaseInflater method to close them if they exist to ensure proper resource management and prevent memory leak
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` across multiple files to improve clarity and consistency in naming conventions
[ flink - 15602 ] [ connectors / common ] mark source context as temporary idle when there be no key range .
rename ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` in ` BlobServer . java ` and ` BlobServerGetTest . java
replaced ` findAny ( ) ` method with ` findFirst ( ) ` and ` getAnnotations ( Class < T > type ) ` in `
added support for " ppc64 " and " ppc64le " architectures in the Bits and ByteArrayAccess classes to ensure compatibility
updated the exception message in RoboMonitoringInstrumentation . java to include a link to the GitHub link to provide clearer information about the issue
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES instead of MINUTES to ensure proper handling of long timeout values
replaced instances of ` new Date ( ) ` with ` Instant . ofInstant ( moment ) ` in ` DateUtilTest . java `
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to inform users that the YouTube Player does not work on Lollipop yet and waiting on an update from Google
added error handling for SQL parsing position errors in Parser . java and corresponding test cases in StatementTest . java to improve robustness of SQL parsing
add a null check for mvibrator . hasvibrator ( ) to prevent crash .
updated column background color and arrow head assignments in DotRenderer . java to improve visual consistency and clarity in the table structure
added a method to check if a encoded configuration variable is encoded in HiveConf and modified the print statement in SetProcessor to handle encoded configuration values
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate handling logic to enhance code maintainability and readability
validate that the default uri be a valid uri ( fixes # 3903 )
refactor ` NetworkedCacheableImageView ` to use ` NetworkedCacheableImageView ` for loading images to improve image loading efficiency
removed the ` View ` parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve usability
updated controller version handling in DependencyBank . java and BuildScriptHelper . java to utilize the latest version of the controllers to ensure compatibility with
refactor methods in LaunchedURLClassLoader for improved clarity to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to utilize a new RowMapper for retrieving a single result set to ensure the correct number of columns is returned from the
add no - cache header to avoid caching
updated warning message formatting to use Locale . ENGLISH for better readability to ensure consistent formatting of warning messages across different locales
refactor SolrQueryParser constructor to include an Analyzer parameter to enhance flexibility and maintainability of the code
updated copyright year in multiple Java files to ensure compliance with licensing requirements for Universal Gcode Sender ( UGS )
removed unnecessary line breaks in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper size allocation for VoidColumnVector instances
updated variable name from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using the request ' s name instead
removed the ` isTypeMatch ` method and simplified the configuration addition in ` AbstractConfig . java ` to streamline the code by eliminating
[ java ] reset session header before send a message to avoid corruption .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndexXForwardedRemoteAddressResolver
feat ( bootstrap ) : add nobootstrap annotation to prevent bootstrap inserter .
hbase - 25850 tabledescriptorchecker should use tabledescriptortable . maxfilesize and tabledescriptortable . memstore
replaced ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to ensure correct handling of commit lists based on
added InvocationTargetException to main method and run method signatures in bug6794831 . java to improve error handling and ensure proper execution of methods in
added a constant for the BuildId and refactored related methods in CachingBuildEngine to use it to improve code readability and maintain
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve readability
remove redundant call to ` markAsDone ( future , channel ) ` in ` HttpProtocol . java ` to streamline code by elimin
added import for TezConfiguration and integrated it into TezConfiguration in TezConfigurationFactory to facilitate the use of Tez
added null check for keyPurposes in TimestampedSigner . java to ensure robustness by preventing potential NullPointerExceptions
updated conditional logic in CustomPlaybackOverlayFragment . java to improve clarity to enhance readability and maintainability of the code
added a method to forget recent sounds in OpenALAudio . java and implemented a forget method in OpenALSound . java to improve sound
refactor SimpleBasePlayer to handle position discontinuity changes more effectively to ensure that position discontinuity is reported only once during
added new DecimalFormat instances and new number tick units in NumberAxis . java to enhance the representation of number ticks in the user interface
replaced instances of ` SetTargetGraph ` and ` SetBuildTargets ` with ` TargetGraphAndBuildTargets . of ` in multiple files
removed the IndexFileNameFilter class and updated file handling logic in IndexFileDeleter , IndexWriter , and TestIndexWriter classes to streamline
add a fullbounding box check for the entire entity ' s collision bounding box instead of the entire entity ' s collision bounding box .
added a compressionLevel parameter to various methods in ApkBuilder and SignedJarBuilder classes to allow specification of the compression level for better control over
added a new test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to ensure static fields are correctly included in the
added support for handling BYTES data type in MetricFieldSpec and related classes to enhance data handling capabilities for byte data types in the application
updated string formatting in multiple failure messages across multiple test files to improve readability and consistency of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
updated SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and ForumService to utilize CacheManager
update pronunciation model to use locale prefix if available
[ mondrian - 533 ] fix npe in simplehttp when request body be empty
added a dispatcher to the ClientSideSlb and ClientSideSlbTest classes to ensure proper resource management and shutdown of the executor service
modify texture positioning logic in TextureRegion . java to accommodate flipping to ensure correct rendering behavior based on texture flipping conditions
improve error message when discovery strategy configuration be miss
added null check for contextPath in MetricsPublisher . java to ensure contextPath defaults to " NA " when it is null to avoid potential NullPointerExceptions
[ drools - 7 ] fix nullpointerexception in projectclassloader # reinittypes ( )
added serializationHeader . B _ TREE _ MAP _ ROOT _ HEADER byte and its value in BTreeMap . java to ensure correct serialization
added precompiled header handling and validation in AbstractCxxSourceRuleFactory and AppleDescriptions classes to ensure proper usage of precompiled headers and
added a new ` AccWeakReference ` class to manage access control contexts during image updates to enhance security by ensuring proper access control during image
updated import statements and modified method visibility in ObjectMap , ObjectSet , OrderedMap , and OrderedSet classes to enhance encapsulation and improve code
changed isDirect variable from true to false in VertexBufferObject . java to correct the logic for determining if the vertex buffer is directed
mary client : fix npe in getaudioeffecthelptext ( )
changed return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to ` Vector2 ` to
pdfbox - 5764 : fix buffer . read ( bytebuffer ) to use limit instead of capacity
added a null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing calculations for folder containers in CellLayout and DeviceProfile classes to improve layout consistency for folder items in the user interface
refactor valueNumeric handling to use a new class ValueNumeric for improved readability to enhance code maintainability and facilitate easier
added a condition to check if the response is not deferred in FormAuthenticator . java to ensure that login errors are not checked for deferred responses
updated command - line argument checks from " module - startd - ini = " to " add - to - start " to improve clarity
added a default partition value and updated dynamic partition handling in DynamicPartitionFileRecordWriterContainer . java to ensure dynamic partition values are initialized with a
[ hotfix ] [ stream ] add null check for operatorfactory
updated return statements in DefaultArtifact . java to include classifier check for better clarity to ensure proper formatting of artifact identifiers when classifier is present
camel - 16400 : fix issue with kafka consumer rebalance when subscribe to topic . thanks to michael klink for
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when dependencies are missing
change plugin . jabberaccregwizz . GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATION
doc : [ cryptokey ] add miss license header ( # 658 )
updated expected message count in LumberjackMultiThreadTest to use a dynamic concurrency level to improve test stability by accommodating larger
fix glowplayer . getdisplayname ( ) to check if the player be not dead
refactor Exchange class to improve code readability to enhance maintainability and facilitate future feature additions
api key and secret key must be specify with apikey in updateusercmd
refactor switch - case statements in MfaProvider , JdbcMfaProvider , IdleTimer , and SamlServiceProviderConfiguratorTest to use a
refactor AbstractMetaDataExportMojo to improve code structure to enhance maintainability and readability of the code
added SQLIntegrityConstraintViolationException handling in Hive . java to throw a specific HiveException when dropping tables due to materialized views to ensure proper
corrected a typo in the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with the naming convention for
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . android . util . concurrent . Rob
added conditional checks for root group before adding subgroups and sorting them in the menu to ensure proper handling of root groups in the GroupTreeView
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and improved path validation to enhance clarity
refactor TestDynamicNumberOfGCThreads to use dynamic arguments instead of hardcoded strings to enhance flexibility and maintainability of the code
changed return types of getHostFlavorMap and related methods from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuild
updated SQL creation logic and parameters handling in CreateTable . java and CreateTableDeParser . java to improve clarity and functionality of table creation
added alpha value to the background drawable in ChatViewerFragment to enhance the visual appearance of the chat background for better user experience
test : migrate ctiteratortest to junit 5 ( # 4523 )
added calls to token . clear ( ) in CharTokenizer , KeywordTokenizer , TokenStream , StandardTokenizer , and StandardTokenizer classes to ensure proper
add a new test class ASTInitializerTest to verify that the astinitializer do n ' t crash on a block statement
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to include a null check for configurationurers and added error handling to
danielwagnerhall : remove unnecessary check for ` ` link = ' ' in ` ` elementfinder ' '
fix float to string conversion for java . math . float .
remove unnecessary call to currentunitofwork . get ( ) in aggregatelifecyclelistener
replaced ` insetsIsTouchableRegion ` with ` TOUCHABLE _ INSETS _ REGION ` in ` TaskbarDragLayer
removed a condition that checks for a ' ~ ' in the FencedCodeBlockParser to simplify the code by eliminating unnecessary parsing
added support for a configurable socket timeout in ConnectionFactoryImpl and BaseDataSource to allow users to specify a customizable socket timeout value for improved
added a sleep delay in ElementAttributeTest . java to handle potential interruptions during test execution
added UTF - 8 encoding to the InputStreamReader in HttpUtils . java to ensure proper handling of character encoding during input stream reading
refactor List class implementation to improve code readability and maintainability
added URI handling to AsyncFileImpl and modified AsyncFileImpl to use Path instead of URI to improve error handling for file operations and ensure proper
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that CucumberEngineExecutionContext is in
fix npe in NuageVspManagerImpl when hostid be null
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity
updated Java version checks from ` getJavaVersion ( ) ` to ` classFileVersionJava9 ` in ` ConstantPoolTagTests . java ` to
improve error message for recompile with - xlint
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to provide a way to remove all HTTP headers from the client
replace Vector with ArrayList for better performance and readability to improve performance and maintainability by using modern Java collections
updated the DEFAULT _ GRID _ COLUMN constant from 4.0 f to 3f to adjust the default grid size based on user preferences
added a condition to check if the view creation is not needed in the Calcite planner to ensure that the planner correctly handles views that are not
updated date pattern pattern in TestHS2HttpServer . java to use regular expressions instead of regular expressions to improve readability and maintainability of
handle potential exceptions when retrieving an object from snippetReflection to improve robustness by preventing application crashes due to reflection failures
simonstewart : add a test to verify that we can access a page with an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool and added a new test for excessive memory allocation in TestByteBlockPool to ensure correct handling of
changed static fields to instance variables and modified string formatting in InteractionValueEncoder . java to ensure consistent formatting across different locales for better readability
do n ' t swallow uncaught exception in tcptransport . close ( )
add @ suppresswarnings ( " serial " ) to suppress warning
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebug
add ` ` save / discard ' ' and ` ` return to ` jabref . main window ' ' confirmation dialog
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in OAuth20AccessTokenEndpoint
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure proper validation of buffer elements during
added input format class parameter to the initTableMapperJob method in TableMapReduceUtil . java to enhance flexibility in handling different input formats during
removed redundant call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code by
sulong : throw an exception when access to non - existent language .
added deprecated commit duration handling and validation for the ' reserve ' parameter in ReplicationHandler . java to ensure compatibility with Solr 7.1 and enforce
rename variable ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` and update related references in ` AbstractData
change the data type of the ` generateECKeyPair ` method from ` long [ ] ` to ` Object [ ] ` and update related native
[ flink - 20613 ] [ runtime ] allow restarting to suspend job in cancellation state
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation of ` RotationTouchHelper ` to simplify object creation and
refactor code for better readability and performance in UniFiControllerCache . java to improve code maintainability and reduce boilerplate
rename the variable ` lwp _ id ` to ` unique _ thread _ id ` in ` BsdDebugger ` and ` BsdThread
remove old offer from the list if they have the same id
use constant ssl _ proto _ tls instead of hardcoded string
updated MockitoMethodInvocationControl and SystemClassUserTest to handle Class mocks correctly to improve flexibility in mocking behavior for different types of
updated NotLoadedException to use ` PartialDatabaseObject ` instead of ` DatabaseObject ` in multiple classes to ensure compatibility with the latest database object
added import for DisplayUtils and updated intent extra handling in FileDisplayActivity . java to ensure proper handling of file data in the activity
added error handling and file compaction logic in StoreDirect and StoreWAL classes to ensure proper resource management and avoid potential memory leaks
added a synchronous execution of screenshot task retrieval in AbsSwipeUpHandler . java and removed redundant calls in SystemUiProxy . java to improve
added a hidden flag and its getter and setter methods in LiquibaseCommandLine and CommandArgumentDefinition classes to enable toggling of command
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to align with the new network configuration
[ geos - 8470 ] use stylegroup . getsdb ( ) instead of catalog . getdatasld ( ) for geoserver
added permission checks for launch intents in InstallShortcutReceiver and modified shortcut creation logic in Launcher to enhance security by ignoring malicious intents
added ` getId ( ) ` and ` setId ( int id ) ` methods to ` TiledMapTile ` , ` AnimatedTiled
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBCConnection and SessionExample to include version parameter to ensure compatibility with version 0.13 of the JDBC driver
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo . java and updated changelog generation logic to enhance flexibility in
replaced putIfAbsent with put for registryCache in JmxRegistry to ensure registry is stored in the cache instead of putIfAbsent
plannerbenchmarkrunner : use logger . warn instead of logger . error
changed the doPutRecord method from protected to non - final in AbstractCacheRecordStore . java to allow subclasses to override the doPutRecord
updated string concatenation syntax in Tools . java and modified path replacement in FileSelectorFragment . java to improve code readability and maintain consistency in path
added multiple test methods for handling response content in FastCGIProxyServletTest . java to improve test coverage for different response sizes and ensure proper
added a call to start the ReadInteractionsService in MarkReadService . java to enable access to read interactions in the application
added a conditional check for ` lintClassfile ` before logging warnings related to ` annotation . method . not . found ` to ensure warnings are
added a configuration property for the SMTP port in Email . java to allow dynamic configuration of the SMTP server port for improved flexibility
added retry logic for SSLFactory renewal in TlsUtils . java to improve reliability and robustness of SSLFactory renewal process
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy -
updated assertion message in SpyingOnRealObjectsTest . java to clarify the reason for the exception related to Mockito visibility
added a new boolean flag ` _ isEndsOnNL ` and modified line handling logic in ` LineBox . java ` to improve line formatting
updated the logic for constructing the filePathString to handle potential null values to avoid potential NullPointerExceptions when the parent path is null
removed unused import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor the handling of ServletInputStream in NinjaServletContextTest . java for improved readability and maintainability to enhance code clarity
added properties to manage web exposure settings in AbstractCasEndpointTests to enhance security by enabling exposure filtering in the test environment
added validation to ensure the current graph is a dynamic graph before proceeding to prevent runtime errors caused by invalid graph types
do n ' t try to inject bean of type ` ` method ' ' in scope one
added support for suppressing exceptions in JsonPath expressions to enhance flexibility in handling exceptions during JSON path processing
removed duplicate instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage messages in CLHSDB and HSDB classes to include " - help " syntax to improve clarity and usability of the
removed duplicate configuration of chunk provider in FaultTolerantStepFactoryBean and SimpleStepFactoryBean to streamline the chunk provider configuration process and
[ beam - 8470 ] remove deprecate write class and remove it from sdk
refactor accessibility manager methods in ShadowAccessibilityManagerTest to improve clarity and consistency to enhance code readability and maintainability by using
add group _ display _ id for statistical analytics ( # 3038 )
replaced instances of ` SourcePathRuleFinder ` and ` SourcePathResolver ` with ` AbstractBuildRule ` across multiple files to simplify code
refactor the initialization of ` enumDataTypeHelper ` in ` PostgreSQLDatabaseConnector ` to use a new ` PostgreSQLEnumDataTypeHelper ` class to
updated the log path comparison to include the File . separator character to ensure compatibility with different operating systems when verifying log file paths
replaced occurrences of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to standardize naming con
added support for dropping index tables in HiveMetaStoreClient to ensure that dropping index tables is not allowed to maintain data integrity
added visibility check before updating disabled flags in RecentsView . java to ensure scrolling is disabled when the view ' s visibility changes
added a conditional highlighter for non - Windows OS in Repl . java to enhance syntax highlighting for non - Windows environments
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 548 .
fix hadooppinotfs listfiles method to always contain scheme ( # 7027 )
updated the removeCaptureListener method call in SelectBox . java to ensure proper functionality of the listener removal process
change the value of _ metaDataComplete from true to false to update the status of metadata processing
modified the ` removeTaskTarget ` method to be executed on a separate thread in ` RecentsAnimationController ` and modified bitmap creation logic
added environment variable handling for release flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to
updated vardefinit assignment logic to handle primitive types and added a new class T6500701 with a test method to improve type safety
added unit tests for handling new line characters in comments and Javadoc in AddImportTest . java and updated AutodetectGeneralFormatStyle .
added a hubMode variable to AbstractLiquibaseChangeLogMojo and updated its usage in AbstractLiquibaseChangeLogM
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code and improve readability by elimin
added error handling for linkDb existence in IndexerMapReduce . java to ensure robustness by logging a warning when the linkDb cannot be
refactor method retrieval in LuceneTestCase to use reflection for setting the setIndexerThreadPool to simplify code and improve readability by elimin
removed the " : 5000 " prefix from the SMS address string to simplify the address format for better clarity and usability
added a copy method for job executions in MapJobExecutionDao and corresponding tests in MapJobExecutionDaoTests to ensure that modifications to executions do not affect
added a new file ` DownloadTest . java ` to implement a test for downloading images from a specified URL to facilitate testing of
corrected the language code from " es " to " spa " in multiple files to ensure consistent language formatting across the application
replaced exception handling for ROUND functions with a new exception type for non - primitive and non - string group data types to improve clarity and
add null check for selectedVersion in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
added multiple Ant path request matchers in SecurityConfig . java to enhance the security configuration by ensuring only relevant paths are processed
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a condition to check if the concrete class matches the class element before processing bean definition constructors to improve efficiency by avoiding unnecessary bean definition generation
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] use fixed delay instead of fixed schedule at fixed delay ( # 11313 )
simonstewart : remove unnecessary security check from apr .
deleted the SunToolkitSubclass . java file to remove unused code to streamline the project
refactor translation handling in DefaultRenderableSorter and add a hasRotationOrScaling method in Matrix4 to improve code clarity and maintainability
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` to verify type handler registration to address issue #
added a method to convert a raster to an RGB image if the alternate color space is PDLab to improve color handling for PDLAB
updated URLs to use BuildConfig instead of CommonsApplication constants to improve configurability and maintainability of the code
( chore ) camel - http : add health test base on user forum issue
added a null check for block position before accessing it in EntityThornChakram . java to avoid potential NullPointerExceptions when accessing block state
added a test for altering a table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure correct handling of partition
updated offset initialization in FileFloatSource . java and added random assertions in TestFunctionQuery . java to improve code clarity and enhance test coverage
removed DrillMongoConstants . ID from the fields in MongoRecordReader to ensure data integrity by eliminating unused fields
added disposal methods to YeelightHandlerBase and DeviceBase , and modified connection handling in WifiConnection to improve resource management and
added support for auto - increment in InnoDb database schema to ensure proper parsing and error handling for integer values during auto - increment operations
fix ( kubernetes - client - api ) : fix sharedindexinformerfactory . getexistingsharedindexinformers ( )
server : fix npe when delete private template detail
refactor ShadowBitmapFactory to utilize RobolectricBufferedImage for image size retrieval and simplify color array initialization to improve code clarity
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up obsolete code and improve maintainability
[ drools - 7 ] move stocktickstream . drl to the example directory ( # 1305 )
added legendTop variable and updated offset calculations in PieChart . java to ensure correct positioning of the legend based on its full height
added a check to return early if the world transform ' s det ( ) is zero in BaseShader . java to optimize performance by avoiding
add a new file ` maryscriptcreator . java ` that creates a mary script from input and outputs to facilitate the
nifi - 1181 : fix restlistener . remote . source . host not set in session
fix compaction log file deletion in levelcompactiontsfilemanagement ( # 5338 )
updated URL attributes from " xlink : href " to " href " in ComponentDescription . java to ensure compatibility with the updated XML standards
camel - 15836 - camel - aws2 - s3 : make the executor name configurable
hbase - 25836 addendum make isclustershutdown public and add state check in assignmentmanager
added null check for span before logging in Slf4jSpanLogger and improved warning message formatting in DefaultTracer to enhance code robustness
trim whitespace from the active option value before adding it to the configuration to ensure consistent handling of active options by removing leading and trailing spaces
added preference handling for wallpaper depth effect in DepthController to allow dynamic adjustment of wallpaper depth based on user preferences
added an assertion to check the success count of the overseer action in OverseerTest . java to ensure that the overseer
removed the method ` getKernelVersion ( ) ` and simplified the return statement in ` LinuxFileStore . java ` to streamline the code
refactor ExecConstants to improve code readability to enhance maintainability and facilitate future updates
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better testing accuracy
added a new method ` setScanAttributeForPaging ` in ` TableSnapshotResultIterator ` and ` ScanUtil ` to utilize the
added a check for the lowRange value in Request . java and RequestV2 . java to ensure that the lowRange value does not exceed
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and modified estimateCacheSize calculation in AsyncWriteCache and WriteCache classes
ambari - 20686 . zoneid should be zoneuuid instead of hostuuid to ensure that the correct zone uuid is used for host
[ zeppelin - 4892 ] fix utf - 8 encode issue in spark interpreter
updated filesystem removal logic to include the zfs parameter to ensure that the removal operation operates on the correct object context
replaced the ` obj ` variable with a ` json ` variable in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON
increased the poll timeout duration from 2 milliseconds to 3 milliseconds in SoftAutoCommitTest . java to increase the responsiveness of the
log a screenshot if any of the listener throw an exception ( # 1181 )
refactor multiple Dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
updated error logging formatting in SyncQueue . java to improve code readability and consistency
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features
updated ` BootClassLoaderHook ` to use ` getAdditionalBootstrapPaths ( ) ` instead of ` getBootstrapPaths ( ) ` and added a new
fix patchy library not find when use mojang 3.0
[ hotfix ] [ yarnitcase ] remove unused yarnclient parameter
add empty local map stats per map when there be no data
deleted the AllTests . java file to remove unused test classes to streamline the codebase
added support for non - breaking hyphens and zero - width spaces in AbstractWordConverter to improve text formatting for better user experience
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` to improve code clarity
added a new flag ` eventHandled ` in ` UIText . java ` to indicate if the event has already been handled
deleted the ` Controller . java ` annotation and renamed the ` Weldby ` class to ` WeldModule ` to streamline the codebase
ruby flavor : do n ' t monitor empty group in empty check
changed the access modifier of the ` liquibaseProLicenseKey ` variable from ` System . getProperty ( ` LIQUIBASE _ PRO
refactor setmemberreader method into a private method setMeasureshierarchymemberreader to improve code readability and maintainability
add - g debug info option to generate debug information
mondrian : fix typo in mondrianproperties . java
added support for friend paths in Kotlin compiler and library configurations to enhance functionality by allowing users to specify specific source paths for Kotlin
added aliases for BATK , BRAH , and MANDAIC in Character . java and refactored main method in Check
updated equality checks in ExecutionCommand and added a new method in StageUtils to convert JSON to ExecutionCommand objects to improve object comparison accuracy and enhance
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated CSSParser to handle percentage and number parameters in the cmyk ( ) function to improve error handling and ensure parameters are within valid range
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to verify the functionality of reverse range scanning in the LocalIndex
updated imports and test methods in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry
updated toast messages to use localized strings across multiple activities to improve internationalization support for better user experience
removed unnecessary condition checks in RendererUtilities . java and added a new test for XYSeriesCollection in RendererUtilitiesTests . java to simplify code logic
refactor KrakenStreamingAdapters to use ArrayNode for retrieving values from ticker to improve type safety and readability by using a dedicated method
added a try - catch block around SQL execution in FileContentProvider . java to handle SQLite exceptions when upgrading from 24 - > 30 to
removed System . err . println statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored data size calculation in ConvertJoinMapJoin . java to improve memory management and efficiency in data size
updated the ` buildView ` method to use ` Context ` instead of ` LayoutInflater ` and added styled attributes for the selectable item
added an optional assertion for authentication in SecurityMockMvcResultMatchers to enable flexible authentication handling based on user input
vpc : setgatewaynet should set vpcid to null if it ' s not set
[ flink - 10955 ] [ test ] skip flinksavepointtest until 1.11 be resolve
fix checkstyle issue in java . awt . subtitle
modified loop structure and condition checks in Actor . java to improve code readability and ensure actions are processed correctly
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and updated exchange specification to use super . getDefaultExchangeSpecification (
[ ds - 3892 ] add test case for orgunit and relationship virtual metadata
added null check for spatial before processing in LodControl . java to avoid potential NullPointerExceptions when spatial is null
updated ` lastTokenFiltered ` initialization and added new filters in ` FixedShingleFilter ` , ` TestRandomChains ` , and ` TestConditional
add stateafter to unsafestorenode and storefieldnode to ensure state be set after the node
replaced the call to ` super . putAddress ( base + offset value ) ` with ` io . putAddress ( base + offset value
added an assertion to verify that the event repository does not contain any events to ensure that the event repository behaves as expected when no events are
removed unused parameters from AuthenticationAttrProcessor . java to clean up the code and improve maintainability
added null check for the key parameter in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure that the key cannot be
added a method to set a Typeface in CodenameOneTextPaint to ensure typeface is not set in runtime to prevent runtime errors
added an ` open ` method to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
douniaberrada : remove deprecate fail ( string message ) method from webdriverrunner
removed the condition checking if the item ' s size is greater than zero in SolrRequestParsers . java to simplify the code logic for better read
refactor DefaultResultSetHandler to use a separate boolean variable for useConstructorMappings to improve code readability and maintainability by reducing redundancy
updated SQL syntax in CreateTableGeneratorTest . java to ensure consistency with SQL syntax conventions
added a filter mode check and modified return logic in VectorizationContext . java to handle filter expressions correctly to ensure correct handling of boolean values in
changed the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig > `
replace the instantiation of ReorganizeTableStatement with a direct call to modifyDataTypeStatement to simplify the code and improve readability by elimin
updated cluster name references to use constants instead of hardcoded strings to improve code readability and maintainability by using defined constants instead of hardcoded
refactor connection handling and logging in PeerGroup . java and PeerEventListener . java to improve error handling and logging clarity to enhance debugging capabilities
added conditional style handling based on string length in Nano . java to improve flexibility in rendering styles based on different string representations
refactor : use adventurenbtconverter in schematic reader ( # 1181 )
updated return message from " Use ` String ` to " No # toString ( ) on String " to clarify the reason for the message
8278369 : [ testbug ] testthreadfailure . java fail on 32 - bit jvms
fix dataprovider . getverdic ( string verdict ) to return failurecontext
change return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct retrieval of bandwidth
danielwagnerhall : add method to select pop - up , deselect pop - up , capture network traffic , and
removed the printWarning parameter from the doPrintEntry method and refactored related methods to simplify the method signature and improve clarity of certificate
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for dialog and frame properties in Dialog and Frame classes to ensure proper state management for dialog and frame components to prevent illegal state exceptions
changed the visibility of the ` state ` variable from private to private final to ensure that the ` state ` variable cannot be reassigned after initialization
updated RedisObjectFactory to utilize RedisStandaloneConfiguration and RedisSentinelPassword to enhance connection configuration flexibility for Redis connections
added lastseendelayedmessage property to track the time when a message have be delay .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify
replaced the creation of share operations with a service - based intent handling in FileOperationsHelper and OperationsService to streamline the share creation process
simplified the boolean assignment logic in BeanDefinitionInjectProcessor . java and added an import statement in FieldPropertyInject . java to improve code
replaced direct calls to ` classicPlotWorld . getMinBuildHeight ( ) ` with a variable ` yStart ` to improve code readability
added check for nullpointerexception in smackintegrationtestframework to avoid spurious failure .
added support for interop sub - directories in exif reader . thanks to michael klink for the patch .
added a new case ` ENABLED _ LS ` to ` VersionTargetGraphMode ` and updated the executor assignment logic in ` VersionedTargetGraphCache
added a condition to check if the child format is a video before processing media to ensure that only valid video formats are processed to avoid potential errors
refactor AutoMlClient and related classes for improved consistency to enhance maintainability and readability of the codebase
added functionality to load native libraries in LwjglApplet and LwjglNativesLoader to enable dynamic loading of native libraries based
added escape parameter handling and improved encapsulation logic in CSVRequestHandler to enhance flexibility in CSV parsing by allowing customizable escape characters
added validation for only Authorization Code grant types in ClientRegistrations . java and updated corresponding test cases in ClientRegistrationsTests . java to ensure
updated exception handling in Throwable and SuppressedExceptions to include additional context and improved exception messages to enhance error reporting and provide clearer context for
added a query in DerivedTableIT . java and modified the constructor of OrderedResultIterator in ClientAggregatePlan . java to improve test coverage
added functionality to handle the " RSquare " key in RegressionEvaluator and its test in StreamExpressionTest to ensure the correctness of
added request header handling to ThreadContextMDCServletFilter to improve context attribute management for better request processing
refactor code to use a local variable for MapWork instead of direct casting to MapWork to improve code readability and maintainability by redu
added methods to retrieve folder and country images in PdfJndiReport and PdfSessionInformationsReport classes to improve performance by reducing redundant image
updated caching behavior in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer . java ` and added a
sulong : fix interop type lookup in c++ .
removed redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delays
added a new file KernCrash . java to demonstrate the use of a Kerning Crash font to demon
added a fail ( ) method call in LinkedHashTreeMapTest . java to ensure the test correctly identifies and fails as expected
added a method ` getInterfaceAddresses ` to retrieve interface IP addresses based on a ` addPrefix ` parameter to enhance functionality for retrieving network interfaces
add a cleanup test for the housekeeper to ensure it do n ' t kill the executorservice
corrected a typo in the variable name from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in the conditional check
refactor assertions in Assert . java for improved readability to enhance maintainability and facilitate easier debugging
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method to ensure the correctness of
changed the type of ` results ` from ` CategoryItem ` to ` String ` and modified related methods in ` CategorizationFragment ` to
added logic to check if the current year is a leap year before validating max age in ValidatorTest . java to ensure proper validation of max age
added error handling for alarm and error codes in GrblController . java to improve error reporting by providing more informative error messages
added a conditional check for zero screens before returning the string to ensure a default label is used when there are no screens available
removed the ` count ` parameter from the ` getBittrexTrades ` method and related calls in the ` BittrexMarketData
updated method calls and formatting in ConsoleReader and MemoryHistory classes to improve code readability and ensure proper handling of null input
updated the file path construction in JavaBuild . java to remove the " . jdk " suffix to simplify the path for better clarity and
replaced calls to ` input . getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple classes
updated JFCModel constructor to accept a logger parameter and modified related methods to enhance logging capabilities to improve debugging capabilities by allowing custom logger behavior
added a check for negative tolerance in MaximumInscribedCircle . java to ensure the tolerance value is positive to prevent illegal argument exceptions
added methods for creating and droping views in TestUtil . java and a test for view privileges in DatabaseMetaDataTest . java to enhance database
added support for Expecting Stable Floats and Stable Doubles in NaNTest . java to ensure that stable float and double tests
added a new class DesktopTaskbarUIController for managing desktop taskbar UI components to enable dynamic icon visibility based on the taskbar '
fix install button not be enable when there be no mod
refactor methods in Files . java for improved readability to enhance maintainability and clarity of the codebase
replaced ` Set ` with ` Collection ` for interceptor management in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration
changed the DomainAwareServicesManager interface to extend ServicesManager and modified the ChainingServicesManager class to extend ServicesManager to enhance the functionality and
add debug log to resourcepackloader . packinfo ( ) ( # 8793 )
chore : update gapic - generator - java version to 2.1 . 0 ( # 438 )
added methods ` grow ` , ` growX ` , ` growY ` , and ` fillX ` to the ` Cell ` class to
refactor DefaultInputHandler to use generics for bindings and currentBindings to improve code readability and reduce boilerplate code
http : / / issues . apache . org / activemq / browse / amq - 2175 - fix test failure on window
changed memory allocation from long [ ] [ ] to byte [ ] [ ] and added memory fail count check in MetricsMemoryTester . java
deleted the JobParametersPrototype . java file to remove unused prototype class to streamline the codebase
added a securityEnabled flag to the MappingsTable and updated related classes to handle security configuration to enable conditional execution of rows based on security settings
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
change DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable the DUMP _ TO _
workaround for amazon audio codec with afts decoder .
[ java ] do n ' t try to set the publisher limit if there be no spy .
added a condition to check for output options when dbInfo is null to ensure proper handling of output options when no information is available
[ zeppelin - 5338 ] enable ssl by default for presto driver
added error output options to the buildDOMSubtree method in DOMConverter . java to improve error handling by allowing XHTML output
refactor assertions in Assert . java for improved readability to enhance maintainability and facilitate easier debugging
added ` retained ` option to the ` Event ` and ` Publish ` classes and updated related methods to include it to enhance functionality by allowing topic
added " testCaseName " to JSON serialization in EventSerializationTest . java to ensure accurate representation of test case name during serialization
[ flink - 20613 ] [ table - planner - blink ] [ table - planner - blink ] fix tumble
replaced ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java ` to
improve thread safety when create ssl _ cx _ set _ timeout
updated conditional check from ` cp . size ( ) = = 0 ` to ` cp . isEmpty ( ) ` in ` AppModule . java
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to standardize SQL
change log level from debug to trace in FirmwareUpdateService . java to provide more granular logging for firmware update handling
added unit tests for retrieving null dates and timestamps in GetObjectTest . java to ensure correct handling of null values for date and timestamp columns in the
refactor string handling in ` StringSubject ` , ` Subject ` , and ` RelabeledSubjectsTest ` to improve clarity and
added a test method to verify repository permissions across multiple teams to ensure correct access control for multiple teams in the user model
added a new file Test7088020 . java that tests method signature with different stack frames to ensure proper error handling for method type mis
replaced the method ` matchAudienceRestriction ` with a ` Set < String > ` for checking audience URIs in ` Saml2ResponseValidator
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve thread safety and streamline cache refreshing logic
replaced the initialization of the PrintStream with a null check for the _ stderr variable to avoid potential NullPointerExceptions when the stream is null
added a new warning constant ` SEPARATION _ ORDER ` in ` Warning . java ` and updated ` BasicEventSimulationEngine . java `
updated the method call from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure that the query optimizer uses the correct
refactor ` PhoenixHBaseAccessor ` to create ` hostMinuteAggregrateSql ` and add ` hbase . normalizer .
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass support in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of Bluetooth class functionality in ShadowBluetooth
fix checkstyle issue in uuidlistfile . contains ( )
feat ( sumfunction ) : improve error message when list be empty
fix # 1633 gephi 0.9 . 1 freeze for dynamical graph
updated coreNodeName construction in ZkStateReader . java to use getCoreName ( ) instead of getNodeName ( ) to ensure consistency in coreNodeName
add backpressure update to chat activity to make it easy to update the contact list
refactor TaggerParserPosTagCompatibilityITest . java for improved compatibility testing to enhance code reliability and maintainability
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) to BaseVectorSimilarityQueryTestCase . java to suppress
modified the condition in ` elemtype ( t ) . tag < = lastBaseTag ` and added a new class ` T7005671
updated triangle calculations in DelaunayTriangulator . java and modified test initialization in DelaunayTriangulatorTest . java
added @ Override annotations to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use Builder pattern to improve readability and maintainability of the test code
refactor state management in StackOverflowCheckImpl to improve clarity and maintainability of the state management logic
added support for SQLiteDatabase and ContentValues shadowing in Robolectric to enhance compatibility with SQLiteDatabase and ContentValues while removing deprecated methods
replaced ` graphics . initiateGLInstances ( ) ` with ` graphics . initiateGL ( ) ` in ` LwjglAWT
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` in ` BKDWriter . java ` to utilize a custom comparator
updated Locale . java to include a script parameter and initialized default locale if none is provided to ensure proper locale initialization and avoid potential null pointer exceptions
updated the method to return the last set text alpha instead of the current text alpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of warning messages
updated DefaultConfigurationTestSuite . java and TokenRevocationEndpointTest . java to use UaaJunitSuiteRunner . allSuiteClasses ( )
trim whitespace from tokens in GzipFilter and GzipFilterDefaultTest classes to ensure consistent formatting and prevent potential errors due to leading or trailing spaces
updated the assignment of the output type in Response . java to ensure consistency in output type handling
updated the default regex implementation from JDK to JONI to ensure compatibility with the latest RegExp library standards
replaced ` LooperExecutor ` with ` Executor ` and refactored ` captureViewPropertiesBg ` method to use ` FutureTask `
mary : add support for ` ` dfki - pavoque - styles ' ' voice ( dfki - pavoque
added folder creation check in GitBlit . java to ensure the parent directory exists before creating it to prevent runtime errors when attempting to create a
updated default value for nodeDiscoveryBindIp from " 0.0 . 0.0 " to " 127.0 . 0.1 "
( chore ) camel - jbpm - workitem - fix typo
pdfbox - 4892 : make class final and remove unused import
updated the class name from WorkModeToggleContainer to WorkFooterContainer and adjusted its height calculations to improve clarity and consistency in naming conventions
refactor multiple Dalvik and PseudoInstruction classes to improve code organization and readability to enhance maintainability and facilitate
refactor type parameter handling in DefaultJavaPrettyPrinter . java to improve clarity and structure to enhance readability and maintainability of the code
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder . java and modified query replacement logic in StringQuery . java to improve clarity of error messages
refactor eviction counter handling in ConcurrentLRUCache and FastLRUCache classes to use AtomicLong instead of long to improve thread safety and
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
updated the condition to check for the intended destination type instead of the local host to ensure proper type checking for Inet4Address instances
set the data root and source root of the runtime environment in the main frame to ensure the application uses the correct database configuration
added logging for solon admin client and server enablement in log
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future updates
updated statement timeout settings in MapperBuilderAssistant and MappedStatement classes to use a configurable timeout instead of a hardcoded value to improve flexibility
removed the ` hangingTscTimeout ` parameter from multiple method calls in ` JSweetTranspiler ` , ` TypeScript2JavaScript
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and Geo
updated error messages in ArtifactFilesystem . java and ArtifactFilesystemTest . java to reflect that destination should be a Build Artifact instead of a Source Artifact
tika - 3746 -- add test for jxl . xls document in summaryextractor
make sure ggbscript do n ' t trigger concurrent modification
[ java ] wait a 5 second before wait for data to be available in the nio connection .
added assertions to check if actual and expected values are equal in GuavaOptionalSubject . java and corresponding tests in GuavaOptionalSubjectTest .
updated visibility checks in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR and adjusted
added a null check for the navigation object in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
mow - 169 fix for mow - pin image not work correctly with mow - pin
updated ErrorOccuredInOnExceptionRoute . java for improved error handling to enhance clarity and maintainability of exception handling logic
updated the scheduling method from ` scheduleAtFixedRate ` to ` scheduleWithFixedDelay ` and changed logging level from ` info ` to ` debug
simplified the initialization of ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java
disabled test that hang occationally . need to revisit later
updated import statements in GuiceFactoryTest . java to include necessary classes to enhance dependency injection capabilities and improve code clarity
added a new method ` hasSystemFeature ` and ` setSystemFeature ` to ` RobolectricPackageManager ` to manage system feature
added a method to augment path properties in RCAFrameworkLoader and created a corresponding test case in RCAFrameworkLoaderTest to enhance flexibility
removed a log statement that logs the start of a cancellation watch dog to streamline logging and reduce unnecessary log clutter
added a null and empty check for enumerationValues in RADProperty . java to ensure that enumerationValues is properly initialized when no values are provided
updated variable names and logic for handling start and end text in BoxBuilder and InlineBoxing classes to improve clarity and functionality of inline box
[ amazonechocontrol ] fix npe when send telemetry data
removed conditional logic for altering database column type in UpgradeCatalog260 . java to simplify the code for better readability and maintainability
updated error messages in BaseTableDataManager to provide clearer guidance on directory permissions to enhance user experience by providing clearer guidance on
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added selector ID to the key string in the Matcher class to enhance the key ' s functionality for better selection management
corrected formatting of debug log messages in GouraudShadingContext . java to improve code readability and maintain consistency
updated taskbar visibility and alpha management in multiple controllers to improve user experience by managing taskbar visibility during device dreaming and waking states
reformatted code for improved readability in KeyExchange . java to enhance maintainability and clarity of the code
modified CockroachDatabase . java to check for JdbcConnection type before using try - with - resources to improve code safety and prevent potential
updated file index handling in ServerMainTest to ensure a default value is used when the index is - 1 to improve robustness by avoiding
added methods to retrieve the media recorder MIME type in CodenameOneImplementation , MediaManager , and ImageIO to improve access to the media
use shaderhelper . useshaders ( ) instead of confighandler . useshaders ( ) in rendertileenchanter and
[ calcite - 13500 ] druidadaptertest . testbindablefilter should use OR instead of AND to ensure that the filter
removed redundant whitespace in ZkStateReader initialization to improve code readability and maintain consistency
pdfbox - 4892 : disable external entity and doctype declaration , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` for retrieving the identifier of a client registration to provide a standardized way to retrieve the identifier
replaced a conditional check for " < script > " with a while loop in UrlHelper . java to improve code readability and control flow
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated varargs access logic to improve clarity
pdfbox - 4892 : avoid npe if border property be not set or blank
changed log level from info to debug for reconnect backoff events in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and focus on more detailed
updated ` InternalDropAllCommandStep ` to include ` HubRegisterResponse ` and modified ` attachProjectToConnection ` method to include ` projectId
replace ` & 0xff ` with ` Byte . toUnsignedInt ` for unsigned integer conversion to ensure correct handling of byte values and prevent potential
removed unnecessary spacing in the string conversion method to improve code readability and maintain consistency in formatting
changed the default dependency file from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to improve caching efficiency by using a more appropriate
change the default value of rangePannable from true to false in CategoryPlot . java to disable range pannability for better user experience
updated active page state logic in AllAppsContainerView . java to handle WORK mode switching correctly to ensure proper management of the work mode switch when
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java
added handling for CancellationException in FunctionTest . java to improve robustness by preventing further processing in case of cancellation
changed JarFileResource constructor visibility from default to protected in JarResource . java to allow subclasses to access these constructors for better extensibility
refactor DefaultTrackSelector class to improve track selection logic to enhance performance and maintainability of track selection functionality
added a sleep delay in LevelCompactionTsFileManagement . java to wait for unseqMerging to complete before proceeding with further operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test verifies the correct fee
updated SQL table references and modified test assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to improve code clarity and ensure accurate
updated Unicode handling methods in Unicode . java to improve code readability and maintainability
updated ` installAutoInstance ` method to include ` Service ` parameter and added Hive LLAP settings handling to ensure compatibility with different service versions and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56363 - sendheaders
[ beam - 8470 ] fix aws s3 key builder in s3 module ( # 3558 )
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
rename ` inner ` to ` javacProcessingEnvironment ` and ` javacRoundEnvironment ` in ` TreeBackedProcessorWrapper . java `
removed debug print statements for annotations in ParameterInfo . java to clean up the code and reduce unnecessary console output
added support for ac3 playback in PlaybackController and adjusted playback state handling in VideoManager to improve playback control and streamline video seeking
updated the return statement in LocalNode . java to return a JSON response with a value to ensure that the response contains a JSON representation of the
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement . java , DiskFileItem . java , and DelegatingStatement . java
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
changed package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
* fix issue # 358 : do not round the gap width
added thread pool and scheduler names to the client connector to improve traceability and debugging of client connections
refactor ViewResultsFullVisualizer to use private JSplitPane instead of protected JScrollPane and improve layout management to enhance encapsulation and maintain
added description for phone numbers in ScimUserEndpointDocs . java to enhance clarity and usability by providing descriptions for user phone numbers
changed class declarations from public to public in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to enforce singleton pattern to prevent instantiation and
added null checks for properties map and HTTP response handling in JsonHttpPropertyRequest and URLStreamProvider classes to improve error logging for null responses and
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a check for DEFAULT _ PARALLEL in the parallel condition to ensure that the parallel variable is not equal to the DEFAULT _ PAR
cloudstack - 6892 : fix checkstyle violation in testvmwarefactory and testvmwaremo
added handling for SCARD _ E _ NO _ SMARTCARD in TerminalImpl . java to ensure proper handling of card - related errors
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during tests
camel - 16400 : camel - bindy - do n ' t expose list to facilitate the binding of complex key -
changed default value of useowner and usetimestamp from true to false to align preference with current user preference standards
modified the method signature of ` runAndCheckException ` to use ` ThrowingRunnable ` instead of ` Runnable ` to improve error handling by capturing
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored value retrieval methods in Liquib
change default value of proxy . cert . validity from 7 to 90
modified the delta calculation logic in ThreadHandler to use a smoothDelta variable and added a lastDeltaUpdate variable to improve animation responsiveness and
added handling for pagination in HttpBatchReader and HttpScanBatchCreator to ensure correct URL parsing based on table name and configuration to improve robustness
added null check for the CompactionInfo client in Worker . java and implemented a test for FindNextCompactRequest in TestWorker . java to
added onSaveInstanceState method to ShadowFragmentActivity and corresponding tests in FragmentActivityTest to ensure proper handling of fragment state during state changes
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
added a test method to verify the parsing of simple Android color references in ColorResourceLoaderTest to ensure that the color resource loader correctly identifies and
added error handling for NoResultException in AbstractJPAQuery . java and a corresponding test in AbstractStandardTest . java to improve robustness
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 548 : collection
updated depth preference retrieval from ` l ` to ` LawnchairApp ` in ` DepthController . java ` to ensure compatibility with L
removed redundant import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` , ` Manager `
modified the ` toString ` method in ` ExtensionStack ` to handle null values for ` extensions ` and ` nextIncoming ` and ` nextOutgoing
2 . x : fix flaky flowableflatmap cancel error ( # 6335 )
added connection timeout configuration to MultiGetRequest and updated related classes to improve connection handling and enhance error logging for connection timeouts
reformatted code for better readability in AndroidPrebuiltAarDescription . java to improve code clarity and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to update the test class to use the new model
replaced SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and removed the inlineImage method in BaseImage
added a test for caching behavior in CachingBuildEngineTest to ensure output hash is not calculated when cache is not writable to improve reliability
camel - 14263 : camel - netty - add option to use bytebuffer for payload helper
updated the method call to use the table name directly instead of the old name to ensure the correct table name is used for partition alterations
updated IllegalArgumentException to specify that a Vertx instance must be created with the preferNativeTransport option to ensure that a valid Vertx instance is created
move enumtypehandlerserializertest to coretypes and add unit test
refactor StreamEx class to improve code structure to enhance maintainability and readability of the code
updated query hint settings in SessionImpl . java to use specQueryTimeout and specLockTimeout to ensure correct timeout settings are applied for JavaEE
add a new file ` StaticLoggerBinder . java ` that implements the ` LoggerFactoryBinder ` interface to facilitate the creation and
hbase - 25836 addendum remove unneeded cloning of cellutil . clonefamily ( hbase - 25836 )
updated condition to check for new and old orientation in TaskbarManager . java to ensure proper handling of window orientation changes
unescape xml in chat room occupant to ensure proper display of occupant information
removed the ` IO _ FREE _ RECID ` parameter from the ` longStackPut ` method and added a new test class ` Issue
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files and @ SuppressWarnings ( " equalsHashCode " , " selfassignment " , "
jbrules - 2852 : make executionflowcontroltest a static field so that it can be reuse by other test
updated conditional statements in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
added an ` unlimited ` parameter to the ` NBWriteServlet ` constructor and updated the ` TestWriteListener ` constructor to include it to
updated total difficulty update in BlockchainImpl and added a test for invalid block total differences in ImportLightTest to ensure accurate total difficulty
simplified the logic for managing playback actions based on player ' s current window seekable status to improve code readability and maintainability by
replace synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and update method parameters in SecurityServicesFeature . java to improve thread safety
added conditional data allocation for mRollo . mUniformAlloc and modified position calculations in AllAppsView . java to improve performance by optimizing
added a check for the presence of a colon in the key in HttpURLConnection . java to ensure proper handling of both index and index1 cases
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for principal resolution in the multifactor authentication
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve code readability and leverage Noggit ' s
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve string handling by preventing potential issues with trailing slashes
added methods for pattern matching in PatternsMatcher and corresponding tests in PatternsMatcherTest to improve pattern matching functionality and ensure correct behavior with different
hbase - 25850 improve error message for bulk load operation ( liu shaohui )
fix fading of water potion block ( # 1193 )
updated the formatting of the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
refactor calculations for decreaseFactor and decreasePercent in ContractStateCapsule , ReceiptCapsule , and ResourceProcessor classes to improve code readability
added handling for unready input in AsyncContentProducer and implemented a new test for isReadyIdempotent in AsyncIOServletTest to
removed null check for weightField in DocumentDictionaryFactory . java to ensure that a valid weightField is provided to avoid runtime errors
added variable substitution functionality for " Info . plist " in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest .
add laser turret shooting to the turret ( # 3566 )
change return type of ` adaptOrder ` methods from ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to ` OrderCreateApiRequest . Object `
added a new file ` PreParseGrammarTest . java ` to facilitate XML schema parsing testing to facilitate testing of
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java classes to suppress warnings related to missing serialization warnings
added FontManager import and font overriding functionality in ExtendedEditText . java to ensure consistent font rendering across different components
added null check for currentUser in AuthorizeTag . java and implemented a test for unauthorized access in AuthorizeTagTests . java to ensure proper handling
camel - 7999 fixed the issue of camel - cxf should check if the uri contain unsafe character
mondrian : fix unit test failure on jdk 1.6
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ restorer ] check if backend closeable registry be already close
add option to create rmi registry if rmi . create = true
replaced String . join with StringUtils . join for anticompactRanges to improve code readability and leverage built - in StringUtils for
added display metrics retrieval and updated test cases in multiple classes to ensure accurate display metrics are utilized and improve test coverage for qualifiers functionality
[ java ] add memberid to service heartbeat counter to track cluster member id .
added a conditional check for the major version of TestThreadMXBean to set the number of attributes based on the VersionCheck version to ensure compatibility
updated the evaluation logic to handle negative and positive infinity in the CustomExpression class to ensure correct handling of NaN values and improve hash code calculation
( chore ) camel - core : reduce log verbosity and improve clarity
added authentication and authorization routes to AuthenticityController and AuthenticityController classes to enhance security by enabling direct access to authentication results
added assertion to ensure nextNode is alive before processing to improve code reliability and prevent potential null pointer exceptions
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
replaced duplicate comparison logic in DefaultTrackSelector . java to streamline comparison logic for better readability and performance
[ hotfix ] [ runtime ] fix checkstyle violation in runtimeserialization
ggb - 2175 do n ' t crop the image on the screen if it be crop
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new field ` allAppsCellWidthPx ` and updated references in ` WidgetPreviewLoader ` , ` WidgetCell ` , and `
tika - 3745 -- fix nullpointerexception in mailcontenthandler when content type parameter be empty
updated the URI construction in ThumbnailsCacheManager . java to use fileId instead of remotePath to improve clarity and maintainability of the URI
less pager do not work well when use inputstreamsource , fixes # 812
added @ Deprecated annotation to multiple AsyncProcessor , BehaviorProcessor , and SerializedSubject classes to indicate that these classes are outdated and should not be used
added a configuration property to control the visibility of error stack information in the error page to enhance flexibility in displaying error information on the server
bug 10363 : add warn log for account deletion failure
remove useless foreign call check in sparcarithmeticlirgenerator .
[ drools - 5367 ] throw unsupportedoperationexception for legacy drools 5 . x api
added ` waitingForResult ` variable and refactored ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) ` to
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for tests to
avoid string # replace in style resolution for perf .
deleted files MrefStat . java and MrefStat1 . java to remove unused classes to streamline the codebase
updated scope handling in DependencyInsight . java to check for blank values before processing to ensure that " compile " is returned when the scope is
refactor error handling in BTCETradeServiceRaw to use constants for message messages to improve code readability and maintainability by avoiding
[ hotfix ] use hamcrest assertion instead of junit in test
bitcoinuri : add getpaymentrequesturl ( ) method to allow multiple payment protocol request
planner - 383 add check for collection wrapping in abstractfrompropertyvaluerangedescriptor
removed redundant assignment of folder info in mOrganizer to streamline code by eliminating redundancy
updated lock ownership checks in JfrBufferNodeLinkedList . java and refactored event writer notification logic in JfrChunkWriter . java
refactor null value handling in BasicAbstractTuple to use a for - loop for better readability to improve code clarity and maintainability by
refactor LintUtility to use InputResource for reading and parsing linter configurations to improve flexibility and maintainability of the code by utilizing
replaced direct calls to ` updateBackgrounds ( ) ` with ` post ( Runnable ) ` for updating backgrounds and paddings to
updated inventory tick handling to include a new value and adjusted the index reference to ensure inventory tick updates correctly when a player level is selected
added handling for OCELOT _ BABY in PlayerEvents . java to enhance player event management for better gameplay mechanics
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these classes are still in a volatile state and may be
added null check for ` x ` in ` PreparedStatement ` and adjusted index handling in ` Array ` to ensure proper handling of null values and maintain
[ java ] provide more detailed information about recordings in the catalog to aid troubleshooting
change string concatenation method from " \ n " to a single ' \ n ' to ensure consistent character usage across the codebase
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class and modified the ` directory ` and ` properties
added a method to remove transaction and block cache entries in BroadTest . java to improve cache management and ensure proper cleanup of transaction and block
[ AmcrestHandler and DahuaHandler ] handle ` LeLensMaskOpen ` and ` LeLensMaskClose ` content
removed unnecessary ` throws NoSuchBuildTargetException ` declarations from ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods to simplify method
refactor ChangeLogIterator constructor to accept both DatabaseChangeLog and List < ChangeSetFilter > as parameters to improve flexibility and maintainability
do n ' t swallow guest exception in launcher .
[ hotfix ] [ ec2 ] use envorsystemproperty instead of getenv in ec2utils
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
updated the logic for handling annotation parent spacing in SpacesVisitor . java to streamline the code for better readability and maintainability
# 1343 - enh : add copy ( ) method to servercacheoptions ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to address the issue where the border is not
replaced ActionGraph with TargetGraph in WorkspaceAndProjectGenerator . java and ProjectCommand . java to utilize TargetGraph instead of ActionGraph
rename ` LIVE _ URI ` to ` PROD _ URI ` and update exception handling in ` KucoinExchange . java ` to
refactor resource path handling in SpringResourceAccessor . java for improved readability and consistency to enhance code clarity and maintainability by standard
updated unit unit strings from " μ g / m³ " to " µ g / m³ " in Smart
updated vertexMask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure accurate mask representation with size packed
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
fix new entry resolution in texbibentriesresolver ( # 5338 )
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resource handling
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase to ensure correct data type handling for Firebird databases
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer . java ` to ensure proper initialization of ` DataSource
test : add package - info . java for unittest stubs
updated the command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - code cleanup - refactor ebeanserver _ savealltest
updated TermScorer to conditionally use FREQS or NONE based on scoreMode to ensure proper scoring behavior based on score requirements
[ dataflow ] fix npe when job metric be null
server : fix npe in uservmdaoimpl when delete vm
refactor DynamicPartitionPruner to use a new method for finding the target ObjectInspector to improve code readability and maintainability by reducing
added a method to remove build artifacts from the ArtifactFilesystem and its associated test cases to enhance functionality by allowing users to remove existing build artifacts before
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure the table has a valid selected row before setting it to
add a new method assertthrowsarraystoreexception so that it can be use in unit testing .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added support for user agent in the HttpClient configuration and updated HttpClientBuilder to accept an environment name to enhance flexibility in HTTP client configuration by allowing
refactor session handling in MemorySessionStore to use a dedicated method for restoring sessions to improve code readability and maintainability by encapsulating
updated assertions in IssueTest . java and changed the return type of getResults ( ) from Set to Set < Object > in Reporter . java to
updated ByteArrayDataSource initialization to use a default content type if the file ' s content type is null to ensure proper handling of null content types and
fix ( system ) : send activationrequestdenied event
removed unnecessary mathematical operations and improved formatting in GraphApplet . java to enhance code readability and maintainability
added a method to update snapshot radius for task views in RecentsView and TaskView classes to ensure consistent snapshot radius updates across task views
added logging for schema generation and modified schema revision handling in StaticMicroserviceVersions . java to improve traceability and debugging of schema generation processes
changed the return type of the put method from void to int in ArrayMap . java to provide access to the index for further operations
[ flink - 18552 ] [ kafka ] increase startup timeout for kafka container cluster
http : / / issues . apache . org / jira / browse / amq - 4892 - retry the message back if the
replaced the logic to check for duplicate headers in StaticServerHttpHeadersWriter to ensure that only headers with the same name are added to the
added package access check before loading the listener class to enhance security by ensuring package access before loading the listener class
added a new CustomAdapter class and modified the onCreateView method to include application and image lists to enhance the view ' s customization capabilities
updated the ` applyIcon ` method to include both ` iconView ` and ` task1 ` and ` task2 ` parameters to enhance functionality
refactor DownloadTracker and DownloadManager to use try - with - resources for closing the download state cursor to ensure proper resource management and automatic closure
hhh - 14850 - fix sqmtosqlastconverter to use correct clause for insert statement
added JUnit test annotations and modified method names in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to improve
added a new ` Poller ` class and modified data reading logic in ` DataInputStreamWithTimeout . java ` to improve handling of interruptions
added a new constant ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 class to improve code structure to enhance maintainability and readability of the code
rename networkparameters . testnet3 to networkparameters . testnetold
do n ' t update object panel if there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
updated HdfsIndexOutput to extend BufferedIndexOutput and refactored flushBuffer method to improve performance and resource management by utilizing buffered output
pdfbox - 4892 : do n ' t create a rectangle if the path iterator be complete , a suggest by valerybok
simplified the localAddress assignment logic in SocketChannelImpl . java to improve code readability and efficiency by reducing unnecessary synchronization
refactor TemplateTransformer to use a helper method for adding values to a row to improve code readability and maintainability by encapsulating value addition
added a method to check if the operating system is Windows and updated file renaming logic to improve error handling for file operations on Windows systems
replaced the array of characters with a constant check digit string in Code39Reader and Code39Writer to improve code readability and maintainability
added a boolean flag ` hasExecutedUnexpected ` and modified type casting logic in ` NodeGenFactory . java ` to improve handling of unexpected return
removed conditional check for stored fields in IndexingChain . java to simplify the code for better readability and maintainability
fix ( sql ) : fix intervalutils . parsefloorpartialtimestamp ( ) for timestamp with nanosecond clause
removed conditional check for postRunnableStacktraces before adding a new Throwable to simplify the code and improve readability by eliminating unnecessary conditional
updated the description of the AbstractGCSProcessor class to improve clarity to enhance readability and maintainability of the code documentation
replaced the ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to ensure that the connection is
updated directory retrieval from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory handling across different
refactor FaultTolerantChunkProcessor to simplify filter count management and streamline size handling to improve clarity and maintainability of the code
updated method signatures in FileWithTabs . java and T4994049 . java , and modified file handling in T4994049
replace direct calls to ` TerminalFactory . get ( ) instanceof WindowsTerminal ` with ` assumeTrue ( ) ` in ` ConsoleReaderTest .
[ # 7338 ] getfeedbacksessionsaction : remove unnecessary check if user be not an admin
updated selection logic in AllAppsView . java to account for a increased amount of columns to improve user experience by reducing the frequency of selection
bugfix # 207273 , do n ' t notify client on result availability when initialize threadinfo
added loading of model list and improved null handling in DataModelManagerDialog , DbConnectionDialog , and ExportPanel classes to enhance code robust
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String . valueOf ( ) ` to
updated segment size calculation in DocumentsWriter and added a new test for no documents index in TestIndexWriter to improve segment size calculation accuracy and
blender : fix npe in armaturemodifier . validate ( meshstructure , objectstructure )
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
added a new UnsupportedOperationException to avoid filling in stack trace to improve error handling by avoiding unnecessary stack trace filling
updated the calculation of label height in LabelPainter to use average line height to improve accuracy of height calculation for better rendering accuracy
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
added a check for already quoted strings in the loop to handle cases where the string is already quoted to ensure proper handling of strings that are already
replaced Long . valueOf with IdConversion . convertToLong for spanId and parentSpanId in ServletHandlerInterceptor . java and added a new
add test for http / 0.9 and add test for http / 0.9
updated SQL query string construction in TestSqlEntityProcessorDelta . java to ensure correct indexing of the COUNTRY _ CODE _ S substring
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
renamed variable ' e ' to ' ev ' and updated scope handling in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in
removed the ` throws IOException ` declaration and modified the ` doBefore ` method signature in ` TestUnifiedHighlighterTermVec . java `
added functionality to add rows to the GcodeTable using a JTable to enable users to add a number of rows to the GcodeTable
updated the connect timeout constant from WEBAPP _ CONNECT _ TIMEOUT to configuration to improve flexibility by allowing dynamic configuration of connection timeout
updated multiple Java files to improve code clarity and consistency to enhance maintainability and readability of the codebase
updated TestMediaService . java for improved media service functionality to enhance reliability and performance of media service operations
added a new constant for the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in the Messages . java file to
add a new file MarketsPrintTool . java that contains a tool for printing currency information for the BSQ currency
add validation for hostname component in endpointaddressinterceptor to ensure that only valid hostname component be treat a valid hostname
added methods to register security key start and completion in AccountProxy and HttpAccount classes to enhance functionality for handling multi - factor authentication requests
updated ServerSpanThreadBinder . java for improved span handling to enhance performance and maintainability of span management functionality
updated user pointer handling in BulletPhysics and BlockItemSystem to use userData instead of userPointer and adjusted block bounds adjustments to
updated Csv2Shape . java to include additional properties " location " , " the _ geom " , and " number " to enhance clarity
updated gas cost retrieval from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve accuracy of gas
refactor Parameters class to improve code readability to enhance maintainability and facilitate future feature additions
added a method to ignore null values in the piePlot to improve data integrity by preventing null values from being processed
refactor loading logic in ResourceBundle . java to simplify bundle loading logic to improve code readability and maintainability by reducing complexity
pdfbox - 4892 : fix typo , a suggest by valerybokov
change allowduringediting to be disable by default .
added a userModified flag to the LoginSamlAuthenticationProvider class to track if a user has been modified
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with null cipher to ensure that unseal
replaced ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added support for the SNOW material in the BlockEventListener class to ensure compatibility with server versions below 1.17 and improve event handling logic
added a lastTradeId field and updated Trade handling in CryptsyAdapters , CryptsyPublicTrade , and CryptsyAdapter
added error handling for closing the synchronized MSC connection to ensure proper resource management and prevent potential memory leaks
fix seed calculation in glowserver to use random number instead of current time
added a new device profile " Nexus 5 " to the deviceProfiles list to support Nexus 5 functionality in the application
2 . x : fix flowable . refcount ( ) . resetif ( connectionObject = = null ) ( # 5339 )
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added a new whitespace _ around _ textUAL _ OP token and updated formatting logic in FormatToken . java and FormatVisitor . java to enhance
added checks for file existence and length before processing in SaveTask . java and updated related tests in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
http : / / issues . apache . org / jira / browse / amq - 4358 - fix log4j - core
changed the PADDING property from LengthLike ( ) to NonNegativeLengthLike ( ) in PrimitivePropertyBuilders . java to ensure proper handling of
replaced calls to ` getUser ( headers ) ` with a direct call to ` createContext ( ) ` across multiple resource classes to simplify the
make methodirbuilder # buildexceptionentries more robust to handle jimple catch
updated file path handling in JUnitRunner and AndroidPlatformTarget to include additional context for build tools to improve clarity of error messages and provide
reduced the cache size from 16MB to 8MB in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if start is zero in InvocationStageTrace . java and updated the data structure in TestInvocationPublishModelFactory . java
added a try - catch block to load a KeyStore instance in ProvKeyManagerFactorySpi . java to handle potential NullPointerExceptions when loading KeyStore
updated server socket port handling in UpstreamCheckUtilsTest to use a local port instead of a fixed port to improve test reliability by ensuring
ggb - 1358 fix bug where split pane do n ' t have the correct dimension .
added conditional checks for OpenGL shader capabilities in GLRenderer . java to ensure appropriate limits are set based on shader capabilities
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
skip saveall notification for project that do n ' t have data ( # 3396 )
updated ZQLJobManager to use IOUtils for UTF - 8 encoding and improved JSON handling to ensure consistent character encoding and enhance compatibility with different
added a check to ensure arguments length is greater than zero before processing to prevent potential ArrayIndexOutOfBoundsException when processing arguments
added a prefix string to the FakeOSSOHeaderDecoder class to improve code readability and maintainability by centralizing header assignments
added @ Deprecated annotations to multiple Java files to indicate that the suffix strategy option should no longer be used and may be removed in future versions
removed unnecessary debug log statements in DerbyDatabase . java to streamline error handling and improve clarity of debug messages
( chore ) camel - cep : fix flaky test in camel - cep
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and reduce processing overhead
updated conditional checks for the " ROLLBACK " operation and added a warning message for already set liquibase . hub . mode to
added new COREINFO _ VERSION _ SUCCESS _ KEYS , COREINFO _ VERSION _ OPENJ9 _ SUCCESS _ KEYS , and TEST
updated log message formatting for font additions in FontFamily . java and added a new DebugFonts . java file to improve clarity of log
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to include HTTP _ 1 _ 1 version
added import for RateControl and set it to No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for
added a new file Test6741426 . java that defines a JComboBox and JTextField using NimbusLookAndFeel to
updated CSRF token error message assertion in ` CsrfAwareEntryPointAndDeniedHandlerTest . java ` to improve clarity of error reporting
added null checks for dbMgdPath and dbExtPath in multiple conditional statements to prevent potential NullPointerExceptions when accessing database directories
chore : move s3copyobjectrequest into s3 package
replaced the usage of ` accentColor ` with direct calls to ` setup ` methods in ` SettingsActivity ` to simplify method signatures and improve
updated error message in TemporaryFolderUsageTest to include fileAtRoot to improve clarity in error reporting for relative paths
updated type information from ` ClassTypeInformation . from ( Object . class ) ` to ` ClassTypeInformation . MAP ` and ` ClassType
add check to clientnetworkconfig to ensure address be not empty
8225896 : add " keynectisrootca [ jdk ] " to verifycacerts test
refactor compute methods to return the size of the output batch instead of void to improve method usability and provide feedback on the number of output
added a condition to check if the popup is displayed before setting the mode in ModeToggleMenu to ensure the mode is only set when the popup
pdfbox - 4892 : fix arrayindexoutofboundsexception in memorytttfdatasstream . read ( )
added new file ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to test object finalization and garbage collection to
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor receiver address retrieval logic in BurningManService . java to handle custom addresses more gracefully to improve clarity and flexibility in
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to longData initialization in BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
replace " @ " with " from : " in the recents save operation to ensure consistent query formatting by removing the " from : " prefix
removed a conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary checks
added an ` importAccount ` method to ` YubiKeyAccountRegistryEndpoint ` and its corresponding test in ` YubiKeyAccountRegistryEndpoint
chore : cleanup migrate shaders into corerendering ( # 4765 )
added null checks for ` cnt ` in ` paintOnTopLoop ` and enhanced safe area settings in ` SideMenuBar ` to enhance robust
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
updated caption assignment logic to handle null subName case to ensure correct caption assignment when subName is not provided
change data flag from IMMOBILE to GRAVITY in EntityItem . java to align data flags with the new design requirements
remove some debug junk and fix a null pointer exception
replaced the method ` requestBlindVoteListFromNetwork ` with a call to ` missingDataRequestService . sendRepublishRequest (
added a test case for the Postgres driver in a multi - threaded environment to ensure stability and reliability of database interactions in a
change double quotes to single quotes for character literals in SubtitleUtils . java and RemoteUtil . java to ensure consistency in character representation across the codebase
refactor line separator handling in DefaultJavaPrettyPrinter to use a regex pattern to improve readability and maintainability of the code
truffle : use atomicreferencefieldupdater instead of atomicreference for singleimplementor snapshot .
added null check before adding query and filters in SimpleFacets . java and updated test cases in SimpleFacetsTest . java to enhance robust
fix : merging of child thing in bridge ( # 4649 )
replace printHelp ( ) with error ( ) in Ktab . java to improve user feedback by providing clearer error messages
added a check to return the existing output file if it exists to improve efficiency by avoiding unnecessary processing when the output file does not exist
added parsing logic for date strings in DateConverter . java to handle both teeIndex and plusIndex cases to ensure proper parsing of date strings
added a query to check for a post by its slug in the repository to ensure that the repository correctly retrieves a post by its slug
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a null check for database
added a static import for SimpleClientHttpRequestFactory and set connection timeouts to 30 seconds in ClientRegistrations . java to improve HTTP request handling by
updated SourceTest . java to check for non - capitalized file paths and their names to ensure accurate source retrieval and improve test coverage for file
remove graalvm . version from system . getproperty ( graalvm . version ) ( graalvm . version = = null )
added validity checks for access token and refresh token in ClientAdminBootstrap . java to ensure proper configuration of client refresh token validity for enhanced security
updated androidAPIVersion return logic to use android _ api _ version ( ) instead of a hardcoded value to ensure compatibility with different Android API
removed unnecessary ' this ' keyword from method calls in PropertyPlaceholderHelper . java to streamline code for improved readability and maintainability
updated the number format in the certificate owner message from " # " to " 9 " to align the output format with the latest security standards
updated ZkSolrClientTest to improve collection handling and assertions to enhance test reliability by ensuring all collections are processed in parallel
added BigInteger type to simpleTypes in MongoMappingContext . java to support BigInteger data type in MongoDB operations
added a condition to check if the button text is equal in HomeFragment . java to ensure that the toast message is only displayed when the button
added a condition to check if MEncoder is not out of sync and disable MC0 and Noskip to improve synchronization handling based on
increased the default event loop thread count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more concurrent
changed access modifiers of several classes and methods from abstract to protected in CountMin4 . java and AdaptiveWindowTinyLfuPolicy .
added sorting functionality to ExternalFileField and created a new test class for sorting to enhance the functionality of ExternalFileField by allowing sorting documents in
corrected the error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to improve clarity and accuracy of
added source ID handling to event attributes in OpenRocketSaver and RocketComponentSaver classes to enhance event data integrity by associating
changed the visibility of the check method from private to protected in ShapeRenderer . java to allow subclasses to access and override the method
added synchronization handling for file operations in FileActivity to improve user experience by notifying when a file synchronization fails
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for URL encoding to improve URL safety and prevent potential issues with special
added a check for initialization and null client property in InfiniteContainer . java to ensure that operations are only performed when the container is properly initialized
update total integer initialization and addition logic in IntHashSet . java to ensure correct calculation of the total value based on the provided value
added a check for locked state before updating the feed entry in FeedRefreshUpdater . java to ensure that updates are only performed when the feed is
refactor ACE flag handling logic in SolarisAclFileAttributeView . java and Misc . java to improve clarity and
replace the ArrayList - based implementation with an array for storing edges and implement a sorted binary tree structure to improve performance and memory efficiency in managing the edge
added Apache Commons IOUtils for resource management to ensures quiet closure of input streams to prevent resource leaks
fix a bug in bibtex parser that cause the comment buffer to be empty .
added strict parameter handling and corresponding tests in Main . java and MainTest . java to improve command line argument parsing based on strict mode configuration
add alwaysinvalidconstraint annotation to allow validation of property with @ pojostereotype . fix # 3038 ( # 303
camel - 14263 : camel - http - should use http4 instead of http for the same name . thanks to joao
added a call to ` waitForThingsToLevelOut ( ) ` in ` TestCloudPivotFacet . java ` to ensure that tests have
removed Integer . MAX _ VALUE and Long . MAX _ VALUE checks from UBJsonWriter . java to simplify the code by eliminating
renamed ApplicationTest . java file to improve clarity to enhance code readability and maintainability
replace String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and readability of the code
renamed ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in the codebase
[ java ] abort the reading of all stream once dispatch be complete for archive descriptor pollers .
added cache key and lookup key handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve data
added a new file PutfieldError . java to demonstrate handling of IncompatibleClassChangeError to verify that the expected exceptions are
[ zeppelin - 5338 ] fix dns lookup for public host ( # 5338 )
patch by jbellis ; review by brandonwilliams for cassandra - 1212
replaced the usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple
removed redundant method ` encodedLength ( ) ` in ` Flyweight . java ` to streamline code by eliminating redundancy
refactor TestMethodResultMapBuilder to improve code readability to enhance maintainability and facilitate future feature additions
added handling for " java . lang . Integer " method invocation in FindNullDeref . java to prevent out - of - bounds exceptions
[ hotfix ] [ runtime ] remove unused lock in tasklocalstatestoreimpl
updated return statements in Utils . java to return appropriate string representations based on time difference to improve clarity and consistency of time representation in the application
updated conditional checks in Utilities . java and FloatingIconView . java to utilize DeepShortcutView for icon retrieval to improve handling of deep
updated JwtIssuerValidator to use a predicate for validation claims instead of a string to enhance flexibility in issuer validation by allowing multiple claim values
updated method names and imports in Coinmate classes for consistency and clarity to improve code readability and maintainability by standardizing method names
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it to conditionally load ` COBERTURA
added a check to prevent multiple registration of the same instance in EventBus to ensure that only one instance of ThumbnailView is registered to avoid
added ascii - only check to normalization methods in NormalizerBase . java to ensure that only valid ASCII strings are processed for normalization
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL update statistics execution in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure that failures
( chore ) camel - cometd : replace contexttestsupport with junit4
updated HTML tag attributes to include OK attribute in 5 to ensure compatibility with HTML5 features introduced in version 4.01 and above
added a line break to the HTML output in HtmlCoreReport . java to improve spacing in HTML output for better readability
updated the calculation of RAM bytes used in DocSlice . java to handle null scores to ensure accurate RAM usage calculation by avoiding potential null pointer
added a new ` StringHolder ` class and a test for custom serialization and deserialization of ` Set < StringHolder > ` to enhance JSON handling
set extra data from mining parameters in MergeCoordinator and add a corresponding test in MergeCoordinatorTest to ensure that the coordinator uses the correct extra
added a static final map for the number of arguments and modified the argsToProperties method to include the number of arguments for parsing and output files
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
corrected the spelling of " configedThreshold " to " configuredThreshold " in DefaultMigrationAddressComparator . java and added a constant for
updated method parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity
updated resource paths in TwitterBootstrapUtils . java from " css / bootstrap . min . css " and " js / bootstrap . min . js
removed the ` pPOSTag ` pattern and updated the ` basicCategory ` method in ` SpanishTreebankLanguagePack . java ` to
hhh - 14964 implement uniqueentityloader . load ( id , lockoptions ) instead of entityloader . loadbyuniquekey
hbase - 24958 regionserversnapshotmanager should not remove cancel task from pool ( # 2494 ) ( # 2494 )
set size ( w , h ) when width or height be 0 ( fixes # 1193 )
fix a bug in the hikaripool . fillpool ( ) method that be n ' t need anymore .
replaced the ` assureMatchVersion ( ) ` method with a default value of ` Version . LATEST ` in multiple filter factories
fix default method client for abstract and interface ( # 6335 )
fix a bug in the drl parser when there be a comma at the end of a comma .
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a validation check for payloadLength in WsFrameBase . java to ensure that invalid payloads do not cause protocol errors
move publishsubscribechannel to dispatcher instead of channel
updated executionId type from String to Long across multiple classes to allow for better handling of execution IDs in the bootstrap process
added multiple byte update calls in ImageProcessor . java to calculate the digest based on width and height to enhance image processing efficiency by processing larger dimensions
updated logging statement in SolrConfig . java and added imports in SolrConfigHandler . java to improve logging clarity and enhance import statements for better
updated the delayUntil value in FileSyncAdapter from 60 seconds to 30 seconds to avoid excessive automatic synchronizations that could lead to performance issues
removed redundant whitespace in FileTime initialization in SegmentV1V2ToV3FormatConverterTest . java to improve code readability and maintain
replaced ` String ` with ` Path ` for ` fullPath ` in ` addPathToMTree ` method calls to improve code clarity and
updated DefaultPackageScanClassResolver to handle URI - based URLs and improved error logging for URL parsing to enhance robustness of URL handling and
[ flink - 20613 ] [ table - planner ] [ table - planner - blink ] introduce timestampextractorutils class
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for retrieving principal and credential from a security context to
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest Android API
replaced auto - suggestion dialog with a simple form dialog for custom filename input to improve user experience by utilizing cached data for file selection
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated asset issue assertions in ` StoreAPITest `
updated the parameter name from ` collection . getName ( ) ` to ` collectionName ` in the ` stream ` method to improve clarity by explicitly
map overview : fix zoom factor in mouse handler
updated KNearestNeighborClassifier to use Similarity instead of DefaultSimilarity to enhance classification accuracy by integrating similarity features
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query creation and improve query performance
updated the method to retrieve reasons from lowResourceCheck to improve clarity and accuracy in handling resource reasons
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added mtu request tests for Bluetooth Gatt callbacks in ShadowBluetoothGattTest . java and ShadowBluetoothGatt . java
refactor the servlet input stream creation into a separate method ` createServletOutputStream ( ) ` to improve code organization and readability by separating
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for unsatisfied link errors
[ hotfix ] [ runtime ] fix concurrentmodificationexception in channelprocessingmanager
replaced occurrences of " grouped " and " grouped " with " grouped " in Japanese resource files to improve clarity and consistency in
updated condition from ' size > 0 ' to ' size > 1 ' in JDBCTypeMapping . java and modified assertions in JDBCTypeMappingTest
added synchronized keyword to methods in GenshinScene . java to ensure thread safety during player additions and removals
refactor accessibility detection to use regex for control codes and code matchers to improve performance and maintainability of accessibility checks
added support for additional command behavior in MenuBar and SideMenuBar to enhance user experience by allowing navigation options alongside existing buttons
removed the import of Disposable and updated subscription logic in PoloniexManualExample . java and WampStreamingService . java to simplify
added validation for energy limit in UpdateSettingForEnergyLimitContract . java and updated error messages in UpdateSettingForEnergyLimitContract
renamed ` url1 ` to ` javaUrl ` and updated related methods in ` UrlBean ` and ` PostmanJsonBuilder ` to
camel - 16400 : added getter and setter for namespaceprefixref in soapjaxbdataformat
updated assertions in TestRange . java to use a static final constant for time comparisons to improve code readability and maintainability by centralizing time
added security checks in BasicAuthIntegrationTest and updated ZkStateReader to retrieve security properties to ensure proper security status verification during server restarts
add pricefeed to tradechartsviewmodel when use sticky market price
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to reset replication settings to ensure
replaced the variable ` from ` with ` end ` in ` NativeString . java ` for better clarity to improve code readability and
added a FileDataStorageManager to manage file download status to ensure files are properly downloaded during the download process
[ java ] set the length of the filechannel to avoid leak .
added a method to check if the registry is running and a retry mechanism for file deletion to improve reliability and error handling during file operations
added import statements for NoseConeConfig , Application , ConcurrentComponentPresetDatabaseLoader , and ExceptionHandler , and starting loading in Quick3
added @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " synthetic - access " ) annotations to multiple Java files to suppress unchecked warnings
added null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added transaction isolation level handling in SQLExceptionCode and updated related logic in PhoenixConnection , PhoenixDatabaseMetaData , and Ph
added transaction attribute handling to AbstractStepFactoryBean and updated ItemOrientedStep and SkipLimitStepFactoryBean to use this method to improve
updated ` CasManagementWebAppConfiguration ` to use ` DirectCasClient ` instead of ` CasClient ` and refactored security logic
added functionality to show and edit a category in the ListFragment to enhance user experience by providing quick access to category information in the navigation drawer
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` and updated its references in ` FileDisplayActivity
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling and text size retrieval in TerminalView and TerminalBridge classes to improve clarity and functionality of font size management
added a check to ensure the constant frame is valid before modifying it to prevent potential errors when modifying a constant frame
refactor multiple Java files related to build target graph and parser to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to ensure that the returned list is immutable after use
removed unnecessary locking mechanism and improved readability in Liquibase . java to streamline code and enhance maintainability by eliminating
added a method to set the revision in MicroserviceVersions and updated related tests accordingly to improve flexibility in handling microservice version rules and ensure
added a new string format for foreign key and index names in TableRetriever . java to improve readability and maintainability of foreign key and index
camel - 15836 - camel - aws2 - s3 : add unit test base on user forum issue
removed unnecessary currency pair parameter handling in BitstampAccountService and added a new method in BitstampAccountServiceRaw to streamline user transaction retrieval
added error handling for component retrieval in BlueprintContainerRegistry to ensure robustness by returning null when the component is not found
change the return type of the push ( ) method from void to boolean and add support for http : / / github . com / codename
updated LegacyAddressTest to read addresses from a dataset file instead of a hardcoded string to improve flexibility and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
added setupPushWarning ( ) and setupContent ( ) methods in NotificationsActivity and refactored Snackbar handling in DrawerActivity
added logging for channel closure and improved error handling in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper resource management when
replace null checks with StringUtils . isEmpty for noWarnAttribute , validDaysAttribute , and expiration date handling in LdapPasswordPolicyEnforcer . java to
refactor DefaultAnnotationEngine and Stubber classes for improved code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 6892 - add timezone adapter for nifi - about . this close # 1186 .
updated assertions and logic in Splitter . java and StorageService . java to improve clarity and functionality of the splitOwnedRanges method to
no effective change - code cleanup - remove unnecessary try - catch
removed unnecessary synchronization around activeCircuits in CircuitManagerImpl . java to improve performance by reducing unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to provide more specific error handling for shader fetch failures
[ flume - 220 ] [ connectors / common ] add getter / setter to sinkrunner and sourcerunner
updated logging behavior in FastBindLdapAuthenticationHandler to use info instead of error to improve clarity in error reporting for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved focus traversal logic to enhance performance and maintainability of focus traversal logic
make getpointlength ( ) return int instead of double for freehand function
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain and Executable classes to improve resource management and logging to ensure proper closure of database connections and enhance error
http : / / issues . apache . org / jira / browse / amq - 3874 - add support for jdk 17 and
corrected a typo in the exception message from " labels " to " metadata " in CountersManager . java to ensure accurate error reporting
updated audio handling logic in MediaManager . java to improve clarity and functionality to ensure proper audio playback behavior when the position is zero or negative
removed debug logging statement for connection cancellation in HttpConnection . java to simplify log output for improved readability and performance
added @ Transient annotation to JpaPersistentPropertyImpl and a corresponding test in JpaPersistentPropertyImplUnitTests to ensure proper handling of transient
updated version assertions in UpgradeResourceProviderTest from 2.1 . 1 to 2.2 . 0 and added new assertions in UpgradeResourceProvider
truffle : make trufflevm . eval return object instead of symbol .
change access modifier of isBinaryType method from private to public and update debug logging in Proxy . java to improve accessibility of isBinaryType
updated the constant name from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
removed the priority parameter from the JavaProblem constructor and related methods in JavaEditor . java and JavaProblem . java to simplify the constructor and improve
replaced the usage of ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler
updated string formatting in TableWriterTest to use a constant for the line separator to improve code readability and maintainability by avoiding hardcoded
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate easier debugging
added a boolean field ` ownsTexture ` to the ` ParticleEffect ` class to check if the particle effect owns the texture to ensure proper
added LDAP authentication parameters to HiveConf . java to enhance security by integrating LDAP authentication features
fix : add miss import for searchcatalogrequest . scope
updated InputMethodManager usage in DetailActivity . java to use Context for soft input toggling to improve code clarity and maintainability by
added a test for converting primitive to map of primitive to map of primitive to object in DataTableTypeRegistryTableConverterTest . java to ensure correct
updated size parameters in TestFileSystem . java from 100 , 500 , and 50 to optimize memory usage and improve performance
updated error message in ContentTypeManager . java for clarity to improve user understanding of the error related to resource management
changed the ` dropSequences ` method from protected to abstract in multiple database - related classes to allow subclasses to override the ` dropSequences ` method
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated variable assignment for field creation in DocumentBuilder . java to improve code readability and maintainability
make sure hierarchy style be set for hierarchical icon event , not just icon .
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests . java ` to ensure
hbase - 25819 fix a bug in hbase - core ( # 2695 )
added statistical tracking functionality to ` AppsCustomizePagedView ` , ` Launcher ` , and ` Stats ` classes to
added drawing functionality to the graphics context in JavaSEPort . java to improve rendering performance and resource management by disposing of the graphics
update instructorfeedbackresultspagepagedata to include current team in the list of member
added a check for zero inventory IDs in the Inventory class and created a test for their IDs to ensure that zero is the player ' s inventory
added a conditional check for the ` found ` flag in ` ConfigDescriptionRegistry . java ` to ensure the loop continues only when a configuration is
updated method calls in ReloadableJava parser visitors to include returnType as a parameter to ensure proper handling of cases where returnType is not provided
refactor blended tiles handling in TileMapRenderer to use an IntArray if available to improve flexibility in loading blended tiles
updated the class names in the @ Classes annotation in Probe . java to improve clarity and maintain consistency in naming conventions
make sure we do n ' t have to compute the area twice , a suggest by valerybokov
updated lockOnSync assignment and throttleRate assignment in Throttler . java to improve clarity and consistency in object management
pipe : fix the issue that pipeeventbus . registerhandler ( ) throw a npe if the superclass be null .
increased the timeout parameter from 1000 to TIMEOUT in ZkControllerTest . java to allow more time for ZkController initialization to complete
added a test for passing a passcode with client parameters in TokenMvcMockTests . java to ensure proper handling of client - specific OAuth2
added support for ` LengthFilter ` , ` KeepWordFilter ` , and ` CharArraySet ` constructors in ` TestRandomChains . java
removed JUnit Ignore import from RandomPlaneTest . java to enable execution of tests that are not ready for execution
use integer . tounsignedlong ( ) instead of integer . tosignedlong ( ) in llvmmemory . puti
refactor ` btCollisionObjectArray ` and ` btRigidBody ` to use ` btCollisionObject . getInstance ` instead of
added copyright year property and methods to retrieve the copyright year in BuildProperties and AboutDialog classes to ensure accurate copyright information and improve accessibility
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl ( # 2269 )
updated finCount , inertia , and expMOI values in ` MassCalculatorTest . java ` and ` FinSet . java `
updated memory semaphore variable from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to ensure accurate memory allocation
[ hotfix ] [ table - common ] fix typo in schemafetcher and createalignedtimeseriesplan
add check for burningmanservice activation before validate delayed payout tx
updated JSON string construction and added exception handling in JsonLoaderTest . java to improve JSON parsing accuracy and ensure proper exception handling
updated the minimum required capacity check from 1 to 0x40000000 in ObjectSet . java to allow for larger table sizes to accommodate
updated import statements and added null and empty data scale handling in ColumnSnapshotGenerator . java to improve code clarity and prevent potential null pointer exceptions
removed ` @ AddToRuleKey ` annotations from several fields in ` AppleTest . java ` to streamline code by eliminating
added error handling for query execution in FileHelper . java and updated content handling in TextHelper . java to improve robustness by handling security exceptions
added a new constant ` StyleWithMultipleAttributes ` and corresponding tests in ` ShadowThemeTest ` to support multiple attributes in theme attributes
updated sheet name check in HSSFWorkbook . java and added multiple sheet creation in TestHSSFWorkbook . java to ensure correct sheet
updated the tint from primaryColor to elementColor in ManageAccountsActivity . java to improve UI consistency by using the correct color theme
updated handler initialization in DefaultEventBus and simplified path resolution in DefaultPlatformManager to improve null safety and simplify path resolution logic
added binary collation support to MariaDbDbmsType , MySqlDbmsType , and AbstractDbmsType classes to enhance database compatibility by
added a default method ` whenType ( Class < T > treeType ) ` to return an Optional < T > to improve type safety and
refactor the user view destination retrieval logic in ItemLauncher . java to improve code readability and maintainability by reducing redundancy
replaced Response . ok with Response . temporaryRedirect in FeedREST . java to improve user experience by redirecting to the correct application settings URL
[ hotfix ] [ kinesis ] add check for non - serializable deserializer
camel - 16400 : fix checkstyle violation in camel - core
modified the ZkStateReader initialization and shutdown logic in LeaderElectionTest . java to ensure proper resource management and avoid potential memory leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
replaced direct calls to ` _ endPoint . fill ( ) ` with a new ` read ( ) ` method to improve code readability and
replaced ` BufferUtil ` with ` ByteBuffer ` for allocation lengths in ` ABCase1 _ 2 . java ` to standardize ByteBuffer allocation
modified the ` prepareStreamsToUpload ` method to return a boolean instead of an exception to improve error handling and provide feedback on upload status
replaced direct calls to ` Integer . compare ( ) ` with ` Integer . compare ( ) ` in ` AbstractConfigLoader . java `
added a new file ` PicOfDayAppWidget . java ` that implements image loading for app widgets to provide a structured way to display images
server : set default _ internal _ lb _ offering _ id to 0 if it ' s invalid
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to improve compatibility with Hive ' s query optimizer and enhance
[ hotfix ] [ stream api ] deprecate all transformation class
added authentication options for accessing the remote JMX JMX in NodeToolCmd . java to enhance security by allowing credentials for remote JMX access
removed duplicate BytesRef initialization in Stemmer . java to streamline code by eliminating redundancy
updated conditions for applying app widget provider info and widget resolution in AppsCustomizePagedView . java to ensure correct handling of widget resolution
ggbapplet . getviewforthumbnail ( ) do n ' t work for 3d view
updated rotation calculations in GcodeRenderer . java to use minimum and maximum limits to ensure rotation values are non - negative and prevent potential issues with
added a new WORKSPACE option and updated the DAEMON option to include it to enhance functionality by allowing users to specify a workspace directory
updated the test file path from " options . apt " to " options . html " to ensure the test uses the correct HTML file for
updated ScimUtilsTest to use JUnit 5 and added PollutionPreventionExtension to enhance test structure and maintain compatibility with modern testing
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` model instead of ` ModelAndView ` to
refactor assertions in HibernateIT to use a eventually assertion for session management to improve code readability and ensure cache consistency during assertions
refactor EventBusHook class for improved readability to enhance maintainability and facilitate future updates
updated MultiPaintEventTest . java to improve test coverage to enhance reliability of paint event handling functionality
removed the final modifier from the mNewScale variable in WorkspaceStateTransitionAnimation . java to allow for flexibility in scaling behavior during animations
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the synchronization process
added unique key handling in LukeRequestHandler to ensure unique keys are correctly associated with the specified schema
added document filtering for strokeColor and backgroundColor in BorderEditor and implemented roundBorderColor attribute in EditableResources to enhance document rendering capabilities and
fix bug in binaryparser . neverpartofcompilation ( ) .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulertest
added logging for pending requests and modified return values in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes to improve debugging
added a toolbar to the RecentChatFragment class and implemented a menu item click listener to enhance user experience by providing quick access to recent chat
renamed ` ButtonDropTarget ` to ` UninstallDropTarget ` and updated method signatures in ` InfoDropTarget ` and ` Uninstall
replaced calls to ` getTail ( ) ` with ` push ( ) ` and ` peek ( ) ` in multiple classes to improve method
updated wiki URLs from " test . wikipedia . org / " to " common . wikimedia . org / " in CommonsApplication
refactor index calculation logic into separate methods for clarity and maintainability to improve code readability and maintainability by reducing duplication
replaced usage of ` Collections . sort ( ... ) ` with direct calls to ` Collections . sort ( ... ) ` in multiple classes to
added a new date pattern format " DateTimePatterns " to the FormatData _ hr _ HR . java file to support additional date - time
added a call to clear focus on the clickedView in DetailFragment . java to ensure the user interface reflects the current state of the clicked
updated spinner selection logic and removed unnecessary null check for savedLanguageValue in DescriptionsAdapter and SpinnerLanguagesAdapter to improve user experience by ensuring
updated time zone identifiers from " WSST " to " WSDT " across multiple files to ensure accurate representation of daylight saving time in the
added methods to register global and weak items and access fields in FastGetField . java to enhance functionality for handling item access in different modes
added default value handling for UNION and NULL types in ReflectData and TestReflect classes to ensure proper handling of NULL types when unioning fields
increased the timeout value from 300 to 1000 in the SedaBlockWhenFullTest . java to allow more time for the block
added a null check before remapping the RClass in ResourceMerger . java to avoid potential NullPointerExceptions when the RClass is null
add constructor to dialect that accept databaseversion parameter
camel - 7999 : added explicit connection close header to http producer . thanks to benjamin graf for the patch .
increased the socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify that the count of tickets with status = ' FREE ' and final _ price _ cts > 0 to ensure
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter to improve code readability to enhance maintainability and facilitate future feature additions
use getfirstelementchild ( ) . getchildren ( ) instead of getfirstchild ( ) . getchildren ( )
planner - 251 : do n ' t create immutable look - up strategy for enums
[ java ] wait for the instance to shut down before shut down .
changed log level from warn to info for non - cached beans in ELContextCleaner . java to provide clearer information about the absence
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure correct content type is used for byte - stream
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created corresponding unit tests in ` LazyTraceThreadPoolTask
fix distanceop to skip line that do n ' t meet the minimum distance
renamed the variable ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in
replaced the ` next ( ) ` method with ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to ensure progress
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added ` getHeight ( ) ` and ` getWidth ( ) ` methods to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation to ensure polygons contain at least three points and updated localVertices assignment logic accordingly to ensure that polygons contain at least three vertices and avoid
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to utilize a unified ObjectMappers class for better
added a null check for the ' coeff ' variable in the GeoImplicitCurve class to avoid potential NullPointerException when ' coeff ' is null
updated ExternalNameRecord to handle both compressed Unicode and non - compressed Unicode names to improve compatibility with Unicode data formats in ExternalNameRecord
( chore ) camel - jms : fix typo in javadoc
added functionality to return login prompts based on the ` returnLoginPrompts ` flag to ensure that only relevant prompts are included in the
replaced ` remove ` method with ` removeIf ` for listener removal to improve readability and maintainability of the code
added a case for toggling spin in PieChartActivity to enable toggling of the spin animation on the chart
bug 10363 : do n ' t kill the copy process if it fail
hbase - 25850 table normalization should skip table that have namespace quota ( ted yu )
added a method to resize the pressure array and modified imports in AndroidInput . java to improve code clarity and ensure proper resizing of the
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the formatting of the @ VisibleForTesting annotation to improve
ignore test that be always fail and blocking pr
fix a bug in theHopperhock . getentitieswithinaabb method that would cause the hopperhock to fail to
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing clear authentication requirements
refactor TestStressIndexing2 to improve error handling and document deletion methods to enhance code clarity and functionality for better document management
[ hotfix ] [ test ] ignore upsertkafkatableitcase due to flink - 22559
replaced ` get ` method with ` computeIfAbsent ` for retrieving ` typeList ` and updated variable names for clarity to improve code read
added a configuration option to accept single values as an array in DefaultEntityMapper to ensure proper handling of single values during deserialization
updated the localization log messages in VersionChangeLogs . java to include additional languages to enhance localization support for better user experience
[ netbeans - 4952 ] make shortcut category configurable
fix ( parser ) : fix instanceof expression and add test
nifi - 6892 - add mime type attribute to gethttphandler to allow gethttp . gethttphandler to
add a way to convert the history entry to a provenance entity and add a new method to the ResourceHistoryTable class to improve the handling of
rename ` exitButton ` to ` doneButton ` and update related click listeners in ` HelpActivity ` and ` SearchBookContentsActivity ` to
camel - 10403 : camel - nats : add tl support - fix doc
updated the ` invalidateStalePartition ` method to accept a list of ` PartitionNameWithVersion ` and ` MetastoreContext ` parameters to
use circular fifobuffer instead of unbounded fifobuffer for view result tree
updated the icon resource from ic _ group to ic _ chat _ bubble across multiple adapter classes to enhance user interface clarity by providing a more
[ java ] use volatile instead of long for counter access to avoid potential race condition .
updated test method names in MocksCreationTest . java for consistency to improve readability and maintainability of the test code
added a constant for the data source name and changed the access modifier of the generateDetectionConfig method from package - private to public to improve code
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow more time for phaser operations to complete
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated methods from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
server : fix template uuid encode issue in vmwarestoragemanagerimpl . patch by jbellis
add test for deposit workspace item without a workflow
added distinct classpath files to the stream processing in ClassLoaderSupportImpl . java to ensure unique classpath files are processed for processing
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags to improve code readability and ensure correct ordering of flags
added a check for external tables before deleting directories in HiveMetaStore . java and modified partition handling in TestHiveMetaStore . java to
updated asynchronous execution settings and improved exception messaging in HiveServer2 to enhance thread management and provide more informative error messages for better debugging
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to utilize TaskWrapper for service and component names instead of hardcoded strings to improve code readability and maintainability
add a document to track the diff of the current conference info in the operation set .
reload the log tree when a new entry be load ( # 3038 )
added checks for output and input shutdown states in ChannelEndPoint . java to ensure proper handling of socket shutdown scenarios
refactor SetNullableGenerator to improve nullability handling to enhance code clarity and maintainability
( chore ) camel - example - reportincident : use new file endpoint instead of file endpoint
replaced multiple specific imports with a wildcard import and refactored form data handling in NettyRoutingFilter . java to simplify import statements and
added an @ ApiOperation annotation and modified method signatures in multiple classes to include a nickname parameter to enhance API usability by providing more descriptive
removed the ` lifecycleListeners ` parameter from the ` update ` method in ` Lwjgl3Application ` and adjusted related methods accordingly to
updated the FG _ FK color from 0.90 , 0.200 to 0.100 to improve the visual distinction of the
added a requirement for mp3 audio format in SoundManager to ensure that the audio format is not required by the application
fix secondaryindexmanagertest to work with different index type . patch by jbellis
add ` ` version ' ' and ` ` version ' ' to the ` ` about ' ' group
[ hotfix ] [ test ] use optional rootcause in customserializationitcase
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a method to check if a cell is editable in the GeneralTab class to provide a default implementation for cell editing behavior
added a ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and updated message formatting based on the ` onlyPrint
added a static integer ` tmpCount ` and updated the vscales array in ` VocalTractScalingProcessor . java ` to track the
updated import statements for BaseScalarUdfTest in multiple files to ensure consistent usage of BaseScalarUdfTest across different UDFs
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper functionality for object comparison and hashing
* fix testskeletoncontrolrefresh . testskeletoncontrolrefreshwithanimclip and testskeletoncontrolrefresh . testskeletoncontrol
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related method names to improve clarity and consistency in naming conventions
updated condition to check if the size of sync block to fetch is less than or equal to SYNC _ FETCH _ BATCH _ NUM to
updated state transition from 365 to 366 and modified local ctx . ty assignment in DebugExpressionParser . java to improve clarity and correctness
refactor dependency exclusion logic in ExcludeDependency . java to use stream - based filtering to improve accuracy in identifying dependencies within classpath
replaced the method ` tmp ( ) ` with ` dst2 ( v ) ` and updated the parameter type in the ` lerp
initialize the args array to an empty array instead of null to ensure the args array has a default value and avoid potential null pointer exceptions
refactor ` getLinkerArgs ` method to accept ` ImmutableList < String > ` instead of ` List < String > ` to improve flexibility
[ # 11343 ] fix the issue of the ui test that fail on travis and appveyor
added external DAG name handling in HiveConf and TaskExecutorService , and improved logging in GenericUDTFGetSplits to enhance clarity
removed unused import of File in TileAtlas . java to clean up the code and improve readability
make escapeprocessingoutputstream and gradledaemonexecutortest more robust .
updated the ` validateQuery ` method to accept an additional ` arguments ` parameter and modified the exception message formatting to enhance error reporting by providing more
updated INDEX _ VERSION from 1 to 2 and refactored tree parsing methods in LuceneExecutor . java to improve index versioning and enhance
[ hotfix ] [ core ] add test to verify that default kryo registration do not change
added a null check before removing a configuration property and updated configTypesUpdated accordingly to prevent potential NullPointerExceptions when removing configuration properties
refactor boolean conversion logic in MetaStoreDirectSql . java to utilize BooleanUtils for better handling of boolean values to improve code readability
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user interface by hiding the customization drawer
refactor TermVectorComponent to utilize a constant for warning keys and streamline term vector handling to improve code readability and maintainability by
added conditional logging for optimistic types and modified log message formatting in Compiler . java to improve log clarity and ensure appropriate logging level based on
refactor Expect class to improve code structure to enhance maintainability and readability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created it for Docker configuration to enable users to access Docker with a Unix Unix socket for testing
added flaky test methods in CloseableDoSFilterTest and CloseableDoSFilterTest to improve test reliability to address flakiness in
camel - 16400 : camel - reactive - stream should not throw illegalstateexception if stream have no active subscription .
refactor Vectorizer and TezCompiler to use MapWork instead of MapRedTask for processing Tez tasks to improve code clarity and
log4j2 - 1343 stringappender and logdivertappender should use the new constructor with default value of true
add null check for guipackage before call updatecurrentnode ( )
sulong : add support for weak linkage in llvm parser .
updated multiple Java files related to class sharing functionality to improve code organization and maintainability
test : add unit test for defaulttransactionthreadlocal . get ( )
added a check for invalid operation handles in HiveStatement . java to improve error handling and logging for invalid operation handles
updated ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 17850 - camel - aws - secrets - manager : add integration test base on user forum issue
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed error message from the email sending error response in UserREST . java to simplify error reporting for better clarity
modified the ` fromContent ` method to include a ` subTree ` parameter and adjusted its logic to handle subTree behavior to enhance functionality by
update column width calculation in Sheet . java and add unit tests for column width functionality in TestHSSFSheet . java to ensure accurate column
added a configPath parameter to the Commands . less method call to include the configuration path for command execution
changed the data types of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and `
update sshd image version from sha256 to 1.0 . 0 in TestcontainersConfiguration . java to ensure compatibility with the latest SSHD
fix npe in agentmanagerimpl when hostid be null . patch by jbellis
refactor key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for improved clarity to enhance code readability and maintain
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated related error handling to improve clarity of
updated the handling of gate variants and ingredient stacks in BCSiliconRecipes . java to improve clarity and maintainability
fix typo in graphhopperconfigmixin # put ( string key , object value )
updated visibility logic in CellLayout and refactored onDragExit method in DragController and Workspace classes to improve code clarity and maintainability
updated ModifyRequestBodyGatewayFilterFactory to use a dynamic rewrite function and added a test for handling empty request bodies to improve flexibility in modifying request
added package - accessible check in ConstructorFinder , FieldFinder , and MethodFinder to enhance access control checks to ensure types are both public and package
changed log level from warn to trace in LoggingHandler . java to provide more detailed logging for troubleshooting purposes
fix wildcard handling in whiteblacklist ( # 348 )
added functionality to handle gallery options in the GalleryActivity to enhance user experience by allowing users to access images directly from the gallery
refactor MongoDBServiceFactory to use a singleton instance for service creation to improve performance by reducing the need for multiple instances of MongoDBService
added unit tests for replacing boolean false and true with false in InlineConstantMutatorTest . java to ensure correct handling of boolean values in code formatting
updated the ` decode ` method to accept a ` Blackhole ` parameter and modified its usage in ` RecordTest . java ` to enhance the
fix : update gapic - generator - java with mock service generation fix ( # 1 )
[ knx ] skip group address / dpt when there be no inbound specification
removed the call to dbManager . getWitnesses ( ) . clear ( ) in ManagerTest . java to optimize performance by eliminating
improve error handling in jdbcpagesink . abort ( )
replaced ` set ` method with ` delete ` and added methods for retrieving and setting stack in ` NativeError . java ` to improve stack
removed redundant check for path names starting with " . " in DrillPathFilter . java to streamline the code by eliminating unnecessary
corrected the spelling of " onboard " to " autoload " in the ThirdEyeAnomalyApplication and ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
changed the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to accommodate changes in
changed ` fThreadGroup ` to ` volatile ` and updated related methods in ` Timeout ` , ` TimeoutTest ` , and ` FailOn
[ hotfix ] fix checkstyle violation in valueresultdata
updated hash code and equality checks in FuzzyQuery . java to ensure correct behavior when comparing objects using the superclass
removed unnecessary print statements in PushedResourcesTest . java to streamline code and reduce unnecessary console output
replaced ` SharedRandomAccessFile ` and ` List < SharedRandomAccessFile > ` with ` void ` in ` SharedOpenFilesCache . java
update product version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure
updated ` retrievePersonAttributes ` method to initialize ` HashMap < > ( 0 ) ` with a new ` HashMap < > ( 0 ) `
change log level from info to warn in OpenWebNetBridgeHandler . java to reduce log verbosity and provide a less severe warning for connection issues
updated method names from " intHash " and " longHash " to " hash " across multiple classes to standardize naming conventions and improve
added a constructor to ThumbnailGenerationTask to ensure storageManager is not null and mImageViewReference is not null to prevent potential NullPointerExceptions
updated the loop condition in GroupSelectionQuery . java to include a retry condition with a maximum of 5 attempts to improve robustness by preventing
added a new file ` Bug1933922 . java ` that includes
removed unnecessary parentheses in comparison statements across multiple classes to improve code readability and maintainability
updated character validation condition in FileResolver . java to ensure valid control characters 0 - 31 and space characters 32 are handled correctly
added a call to requestFocus ( ) on the component to ensure the component receives focus to enhance user experience by preventing unintended focus
update test data for instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to clarify the purpose of the parser related to stream processing
refactor Crouton handling in DetailFragment and MainActivity to improve message display logic and ensure proper activity lifecycle management
added a test for schema queries and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of unrelated templates
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced direct execution of commands with a ProcessBuilder for process creation to improve code readability and maintainability by utilizing a controlled process builder
change InetAddress . getLocalHost ( ) to InetAddress . getByName ( 127.0 . 0.1 ) in HintedHandOffTest .
refactor controller and base handling in Metrics . java to use a loop for setting paths to improve code readability and maintainability by reducing
added assumptions to skip tests on macOS in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Ap
jvmciversioncheckvendors : use getrequiredproperty to avoid npe
updated Mockito library version to ensure compatibility with the latest features and bug fixes
8274237 : [ testbug ] testbug : testlargepageuseforauxmemory fail on jdk - 8274
updated BinaryParser and PlainTextParser to use context for reading bytes and added charset management in ParsingExecutionContextView to improve flexibility in handling
added support for setting and retrieving MultiPartFormDataCompliance in HttpConfiguration . java and created a new MultiPartFormDataCompliance enum in Request . java
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to support JDK - 17 for
added a method ` addType ` to ` DatabaseSnapshot ` and refactored type addition logic in ` SnapshotControl ` to improve code readability
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
modify return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / activemq / browse / amq - 2698 - add test to verify that
updated multiple Java files related to AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , ShadowActivityManager , ShadowBiometricManager
pdfbox - 417 : disable assert on failure , a suggest by valerybokov
updated tinting logic in TaskView . java to use mTintAmount variable instead of hardcoded values to improve code readability and maintain
added a new file ` SumZeroAggr . java ` that implements the ` SumZero ` function to provide functionality for counting zero values in
updated SQL query formatting in FirstValueFunctionIT . java and NthValueFunctionIT . java to improve code readability and maintain consistency in
hbase - 25850 bucketcachemanager . getallocationfailwarningmessage should provide more information about bucketallocatorexception
added a null check before adding propName to roleObject ' s properties to avoid potential NullPointerExceptions when propName is null
added ` @ VisibleForTesting ` annotation to ` mTouchSlop ` , ` mCanIntercept ` , and ` setWindowSlipper
added logContainerStream method to DockerClient and modified logContainer method to accept a boolean parameter to control the stream behavior of the Docker container logging
add performance test for mvstore cache
updated LONG constant from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be called without creating an instance of the
camel - 14263 : restbindingadvice should clear the message body when it ' s not need
added new files FileDeletingTasklet . java and TaskletJobFunctionalTests . java to handle file deletion and job functionalities in batch
update size - keep - drawables only after create companion view
updated byte manipulation and formatting in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap classes to improve
updated accessibility methods to accept an additional state ordinal instead of a string to enhance test accuracy by associating state events with their ordinal values
added user - agent check and video thumbnail handling in multiple classes to improve video playback functionality based on user preference
do n ' t scroll to the top of the line if there be no problem
modified the layout of the title area based on the theme of the menu button to ensure proper alignment based on the user ' s theme settings
added " libskia " and " skia " links to Skia . java and updated preload settings to ensure proper loading of Skia
add support for unittestnet in networkparameters . getnetworkparameters ( )
added error handling for format arguments in QueryCommand and updated related tests in QueryCommandIntegrationTest to ensure correct format arguments are provided and improve test
updated capacity and mask variables in IntIterator . java for clarity to improve code readability and maintainability by using more descriptive variable names
updated walkRuleAndAdd methods to include a srcTarget parameter to ensure dependencies are correctly visited based on the project ' s source rule configuration
[ netbeans - 4892 ] allow to override the module name in the patch module file
[ java ] do n ' t rely on protocol version when check if candidate term id be less than term id .
modify default policy settings for OwnCloudClientManagerFactory based on authentication type to ensure proper client management based on authentication requirements
added null checks for mapped table resource in ReadBatch and WriteBatch classes to ensure that a valid mapped table resource is provided to avoid runtime errors
refactored code to use utility method for close ( )
refactor AnonymousAuthenticationFilter to use a Supplier for deferred and anonymous SecurityContexts to improve code readability and maintainability by reducing redundancy
modified the removeActor method to accept an additional boolean parameter for controlling focus behavior to enhance actor removal functionality by allowing control over focus behavior
refactor cloudConfig initialization to use a variable for valid configurations to improve code readability and maintainability by avoiding repeated variable assignments
added logging capability to the NettyHttpServer and NettyHttpServerConfiguration classes to enhance logging capabilities for better debugging and monitoring
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` to ensure thread safety
camel - 14263 : camel - groovyparser - make it easy to run the script in the same way a the
replaced List with Set for resolved artifacts in DefaultPluginManager . java to improve performance and simplify artifact resolution logic
changed access modifiers of several constants and methods from static to public in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils classes to allow bro
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added functionality to retrieve the storage key alias and certificate chain from the storage key to enhance security by ensuring only valid storage keys are processed
danielwagnerhall : throw a more informative exception if the text can not be convert to a response
changed the access modifier of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override
drop xp resource on level drop ( # 8897 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable better management and retrieval of spatial location calculator configurations
refactor multiple Java classes related to community detection and source ranking to improve code organization and maintainability
replaced ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` in ` TreeTrie . java ` and added
updated foreground and background method calls in AttributedStringBuilder . java to use variable dimensions instead of a fixed column to improve code readability and maintain
updated fingerprint handling in PeerSync to include a system property for disabling fingerprinting to enhance flexibility in fingerprinting behavior based on system properties
changed the visibility of the moveFunds method from private to public to allow external access to the method for moving funds in GDAXAccount
replaced ` BeforeConvertEvent ` with ` AssertUpdateableIdIfNotSet ` and added a new ` PersonWithIdPropertyOfTypeUUID ` listener
add logger to collectioncontainer and collectionitem so it can be use in unit test .
tika - 3745 -- close inputstream if it be n ' t null .
replaced ApiBag . ExceptionWithErrObject with ApiException in TestCollectionAPIs . java to handle a broader range of API exceptions
updated the formatting of the configuration loading in OptionsParser . java to improve code readability and maintain consistency
[ # 87852 ] instructorfeedbackfeedbackactiontest : fix typo in log message ( # 87853 )
[ hotfix ] fix checkstyle violation in externalworkerservice
refactor HmDatapoint and HomematicTypeGeneratorImpl to simplify step handling and improve code readability to enhance maintainability and
updated logging messages and added shared lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of lock management
fix npe in baseschedulerserviceimpl . schedulejobs ( ) .
simonstewart : fix flaky test gettextcontent
refactor Logger class to use ThreadLocal for better management of logger state to improve performance and maintainability by reducing contention on the logger
updated FunctionInitializer and its test to use MockitoJUnitRunner instead of JMockit to improve test reliability and leverage Mockito
added type handling for primitive types and improved type boxing logic in Types . java , and introduced a new class T6995200
updated focus task view handling in RecentsView . java and removed unnecessary toast initialization in TaskView . java to improve code clarity and
hbase - 25836 testflushfromclient should use getregion ( table name ) instead of getliveregionserverthreads ( # 2
added logic to clone and delete the original repository when a new contract address is added to the transaction execution process to ensure proper handling of contract details
updated balance calculations in TokenIssueProcessor and program classes to use dynamic properties for asset issue fees to ensure accurate fee calculations for account balances
refactor cache management in RealisticRenderStrategy to use URI URIs instead of direct maps to improve cache management and avoid potential memory leaks
refactor raster handling in Blit . java and add a new bug7049339 . java file to improve code clarity and
added support for unselected font styles in Component and Label classes to improve text width calculation for different font configurations
refactor ArrayList initialization to use initial initial capacity and improve code readability to enhance performance and maintainability by reducing object instantiation overhead
removed the ` flags ` parameter from multiple methods in ` ShadowApplicationPackageManager ` and ` ShadowUserManager ` to simplify method signatures and improve
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
add support for mp4 sample with increasing timestamps in android test
[ tradfri ] do n ' t try to upgrade to the latest firmware in tradfri
simonstewart : fix typo find by codespell on fossies . org
added a condition to check for " table - cell " display in BoxLayout and DefaultLayout classes to ensure proper handling of table - cell display
refactor JsonDecoder to use a loop for looping through array elements and add a new test for reordering fields to improve code readability and
fix blockcache . releaselocation ( ) to pass removalcause parameter
[ hotfix ] [ test ] temporarily disable savepoint test
added @ test annotation to the DroolsMvelParserTest class to verify the functionality of the DroolsMvelParser class
added ' final ' modifier to app name , host , and port fields in ContextRegisterListener . java to ensure immutability and prevent un
refactor ObjectHashSet constructor to accept an additional cacheIterator parameter and improve test setup to enhance flexibility and ensure proper initialization of the iterator and
added batch byte handling to SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure robustness by preventing out
changed context modes from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to restrict access
updated logging statements and added handling for " abort " in JdbcProxyGenerator to improve clarity of log messages and enhance connection management during abort scenarios
updated the method to set the important for accessibility based on the state to improve accessibility handling for different states in the animation
changed log level from warn to debug in ProtobufLogReader . java to reduce log verbosity and improve performance during normal operation
updated scope handling in UaaTokenServices and added a test for scope length in UaaTokenServicesTests to ensure that scope does not exceed
updated import statements in SchemaRetrievalOptionsBuilderTest and added a toString method in AvailableJDBCDrivers to improve code clarity and provide a clearer
( chore ) camel - jbang - add executablecommand interface
( chore ) camel - jms : remove unused jdbctableservice . java
added padding getter methods in CellLayout and modified bitmap creation in Launcher to improve layout handling for portrait and landscape orientations
modify cands initialization to include a conditional check for a non - empty string to improve handling of cases where the input string is empty
refactor ` SamlMetadataUIParserAction ` and ` SamlMetadataUIParserDynamicAction ` to use ` Action ` instead of `
added a method to check for open LDAP ports in LdapMockMvcTests . java to ensure LDAP ports are properly configured before proceeding with tests
log4j2 - 1343 change default executorservicedeamons from - 1 to 0
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve redirect handling and ensure proper URL filtering during content and protocol
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
make karaf 3.0 compatible with karaf 4 . x
changed the access modifier of the ` getVerticesColors ` method from public to private and modified the initialization of the ` verticesColors ` list to
added file filtering to exclude timestamped reports directories during the directory copy operation to ensure that only valid reports are copied , improving data integrity
( chore ) camel - test - infra - data - validator : rename test method to validatename
pdfbox - 4892 : remove unused method addmetadata , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure that the expression is executed inside the adequate context before proceeding
removed debug print statement for event reporting in JoglInput . java to clean up the code and reduce unnecessary console output
added a flag to control extraction of private fields in FieldSupport and updated related tests to enhance flexibility in field value retrieval by allowing extraction of
added a replacement for the device name in WebDataHandler . java to provide clearer context about the device ' s name
replaced direct access to the Lookup constructor with a fallback mechanism when Java 8 types are present to improve flexibility in creating Lookup instances based on
replaced the deprecated ` weights ` method with a new ` weightsByDouble ` method in ` ZParams ` and updated its usage in `
updated the ` writeCustomHTML ` method to include a ` Database ` parameter across multiple writer classes to enable the method to utilize the database
updated key deserialization logic in BTreeMap . java to remove unnecessary type casting to improve code clarity and reduce unnecessary type casting
added handling for BalanceInsufficientException and InvalidProtocolBufferException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and
do n ' t write heap zero if ` org . netbeans . lib . profiler . heap . zerofile ` be true
replaced print statements with direct UI messaging for Liquibase Pro license checks to streamline error handling and improve user feedback throughout the
increased the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter
added imports for ` ChunkListener ` and ` ItemListener ` in multiple batch processing classes to enhance batch processing capabilities and improve error handling
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
removed unnecessary calls to ` doc . get ( " title " ) ` in ` SearchFiles ` , ` SortedSetDocValuesFacetCounts ` ,
refactor Test7005594 . java for improved readability to enhance code maintainability and reduce complexity
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error reporting for entry validation issues
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : do n ' t map vm to ip address if it be n ' t set
add a listener to notify the gamepad ' s size when the modifier be switch .
replaced occurrences of ` iteratesOverSequence ` with ` iteratesOver ` in ` IterableSubject ` and ` IterableTest ` to improve clarity
camel - 8243 fixed the issue of defaulthttpbinding . applyfiltertoexternalheaders ( string , string , string , object ... )
added assertions to verify the expected results of SQL queries in the ActivityHistorySQLServerStoredProcedureTest class to ensure that the database queries return expected
added a new ` LargeValueFormatter ` class and updated the calculation logic in ` BarChartActivityMultiDataset ` , ` BarLineChart
replaced hardcoded ' z ' with a constant ' INNOCUOS _ CHAR ' in CommentsParser . java to improve code readability
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to the Platform class to suppress warnings related to incompatible argument types
updated the printLir method call in TraceLinearScanLifetimeAnalysisPhase . java to correct the formatting of the log message for better readability
added a TODO Auto - generated method stub in NullAssertionValidator . java to prepare for future implementation of the Auto - generated method stub
added import for RuleKeyAppendable and utilized it in DefaultRuleKeyBuilderFactory to enable appending RuleKey for build rules using Buck
added setup and teardown methods for DLNAMediaInfoTest and SearchRequestHandlerTest to ensure proper setup and teardown of tests to improve test
refactor the creation of the ThreadFactory in TestcontainersDockerCmdExecFactory to use a dedicated method to improve code readability and maintainability
refactor the retrieval of messages in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintain
added attribute " accept " to the el in ImageFileInputDialog . java to ensure that only images are accepted by the user
updated ` ElasticIndexWriter ` and ` TestElasticIndexWriter ` to use ` PreBuiltTransportClient ` instead of ` NodeBuilder ` to
added additional information about witnesses in ForkController . java to improve debugging information for better visibility of witnesses
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests the functionality of ` NullPointerAndEmptyArray ` to ensure
updated methods in BaseIjModuleRule , IjProjectBuckConfig , and AbstractIjProjectConfig to retrieve generated source paths to
updated the ` constructWildcards ` method to accept a ` Function < String , String > ` for replacing wildcard patterns with a character delimiter to enhance
added validation checks for aliasToWork and tableScanCount in Vectorizer . java to ensure that only valid aliases are processed to avoid runtime errors
updated import statements and simplified exception handling in WeatherQueryTest . java to improve code clarity and ensure proper exception handling
added error handling for firmware setting setting in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting fails
refactor ` getLangs ` method to return a ` Set < String > ` instead of a ` String [ ] ` to improve language retrieval
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for clarity and consistency to improve readability and maintainability of the test code
hbase - 25835 add lock to takesnapshothandler to prevent concurrent modification
[ j2kt ] implementfinallyvioletControlFlow and rewritereferenceequalityoperations to use platform - specific isnull method .
added a test for the HTTP RPC endpoint modification in DockerQuickstartTest . java to ensure that the explorer correctly updates the HTTP RPC endpoint for
added a new volatile boolean variable ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread management and ensure proper
replaced instances of ` Author ` and ` Since ` with ` Hidden ` and ` Serial ` in ` Java11JavadocVisitor ` and `
( chore ) camel - spring - remoting : fix npe with multiple camelcontext
removed multiple @ Override annotations from multiple security - related classes to streamline code and improve readability by eliminating unnecessary overrides
added module import functionality to Java2TypeScriptAdapter and modified EnumTests to use CommonJS moduleKind to enhance modularization support and ensure
updated the language string from XMLConstants to " http : / / www . w3 . org / 2001 / XMLSchema " to ensure
added content description handling for badges in BubbleTextView . java to improve user experience by providing localized content descriptions based on badge status
added MouseWheelListener to handle mouse wheel rotation in TestMouseWheelScroll . java to enable mouse wheel functionality for improved user interaction
added resource management for PDF documents and added a test for positioning absolute in VisualTester and VisualRegressionTest to ensure proper resource management
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to reflect
updated VacuumController , VacuumFrame , and VacuumView to convert VacuumEnvironment . Location
removed currency determination logic for " DSH " , " QTM " , and " DSH " in BitfinexAdapters . java to
refactor JsonFormat . java to use ImmutableSet and ImmutableSet for default field handling to improve code clarity and maintainability while ensuring default values are
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of Byte [ ] array types in Jackson XML format
updated virtual thread state handling to use a new constant for parked and suspended states to improve code readability and maintainability by reducing
updated DirectoryTaxonomyWriter and NameIntCacheLRU to use a new NoOpCache for caching to improve performance by reducing unnecessary operations and
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the calculation of the owner ' s Y - coordinate in BrowserContentPane . java to correct the vertical positioning of the owner element
pdfbox - 4892 : remove unused exception , a suggest by valerybokov
added unit tests for setting short and long support messages in ShadowDevicePolicyManagerTest . java to ensure proper security exception handling when attempting to set
do n ' t use iterator in inputbarhelppanel . showmenubar ( )
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced sleep durations with a custom waitUntil method in BackendInitializerHelper . java and updated controller state checks in TerminalClient . java to improve
updated condition in SwingStartup to check for release status and updated version retrieval logic to ensure compatibility with OLDER release status and improve reliability
added support for including a generated file comment in the database migration process to provide users with a clearer indication of whether to modify the generated
updated command usage strings from " < player > " to " < player | * > " in multiple files to enhance command functionality by allowing players
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filters to streamline the codebase
updated method calls from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in method naming
added a condition to check for parallel classes in TestNGContentHandler . java to ensure proper handling of XML parallel classes during testing
http : / / issues . apache . org / jira / browse / amq - 4496 - fix routeinfomanager to use
refactor : remove static import of modelelementcontainerdefaultcapacities in ctmethodimpl . java
added serialVersionUID fields to multiple classes to ensure proper serialization compatibility across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated the ShibbolethCompatiblePersistentIdGenerator to include a separator parameter for the shaBase64 digest to enhance flexibility in handling different
updated boolean parsing logic in Parameters . java and TestAction . java to handle null parameters gracefully to improve robustness by avoiding potential NullPointerExceptions
added a new class Person with a private String field named name to provide a representation of the name associated with the project
no need for local - address in node - ring gathering . patch by jbellis ; review by brandonwilliams for
updated string case handling in AbstractClient . java to ensure consistent case handling for time strings
added metadata keys for timeColumn , timeUnit , and totalDocs in SegmentMetadataImpl to ensure accurate retrieval of time and time unit and total documents
updated import statements and changed foreground color settings in SimulationPlotPanel . java to ensure compatibility with the new color scheme and improve visual consistency
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure that disconnectEmitters
no effective change - code cleanup - no functional change
danielwagnerhall : add a test for double overflow in the scrolling test
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a custom JNDI location lookup for TransactionSynchronizationRegistry in JtaTransactionManager . java to enable flexible configuration of JTA TransactionSynchronization
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
added a method ` hasFunction ( String function ) ` to the ` Library ` class to provide a way to check if a specific function is
replace ` enabledCiphers ` with ` result ` in ` JSSESocketFactory . java ` for clarity to improve code readability and
[ beam - 8470 ] [ bigquery ] fix timestamp value in bigquery storage api ( # 119316 )
replaced multiple null checks with a single ` requireNonNull ` method for better readability to improve code clarity and reduce boilerplate
refactor value coercion to use map instead of map to improve code readability and maintainability
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices do not exceed the table '
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance user interface responsiveness by
[ java ] unnecessarylocalbeforereturn : add check for node that be a member selector .
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code and improve readability by
updated correlation values in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest for accuracy and consistency to improve accuracy of distance similarity calculations and
fix npe in datatracker when backup sstables
added a new method ` relativize ` to ` MorePaths ` to handle both ` Path ` and ` Path ` parameters to ensure that
updated column size and decimal digits handling in ColumnSnapshotGenerator . java and DataType . java to ensure proper formatting of decimal digits when columnSize is
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
updated the method from ` toHexString ` to ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure proper conversion of byte
refactor error handling controllers to extend Error403Controller instead of ErrorHandlerController to improve organization and clarity of error - related controllers
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
updated import statements and modified collection array conversion logic in Tiny . java to enhance functionality and ensure compatibility with Java versions 11 and above
fix possible concurrentmodificationexception in connectionpool # acquireconnection ( )
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to include classLoader context to improve clarity of error messages for better debugging
added exception handling for writer and reader threads in LargeStreamletTest . java and modified join duration in LargeStreamletTest . java
updated the logic for setting and retrieving extra pages in HomeFragment to ensure the correct number of pages is displayed based on user preferences
added error handling for bitmap rendering in AndroidImplementation . java to ensure robust image processing and prevent application crashes due to native image rendering issues
replaced the ` suppressNode ( ) ` method with a direct call to ` String . valueOf ( characters ) ` in ` BaseParser .
pdfbox - 4892 : use try - with - resources to avoid resource leak
deleted the TestDocInverterPerFieldErrorInfo . java file to remove unused test class to streamline the codebase
added a shell command to execute a key event 82 in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java
added a filenameToUrl map to store output paths and URLs in a JSON file to facilitate the storage of output URLs for better
mondrian : fix bug in profilerserver . resetresultsnotifiedflag ( )
rename texturehelper . gettexturefromimage ( ) to loadimage ( ) for good readability
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of
updated the seed and locale in the aNewIsbnRandomizer methods from " 9781797745008 " to " 978
updated notification sound setting to use a configurable ringtone instead of a hardcoded one to enhance flexibility by allowing users to specify a custom
added a method ` reportLoopCount ` to report loop count in the ` RootNode ` class to enable dynamic reporting of loop count for better
added a conditional check for repository type before finalizing the version in FinalizeUpgradeAction . java to ensure proper stack version handling during the upgrade process
updated the method to retrieve the region ID instead of the range ID in the listByRegionIDAndStateSearch query to ensure accurate filtering of
removed redundant call to streamManager . open ( stepExecution . getExecutionContext ( ) ) to streamManager . open ( ) in ItemOrient
added a new file ` CountedLoopProblem . java ` that includes a class for counting loops to demonstrate the use of a
[ graal ] add native method to execute compiled method ( graal - 471 ) .
[ gr - 10727 ] avoid npe when get field offset of type long or jlong in graalhotspotvmconfig
updated KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities for stream processing
add more detail to feedback constant sum question detail ( # 10316 )
removed the call to DynamicColors . applyToActivitiesIfAvailable in BaseApplication . java to streamline the code by eliminating unnecessary activities
added thread management and stack dumping functionality in CloseRace . java to improve error handling and debugging for child threads
changed return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and added new test cases
updated arcSize variable to use a fraction of 0.1 instead of a hardcoded value to improve flexibility in calculating the arc size based
updated the image width ratio from 720 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to
replaced ` minifySqlEnabled ` with ` shrinkWhitespacesInSql ` in multiple files to simplify SQL configuration by removing unnecessary whitespace settings
refactor ` waitForStateTransitionToEnd ` method in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve clarity and
added multiple import statements for CasCoreConfiguration and CasCoreHttpConfiguration in multiple test classes to ensure consistent configuration usage across multiple test classes
replaced direct reading of long values with a byte array for reading long data to improve performance and reduce memory usage during reading operations
( chore ) camel - http : avoid unnecessary fluenttemplate . to ( ) call
refactor Classpath handling in DeclarativeHintsParser to use separate variables for boot and system classpath to improve code readability and maintainability
add ` ` audio ' ' and ` ` voice ' ' scope ( # 5369 )
added methods to retrieve and set the layer manager in AnimComposer , AnimEvent , and TestJaime classes to improve management of
added a check to return early if the queue is empty and removed the showDefaultScreen method from Workspace to improve performance by avoiding unnecessary processing
added null checks for mapOp and mapWork in MapRecordProcessor . java and updated exception handling in TezProcessor . java to improve robust
refactor center and center2D handling in CylinderRegion . java for improved clarity and consistency to enhance code maintainability and
replace JUnit assertions with JUnit ' s ExpectedException rule in TestBadUseCases . java to improve test readability and maintainability by
modified subqueries handling in QueryExecutorImpl . java and added a new test for multi - execution in StatementTest . java to improve query execution
feat ( securitymodel ) : allow customization of security model .
added a new rctag parameter to the GET endpoint in ReviewInterface . java to enhance security by allowing access to edit content directly from the
updated test cases in Test . java to improve test coverage and ensure reliability of functionality
updated the PBEKeySpec constructor to use keyLength instead of blkSize * 8 to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader . java ` to enhance section definition handling in the document header
added a check for current location distance and speed in GpsLoggingService . java and modified location accuracy checks in Maths . java to improve
removed debug statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve performance by eliminating
doc : generate sample code in the java microgenerator ( # 238 )
replace boolean flags with int for rootNameFn and sourceFilterFn fields in InsightFilter . java to improve memory management and prevent memory leak
replaced binary search with direct addition of app information to the data and added lists to simplify the code and improve performance by eliminating unnecessary
updated ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` and adjusted intent creation logic to streamline
updated the value class name from " HostD " to " UsingUnresolvedD " to clarify the purpose of the value class in
removed unnecessary whitespace in assertRootArcs ( ) method calls to improve code readability and maintain consistency
added an assertion to verify the existence and existence of the security policy in JstatdTest . java to ensure that the security policy is valid
added an overridden ` getConfiguration ( ) ` method to ` Olingo2Component ` to ensure proper configuration handling in the Olingo2
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution to complete before
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception details
added method to send image via http and publish xmpPImage by http . smack - 134
camel - 14263 : camel - netty should use channellocal instead of channellocal to avoid memory leak .
fix balancedclickhousedatasource . spliturl ( ) to handle invalid host name
added a system property to disable JSR199 compiler to ensure compatibility with the latest JSP framework changes
added null string handling to CSVRecordReader and CSVRecordReaderConfig classes to ensure proper handling of null values in CSV formatting
added @ LiquibaseService ( skip = true ) annotations to multiple connection - related classes to mark these classes as skipped due to L
changed the type of ` aggregatedScope ` from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java `
add / command and / state / * topic to trigger event ( # 4338 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to correct the
updated the handling of " zkCredientialsProvider " to " zkCredentialsProvider " and added a deprecation comment in the SolrXmlConfig
fix mana tablet not be able to show the damage / mana - bar ( mana / display )
added a method to set the identifier collection in mCurrentCallEvent to ensure the current call event has the correct identifier collection before processing
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to streamline dependencies and
updated the string format for the submit operation in ScryptUtil . java to ensure consistent formatting for better readability and maintainability
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
corrected a typo in the assertion message from " definition to remove can ' t be null " to ensure that the error message accurately
added visibility to the shareWithMeIcon view in LocalFileListAdapter . java to hide the share - with - me icon to improve user interface
updated links from " http " to " https " in DefaultLogoutPageGeneratingFilter . java and DefaultLogoutPageGeneratingWebFilter . java to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 548 . fix npe
enhanced assertion in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context during assertion failures
added @ Deprecated annotation to multiple NeuralNetwork and related classes to indicate that these classes are outdated and should no longer be used
added a null check for the context in CrawlerSessionManagerValve and implemented a test for context awareness in TestCrawlerSessionManagerValve
modified the ` getJspApplicationContext ` method to include a privileged action if security is enabled to enhance security by ensuring proper access control when retrieving the
updated length calculation logic in RocketComponentConfig . java to include bounds checking for component lengths to ensure accurate length computation based on component boundaries and
replaced ` @ Singleton ` with ` @ Singleton ` in ` NonceService ` and added ` Scopes . SINGLETON ` in ` OpenID
updated the ` updateChildLinks ` method in ` FileWrapper . java ` to include additional parameters to enhance functionality by ensuring child links are updated
refactor ` doExecute ` and ` buildRealURL ` methods to use ` URI ` instead of ` String ` parameters to improve code cl
increased the delay value in publishWithDelay from 100 to 500 in RetrievalBlockingMessageStoreTests . java to allow more time for
add an option to override shift code in euclidian keyboard
[ hotfix ] [ runtime ] fix npe in nodeclustercoordinator . isleader ( )
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the identity filtering logic in AbstractKerberosDescriptorContainer . java to use isReference ( ) instead of getReferencedServiceName ( ) to improve
modified the ` newInstance ` method to accept a ` noop ` parameter instead of an ` AbstractCommandOptions ` parameter to simplify the constructor signature and
added a delay in the catch block for IOException and InterruptedException to ensure proper handling of potential interruptions during TCP record processing
updated method call argument handling in PatchExtensionMethod . java to ensure original arguments are preserved after method calls
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing loaded libraries to
int - 1187 add support for ` ` apply - sequence ' ' and ` ` ignore - send - failures ' ' attribute to the
removed the x509PublishUrl and x509ViewName from ClientKeyPublisherMapping and JwkViewResolver classes to streamline the code by elim
updated the handling of the readers array in QueryComponent . java to ensure proper assignment of the subReader when there is only one reader available
refactor ValueSourceParser to use Double2Parser for max and min functions instead of ValueSourceParser to improve code readability and maintainability
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables and imports from Highlighter , SpanGradientFormatter , TokenSources , and TokenSources classes to improve code clarity and eliminate unnecessary
server : fix user creation by use uuid instead of string
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` flowBuilderServices ` as a
updated PostgreSQL connection settings and refactored table creation methods in WriteJdbcPTest . java to enhance performance and maintainability of database operations
removed the conditional check for the " editor . laf " preference in DefaultPlatform . java to simplify the code for better readability and maintain
ambari - 10663 . fix npe in servicecomponenthostimpl . getdesiredstateentity ( ) ( ncole )
simplified margin calculations for left and right dimensions in FloatingTaskView . java to improve code readability and maintainability by reducing
added a conditional check for running state in RootFolder . java and updated the status line in NavigationShareTab . java to improve control flow and
do n ' t increment thread number in cpucallgraphbuilder since it be n ' t use anymore
ggb - 2175 make sure we do n ' t get all tool in the toolbar
added NetworkAddressChangeListener interface to HomekitImpl and updated warning messages in HomeKitImpl . java to enhance network interface functionality and improve error reporting
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of leaseManager to
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` linkStyle `
added a null check for the exception message in ExceptionHandlerRegistryFactory . java and a test case in ExceptionHandlerRegistryTest . java to ensure
lucene - 1748 : make directorytaxonomywriter # getnextid volatile and improve exception message
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure
added ` HasSourcePath ` interface and updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and
replace StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling by eliminating unnecessary string concatenation
added a custom index field name for the " tag " facet in the OrdinalMappingAtomicReader and TestOrdinalMappingAtomicReader classes to
modified the calculation of the ` toEpochMilli ` method to handle negative seconds and negative nanoseconds correctly to ensure accurate conversion between negative and positive
updated buffer type retrieval in OGLESShaderRenderer and LwjglRenderer to use String . name ( ) instead of vb .
added functionality to set and get block update scripts in CopyPaste . java to ensure the application can manage and manage block update scripts effectively
added a new file TestCMoveLimitType . java with methods for testing character buffer limits to ensure performance and correctness of character buffer operations
[ java ] do n ' t poll audio packet if there be no audio packet to process .
( chore ) camel - sql - stored - templates : fix arrayindexoutofboundsexception
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor Console creation and version printing logic to use a custom factory method to improve code readability and maintainability by encapsulating console creation logic
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to use a new method for comparison to improve code clarity and maintainability
added EOFException handling in Http11InputBuffer . java to improve error handling for negative EOF conditions
add unit tests for group member deletion and deletion from non - existent group
camel - 14263 : remove unnecessary array creation in camel - ftp and camel - irc
deleted the V2ReplicationProtocol . java file to the class is no longer needed for protocol version 2
updated references to ` ImmutableSortedSet < BuildRule > ` and ` DefaultJavaLibrary ` to use ` SourcePath ` instead of ` Build
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` , along with refactored ` StupidFinal
make directtemplatefeatureiterator thread - safe , a suggest by valerybokov
updated the assertion in WriteResponseHandler . java to include an additional check for the replication factor to ensure that the response count does not exceed the
added a null check for the index number in the ItemRowAdapter class to prevent potential NullPointerExceptions when accessing index properties
corrected the spelling of " areAnchestors " to " areAncestorsShown " across multiple files to improve code readability and
added a check to return early if the application width is less than 12 to optimize performance by avoiding unnecessary processing for small application sizes
updated equality check for changeLogParameter in ChangeLogParameters . java and added a new test for parameter values in ChangeLogParametersTest . java
changed the access modifier of the loggers map from static to final to ensure the loggers map cannot be reassigned after initialization
updated return statement to return the base plot instead of the current plot to ensure that the method returns the correct base plot instance
[ hotfix ] [ rest ] do n ' t warn if upload dir be delete externally
added a boolean parameter to ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to control the sending of HTTP status code
added a condition to check if the comment length is greater than zero before processing a multi - line comment to ensure that multi - line comments are
added imports for BuckFileType and FileTypeManagerImpl , and modified file type associations in BuckModule . java to improve file type management and
replaced multiple ` ToLong ` and ` ToInt ` imports with a wildcard import in ` ComposedUtil . java ` to simplify import
added error handling for unsupported CPU options in RTM command line options to improve clarity of error messages for unsupported CPU scenarios
updated formatting and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the Player class
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate mocking of
fix infinite loop in polyglotexceptionimpl . getnextelement ( ) .
set the system context to null in AndroidTestEnvironment and implement a reset method in ShadowFontsContract to ensure a clean state for testing purposes
added a new method ` toMillis ` to ` TimeGranularity ` and updated time handling in ` PinotDataSourceDimensionFilters ` to improve time
refactor ControlFlow and Guard classes to improve handling of finally statements to enhance clarity and correctness in processing finally statements
updated array comparison logic in Assert . java and ArrayEqualityAssertTest . java to improve clarity and accuracy of error messages when arrays do not
[ scene2d . ui ] fix npe in windowclicklogic .
corrected the bitwise operation for index assignment in MeshBuilder . java to ensure proper indexing behavior in the MeshBuilder class
nifi - 10385 : remove unused variable in standardprocessscheduler ( # 5338 )
added support for processing Java annotation processors in KotlincToJarStepFactory to enhance annotation processing capabilities in the build process
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION 150 and refactored page snap
added shortcut permission checks and refactored shortcut management in LauncherModel and DeepShortcutManager to improve shortcut management and ensure workspace updates based on
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search functionality in the application
added null check for core name in CoreAdminHandler and enhanced error handling in CoreAdminHandlerTest to ensure robust handling of null core names and
added marker selection functionality in NearbyMapFragment to manage bottom sheet behavior when a marker is closed to improve user experience by ensuring bottom sheet
added error handling for throwable exceptions in FileSyncAdapter . java to improve robustness by printing stack traces for uncaught exceptions
refactor memory handling in TestMemoryAwareness to use OutputAnalyzer for better error handling to improve readability and maintainability of the test code
refactored FeedQueues to utilize UnitOfWork for database operations to improve transaction handling and maintain consistency in database
log warn if defaultdrmsessionmanager be use on wrong thread
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` for packageType and resourceCompression to ensure consistent
changed the content type of the XML _ MIME string from " text / xml " to " application / xml " across multiple test files to ensure
updated configuration file references from ` configFile ` to ` INSTANCE . confFile ` to ensure consistency in file handling and improve clarity in configuration retrieval
updated the exit message in the waitUntilReadyAndTimeout method from " sleep 5 ; exit 1 " to " exit 1 " to ensure the
updated data types from IntMath to LongMath in HiveExpandDistinctAggregatesRule . java to ensure proper handling of larger values and prevent potential overflow
added HeadlessException handling in the Toolkit class to prevent execution on headless environments
added a condition to check if the current recipe matches the furnace ' s world before processing the smelt to ensure that the smelt
planner - 269 add support for move thread count in log message
fix wrong resource name when use rev _ include
added a new test class ` Issue582Test ` for sorting features in the map database to ensure correct functionality and ordering of features in the
[ native ] add test for decimal overflow .
refactor LoadingCache class for improved performance to enhance efficiency of loading operations
added a rule to avoid non - constructor methods with class names in NamingRulesTest . java to ensure compatibility with Java naming conventions and prevent
danielwagnerhall : add try - catch to catch staleelementreferenceexception
added a method ` hasView ` to ` DatabaseSnapshotGenerator ` and ` JdbcDatabaseSnapshotGenerator ` for view existence checks to improve error handling
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to enhance animation responsiveness and improve debugging capabilities
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the fixed rotation transformation
added a new method ` walk ` in ` TempFSTTermsReader ` and modified term frequency writing in ` TempTermOutputs ` to improve
added SolrQueryRequest parameter to the create method signatures across multiple augmenters to enable handling of SolrQueryRequest in query processing
added new triggers for post , content , and announcement in SingleTableMySQLTriggerTest . java to enable testing of database interactions with null content and
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code readability and maintainability by centralizing comparator
updated query string formatting in PhoenixQueryBuilderTest . java to ensure consistency in SQL queries across different operating systems
added Spark initialization to the init method in RequesterTest . java to ensure that the Spark instance is properly initialized before running tests
added methods to retrieve and save total storage pool and fees in DynamicPropertiesStore . java to enhance functionality by allowing retrieval and saving of total
added support for dev mode for streaming files from the src directory in AssetsController . java to enhance resource loading flexibility based on user ' s
updated key retrieval in MapMarksManager from ` getPosition ( ) ` to ` getMapMarkKey ( ) ` to ensure the correct key is used
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the handling of token rewriting
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to
updated file path handling in JxBrowserManager to use fullPath instead of fileName to improve clarity and consistency in logging messages related to Jx
updated image file creation logic to use ` equals ( ) ` instead of ` equals ( ) ` for consistency to ensure correct handling of image formats
( chore ) camel - somfytahoma : use thing . getuid ( ) instead of thing . getBridgeuid (
( chore ) camel - alberto : disable flaky test on github
added static properties for SSL keystore types , passwords , and trust store types in OpenWireConnectionTimeoutTest . java to enhance SSL configuration flexibility
improve troubleshooting of dynatrace exporter v2 ( # 2590 )
added a method to remove a session ID from sessionIdToSessionInfo to ensure proper cleanup of session information related to session management
added logic to set the hostname of alerts in HeartBeatHandler and adjusted formatting in AlertReceivedListener to ensure alerts have a valid hostname
simplified the logic for determining if a buffer is empty in ChannelEndPoint . java to improve code readability and maintainability by reducing
( chore ) camel - kmodule : use kie / api / kmodule . xsd instead of kie / kmodule . xsd
added a test for seekTo mode in ShadowMediaPlayerTest and modified seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
rename ` createTask ( ) ` to ` createThrowingTask ( ) ` in multiple executor classes to clarify the purpose of the
added a border to the close button if the application is in AQUA _ LAF mode to improve the visual appearance of the close
updated TSPTimeStampService to set request method to POST and modified URL formatting in TestSignatureInfo to enhance HTTP request handling and improve code read
[ drools - 7 ] add support for wildcard type permission in xstream
added error handling for non - generic diamond types in ` Attr . java ` and created a new class ` DiamondRaw .
[ hotfix ] [ table - planner - blink ] fix typo in reloptutil
updated requirement checks for unsigned 16 - bit and 32 - bit settings in Http2Settings . java to ensure only valid unsigned long values are accepted
removed the Issue664Test . java file to remove obsolete test cases related to map interface functionality
removed unnecessary exception handling for disposed sessions in SessionsPoolTest . java to improve test reliability by preventing operations on disposed sessions
[ geos - 7892 ] fix wms build for geoserver 2.0 ( # 4893 )
updated the method ` setIndex ` to use ` intValue ( ) ` instead of ` setIndex ` for setting the selected index to ensure proper handling of
added a method to check if manual unstashing is allowed in TaskbarStashController to improve control flow and prevent unnecessary unstashing
camel - 14263 : camel - jbang - do not allow custom id to be specify in route coverage
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting expected events to enhance flexibility in event mismatch message retrieval based on
added a new file HeaderFixer . java that processes header files to facilitate the processing of header files in a specified directory
added broadcast functionality for first load completion in Launcher . java and modified widget binding in LauncherProvider . java to improve user experience by ensuring
deleted the ` SuperJumperAndroid . java ` file to the functionality is no longer needed in the project
updated return statement in SystemTableScan . java to check if the table is distributed and modified test queries in TestStarQueries . java to ensure
removed keyValuesProviderAware and ObservationConventionAware interfaces from the Observation class to streamline the code by eliminating unused interfaces
remove remapped miss resource from the registry when a remapped resource be miss .
change return type of ` base + i * scale ` from ` + i * scale ` to ` ( long ) i * scale ` to
added caching mechanism for data format string retrieval in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the query in RemoteAuthenticationEndpointTests to include a filter parameter for user attributes to ensure that only users with the specified username are retrieved from
update condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java
updated logging to include container information for the current workspace to improve tracking of app exit events for better debugging and monitoring
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest . java which be no longer use
do n ' t add marker if it do n ' t exist
added a menu item to open the browser and modified server handling in JavaScriptEditor to improve user experience by allowing users to re - open the browser
added a new error message for cases with multiple outputs in the ErrorMsg class and improved method signatures in SemanticAnalyzer to enhance error handling and
updated the ` addEntryListener ` method in ` BasicTest . java ` to include an ` EqualPredicate ` parameter to ensure proper functionality of
fix arrayindexoutofboundsexception in coordinatearrays . reverse ( )
updated the method call from ` isOpen ( ) ` to ` isOpen ( ) ` in ` ToolbarPanel . java ` to ensure correct behavior
added a boolean variable ` first ` initialized to ` false ` in ` TestPayloads . java ` to track the initial state of the test
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to
set the destination of the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message processing
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of larger
remove unused variable in nestedarithmetictest . java and add @ override to avoid warning .
simplified the addition of components to the pending list in HttpClientRequestImpl . java and updated assertions in HttpTest . java to improve code
updated artifact replacement logic in GetMavenDependenciesTask . java to replace " analysis - " with " ( ! solr - ) analysis - "
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed debug print statement from substring method in ReferenceUtil . java to streamline code for better readability and performance
add visibility predicate environment to the field visibility schema transformation ( # 1181 )
added solidityJsonRpcHttpPort and solidityNodeHttpJsonRpcEnable fields to manage JSON - RPC configuration to allow dynamic configuration of the
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException when removing drop targets
refactor StubJarTest to streamline the creation of stub JARs to improve code readability and maintainability by encapsulating the creation logic
added new features for the Setup wizard and Workflow helper in StartPageTopComponent . java and updated import statements in GettingStartedTab . java to
patch by jbellis ; review by brandonwilliams for cassandra - 1342
simplified the condition for checking the availability of a fixture to improve code readability and reduce unnecessary type casting
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve code clarity and
updated the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enhance performance by preventing blocking operations
added a new constant " COL " and updated regex pattern matching in TableBlockParser . java to improve pattern matching accuracy for header separators and enhance
change return value from 32.0 f to 31.5 f to improve camera responsiveness
added a new preference for starting on Boot Up in GpsSettingsActivity and updated URL format in Utilities to improve user experience by providing a clear
increased the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger client secrets
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to use ` ParameterRegistration # enablePassingNulls ( true ) ` to
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to a race condition
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return a ` PinotFS ` instance or null if
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on the device ' s locale
added MetalLookAndFeel to the UI in bug8032878 . java to enhance the visual appearance of the application
added synchronization and pre - destruction for ping task management in the Bot class to ensure thread safety during message sending and improve resource management
updated error message retrieval in GlobalErrorHandler to use throwable directly instead of its message to simplify error handling by eliminating unnecessary message retrieval
rename parameter ` module ` to ` from ` in ` ModuleTable ` , ` ModuleTable ` , and ` PackageTable ` classes to improve
replaced ` Exception ` catch block with ` CmdLineException ` and added logging for exception handling to improve error handling specificity and enhance debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and introduced ` hashCode ( ) ` as deprecated to
refactor boolean variables and method signatures in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintain consistency in
updated zoom level values in BasicMapViewer from 10 , 20 , and 7 to 0 , and 0 in MapView . java to improve map
refactor user and group validation logic in DrillRoot . java to utilize ImpersonationUtil for process user and group names to improve
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in UnixFileSystemProvider and WindowsFileSystemProvider to
added ArgumentExtractor support to DelegatedClientAuthenticationAction and related classes to enhance functionality by allowing argument extraction in authentication requests
changed the ` defaultGroup ` variable from private to private final in ` NacosServerRegisterRepository . java ` to ensure immutability
refactor tile size changer to use createtilecaches ( ) instead of destroy tile cache .
removed duplicate calls to removeAllViews ( ) in InfoLayoutHelper and CustomPlaybackOverlayFragment to streamline the code by eliminating redundancy
refactor cleanFeedsWithoutSubscriptions method to encapsulate deletion logic into a separate method to improve code readability and maintainability by reducing
replaced instances of ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1748 : use temporaryfolder to prevent test failure on window
mahout - 1745 : fix for npe in conic five point ( e )
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod .
refactor image handling methods in CImage and CPlatformWindow classes to improve code readability and maintainability by encapsulating array conversion logic
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to replace WritableByteArrayComparable with ByteArrayComparable
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
( chore ) camel - maven - plugin : use java . util . objects . equals ( ) instead of java . util . equals (
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullability annotations to improve clarity
added verification for various error and bad request views in NinjaDefaultTest . java to ensure that the application correctly handles various error and 404 responses
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
adjusted timestampsViewPaddingBottom calculation and modified listViewPositionOffset initialization in DetailFragment and ListFragment to improve layout responsiveness and ensure
updated catch blocks in ZkStateReader . java to handle InterruptedException instead of KeeperException to improve error handling and ensure proper thread interru
added null checks for fields and headers in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure that requests
server : do n ' t throw exception if staticnat service be not support in the specified network id
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove extra empty screens in the launcher to improve user experience by removing unnecessary screens
added fixedWidth flag to BitmapFont and modified xAdvances calculation logic to handle glyphs with fixed widths to ensure accurate positioning of glyphs with
removed the boolean parameter from the createFragment method and refactored its usage in ChangeLogFragment to simplify the fragment creation process and improve code
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enable interceptor integration with state machine methods
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and facilitate future updates
updated role creation and configuration in TestAuthorizationApiAuthorizer , StorageBasedMetastoreTestBase , and StorageBasedMetastoreAuthorizationDrops
added a boolean variable for sorting counts before processing in FacetComponent . java and updated test cases in TestDistributedSearch . java to improve code
updated properties handling in CheckstyleReport . java to use the build directory instead of the target directory to ensure the cache file points to the correct
added functionality to handle inactive replicas in DeleteInactiveReplicaTest to improve test reliability by ensuring the correct Jetty instance is stopped based on the
added a new parameter for the file name in the FileActionsDialogFragment constructor and updated its usage to allow dynamic title display based on the file
updated order direction logic in CellLayout . java to include an INVALID _ DIRECTION constant to ensure proper handling of external and non - external order
updated innerTransferRequest fields to include currency , from , and to fields in InnerTransferRequest . java , and modified API path annotations in Account
add jobexecutionidforjobid ( ) method to jettestsupport ( # 2261 )
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and updated the visitIdentifier method in FindTypes . java to simplify import statements and improve code readability
added action text color to the AuthenticatorActivity to enhance the visual appearance of the action in dark mode
added ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , ` AbstractManager ` , and ` MockManagerImpl ` classes
renamed methods and variables related to test steps from ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
updated the ` startDriver ` method to include a ` cancelClient ` method and added a ` cancelClient ` method in ` RpcServer `
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller
initialize lastDisplayedUser to Optional . empty ( ) to ensure lastDisplayedUser has a default value to avoid potential null pointer exceptions
added an ` findAll ` method to ` QueryDslMongoRepository ` and created a test for ordered results in ` AbstractPersonRepositoryIntegrationTests
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions during stop operations
planner - 269 : fix warm - up loop in case of a failure
fixed - pipeline . xread ( ) and pipeline . xreadgroup ( ) method do n ' t work with redis 2.2 .
updated methods in LinkedBufferInput and StreamInput to use ` incrReadByteCount ( n ) ` instead of ` this . incrReadByte
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and updated CasWebSecurityConfigurerAdapter to use WebSecurityCustomizer to enhance security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added a registerProviderInternal method to ShadowContentResolver and modified ContentProviderController to handle ProviderInfo to improve provider registration and streamline the creation
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the updated class file structure
added a method to set the keep - alive configuration in SingleConnectionManager to improve connection management by allowing configurable keep - alive settings
[ java ] use supplier < flowcontrol > instead of unicast sender flow control to avoid npe .
added a null check for the current point in the DrawLocus and GBasicStrokeD classes to avoid potential NullPointerExceptions when accessing current point
added error handling for IOException in ChannelEndPoint and improved synchronization in WebSocketConnectionD13 to enhance robustness and prevent resource leaks during asynchronous
danielwagnerhall : take a screenshot if the selenium . screenshot . location setting be set to true
replaced ` assertEquals ` with ` assertThat ` in multiple test files to improve readability and maintainability of the test code
truffle : remove deprecate getcontextreference ( ) in favor of getcontextreference ( ) .
refactor exception handling in StubberImpl and add new test classes for handling exceptions to improve error management and ensure proper cleanup of mocking progress
updated error handling in Actor . java and Group . java for clarity to improve error reporting for non - ascendant actors and ensure proper
added location permission handling and user interaction in ` LocationPickerActivity ` and ` ContributionController ` to improve user experience by enabling location access
http : / / issues . apache . org / activemq / browse / amq - 2698 - add test for mdb
added import for CookieSpecs and set a standard cookie specification in requestConfigBuilder to ensure compliance with HTTP standards for improved request handling
replaced manual boundary checks with a direct method call to ` overlaps ( r1 , r2 ) ` to simplify code and improve readability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed a log statement in Air
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance functionality by allowing users to browse monitoring URLs
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
updated NearbyListFragment to set icon resources based on place description to improve user interface clarity by providing appropriate icons based on place type
added a null check for the package before retrieving its name and added a type to the allClassesByPackage map to avoid potential NullPointerExceptions when
added a new file PrintInlining . java containing a main method that prints a success message to facilitate testing of inlin
fix ( javadoc ) : fix nested brace in javadoc tag ( # 3995 )
[ java ] remove unused id and offset from archive test .
updated EdgeDataTable to retrieve both edges and meta edges instead of just edges to ensure that the model reflects both the current and current edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated playback speed logging to use float instead of integer for better precision to improve logging accuracy and provide more detailed information during playback speed settings
do n ' t send roomremoveevent when cluster be start .
updated the parameter name from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to improve clarity and accuracy of the configuration settings
added key settings for texture key in TextureHelper . java to enhance texture manipulation capabilities for better performance
refactor ` PythonDslProjectBuildFileParser ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` PythonDsl
[ j2kt ] add a librarynormalizationpass to the j2cl transpiler so that it can be apply to the library
replaced ` nextResponseBodyConverter ` method calls with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverter
[ hotfix ] [ runtime ] remove unnecessary check for frozen segment
fix ( sql ) : add @ temporal ( value = timestamp ) to consolesessionvo
added new files Hbs . java and HbsTest . java to implement Handlebars template rendering with model and view parameters to enhance the flex
added null and empty checks for hint and incoming message visibility handling in ChatMessageAdapter . java to improve user interface responsiveness by hiding
change keyset ( ) to values ( ) in ImportCsv . java to ensure all measurement values are processed in a single iteration
test : add unit test for confirm dialog
added a check to return null when there are more than 2 distinct column indices to optimize performance by avoiding unnecessary processing when there are too many
refactor MiscUtils to improve handling of JAR file paths and add a list to enhance robustness by preventing duplicate entries in the list
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated websocket dependency versions in TestOSGiUtil . java to ensure compatibility with the latest Jetty WebSocket library versions
change return type of getAttributes ( ) to return an unmodifiable map to ensure immutability of attributes to prevent unintended modifications
added logic to update the modified status of SketchCode when the document text differs from the saved program to ensure the header updates correctly when the
replaced instances of ` new Double ( bytes ) ` with ` new Float ( bytes ) ` in multiple classes to improve performance by avoiding
changed the method from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure the correct
updated conditional check to include " javax . naming . Context " class name in HtmlJndiTreeReport . java to ensure proper handling of context
updated database option handling in StorageUtils to use a switch statement and improved logging format in Manager to enhance code readability and provide more detailed
changed the condition from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual edge
replaced the static final int FLAG _ SLIPPERY with an import statement for LayoutParams . FLAG _ SLIPPERY to
truffleconstantfieldprovider : fix array index out of bound exception .
added functionality to retrieve and set the Google Drive folder path in PreferenceHelper and related classes to enhance user control over the Google Drive folder
ggb - 2175 shufflesuggestionpopup do n ' t work for enter , escape and up arrow
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve null safety and clarify that certain assertions may return null
updated bitwise operations in ArrayUtil . java for better clarity to improve readability and maintainability of the code
added a new test file ` ApiExceptionTest . java ` and modified ` ClassInstrumentor . java ` to check if a constructor can be instrument
added functionality to manage anti - aliasing messages in StreamIn and StreamInManager classes to improve the management of anti - aliasing messages during
added a method ` isKeyguardSecure ` to ` ShadowKeyguardManager ` and updated related tests in ` ShadowKeyguardManagerTest `
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the class
updated string splitting logic in GrblUtils . java to replace ' > ' with ' ' and added a conditional check for 3 - digit
renamed the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the ` checkDrained ( ) ` method in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest
updated light parameters and shader configurations in HybridLightTest . java to improve lighting effects and optimize shader configuration
replaced instances of ` TestProjectFilesystems ` with ` getProjectFileSystem ( ) ` in multiple test classes to streamline filesystem initialization and improve
updated the type of ` loadRerunFile ` from ` String ` to ` PathWithLines ` in multiple files to improve type safety and
refactor Gson , JsonArray , and JsonObject classes for improved code organization to enhance maintainability and readability of the codebase
updated TEST _ DIRS array to remove @ NotNull annotation to address issue # 2022 . 1
added a call to close the ParcelFileDescriptor in ShadowParcelFileDescriptor . java to ensure proper resource management and prevent memory leaks
added a method to reset the prefix index in the BasisLibrary class and refactored prefix index management in the Stylesheet and Basis
added LogLevel annotation to TestDistributedStatsComponentCardinality . java to facilitate debugging by controlling HTTP connection settings
added calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that modifications to ` IntList ` are not
added @ NotNull annotation to methods in GrpcServerRunner and GrpcClientBuilder , and modified URI construction in GrpcClientBuilder to ensure
fail to build jline graal demo : noclassdeffounderror , fixes # 615
improve insight performance by invalidate the function array if it ' s invalid .
added platform - specific handling for generating the manifest file in GenerateManifestStep . java to ensure proper formatting of manifest files across different operating systems
fix for rfe3531161 : redundant nullcheck of nonnull value
added @ Nullable annotation to getConfigDescription methods and improved null checks in ConfigDescriptionRegistry and ThingResource classes to enhance code safety by preventing
make masterjobcontext . createcancellationexception throw runtimeexception instead of throwable
pdfbox - 4892 : init stream if crop box do n ' t exist , a suggest by valerybokov
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR with a debug flag to provide a debug option for en
updated FragmentTestUtil to use Robolectric ' s ActivityController for activity initialization to improve test reliability and maintainability by utilizing
renamed ` getFileCoordinates ` method to ` processFileCoordinates ` and updated related references in ` ShareActivity ` to improve clarity and consistency
updated class names from ` ABCase ` to ` TestABCase ` across multiple files to clarify the purpose of the classes related to
changed parameter name from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in ` Manager
refactor the handler initialization in OpenRocketViewer . java to call doSimsChanged ( ) before setting it to improve responsiveness
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifact IDs to enhance
refactor IndexingJob to improve path handling and add segment validation in SegmentChecker to enhance code clarity and ensure only valid segment paths are
updated condition from ` gte ( scanPtr ) ` to ` lte ( scanPtrTop ) ` in ` GCObjectHeapIteratorAddress
refactor PreprocessorDelegate to use a memoized Supplier for replacement paths and source path map to improve performance by reducing redundant computations and
rename ` JsonExamples ` class to ` Examples ` and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve traceability and debugging during file extraction operations
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future feature additions
added a new file ` Main . java ` containing a main method that prints the entry point of the ` Main ` class to facilit
fix race condition in register sip account . patch provide by damian minkov .
removed duplicate continue statements in NativeScanner . java to improve code clarity and maintainability
changed package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused imports
replaced ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for queriedDeps and exportedDeps to improve performance by
updated method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java
added charset handling to metadata in ExtractingDocumentLoader . java to ensure proper content encoding is included for streaming content types
cloudstack - 10385 : fix sql statement to use prepared statement instead of string concatenation
added a check to return early if the slot is - 1 in WindowListener . java to prevent further processing when no slot is available
( chore ) camel - maven - plugin : add option to ignore transitive repository .
removed the declaration of BackgroundJobManager in ContactsPreferenceActivity . java to streamline dependency injection for better readability and maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
resolve npe on stop when reconnect fail - resolve http : / / issues . apache . org / activemq / browse / amq -
added a condition to break if the index matches the length of the string and the matcher is at the end of the matcher to improve performance by
added a configuration value for the server port in the IntegrationTest annotation to ensure tests run without port conflicts
added a new UDF ` reverse ` function in ` FunctionRegistry . java ` and created it in ` Hive . ql . exec . UDF
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple classes to improve clarity and consistency in context path retrieval
refactor Tracer class to improve code readability to enhance maintainability and facilitate easier debugging
[ hotfix ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase
updated import statements in XMLChangeLogParserTest . java to streamline imports and improve code readability
added synchronization to the StarTreeRecordStoreCircularBufferImpl class and implemented a clear method in TestStarTreeRecordStoreCircularBufferImpl to
updated forecast values in OpenWeatherMapOneCallHandler from zero to 60 minutes , hours , and day to improve data accuracy for weather data
increased timeout annotations and updated fetch time handling in AbstractPageOperationTemplateTest . java to improve test reliability and provide clearer timeout
updated RemoteTargetGluer and FloatingHeaderView to improve handling of remote target handles and add new animations for all apps content to enhance performance
updated ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of ` Collection < Feature
added multiple chiseled chiseled item to the BotaniaCreativeTab list to enhance the creative tab with additional chis
updated assertions in TestRadioButtons to compare expected sizes instead of a hardcoded value to ensure that the expected sizes of optItem and retrievedOptions
added functionality to track uncompressed and compressed file sizes in RCFileCat . java and implemented a method to retrieve the number of rows to enhance functionality
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added error handling for NDArray operations in JnaUtils . java to ensure robustness and prevent runtime exceptions when attempting to access an already closed
refactor BlobServer class to improve code structure to enhance maintainability and readability of the code
fixed bug 138367 - unusedprivatemethodrule miss static private call from initializer
reformatted the initialization of ` lexicalScope ` and ` lexicalMap ` in multiple files to improve code readability and maintainability by
http : / / issues . apache . org / jira / browse / amq - 4649 - add test for autostart
added getter methods for level , quadtree root , and item boundables in Node , Abstractnode , and STRtree classes to improve accessibility
updated version parsing logic to handle minor version numbers correctly to ensure accurate extraction of version numbers based on the presence of digit characters
added a check for empty tags before updating item tags in ItemRegistryImpl . java and changed log level from warn to debug in ItemRegistryImpl
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to
refactor disassemble method to use a dedicated method for caching to improve code readability and maintainability by encapsulating disassembly logic
updated Log4j2ConfiguratorServlet . java to improve logging functionality to enhance debugging and monitoring capabilities
replaced instances of ` HiveException ` and ` AuthorizationException ` with direct return statements in ` StorageBasedAuthorizationProvider . java ` to simplify
updated the handling of the " CC " key in CGoCompileStep . java and added a new test case in GoBinaryIntegrationTest .
fix ( kubernetes - api - builder ) : make customresource buildable
removed the @ Override annotation from the Only class to ensure proper method overriding behavior in the code
added a timeout constant for three hour HTTP connections in HttpClientFactory . java to improve connection stability by allowing longer timeout durations
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
danielwagnerhall : add option ` ` disable all but trace ' ' to the selenium server
removed the @ Singleton annotation from ApplicationController . java to allow the ApplicationController to be instantiated without requiring an instance
added handling for OwnCloudAccount in ShareActivity to retrieve the display name or the account if it ' s an instance of OwnCloud
added import for BatchStatus and a test for resuming a paused job instance in SimpleJobLauncherTests to ensure proper job execution status handling in
added null check for cacheConfig before generating the value in HttpSyncDataService . java and modified the data refresh logic in DataRefreshFactory .
[ grid ] make dockersession public and add localnode . executewebdrivercommand if it exist .
javaparser : use default package name instead of ` ` java . lang ' ' in compilationunitcontext
pdfbox - 2576 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
mahout - 1343 fix checkstyle violation in testdistributedlanczossolvercli
refactor HttpServerTestBase . java for improved readability to enhance maintainability and clarity of test cases
refactor PortletApplicationMapTest to improve key - value assertions and streamline map entry set assertions to enhance test reliability and readability by
added tests for handling null values in nested beans in BeanTableSchema to ensure correct behavior of nested beans when null values are present
feature - add redissonautoconfigurationcustomizer to allow customization of redisson config
fix indexing issue in indicator . todouble ( )
allow user to specify a user when exec command in a docker container ( # 1308 )
updated the condition checks for WebSocket listener types in NettyWebSocket . java to improve clarity and correctness in handling WebSocket message processing
added unit tests for the ` semgrex ` attribute handling in the ` SemanticgrexTest ` class to ensure correctness of the semantic
added a broadcast intent to clear the pull unread status in HomeFragment to improve user experience by preventing unintended actions
removed conditional logic for setting ` isPreGingerbread ` and ` overScroller ` in ` TouchImageView . java ` to
add flush ( ) method to defaultprofilevalidationsupport to avoid memory leak
camel - 16400 : camel - core - do n ' t throw runtimeexceptions if camelcontext . veto ( ) be call twice
added floating action buttons and visibility management for the main FAB and maps fragment in ShareActivity to enhance user experience by providing a way to open
added inline parsing functionality to the ToDateTokenizer and updated related tests to handle edge cases to improve parsing accuracy and ensure proper handling of date strings
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated error messages to use " toppniv " instead of " tecken " for improved clarity to enhance user understanding of
added a condition to check if the server is checked before binding the service to ensure that the service is only bound when the server is not checked
updated the return statement to use getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) instead of getBeginColumn ( ) to
added waitFor calls to process and error processors in CxxPreprocessAndCompileStep . java and managedThread . java to ensure proper synchronization and
added a new property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` and ` CasPersonDirectory
wait for cluster state before wait for map entry to be load . fix # 2640 ( # 2641 )
added support for enabling and disabling SSL protocols in the NettyWebServer and SocketConfiguration classes to enhance security by allowing customizable SSL
replaced AtomicBoolean with AtomicReference for thread - safe access to improve thread safety and performance in SetOnce . java
updated QueryDslMongoRepository to handle null property cases and added a test for key retrieval in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to improve clarity and accuracy to ensure that the RoundRectBorder instances are not equal with self and maintain
added a check for empty genesis configuration and improved error handling for empty clusters to ensure robustness by preventing operations on empty clusters and
remove parallel test that can run multiple web driver in parallel thread
updated CountDownLatch and List initialization to use ` min ` instead of ` cnt ` and added a validation check for the sign length to ensure
updated conditional check from " windows " to " ! windows " in ProcessInformationsPanel . java to ensure correct behavior when windows is disabled
refactor methods in MoreCollectors for improved clarity and consistency to enhance code readability and maintainability by using more descriptive names
updated BitmexStreamingExchange , BitmexStreamingMarketDataService , and BitmexStreamingManualExample to improve service initialization and
added lat and lon validation in GeoPointField . java and corresponding test in TestGeoPointField . java to ensure that invalid lat and lon
renamed methods and variables related to workflow file handling in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency
refactor ResponderId class to improve code readability to enhance maintainability and facilitate future updates
updated ` getTableDocument ` method to accept a boolean parameter for withDependents parameter to control the behavior of table document creation based on the provided
added logic to count the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to ensure users are aware of the absence of coordinates
added caching for profile data retrieval in ProfileResources . java to improve performance by reducing redundant profile data retrieval
updated identifier derivation logic and refactored property value extraction in JpaMetamodelEntityInformation . java to improve handling of identifier attributes and
added index creation and retrieval tests for index and table views in UpgradeUtil . java and updated method names in UpgradeUtil . java to enhance index
add option to disable jersey exception mapper for default server
added a boolean parameter to the metaData parameter in EntryEditor . java to control the behavior of the storeFieldAction based on the new parameter
updated the parameter name from ' nsWindowPtr ' to ' ownerPtr ' in the nativeCreateNSWindow method to improve clarity by explicitly
updated SQL command to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in table naming conventions
added a new skin for the stOCK case and updated event firing logic in the Tile class to enhance the visual representation of item states in
fixed - rbuckets . get ( ) method do n ' t return null value . regression since 3.24 . 0 and 3.24
add findunrelatedtypestogenericcontainer annotation to detect unrelated type
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator for better state management to improve animation responsiveness and
changed the ` _ initialPageNo ` variable from ` final ` to ` _ initialPageNo ` and added logic to adjust the initial page
improve crc16 benchmark performance ( # 2690 )
added support for parsing comment strings in the FormattedSqlChangeLogParser to enhance the flexibility of changelog processing by allowing users to specify comments
refactor JarArchiver initialization in MavenArchiver and AbstractJarMojo to improve code clarity and facilitate the use of
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more specific exception
removed redundant conditions in TSServiceImpl . java and added multiAggregationTest ( DaemonTest . java ) in DaemonTest . java to streamline
added validation for format and type in GwtGL20 . java and implemented pixel reading in GwtGL20 . java to ensure compatibility with
refactor test methods in OutputMemoryTest , PrintR , and VarDump classes to streamline method calls and improve readability to enhance code
replaced UnmodifiableClassException with a more general Exception handling in InlineBytecodeGenerator . java to improve error reporting when instrumentation fails due to
[ gr - 10613 ] display class initialization trace when run with traceclassinitialization option .
http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo in method parameter
updated TopicRouteService to use Caffeine instead of Google Commons Cache for loading topics to improve performance and maintainability by lever
mbtiles : do n ' t allow datasource to be read - only
updated the regex pattern for invalid target release in FindBuildToolFailures . java and added a new test in FailureLogAnalyzerTest . java to
updated URI construction and location intent handling in DetailFragment . java to ensure location functionality is available and improve user experience by providing direct access to location
added a null check for inherited parameter contexts before collecting referenced IDs to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future updates
added ` addOriginResponseHeader ` method to ` ProxyRequestHelper ` and a corresponding test in ` ProxyRequestHelperTests ` to ensure proper
removed the new ProfileSettingDrawerItem ( ) method from GpsMainActivity . java to streamline the code by eliminating unnecessary item
added XML validation handling to multiple classes to enable dynamic configuration of XML validation based on context settings
danielwagnerhall : add a test to verify the result of executejavascript ( )
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure that the fetch size does not exceed the maximum allowed
replaced the method ` isCountOptimizable ` with ` allActionsAreOptimizableFilters ` and updated its logic accordingly to improve clarity
added event handling for node and mouse click events in StandardVizEventManager to enhance user interaction with selected nodes and mouse interactions
replaced direct memory setting with a helper method ` zeroBuffer ` in ` ManyToOneRingBuffer . java ` to improve code readability and
refactor TerminalNode to use a memory variable for the XorGroup and add getter / setter methods to improve code readability and maintainability
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elimin
refactor SourcePathResolver to streamline path resolution and improve handling of absolute paths to enhance code readability and maintainability by reducing red
fix ( dstu2 ) : correctly handle identifier in dstu2 parser
updated WebsocketRoutingFilter to use
renamed test suite files to test suite execution directories to improve clarity and consistency in naming conventions
refactor ` HaskellBinaryDescription ` to encapsulate platform retrieval logic into a separate method to improve code readability and maintainability by
added imports for IndexReader , IndexReader , and Field in multiple Java files to facilitate documentation generation with relevant Lucene classes
refactor ConcurrentLinkedStack to improve null handling and add new test methods for pop and bubble operations to enhance robustness and ensure proper functionality of
added methods ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
updated gesture end target condition in RecentsView . java to exclude home gesture when overview state is disabled and first layout is not active
added multiple package - info . java files for various Lucene packages to provide package - level documentation for various Lucene packages
added a line to set the text for the visibleAutoLeveler in AutoLevelerTopComponent to improve user interface localization by displaying the visible
added post - optimization callbacks to DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enable post - optimization functionality for improved
updated the decompressor and compressor initialization to include a true flag for padded compressed lengths to ensure proper handling of compressed data by resetting the dummy byte
removed the check ( user _ data ) method from Shaderc . java to streamline the code by eliminating unnecessary checks
added a check for local meta store in the retry logic to ensure retries are only attempted when the local meta store is available
updated import statements and added null check for hostStatus and caught exceptions in HeliosSoloLogService . java to improve error handling and
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
add referencetype . weak and referencetype . strong to concurrentmap in abstractserializationservice
updated colorDistance calculation to use absolute values and added a new test for findSimilarColor in HSSFPalette to ensure accurate color distance calculations
chore ( regen ) : update license year for v1.0 . 1 ( # 438 )
alexeibarantsev : add unit test for findelementbynumericid ( ) and findmultipleelementsbyid ( ) .
added flags parameter to register receivers in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to enable more granular control over receiver registration
[ java ] fix ffmpeg test to work with mocked ffmpeg
refactor OggInputStream to manage previous input and buffer usage to improve resource management and prevent memory leaks during file reading operations
added a constant RESPONSE _ WAS _ NULL and updated failureMessage initialization to improve code readability and maintainability by using a defined constant
updated anomaly condition in DetectionMigrationResource . java to check for both anomalyFailureCount and anomalyWarningCount to ensure proper handling
refactor Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the method call in TracingFeignClient to use the delegate ' s httpMethod ( ) and requestTemplate ( ) instead of a direct method
added name validation and referral follow - scheme handling in LDAPCertStore . java to ensure valid LDAP names and improve referral follow -
refactor the retain logic in GatewayRSocket to use a separate retain method to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve clarity and ensure
[ hotfix ] [ test ] remove unused configuration in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to the functionality provided by GenericItemUIProvider is no longer needed
add a way to set the selected object in the sipcomm selector box .
added an Isolated annotation to MetaInfConfigurationTest . java to indicate the accessibility of the FileSystemPool static method in tests
added a call to set the server connector ' s host using the HTTP _ INFO . bindAddress to ensure the server connector connects to the correct
updated token validity settings based on heart mode and grant types in DynamicClientRegistrationEndpoint . java to improve client registration responsiveness based on
added a new ` CloverInstrumentationFilter ` class and modified the ` SplitLogCounters ` logic to include type checking for synthetic fields to
added support for Smartmi Evaporative Humidifier in MiIoDevices . java and updated the formatting in ReadmeHelper
fix mineprocess . plausibletobreak ( CalculationContext context , int cost )
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 20611 . add error log if ambari may not be able to manage repository ( dlysnichenko )
updated the return statement in IntHashSet to include both containsMissingValue and containsMissingValue to ensure proper handling of missing values in the set
added Serializable field to RuleAdministratorImpl to enable serialization of RuleAdministrator objects
updated CrossOriginFilter to use HashSet and Set for allowed origins and allowed origin patterns to enhance security by enforcing unique allowed origins and patterns
updated G3D test files from " g3d / cube _ anim . g3dj " to " g3d / knight
added error handling for solidified position in updateLatestSolidifiedBlock method to ensure robustness by logging errors and preventing invalid updates
hbase - 25819 fix npe in execresult when null value be pass to pingprotocol . get ( )
added a method ` hasAccess ` to check user access permissions and updated error handling to use ` response ` null if ` response ` is not null
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror . java ` and refactored the
added a TextView to display the internal link text based on whether a file is a folder or a file to improve user experience by providing context -
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix modelzootest for day that be n ' t the same a the first day in the week
added logic to hide the IME keyboard in AllAppsContainerView and LauncherAllAppsContainerView to improve user experience by ensuring the I
add in memory event storage engine to test case
refactor file path handling in BsdFileStore and add getmntonname method in BsdNativeDispatcher to improve code clarity and
add unit test for issue # 1599 ( # 1599 )
added x and y parameters to the spawn command to allow users to specify x and y coordinates as parameters to enhance functionality by allowing users to specify
added a constant for minimum content dimension and refactored related methods to use this constant to improve code readability and maintainability by centralizing
remove debug . scope from graalcompilertest and hotspotcryptosubstitutiontest .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added pluginCheckClassNames to the failedChecks list and modified the addColumnsToUpgradeTable method to ensure proper handling of plugin checks and improve code
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added import for LuceneTestCase and annotation for bug tracking in RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421
updated home variable construction to ensure it ends with a space before adding it to prevent potential issues with file system separators
updated flags from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _
updated LiquibaseEntityResolver and XMLChangeLogSAXParser to use CompositeResourceAccessor and modified resource access methods to improve resource management
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` CxxDeps . of ( ) ` instead of `
renamed directory variables from " expectedDirectory " to " actualStubDirectory " and " actualFullDirectory " in StubJarTest . java to
updated the visibility of the resizeThreshold variable in Int2ObjectHashMap . java to ensure proper encapsulation of the resizeThreshold variable
updated folder name hint logic to check if the title is empty before setting the hint to improve user experience by providing appropriate feedback when the folder name
updated client ID parameters in UaaResetPasswordServiceTests to include " uaa " to ensure consistent client identification across tests
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated value representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle closed states to improve error handling by providing clearer
refactor MimetypeIconUtil class to improve code readability to enhance maintainability and facilitate future updates
renamed method ` supportsViewFor ` to ` supportsViewsFor ` in multiple view provider classes to improve clarity and consistency in method naming
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest . java ` and updated ` UnwrapParentheses
added built state management and a method to teleport objects in the Location class to improve the efficiency and functionality of object creation in the Bukkit
replaced ` Base64 ` encoding and decoding methods with ` Base64Utils ` in ` TokenKeyEndpoint ` and ` TokenKeyEndpointTests
updated imports and modified statistics reporting in TranslatorManagerHelper . java to include ProjectComponent dependency to enhance functionality by integrating project - related statistics tracking
rename ` ContainerAnnotation ` interface to ` ContainedBy ` to improve clarity and specificity of the interface ' s purpose
added null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null
refactor retweeter handling in TimeLineCursorAdapter for improved clarity and functionality to enhance code readability and maintainability while ensuring
updated the visibility and display of the verified text in UserProfileActivity based on user settings to enhance user experience by allowing customization of the verified
[ abucoins ] fix digest to allow multiple api key to be use in a single jvm
camel - 14263 : camel - mongo - make it possible to configure the mongo connection in the component . thanks to joao
added a ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related classes to utilize it to improve the handling of source
log a warning if hive _ corrupted _ column _ statistics be find when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , EastAsianWidth , and EastAsianWidth classes to improve
[ geos - 8470 ] escape email in geoserver home page
fix ( engine ) : enrich engine ' s reflections with submodules
updated the ` JoinModeller ` class to use ` numFeatures ` instead of ` means . length ` to improve clarity and accuracy of
added a check to ensure the command string is not empty before processing to avoid potential ArrayIndexOutOfBoundsException when the command is empty
added checks for debug log level before logging messages in SingleNodeKafkaResumeStrategy . java to avoid potential NullPointerExceptions when logging is not enabled
replaced ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK _
updated IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to handle automatic separation warnings and
tika - 3896 -- fix for tika - 3898 and tika - 3898 , a suggest by valery
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic due to JDK
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and encapsulate file creation logic
updated preference keys in UpdateUtils from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added sync interval
added a check to return null if the username equals Constants . FEDERATION _ USER to prevent unauthorized access to favorite users
truffle : do n ' t wrap truffleobject in executemethodnode . execute ( ) .
refactor filtering logic in JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServerWebAppTest
do n ' t allow access to valve file if access be deny
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary key backing indexes in OracleDatabase and AbstractDb2Database to ensure correct schema and catalog information are maintained during comparison
added ` MetastoreException ` and modified exception handling in ` MsckOperation ` , ` TestMSCKRepairOnAcid
[ hotfix ] [ kafka ] retry committing kafka transaction if it be already commit
[ issue # 3949 ] remove messagereceipthandle from the receipthandle when forward message to dlq ( # 3949 )
added services handling to DockerComposeContainer and created a corresponding test class to improve service execution flexibility and ensure proper initialization of DockerComposeContainer
use collectionutil . copyset to avoid concurrentmodificationexception
removed unused imports and simplified XML processing in FeedParser . java to streamline code and improve performance by directly returning the XML string
removed conditional check for disabling all apps and updated child index retrieval in Workspace to simplify code logic and ensure correct layout retrieval based on custom pages
change data type of ` energyReactiveVACSumConsumed ` , ` energyReactiveVACSumProduced ` , and ` power
added a new file ` bug4150029 . java ` implementing a JApplet for file chooser functionality to address bug 41500
added support for Spark configuration updates in HiveConf and SparkClient classes to ensure proper resource management and prevent memory leaks during Spark operations
added a long press indicator to AppIcon , AppIconMenuItem , and Launchable classes to provide customizable long press indicators for improved user
added handling for empty polygon in WKBWriter and updated test cases in WKBWriterTest to improve robustness of WKBWriter by ensuring
refactor ` UnflavoredBuildTarget ` creation to use ` Builder ` instead of ` @ Value . Parameter ` and add interner
added a new file ` MultiplyByMaxInt . java ` that implements a mathematical multiplication with a maximum integer to implement a
added functionality to enable the drawer indicator based on the current file state to improve user experience by enabling the drawer indicator for root files
updated package structure and removed unused imports in TestRAMDirectory . java to improve code organization and reduce unnecessary dependencies
replaced instances of FixedBitSet with BitSet in Automaton . java and Operations . java to improve performance and memory efficiency by using a
drools - 1343 dmn compilation error message should use message type instead of string concatenation
updated annotation annotations from " @ ContainedBy " to " @ Repeatable " in multiple test files to improve clarity and consistency in annotation
updated the sending file message to include the file duration to provide clearer feedback on the duration of the file transfer process
updated class name handling in OpenMBeanAttributeInfoSupport . java to ensure package access validation before loading classes to enhance security by ensuring proper package access
allow readresponseresolver to take an integer response count . patch by jbellis ; review by brandonwilliams for cassandra -
added a calculation for freeSize in StoreDirect . java to adjust freeSize based on a given string value
deploy - canary : do n ' t swiping up to utility keyboard
replaced ` SslContextFactory ( ) ` with ` SslContextFactory . Server ( ) ` in multiple files to ensure compatibility with the latest SSL context
removed the PrivilegedSocket class and simplified the connection initialization in PG _ Stream . java to simplify the code and improve readability by eliminating
rename InputTest . java file to improve clarity to enhance code readability and maintainability
modified the ` finishRecentsAnimationOnTasksAppeared ` method to accept a Runnable parameter and adjusted related calls to improve handling of blur
added null check for curLatLng before adding the current location marker to prevent potential NullPointerException when curLatLng is null
updated ` removeSecret ` method to retrieve client ID directly from ` clientDetailsService ` to ensure the correct client ID is used for secret removal
updated SQL query formatting and assertions in SqlSourceBuilderTest . java to improve readability and maintainability of the test code
http : / / issues . apache . org / activemq / browse / amq - 2698 - wait for executorservice to
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper error handling for unknown key exceptions in dataset operations
[ type : bugfix ] fix nullpointerexception in shenyutrierulelistener ( # 3038 )
[ fix ] lightcontrol . clonefields ( cloner cloner , object original field )
updated the logic for hiding stack traces in StdErrLog . java to improve clarity and correctness of stack trace handling
updated HttpSessionEventPublisher to use ` getContext ( ) ` instead of ` context . publishEvent ( ) ` and added null context checks to ensure
added a check to prevent semantic exceptions when the syntax of CREATE CQ is changed from v0.14 to ensure compatibility with the CQ
[ hotfix ] [ iotdb ] fix typo in flinkiotdbsink
simplify the simplifying logic in CanonicalizerPhase . java to improve code readability and maintainability by reducing redundancy
updated the method call to use ` context ` instead of ` null ` for setting the fileIcon to ensure the correct context is used for setting
updated ` readIdentifierWithSchema ( ) ` to use ` schema . getName ( ) ` instead of ` schema . getName ( ) ` to
[ beam - 8470 ] fix bigqueryio . readwithtimestamp ( ) to return utc timestamp
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest ` and
updated type casting in multiple Java files to use generics to improve type safety and eliminate unchecked cast warnings
removed unused import of PColumnFamily in IndexTool . java and MetaDataClient . java to clean up the code and improve readability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic in ` JavaClassUtil ` to improve annotation handling and ensure correct
svm : fix resourcefeature . getresources ( ) to check for jar file
updated CUDNN _ PATCHLEVEL constant and added new constants in cublas . java and cudnn . java files to improve clarity and consistency
changed the ResourceLoader class from ` ResourceLoader ` to ` ResourceLoader ` for listing layout directories to enhance flexibility by allowing resource loading from
fix the redstone tor ' s getattachedface method to work with simple attachablematerialdata
added handling for VARBINARY case in RelToStageConverter to enable support for VARBINARY data type in the conversion process
removed unused import of DateHelper in NoteAdapter . java to clean up the code and improve readability
updated backup notification messages and error handling in Backup . java to improve clarity and user feedback regarding backup creation success
mow - 522 fix positioning of eview1 ( relate to mow - 522 )
simplified the file creation process by removing the creation of temporary files to simplify the code and improve performance by avoiding unnecessary file deletion
replaced poll ( ) method with addFirst ( ) and removeFirst ( ) method in StackBasedSecurityContextHolderStrategy . java to improve thread
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
added a new test method ` testXorNeutralSnippet ` and ` testXorNeutralReference ` in ` IntegerEquals
added a static final Type STRING _ ARRAY to the TypeFactory class to facilitate type handling for String array types in the application
refactor AllAppsContainerView to encapsulate keyboard visibility logic into a separate hideIme method to improve code readability and maintainability by
force bit density for block state container to fix network issues .
refactor assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency to enhance readability and
minecraftforge / fml ' s gl _ max _ texture _ size / gl _ max _ texture _ size / gl _
[ java ] remove redundant call to trystoplogrecording in consensusmoduleagent .
added a conditional check to initialize startPosn based on the transform state to ensure startPosn is set to zero when the transform is in progress
updated star tree handling to use a new method ` isSkipStarTree ` instead of ` isStarTreeDisabled ` to improve flexibility in
added a flag to control whether nearby places need to be refreshed and updated the refreshView method to improve user experience by preventing unnecessary refresh
add maptransformer . of ( map < k , v > map ) and maptransformer . bimap ( map < k , v > map
updated methods in EmeddedObjects . java and EmbeddedObjects . java to improve functionality and maintainability of the code
added support for loading launcher widget information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance functionality by allowing access to loaded launcher widget
updated ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to enhance event handling capabilities
added callingUid and callingPid methods to ShadowBinder and implemented corresponding tests in ShadowBinderTest to ensure accurate tracking and resetting of process identifiers in
refactor ExpectationFailure class to use private constructors and add equals and hashCode methods to enhance encapsulation and improve equality checks for ExpectationFailure
bitcoinserializer : remove no support for deserializing message with name
updated width and height calculations in ImageReplacedElement . java to handle cases where newW or newH may be - 1 to ensure proper
added new character handling for " &# 9 ; " and " &# 32 ; " in CoreMarkdownNodeRenderer and MarkdownWriter to enhance Markdown rendering
added a Neutral button to the SharePasswordDialogFragment and refactored password handling logic to improve code readability and maintainability by
refactor methods to use a static class for retrieving file channel methods to improve code maintainability and reduce duplication
changed access modifiers of methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test from public to package - private to restrict access
added slider keytab configuration options for Slider AM in LlapOptionsProcessor . java to enhance the configuration options for slider AM keytab setup
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and adjusted animation behavior to enhance window management and
added synchronization and handling for workspace binding completion in LauncherModel . java to ensure that shortcuts are added only after the loader has completed and improve
updated fields and methods in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to improve immutability and stream
updated method signatures in IssueInterface and ValidationReport to use messageType instead of error and added a new JsonValidationReport class to enhance functionality by providing
added a method to retrieve the cipher provider name and improved error handling in RSAClientKeyExchange . java to enhance debugging output by providing clear
replaced ` getDynamicConfiguration ( ) ` with ` getFlinkConfiguration ( ) ` across multiple files to align with the new naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce unnecessary log output and improve performance
updated output formatting in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow access to these constants
added an @ Ignore annotation to CovariantOverrideTest . java to implementation of covariant override is currently unknown
replaced instances of ` Curly ` and ` Ques ` with a new method ` qtype ( ) ` to improve code readability and
camel - 17850 : camel - jbang - load route definition from a dom node . thanks to benjamin gra
added space minimum and maximum settings for the X - axis in ScatterChart to improve layout spacing for better data presentation
updated the formatting of the " as INTERVAL " string in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added a method ` shouldPreserveDataStateOnReapply ( ) ` to ` SplitScreenSelectState ` and a default implementation in `
added a check for the " UTF8 " key in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present in the
updated print statements in TestReproduceMessage and modified LuceneTestCase to use MixWithSuiteName for testing to improve output clarity
added a new UI event for long - pressing an AllApps item in StatsLogManager and updated ItemLongClickListener to log user interactions to
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure no modifications are made
added a condition to show the sector land info based on the presence of a preset to ensure that the sector land info is displayed only when the
[ hotfix ] fix raw type in generic in type information
refactor Enum class to improve code structure to enhance maintainability and readability of the code
added a boolean parameter to the ` buildNearbyRandom ` method and improved error handling for missing nearby random parameters to enhance flexibility
remove removal of temporary cache after write to reduce memory usage .
do n ' t hide the layer container when create a new layer page
initialize Availability _ availability to UNAVAILABLE in ContextHandler . java to ensure proper handling of unavailable availability states
updated the processPBFTCommitMessage method to accept a BlockCapsule object instead of a block number to improve clarity and functionality in handling
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gapic - java to 2.16
replaced the ` _ freeSpaceReclaimDisabled ` boolean with a ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed access modifiers of KDC options constants from public to private static in KDCOptions . java and added a new KdcDefaultOptions .
refactor JsonWriter initialization to ensure proper assignment and initialization to improve code clarity and prevent potential null pointer exceptions
updated variable names and method calls in ProfilePager . java for consistency and clarity to improve code readability and maintainability by standardizing variable
renamed the paintBackground method to paintComponentBackground in Slider . java to clarify the purpose of the paintComponentBackground method
added a method ` valueFromClassConstant ` to retrieve class constants and default values in ` Configuration ` to improve property handling and provide default values
added logging for initialization failures in KafkaService . java to improve error handling and debugging for service initialization failures
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Set to improve flexibility in managing resource paths
camel - 14263 : camel - core - optimize auto - create channel by default
added functionality to index documents with keywords in HTMLDocument . java and created a corresponding test in TestDemo . java to enhance document indexing by allowing
update SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional statement to initialize ` _ addresses ` based on the condition to ensure ` _ addresses ` is only initialized when it ' s not
updated constructor reference in CorrespondenceSubclassToFactoryCallTest . java to improve clarity and maintainability of the test code
refactor Builder class to improve code structure to enhance maintainability and readability of the code
updated ISBNtoBibTeXFetcher to use a new URL and improved error handling for invalid ISBNs to enhance user experience
fix keep - alive time from 1 second to 10 second .
added null check for the text before firing data change events to prevent potential NullPointerExceptions when the text is null
add an option to make the sentiment model a bit more efficient by use the rnnutils class
trim whitespace from the line in SuffixURLFilter . java to ensure leading and trailing spaces are removed before processing
added a check to return early if the player is in godmode to prevent further actions when the player is in godmode
ggb - 2268 remove register / unregister popup for checkbox creation dialog
removed the ` maximumSize ` parameter from the ` LinkedHashMapCache ` and ` BoundedLinkedHashMap ` constructors in ` CacheType ` , and
removed redundant calls to ` _ channel . close ( ) ` in ` ChannelEndPoint . java ` to streamline code for better readability and
added null check for keyIndex in FixAcidKeyIndex and modified KeyIndexBuilder initialization in OrcRecordUpdater and TestFixAcid
added Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent locale handling and improve error reporting
do n ' t create pinode if there be an instance of a node in the canonicalizer
refactor bciblockmapping to use the successor ' s start bci instead of the array
add getclassificationdisagreement ( ) to dbcloud so that we do n ' t get high variance
replaced ` BuildTarget . copyOf ( buildTarget ) ` with direct assignment of ` buildTarget ` to simplify code and improve readability by
refactor SqlRunner class to improve code structure to enhance maintainability and readability of the code
changed the data type of the ` date _ taken ` variable from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java
renamed ` knownApis ` to ` knownSdks ` and updated related references in ` DefaultSdkProvider ` to improve clarity and
use confidenceprogressindicator instead of progressindicator in createofferview
updated user agent check from " Cling / " to " UMS / " across multiple files to align with the new API standards for
add ` ` force iterate ' ' option to blueprintbuilder . iteratebpt ( )
added constants for message view types and modified the onCreateViewHolder method to handle different view types to improve code readability and maintainability by
replace ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary ` and ` MacOSXLibraryDL ` to ensure
a suggest by valerybokov ; use -- instead of -- instead of -- , a suggest by valerybokov
removed the ` canvas ` parameter from the ` insert ` method and related calls in ` TexturePacker . java ` to simplify method signatures and
replaced the method ` getVisitors ( ) ` with a default ` apply ( Refactor < S , T > refactor ) ` in `
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements by their names to enhance functionality by allowing retrieval of child elements
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer . java to ensure proper handling of character encoding in
updated ` SystemUiController ` and ` AllAppsTransitionController ` to use ` SystemUiControllerFlags ` instead of static UI state constants to
removed the private ClientConfigurationService from the IntrospectingTokenService class to eliminate unnecessary dependencies and improve code clarity
improve error message when hive split can not be open
removed the ownerId field from NodeEntry to streamline the code by eliminating unnecessary fields
updated backup configuration key from " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " to reflect the new configuration
updated the merge method to include score calculation to ensure the maximum score is maintained when merging TextFragment instances
removed the private Digester variable from Md4PasswordEncoder . java to simplify the class by eliminating unnecessary dependencies
added a validation check for the maximumUnimprovedStepCount property to ensure it is greater than or equal to 0 to prevent runtime errors
added a check to return early if there are currently open edits to optimize performance by avoiding unnecessary processing when there are no currently open edits
replaced calls to ` verify ( mock ) ` with ` Mockito . verify ( mock ) ` in ` BDDMockito . java
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` to ensure compatibility with
modified the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a single string to improve asynchronous handling of the
add logging to abstractsplitbraintest for all splitbrainprotectionon type
added null checks and logout configuration in DefaultLoginPageConfigurer and ServerHttpSecurity classes to ensure logout behavior is only applied when the HTTP logout
[ giac ] fix for giac [ [ 0 , 1 ] ] [ [ [ 0 , 1 ] , [ 0 , 1 ]
added support for log consumer management in DockerComposeContainer and created a new test class for DockerComposeLogConsumerTest to enhance logging capabilities and ensure
updated the parameter type in the testMapping method from " expected " to " actual " to ensure type safety by explicitly specifying the type of the
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to ` ThrowingSupplier ` that takes a ` Supplier < T , E extends Exception > ` to
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure proper flow control in the method
camel - 14263 : camel - platform - http - add support for buffer body . thanks to benjamin graf
added methods to handle platform - specific path separators in MorePaths . java to ensure consistent path formatting across different operating systems
added a null check before processing parameters in AuditEvent . java to avoid potential NullPointerException when authorizationContext . getParams ( ) is null
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to handle failure cases
updated SDK version from " 4611349 " to " 4514284 " and added new test methods in ShadowTextToSpeechTest to
fix thread safety issue in queuetransactionlog . gettransactionlog ( ) ( # 13854 )
added ` enableSqlWithoutProfile ` property to ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and ` JdbcEnvironmentRepositoryTests `
added a try - finally block around the write operation in ConnectHandler . java to ensure _ data is always reset to prevent potential resource leaks
refactor CREATE _ REGISTRIES to use EventGenerator instead of Supplier for better type safety to improve code clarity and maintainability by
updated date formatting to use the calendar parameter instead of the date to ensure the formatted date reflects the correct calendar context
updated the ` getThreadInfo ` method to include a stack trace depth parameter in ` CachedThreadStatesGaugeSet ` to enhance the accuracy of thread
added a ` prevTlogOnPrecommit ` field and modified the ` LeaderTragicEventTest ` sleep duration to improve transaction handling
updated the job URL from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net /
added null check for input path in SegmentGeneratorConfig . java and created output directory if it doesn ' t exist to improve robustness by ensuring
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored the ` TriangulationHelper ` to use it
updated the ` find ` method to include ` identityZoneId ` as a parameter in ` JdbcAuditService . java ` to ensure that the
refactor SpanCollector class to improve code readability to enhance maintainability and ease future updates
added a null check for the getCurrSession before accessing its session info to avoid potential NullPointerExceptions when session information is not available
refactor TransactionIsolationLevel class to improve code readability to enhance maintainability and facilitate future updates
renamed the method ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
added thread name assignment for the current thread in TestSession . java to improve debugging by providing clearer context about the thread being forwarded
refactor CookieManager class to improve cookie handling logic to enhance performance and maintainability of cookie management
simplified the return statement in LauncherExtension . java by returning an empty ArrayList instead of adding elements to improve performance by avoiding unnecessary
added OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user interaction by providing a touch controller
replaced the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState `
added a check for JUnitRule in the DefaultStackTraceCleaner and created a corresponding test in StackTraceFilterTest to ensure that only relevant elements
refactor MappedResizeableBuffer to use direct arrays instead of direct arrays for memory copying to improve code readability and maintainability by reducing
added a private BalanceListener variable and modified the balance listener handling in DepositListItem . java to improve code clarity and ensure balance listeners
updated color conversion logic in RealisticRenderer to handle edge modes to ensure correct color representation based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor and removed unnecessary calls to getLog ( ) in multiple test classes to improve error handling and
fix ( gl200 ) : remove unused import
updated the logic for determining if the last playback time exceeds the last updated time in FullDetailsActivity . java to improve performance by reducing unnecessary
spanishtreereader do n ' t handle elliptic node when there be only one lemma
added a condition to clear the " iso " language when the first value is empty in InstallItem . java to ensure that empty language settings are
updated the ` ReactiveLoadBalancerClientFilter ` to set the override scheme based on the service instance ' s security status to ensure correct scheme is used
http : / / issues . apache . org / activemq / browse / amq - 2175 - fix issue with duplicate byte
changed the visibility of the ` fullFilePathFromClassName ` method from final to non - final in ` NativeImageDebugInfoProvider . java `
refactor the ` Correspondence ` implementation in ` ShadowBackupManagerTest ` to use ` Correspondence . from ` to improve code
corrected the spelling of " US " to " EN " in multiple files to ensure consistency and accuracy in terminology related to language support
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify code logic for better readability and maintainability
add minecraftforge client to support tessellation of terrain .
added a return statement to TxCacheDB . java to prevent further processing in the cache management process
updated import statements from ` com . sun . xml . internal . ws . org ` to ` jdk . internal . org ` in `
refactor FastDictionary class for improved performance to optimize memory usage and reduce execution time
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 548 .
updated time values for GROUND _ HIT , TUMBLE , and SIMULATION _ END in FlightEventsTest . java to
[ beam - 8470 ] update protobuf to v1p26p0 and fix checkstyle issue
updated method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure the namespace declaration is
update instructorfeedbackresultspagedata to include displayablefsname and courseid for instructor profile picture link
updated DefaultPasswordValidator to include short sequence rules and added a test for alphabetic and numeric sequences to enhance password validation flexibility and ensure
danielwagnerhall : refactored remote control command to a single class to improve code readability and reduce boiler
removed JUnit import and annotation from ProxyClassSerializationTest . java to simplify the test class by eliminating unnecessary dependencies
updated the argument format in DLNAMediaInfo . java from " format = bgr24 " to " format = bgr24
remove speculativegenerationmovementphase from graalcompilertest and stub .
added checks to prevent overriding of the AUTHENTICATION _ MANAGER bean in multiple authentication managers to ensure that the authentication manager behaves correctly when
added handling for ` _ server ` and ` _ host ` in ` ForwardedRequestCustomizer ` to support both ` Host ` and `
added a call to ` sb . setLength ( 0 ) ` in ` ConsoleReader . java ` to reset the StringBuilder to avoid potential NullPointerExceptions
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access these lists for better extensibility
update OpenIDE version numbers from 1.31 . 0 to 1.32 in multiple Java files to ensure compatibility with the latest OpenIDE module
hbase - 25835 add hbase . server . netty . tls . wrapsize = 1024 * 1024 ( addendum )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to extend TestCase and added unit tests for tokenization to ensure proper exception handling and improve test coverage for invalid line
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory and add unit tests in OpenSamlAuthenticationRequestFactoryTests to improve protocol binding validation and
refactor SurfaceControl transaction handling in DepthController . java to ensure transactions are applied correctly when the root surface control is available
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to
phoenix - 4698 bulkload action should be create instead of write , to allow bulkload to be create in bulk load
removed the size parameter from the unSeqMergeList list in TsFileManagement . java and updated references in MergeTaskTest . java to simplify
camel - 7999 : allow to convert file : / / gf to inputstream . thanks to benjamin graf for
added a login method to the DefaultShardManagerBuilder and modified the DefaultShardManagerBuilder to conditionally call the manager ' s login method to
updated the formatting of the DeleteGlobalRef function call to improve code readability and maintain consistency
updated the table name in AbstractRegisteredService . java from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to
added a check for the completion state before termination the response to ensure that the response is only processed if it has not been marked to prevent potential
added a check for user student before comparing the giver with the response ' s giver in the comment logic to ensure that the giver
added security checks for linked profile access and improved color space handling in BMPImageReader . java to enhance security and ensure correct
updated the boundary parameters for setSimpleCuboid in ClassicPlotManager . java to correct the positioning of the plot world name to ensure
added a wait message for PMD status checks and refactored action handling in PMDOpenTool . java to improve user feedback and ensure
refactor gridPresenter initialization to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing duplication
changed return values from false to true in ContributionsListFragment . java to reflect the correct functionality of the method
added a test for skipping a distinct range in DistinctPrefixFilterIT . java and modified scan logic in BaseResultIterators . java to
pdfbox - 4892 : add test for acrobat checkbox group property , a suggest by valerybokov
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide functionality for retrieving the last modified timestamp of a file
added a condition to check if the metadata table is valid before processing the file format to ensure that the file format is only checked for valid metadata
add a popup for select the default currency in cashdeposit
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching a broader range of errors
added a new boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling
added an ` activeKeyId ` field to the ` UaaConfiguration ` class to store the active key identifier for better configuration management
updated action labels and descriptions for sending mails in SendMailActions . java and SendMailActions . java to enhance clarity and usability
changed the visibility of the ` isActive ` variable from private to volatile to ensure visibility of changes to the ` isActive ` variable across multiple threads
updated order by expression context methods from ` isDesc ( ) ` to ` isAsc ( ) ` in multiple files to correct the order order
do n ' t cast string to charsequence to avoid classcastexception
added a condition to check for the ownCloud application name in the display logic to ensure that the application name is valid before proceeding with further
hbase - 7008 allow hbase . rootdir . perms to be configure in hbase - site . xml if hbase .
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in JakartaServletWebExchange and JavaxServletWebExchange
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
changed the return type of ` getStateFormat ` from ` int ` to ` String ` in ` CollectionsHandler ` , ` ExternalCollectionsTest `
removed the type parameter from the logging statement in CentralAuthenticationServiceImpl . java and modified the ticket type check in AbstractTicket . java to
pdfbox - 4892 : handle illegalargumentexception , a suggest by valerybokov
updated conditional check for file existence in AbstractFileResourceSet . java to ensure proper handling of file names without trailing slashes
( chore ) camel - maven - plugin : add pathtranslator to pluginparameterexpressionevaluator
[ beam - 8470 ] move byte string coder to extensions . protobuf ( # 11345 )
added a boolean parameter to the JpaQueryParsingToken instantiation in HqlQueryRenderer . java and a corresponding test in HqlQueryRenderer
updated LaunchLugHandler and RailGuideHandler to include parent length in generateLaunchLugFromRASAeroRailGuide method to
removed the getNonceFactory method from BitmexStreamingExchange to simplify the code by eliminating unnecessary functionality
camel - mail : use placeholder instead of string concatenation in log statement
[ java ] set default timeout for driver conductor test to avoid false failure .
changed the initialization of loaded classes from true to false in ScanSpec . java to disable the initialization of loaded classes during scanning
added a call to grab focus on the search field to improve user experience by ensuring the search field is ready for
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
updated the assertion in StatementTest to use a more descriptive variable name to improve clarity and maintainability of the test code
updated the assertion in TestSolrConfigHandler to include the server URL in the error message to improve error reporting by providing more context about the expected
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` mocks in ` CsrfWebFilterTests . java `
updated regex pattern in FilterResourcesStep . java to use a dynamic density string to improve clarity and accuracy of drawable identification based on the current
added a method to retrieve the element prefix for UIIDs based on component type to improve clarity and maintainability of UIID generation logic
removed densityDpi check from displayInfo condition in RecentsAnimationDeviceState . java to simplify the condition to focus solely on display
added two new Java files for testing array cloning and large object alignment to ensure correctness and performance of array copying operations under various conditions
added import for LuceneTestCase . AwaitsFix and annotation for SOLR - 6157 in ReplicationFactorTest . java to indicate
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the credential update logic in FileDownloader and FileUploader to improve code readability and maintainability
added null check for the scanner before closing it in createFileScanners to ensure proper resource management and prevent potential NullPointerExceptions
[ java ] use getOrDefault for get value of received byte , transfer bytes , and packet to avoid npe
added nonce parameter and assertion for claim retrieval in TokenMvcMockTests to ensure correct handling of nonce values in token claims
refactor ChartEditor , ChartEditorFactory , DefaultChartEditor , DefaultAxisEditor , DefaultPlotEditor , and PaletteChooserPanel classes to
added methods to set width and height of the formLayeredPane in Form . java to ensure the layered pane is properly sized based on
updated import statements and added maxY method in BrowserContentPane . java to ensure proper height calculation for the owner component
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating success or failure to improve error handling by indicating whether
updated references to ` DOCKER _ COMMAND ` in ` DockerTestUtils . java ` and ` Platform . java ` to use the `
added null check for input stream in TestIsartorValidationFromClasspath . java and improved error handling in TestIsartorValidationFrom
added a color parameter to the drawLeaveBehind method in TaskbarView , CellLayout , and PreviewBackground classes to allow customization of
show an error dialog if android studio be not support ( # 3038 )
bug 10363 : throw a warning if an invalid identityproxy table name be find
added new methods for enabling and disabling module persistence in StartArgs . java to enable and disable module persistence functionality based on command - line
updated argument validation logic in GeminiMarketDataService . java to ensure argument length is greater than or equal to 1 to prevent potential
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order for questions
add a test base class to verify that there be only one role
updated exclude statements in AuthCheckFilter . java to exclude specific JSP files to enhance security by excluding unnecessary JSP files during setup
refactor scheduling logic to manage execution order and ensure posted runnable is not queued multiple times to improve thread safety and prevent multiple execution of runnable
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to enhance flexibility in
updated XMLParser to handle potential end - of - stream scenarios when reading input to improve robustness by handling potential end - of - stream scenarios
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address the issue of
update arrow positioning in DeepShortcutsContainer to ensure proper alignment of the arrow based on the icon ' s position
replaced ` printstacktrace ( ) ` with ` ignored ` in multiple Java files to simplify error handling and reduce unnecessary stack trace printing
added a ` refreshView ` parameter to the ` updateThumbnail ` method in ` AbsSwipeUpHandler ` and ` RecentsView
pdfbox - 4892 : improve usage message , a suggest by valerybokov
added validation for InternetDomainName and improved error handling in EmailFormatSpecifier and HostnameFormatSpecifier classes to ensure valid hostname inputs and enhance robustness
removed unnecessary reference to ` this ` in multiple activity classes to improve code readability and maintain consistency across the codebase
updated ` SizeBasedDocIdSet ` and ` SizeBasedDocIdIterator ` to use ` maxDocId ` instead of ` minDoc
modified the ` promptToOpenFile ` method in ` FileDialoger ` to accept an additional filename parameter to enhance file selection flexibility
updated widget and app page sizes and refactored page counting logic in AppsCustomizePagedView and AppsCustomizeTabHost
added functionality to retrieve coordinates from active instances and updated bounding box calculations in FlightConfiguration . java to improve accuracy of flight configuration calculations and ensure
camel - micrometer - fix test to use direct : instead of seda :
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3892 ] remove hidden metadata field from object if it be hidden .
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig ` to ensure that ` StarTreeConfig ` correctly handles
camel - 16400 : camel - spring - dsl - add builddynamicrecipientlist ( ) and buildstaticrecipientlist ( ) to camel
refactor InlineLayoutBox and HoverListener to handle repaint logic based on PaintingInfo to improve layout rendering efficiency and ensure correct repaint behavior based
replaced the DetectAuthenticationMethodOperation with a ServiceConnection and OperationsServiceBinder in AuthenticatorActivity . java to enhance the authentication process by utilizing
