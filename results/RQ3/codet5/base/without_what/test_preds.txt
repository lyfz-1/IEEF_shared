refactor SocketAppender initialization to set remote host and port directly to improve flexibility in socket configuration
refactor code to extract the logic for setting and setting the WWW _ AUTHENTICATE header into a separate method to improve code readability
updated the method call from ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` to ` msgLengthOffset ( recordIndex ) ` to
cloudstack - 4892 : fix npe in capacitymanagerimpl . computeovercommitratio ( )
added flags field and methods to initialize and retrieve anti - aliasing in ShadowPaint to enhance flexibility in handling anti - aliasing in shadow
updated the dialog title from " Set / clear / append / rename fields " to " Manage field names & content " to improve user experience by
do n ' t fail test if eclipse be not use to compile the project
added a check to ensure ` getNonce ( ) ` is not equal to an empty string in ` Realm . java ` and updated the
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to utilize it for tracking socket connection status to improve
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
added a check to ensure the thing is enabled before filtering if it ' s an instance of AbstractHomeConnectThingHandler to ensure that only valid
added null checks before removing and adding policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when the resource is not initialized
updated assertions in tests to use ` assertThat ( json ) . matches ( " \ \ hPM \ " ) ` instead of ` isEqual
added JSON serialization and debug logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information for better
added headerTime and tagTime retrieval in ComputedSummary . java and implemented getHeapTime method in HprofHeap . java to improve heap
replaced ` RxJava2Tasks ` with ` ApacheHttpClientMediaWikiApi ` for fetching upload count to streamline the upload count retrieval process and
removed unnecessary check for ` database . isMvStore ( ) ` in ` forceLockEvenInMvcc ` and streamlined the lock
[ issue # 3541 ] fix the issue that commitlog do n ' t respect the max message size .
added a check to ensure the folder info is marked as open and log a warning if it is not open to improve user experience by preventing
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are sorted in ascending order
added a constant string for hover message evaluation points government to enhance user experience by providing clearer feedback on point government
updated parameter types from ` Object ` to ` ItemInfo ` in ` supportsDrop ` and ` getUninstallTarget ` methods to improve type safety
updated assertion message in RequestBuilderTest from ` hasMessage ` to ` getMessage ( ) ` for better readability to improve clarity of error messages
replaced instances of ` NearbyMapFragment ` with ` NearbyListFragment ` and updated related method calls in ` Near
rename the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity by using a more
added a new configuration property ` sendZeroAnomalyEmail ` to enable sending zero anomalies based on the presence of zero anom
[ hotfix ] [ kafka ] fix illegalargumentexception in kafkaconsumerbase # open ( )
added methods to retrieve User and Geofence by their ID in the DataManager class to enhance data retrieval capabilities for users and geofences
added a constructor to ` BlockingResponseListener ` that accepts a maximum length of 2 MB instead of a fixed value to improve flexibility in handling
refactor memberBroadcastsReceived method to accept a byte array instead of a channel data array to improve code clarity and maintainability by using
replaced ` System . out . println ` with ` logger . info ` for logging snapshot paths and refactored snapshot fragment sending logic to
removed unnecessary URLs from the assertion in LoginSAMLAuthenticationFailureHandlerTest . java to simplify the test case by eliminating unnecessary URLs
[ hotfix ] fix checkstyle violation in configmetadataprovidertest
updated import statements in ListFragment . java and modified method parameter name in SnoozeActivity . java to improve code clarity and maintain
added a private static class ` AcceptAllFilter ` and refactored directory stream filtering to use it to improve code readability and maintainability
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
improve error handle for classnotfoundexception in finduniqueconcretemethod and getclassinitializer
added validation for Docker image names and created corresponding validation methods in GenericContainer . java and DockerImageNameTest . java to ensure that missing tags
updated the login error messages to be more specific for incorrect credentials to improve user experience by providing clearer feedback on authentication failures
added setAutofocus ( " autofocus " ) method calls to multiple Java files to set autofocus functionality to improve user experience by allowing
added tests for creating different IdentityZone configurations with SAML properties in the SamlIDPRefreshMockMvcTests class to ensure correct handling of SAML
add list items to the stack in ComparableVersion . java and implement a new test for MNG 7644 in ComparableVersionTest . java to
updated mode settings and adjusted return statements in Sheet . java , and added theme properties in UIManager . java to improve UI responsiveness and
updated package structure and import statements in RobolectricTestRunner , ParallelUniverse , and related test classes to organize ParallelUniverse
refactor method handling in LocalCacheFactory and NodeFactory to improve clarity and consistency in method invocation to enhance code readability and maintainability
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the
added functionality to draw self loops in the ProcessingPreview class to enhance rendering capabilities for self - loops in the graph rendering
updated configuration and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
set the translation Y - coordinate of the drag handle indicator to zero in AllAppsTransitionController to ensure proper positioning of the drag handle indicator
added logging statements to CollectionViewer , CommunityViewer , and ItemViewer classes to improve visibility into collection , community , and item data for better
updated the documentation for filter pushing behavior in HiveConf . java to clarify that filters are pushed down during query optimization to improve user
added an assumption to skip tests on non - OSX environments in ScanningAppProviderRuntimeUpdatesTest . java to ensure that the build server
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser and implemented diagnostic bundle logging in TestOSGi
fix for act - 1193 : retry async job with optimistic lock exception in executionentitymanager and executeasyncrunnable
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
simonstewart : make the firefox driver use the correct executable path on window .
update ` putIfAbsent ` method to ` containsKey ` for ` colFamToDynamicColumnsMapping ` to ensure it is only added if it does
[ hotfix ] [ table - common ] fix checkstyle issue in flink - hadoop
phoenix - 5596 : add derive columns and indexes from parent table for view with map in system catalog .
update instructor ' s googleid when add an account
updated import statements for TestCellReference in AllXSSFTests . java to ensure proper usage of TestCellReference from the Apache POI
added a check for block hardness in the mobility condition in LensPiston . java to ensure that block hardness is
added a new file LongPointerPressTest3049 . java for testing long pointer press functionality to demonstrate network error handling and
truffle : remove the option trufflefunctioninlining . shouldinline in favor of trufflefunctioninlining .
refactor null checks to use a ternary operator for better readability in BaseBuilder . java and XMLConfigBuilder . java to improve code
removed unnecessary condition in ListBlockParser and added a new test for deeply indenting list elements to simplify the parsing logic and ensure proper rendering
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve assertion capabilities for optional values
added an import statement for JUnit ' s Ignore annotation and annotated the test class to temporarily ignore tests due to issue # 1070 to address
remove jsinterop . jspackage . global in favor of string . tojsstring ( )
fix checkstyle violation in test / java / util / route / routestartuporderlasttest . java
added a condition to check if the media format is a video before proceeding with web subtitle configuration to ensure that web subtitle settings are only processed
added import of Security and set TLS disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms
server : do n ' t start storage in local zone , if the vm be in a zone , do n ' t add it to the
updated cache entry logging to include identity hash code and improved logging format in Driver and QueryResultsCache classes to enhance clarity of cache entry
added a skipModelUpdate option to manage dependencies and updated model logic in AddManagedDependency and ManageDependencies classes to improve dependency management by skipping model
added a test for sending a PendingIntent with a request code and implemented the send method in ShadowPendingIntent to ensure proper handling of PendingIntent
updated RocketFigure3d to enable and disable FBO in GLJPanel and GLCanvas creation and refactored overlay graphics creation
added synchronization to the ` HydrawiseAccountHandler ` and ` HydrawiseControllerHandler ` classes to ensure thread safety when modifying the `
added a test method to assume EasyMock does not work with Java 9 to ensure compatibility with Java 9 and improve test reliability
updated year retrieval method in TimestampUtils and refactored test format in SetObject310Test to improve accuracy of year retrieval and enhance test
fix a nullpointerexception in the jabber protocol provider when try to connect to a jabber account .
added " cur _ ws _ commit _ id " to the commit ID list in TxnHandler . java to enhance clarity and maintainability of
replaced ` ByteChunk ` with ` ByteBuffer ` for the ` buffered ` variable in ` BufferedInputFilter . java ` to improve performance and
added a new method ` toSync ` to convert a ` CompletableFuture < T > ` to a synchronous version in ` AsyncUtils ` to improve
updated GroovyConfiguredCompilerFactory , ConfiguredCompilerFactory , DefaultJavaLibraryRules , JavaConfiguredCompilerFactory , and KotlinConfiguredCompilerFactory
added a new test for handling hidden file uploads in the UploadTest class to ensure that the upload functionality correctly handles hidden file input scenarios
removed duplicate ` createTables ( ) ` call in ` SQLManager . java ` to streamline code by eliminating redundancy
added a check to return the local Maven directory if the file does not exist to ensure that the method handles cases where the file does not exist
do n ' t show ` ` hidden ' ' label for ` ` hidden ' ' input box
fix ( ctelementimpl ) : fix npe in getmetadata ( ) ( # 2698 )
replaced buffer . setFlags ( ) with buffer . addFlag ( ) in DefaultTrackOutput . java to improve clarity and consistency in
added a check to ensure the cached entity is sorted by ID before proceeding with reordering to improve performance by avoiding unnecessary reordering when
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added a null check for the backup folder before logging the expiration date to avoid potential NullPointerExceptions during logging
added a new file ` ArrayNewInstanceOfVoid . java ` to demonstrate the use of ` Array . newInstance ` with a
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler and GccCompiler classes to ensure that the ToolType field
replaced hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by reducing redundancy
make prometheusexemplassample and prometheusmeterregistrytest slow down .
removed @ Ignore annotations from multiple test files related to MongoDB server to streamline test execution by eliminating unnecessary dependencies
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test case to work with
updated the condition to check if the table is an artifical instead of a simple name check to ensure that the table is not a simple
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
updated session attribute handling in MongoSessionManager to check for null or empty values before clearing and unbinding to improve robustness by ensuring session attributes
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replaced direct reference to ` _ stopping ` with a local variable ` stopping ` in ` AbstractConnector . java ` to improve clarity and
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : camel - core - optimize message history by not use the stopwatch
refactor subscribe method to use lambda expression instead of doOnError for improved error handling to enhance code readability and maintainability by reducing
updated the assertion to check for WebSocketHandshakeException before asserting it to improve error handling by providing a clearer failure message when the error is
refactor AllAppsTransitionController to use View . OnLayoutChangeListener directly instead of an anonymous inner class to improve code readability and maintainability
refactor variable names from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability by using a more d
add support for ' default - output - channel ' on the < xpath - router / > element in the < xpath - router / > element
changed cacheSeconds from an integer to a String and added a DurationCapable annotation to improve flexibility in cache duration configuration
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the call to append ( buffer , true ) in ByteBufferPool . java to simplify the code by eliminating unnecessary method calls
added a check for the presence of " alt - rt . jar " in the boot class path to ensure that tests are skipped if it is
updated test cases in JdbcScimUserProvisioningTests to use upper case user names and modified email assertions to ensure proper handling of case sensitivity
updated FlightRecorderProfiler . java to use a list of options instead of an array to enhance flexibility in flight recording options based on Java
added a method to check if the stream is empty in WebCamInputPanel and updated imageDropHappened logic in Webcam
added a condition to check if the content view has content before processing the buffer in HttpParser . java , and implemented a new test for chunked
camel - atmos : fix typo find by codespell on fossies . org
added support for additional method names " printf " and " print " in Java2TypeScriptAdapter . java to ensure proper handling of print statements
added a new file ` TestCapacityUntilGCWrapAround . java ` and native methods for managing heap capacity in ` WhiteBox . java `
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
removed conditional check for stamped time before updating endTime in SamplingStatCalculator . java to streamline the code by eliminating unnecessary logic
added unit test base on user forum issue
tmi - jpeg : do n ' t throw iioexception when icc _ profile ' chunk have bad sequence .
fix rod of the mana rod not be able to reequip if they be in the right place
modified JoobyModule and SpringModule to exclude Config and Environment classes from registration to improve bean registration flexibility by avoiding unnecessary beans
simplify code by use container . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . getcontextclass
add additional namemap entry at the end of nameupdater . properties file
added a new boolean variable ` started ` to the ` EllipsoidRegionSelector ` class to track the start state of the ellipsoid region
updated the default protocol for URLs from " http " to " https " and removed the User - Agent property from the URL to ensure compatibility with
[ geos - 6545 ] validate sortby attribute in getfeature request ( # 4248 )
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential NullPointerException
added GraphicsConfiguration and GraphicsEnvironment imports , and modified image handling in DiagramGenerationTest . java to ensure compatibility with the default graphics environment for
add a check for null sideddelegate and throw a runtime exception if it be null to ensure that minecraft . class can be install
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flaky test locktest . testlocked ( ) .
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and joining strings to enhance string manipulation capabilities
replaced response status and message handling with a more informative error response in CoyoteAdapter . java to improve clarity and maintainability
refactor command handling and highlighting logic in SystemHighlighter . java to improve clarity and functionality to enhance code readability and maintainability
updated version number to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect the release of the
updated the buffer position to use dimensionSize instead of a fixed index to ensure the correct dimension size is used for positioning
added support for shell drag - ready functionality in the QuickstepTestInformationHandler and SystemUiProxy classes to enhance drag - and - drop functionality
log4j2 - 1341 - add assume test for socketappendersocketoptionstest
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to enhance security
updated the description setting from ` getDescription ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the ' value ' field
modify HqlQueryRenderer to handle reserved words more effectively and add tests for schema scoping in HqlQueryRendererTests to improve query rendering
( chore ) camel - subscription : fix a typo
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include an additional ` indexStartsAtOne ` parameter and adjusted related logic to ensure correct handling of
tika - 697 -- add miss mime type to magicdetector , and add test - document . cpio
[ hotfix ] [ table - planner - blink ] remove useless getmonotonicity method from flinksqloperatortable
added Inheritance annotations and implemented equals , hashCode , and toString methods in OneTimeTokenAccount and OneTimeToken classes to improve object comparison and
added a condition to check if the assistant is not launched when fling to ensure that the assistant is not launched when fling
added a new file SolarisShortDSA . java that implements key pair generation and verification using Solaris to demonstr
added a method call to toggleSearchLabel with a parameter of false to enhance search functionality by disabling the search label
cloudstack - 8237 : fix the bug that the volume do n ' t lock the snapshot on the primary storage when create a snapshot
refactor ` mConnection ` initialization and implement ` DetailsServiceConnection ` to improve code clarity and ensure proper cleanup of the service connection when
replaced the handling of SSLPeerUnverifiedException with an AtomicReference to store the request failure in HttpClientTLSTest . java to improve
removed the equals method from ConjunctionScorer class to simplify the comparison logic for better readability and performance
added a null check for item binding in mmm Launcher . java and logged an error message when it is null to improve error handling and
wait for leader election before call getraftgroupids in cpmemberaddremovetest .
updated cache size calculation and performance logging in DefaultCache . java to improve cache management efficiency and log a warning when the cache is full
updated API version references from v2 to v3 and modified order handling logic in CryptoFacilities classes to ensure compatibility with newer API versions and
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the list is empty to provide a way
drill - 8416 : fix nullpointerexception when read empty dictionary page from parquet
updated argument handling and added validation for subscription types in SerumStreamingService . java to improve validation and ensure correct market data type is used for
add a config to disable the charge animation when an item be charging on the top of a mana pool .
[ java ] remove the ` ` ischallenged ' ' flag from cluster timeout exception .
[ hotfix ] [ test ] log the cause of interruptedexception in waitforhelper
updated assertions in DefaultServletTest to use ` assumeTrue ` instead of ` assertTrue ` for directory creation to improve test reliability by ensuring
removed duplicate calls to StyleInjector . inject ( ) in ResourcesInjectorFull . java to improve code clarity and maintainability by standardizing method
changed changeLogFile and outputFile types from String to FileResource in BaseLiquibaseTask and DBDocTask to utilize FileResource for
update method calls from ` getX ( ) ` and ` getZ ( ) ` to ` getY ( ) ` and ` getZ ( ) ` for
updated Javadoc comments and changed the CacheEntry class to be final to improve code clarity and enforce immutability of the CacheEntry class
added regex quoting for single elements in resourceConfiguration to ensure proper handling of special characters in resource configuration
modified FileCredentialsCache to process KRB5CCNAME environment variable and adjusted EmptyCC to accept command - line arguments for the credentials cache to
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
chore ( ethereum ) : simplify hassufficientpeers ( ) implementation
danielwagnerhall : fix checkstyle issue in ` ` webdriver - web . jar ' '
fix : do n ' t expand ` ` areequal [ segment [ x , y ] , segment [ z , w ] ' ' format
added a check to clear pending rendering operations if the view is minimized to optimize performance by avoiding unnecessary operations when the view is min
fix flakiness in hazelcasttestsupport . sleepmillis ( ) .
fix continuously update key queue in writebehind queue
added a line to set the icon of a JLabel to null in GroupTreeCellRenderer to save some space icon for better user experience
updated test methods in TestBlacklistAwareRedirectResolver to use setStrictMatch ( false ) instead of setStrictMatch ( true ) to ensure proper
added functionality to close the server socket and refactored tests in ShutdownMonitorTest to improve resource management and ensure proper cleanup of socket resources
pdfbox - 4892 : optimize randomaccessstore ' s chunk rewriting logic
refactor field retrieval and error handling in Json . java to improve clarity and maintainability of the serialization process
[ hotfix ] move componentclosingutils to runtime . operators . coordination
server : delete all volume for a user vm when transition to error state
cloudstack - 8237 : fix npe while update ipv6 range
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderBeanManagerConfigurer ` and update related variable names to improve clarity
increased the timeout duration for getting leader retries in CollectionsAPIDistributedZkTest . java from 15000 to 30000 to
refactor error message handling to remove the input parameter from multiple parameter classes to simplify error message generation and improve logging clarity
updated image drawing coordinates in URLImage . java to use negative coordinates to ensure proper rendering of images with proper positioning
updated field name comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure consistency in comparison between field names
simplified the condition to check for the presence of a zero - card dimension in the result list to improve code readability and maintainability
[ hotfix ] [ stream ] add cause to streamtaskexception
refactor string building logic in Preprocess . java for improved clarity and efficiency to enhance code readability and maintainability by reducing
removed unnecessary whitespace in the read method of MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standard way to
do n ' t try to encode an empty extension list in the json parser ( # 4248 )
fix npe in librarymanager . extractpacked ( ) when there be no internal name .
added alias " node _ popup _ scripting " to " node _ popup / node _ popup _ scripting " in ScriptingMenuEntry
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView . java
camel - 16462 : camel - jms - fix classcastexception in camel - jms when use jmsproducer
removed unnecessary exceptions from method signatures in multiple Java files to improve code readability and maintainability
deleted ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` files to remove deprecated implementations to streamline the codebase
made ` __ content ` and ` __ contentETag ` fields final and added a new ` MicroServlet ` for handling GZIP compression to ensure
fix onobserveredo . repeat ( ) and onobserve . distinct ( ) issue
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and provide clearer context when a component
add a new file loaddspaceoaiconfig . java that load the dspace - config from the servletcontext
hbase - 15921 avoid npe in storescanner . scan ( ) when scan for non - matching key ( jesus cam
camel - 16400 : enable / disable jmx in camel - test to avoid jmx issue
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added YARN binary and Hadoop home path retrieval methods in HiveConf . java and implemented app ID logging in RemoteSparkJobMonitor . java
added support for " maria " database in DbConnectionManager to ensure compatibility with additional database formats
[ hotfix ] fix checkstyle violation in masterwalmanager and splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to implement unit tests for the ` ExecuteAndReturnString ` component to ensure
added a new file InvokespecialInterface . java implementing an interface and its dynamic invocation to demonstrate the use of dynamic method invocation
modified the implementation of the EvictingBoundedList class to improve performance and maintainability of the code
graphhopper now use turncosts = true instead of turncosts = false
added a check for ` style . backgroundDisabled ` and a validation check for ` selection ` to ensure that ` selection ` is non - negative
added a null check for the method signature in RpcServer . java to ensure proper error handling for unsupported methods
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to incorporate border spacing to improve
simplified the calculation of the value string by directly using the ` values . get ( " partitionColumnIndex " ) ` method to improve code
fix serialization of nameddecoratortaskdecorator in v4.1
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the ` equal ` variable from ` false ` to ` true ` and modified the comparison logic to ensure that the condition
modified UnicodeToLatexFormatter to handle highcoded Unicode characters and updated HTML Unicode conversion maps to improve formatting accuracy and ensure proper handling of Unicode
added null check and character assignment for ` value ` in ` OAIDCCrosswalk . java ` and ` Item . java ` to
danielwagnerhall : fix a bug in the seleniumbackedselenium where it would n ' t work in the
added a clear button to the DataBrowser and updated the BookmarksPanel to exclude the BOOKMARKFILE _ EXTENSION to improve user experience by
refactor base URL construction in OAuth2AuthorizationRequestRedirectFilter to utilize UrlUtils for better URL handling to improve code clarity and maintain
updated date assertions in SoftAssertionsTest to use parseDatetime instead of direct Date usage to improve test accuracy and clarity by using a more
modified the ` adaptOrders ` method to include a ` reverse ` parameter and adjusted the order adaptation logic accordingly to enhance order adaptation functionality
added null and position handling for variable declarations in PrettyPrinter . java and created a new Java11Var class with a test method to improve code
danielwagnerhall : remove unignoring test that be not implement yet
updated Configuration instantiation to use a parameter of false and removed conditional debug message for Hadoop conf property overriding to streamline configuration management by eliminating
replaced the call to ` drawChildren ( batch , parentAlpha ) ` with ` draw ( batch , parentAlpha ) ` in ` Widget
added unit test base on user forum issue
use default tomcat base instead of catalina _ base _ prop
added tests for retrieving JMM date time patterns in ShadowICUTest . java and modified ShadowICU . java to handle JMM locale
fix problem with left row style in plotSquared
added ZuulProperties as a dependency in TraceRestClientRibbonCommandFactory and its associated beans to enhance flexibility in managing Zu
tika - 2241 -- fix test that fail due to timezone . getdefault ( ) change
added new files ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to utilize ` getBuildTime ( ) `
updated the calculation of xDist to use the absolute value of mScroller . getCurrX ( ) to ensure accurate positioning of the
pdfbox - 4892 : remove unused file guirowtester . java
removed the @ NullableDecl annotation from the LazyMessage constructor and related methods to simplify the code and improve readability by eliminating unnecessary null
updated error message format in TestStream . java to include a placeholder to improve clarity of error reporting for better debugging
rename package from templateparser to markup for thymeleaf / thymeleaf - templates
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate XPath string evaluation to ensure correct handling of XPath
added nullable annotation to FutureUtils . java to enhance code clarity and prevent potential null pointer exceptions
add warn when invokedynamic be not resolve during call - graph construction
updated email references in ContextTest . java to use " example . com " instead of " gmail . com " to ensure consistency with the
updated HTTP response handling in HttpConnectionTest . java and modified URI comparison logic in URIUtil . java to improve clarity and correctness of
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` to provide a way to
update aws client interface to throw unsupportedoperationexception instead of unsupportedoperationexception
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the codebase
replaced ` long ` time with ` Instant ` time and updated logging methods to utilize ` Duration ` and ` Instant ` for better time
added version handling for media info options in LibMediaInfoParser . java to ensure compatibility with newer media info formats and improve logging clarity
added reflection - based proxy handling for IdeaDependency in ProjectReader . java to improve dependency management by ensuring proper proxying for IdeaDependency
added a new class ` SerialHeap ` and updated ` Universe ` and ` CollectedHeapName ` to use it to introduce a
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress warnings related to serialization issues
refactor mouse wheel event to use vector2i instead of mouse . position
updated MongoQueryCreator to handle null values in parameters and added a test for null case in AbstractPersonRepositoryIntegrationTests to improve robustness and
[ hotfix ] [ table - common ] change the return value of maptypeinfo . getkeytypeinfo ( ) from 2 to 1
added method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers by issuer to improve error handling for duplicate providers and
pdfbox - 4892 : add support for poor whitespace in cmapparser
refactor ContactsBackupJob to use a ServiceConnection for better management of the OperationsService to improve resource management and ensure proper cleanup of operations
modified type constraints handling in ` Attr . java ` and added new classes ` T6938454a . java ` and ` T69384
added a method to check if the account configuration is hidden and updated the condition in AccountList . java to enhance account visibility handling by introducing
added a check for the size of supported display in DisplayController . java to log an error when the number of supported display changes to ensure that
updated schema removal logic in PMetaDataImpl . java and added a test for schema removal in PMetaDataImplTest . java to ensure correct schema
ggb - 1343 fire passive login event in web ( not in web )
added a new Box2DTest class and integrated it into the GDXTester to enable testing of Box2D rendering in the application
clean up bypartionertype return null instead of null when apply index row / tombstone
[ hotfix ] [ network ] set default buffer request timeout to 5 minute
chore ( deps ) : update gapic - generator - java version to 0.0 . 5 ( # 119 )
add a help button to the openoffice panel to help the user .
added child option for TCP _ NODELAY in NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecodingServer to
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceTradeService to use wildcard generics to improve type safety and
added a transient Class < ? > classRef field and modified class loading logic in ScanResultObject . java to improve handling of class references and
refactor connection handling and response redirection logic in DecodeServlet . java to improve code clarity and ensure proper resource management during image decoding
refactor Querydsl to use a dedicated method for handling null cases to improve code readability and maintainability by encapsulating null handling logic in
added null check for actor in ParallelAction and modified action processing logic in SequenceAction to ensure actions are only processed when the actor is not null
reformatted lambda expressions in CtTypeTest . java for consistency and readability to improve code clarity and maintainability
added synchronization to the handling of sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its corresponding classes ` JJ ` and ` JK ` implementing ` Issue
added a method to revoke an existing certificate in the ` CertificateManager ` class and updated related tests to enhance certificate revocation handling and ensure proper functionality
added a check for missing body codes in HTTP response handling in AbstractHttpTest . java and implemented a corresponding test in HttpServerTestBase . java
added error handling for script engine loading in ScriptTransformer . java to improve debugging by providing clearer error messages when script engine is not available or
updated METASTORE _ CONNECTION _ POOLING _ TYPE to support additional connection pooling types and improved exception handling for Hikari
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file locking functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by showing or hiding locked files based on
refactor version handling in mmm Version . java and ppp Version . java to improve code clarity and maintainability
clear the endpoint cache when a new keyspace change
refactor synchronization logic by introducing a new private method ` waitForState ` to improve code readability and maintainability by encapsulating state -
updated methods in SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContext , and Skylark
chore ( html5 ) : move localstorage and sessionstorage to a common storage interface
fix nullpointerexception when create or replace view option be use
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling clarity by using a more specific exception type
updated query string retrieval logic in SpellCheckComponent . java to ensure the query string is set only if it is not already set to null
added validation for illegal characters in header values and implemented a checkValue method to ensure that headers contain illegal characters to prevent runtime errors
replace ` instanceSize ` with ` arrayBaseOffset ` in ` HybridLayout ` and introduce ` afterFieldsOffset ` in ` Host
added @ experimental annotation to astcommentcontainer . setcontainscomment ( boolean ) and removed it from abstractapexcommentcontainernode . setcontains
hhh - 510 : warn about association with ` @ fetch ( fetchmode . lazy ) ` and ` @ fetch ( fetchmode .
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added database and table name assertions in TestCompactionTxnHandler and set database and table names in TxnHandler to ensure consistency in database and table
camel - 14850 : timer component now also support graceful shutdown of the timer . thanks to damian for the patch .
added a check to prevent adding a trace if the block is not processed before adding it to the worklist to ensure that only processed blocks are
updated null element check in ProviderManager to use CollectionUtils for better null safety to ensure proper handling of null elements in the providers list
simplified the database version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to improve code clarity and maintainability by
added local index limit checks and modified query handling in multiple classes to improve query performance and ensure correct handling of local index limits
added a check to prevent adding collections with the same name and a different type in the AlterTableStatement class to ensure that collections with the
updated cursor handling logic in VDUBuffer . java and vt320 . java to improve cursor positioning and window base adjustments to ensure correct
removed the static final string USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unused constants
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a corresponding test in TestJavaVersion . java to ensure accurate parsing of
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
added a no - op test method to the TestReceivingMessagesSourceParserTests class to ensure that the test method is not executed in a
added a null check for properties before retrieving its value to avoid potential NullPointerException when properties is null
change IOException handling to initialize the IOException with the original cause instead of the original exception to improve error reporting by providing the cause of the IOException when
updated error message from " rolling upgrade to " stack upgrade to clarify the purpose of the upgrade failure message
added a TxConfidenceListener to manage transaction confidence updates and removed it from the wallet service to streamline the transaction confidence listener management and improve
bugfix # 11818 - jmx support for g1 perm generation
removed unused imports and simplified return statement in NearbyController . java to streamline code and improve readability by eliminating unused imports
pdfbox - 4892 : make class public , a suggest by valerybokov
added checks for non - home activity types in BaseSwipeUpHandlerV2 . java to ensure proper handling of non - home activities during
refactor DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and update related constants and initialization methods to improve clarity and maintainability of the
updated method names and return values in ShadowTelephonyManagerTest and ShadowTelephonyManager to handle case sensitivity to improve clarity
remove setUnfreezeAmount method call from UnfreezeBalanceV2Actuator to streamline code by eliminating unnecessary method call
change ` ` penalty per published talk ' ' to ` ` penalty per published room ' ' per match
replace com . google . common . io . files . copy with org . apache . commons . io . fileutils . copydirectory in fire
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
2 . x : fix javadoc warning for observable . delay ( long ) and observable . delaywithtimout ( long )
replaced direct DBObject usage with a method for adding multi - field operations and added tests for pushing all documents to enhance functionality and ensure
added a null check for ` randomUUID ` before setting the ID of ` hubChangeLog ` to ensure ` hubChangeLog ` is set
added support for hover events in InputConsumer and OverviewInputConsumer classes to enhance event handling for quickstep live tiles
added a delay and a conditional check for the bootstrap configuration in CoreContainer . java to ensure that the bootstrap configuration is properly checked before proceeding
add label to option to set the http client header size
hbase - 20650 hbase _ client _ retries _ number change from 5 to 35 to 15 in hbase test cluster
replaced ` toPath ( ) . resolve ( ) . toFile ( ) ` with ` new File ( getAbsolutePath ( ) ) ` for creating the
make encodedgraphcachetest . testencodedgraphcachetest more resilient to failure
updated the query command from " customer _ count " to " all _ tables " and added a new test method for querying over output to improve
added currency adaptation logic in KrakenAdapters . java to store currency metadata for each asset
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
[ hotfix ] [ runtime ] fix alert group name for empty dimension
[ influxdb ] fix publish metric when no measurement set
updated method names from ` doTransform ` to ` downcast ` in multiple converter classes and added null check in ` ConverterWithNumberFormat `
updated address filtering conditions in NetUtils . java and added a method to check for unique local addresses to enhance security by ensuring only unique local addresses
replaced direct calls to ` writeRowHeader ` with a new method ` quoteColumnNames ` for column name handling to improve code readability and
added methods for setting and getting system properties , including getter and setter methods , and enhanced utility methods in WrapSystem , StrUtils , and Class
added a constructor to the UpdateRequest class that accepts a URL parameter to provide a default implementation for POST requests
changed enum declaration from static to non - static in ProtoTypeAdapter . java to allow for subclassing of EnumSerialization in the ProtoTypeAdapter
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and its usage in ` DataImportHandler ` and ` ReplicationHandler
updated debug logging to format module names and added a new method to format the list of module names to improve readability and maintainability of the
fix row height in manageAddOnspanel by use default label font
remove unnecessary code and improve code style in defaultbrokerheartbeatmanager
updated handling of mean partition size and partition count in CqlInputFormat . java to ensure accurate calculation of the split count based on the mean
simplified the condition in the JUnitTestsShouldIncludeAssertRule class to improve code readability and maintainability by removing unnecessary checks
[ drools - 1369 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuple
added a check for the Hive stage ID rearrangement range in TezCompiler . java to ensure that StageIDsRearranger is
fix mbean typo in messagingservice . java .
updated memory check logic in LotsOfOutput . java to include detailed information about the total and delta of memory to improve debugging and monitoring of
added imports for ` Document ` and ` DimConfig ` in multiple classes and updated the ` hashCode ` method in ` LabelAndValue ` to
refactor LdapProperties and LdapAutoConfiguration to improve anonymous read - only configuration and related test cases to enhance clarity and maintainability of LDAP
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed visibility of the EchoInputDoFn class from public to private and added JUnit4 annotations to enhance encapsulation and restrict access to the
added ` finishMocking ` method to ` MockitoSession ` and overridden it in ` DefaultMockitoSession ` to handle ` Throwable `
removed extra dependencies from the parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline dependency
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve buffer handling and state management to enhance code clarity and ensure
replaced ` BlockLiquid . getStaticBlock ( material ) ` with ` BlockLiquid . getFlowingBlock ( material )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri for setting the background class to improve flexibility in handling
fix typo find by codespell on fossies . org
[ hotfix ] [ cli ] add support for streamingplan in plan dump
updated hash calculation logic in CraftingManager . java for better performance and clarity to improve code readability and maintainability by using computeIfAbsent
[ hotfix ] [ test ] fix flaky test for kafkapartitiontest
removed unnecessary condition checking for carriage return in TabsAndIndentsVisitor . java to simplify the code by eliminating unnecessary conditions
added a regex pattern to match temporary lines in NeuteredLinesFilter . java to enhance matching capabilities for temporary files in the code
doc ( regen ) : update license year for generated file ( # 4382 )
updated ` DataTypeFactory ` to handle " INTERVAL " data type and modified condition checks in ` UnknownType ` and ` ColumnSnapshotGenerator `
[ wavefront ] add histogram metric only when it ' s publishing histogram
updated the handling of the DivideUpstream configuration in ShenyuClientRegisterSpringCloudServiceImpl and DivideUpstreamUtils
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of sensor events with specified latency limits
added error handling for SocketException in HTTP request tests in SelectChannelServerSslTest . java to log warnings related to HTTP response issues
camel - 15663 : camel - ignite now use apache ignite 1.5 . 0 and camel - ignite karaf
updated print statements to handle empty sets and changed the logic for determining if the result set is reaching to improve clarity of output and ensure
pdfbox - 4892 : do n ' t swallow exception , return false instead
added tests for handling HDR capabilities in ShadowDisplay to ensure proper functionality and error handling for unsupported HDR capabilities in Android N and above
added a finally block to reset the classLoader to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer to include source and target aliases to improve clarity of error messages for better debugging and debugging
added a default constructor to the Message class to ensure that the Message class cannot be instantiated without parameters
fix priority of java . awt . component in non - gui mode
updated ` PhoenixDecimalObjectInspector ` and ` PhoenixObjectInspectorFactory ` to use ` PrimitiveTypeInfo ` and impro
replaced ` GZIPOutputStream ` with ` OutputStream ` and added a check for committed responses in ` CompressionResponseStream ` to ensure proper handling of
refactor method parameters and patterns in Authenticator . java for clarity and consistency to improve code readability and maintainability by using more descriptive
removed specific conditions for EJS and org . ibm in DCD . java to simplify the code by eliminating unnecessary checks
updated ThreadLeakTest to use a helper method for retrieving the thread group name to improve code readability and maintainability by encapsulating thread
added logging functionality to the ` afterPropertiesSet ` method and improved error handling in ` MethodInvocationPrivilegeEvaluator ` to enhance debugging capabilities and
changed the package of DmozParser from org . apache . nutch . crawl to org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to remove unnecessary Lombok
server : add iso disk for user vms in kvm
removed the handling of previous signal handlers and updated the test method names for clarity to improve code readability and maintainability by using a more
replaced static import of ` ArrayUtils . isEmpty ` with a direct import of ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to
replaced ` NoopDiscoveryClientAutoConfiguration ` with ` EnableAutoConfiguration ` and updated annotations in ` AxonAutoConfigurationWithSpring
added multiple @ Override annotations in ColorRGBA . java for better code clarity to enhance maintainability and readability of the code
planning : remove unused ` ` resetinitializedplanningentities ' ' flag and deprecate ` ` uninitialize ' ' method
updated the ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` classes to include ` buildTimeMs ` as a parameter to
updated GroupByOperator to use getFields ( ) method for retrieving fields and modified the condition for determining row size to improve code clarity and
added null checks before adding block appearance to prevent potential NullPointerExceptions when adding block appearance to the transaction
added support for the CurrencyPair CNC _ BTC and CNC _ BTC in the BTCEUtils and CurrencyPair classes to
updated skewAllowance from 5 to 15 and refactored related code to use CasConfigurationProperties to improve flexibility in handling SAML request skew
added sorting functionality to SongListActivity and updated query sorting in Utils to improve user experience by providing a more appropriate sorting property
added a method to read the request body as a byte array if necessary to ensure that the request body is properly converted to a byte array for
add a legacybaseblockwrapper to replace baseblock with nbtdata
updated IcebergBranchExec to check for tag existence instead of using Optional to improve error handling for non - existent tags in the creation process
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
correctly set shader storage block on photon trace demo
updated password requirement validation logic in IdentityProviderEndpoints . java and added corresponding tests in IdentityProviderEndpointsMockMvcTests . java to ensure required password
removed ` assumeReflective ` from ` notInitializedInConstructors ` in ` UnreadFields . java ` to streamline the code by elim
modified the SQL exception handling to include a check for closed connections to ensure correct URL is used for SQL execution errors on closed connections
added a new test method ` testRequiredBody ` to validate the handling of required parameters in the ` SpringMVCClient ` to ensure that
updated regex patterns for user and password in CredentialInjector . java and modified test cases in CredentialInjectorTest . java to improve regex matching accuracy and
added a new menu item " Item4 " and a corresponding key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance
updated print statements and assertion logic in TestCoreParser . java to improve clarity of test output and ensure that no results are produced during tests
updated equality check in SimpleNode . java to use ' id ' instead of ' children ' to ensure correct comparison of child nodes based on their
removed the public modifier from the PopulatorContextStackItem class to allow external access to the PopulatorContextStackItem class
replaced ` int ` with ` long ` for ` numDocs ` and added a new test method ` testSmallSampleFromCorpus `
reformatted the event firing logic in QuestManager . java for improved readability to enhance code clarity and maintainability by standardizing
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
refactor query appending logic in MongoSessionDataStore . java to improve readability and maintainability of the code
[ gr - 3649 ] fix unsafe . getlong in macro substitution .
updated time zone name for Asia / Amman from ARAST to EET across multiple language files to standardize time zone identification for
updated the ID of the deprecation logger from 90000010 to 90000011 to ensure the deprecation log reflects the new version of the
hhh - 14827 - handle rollback - only exception in session . getlock ( )
refactor DownloadExternalFile . java to handle non - empty suffix and link lengths more effectively to improve robustness by ensuring proper handling of link
set apple . laf . usescreenmenubar to false on o x
add integration test for integral [ f ( x ) ^ ( 2 ) , x ^ ( 2 ) , x ^ ( 2 ) ] (
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a modWhiteListPattern assignment in HiveConf and implemented a test for modifying Hive metastore URIs in TestJdbcWithSQLAuthorization
added a key - value pair to the invalidClasses map in EntryLoader . java to ensure that invalid classes are not added to the map
update target coordinate calculation in MobileInput . java to use player ' s team instead of a sharded team to ensure the correct player ' s
updated the cookie builder to use the host name from domainHelper instead of a hardcoded domain to improve flexibility in cookie handling by using the
added checks to determine if a column should validate nullable based on search conditions to ensure proper handling of NOT NULLABLE columns based on search conditions
refactor multiple security token service and ticket classes to improve code organization and maintainability to enhance maintainability and readability of the security token service
added a test for the ` deleteByQuery ` and ` addDoc ` method in ` CustomCollectionTest . java ` , changed ` separator `
added snapshot handling for binary data in ` ExecutablePreparedStatementBase ` and introduced a new test for blob types in ` PostgreSQLIntegrationTest ` to improve
updated cache and cache size checks and improved formatting in DefaultServlet . java to enhance code readability and maintain consistency in conditional statements
fix drag and drop not work in tab tab ( # 3395 )
refactor description creation and test assertions in ExecutionUnitRunner and CucumberTest classes to improve code clarity and ensure correctness in description
replaced ` isEmpty ( ) ` checks with ` StringUtils . isNotEmpty ( ) ` for ` myVersion ` and ` buildTimeString ` to
removed public access modifier from several methods in TimeUtils class and updated imports in GitBlitSuite and TimeUtilsTest to improve accessibility and
added a method to determine if a class is security frame or injected invokers based on version check to enhance compatibility checks for SecurityFrame and In
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure proper handling of file extensions in
fix nativeimagedebuginfoprovider to print the method ' s declaring class instead of the method name
added the ` getIcon ( ) ` method and defined an import for the ` Icon ` class in multiple files to provide access to icon resources for
added a check for the last element of the request name in CounterRequestAggregation . java before returning it to avoid potential NullPointerException when the last element
added support for tolerated dollar signs in regex replacements in FindAndReplace . java and created a corresponding test in FindAndReplaceTest .
[ jabber ] fix npe when try to connect to a jabber connection .
refactor SchemaExtractionProcessor to improve code readability to enhance maintainability and facilitate future updates
added a new method ` copyDir ` to copy directories using specified source and destination paths to improve file copying functionality for different source and destination directories
added an exception for unknown datum classes in JacksonUtils . java to improve error handling for unknown datum classes
replaced calls to ` buildAbiFromClasses ( ) ` and ` addToIndex ( ) ` with calls to ` HasJavaAbi
adjusted the height calculation in SelectBox by removing background padding to simplify the height adjustment logic for better readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure unique identifiers for database and table names
updated database schema handling in DbSqlSession . java to ensure a default schema is used when Oracle is used and the database type is not set
replaced the logout mechanism with a direct activity finishing in HomeFragment . java to simplify the code by avoiding unnecessary logout call
updated ` MockStreamingRuntimeContext ` parameters from ` 0 ` to ` 1 ` across multiple test files to correct the number of tasks used in
modified the handling of the ' priviledged ' list to check for null candidates before processing to improve robustness by preventing null pointer exceptions
updated the logic for determining if a bean was managed in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve
[ thymeleaf ] rename iexecutionattributesdialect to iexecutionattributeaddialect in thymeleafdialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
updated ` CmdGetTime ` to handle null ` loc ` for ` dayStr ` , ` monthStr ` , and ` ordinal ` to
added null checks in ` TabletInsertionDataContainer ` and ` CachedSchemaPatternMatcher ` , and introduced ` DisruptorQueueExceptionHandler ` for
deleted the Session2Token . java file from the media package to remove unused code to streamline the codebase
cloudstack - 8237 : cleanup the destination volume when a volume can not be create
added an Install class to handle instant apps in the SystemShortcut and InstantAppResolver classes to enable automatic installation of instant apps for better user experience
added a constructor to ` LdapAuthenticationProvider ` that returns an empty authority list to ensure that the ` NullAuthoritiesPopulator ` is used
updated the handling of the retrolambda jar path to use a system property instead of a hardcoded value to improve flexibility in retrieving the
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to improve code clarity
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` for better handling of live documents to improve
added handleNullResult method call in JMESPathExtractor . java to ensure proper handling of null results during path extraction
added null and length checks for currentUser authority in AuthorizeTag . java to improve robustness by handling cases where no authorities are provided
updated assertions in tests to use ` assertEquals ( ... , ... ) ` instead of ` new URL ( ... , ... ) ` for consistency
server : fix typo in the error message for vm snapshot with memory
refactor configuration handling in RobolectricTestRunner to separate class and method configurations to improve clarity and maintainability of configuration merging logic
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty
added a method to check partial partition keys equality in HiveAlterHandler . java and updated related tests in TestHiveMetaStore . java to
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable the visibility of the icon
added an extra parenthesis to the isComponentActive check in SimulationStatus . java to improve code readability by avoiding unnecessary parentheses
replaced SharedBlockingCallback with Callback . Completable in multiple classes to simplify handler deployment and undeployment logic
added workspace listener to the PreviewControllerImpl class and modified the buildGraph call in PreviewUIController to improve workspace management and ensure the graph is
added a check for VM anonymous classes in ReflectionFactory and modified class name detection in ReflectUtil to improve error handling for non - VM anonymous classes
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to ensure proper resource loading for XML files
added logging statements to indicate the initialization of the ActionManager before starting the server and the manager to improve visibility into the start process of the server
added null checks and assertions for forNode initialization and modification in JSONWriter . java to ensure robustness and prevent potential NullPointerExceptions during processing
refactor method signatures in SliderAppsViewControllerImpl to accept a FileSystem parameter and update UserGroupInformation accordingly to improve code clarity and ensure
added a check to ensure backgroundManager is not already attached before attaching the window to avoid potential NullPointerExceptions when attaching the background
added functionality to set the current tab and adjust child dimensions in AllAppsTabbed , Launcher , PagedView , and Workspace classes to
added null check for URL in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure proper error handling for invalid URLs in data source
added JUnit JRE checks to the PebbleModuleTest class to ensure tests are only executed on supported Java versions
added an EditNameDialog to handle directory creation and dismissed dialog behavior in FileDisplayActivity to improve user experience by allowing users to create
added functionality to toggle the border width of bar data sets in multiple chart activities to enhance user experience by allowing toggling of bar borders in
update OkCoinExchange to use OKEx API instead of OKCoin API to ensure compatibility with newer API versions
jbrules - 1186 : fix test that be break by previous commit .
replaced FileChannel with SeekableByteChannel in Files . java and added file reading logic in BytesAndLines . java to improve performance and
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter and update its usage throughout the code to improve code clarity and
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
removed redundant checks for SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser . java to improve code readability and maintainability by redu
added heap limit configuration for debug devices in QuickstepProcessInitializer . java to optimize memory usage during debugging
replaced direct calls to ` mapper . applyAsDouble ( t ) ` with a variable assignment for summing values to improve code readability
[ log4j2 - 1340 ] abstractloadbundletest should not throw an exception if the exception be not resolve .
refactor deletion time serialization logic in PrecompactedRow . java to improve clarity and maintainability of the code
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure correct
add meterregistrylifecyclelistener to close the meterregistry on shutdown
[ 3.0 ] fix log level for configuration center not find exception
added tests for certificate generation with zero and zero byte values in CertificateFactoryTest . java to ensure robustness by handling specific certificate validation scenarios
camel - 14836 : camel - core - optimize simple predicate parser to support ambiguous binary operator .
removed the ` ensureWindowsDismissed ` call from the ` onTabUnselected ` method and added focus change handling in ` IDE
add user . name to accesslogvalve error message
updated file names and scaling factors in SkeletonModelGpuSkinningTest . java and added null check in OgreXmlLoader . java
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory ` to simplify the method signature by elim
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should not be used in future versions
added support for generating d . ts files in the JSweet transpiler to enable users to specify the output directory for generated d . ts
[ hotfix ] [ kinesis ] set default fetch timeout to 600 _ 000 for kinesis consumer factory
added " . html " to the timestamp parameter in StreamingDataflowWorker . java to enhance data processing capabilities by including HTML content
increased the maximum number of metastore server threads from 100 , 000 to 1000 , 000 in HiveConf . java to allow for
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` in ` RecentsModel . java `
update shadow radius setting in SwipeUpAnimationLogic . java to ensure correct shadow radius is used for animation logic
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the functionality of chain nesting and aggregation in
updated loop condition in MarketSellAssetActuatorTest . java to use ' end ' instead of ' limit ' and added an error
fix can not create a polyglot context if the source be not a polyglot context .
updated conditional logic in CreateKeytabFilesServerAction . java to handle null cases for previousCachedFilePath to improve robustness by preventing potential
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController for better UI
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent tooltip display for
updated the method call to retrieve the screen size using the default toolkit instead of the current toolkit to ensure compatibility with the current toolkit
changed the return type of the ` recognise ` method in ` TensorflowRESTCaptioner ` and ` TensorflowRESTRecogniser ` from
refactor JPASQLBase to include new test methods for inserting and removing entities and retrieving grouped list results to improve test coverage and ensure
removed unnecessary drag index check and logging for point removal to improve code clarity and maintainability by eliminating unnecessary debug output
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to ensure compatibility
updated runtimeError message formatting and added program . spendAllGas ( ) method call to improve error clarity and ensure all gas spend is applied
updated error message formatting in multiple files to include newline characters to ensure proper formatting of error messages for better readability
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactored the registration logic for unsafe plugins in AMD64GraphBuilderPlugins . java and StandardGraphBuilderPlugins . java to use a
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs classes and implemented a test in AndroidBinaryModularIntegration
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to align the page centering behavior with
migrationrequestoperation : call ` migrationinfo . doneprocessing ( ) ` before call ` migrationinfo . doneprocessing ( ) ` to ensure that
[ konnected ] change konnected component to use base _ url instead of module _ uri .
changed the type of attributeValue from Object to List < Object > and updated related logic in WSFederationClaimsReleasePolicy . java and its tests
updated test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to use specific
added a new test case for handling CASE expressions inside brackets in the CaseExpressionTest . java file to ensure correct parsing and deparsing of SQL
added support for handling motion events in ConsoleActivity to enable copying mode for devices running Android Sandwch and above to improve user experience by
updated the ` writeXmlOutput ` method to accept a ` Writer ` for XML output instead of using a ` String ` for the output file
added unit test base on user forum issue
camel - 16400 : camel - core - optimize log exception message to reduce dependency on camel . util . exchangehelper
rename basicconfigurator to classic to avoid conflict
do n ' t assert if target vn do n ' t have PHI _ NODE
removed unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with tracing options
refactor BoxAndWhiskerCalculator , BoxAndWhiskerCategoryDataset , DefaultBoxAndWhiskerXYDataset , HistogramBin
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to a static class and updated field comparisons to use ` . equals ( ) ` for consistency to improve code
changed access modifiers of singleton and constructor in IndexFileNameFilter from public to private to restrict access to the singleton instance and improve encapsulation
improve test coverage for ifstatement .
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
refactor TypeAdapter to remove the custom nullSafe method and simplify its usage to improve code readability and maintainability by eliminating unnecessary
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of entries in the distribution
added EXIFReader class to handle image metadata processing and updated ImageProcessingService to utilize it to improve image processing capabilities for Exif images
polish ` ` return none instead of unknown _ to _ sdk _ version ' ' for cloudwatchmeterregistry . tostandardunit (
[ drools - 1369 ] fix pmml parameter parse issue in applypmmlmodelcommand ( # 1369 )
improve ` ` flink - connector - fluent ' ' log message for repeated counter currency transfer message at startup
added a check to ensure the bubble bar is visible before proceeding to avoid unnecessary processing when the bubble bar is not visible
[ gr - 3248 ] fix aarch64 crash when branch target out of range .
added a try - finally block around the initialization of JDK log manager in JDKXRLogger . java to ensure that the initPending flag is
added a find method to TicketCatalog and its implementations in DefaultTicketCatalog and HazelcastTicketRegistry to enhance ticket definition retrieval by filtering by specific
refactor SSL connection parameters and assumptions in TestSSL . java for improved clarity and structure to enhance code readability and maintainability
[ hotfix ] [ runtime ] fix thread safety issue in sortmergepartition
http : / / issues . apache . org / jira / browse / amq - 4358 - use long . max _ value
updated ` PluginHandleController ` , ` PluginHandleDTO ` , ` PluginHandleDO ` , ` PluginHandleService ` , ` PluginHandle
added start ( ) method to the span creation in DefaultSpanCreator . java and SleuthAdvisorConfig . java to ensure that the span
added new GLKViewDrawable formats , depth formats , and stencil formats to IOSApplicationConfiguration and updated IOSGraphics constructor to use these
refactor login process to use a new method ` attemptLogin ` and add a new test for user lockout after failed attempts to improve code
[ pytorch ] add support for real ( ) in pytorch engine
removed thread interruption check and replaced with a do - while loop with a do - while loop for thread lock name retrieval to simplify thread
refactor Implements and ShadowPicker classes to improve code readability and maintainability
refactor HttpClientOptions initialization to use a dedicated method for creating HTTP / 2 client options to improve code readability and maintainability by centralizing
added support for handling DynamicArray in DynamicStruct and improved type name building in SolidityFunctionWrapper to enhance type safety and provide clear
updated the ` getStringProperty ` and ` getFloatProperty ` calls in ` InlineLayout . java ` and ` FontUtil . java ` to include
added constructors to ` CopyStep ` and a corresponding test in ` CopyStepTest ` to enable recursive copy functionality based on source and destination paths
fixed - rsemaphore . acquire ( ) and addpermits ( ) method of rsemaphore . addpermits
camel - 14850 : fix test case of camel - core - javadsl - builder to work with java dsl .
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed List < String > to List < ByteString > in WitnessScheduleStore . java to use ByteString instead of String to ensure compatibility with protobuf
updated TestElementsAnnotatedWith . java to check if resultsMeta is not empty before printing results to improve error handling by avoiding printing empty results
modified the logic in ` ConcurrentLinkedQueue ` to correctly handle null values and added a new class ` RemoveLeak ` to improve robustness
added boolean parameter ` addSpecialTokens ` to several ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer ` to
[ hotfix ] [ runtime ] use collections . nCopies instead of manual copy in taskmanagerservices
updated LoadSingleTsFileNode to utilize AlignedChunkData for chunk data addition to improve clarity and maintainability of chunk data handling
added session storage context to BrowserSessionStorage and updated DuoSecurityMultifactorWebflowConfigurer to utilize it to enhance session
add a unit test that demonstrates the use of schema validation in jspdocumentparser .
added a default constructor to TypeAdapter and updated @ Ignore annotations in Java17RecordTest and ReflectionAccessTest to ensure compatibility with Java 17 features
suspendedevent . kill ( ) throw ioexception instead of kill .
refactor AntPathRequestMatcher to improve code structure to enhance maintainability and readability of the code
refactored resourcepolicy method to remove unused parameter to simplify method signature and improve readability
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and improved assertions in BlockingTest . java
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added normalization to remove " Unknown " unicode character 65533 in the MD5 calculation to ensure accurate MD5 checksum generation by removing unknown unicode characters
refactor command handling in Example . java for improved clarity and structure to enhance code readability and maintainability by reducing redundancy
make keylistener final and add miss @ override in basappstate
changed the type of the objectToSave variable from T to DBObject and added a new test for saving JSON strings to ensure correct handling of
added a method to extract multiple remote addresses from an IP string and updated the logic to handle them to ensure that multiple remote addresses are processed correctly
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and updated related method calls in ` JsLibrary .
replaced direct call to InetAddress . getLocalHost ( ) . getHostAddress ( ) with a new method getAddr ( ) in CookieManagerTest
updated glyph processing logic in GlyphLayout . java and added a test case in BitmapFontTest . java to ensure proper handling of wrapped runs and
added ` pauseOrResumeSplits ` method to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase
added HIVESCRIPTIDENVVAR configuration in HiveConf . java and updated ScriptOperator . java to utilize it to enhance script operator ID
refactored the ` getListedTermCounts ` method to use a stream and added sorting functionality based on the ` FacetParams ` to improve
added a new action class ` UseSeparateStepSizeAction ` to manage the usage of separate step size in the Jog plugin to enhance
added user ID handling and locked / folder unlocking logic in FileMenuFilter . java to enhance user experience by allowing users to unlock files based
hbase - 25827 fix npe in roundrobintableregionsplit ( # 258 )
update header values for Sampled in HttpClientRequestAdapter and its tests to ensure accurate sampling settings for HTTP requests
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
added fullscreen support and native methods in GwtGraphics and GwtApplication classes to enhance rendering performance and support for different screen sizes
updated ` WebfingerIssuerService ` to use ` URI ` type instead of ` String ` for issuers and parameters to improve URI handling
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` DubboConfig `
refactor AssetDescriptor and texturePath initialization to use resolve method instead of Gdx . files . internal to improve code readability and maintainability
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
change locking method from ` lock ( ) ` to ` lockInterruptibly ( ) ` in multiple classes to ensure thread safety when acquiring
updated package declaration in Compiler . java to maintain consistency in package structure to improve code clarity and maintainability
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to ensure correct behavior of redundant branch checks in the code
update dashrendererbuilder to use defaulthttpdatasource for manifest fetcher
added a configuration property for maximum prepared statements per database connection in the execution scheduler to allow dynamic configuration of the maximum number of prepared statements cached per
change return type of ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple configuration classes to provide a more generic return type
added error handling in the checkErr method of AutoScalingHandler to ensure proper error reporting for bad requests in command payload
refactor CombinedDataset class implementation to improve code readability and maintainability
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code readability
added code to remove restricted cryptography restriction from the default policy to improve security by preventing unnecessary modifications to the default policy
fix issue with nether not be spawn when cancel the event .
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of
refactored the initialization of ` vContext ` to check for null before creating it to improve code clarity and prevent potential null pointer exceptions
fix wialon speed value ( fix # 3995 )
hbase - 20655 make metricsuseraggregatefactory . default _ metric _ user _ enabled _ conf false ( # 2598 )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
replaced the existing boolean flags ` mUserPresent ` , ` mVisible ` , and ` mAttached ` with a conditional check for receiver
refactor AsyncFile , HttpClientRequest , HttpClientResponse , HttpServerRequest , NetSocket , and ReadStream classes to improve code organization and maintainability
fix npe in zadd ( ) due to miss params parameter .
fix checkstyle issue in util / metadata / integration / metadataimportit . java
renamed the test class from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to clarify the purpose of the test class
added a method to retrieve an optional target node in VersionedTargetGraphBuilder and modified test handling in VersionPropagatorBuilder to improve code clarity
updated epoch seconds comparisons in TimeZoneProvider . java to use specific values instead of hardcoded values to improve clarity and maintainability of time representation
updated EscherBlipRecord to return the header size instead of a fixed value and added a new TestOLE2Embeding class for
removed redundant initialization of the variables ' row ' and ' column ' in JSONParser . java to streamline the code by eliminating unnecessary
replaced usage of ` JavaType . ShallowClass . build ( ) ` with ` java . util . regex . Pattern . compile (
added functionality to play and retrieve local trailer data in BaseItemDetailsFragment to enhance user experience by allowing more than one trailer to be played
added a method to remove glyph information from CStrike and implemented it in CStrikeDisposer to improve resource management by ensuring glyph information
fix for act - 1145 : process execution end event not record on process exit .
camel - 16400 : camel - core - optimize typenamestrategy to avoid reflection when use @ xmlrootelement
updated the endpoint in the test from " http : / / www . apereo . org / scottb . html " to "
add ` ` prdef ' ' option to reset all preference to default
[ hotfix ] update visibility of thriftmetrics and thriftserver to protect
added support for manual fan speed channel in the DanfossAirUnitHandler to ensure proper handling of deprecated channels for the manual fan speed
replaced JUnit assertions with Hamcrest assertions in TestEndpoint . java to improve readability and maintainability of the code by using
removed redundant null check for expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and improve hash code
server : set vm . root . disk . size custom parameter if it be not already present in custom parameters
updated PredictionRowView to conditionally display based on user preferences for prediction visibility to enhance user experience by allowing dynamic visibility based on suggested apps
check for null or empty bbox before call geoserver . geoserver . geoserver . geoserver . geoserver .
added validation methods for value and position parameters in ` LibrustzcashParam . java ` and updated ` ivk ` byte value
move ithrowableentity to fml . mods . fml . common . registry . itoverridden
added random position calculation for x and y in NodeDataImpl . java to ensure accurate positioning of elements based on randomness
renamed the ` validateRefreshToken ` method to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve
refactor JavacStep to initialize declaredDepsBuildResult , firstOrderStdout , and firstOrderStderr variables using try - with - resources
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version
added a condition to check for the DEEP SHORTCUT item type in LoaderCursor . java to ensure proper handling of deep shortcuts in the
added a ` hashCode ( ) ` method to the ` TimeGranularitySpec ` class to ensure consistent hash code generation for different data types and
changed access modifiers of classes BooleanWeight and DisjunctionMaxWeight from private to protected and removed unnecessary comments to enhance encapsulation and improve encapsulation
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : fix aarch64 macro and move bug .
server : use capacity . used _ capacity instead of vm . ramsize for reserve / reserved vms .
added a null check for the max score in JSONResponseWriter . java and included a query in TestDistributedSearch . java to ensure that
updated the audio recoder parameters in AudioRecorderTest . java from 22050 to 44100 to align audio recording with the new audio format
adjusted the calculation of newOriginX in RocketFigure . java to account for scaling based on subjectBounds _ m ' s minimum
updated DruidQueryBasedInputFormat to check for null or empty data source and set default interval to DruidStorageHandlerUtils to improve error
added ORIGINAL _ TYPE to the CustomProperty class and modified the pattern compilation in the CustomPropertyTest class to enhance functionality to support additional
added a static method ` create ` to create an ` Index ` using a parent table and a data map to facilitate the creation
simplified the return statement by removing unnecessary variable assignments to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java and TestSchemaCompatibilityTypeMismatch . java
added handling for persistent attribute types and refactored join logic in QueryUtils . java to improve association detection and ensure proper handling of entity paths
added synchronization to the spans list and updated related methods for thread safety to ensure thread safety during concurrent access to spans
updated method signatures in multiple classes to use List < ? > instead of List < Object > to improve type safety and flexibility in retrieving text
updated exception handling in ViewContextImpl to use InvocationTargetException and added debug logging for better traceability to improve error handling and provide more detailed logging for
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of " System is starting and not ready for remote call or shutting down in progress " with " The Request is rejected " in
added two new project files , " ios / data / Default - 1024w - 1366h @ 2x ~ ipad . png
updated import statements and added a ConcurrentMergeScheduler to TestSearcherManager to improve performance by utilizing a concurrent merge scheduler for the MockAnalyzer
added a condition to check for session state before processing in QTestUtil . java and improved list handling in GenericUDTFInline .
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
pdfbox - 4892 : avoid call e . preventDefault ( ) , a suggest by valerybokov
added ` persistenceProviderService ` and ` sessionFactoryService ` to ` HibernateBundleActivator ` and modified service registration logic to ensure proper
fix incorrect calculation of timeout in hikaripool . getconnectiontimeout ( )
[ voice ] remove the createcomponentfile ( ) method and use a non - packaged resource dir .
updated file path handling in Compat . java and modified file existence checks in FileOpener . java to improve clarity and ensure proper file
changed the return type of the row ( ) method from Cell < T > to void to simplify the return type of the row ( ) method
improve error message when port be specify multiple time .
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 initialization to enhance flexibility in mask generation for WebSocket connections
refactor ` genUDTFPlan ` to return a ` Pair < RelNode , RowResolver > ` instead of a ` RelNode
added counters for bucketed preferred and non - preferred node selected counts in NodeScheduler and TopologyAwareNodeSelector to improve tracking of selected nodes in
added a new class ` Person ` with getter and setter methods in the ` org . apache . maven . it0001 ` package to provide a
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve the handling of the
added a clock functionality and adjusted fade - in and fade - out animations in PlaybackOverlayFragment to enhance user experience by providing a clearer
use getpos ( ) instead of getposition ( ) for comparatoroutput and remove markdirty call
updated the IMPL field to be non - final and improved exception messages to enhance code clarity and ensure proper loading of the SegmentReader
change sudoku to run cell update event in edt thread
removed the DefaultInetAddressAdapter class and updated related references in various classes to streamline the serialization and deserialization process of InetAddress objects and improve
added methods to assert the existence of a single value in the Series class and corresponding tests in DataFrameTest to ensure proper handling of null values and
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated lat and lon comparisons in GeoRelationUtils and improved mathematical calculations in GeoUtils to enhance accuracy in geometric calculations and
server : fix getvirtualmachinewithvirtualmachinewithvirtualmachinewithvirtualmachinew
added cleanup method to HazelcastTest to ensure all Hazelcast instances are properly stopped after tests
added checks for NoSuchAlgorithmException and NoSuchPaddingException in BlockCipherTest . java to ensure proper handling of AES / NoPadding cipher modes and
added filters to QFileClient for logging operations to improve visibility into log output for better debugging
fix aop proxy generation for method with type argument
fix npe when try to set the current connection address to the proxy address .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the addition
replace direct file deletion with try - with - resources for ImageOutputStream to ensure proper resource management and avoid potential NullPointerExceptions
replaced calls to ` TvApp . getApplication ( ) . showSearch ( activity , boolean ) ` with direct calls to ` SearchActivity
refactor ` SchemaCrawlerCommandLine ` and ` GrepOptions ` classes for consistency and clarity to improve code readability and maintainability by
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for osgi in
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests . java to ensure proper dependency injection for the repository instance
changed the exception type in the stop method from Exception to InterruptedException and updated a log statement in TestVertxUIManual . java to
cactus : add door to the list of cactus type .
refactor mouse event handling in ThemeSelector . java to use MouseMotionAdapter for better responsiveness to improve user interaction responsiveness by
[ java ] fix flow control padding for min - multicast flow control .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance the flexibility of the
change statToksentannotator to throw illegalargumentexception instead of exception when modelfile be null
added a check for distinct queries in GroupByExpressions and modified related logic in QueryGenerator and ClusterIntegrationTestUtils to enhance query handling for distinct
[ gr - 3329 ] reflective access to jni native linkage by name and descriptor .
add javadoc to filelistpanel , jmetermenubar , jmetertextarea , and jsyntaxtextarea to clarify how language property be
added a null check for the children list before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables to MessagePackParser and updated JsonLocation return logic to improve code clarity and ensure proper handling of JSON parsing
added locale management to AbstractSolrMorphlineTestBase by saving and restoring the default locale after tests to ensure consistent locale settings for testing purposes
removed conditional checks for launcher status bar size calculation in LauncherFragment . java to simplify code logic for better readability and maintainability
added a new test class ` MetricsReporterTest ` for metric reporting functionality to ensure proper registration and reporting of various metrics in the MetricsReporter class
[ scb - 2357 ] remove unused code in osgiserviceregistry
implemented ` equals ` and ` hashCode ` methods in the ` Rectangle ` class to ensure proper comparison and hashing functionality for the ` Rectangle ` class
( chore ) camel - kafka : use random name for test instead of hardcoded value
refactor DSAParameterGenerator to simplify handling of prime strength conditions and improve code readability to enhance maintainability and clarity of the code
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to control the use of AM machine when submitting work to
change clientoutofmemoryhandlertest to wait for shutdown to complete
added a method to retrieve the object ID in multiple shape classes and updated the setObjectId method to use this new method to ensure compatibility with the
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the distinct scalar
refactor Driver , SearchTravRetLoadFieldSelectorTask , SearchTravRetTask , and SearchTravTask classes to improve code
fix : remove unused bind / unbind method of extensionadapter in managedk8sclient
replace direct calls to ` baseItem . getOfficialRating ( ) ` with a new method ` getInfoRow ( BaseItemDto ) `
updated JUnit annotations from @ Before and @ After to @ BeforeEach and @ AfterEach in TestAuthHandlerBoot and TestRSAProviderToken
do n ' t throw exception when generate summary html .
removed parameters from the reset method calls for intPool and bytePool to simplify the code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated ShadowWindowManagerGlobal to handle API level TIRAMISU and introduced a new WindowSessionDelegateU class to improve window management functionality
updated URL handling logic in UrlHelper to include request scheme and server port checks to ensure correct URL construction based on the request ' s scheme and
added support for MSSQLDatabase in foreign key constraint generation to ensure proper handling of the " RESTRICT " option for MSSQL
hbase - 15921 addendum fix checkstyle violation in hstore
remove debug output from emzuli pipe , and add a filtereventhandler
simonstewart : make the htmlidentifier logging configurable
updated HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( ) and adjusted
change listenerset . setthrowswhenusingwrongthread to verify the current thread .
updated the schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema for improved schema customization to enhance flexibility in schema name
updated color handling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugSt
fixed - rconnection . join ( ) and rconnection . toCompletableasync ( ) . join ( ) method throw classcastexception #
added logic to set the base URL in SolrLoggerServiceImpl and ensure it does not already contain it to the statisticYearCores list to ensure
renamed ` launchTask ` to ` launchTaskFromView ` and updated related methods for better clarity to improve code readability and maintain
refactor MorfologikFilter to use a dynamic dictionary resource instead of a static dictionary lookup to improve flexibility in loading dictionary resources
updated sorting options to replace " stars " and " critic rating " with " community rating " and " critic rating . " to ensure
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter to ensure proper handling of ListRow visibility based
refactor the switch statement in StressAction . java to use a try - finally block for resource management to ensure proper closure of the switch
refactor HttpClient class implementation to improve performance and maintainability of the code
replaced calls to ` accordingTo . isCaseSensitive ( ) ` with a direct instance check for ` DB2Database ` in multiple files
[ thymeleaf ] enable write dates - as - timestamps for jackson 2.5 . x
replaced the import of MDC from org . apache . log4j to org . slf4j in LogUtils . java to
replace TypeBearer with Type in PhiTypeResolver . java to improve type handling by using a more general Type type
removed unnecessary whitespace in CoinbaseTransaction . java for consistency to improve code readability and maintainability
added a method to get the build target list and updated related logic in the BuckConfig and ProjectCommand classes to enhance the build process by
added a call to System . gc ( ) and modified the initialization of idleStrategy to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated related logging statements to improve consistency and clarity
removed redundant state change checks in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe to remove calls to ` System . gc ( )
removed redundant calls to ` super ( ) ` in multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added an override for the setUIID method in ScaleImageLabel to ensure the correct icon is used when setting the UIID
replaced instances of ` foundEntry ` with ` update ` in FeedUpdateService . java to improve clarity and consistency in handling feed entries
updated command - line argument checks to include " - cp " in addition to " - classpath " to enhance flexibility in handling classpath command line
[ gr - 14825 ] use compiler instead of option in presets for ffmpeg .
set initialized to true in StorageService . java to ensure proper initialization of the service
updated Test7196045 . java file to improve test coverage for new functionality
updated density and decay values in ShaderParametersLightShaft . java to adjust light density and decay for improved lighting accuracy
added ` withState ` and ` stateData ` attributes with their respective getter and setter methods in ` OidcConfiguration ` , and modified state
updated unique constraint handling in BaseTableDdl . java to differentiate between nullable and non - nullable cases to improve clarity and correctness
added federated share checks in UsersAndGroupsSearchProvider and EditShareFragment to ensure only federated files are processed in the search process
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved error handling and clarity to enhance readability and maintainability of the code by
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and modified the ` IntObjConsumer ` interface to
move the scoreboard data to the global map storage and do n ' t share it with the temporary scoreboard .
changed return type of count methods from Long to long in multiple repository classes to improve precision in count operations across MongoDB repositories
updated MManager . java to improve snapshot creation logic to enhance clarity and maintainability of snapshot creation logic
updated the calculation of dotProductScore in VectorUtil to use a variable for improved readability to enhance code clarity and maintainability by
added ` IRREVERSIBLE _ THRESHOLD ` and methods to manage the latest confirm block number in ` DynamicPropertiesStore ` to improve performance
refactor locale handling in GpsMainActivity and MainPreferenceActivity to use Systems . setLocale method to improve code clarity and maintainability by
added a check for database creation status in LauncherClings and introduced a flag in LauncherProvider to track if a new database was created
updated assertions and exception handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability by standardizing iterator
refactor conditional check for datamodel in Constants . java to improve readability and maintainability of the code
added a check for the current thread in TestIndexWriterDelete . java to ensure that operations are executed only when the current thread is the same
changed the access modifier of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
replaced references to ` org . jellyfin . apiclient . model . dto ` with ` org . jellyfin
added a loop to copy XML attributes from the SVG element to the document element to ensure proper handling of SVG elements in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling by logging the warning only when the user configuration is
added handling for " WaitForResult " in CodenameOneActivity to conditionally manage the waiting state based on the " WaitForResult " intent
refactor HitQueue and PriorityQueue to use a Supplier for handling score documents instead of a boolean prepopulate flag to improve code readability
replaced direct assignment of mWidgetImage , mWidgetName , and mWidgetDims with a new private member variable mWidgetDescription and updated
added a maximum attribute count check in the Attribute class to ensure that registration does not exceed a defined maximum attribute count
move predicatestest to impl package to avoid conflict
camel - 16400 : camel - core - add case insensitive option to defaultheaderfilterstrategy
updated InlineLayout and Breaker classes to improve code clarity and functionality to enhance maintainability and correctness of string wrapping behavior
added nullability annotations and improved view handling in ShareUserListAdapter . java to enhance code robustness by preventing null pointer exceptions and
refactor the ` shouldInstrument ` method to streamline the logic for determining if a class should be instrumented to improve code readability and
added a condition to return the last column in the table based on the association ' s destination before source to ensure proper handling of table columns when
updated memory limit path retrieval in CmdModifierTest . java to use a dynamic method for retrieving the maximum memory limit to ensure compatibility with different Docker
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxx
added a null check for the specified source under test in JavaTestRule . java to ensure that the specified source under test is not among its
botanielwagnerhall : disable proxy for minecraft 1.9 . 4 and 1.10 . 2 ( #
added a check to ensure atIndex is non - negative to prevent potential ArrayIndexOutOfBoundsException when atIndex is negative
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to improve test reliability by allowing
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter and update its usage accordingly to improve the handling of assist content
updated the method of encoding the witness address in VoteWitnessProcessor . java to ensure the witness address is correctly encoded and avoid potential null pointer exceptions
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method regression functionality
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests ` to align with the latest Kafka API standard
added a call to close the loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and new test cases for various exception types in FaultTolerantExceptionClassesTests to
[ flink - 20625 ] [ beam - 3245 ] improve the error message when taskmanager . taskmanager . taskmanager
updated applyTunerConfigs method to include an extraProperties parameter across multiple tuner classes to enhance flexibility by allowing customization of tuner
added a mechanism to track in - progress instances in PinotRealtimeSegmentsManager to ensure segments are only added if they are already in progress
added a check to return null if touchable is disabled to prevent processing when touchable is disabled
added a test for building using precompiled headers in the other cell in PrecompiledHeaderIntegrationTest . java to ensure that precompiled headers are
throw a retryable exception if cache config do not have be create yet
refactor JSweetTranspiler to utilize a new method for node package installation check to improve code readability and maintainability by redu
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance logging capabilities for component registration and destruction
changed the conditional check from ` settings . inAppBrowser ` to ` false ` in the ` LongClickableSpan . java ` file to
refactor equality checks for string literals in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` .
updated the conditional check in ` Types . java ` and added new classes ` T6558559a ` and ` T655
updated player print statements to include player ' s block and position information to enhance clarity of position information for better debugging and tracking
camel - 14836 : camel - kafka - do n ' t wait for the kafka consumer shutdown when the consumer be stop .
removed the default declaration of the examples method in Schema . java to streamline the code by eliminating unnecessary dependencies
modified thread termination logic in AgentRunner . java to ensure proper handling of thread status and improve error reporting
removed the time column from the dimensions and result collections in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper management of dataset data in
corrected a logical error in the condition checking for shards to ensure that only one shard is present in the request
replaced calls to ` rustBuckConfig . getLinkerProvider ( cxxPlatform ) ` with ` CxxPlatforms . get
added ' name ' property with getter and setter methods in multiple authentication properties classes to enhance flexibility in managing authentication and naming conventions
updated CFGPrinterObserver and IdealGraphPrinterDumpHandler to improve error handling and logging for better debugging to enhance debugging capabilities and provide clearer
updated BaseQueryPlan to improve scan threshold handling and introduced a new small scan threshold constant in QueryServices and QueryServicesOptions to enhance flexibility
updated the ` RetryGatewayFilterFactory ` to include ` routeId ` in the ` toString ` method to include the route ID in the retry
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` and modified the way the last binding is
replaced multiple instances of ` onOverviewShown ` with ` showForOverviewIfNeeded ` in ` DiscoveryBounce . java ` and added delay
refactor conditional checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` to
updated the parameters of the publish method to use ` updateLastState ` instead of ` true ` to ensure accurate state updates during the publish process
updated SQL syntax syntax in MetastoreDirectSqlUtils . java to ensure proper syntax for string concatenation in SQL queries
removed the addition of a null value to the exp list in SpliteratorCollisions . java to streamline the code by eliminating unnecessary
[ java ] add ' textcaseinsensitivewithcaseinsensitive ' and ' exacttextcaseinsensitivewith
replaced a ' do ' loop with a ' while ' loop in ManyToManyConcurrentArrayQueue . java to improve code readability and maintain
# 119 - enh : add forwardonlyfetchsize ( ) to ormqueryengine and defaultormqueryengine .
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to prevent processing of exceptions that are already closed to improve robustness by avoiding
pdfbox - 4892 : initialize arraylist with correct size , a suggest by valerybokov
updated the initialization of ` mWindowRadius ` to use ` initialWindowRadius ` based on ` supportsRoundedCornersOnWindows ` to
refactor DesktopTaskView to use a View instead of a ShapeDrawable for background and update thumbnail handling to improve UI responsiveness and
added initialization of upstreamCheckService in UpstreamCheckServiceTest . java to ensure upstreamCheckService is properly initialized during tests
updated logging level from warn to debug for session - related warnings in AbstractSession and AbstractSessionManager to improve logging clarity and reduce log verbosity
replaced error logging with a return statement for locks in ZooKeeperHiveLockManager . java to simplify code and improve readability by elimin
[ hotfix ] fix checkstyle violation in statebackend
added a boolean flag ` containsCustomData ` to conditionally generate a mipmap based on the presence of ` containsCustomData ` to
update assertions in DefaultMaskingFormatterTest to use single quotes for secret keys instead of double quotes to ensure consistency in string representation across test cases
added selection state management to the List class to improve user interaction by preventing touch events when not selected
removed unnecessary check for zero value count in LlapArrowBatchRecordReader . java to simplify the logic by eliminating unnecessary checks
added file separator handling and improved logging in PolicyContext . java and TestPolicyContext . java to ensure proper file path expansion and enhance debugging
changed ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` ArrayList ` in ` FieldQuery . java ` to improve performance
updated TLSRestrictions . java file to improve TLS configuration handling
http : / / issues . apache . org / activemq / browse / amq - 2298 - use daemon to close producer
updated the ` assertNodeStateProvider ` method to accept an additional ` ignorableNodeValues ` parameter and modified the logic for handling node state
added a check to delete the " LOCK " file if it exists in RocksdbMavenPomCache . java to ensure that the
updated the server factory to use InetSocketAddress for the client port in MiniZooKeeperCluster . java and updated the test assertion in TestHQuorumPeer
refactored the response retrieval logic in RestClient . java to improve error handling and logging to enhance clarity and maintainability of the code
replaced string array conversion from segmentTarURIs to segmentTarURIStrs to improve code readability and maintainability by using a more conc
updated the loginStudent method parameters to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added a null check for item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential null pointer exceptions during item deletion
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to optimize performance by reducing the number of strings
replaced custom ByteArrayInStream implementation with a direct initialization of an empty byte array to simplify the code and improve performance by eliminating unnecessary
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in method naming
added a method to check if a transition is a direct substate and updated state handling logic in AbstractStateMachine . java to improve state transition
added checks for ListMultimap and SetMultimap types in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality
added JoinOperation to the PostJoinOperation class to support joining operations in the post - join process
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL schema crawling
http : / / issues . apache . org / jira / browse / amq - 5035 - fix intermittent test failure
update AvaticaDatabaseMetaData . java file to improve database metadata handling to enhance performance and maintainability of database operations
changed ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` types from integers to strings using ` @ DurationCapable `
update method call to use SipActivator ' s getMediaFactory ( ) for creating audio media formats to ensure compatibility with the sip service ' s
refactor filter and domain change handling methods in FacetProcessor . java to return a boolean indicating applied filters or block joins to improve filter application logic
added an enabledTimeout flag to the ShuffleHandler class and modified how the timeout handler is handled to improve control over timeout behavior based on the
replaced hardcoded value of ` - 1 ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in `
camel - 16405 : camel - xpath - dsl - add more log for the xpathbuilder and xquerybuilder .
pdfbox - 4892 : fix compile error , a suggest by valerybokov
[ net . sourceforge . pmd . cpd ] add test for escape back slash in edge case
added a check for the presence of the ' atlas ' property in the map and throw an exception if it ' s missing to ensure that the
camel - 15836 : camel - core - optimize component to not depend on property placeholder
added a database closure method in BlockchainTest . java and removed unused receive listeners in KafkaTest . java to ensure proper resource management and avoid
refactor line handling in CoreMarkdownNodeRenderer to use a new method for splitting lines to improve code readability and maintainability by reducing
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code clarity and maintainability by standardizing import statements
replaced ` ImmutableList . Builder ` with ` List ` for better flexibility in handling lists and added deprecation warnings to improve code clarity and
added a check for the " OpenJDK " JVM name in the VirtualMachine . java file to ensure compatibility with both Apple and OpenJ
added keepalive functionality to the base URL configuration in ReactorClient . java to ensure that the server does not lose data after a successful execution
replaced hardcoded string " a _ position " and " a _ texCoords " with constants from ShaderProgram in MD5Renderer and
camel - 16400 : fix potential npe in camelcontext . getcomponent ( string key )
modify null check for accountCapsule in UnfreezeBalanceActuator . java to improve robustness by ensuring accountCapsule is not null before
update version number to 3.8 . 1 and make sure that the version be 3.8 . 1 .
updated type handling in ` Types . java ` to use ` unannotatedType ( ) ` instead of directly returning the unannotated type
updated assertions in StorageGroupProcessorTest to check the size of processors and reset sequence timestamp file size after processing to improve test reliability and ensure
added a new ` DumpableCollection ` to the ` dumpObjects ` method and introduced a new method ` getAll ( ) ` in the `
added a new parameter ` waitbeforestart ` of 2500 in ` FFMpegVideo . java ` to control the wait time for video
removed the ` skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and related calls to simplify the constructor and reduce unnecessary
updated import statements and refactored test methods in AccessorsTest . java to improve code clarity and maintainability by using more descriptive
add miss getframemap ( ) method to graalcompiler and use it in lirgenerator
replaced the @ Ignore annotation with @ ConditionalIgnore in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to improve test
fix boat be able to place water in the right place
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
added two overloaded ` then ` methods for ` PathAssert ` and ` AssertProvider ` in ` BDDAssertions . java ` to
rename variable ` hp ` to ` hostField ` and update its usage in ` ForwardedRequestCustomizer ` to improve code clarity and
updated log level from debug to warn for multiple Kubernetes config files and improved logging message formatting to enhance clarity of log messages and provide clear
added OCFile handling and upload status management in UploadListActivity and FileStorageUtils to improve file upload process and ensure proper cancellation of uploads
added a new ` ProviderLoader ` and ` ProviderLoaderListener ` interface , and refactored ` TerminalManager ` and ` ProviderLoaderListener
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to align with the
updated SelectFromDatabaseChangeLogStatement to use a new ColumnConfig for computed columns to improve flexibility in retrieving database change log data based on
hhh - 14836 - postgresql 8.0 . 0 do not support schema name qualifier for postgresql version 1.1
fix partition count calculation when data member size be 0 .
added logic to check if the scheduler is already started before starting it and improved error handling in ExecutionScheduleManager and ExecutionSchedulerImpl to ensure
removed unnecessary toString ( ) method call and improved conditional check in BoxBuilder . java to enhance code readability and maintainability by reducing
refactor argument checks in StatisticMap to improve readability to enhance code clarity and maintainability by reducing redundancy
updated the getStagedRectSlideEnd method ' s return value from 383 to 500 to increase the staged rectangle slide duration from 383
updated button labels to use bundle properties instead of hardcoded strings in WaveInfoDialog . java and PlacementFragment . java to improve localization support and
updated condition to check for owned plot abs instead of plot for killing road items to ensure that road items are only killed if they
added tests for touch exploration functionality in ShadowAccessibilityManagerTest and modified listener handling in ShadowAccessibilityManager to ensure proper handling of touch
pdfbox - 5328 : avoid arrayindexoutofboundsexception in cmap lookup , add unit test
bug 6845 : use testelement . getname ( ) instead of testelement . getpropertyasstring ( ) . getname (
replaced multiple instances of NPOIFSFileSystem instantiation with a single create method in TestNPOIFSFileSystem . java to streamline
added import statements for PlotArea and modified plot retrieval logic in Move . java to enhance plot area handling and ensure correct plot absence
updated regex pattern for version number matching in TestWebHCatE2e . java to ensure accurate matching of version numbers for compatibility
updated the condition in the count check from ` count < 0 ` to ` count < 1 ` to ensure that the count does not exceed the
( chore ) camel - kafka : fix clientid configuration for kafka consumer
replaced the import of ` util . IsolatedClassLoader ` and added a check for ` ok . booleanValue ( ) ` in ` Jav
do n ' t repaint the view when there ' s no option to open
camel - 14263 : camel - spring - batch - fix checkstyle error
added a method ` isAnimationFinished ( float stateTime ) ` to check if an animation is finished based on the current frame number to enhance
added a test for custom Fav icon with line breaks in LoginMockMvcTests . java to ensure proper handling of line breaks in the login
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refreshing text string in ` Home
change stopediting method to replace multiple spaces with a single space to improve user experience by providing a more accurate space representation
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactor null checks and equality comparison logic in DataUtilities . java to improve code clarity and maintainability by using ` Arrays . equals `
fix creative gui container delete bug ( mc - 12770 )
add a microprofile test for async resource request ( # 4248 )
rename target - flat - headers to target - user - headers in ProjectGenerator and related tests to clarify the purpose of the header map
added debug logging and exception handling for send failures in MailService . java to improve debugging capabilities and provide clearer error messages during email sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduced a constant ` EMPTY _ LABEL `
added multiple test cases for retrieving partitions by names with multiple batch sizes in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed the type of the ` sharees ` variable from ` ArrayList ` to ` List ` in ` OCFile ` and ` OC
update index used in removeViewInLayout method from 1 to 2 in BubbleBarView . java to correct the index used for removing views
removed duplicate hide statements in JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline code by eliminating unnecessary dependencies
change the parameter of the S3Request constructor from ` true ` to ` false ` to change the default behavior of the policy from ` true
update jfxradiobuttonanimation when timeline be null
updated condition in DeweyNumber to handle single split and added an exception for invalid input to improve error handling for invalid Dewey numbers
refactor categorySetString handling in MwVolleyApi . java to replace " Category : " prefix with " Category : " to ensure
updated assertions in WebSocketClientTest to use " Invalid close code " instead of " Invalid close control status " to correct the expected error message for
added null check for classLoader in WebappLoader and updated expected repos count in TestVirtualWebappLoader to ensure proper handling of null class loaders
removed redundant code in PersistentAttributeTransformer . java to streamline the addition of inherited fields to the persistent field list to improve code clarity and
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to verify the functionality of the ` PorterStemFilter ` to ensure that the
updated the method name from ` postBatchMutate ` to ` postBatchMutateIndispensably ` and added a success flag to
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix a thread safety issue in chatwindowmanager . leavechatroom ( ) .
replaced multiple instances of ` Sys . touch ( ) ` with a static import in ` APIUtil . java ` and removed redundant calls in
updated HgCmdLineInterface to use the " - mardu " command instead of " -- unknown " and modified the untrackedFiles
camel - 16462 : camel - netty - should use timer from camel - netty instead of create a new timer instance each time
replaced public fields with final fields for direction , color , and intensity in DirectionalLight , PointLight , and SpotLight classes to enhance
replaced direct calls to ` target . getWidth ( ) ` and ` target . getHeight ( ) ` with a variable ` w ` and `
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes and corresponding tests to provide a
added annotation filtering functionality to the ClassFinder class to enhance flexibility in checking inner classes and prevent unnecessary logging during class loading
modify the handling of newLength in BytesColumnVector to ensure it does not overflow and set the maximum of the next smallBuffer size to Integer
fix writebehindmapstorewithevictionstest # testwritebeyondmapstorewithevictionstest failure
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI ` and
[ geogebra - 444 ] add ` ` isequal ( poly ) ' ' method to check if two function have the same
added null check for the table before retrieving its column class to avoid potential NullPointerExceptions when the table is not initialized
added error handling for class instantiation in CustomChangeWrapper to ensure robustness by catching potential ClassCastException during instantiation
added methods to retrieve ` BuckConfig ` and ` Optional < ImmutableList < Path > > ` in ` DistBuildConfig ` and updated references
show ' ofx ' and ' qif ' warning if double entry be not available
added JUnit Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests related to tracking down and fix issues
modified the ` doJoin ` method to return a boolean instead of void across multiple classes to improve the handling of join operations and ensure proper behavior
added a method ` getAutodeps ( ) ` to the ` JavaLibraryDescription ` class to provide access to the Autodeps
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure proper handling of new
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check the ordering
updated assertions in RepositoryConventionPluginTests to reflect the correct repository index from 0 to 3 to ensure the correct repository URL is returned for the correct
improve the pubsub process by add a new affiliate task
improve error message for invalid uri in taglibraryinfo
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added support for updating cache keys using reflection in CacheKey . java to ensure proper handling of array elements in cache key updates
updated DefaultFileTypeDetector , LinuxFileSystem , SolarisFileSystem , and UnixFileSystemProvider to use FileSystemProvider for file type detection to enhance
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
refactored ShadowVirtualDeviceManager to remove ShadowVirtualDeviceParams and added new methods for retrieving VirtualSensorCallback and VirtualSensorDirectChannelCallback
added a condition to check if ` contextBeforeExecution ` is not equal to ` contextBeforeExecution ` in ` HttpSessionSecurityContextRepository ` to ensure
refactor loopback address retrieval logic in NetUtil . java to improve clarity and structure to enhance readability and maintainability of the code by
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated buffer initialization for deflation to improve code readability and maintain
updated KeyInfoReferenceResolver and related classes to enhance security checks and improve exception handling to enhance security by ensuring secure validation is enforced during XML
added a boolean flag ` iconChangeListenerInstalled ` to manage icon change listeners only once to ensure actions are only executed when the icon change listener is
added " ru " to the language options in Language . java to support Russian language in the application
hhh - 14836 - fix duration type conversion in sqm to sql conversion
added frameState . disableStateVerification ( ) method call to SubstrateGraphKit . java to disable state verification for improved performance
added setup and teardown methods to manage system properties in RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties
added system class loading for ` org . slf4j ` in ` ViewClassLoader ` and corresponding tests in ` ViewClassLoaderTest ` to
updated logic in ChangePackaging to handle " jar " packaging correctly and added a test for default packaging removal in ChangePackagingTest
update download method to accept file extension ( ` ` txt ' ' ) instead of just ` ` download ' ' in test
fix ( demo ) : fix npe in glfw demo
replaced default units handling with preferred units in the JogService and Settings classes to improve clarity and functionality by using a more descriptive
updated the expected date format in DatePatternConverterTest to use UTC time zone to ensure accurate formatting of date instances based on the specified time zone
updated return statement formatting in Terminator . java to improve code readability and maintain consistency
updated error messages in FileSystem , LocalFileSystem , and DistributedFileSystem classes for improved clarity to enhance user understanding of file URI requirements and
improve performance of ` ` show track ' ' notification
try to fix ftp test on slow ci server
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to improve performance by reducing the overhead
added a ` ignore ` method to various log classes to warn about ignored exceptions to enhance log management by providing clear warning messages when the logger is
added a null check for runningTaskView in LauncherActivityControllerHelper . java to avoid potential NullPointerExceptions when runningTaskView is null
removed unnecessary type casting for item and contents in BukkitWorld . java to improve code clarity by eliminating unnecessary type casting
removed the call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to streamline image handling by elim
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to facilitate the creation of MMapDirectory and SimpleFS directories in Solr
added a null check for the ` ic ` object before creating the ` cleanUpColor ` instance to prevent potential NullPointerExceptions when ` ic ` is
updated the expected value in the assertion to use ' field1 _ s ' instead of ' field1 ' in QueryEqualityTest . java to
updated ExtendedOperatingSystemMXBeanImpl . java for improved functionality to enhance performance and maintainability of the code
added functionality to install and manage left commands in the SideMenuBar to enhance the functionality of the SideMenuBar by allowing commands to be added
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified window setup logic in ` TweetActivity ` and ` User
added support for SybaseDatabase in DropPrimaryKeyGenerator to enhance compatibility with Sybase database operations
refactor Client class to improve connection handling to enhance performance and maintainability of the client
[ java ] notify the leader ready rather than just reset the last record position and reset the idle strategy when a leader be ready .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` and added ` shouldDelayChildPressedState (
added a return statement to the NearCachedClientMapProxy class to prevent further processing during client map operations
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added a shutdownHttpServer method to handle server startup exceptions to ensure graceful shutdown of the HTTP server and improve error handling
camel - 15836 - camel - aws2 - s3 : add support for stream upload , fixed javadocs
[ hotfix ] [ runtime ] fix taskmanagermetricshandler path in webruntimemonitor
fixed 228 to 229 db upgrade for 228 to 229
added a new test class ` TestThriftCLIServiceSecurity ` and modified the ` toString ` method in ` TOpenSessionReq ` to ensure
added maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to ensure correct energy limit is used for constant calls
added ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and modified the ` webClientPlugin ` method
refactor caching logic in Cache . java to improve performance and maintainability of cache management
added two new test files , RunCucumberTest . java and StepDefinitions . java , to implement Cucumber test and step definitions
added error handling for parsing double values in TypeJsonUtils and new test cases for sqrt and minus in TestArrayOperators to improve robustness and
removed duplicate byte array entries for " 6564656564 " and " 808065646564 " in Utf8StringBuilderTest
added a check for parameter presence before appending them to ensure only valid parameters are processed to avoid null pointer exceptions
camel - 16400 : camel - circuit - breaker should throw an exception if the number of output configure on the load balancer can not
updated test assertions in TestIndexWriterExceptions . java to ensure that the maximum buffered documents do not exceed the expected document frequency to improve test reli
replaced calls to ` String . toString ( ) ` with ` Sha1HashCode . update ( hasher ) ` across multiple files to improve
removed redundant enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code by eliminating unused methods
added new biome tag ( deep dark , is _ far _ light , is _ roster , is _ spooky )
improve image request performance by use a separate thread pool
changed access modifiers from private to protected for several fields and methods in BaseTableUpsertMetadataManager to enhance encapsulation and improve code readability
updated Japanese and Chinese language strings from " л і т " to " л �
updated image comparison logic in AbstractSunSecureRule . java to use hasImageEqualTo method instead of getImage ( ) . equals to improve code
camel - 16400 : camel - jbang - add -- repos option to camel run command .
added handling for NaN score values in CrawlDbReader . java to improve robustness by handling NaN values gracefully
added a cleanup method in OnStartupTriggeringPolicyTest to ensure temporary files are deleted after tests to improve resource management and ensure proper cleanup of
replace ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` and modify focus handling in ` FindAction ` to improve focus
[ hotfix ] [ test ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to verify the correctness of XML schema validation in the project
do n ' t overwrite trie log layer if it ' s already there
refactor FilledNewArrayInstruction to improve code structure to enhance maintainability and readability of the code
added timeouts to multiple test methods in SimpleNetworkTest . java to ensure that tests are executed within a specified time
updated the method to check if the parent path ends with a slash instead of using substring to improve clarity and correctness in path handling logic
added a print statement to indicate the failure of loading the skin file to improve debugging by providing feedback when the skin file cannot be loaded
added a ` markDirty ( ) ` and ` isValid ( ) ` methods to ` LgoGroupedLevel2Update ` and modified the accumulator
added a constant ` UNDEFINED ` in the ` Result ` class and updated the return statement in ` TestStep ` to use it to provide a
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of NullPointerExceptions during transaction registration
improve uploadjobmultifieldoperation to not use async for jet service
improve error handling for data recovery in MessageDatabase and JobSchedulerStoreImpl to provide clearer feedback when recovering fails
[ freeplane - 3241 ] fix view layout when there be no child of the same node .
replaced ` pos ` with ` sizeMask ` and modified the ` ensureAvail ` method in ` DataOutput2 . java ` to
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java files to temporarily disable tests that
replaced the variable ` targets ` with ` endpoints . size ( ) ` and updated the array initialization to use ` subList ( 0 , handler
updated the declaration of the ` bufferedIo ` and ` advertiseUri ` variables in ` FileManager . java ` to improve code clarity and
updated transform function implementations to include aliasing for " plus " , " minus " , " times " , " plus " , " minus "
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and updated package - info . java files
updated RFC3280 to RFC5280 in multiple Java files to ensure consistency in RFC RFC standards across the codebase
fix classcastexception cause by classcastexception in searchannotationvisitor .
replaced HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and memory management by utilizing a more efficient
refactor conditional statements in DirectUpdateHandler2 . java to improve readability to enhance code clarity and maintainability by reducing redundancy
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation to improve code clarity and ensure correct file path construction
updated PreviewPositionHelper to accept a Context parameter and modified related calculations in TaskViewSimulator and TaskThumbnailView to improve flexibility in handling
[ java ] only publish newleadershipterm when need .
updated test assertions in PMDCoverageTest . java to use StandardErrorStreamLog for improved error handling to enhance clarity and accuracy of
modified the skip logic in ByteArrayInputStream and added a new Skip class with test cases to improve error handling and ensure correct skipping of input streams
refactor conditional check for activity reference in UpdaterTask . java to improve readability and maintainability of the code
changed the ` MAX _ HEADERS ` variable from private to public in ` HeadersMessage ` and added a conditional check in ` Peer ` to
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional library dependencies in the
refactor connection framing logic in AbstractHandshakeHandler . java to improve readability and maintainability of the handshake handling logic
updated method signatures and replaced string literals with utility methods in multiple classes to improve code readability and maintainability by using a unified utility class for
added a check for committed state before sending error responses in HttpChannel . java to improve error handling by logging a warning when the response is already
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5335 -
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController and T
change the log level to warn for unknown prefab
removed redundant initialization of ScimGroupExternalMembershipManager and updated external group names in LdapMockMvcTests . java to streamline group creation process
added a validation check for the amount in TransferActuator . java and initialized thirtyDays in FreezeBalanceActuator . java to ensure
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to improve flexibility in path handling
ggb - 1181 make sure ` ` enter ' ' do n ' t show the keyboard button when there be no error
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to improve
modified JsoupNonVisualRegressionTest to save a PDF file if the number of pages do not match the expected number of pages to
add androidnativebufferallocator and deprecate androidbufferallocator in favor of androidnativeallocator
added handling for flags that start with " ! " in Main . java , PrimaryItem . java , and Util . java to ensure proper flag
added NOPMD comment to the executeQuery ( ) method in JDBCHistoryCache . java to improve code readability and maintainability by
updated the condition in BattlePassManager to use ` ItemUseOp . ITEM _ USE _ GRANT _ SELECT _ REWARD `
make test more robust and add a tostring ( ) method to priorityelement
refactor affinity api unit test to use dependency injection and remove unused test cases to improve code clarity and reduce redundancy in test cases
added a null check for the main command and modified argument handling to include help option to improve error handling and provide clearer command - line help
reduce the size of LightOutputStream in multiple classes to improve performance by reducing the number of output streams
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
modified ClassWriter . java to introduce a showBlank option and updated conditional checks accordingly to enhance the flexibility of displaying blank lines in the output
added assertion to verify the length of the variable ' sn ' in the Person class to ensure that the variable has a valid length before proceeding
added null check for file extension in VirtualFile . java to improve robustness by preventing null pointer exceptions
change return statement to continue in ContactRightButtonMenu . java to ensure proper control flow during execution
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment .
simplified the screen index calculation in InstallShortcutReceiver . java to improve code clarity and maintainability by reducing the number of screen
refactor the binding and closing logic of PlainSocketImpl to use a delegate instance to improve clarity and ensure proper resource management during socket closure
added functionality to manage and clear removed items from media details in BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed
updated log message to reflect the element ' s in - view center point instead of the center of element to improve clarity and accuracy of the
added a new file bug4865918 . java to implement a GUI test for the scrollbar to ensure that the scrollbar block increment is correctly
replaced the usage of ` velocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by
replaced specific imports with a wildcard import and added group triggers handling in QuestCommand . java to streamline import statements and enhance group triggers
fix crash when try to select gnucash account file .
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enable better serialization capabilities for better debugging
refactor CloudService configuration URI to use a constant instead of a hardcoded string to improve code readability and maintainability by centralizing configuration
removed viewport component and JScrollPane settings from BrowserPanel . java to streamline the code by eliminating unnecessary components
replaced the KEYCODE _ DEL case with KEYCODE _ FORWARD _ DEL in LwjglInput . java and updated
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving content type parts to optimize performance by avoiding unnecessary
added a pattern to extract and process the author from a comment string in JSDoc . java to improve code clarity and ensure proper identification of
replaced DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES constants with CREATE _ TOTAL _
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved table management to enhance
modified the oauth2LoginLinks method to accept an additional ` MultiValueMap < String , String > ` query parameter and added error handling to enhance
replaced " Hijrah - umalqura " with " Islamic Umm al - Qura Calendar " and
fix webaudiowrapper . issupported ( ) for firefox
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor from ` InterceptorConstants ` to enhance the functionality
added support for default character set in table creation statements in TestCompatibility . java to ensure compatibility with default character set in InnoDb database
removed unnecessary whitespace in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in executiongraph
added a boolean flag ` hasFrom ` and updated related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest `
refactor synchronization logic by replacing success status checks with a multi - status check for file synchronization to improve clarity and maintainability of the code
refactor test matching logic by introducing a new method ` applicableListTests ` to improve code readability and maintainability by centralizing test
updated the regex pattern for identifying log lines in LogAnalyser . java to improve clarity and accuracy of log output formatting
( chore ) camel - google - cloud : enable the integration test if google _ application _ credentials be not set
fixed - rsearch . value ( ) and rsearch . valueof ( ) method do n ' t support exclusive search parameter . # 4
add option to select cclicense step for change and no
do n ' t try to store the global id of a model if it ' s not there
replaced direct equality check with comparison strategy in OptionalAssert to improve comparison logic for better readability and maintainability
refactor spacing and margin management in NoNewLineParagraphCssApplier and ParagraphCssApplier , and update sanitization method in ParaGraph
added a new file ` TestArrayCopyToFromObject . java ` with a test method to validate array copy behavior to ensure that ArrayStoreException is
replaced instances of " sys . path . insert ( 0 , \ " ) " with " sys . path . insert ( 0 , "
fix ajp / nio / ajp so that it do n ' t call getasync ( ) if the state be already close .
add ` ` findfiles ( modcontainer , path , boolean visitallfiles ) ' ' and deprecate ` ` findfiles ( modcontainer
added an import statement for JUnit ' s Ignore annotation and annotated the test case with @ Ignore to temporarily disable the test case due to un
modified the request handling in TestInternalInputBuffer to check for null exceptions before asserting a 400 response assertion to improve error handling by avoiding
refactor autoloadCall method to include a lowerName parameter and improve locking mechanism to enhance thread safety and maintainability of the autoloading process
added server version comparison logic in CustomPlaybackOverlayFragment and updated HLS support check in PlaybackController to ensure compatibility with server versions 10.
refactor localhost handling in BasicKrb5Test . java and OneKDC . java to use canonical host names instead of hardcoded values
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a specific JSR
update import statements in MP4Parser . java for improved clarity and organization to enhance code readability and maintainability by using more d
added HS2 _ PROXY _ USER constant and modified sessionParams handling in ConnectionFactory . java to include the user ' s username in session
added SNAPPY compression support in HdfsCompressionCodec and corresponding test cases in HdfsProducerTest to enable compression functionality with Bzip2
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing during test execution
fix bug # 49966 - fix xssfcell . setcellvalue ( ) and xssfsheet . setcelltype (
updated glyph positioning logic and improved text formatting in GlyphLayout . java and BitmapFontTest . java to enhance text rendering accuracy and ensure
removed hardcoded file path references and simplified image loading calls in Fabric8IstioIT . java to improve code readability and maintainability
replaced apiClient . ReportPlaybackStartAsync and apiClient . ReportPlaybackProgressAsync with a call to getPlaybackManager ( ) . reportPlayback
clean up fileinputstream leak in simpleauthority
check if recordstore exist in memory before try to load maploader on initial load
change bitwise operation from ' & ' to ' | | ' in ResponseFlag . java to ensure proper handling of ERROR _ BIT in response flag
add the read policy to the anonymous collection if it do n ' t exist
replaced direct instantiation of CompositeFont with a ConcurrentHashMap for thread - safe retrieval to improve performance by reducing redundant creation of CompositeFont instances
simplified the calculation of prefHeight by removing the call to getHeight ( ) and adjusting its value accordingly to improve code clarity and
dmn feel validation message for unknown variable error ( # 1358 )
removed unused imports and updated type declarations in multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
changed the access modifier of the ` finishRunningRecentsAnimation ` method from private to public and updated the execution method in ` NavHandle
added null checks for node ID and edge ID in ElementFactoryImpl . java and modified edge type handling in ImportContainerImpl . java to ensure
fix npe in fnapicontrolclient . getallinstructions ( ) and beamfnstategrpcclientcache . getallinstructions ( )
updated session creation in BinFiles . java and added a new test for flowfiles larger than the bin limit in TestMergeContent . java to
replaced geometry . findClosest with a loop to find the closest core in the enemy ' s cores to improve accuracy in determining
added a check to skip copying the content - length header in the RestTemplateCopyHeaderFilter to ensure that the request does not copy the content
removed case handling for CLASS and CHAR in Java2TypeScriptTranslator and modified transpile method in SyntaxTests to streamline string conversion and
updated filter sizes and sample sizes in multiple classes to improve visual consistency and clarity in channel filtering logic
hbase - 22075 canary command - add - allregions option to enable all region on a regionserver
added NodeModule import and modified ImmutableMap creation in TestCassandraConnector . java to simplify code and improve readability by removing unnecessary dependencies
reset the cursor position in the order index in KahaDBStore . java to ensure proper handling of cursor positions during data processing
limit the minimum size of the call dialog to a maximum of 300x300 pixels
fix blockfalling . getblockstate do n ' t lose state information during world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit Test framework for improved test setup to enhance test reliability and
added null checks and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO . java to ensure proper removal of KerberosPrincipalEntity instances
removed the ' true ' argument from the getTableSnapshot method call in StatsOptimizer . java to simplify the method call by eliminating unnecessary parameter
improve logging when an error occur while the poller be stop .
update error message in AndroidGradleBuilder to provide clearer guidance on the Monetization setup section to inform users about the key being
updated the name used in the FileTranscodeVirtualFolder from ` getName ( ) ` to ` getDisplayName ( ) ` and removed unnecessary methods in
[ drools - 5251 ] avoid use a hardcoded package name for the executable model in the executable model
added an assumption to skip tests for version 19 in CheckIndexTest . java to ensure tests are not executed on versions 19 and above
removed the context parameter from the assignTargetsForSplitScreen method and adjusted related logic to simplify target assignment logic and improve code clarity
refactor LeaderLatch class for improved readability to enhance maintainability and clarity of the code
added methods to initialize zk - SNARK parameters for Sapling to improve parameter management and ensure proper initialization of zk - SNARK parameters
change transactionconfidence . getdepthinblocks ( ) to return a future from transactionconfidence . getdepthinblocks ( ) .
added a ` createMediaRecorder ` method to ` CodenameOneImplementation ` , refactored ` Location ` , ` MapComponent `
set default value of platformName to " ios " to ensure platformName is set to " ios " for better compatibility
chore : integrate new gapic - generator - java and rules _ gapic ( # 436 )
added braces around conditional statements in Graphics2D . java to improve code readability and maintainability
rename CreateVisibleSignature . java to improve clarity to enhance code readability and maintainability
added error handling to the ` nextOutgoingFrame ` method in ` AbstractExtension . java ` to improve robustness by logging exceptions during frame processing
replaced direct caller instantiation with privileged action in ContextHandler . java to enhance security by using privileged actions for privileged actions
added logic to reset the parent of child categories in the FeedCategoryDAO based on the category ID to ensure that only non - parent categories are
add ` ` update ' ' , ` ` tool ' ' and ` ` library ' ' to contrib manager dialog
added a new ` vwap ` field to the ` Ticker ` class and updated related methods to include it to enhance the Ticker
added functionality to display a " no widgets " TextView in the SearchAndRecommendationsScrollController and updated related calculations in WidgetsFullSheet
add rendergraphapi to allow add tintnode to the graph .
added a method to set the primary color for the NCFirebaseMessagingService to enhance the user interface by providing a customizable primary color
updated ShadowUsbManagerTest . java file to improve test coverage for USB manager functionality
updated calculations in ` AbstractDifferenceRecommenderEvaluator ` and added logging in ` AverageAbsoluteDifferenceRecommenderEvaluator ` and ` RMSRecommender
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly after
modified width and height calculations in AndroidGraphics to ensure a minimum of 1 pixel to improve rendering accuracy by preventing out - of - bounds errors
replaced instances of ` HashMap ` with ` LinkedHashMap ` for ` options ` and ` result ` in multiple classes to maintain the order of elements
replaced ClosureManager with ClosurePool in NativeClosureFactory . java to improve closure management by utilizing a dedicated closure pool
( chore ) camel - core - camel : migrate camel - route - main to junit5
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , implementing an integration test for the WebSocket
no effective change - remove unused generic type set in abstractimportmetadatasourceservice
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a conditional check to return false if the " jnr . ffi . compile . x86asm " system property is not set to true
refactor code to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new ` @ Insecure ` annotation to the ` MessageBuffer ` class and refactored its constructor to use it to improve clarity
added multiple Hive configuration variables to HiveConf . java to enhance configuration flexibility for Hive operations
initialized scopes and policies as new HashSet instances in ResourceSet . java and added a null check in DefaultResourceSetService . java to ensure that
changed the ` decrefOnClose ` variable to be ` final ` and modified the constructor of ` MultiReader ` to accept multiple listeners to
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 files to
simonstewart : fix test that be break in 2.49 http : / / bit . ly / 1JKT4AE
removed the ` $ Gson $ Types ` method and made several classes final in ` GsonTypesTest ` and ` LinkedHashTreeMap ` to
changed return types of keySet ( ) and values ( ) methods from Set < Integer > and Collection < Integer > to KeySet and Values to
added a duration property and associated getter and setter methods to the FlipTransition class to enhance the flexibility of the FlipTransition class by
removed trace logging for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging when
bump major and minor version number to 9.10 . 0 in forgeversion . java
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` sun . reflect .
added support for Java 15 and 16 post processors in ParserConfiguration and introduced new classes for validators and post processors to enhance compatibility with Java 15 and
updated padding logic in ExpansionViewHelper for handling single and last replies to improve UI responsiveness by adjusting padding based on the number
[ hotfix ] fix race condition in abstractpartitionprimaryreplicareplicaAntiEntropytask
added metadata handling in SeedUrl and SeedResource classes to enable storing and retrieving metadata from SeedUrl
added a null check for declaration before creating a cloned pattern to avoid potential NullPointerExceptions when declaration is not initialized
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
updated AnnotationActionValidatorManager to include package name in the output string based on the presence of a package name to ensure proper handling of the package
updated assertions in IterableTest to explicitly cast null values to Object [ ] and added a new test method to ensure correct handling of null values in
added default stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes , and implemented a corresponding test in MapIterableTestCase to enhance
return a cloned instance of notifInfo instead of the original to ensure that the return value of notifInfo is not modified to prevent un
make sure we iterate over the command key in order to avoid nullpointerexception
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future updates
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check for null ID in PackageResourceTable and changed the default ResourcesMode from best to legacy in RobolectricTestRunner to
added a conditional check for head _ Table , os _ 2 _ Table , and ulPos before accessing their contents to ensure accurate underline metrics are
refactor SignPlugin to accept a list of HttpMessageReader for improved message readiness to enhance flexibility in handling different HTTP message readers
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed the import of MavenDeployer and added validation check in StandardMavenAuthenticationProvider . java to streamline the code by eliminating
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
enablerows - enabling ssl for enabling / disabling encryption
refactor HiveFunctionRegistry to use Streams for string manipulation and add a new function REPLACE _ MAP to improve code readability and maintainability by
fix issue with mbean mbean registration and unregistration in test .
updated the method ` getBuildTargetForAlias ` to include a prefix from ` possiblyFlavoredAlias ` to improve clarity and functionality of
camel - olingo2 : fix olingo2consumer to not return 0 for empty odata feed
added support for retrieving the equivalent Hive version in MetaStoreSchemaInfo to ensure compatibility with different Hive versions
vm expunge : do n ' t try to expunge a vm if expunge fails
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
replaced direct calls to ` TextHelper . parseTitleAndContent ` with a new method ` getAlternativeTitle ` in multiple classes to improve
updated the test class name from ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and modified assertions for column types
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple Java files to improve code clarity and consistency
added a ` TestIdleListener ` to the ` StandardSession ` class and used it in the ` AsyncTimeoutTest . java ` file to
update testBigQueryTable assignment to include a formatted string to improve readability and maintainability of the test table name
added background resource and reset method for icons in HotseatPredictionController and removed it in BubbleTextView to enhance visual feedback and
mondrian : rename mondrian . properties . getflushafterquery to mondrian . properties . flushafterquery
add presto native query test to verify result count
limeexplanation : fix npe in limeexplanation . getactivefeatures ( )
added arguments to the ` InstallCommand ` and ` AppleSimulatorController ` methods and updated related error messages to enhance command - line argument
fix exception when select a line with no start or end in the parargraph
added availability check for pipeline and manager states in ContainerBase and StandardContext classes to ensure that only valid lifecycle states are processed when the manager is
added a call to ` setClipToOutline ( true ) ` on the ` qsb _ background ` view to enable outline clipping for the
added performance tracking for flag processing in SQLManager and improved string formatting in BlockTypeListFlag and PlotArea classes to enhance performance monitoring and
replaced multiple specific OpenGL imports with a wildcard import and modified depth test behavior based on floating text ' s isOccluded flag to
fix target _ com _ oracle _ nfi _ backend _ libffi _ libffi _ backend _ libffi _ libff
refactor propagation behavior handling in JdbcAggregationRepository by introducing a private variable and modifying its usage to improve code readability and maintainability by
update base layer regularization configuration to handle both L1Regularization and L2Regularization instances to ensure the base layer ' s regularization
added try - catch blocks around the readWrite ( ) method and modified the readWrite ( ) method to handle exceptions to improve error handling and
changed the visibility of the colorStack array from static to instance variable and updated its assignment to improve encapsulation and ensure proper access to the color
changed the parameter of ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` in ` Configuration . java `
updated BTCEPollingMarketDataService to convert tradableIdentifier to lowercase to ensure consistent handling of currency identifiers in the depth retrieval process
updated QTT command values in ChannelStateTests . java to reflect new channel states to ensure accurate and accurate QTT publish values for the command
remove ` ` versionedhashes ' ' from eip6110 and test
set trigger price to an empty string in MutableOfferView . java to ensure that the trigger price field reflects changes in the model
modify the logic in StudentFeedbackSubmissionEditSaveAction . java to handle both registered student and error scenarios more effectively to improve the handling
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 26969 hstore . delete ( ) should check if result be true before log a debug message ( e . g .
fix for # 260 - when set property on new bean , flush queue when set many property
added a boolean flag ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` , and modified the condition
added two overloaded methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide
replaced specific imports with wildcard imports for java . awt and javax . swing , and added firePopupMenuWillBecomeVisible and getP
replaced the existing null check for the ` insert ` variable with a new HashMap and lowercase it to ensure that the ` insert ` variable is
replaced direct calls to ` scala . collection . JavaConversions . asScalaIterable ( ) ` with a static import of `
added null check for requests and enhanced logging in MockServerEventLog . java and HttpForwardObjectCallbackActionHandler . java to improve robustness
log a warning if property file can not be load
refactor session dataset handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added checks for multicast support and network status in SetOutgoingIf . java to ensure proper handling of multicast connections when the NIC is up
updated the way sqlCommand is constructed by changing the String constructor to include the length parameter to improve flexibility in string manipulation by allowing for dynamic
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to set the latest consumption time and energy for energy
added a method to set an InvalidSessionStrategy in SessionManagementConfigurer to enhance session management configuration by allowing customization of the invalid session strategy
enhanced error message in ProtobufAnnotationSerializer to include the empty index and known labels to improve debugging by providing more context when a token cannot be
add a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in ` MapAssert `
replaced direct usage of ` stgen ` with a new ` psgen ` interface and added a new interface ` JDBC4TemporaryPreparedStatement
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve immutability and performance of the code
pdfbox - 4892 : use point2d instead of point2d . float , a suggest by valerybokov
replaced the initialization of ` hooks ` with a static final array ` EMPTY ` in ` Method . java ` to improve code readability and
added a ` grantAccess ` flag to the ` MockAuthenticationManager ` class and modified the authentication return logic to ensure that the ` MockAuthentication
modified the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance job execution handling by providing a specific job execution
added a check for file execution permissions in SharedLibraryLoader . java to ensure that only writable files are processed in the shared library
feat ( generator ) : update protoc to v3.15 . 3
improve javadocs of samplereservice . savesampleresult ( ) and resultcollector . sampleOccurred ( ) .
added new constants for Battery level , annotation , time with parameters in BundleConstants . java and updated CustomUrlManager . java to utilize
change searchexpression . applyrule ( hashtable searchstrings , bibtexentry ) to use map instead of hashtable
rename ` ` geowidget ' ' to ` ` object ' ' for consistency
updated method parameters and texture settings in JoglGraphics and ProjectiveTextureTest classes to improve code clarity and enhance texture handling capabilities
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void and updated the file creation logic to ensure the output
camel - 16400 : fixed intercept from property component to use property placeholder .
updated condition in ActionScheduler to use ' > = ' instead of ' > > ' and modified the expected attempt count in TestActionScheduler to
updated the initialization of ` dbg _ zip ` to use a temporary directory and added null check for ` debug _ log ` to ensure ` dbg
add a render debug option to hide the hud
move pipe . resetgate ( ) to pipe . resetgate ( ) so that it do n ' t interfere with other pipe .
replaced direct instantiation of TestSupplementary with locale - based locale handling to ensure consistent locale management during tests
updated randomness parameters in the Team constructor to correct the color range for team creation
replaced HashSet with ArrayList for activeMatchedStates and improved logging checks to enhance performance and readability when removing matched states
update condition to check for null annotation in SoftAsserts . java to ensure correct handling of expected exceptions
updated error handling in StoragePluginRegistryImpl to include exception messages and added logging for better debugging to improve error reporting and provide clearer context for
replaced multiple calls to ` ReportUtils . report ` with a unified ` toCsvFile ` method for better readability and maintainability to
added null checks and improved note handling in DetailFragment . java and WidgetProvider . java to enhance robustness by preventing null pointer exceptions
added a new variable ` peakTasks ` and modified the logic for tracking task loading in ` AssetManager . java ` to improve task management and
danielwagnerhall : enable native event by default on window
added support for customizable score and fetch interval in the Injector class to enhance the handling of injected scores and fetch intervals in the CrawlDatum
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ScimExternal
modified the condition in CoreContainer and added a method to check if the zkController is null , and added a new test for schema sharing functionality
updated sizeInBytes ( ) method calls to include a boolean parameter for better handling of segment sizes to ensure accurate size representation of segments without store information
replaced assertEquals assertions with assertNull for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is not
updated SQL query to include additional conditions for handling non - null domain columns in database metadata to ensure correct handling of non - null domain columns in
[ java ] only send newleadershiptermevent if necessary .
removed the ` buildMediaType ` method from ` WebClientPlugin . java ` to streamline the code by eliminating unnecessary code
rename methods from ` fill ` to ` fillSlice ` and ` fill ` to ` fillAndGetIndex ` across multiple classes to improve clarity
hive - 14836 : fix compaction issue after iow - > major table compaction ( prasanth jayachandran
update immutableStorageScheme and qualifierEncodingScheme initialization to handle null cases to ensure default values are used when immutableStorageScheme is null
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customizable and cutomized
replaced hardcoded string " cache " with constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability and
unregister a gcm siv proto serialization in order to avoid race condition
add miss oredictionary replacement for slabwood
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the session management framework
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` SourcePathResolver ` parameter in the ` Undefined
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14827 remove @ skipfortable for mysql and mariadb
corrected the positioning of the spriteBatch drawing in HelloWorld . java to correct the positioning of the sprite based on the texture '
updated permission checking logic and improved string representation in PlayerFunctions , PlotId , and WorldGuardListener classes to enhance code clarity and ensure
added a deprecated constant for Lucene version 8.5 . 0 to indicate that this version is outdated and should not be used in future versions
updated print statement formatting in SSLSocketImpl . java to improve readability of the log message for clarity
add a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing for a
[ conllu ] support dependency type in conllu output
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to ` makeTargetDescription ` in ` ParseContext `
updated test method from ` testFromMain ( ) ` to ` test ( ) ` for ` MyChild ` initialization to simplify the test execution
updated the array size and loop iterations in Configuration . java to improve memory management by using a maximum of 256 blocks instead of the block list length
added version check for " git - Spigot " and " Paper only " features in BukkitMain . java to ensure compatibility with
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and its corresponding test in AbstractSQLChangeTest . java to ensure
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and implemented them in ` MutableBagFactoryImpl ` to
updated ` BuildNavAndPDFBody . java ` to handle special characters in file names and improve error handling for mismatched shortname and permalink to
updated MqttBrokerConnection instantiation to set the client ID to false to ensure the connection is created with a non - default client ID for
updated the retrieval of the change set to use the root database change log if it is null to ensure robustness by avoiding null pointer exceptions
[ hotfix ] remove unnecessary new instance of methodresult
added HiveMetaStoreClient and logging functionality in TestHiveMetaStorePartitionSpecs and TestObjectStore classes to enhance database management and improve logging
added a new parameter for order currency in BithumbAuthenticated . java and updated its usage in BithumbAccountServiceRaw . java to
deleted SSEFluxWebConfig . java to remove unused configuration files to streamline the codebase
updated return type checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName (
refactored YamlResource to remove dependency on YAML _ READER and added a new GET endpoint for listing YAML values based on detection ID to
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to allow external access to
replaced anonymous ThreadFactory implementation with a lambda expression and refactored awaitTermination method for better readability to improve code readability and maintain
added unit tests for adding items to MongoTemplate and created a new class ` PersonWithAList ` to ensure correct functionality and functionality of the
ggb - 1343 syncappletpanelsize ( ) should take into account the current g2p space size
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve responsiveness by delaying toolbar visibility updates
[ iotdb - 4248 ] fix overlap data bug in first page reader
save vm password only if vr be run
added default values for usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper handling of output stream and character
added a warning check for assignment side effects in GroupDialog to ensure proper handling of assignment side effects during group creation
renamed JSON and JSONObjectConvertor classes to improve clarity and consistency in naming conventions
updated condition to check for max width and height in FileUploadApiController . java to ensure proper handling of icon dimensions based on max width and
fix jwttokenciphersigningpublickeyendpoint . fetchpublickey ( ) to return a pem string if it ' s empty
added functionality to check the contents of the " . mime . types " and " etc . mime . types " files based on the operating system
replaced deprecated compression methods with JZlibDecoder and JZlibEncoder in NettyConnection . java to improve code clarity and maintain
added a method ` doesClassLoaderDescendFrom ` to the Util class and refactored the ` Class ` and ` MethodHandles ` classes to
removed unused ` doConnect ` method signatures and improved error handling in ` ChannelProvider ` and ` ProxyChannelProvider ` to streamline connection
added a test for handling an empty final column in TestCsvHeader . java to ensure that empty final columns are properly processed and created in the
added compass gravity and margins to NearbyMapFragment to enhance user interface responsiveness by providing visual appearance
added unit tests for the interpolation of GeoPath objects in GeoPathTest . java to ensure correctness of distance calculations in the GeoPath class
added ` throws HiveException ` to method signatures and modified exception handling in ` LeafFilterFactory ` and ` ParquetFilterPredicateConverter ` to
added a condition to set the language of currentAudioTrack if it is blank to ensure the correct language is used when setting audio tracks
added a warning log when schemas in the new version are less than the old version in MicroserviceRegisterTask . java to inform users of compatibility
replaced manual array copying with a unified addAll method across multiple array implementations to improve code readability and maintainability by reducing redundancy
reformatted try - catch blocks in DataSourceProxy . java for better readability to improve code clarity and maintainability
refactor InMemoryClientRegistrationRepository and related classes to improve registration handling and constructor logic to enhance code clarity and ensure proper initialization of client
added a method to reset the UI state in the SchemaUpgradeHelper class to ensure that the UI state is reset correctly during upgrade to the database
added logic to handle failed steps in JUnitReporter and corresponding test cases in JUnitReporterTest to improve error reporting behavior for pending and non
allow ` ` . x ' ' and ` ` . y ' ' in player selector , fixes # 8238
added the Closeable interface to the Selector class to implement the Closeable interface for better resource management
added a MultiplexConnectionPool for improved connection management in MaxConcurrentStreamsTest . java to enhance the performance of the connection pooling for
added multiple calls to stringType ( ) in CoreOptions . java to enhance the functionality of stringType ( ) in the CoreOptions class
updated HqlQueryRenderer to handle character and parameter contexts and modified test configurations in EclipseLinkUserRepositoryFinderTests and UserRepositoryFinderTests
updated status handling in HttpGenerator , HttpChannel , HttpChannelState , Response , and StatisticsHandler to use HttpStatus constants instead of hardcoded values
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated HikariCPCollectorTest to use a mock data source class name instead of hardcoded JDBC URLs to improve test flexibility by allowing
updated ParquetFormatPlugin to expand selection based on metadata file existence and refactored metadata handling in ParquetGroupScan to improve metadata handling
updated Jsr199Javac . java to modify success status logic and improve error handling during compilation to ensure proper compilation process and error reporting
added a TableModelListener to the DefaultSortedTableModel to notify when a table changes occur to enhance the model ' s event handling for table
updated the number range check from 49152 to 65535 in ServerConfig . java to allow for a maximum of 65535 values instead of a minimum of
added support for document provider changes in AuthenticatorActivity and AccountRemovalJob for API level KitKat and above to ensure proper handling of changes
removed the call to startLogging ( getAppContext ( ) ) in MainApp . java to streamline logging process by eliminating unnecessary logging
modified exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to enhance robustness by ensuring only wrapped RequestRejectedExceptions are
updated StringBuilder to use ' this . length ' instead of ' length ' for copying to improve code clarity and maintainability by using instance variables
added a check for an empty filterList in Filter . java and created a corresponding test in TestFilters . java to ensure that an IllegalArgumentException is
add a new class tbstopwatch to facilitate the execution of the stop ( ) method
fix checkstyle issue in io / entity / pt / pliststore . java ( # 4696 )
added @ Deprecated annotations to multiple classes and methods to indicate that these classes are outdated and should no longer be used in future versions
[ zeppelin - 4892 ] fix classloading issue when run zeppelin .
fix npe in commandsourcestack . getplayer ( ) in forgehooks . getcommandsourcestack ( )
updated minimum SDK versions in ShadowRttCallTest and ShadowCall classes from VERSION _ CODES . P to VERSION _ CODES . O
updated variable names and logic in DeadlineTimerWheel . java for clarity and consistency to improve code readability and maintainability by using
# 263 - enh : add simple name for @ manytomany and @ manytomany bean ( # 2635 )
updated resource URLs from " wro / all . js " and " wro / all . css " to " static / all . js
added a new test method ` showLatestTimeseriesTest ` to validate the functionality of the ` showLatestTimeseries ` function to ensure that
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and accuracy in the configuration
added a type check for ` CertPathValidatorException ` before throwing it in ` OCSPChecker . java ` to improve robustness by avoid
benchmarker : add an option to turn off write solution by default
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify the behavior of ` sliceSize _ reopen ` in the ` SortedTableMap `
added a shapeless recipe for pipe water and slime ball to the GameRegistry to enhance the player ' s integration with the game '
fix arrayindexoutofboundsexception when iterate non - zero vector .
added metadata handling for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents to ensure that Shulker
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated imports and added methods to retrieve maximum directory and file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter . java
added a check for the existence of a tag in the UpToTagChangeSetFilter to ensure that no matching tags are found and provide a warning
[ hotfix ] [ table - common ] use arraylist instead of linkedlist in favor of arraylist
refactor BrokerRoutingManager to improve code readability to enhance maintainability and facilitate future updates
changed volumePaint and upPaint color values from gray and green to GRAY and GREEN in CandlestickRenderer . java to
refactor layout parameter handling in InsettableFrameLayout . java to improve clarity and maintainability of layout parameter management
added a duration parameter to the BuildTargetDurationListener and updated corresponding tests to include it to enhance the handling of rule duration in the build process
replaced the use of Spring ' s @ Profile annotation with a static import of System . getProperties for database migration tests to improve code readability
added null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is not initialized
add a replacement feature to camel - test - infra - camel to allow to replace from / to endpoint
use nonblockinghashset instead of concurrenthashset in cassandraconnection
api : add networkid parameter to listpublicipaddresses api to allow to list all public ip address by source network id
added a test for ignoring battery optimization in ShadowPowerManagerTest and implemented related methods in ShadowPowerManager to ensure that the functionality works correctly
updated the method to retrieve the Jetty version from a build properties instead of a hardcoded version string to ensure compatibility with the latest build properties
added unit tests for invocation verification order in NumberOfInvocationsInOrderVerifierTest . java to ensure correct behavior of invocation verification based on the
fix ` ` no match instance be match ' ' warning in tregexexecnode
added " - foreground " argument to the startProfile method call in NewProfileExtensionConnection . java to ensure the profile starts with a foreground color
replaced executor variable names and updated shutdown logic in MiniSolrCloudCluster . java to improve clarity and maintainability by using more descriptive
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related loops
updated file logging to use getName ( ) instead of getFile ( ) and added null check for actionsList in EditorTextActionWindow to improve logging
updated skipped entries to include error messages in ClassFileReader . java and JdepsTask . java to improve debugging by providing clearer context about skipped
replaced LogStorage with LuceneStorage for document storage management to improve performance and maintainability of the codebase
updated the ` populateBubble ` method to handle an existing ` BubbleBarBubble ` and added a null check for it to improve
[ hotfix ] remove warning log for route policy
refactor methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to use a single Method parameter instead of an array
[ java ] use an explicit multicast delay generator for the receiver .
updated Gson initialization and added JSON serialization logic in ClientInformationResponseView . java to improve client information handling and ensure proper serialization of client information
added a check to ensure the order ' s fieldCashAmount is not zero before setting the average price to avoid potential errors when calculating the
simplified the subscription of execution reports in the BinanceStreamingMarketDataService by removing the rawExecutionReports ( ) method to improve
added a fail method to handle exceptions and modified exception handling in LdapTimeoutTest . java to improve error reporting for test failures and provide clearer
added a check to ensure the user dictionary exists before attempting to read it from it in JPhonemiser . java and updated Mary
updated password handling logic in AmbariServerConfigurationHandler to check for a blank password file or credential store alias before updating the password to ensure
added a check to skip parsing a segment if it already exists in ParseSegment . java and implemented the isParsed method in SegmentChecker . java
[ hotfix ] [ yarn ] add application attempt failure validity interval config option
do n ' t try to unload the h2 driver if it ' s not present
hbase - 25827 tableinputformatimpl should set default readtype for snapshot - based inputformat ( s )
added fixed height and width parameters to LoginInstanceRequest and implemented getter and setter methods for them to enhance configuration flexibility for instance login options
added corner radius parameter to update methods across multiple classes to enhance flexibility in handling corner radius during updates
updated COMMANDS _ TO _ REMOVE array to include additional commands and added a filter for warnings related to cross product queries to enhance functionality and
refactor connection handling in TxnHandler to use a retry mechanism based on the connection pool to improve reliability by allowing retries based on connection pool
[ hotfix ] [ runtime ] rename queuecontainer . txnensurereserve to txncheckreserve and add backup preparation operation
added a new field ' strings ' to the FirstOfStringsMatcher class to store and initialize the string array accordingly
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to use " CLIENT SELECT " and " SERVER SELECT " instead of " DELETE ROWS
modified the exception handling logic in BaseServiceException to include a retryable check for SocketException to improve reliability by allowing retries for SocketTimeoutException and
added support for ` rapidInstallTypes ` in various classes related to ADB and Android devices to enhance configuration flexibility for installing beta
updated the regex pattern for the SeedPattern in SortTest . java to allow negative seed values to improve test accuracy by allowing for negative seed values
refactor MultimapSubject to use factory methods for values and entries instead of direct calls to actualAsString ( ) to improve code clarity and
simplified the return statement by removing conditional check for device orientation to improve code clarity and maintainability by eliminating unnecessary logic
added a ` transmux ` boolean parameter to the ` Transformer ` and ` TransformerInternal ` classes to control the transcoding process based on
added localization support for string values in the Picker class to enhance user experience by providing clear text
camel - 12447 fixed the test error of cxfrsconsumertest
hhh - 14826 - postgresql 8.1 do not throw lockacquisitionexception and pessimisticlockexception when lock
added null checks and improved query ID handling in TestJdbcDriver2 . java and improved exception handling in HiveStatement . java to enhance
add usagenboundedpcollections category to pardotest to avoid test failure
updated HTML text in GpsSimpleViewFragment to remove em tags from the filename display to simplify the display of formatted file names by removing unnecessary
[ java ] remove leadershiptermid from joinlogasfollower method signature .
refactor HttpSender to use a local instance of HttpExchange instead of calling getHttpExchange ( ) directly to improve code clarity and maintainability
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its tests
added null check for the tree before processing markers and introduced Lombok ' s EqualsAndHashCode annotation to improve code robustness and ensure proper
pdfbox - 4892 : allow xwpfrun . getfontsizeasfloat ( ) and xwpfrun . getfont
change email type from single to array in AddressBookDoCoMoResultParser . java to allow for more flexible handling of email addresses
refactor exclusions handling in RawMavenResolver to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
refactor DSXAdapters to utilize DSXExchangeInfo for currency pair handling and add baseCurrency and quotedCurrency to DSXPairInfo
refactor TestBlockingIO , TestParsingTable , TestResolvingTable , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] fix incremental compilation when the pom be invalid
updated the initialization of ` copy ` to use ` finale - k ` and added a check for ` sobj . has ( k )
refactor JacksonDataFormat and JacksonXMLDataFormat classes for improved data handling to enhance performance and maintainability of the data format
use unreflectgetter / unreflectsetter instead of findstaticgetter / findsetter in hostfielddesc
fix : add miss nullable annotation for completionstage
updated the freeze checkpoint calculation in PlaybackController . java to adjust the duration threshold from 9000 milliseconds to 10000 milliseconds to ensure that the freeze
removed unused imports and updated internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code by eliminating unused imports
updated the method call to use realType ( ) instead of typeCode to improve type handling by using realType ( ) instead of typeCode
refactor indentation handling in TabsAndIndentsVisitor to improve readability and maintainability of the code logic
updated TestSingleTokenTokenFilter to extend JUnit ' s TestCase instead of Lucene ' s LuceneTestCase to ensure compatibility with
updated the ` write ( newColumn ) ` method to include a ` < td > ` tag with a class ` wrappedText ` to enhance
updated JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , and MockStepDao to utilize the ExecutionContextDao for better
added a condition to check if the new media folder should be hidden before adding it to the list to ensure that the folder is only added when
added null checks for actor and implemented widget removal logic in SplitPane . java to ensure proper handling of null actors and prevent unsupported operations
add handling for ` JavaType . Parameterized ` and ` JavaType . FullyQualified ` types in ` RemoveUnusedImports . java ` to
fix npe in uniquemodlistbuilder when there be no mod info .
changed the access modifier of the LOG variable from instance to static in TicketGrantingTicketImpl . java to allow the logger to be accessed from
updated the SQL string for creating a timeseries with a specific RLE constant from RLE . RLE . 81 + 12 to RLE .
added a method ` isValue ` in ` AttrData ` to check for string values and updated ` Converter ` to use this method to improve value
added support for US International PC keyboard locale detection in CPlatformResponder . java and introduced utility methods in LWCToolkit . java
[ java ] set publication connection timeout in ctestmediadriver so that test do n ' t fail on slow machine .
added a condition to return false for specific request URIs in GTVGFilter . java to ensure proper handling of specific request URIs
added an assertion to verify the installation failure of the APK in TestUtil . java to ensure that the APK is rooted correctly when
# 263 - ignore testqueryforgeosupcoming and testqueryfindpagedlist test for oracle
added MultiMap mock and updated multiple secure transport protocol lengths in TestVertxTLSBuilder . java and TestSimpleBodyHandler . java to enhance test
updated Java paths from " e3506ff7c11f6384d09dda " to " fc76b6367
added a boolean flag ` mIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController . java `
fix explosion cause to include projectile source .
removed unused import and overridden getItemId method in SymbolInputAdapter . java to streamline code by eliminating unnecessary dependencies
updated query parameter handling in Bitfinex . java and changed limit sizes in BitfinexPollingMarketDataService . java to improve query performance and
added a check to replace single quotes with double quotes in the result string to ensure proper handling of single quotes in XML output
[ hotfix ] [ k8s ] fix k8s kubernetesleaderelectiondriver tostring ( ) to include the name of the config
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of session management
[ 3.0 ] fix nullpointerexception in triinvoker # getmethod ( )
replaced error handling in PolygonRegionLoader to throw a GdxRuntimeException instead of logging an error to improve error handling by throwing a runtime exception
added a method ` isStarted ( ) ` in ` Deadline ` and modified ` RawStoreProxy ` to start and stop the timer if it
added handling for ` ClosedChannelException ` in ` NettyRequestExecutor ` to provide clearer error messages for closed channels to improve user feedback
updated the handling of genres in ItemListActivity to check for null before setting the text to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] reset the master hook before restore the state in region recovery
add support for collection of mapped container in prefab
[ iotdb - 4358 ] fix nullpointerexception in walnode # getoldestunpinnedmemtableinfo ( ) when
added a test for retrying the same host on a callback failure in HttpTest . java to ensure that the same host is retryable when
truffle : fix checkstyle issue in util / tutorial / background . java
added a new test class SQLServerEscapeQuestionCharacterTest for validating SQL Server query escape characters to ensure proper handling of special characters in SQL Server
added nullability annotations and improved constructor parameters in the CamelModule class to enhance code robustness by preventing potential NullPointerExceptions
replaced synchronized block with a utility method for waiting on a waiting loop in JavaFXSEPort . java to improve code readability and reduce
changed the package of ParameterFlags from com . kenai . jaffl to com . kenai . jaffl . provider
replaced instances of ` RegionDecoderCropBehaviour ` and ` BitmapCropBehaviour ` with a single method ` createCropperBehaviour
removed the ` appName ` parameter from multiple ` configure ` methods and introduced a new method ` getAppName ( ) ` in ` LineReader `
[ gr - 3845 ] check that install / uninstall / catalog do not have any dependency .
replaced calls to ` options . setHeadless ( true ) ` with ` options . addArguments ( " -- headless = chrome "
added intern ( ) method to the value assignment in VersionedValue . java to ensure proper memory management by using interned values
added support for " MOVE " operation in the connection status check to ensure compatibility with movable connections in the database
updated formatting of date format constants in FixedDateFormat . java to ensure consistency in date formatting across the application
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with the
[ hotfix ] fix the race condition in hsbuffercontext . startspilling ( )
updated permission checks for untrusted visits in the Visit . java file to ensure correct handling of untrusted visit permissions in plots
fix a problem with jabber when try to start a jabber protocol that do n ' t exist .
updated the condition for URL normalization in BasicURLNormalizer . java and added a new test for curly brace handling in TestBasicURLNormalizer . java
changed method visibility from protected to private for addRemoteAnimations , unregisterRemoteAnimations , and unregisterRemoteTransitions methods to enhance encapsulation and
added a condition to check if ` res ` is zero and comparing the clock rate of ` enc1 ` and ` enc2 ` to ensure
added a method to retrieve the project path and modified the ` generateProjects ` method to return an ` ImmutableSet < Path > ` of generated project
modified the calculation of the calendar ID in HostLocaleProviderAdapterImpl . java to ensure valid calendar IDs are used and avoid potential index out -
added a new file ` MSwingUtilities . java ` that implements utility methods for image scaling to facilitate image rendering and error
camel - 16462 : camel - mail - make it async so it can be use in the async context .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enhance configuration management by ensuring that the correct refresh scope is
added unit test base on user forum issue
added two new files , Main . java and ScriptRenderer . java , in the schemacrawler . tools . integration . scripting package to
added input state check in ` Request . java ` and a new test method ` testQueryAfterRead ` in ` RequestTest . java `
added a check for non - zero width and non - zero height in BitmapFont and introduced a method to check if the actor is a descendant
updated DeploymentManager to run close hooks for failed deployment and added a new test for context shutdown hook to improve error handling and ensure proper context shutdown
add a stacktostring method that take an optional forceignore parameter to simplify the code .
updated sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to improve test reliability by allowing more time for the sleep duration after
replaced specific StringUtils imports with a wildcard import and modified the conditional check to ensure shortName is not blank before comparison to improve code readability and
change to use class . getclassloader ( ) . getresource ( ) instead of a hardcoded url
added a new utility class ` FieldUtils ` with utility methods for reflection - based field access in ` org . acegisecurity . util
removed redundant assertion check in DeferredAttr . java and added a new test class DoubleStaticImport . java to simplify the assertion logic and add a
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding adjustments for custom content to improve
do n ' t sync xabber account if they have an invalid token .
added a new method ` setvar ` for setting variable values in the ` Commands . java ` file to enhance command - line option handling and
fix animal tame event not fire in catentity .
improve error message for unsigned range frame ( # 2698 )
pdfbox - 4892 : check for font name , a suggest by valerybokov
added a line to set the application ' s mode to the current application ' s mode to ensure the application reflects the current application ' s
added support for optional Docker file path in ` ImageFromDockerfile ` and created a new test class ` DockerfileBuildTest ` to enhance
added a null check before creating a new ThreadInfo instance to prevent potential NullPointerExceptions when initializing threadInfos
replaced a hardcoded value of 0.00001 f with a constant from Utils . FLOAT _ EPSILON in the PieChartRenderer
[ hotfix ] [ checkpointing ] add more log for channelstatepersister and singleinputgate
added SYNONYM , ALIAS , ACCEL _ ONLY _ TABLE , HIERARCHY _ TABLE , INOPERATIVE _
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated related classes to utilize it to enhance flexibility in query scoring by
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
[ logback - 1340 ] improve warn message when immediateflush be not set in encloseencoder .
added additional autoconfigures for Rabbit and Kafka auto configurations in ZipkinAutoConfiguration to enhance configuration flexibility by allowing multiple auto - configuration
modified JLayer . java to handle null components and added a new test class bug6875716 . java to ensure proper removal of components
replaced imports from ` avro . shaded . com ` to ` com . google . common . base . Function ` in multiple files to
refactor block handling in BciBlockMapping and GraphBuilderPhase to improve clarity and functionality to enhance code readability and maintainability by
added legacyRenderer getter and setter methods to Label . java and modified conditional checks for icon and mask handling to improve code clarity and maintainability
replaced the method intToFourBytes with a custom method Ints . toByteArray for byte conversion to improve code readability and maintainability
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
updated the signature of the ` thenComparing ` method and added a new ` Department ` class with corresponding tests in ` TypeTest .
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the end time assignment in UserRuleAnomalyFunction to use the current bucket time instead of null to ensure accurate time representation for anomaly
added error handling for parsing integer values in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing fails
added a classloader setting for the MockFactory in MockFactory . java to ensure proper class loader is used for mocking classes
added a new ` OriginalFormat ` class to handle formatting of enum values in ` ConverterWithEnumFormat . java ` to improve the handling of
replaced hardcoded date format string with a constant pattern for date formatting to improve maintainability and readability of date formatting logic
refactor JAWTRenderer class for improved rendering performance to enhance rendering performance and maintainability
camel - 15836 - camel - aws2 - lambda : enable autowire on the lambda client , fixed test
server : fix generate a mac address when vm be in the same network with the same mac address
added a check for " Authorization " header name in ProxyServlet . java to ensure proper handling of authorization headers in the servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve performance by directly executing the command based on the
added a ` getDetails ( ) ` method to multiple authentication classes and modified ` UsernamePasswordAuthenticationToken ` to include a ` details ` field
updated the randomness of ` randUsePoints ` to use a fixed value of ` 0 ` instead of a fixed value of ` 0 `
replaced calls to ` sb . appendDot ( ) ` with ` sb . endSentence ( ) ` in multiple classes to standardize method
updated ` formatForConsole ` method to include ` Locale . US ` as a parameter for locale handling to ensure consistent formatting across different locales for
updated import statements in GroovyParserVisitor . java and GroovyPrinter . java to utilize streams and streamline argument handling to enhance code readability
added bounds checking for ` topInsetPx ` , ` bottomInsetPx ` , and ` leftInsetPx ` to ensure that
replaced direct instantiation of ` GestureState ` with a static constant ` DEFAULT _ STATE ` and refactored gesture state creation logic to
replaced Joda - Time DateTime with Java ' s Instant and DateTimeFormatter for version representation to improve code readability and maintainability by using a
refactor openblas and openblas _ nolapack classes for improved clarity to enhance maintainability and readability of the
remove ioutils . closequietly ( ) from torrent storage . close ( )
added synchronized modifier to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased the timeout duration for recoveries in the AbstractDistribZkTestBase and AbstractFullDistribZkTestBase to
add a new class ` SearchResults ` to handle search results to facilitate easier retrieval and retrieval of objects from a list of search
do n ' t refresh thread cpu view if it be n ' t in use
initialize the body if it ' s not already present in the frame .
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
changed the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new API endpoint for retrieving instance pools in InstanceResource . java to provide access to system instance pools for the current instance
refactor ` canEarlyTerminate ` logic in ` TopFieldCollector ` to handle document IDs and prefixes more effectively to improve accuracy in determining
added a check for ` isToString ( ) ` in the ` InlineBytecodeGenerator ` and new test cases in ` InlineByteBuddy
added logging statements to CxxCompileStep and CxxPreprocessStep for error handling during compilation and preprocessing processes to improve debugging and
fix stringutil . removecursor ( string , char ) when remove a non - existent character from a string
[ 3.0 ] fix metadata service export protocol not work ( # 9808 )
( chore ) camel - kie - api : add interface datatransformer for compile and transform
change the type of the values collection from a generic Object to a specific Number [ ] array in DistributionGraph . java to improve type safety and
removed the ' interesting ' condition from the ' if ' statement in the ' if ' condition in the ' if ' statement to simplify the condition
added a null assignment for SolrCore in ElectionContext . java to ensure proper handling of core initialization
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a test method for MapModel in CodeFirstPojoClient and CodeFirstPojoIntf , and implemented it in CodeFirstP
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the item listener implementation in ScaleDialog . java to streamline selection logic and improve code clarity
fix a potential npe on forge ' s itemtrvelBelt . tickBelt ( )
pdfbox - 4892 : do n ' t throw an exception if there be no appearance stream
replaced SortedSet with LinkedHashSet for storing keys in ExecuteSqlCommandStep . java to improve performance by avoiding duplicate entries
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and modified its value in CancelEventTimer . java
updated preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added a conditional check for agentSupport before setting all constructors to public and created two new test classes for mocking static methods with private constructors to
pdfbox - 4892 : avoid duplicate object , a suggest by valerybokov
pdfbox - 4892 : make sure awt . awt . x11 have a default app name
updated depth assignment logic in XRSurfaceData . java to accommodate different pixel sizes to ensure correct depth value is assigned based on the
added error response body handling to ` InvalidResponseCodeException ` in ` OkHttpDataSource . java ` to improve error reporting for unsuccessful HTTP responses
added a static method ` exit ` in ` TopLogging ` and modified calls in ` TopThreadGroup ` to use this method to improve error
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to handle cases where the regular expression is not global to ensure
planner - 468 : ignore optaplanner test due to upgrade to optaplanner 6.3 . 1 +
updated the variable used for retrieving high allocation from lowIndex to highIndex to ensure correct usage of available allocations based on the correct index
added a method to clean feed entries without feeds in DatabaseCleaner and updated FeedEntryDAO to utilize this method to improve the efficiency of
modified the return type of the ` appendToLabel ` method from void to AtomicCounter to allow the method to return the current instance of the current
[ java ] use noop idle strategy in low latency driver .
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and related tests to ensure headers are only written when not modified or not
[ hotfix ] [ test ] rename instrumentationpartialevaluationtest to instrumentationpartialevaluationtest
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area to improve
refactor ` getKrakenDepth ` method to accept an additional ` Object ` argument instead of a ` Long count ` parameter to enhance flex
added methods for retrieving file separator and absolute path in FileEndpoint , GenericFile , and RemoteFile classes to enhance file handling capabilities and improve code
added a new method ` build ` in ` JavaProvenance ` and updated the usage of ` getJavaProvenance ` in ` MavenProjectParser
added trace logging for registered Hive UDFs and non - deterministic UDFs in HiveFunctionRegistry . java and implemented a random test case in Test
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for state updates
do n ' t deliver hint for deleted cf . patch by jbellis ; review by jbellis
updated error handling in NativeErrors . java to check if the output file can be writable before executing the command to improve clarity in error reporting
added package info handling and logging for package retrieval in LauncherModel . java to improve error handling and provide clearer logging for package information retrieval
fix database upgrade bug ( db upgrade fail )
updated exception handling in ` AbstractFaultTolerantChunkOrientedTasklet ` and added a new test in ` FaultTolerant
replaced ` startsWith ( completed ) ` with ` regionMatches ( isSet ( Option . CASE _ INSENSITIVE ) , 0 , completed .
added imports for SourcesFileErrors and SourcesFileResults , and refactored data table handling in Recipe . java to improve code clarity
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar . java to ensure tasks are dismissed when
db : add dbupgradesystemvmtemplate interface for upgrade to 4.15 . 0
refactor connection handling in LdapClient by removing redundant null checks to simplify the code and improve readability by eliminating unnecessary null checks
refactor index handling logic in SequenceAction . java for clarity to improve readability and maintainability of the code
add ` ` set _ keyspace ' ' method to set the current keyspace . patch by jbellis
added a check to skip synthetic fields in ReflectUtils . java to improve handling of synthetic fields during reflection operations
added a new LoggerProvider class and integrated it into the application to enable logging functionality within the application
changed the type of the ` builder ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > ` and updated
added deprecation warning for hiding multiple glue classes in SpringFactory to improve user experience by providing a clear warning when using multiple glue classes
added a new method ` deepStart ` to ` Startables ` that accepts a list of ` Startable ` objects to facilitate
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from the ` Shape ` class and its implementation in ` ShapeImpl ` to stream
fix laser table do n ' t respect laser target . close # 1193
modified the condition for checking object names in AbstractJdbcDatabase . java to simplify the return logic to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
set the expiration messages period of policyEntry to zero to ensure that the test will consume 2 * pageSize mem before proceeding
removed unnecessary null checks and improved handler registration logic in RequestHandlers . java to enhance code clarity and prevent potential null pointer exceptions
updated the method to replace ' - ' with ' . ' characters in the servlet name retrieval to ensure consistent logging behavior by removing leading or trailing
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to ensure that the PYTHONPATH environment variable is only
updated audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to improve robustness and robustness of audio data handling
added null check for enums and returned an Optional if it is null to ensure robust handling of null values and avoid potential NullPointerExceptions
updated the error message format in CommitLogReader . java to include additional context to improve clarity of error reporting for better debugging
added a line to set the WebSocket session ' s policy using the container ' s policy to ensure that the session ' s policy reflects the
removed the check for ` hasStaticFieldsOfCurrentType ` and simplified the initialization logic in ` Java2TypeScriptTranslator . java ` to
updated the StaticHandler to use a configurable webroot argument instead of a hardcoded UI _ DIR to allow dynamic configuration of the web root directory
updated JUnit imports and annotations from ` org . junit . Test ` to ` org . junit . jupiter . api .
use netbeans ' s api instead of reflection to determine if a component be attachable
replaced calls to ` printHeaderObject ` with ` createHeader ` in multiple classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure consistent buffer handling during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView . java to avoid potential NullPointerExceptions when mOriginalForeground and mOriginal
updated comparison in FloatingDecimal . java from " less than or equal to " to " less than " and added a new ToString . java
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure compatibility with property types
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify the version retrieval process by eliminating
added conditional logic to set the HTTP origin in NettyRequestFactory to ensure the origin header is only set if it does not already exist
updated animation logic for modal tasks in RecentsView and TaskView to improve animation responsiveness based on task overlay state to enhance user
updated method calls in ORCRecordReader to include the field parameter in error messages to improve clarity of error messages and maintain consistency in field
added sample entries for " Clear HLS : Tears of Steel " and " Basic 4x3 " in DemoUtil .
removed the usage of HIBERNATE43 _ ENTITY _ MANAGER _ INTERFACE and replaced HIBERNATEATE43 _
updated logging class references in ExecRPCInvoker and WritableRpcEngine to use specific class names instead of class references to improve clarity and maintainability
avro - 206 . java : add support for - xlint : all in generated code for union type with fixed field .
websocketendpoint # createsession do n ' t try to create a session if not log in
updated delay in seconds and renamed methods for better clarity in state monitoring services to improve performance and readability of the monitoring process
replaced ` OpenSymphony Group ` mappings with ` Apache Struts ` mappings in ` XmlConfigurationProvider . java ` to ensure compatibility with
modified WebCamInputPanel to conditionally call stop ( ) based on the stream ' s stop status to ensure that the stream is stopped
changed the return type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriod
update gml example to reflect new geotools version
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in ` TargetType58 . java ` to improve performance by
hhh - 10956 - improve error message when composite identifier be not find
change findfulltextaction to downloadfulltextaction and add key binding for download
refactor URI registration handling in URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultService to improve clarity and functionality to enhance code
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added checks for non - blank OSDB hash and changed List type to ArrayList < String > for parameters to improve robustness by handling cases where
added a method to transfer tokens based on call token values in RuntimeImpl . java and implemented validation in MUtil . java to enhance contract transfer functionality
added stepwise file deletion and current directory handling in FtpOperations . java to ensure proper handling of file operations when stepwise configuration is enabled
camel - 14836 - camel - jackson - ldap : use search bind password default value instead of ldap dn
added a check for match results in MapJoinOperator and modified join logic in HybridHashTableContainer to ensure proper handling of join results and
updated ` HTTPSPDYAsyncConnectionFactory ` to accept ` AsyncEndPoint ` as a parameter and added getter methods for local address , host ,
added intent extra " id " for tweet IDs in multiple adapter classes to enable tracking and tracking of tweet IDs in the intent
replaced disconnectInternal ( ) method calls with a new disconnectWeb ( ) method to improve handling of proxy authentication to ensure proper disconnect behavior based
replaced the ` _ numChildren ` integer with an ` AtomicInteger ` for thread - safe incrementing in ` TraceContext ` to improve thread
updated various Java files to remove JWT and improve code readability to enhance maintainability and clarity of the codebase
disabled the test for ValueTypeTests by setting the enabled attribute to false to ensure that the test does not fail in the future
resolve split - packages : move everything from kie - api under org . kie . api : move class directly into kieresources
updated predicate types from IN to NOT _ IN in multiple predicate classes to ensure proper handling of not - in conditions in the predicate logic
replaced specific account exception handling with a more general Exception catch block and updated display name retrieval logic to improve error handling and ensure consistent display name
added null check for witnessService before calling validateWitnessPermission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) to ensure proper string representation of expression strings
added a check to ensure the item ' s Javadoc is not present before setting the JavaDoc to ensure that the item is only set if it
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java ` to improve clarity
replaced multiple occurrences of revalidate ( ) with revalidateWithAnimationSafety ( ) for animation safety in Tabs . java to improve
[ hotfix ] [ connector / kafka ] use registeredmetricsgroup instead of throw unsupportedoperationexception
updated Polygon . java to use a temporary variable for x and y calculations to improve code clarity and maintainability by using a temporary variable for
updated CacheConfigTest to cast the cache configuration to Configuration < Object , Object > to ensure proper type handling for cache creation
added a check for string length in InheritanceUnsafeGetResource and created a new Bug2974855 class for testing resource retrieval to ensure
refactor ShadowCookieManager to improve cookie management logic to enhance code readability and maintainability
added a new configuration option for storage - based authorization checking during dropping external tables and updated related tests to ensure compatibility with storage - based authorization
added braces to the conditional statement in Stage . java and adjusted the position calculation in ProgressBar . java to improve code readability and ensure proper position
add platformcapability . getplatformbyteorder ( ) and cache it in llvmlanguage .
updated the property name for the Windows client provider timeout from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to
updated initWebViewLogin method to accept a baseURL parameter and added web login URL handling to enhance functionality by allowing dynamic URL configuration based on server
updated the exception message in CallableStatementHandler to clarify that the JDBC Type must be specified for output parameters to improve clarity of error
added a date parameter to the ` after ` parameter in the ` AuditEventsMvcEndpoint ` class and updated tests accordingly to ensure that the `
rename ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` and update references accordingly to clarify the purpose of the
fix flaky softbodytest . testsoftbodyremoval
changed interface visibility from package - private to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow
[ zeppelinhub ] log remote websocket error instead of exception
add test to ensure that jingle do n ' t have a redundant namespace .
add a null check to the redplasma path so that the redplasma property can not be null .
added support for handling HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2Connection
updated member removal logic in plot class to check for trusted , member , and denied states to ensure correct handling of member removal based on trusted status
updated the delimiter and string concatenation parameters in SimpleReport . java to improve clarity and functionality in reporting output
removed the option to ignore symbol files in JavapTask and created a new test class T6863746 to streamline the process
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update related references to improve clarity and maintain consistency in naming conventions
added null checks for contract creation and address in the switch statement to improve error handling and provide clearer contract validation messages
g3d : do n ' t create input3d when not in applet
ignore flaky test in kinesisintegrationtests due to race condition
do n ' t throw parserexception in scripttagpayloadreader , just return false instead
changed the method signature from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName in JpaRepositoryConfigExtension . java to ensure proper implementation of the method
changed return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance flexibility
changed instance variables from ' this ' to ' IOSGLES20 ' for consistency to improve code readability and maintainability
removed the UploadPathActivity class and its associated method from ComponentsModule . java to streamline the codebase by eliminating unnecessary functionality
modify return statements in SimpleTextFieldsReader to account for indexOptions to ensure correct handling of total term frequency and sum total term frequency based on
fix : implicit constructor should not be set in parentexiter ( # 1749 )
added an additional ` Database ` parameter to multiple ` populateValidateIfNeeded ` method signatures to ensure that validation checks are only executed for Oracle databases
refactor Database class to improve code structure to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated the iterator assignment in PointInSetQuery to use the instance variable ` this . sortedPackedPoints ` to ensure proper reference to the
removed the substring function from rawName in SchematicHandler . java to streamline the code by eliminating unnecessary substring operations
added handling for specific collection classes in AbstractCollectionAssert and updated CollectionAssert _ isUnmodifiable _ Test to include new test cases to improve test coverage
changed the ` Option ` enum from static to non - static in ` ProcessExecutor . java ` to allow for multiple instances of ` Option `
replaced the old AlertDialog implementation with a new dialog implementation in Compose . java and ComposeActivity . java to improve user experience by
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` for managing file synchronization
replaced ` DatatypeConverter ` with ` Base64 ` decoding in ` ImageUtil ` and added unit tests in ` ImageUtilTest ` to
added two new files , ControllerCounter . java and DBCallback . java , and implemented a MongoDB - related interface for MongoDB operations to facil
added final modifier to the ticketId parameter in the deleteTicket method to improve code clarity and enforce immutability of the parameter
added a new file FlywayMigrationRunner . java to create a application context for flyway migration to facilitate the migration process
replaced instances of ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class `
updated the VERSION constant from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
updated the ` modify ` method signatures in ` CompressionCodec ` and ` ZlibCodec ` to accept nullable ` EnumSet ` modifiers to enhance null
added null check for mainAttrs and improved error handling in LauncherHelper , Arrrghs , and TestHelper classes to enhance robustness
rename test classes to include " Tests " for consistency to improve clarity and maintainability of test naming conventions
rename hotspotmethoddata . graal _ node _ count to hotspotvmconfig . graal _ ir _ size
pdfbox - 4892 : remove cloneable from cellcopypolicy , a suggest by valerybokov
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and called it in ` Launcher ` to
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView . java to handle landscape orientation by adjusting outRect dimensions based on the device ' s orientation to ensure proper
deleted the AddAdapter . java file to the functionality is no longer needed in the project
do n ' t run nonstaticlifter if the constructor code list be empty .
modified the constructor of ` OpTraitsRulesProcFactory ` to include a ` processSortCols ` parameter and adjusted conditional checks for column expression mappings
refactor TestLogWatcher to use a looper method for checking message registration to improve test reliability by ensuring messages are correctly registered when a
added a print statement to display " < any > " in Java2TypeScriptTranslator . java to improve code readability by providing a clear
updated SDK version from 4799589 to 4913185 in SdkConfig . java to reflect the new release requirements
added a conditional check to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to true if the environment property does not exist to
removed the ` singletonLock ` variable and its usage in ` TypeCachingBytecodeGenerator . java ` to simplify the logic by eliminating
improve documentation for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5
refactor ` writeFile ` method to include an ` append ` boolean parameter and update related calls in ` SuiteHTMLReporter ` to enhance file
updated logic in ` MavenExecutionContextView ` to check for ` mavenSettings ` and refactored ` MavenRepositoryMirror ` logic to improve
added a name parameter to several constructors and methods in BuildRuleSourcePath , PathSourcePath , and SourcePath classes to enhance flexibility in
updated the redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController and added a test for it in OAuth20CallbackAuthorizeEndpointControllerTests to
refactor annotation handling by replacing direct calls to ` values ( ) . toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with a utility method
updated method calls in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedDrawableForUser to improve clarity and
updated default value for the line separator property in GlobalConfiguration . java to provide clearer descriptions about the default line separator for output
fix a bug in configurationmanagerutils . isimplementinginterface ( ) and add test
thymeleaf / thymeleaf - rest - dsl : add input sanitization to the model
chore : update java and python dependency ( # 438 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and modified the test to verify the file
refactor CountersReader to improve code readability to enhance maintainability and facilitate future updates
refactor container type assignment in ` AllAppsRecyclerView ` and modify ` logDeepShortcutsOpen ` method to accept a ` View `
hbase - 24850 deprecate hbase . ipc . server . reservoir . initial . max and hbase . ip
fix native join test failure on window
replaced ` getGenericParameterTypes ( ) ` with ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated ` Parameter
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future development
[ latex ] fix inputbox height calculation for latex label
hbase - 26969 increase the initial size of increasingtopboundregionsplitpolicy to account for hbase . increase . policy
removed unnecessary model method calls in LauncherClings . java to streamline loading and loading process by eliminating unnecessary code
replaced the initialization of ` keys ` and ` updatesAt ` with a direct assignment of ` ISO _ OFFSET _ DATE _ TIME ` to
added a ` Set < String > excludedDatasources ` and a setter method to ` SpringDataSourceBeanPostProcessor ` to allow exclusion of specific
store undo info before delete a column in tablevaluesview
( chore ) camel - aws : fix user agent for kinesis client
refactor channel triggering logic to use a loop for processing channels based on their pressed and released states to improve code readability and maintainability by
disabled tests due to unfavorable benchmarks in LocalCacheSelectorCode and modified delayable logic in BoundedLocalCache and BoundedLocal
added a test for illegal database name handling in IoTDBSessionSimpleIT . java and improved exception handling in PartialPath . java to ensure
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly cleared after garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginOriginalPx `
refactor whitespace and formatting in CharTokenizer . java for consistency to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
fix typo in xenserver _ network _ label to xennetworklabel
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " and " 1.5 . 6
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unnecessary
replaced ` URI ` with ` Path ` for working directory and resource URL handling in ` MavenManifestFactory . java ` to improve code cl
replaced direct OS detection code with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
clear the slot list and add the elements from another frame ' s slot list to ensure the correct slot list is included in the current frame
added a new variable m _ predCount with a value of - 1 in PredicatedNodeTest . java to initialize the predCount variable to
added a method to merge configuration properties in ConfigurationSpringInitializer to ensure proper configuration handling by merging keys from the configuration instance
updated the ` setupLogging ` method to accept a more specific ` Logger ` parameter and modified the logging setup logic in ` Main . java `
replaced instances of ` HashMap ` with ` LinkedHashMap ` in multiple files to maintain insertion order in the code
added logic to retrieve ` jdbcHandlerMap ` based on the presence of ` Class ` superclass in ` TypeHandlerRegistry . java ` to ensure
added debug logging for item writers in HibernateItemWriter , JPAItemWriter , FlatFileItemWriter , and JmsItemWriter to improve
modify the way the language range is parsed by removing the trailing semicolon from the string to ensure proper parsing of range values by removing trailing semicol
replaced direct handler closure with a context execution in VertxHttp2Handler . java and updated server start method in Http2Test . java
improve xssfevaluationworkbook performance by cache xssftables
updated schema text detail type checks and simplified nullability checks in BaseSchemaTextFormatter . java to enhance clarity and maintainability of schema text
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align with the
replaced HashSet with LinkedHashSet for roots and leaves collections to ensure insertion order is maintained in the data structure
updated the handling of table scan clone operations in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before proceeding to
added a null check for the client ID before processing the registration client in DynamicRegistrationClientConfigurationService . java to avoid potential null pointer exceptions when
clear achievementlist . field _ 187981 _ e . clear ( ) instead of re - adding it .
initialize userName , productName , driverClassName , and driverVersion with empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo to ensure default values
updated the permission link from " share _ share _ read _ only " to " share _ view _ only " in the QuickSharingPermissionsBottom
added LongBuffer support and modified readLongs method in ByteBuffersDataInput and ByteBuffersIndexInput classes to improve performance and maintainability of long
updated UnixFileAttributes to use separate sec and nsec constants for file time conversion to improve code clarity and maintainability by standardizing time
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior on large object references to
added logic to conditionally hide the search bar based on user preferences to improve user experience by controlling search bar visibility based on user preferences
( chore ) camel - env : fix rout engine to work on window
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to avoid potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to manage page reloading functionality in the menu to enhance user experience by allowing users to reload
change logging level from ` info ` to ` warn ` for missing entries in SQLManager to enhance logging clarity by indicating that entries are not
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to throw an exception if the configuration type does not have a selected
use serviceloader instead of factoryregistry to load extension
added a finalize method to HiveHBaseTableInputFormat to ensure proper resource cleanup to prevent resource leaks during table closure
added a ` stopStatementExecutor ( ) ` method and logging functionality in ` JdbcConnector ` , ` HiveViewImpl ` , and ` Jdbc
updated feature settings in DocumentFactory , XMLSAXHandler , ComplexElementHandler , and ElementHandlerFactoryTest to ensure proper handling of external DT
replaced ` jdbCommand . waitForPrompt ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 )
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType `
replaced instances of ` runnable ` with ` Future < ? > entry ` for clarity to improve code readability and maintainability by using
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the correct HTTP port is used for testing
replaced ` addCaptureListener ( ChangeListener ( ) ) ` with ` addListener ( ChangeListener ( ) ) ` in ` Dialog . java
updated DEFAULT _ BATCH _ SIZE in NewSessionQueueOptions . java to use the number of available processors instead of a hardcoded value to
[ hotfix ] log error if fail to establish resource manager connection in taskexecutor
updated LambdaRewriter . java to initialize ClassFile to null and added a fallback expression if classFile is null to improve robustness by handling potential null
updated error message in IllegalArgumentException for min and max parameters to improve clarity of error reporting for better debugging
updated onMessage methods across multiple classes to include an owner parameter for improved message handling to enhance message processing capabilities by providing additional context for the message
added new interfaces and abstract classes for database operations in the com . codename1 . db package to provide a structured way to manage database operations
refactor AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories classes to improve code readability and maintain
# 113 - enh : add setbeanid ( object bean , object id ) method to ebeanserver and defaultserver .
replaced hardcoded xsl path with a method call to retrieve the added - menu - to - site descriptor in RuleSetToDocs . java
replaced the direct addition of request matchers to a list in HttpSecurity . java to improve flexibility by allowing multiple matchers for request matching
add hashCode ( ) and equals ( ) methods to ContactResource class to ensure consistent hashing and equality of ContactResource objects
move abstractprocessor . getrequest ( ) from abstractajpprocessor to abstracthttp11processor .
updated logging messages in FileManager . java for clarity and improved error handling to enhance readability and maintainability of the logging for better
added a teardown method to TestIndexSearcher and called mockControl . reset ( ) in TestJdbcDataSource to ensure proper cleanup of resources and
added import statement for LambdasWithInterfaces and removed redundant assertions in SyntaxTests . java to improve code clarity and maintainability by standard
refactor ConnectionModel and ModeledConnection classes to improve code organization to enhance maintainability and readability of the code
use fallbackparser instead of emptyparser to avoid infinite loop .
modify fmlsecuritymanager to check for the correct call class and parent class when create a security manager
removed unused variables from AccountUtils , IndexedForest , and CustomPopup classes to improve code clarity and maintainability by eliminating unnecessary
updated parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified the method signature in CoreApiMapping
added a new test method ` testJsxComment ` and refactored conditional checks in ` Parser ` and ` DumpingVisitor ` to
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for better test coverage
added a test for handling missing Buck configuration and updated exit codes to provide clearer error messages when Buck configuration is missing to improve user
added physical memory checks and a resource limit check in TestStringBufferAndBuilderGrowth . java to ensure that the test does not exceed the
updated the ` MapToLocalDateConverter ` to use the ` ConversionService ` directly instead of using ` ConversionService . SHARED ` to
added a success flag to HiveMetaStoreClient . java to indicate successful execution of the HiveMetaStoreClient
updated string comparison from ` = = ` to ` . equals ( ` ` * ' ' ) ` in ` ResourceReferenceInfo . java `
updated conditions to check for both " vine . co / v / " and " amp . twimg . com / v / " in
mark the AreaReference class as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions and reference kind handling in MemberName . java to improve code clarity and ensure correct reference kind handling
changed the default value of the SUBMIT _ KEY _ UPDATES variable from " false " to " true " and added synchronization around the run
added an else clause to the conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events in the UI
fix issue with bean not find when use static method . thanks to damian for the patch .
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the codebase
refactor exception handling in AgentRunnerTest to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
pmd : fix some typo and add a getdescription ( ) method
refactor face addition logic in ObjLoader to use a separate ArrayList for better readability and maintainability to improve code clarity and maintainability
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
rename ` reentrantLock ` to ` lock ` in ` JavassistProxyFactory ` , ` JBoss6VFS
updated ` getBomReference ` method to include ` mavenPackaging ` as a parameter in ` PrintMavenAsCycloneDxBom
updated back method to accept evt ' s component to ensure proper handling of event context
do n ' t throw an exception if ca n ' t be verify .
updated type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity to enhance type safety and
replaced instances of ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple files to ensure consistency in configuration
removed the boards pane and added a check for the selected sheet stub in StubsController to improve user experience by ensuring assembly selection only occurs
added a method ` getSessionId ( ) ` to return the ` sessionId ` to provide access to the ` RemoteWebDriver ` ' s session
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java and updated test cases in ImporterGEXF2
removed the log level option from the server port command in MockServerContainer to simplify the command configuration for better readability and maintainability
updated error logging to include exception message in the error message to improve clarity of error reporting for better debugging
patch for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 -
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests during development
fix test on window by use platform - independent path
added imports and a method for alternative path handling in ExpectNewDemo . java to enable the use of alternative file input streams for improved functionality
log4j2 - 1343 fix log tester to initialize filter correctly
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by allowing access to protection domain information
added dispose method to properly release resources in WaterRipples to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe external table operations in Hive to improve performance by preventing unnecessary optimizations and operations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that the authorization requirement is required for requesting public keys
removed the FLAG _ SHOW _ WALLPAPER from the Launcher and changed the wallpaper offset value from - 30 to 0 to
updated return values in SybaseASADatabase and modified SQL query generation in SequenceSnapshotGenerator to ensure correct handling of SybaseASADatabase
fix : putsql do n ' t commit and rollback if autocommit be set to false
added directory creation and error handling in SnapPuller . java and tests in TestReplicationHandler . java to ensure that the parent directory exists
corrected the identifier used in the AppTarget builder from " id : launcher " to " launcher : launcher " to ensure consistency in naming con
refactor framer method to accept an output buffer instead of returning a ByteBuf to improve message frameing efficiency by allowing for more flexible frame
updated constructor parameters in OAuth2LoginAuthenticationFilter and OAuth2AuthorizationRequestRedirectFilter to remove unused parameters to streamline the code by elimin
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to enhance the clarity of the map
added imports for ChronoUnit and TemporalUnit , and modified the way the current time is formatted in PlainFormatter . java to improve code clarity
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and added a timeout check for the close method to improve reliability of
hhh - 14836 - fix classloadingstrategyhelper # getprivatelookupfor to use reflection instead of reflection
refactor Mockito class to improve readability to enhance maintainability and facilitate future development
updated debug log message in HiveProtoLoggingHook . java to clarify the purpose of the log message for the new proto event file
added JUnit Ignore annotation to SamplingNamingTest . java to temporarily disable tests that require at least one sample result to improve test reliability
updated the error message from " rows and columns must be greater than zero " to " rows must be greater than zero " to clarify
[ wagoncar ] fix npe in decision node
added functionality to order BoundSheetRecords by sheet name in Excel2CSVmra . java and corresponding test cases in TestBOFRecord .
replaced averageImpulse calculations with startThrust and endThrust variables in ThrustCurveMotor . java to improve
updated InputSystemJme initialization to accept an inputManager parameter to ensure the input system is properly initialized with the provided input manager
refactor hash code field offset assignment logic in UniverseBuilder . java to improve clarity and ensure non - negative offset values to enhance code
remove deprecate ` ` getmesh ( ) ' ' method from block
[ hotfix ] [ yarn ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrun
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReaderImpl ` to handle case sensitivity based on
updated the condition for pushing view replica updates in the keyspace to ensure that the commit log is not marked as a replay when writing commit logs
removed redundant code in CaptureActivity and added a new constant KEY _ AUTO _ OPEN _ WEB in PreferencesActivity to streamline clipboard handling and improve
added a test for batching functionality in JoinedTableTest . java and updated the additionalProperties method in JoinedTableTest . java to
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
removed the deprecated ` -- format ` option and updated the ` @ CucumberOptions ` annotation to use ` plugin ` instead to streamline
removed the save ( ) method from PMS . java to streamline code by eliminating unnecessary method calls
modified the back key handling logic in ExtendedEditText . java to improve clarity and maintainability of the code
updated the implementation of the ` ensureCapacity ` method in ` AbstractStringBuilder ` and added a new class ` Capacity ` with tests to ensure proper
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to streamline note
pdfbox - 4892 : add support for endnote reference in xwpftn - docx , a suggest by valeryb
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent when publishing successful authentication events
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify GDAL version retrieval to ensure compatibility with
added a new lifecycle class for handling network errors to improve user experience by displaying network error messages when network errors occur
added logging and error handling for 404 URLs in DeviantartRipper . java to improve debugging and ensure proper handling of 404 URLs
removed unnecessary imports and simplified the loop structure in BodyTubeShapes . java and RocketFigure . java to improve code clarity and maintain
added support for scaling with AUTOMAX _ PIXELSCALE and updated texture buffer handling in PJOGL . java to improve rendering
hide offline option when there be no pub .
replaced ` PackedInts . Writer ` with ` BlockPackedWriter ` and updated related method calls in ` DiskDocValuesConsumer .
use a sortedset instead of an arraylist for route by status
removed data list and atomic increment logic from GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary data
added property setting functionality for fluent beans in ReflectionUtils and created corresponding tests in EasyRandomTest and ReflectionUtilsTest to enhance flexibility in handling fluent beans
updated the ` post ` method in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to return a ` HttpResponse ` object instead of a generic
updated test cases to use a dynamic folder name instead of a hardcoded value to improve code clarity and maintainability by reducing redundancy
updated the output statement to use ` getLastAppearedTaskId ( ) ` instead of ` mLastAppearedTaskTarget ` to improve
added new boolean properties and methods for image scaling and setting options in RtfDocumentSettings . java to enable or disable image scaling options for improved
added aggregation logic to the column construction in TSServiceImpl . java to support dynamic aggregation based on user - defined parameters
updated test classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase and added cleanup methods to improve test structure and cleanup
added logic to select and display XCap enable and server URI based on the registration status to enhance user experience by providing access to XCap server
ww - 3241 add new exception handle flag to dispatcher ( # 3241 )
added stopEditing methods to manage text editing lifecycle to improve user experience by ensuring proper execution of text changes when editing is stopped
fixed bug in controlrate when grouping _ attribute _ name be not set on a flowfile .
updated method parameters and logic in ComponentConfigDialog , RocketComponentConfig , and RocketComponentAddButtons to improve dialog handling and add a
added error handling and logging in ChatAnnotation . java to improve debugging and ensure thread safety when sending messages to the client
added a check for Windows OS in HTMLDataFlavorTest . java to print a warning if the test is only for MS Windows to ensure
added SQL _ SERVER _ SNAPSHOT constant to the SERIALIZABLE configuration in TransactionIsolationLevel . java to enhance transaction management by allowing SQL server
replaced the ` put ` method with a ` offer ` method that waits for the new record to be offered to improve performance by allowing
use java . util . zip instead of org . apache . tomcat . util . compat . jarcompat
added null checks for the command class before creating a new instance of RegisteredServiceImpl to ensure that the command class is not null before proceeding
change default disk failure policy from best _ effort to ignore and add a switch to handle the ignore case .
removed the public access modifier from several methods in RipperInterface and RipStatusHandler classes to simplify method visibility and improve code readability
update filter condition in PeerDiscoveryAgent to check if the from address is an IPv4 address to ensure that only IPv4 addresses are excluded from
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to simplify the code by eliminating unused method
added ClusterDataCache to the computePartitionAssignment method call in PinotSegmentRebalancer . java to enable caching of cluster data for partition assignment
douniaberrada : remove container that have no effect in v140
simonstewart : make defaultselenesecommand parse more robust against illegalargumentexception
added a new ` MultipleAttemptsRule ` to the ` CreateGlossaryTests ` class to enhance test reliability by allowing retries for multiple attempts
updated Schema references to use the COMPONENTS _ SCHEMAS _ REF constant instead of a hardcoded reference to improve code readability and
refactor EntityDeletedEvent to utilize JsonUtils for JSON serialization and deserialization to improve code clarity and maintainability by standardizing data handling
added a GOP support check in FormatConfiguration . java and updated imports in DLNAMediaInfo . java and LibMediaInfoParser
added a new file TestProfileReturnTypePrinting . java with methods for testing profile return types to demonstrate the printing of return types
refactor ParseConfigUtils to use ReentrantLock for thread - safe access to ensure thread safety during configuration updates to improve thread safety and
updated MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator for acquiring and releasing resultsBlock to ensure proper
simonstewart : unignoring a couple of test for now .
updated method signatures and return values in HasAndroidDeviceDetails . java to improve clarity and functionality of the ` getSystemBars ` method
do n ' t include dead bug in projectstats . getprojectstats ( ) .
bugfix # 217171 - use shadow color for disabled text in god mode
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check for empty locales in the ScheduledAction class and created a test for returning a date in the future to ensure that weekly actions
replaced the upload button ' s click listener with a menu item for enabling upload functionality to improve user interaction by enabling the upload button
refactor multiple classes related to message expression processing to improve code organization and maintainability
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an
added a custom serializer for Hadoop Writable types in CrawlDbReader to enable serialization of Hadoop Writable objects for better data handling
remove testjaspicbasicauthenticator because it do n ' t work anymore
added configurationPid to the Component annotation for the DiscoveryService to ensure proper configuration process for the MDNS discovery service
fix crash when click on empty message in chat screen .
refactor ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use a custom worker thread for better
removed assertions that verify dependencies contain blocker roles in RoleCommandOrderTest . java to improve test reliability by ensuring dependencies contain blocker roles
added a new method ` dedupWithTableInfo ( ) ` and invoked ` restoreLocalInfoFromTableInfo ( ) ` in ` PartInfo
standardized spacing in conditional statements across multiple files to improve code readability and maintain consistency across the codebase
added a transformation matrix to the sprite batch in BitmapFontTest . java and set the logo sprite to true to enhance the visual appearance of
[ hotfix ] [ table - planner - blink ] fix streamphysicalpythongroupwindowaggregaterule when python be not built -
removed the ` hasPendingEcho ` field and its associated methods from ` EndpointState ` , modified logging messages in ` Gossiper `
added a method to retrieve unreachable token owners in Gossiper . java and updated references in StorageProxy . java to improve code clarity
fix : do n ' t change to multiplication when use x ^ 2
updated content type handling in FormAuthenticator . java and added getter / setter methods in SavedRequest . java to ensure the content type is correctly
updated variable access modifiers and added null checks for display and local graphics environment in XToolkit . java to improve code clarity and ensure proper
refactor RecommenderJob and AbstractJob classes for improved clarity to enhance maintainability and readability of the code
replaced the ` metaLock ` implementation with ` ReentrantReadWriteLock ` and ` WriteLock ` for thread - safe locking to
added a test for reading identity providers using a zone token in the IdentityProviderEndpointsMockMvcTests class to ensure correct handling of identity providers in
replaced the job schedule with an ExpireJob in ObjectTypeNode . java and added null check for timestamp in PointInTimeTrigger . java
removed the import of Service from SendTicketGrantingTicketActionTests . java to streamline the code by eliminating unnecessary dependencies
send heartbeat to broker when rebalance change .
add property ` ` cairo . detached . mkdir . mode ' ' to change mkdir mode to 509
[ java ] add a slow follower test for cluster . sendmessage to slow down service .
change ` ` author ' ' to ` ` auth ' ' for year option
updated dependency handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing time dependencies to
added null check and disposal logic for OAuth services in GoogleCloudAPI and implemented dispose method in GoogleTTSService to ensure proper resource management
fix file consumer do not work if done file name contain ' { file : name } '
added a boolean flag ` reopenReaders ` to ` SolrConfig ` and updated ` SolrCore ` to conditionally reopen readers based on its value
[ freeplane ] add dialect version attribute to mapwriter
added methods ` currentDate ( ) ` and ` currentTimestamp ( ) ` to the ` Update ` class for handling current date and timestamp fields
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest .
refactor Condition class to an interface and update its usage across multiple test files to improve code readability and maintainability by using lambda expressions
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve search performance by using a boosted score instead of a
removed multiple unused imports related to Java ' s invoke classes from ConcurrentClassLoadingTest . java to streamline the code by eliminating unused
updated the ` providesUploadController ` method to include ` providesDirectNearbyUploadPreferences ` and added a new method to retrieve shared preferences for
added support for the ` sysDummy1 ` mode in the database parsing logic to enhance compatibility checks for different database modes
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add conditional bean methods in SamplerAutoConfiguration and SamplerAutoConfigurationTests to improve
added lastPid tracking and retrieval logic in POIXMLProperties . java and updated related tests in TestHPSFPropertiesExtractor . java to ensure
[ geotiff ] fix float32 negative infinity handling in tiff
refactor ` CliDriver ` to improve exception handling and session state generation to enhance reliability and maintainability of the driver execution process
replaced Executor with Scheduler for HTTP handling in MockRestAdapter to improve performance and maintainability of the code
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` for partitioning the ` ruleIdSet ` list to improve
added an ` addExitDescription ` method to ` ExitStatus ` and updated its usage in ` AbstractJob ` and ` AbstractStep ` to
added a player check to the right - click block action in the MultiblockRenderHandler to ensure proper handling of the right - click block
rename the ` cf ` variable to ` cfColumn ` in ` SliceReadCommand . java ` to improve clarity by using a more d
removed an unnecessary import statement in PlotConfiguration . java to streamline code by eliminating unnecessary imports
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView for improved input handling to enhance user experience by providing a more
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and maintain
updated assertion in AdvServiceTest to check for null message to ensure that the service message is not null before proceeding
updated key handling in MappingMongoConverter to correctly escape keys and improve key conversion logic to enhance code clarity and maintainability by simplifying key
updated Timber logging statements in NearbyMapFragment . java for consistency to improve readability and maintainability of the code
camel - 15663 : camel - core - optimize rout engine to reduce stack frame in use during rout .
refactor FuzzyLikeThisQuery to utilize MultiFields for term retrieval and add a test for non - existing fields to improve query efficiency
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for link display to improve code readability and maintainability by using a boolean
refactored identifier service in createmissingidentifiers to use identifierservicefactory instead of dspaceutils
replaced the use of ` bytes . length ` with ` bw . getLength ( ) ` in the ` assignBytes ` method calls to ensure
changed the return type of the getDisplayScript method from abstract to non - abstract to allow for subclassing of the method by providing a default implementation
replaced keyToPress and keyToRelease with a single sequence variable in RemoteWebDriver . java to improve code readability and maintainability
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added synchronization to wait for active interfaces before proceeding to ensure thread safety when waiting for network interfaces to be active
fix bug # 45538 - read nested object from hssfworkbook
removed the import of ` Shdr ` from ` ShaderNodeLoaderDelegate . java ` to streamline the code by eliminating unnecessary
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to improve clarity by using a more descriptive variable name
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font symbols
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated LiveTvGuideActivity and ProgramListAdapter to use mCurrentGuideStart for date calculations and added a method to retrieve the current start date
updated method invocation in MockGateway and added new test classes CommonParentTest , ChildA , ChildB , and Parent in MainMockTransformer to
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in the JREUtils class to
[ drools - 1340 ] do n ' t convert - 1 to - 1 for multi - variable function
loop : do not allow unary range guard for protected non - overflow loop .
move instanceof check to typeframemodelingvisitor . getinstance ( )
added a static class ` LocalizedString ` and updated methods in ` Attr ` and ` Resolve ` classes to utilize it to improve localization
added a boolean property ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` , and updated the condition in ` Default
make fields in DataLine final and use Arrays . copyOf for array assignments to improve immutability and performance of the code
updated the default number of retries in the Reference class from 0 to 2 and changed the expected value in AnnotationPropertyValuesAdapterTest from 2 to
added JSON parsing and initialization for settings in TexturePacker . java to enhance flexibility in handling settings during texture packing
refactor AchievementsFragment to use AppCompatTextView for upload images and wiki progress bar to improve code readability and maintainability
added logging calls for annotation processing and parsing in TranslatingJavacPhaseTracerTest . java to enhance test coverage for annotation processing and parsing
added a new ` CategoryInfo ` class and modified the URL in ` CategoryInterface . java ` to include ` prop = categoryinfo ` to
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error messages
updated TaskbarStashController to utilize AccessibilityManager for managing taskbar auto - hiding timeout to improve user experience by allowing dynamic
added a condition to check for the presence of a ' ^ ' character in the signature parsing logic to ensure proper handling of the ' ^ '
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases for stubbing various Java constructs in StubJarTest .
added null checks using ` Objects . requireNonNull ` in ` IntervalFilter ` and added a null check for ` i ` in ` LowpassIntervals
added tests for the ` EntrySetIteratorLastHashNext ` and ` EntrySetIteratorLastNext ` methods in ` MapInterfaceTest . java
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap class
change created time from milliseconds to seconds in ImageData . builder to ensure accurate timestamp representation for image creation
updated SINGULAR _ LIB _ GROBCOVCx to SINGULAR _ LIB _ GROBCOVs and added a
added import for EncryptionUtils and invoked deleteKeyForAccount method for private and public keys in AccountRemovalJob . java to ensure proper key management
http : / / issues . apache . org / jira / browse / amq - 4892 - fix keep - alive header value
fix nullpointerexception in postjoinmapoperation when map have no interceptor
hhh - 14973 - remove duplicate inlining processor in standarddialect
removed spillEnabled parameter from several constructors and methods in BaseHybridHashTable , BinaryHashTable , and LongHybridHashTable to
refactor EnvironmentVariableHelper to utilize Optional for handling environment variables and introduce process environment field retrieval methods to improve flexibility in accessing environment
updated import statements and improved code formatting in DefaultActionMapper . java to enhance readability and maintainability of the code
added import for SerializableMode in Mockito . java and removed an unnecessary closing brace in PluginSwitch . java to enhance mock functionality and improve code
do n ' t throw a dependency injection exception if the field be not declare a nullable
added isolation level handling in the parser and test cases for database compatibility to improve compatibility checks and ensure compatibility with different isolation levels in select statements
replaced the use of ` HiveConf . ConfVars . HIVE _ SERVER2 _ TRANSPORT _ MODE . varname ` with static final
added a method ` isCacheable ` that always returns false in ` GlobalOrdinalsWithScoreQuery ` to ensure that the query is
added a new file TestStrangeControl . java that implements a threaded test for StrangeControl to facilitate testing of Str
updated file naming from " . json " to " . jsfile " and " . jslib " in JsFile . java and JsLibrary
added selectionStart and selectionEnd variables and corresponding getter / setter methods in ShadowEditText . java to enhance the functionality of the ShadowEditText
refactor GRPC server initialization to use try - with - resources for better resource management to improve resource management and ensure proper shutdown of the gRPC server
updated the ` use ` method in ` Jooby ` and ` Router ` classes to enforce non - null path parameters and improve route
added a null check for the variable ' fst ' in FreeTextSuggester . java to ensure proper exception handling when ' fst ' is
updated file path handling in T4975569 . java and T6729471 . java to use the system ' s line separator to
added ABI writer class loading functionality and logging in JavacInMemoryStep . java to enhance functionality by allowing the use of ABI
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress the warning related to BooleanMethodIs
added a check for the ` isStopped ( ) ` state before scheduling tasks in ` PullMessageService ` to ensure proper shutdown handling and logging
refactor EnergyEndpointer class to improve code structure to enhance maintainability and readability of the code
refactor component preset retrieval and column index logic in ComponentPresetChooserDialog . java to improve handling of displayed columns and ensure correct positioning based
remove unused import from indexdatabase and bazaarrepository
fixed switch / cases indentation see http : / / code . google . com / p / mybatis / issues / detail ? id =
added a default implementation for exported header styles in CxxLibraryDescription and updated related classes to use this new method to improve flexibility in handling
deleted the files Constants . java and DistanceUtils . java to remove unused code to streamline the codebase
replaced the disk delimiter parsing logic with substring extraction from the key to simplify the key extraction process and improve readability
fix build - time initialization of fallback linker class with @ fold annotation
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and refactored the ` create ` method in
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to enhance debugging capabilities for session - related configurations
updated file name generation to use the current year from the calendar instead of a fixed value to ensure accurate file name generation based on the current year
[ hotfix ] [ test ] fix checkstyle violation in observableblockingsubscribe
added error handling for invalid options in JavapTask and created a new test class T8033711 to improve robustness of option
replaced calls to ` Collectors . toList ( ) ` with ` toList ( ) ` across multiple files to improve code readability and maintainability
[ hotfix ] [ runtime ] do not log error in taskdriver . gettask ( )
[ flink - 20632 ] [ network ] add support for tiered storage in singleinputgate
replaced the static SUCCESS _ CODE constant with a helper method ` isNotSuccessStatus ` in multiple services to improve code readability and maintainability
added configuration for GL20 usage in Cuboc . java and modified LwjglApplication initialization in CubocDesktop . java to
remove unnecessary check for method return type in JimpleBody . java to simplify code logic for better readability and maintainability
refactor OutputMacroExpander to improve command line argument handling and import statements to enhance clarity and maintainability of the code by utilizing
updated test to check for light job instead of job in cluster test
added a condition to check if the input file path does not contain " \ \ build \ " in the duplicateWords list to ensure that the
change instructorfeedbackresponsecomment and feedbacksessionresultsbundle to use responsecommentattributes instead of responseattributes
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` with a class ` A ` and its methods for testing escape behavior to ensure proper
replaced direct calls to ` stream . skip ( ) ` with ` IOUtils . read ( stream , start , length ) ` for reading bytes
added interceptor handling for connection pool initialization and improved error logging in the ConnectionPool and JdbcInterceptor classes to enhance connection management and provide clearer
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions
hbase - 15656 fix the eviction thread in the ` ` lrublockcache . getcurrentsize ( ) ' ' method
removed unnecessary check for zero task count in RecentsView . java to streamline code by eliminating unnecessary early return
added instance configuration change listener for HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve configuration handling and ensure proper
added CoinmateMetadataServiceRaw and CoinmateStatic classes and implemented a remote initialization method in CoinmateExchange to retrieve exchange metadata
improve error message when systempath reference the project . basedir
pdfbox - 4892 : do n ' t write a cosobjectkey if it be the same a cosobjectkey
add ptransform . setdisplaydata ( ) to allow customization of displaydata .
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
disable weak cryptographic algorithms in JSSE configuration to improve security by preventing sensitive certificate path issues
updated check statements in OptionData . java to ensure correct usage of subcommand commands and subcommand groups to improve error handling and provide clearer error messages
updated module - info . java files for mmm and ppp modules to ensure consistency and maintainability of module dependencies
added error handling for server connection validation and wrapped the ensureConnection method with an IOException to improve robustness by providing a more specific error message and
ensure ` sCheckingEvents ` is set to true in ` LauncherInstrumentation ` and reset ` mFinished ` in ` LogEventChecker
refactor exception handling and resource management in FileSinkOperator . java and SortedDynPartitionOptimizer . java to improve error handling and resource management during
added diagnostic output to the return statement in SchemaGenerator . java to improve debugging by displaying diagnostic information during task execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by
updated test cases in DataSourceMonitorTests . java to improve test coverage for data source monitoring functionality
added a check to prevent duplicate resource paths in ClasspathMethodScanner to improve efficiency by avoiding duplicate resource paths during scanning
updated the handling of the test instance to check for null and improved error logging to enhance robustness of the initialization process by providing clearer
added null check for the input parameter and updated response assignment logic in RoutingInBoundHandler . java to ensure proper handling of null values and improve
[ ekey ] add natip to ekey configuration and fix warning message
updated imports and refactored buffer allocation in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer classes to
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
updated HttpConnection to conditionally set the state of the parser based on header and body buffer lengths to ensure proper handling of invalid HTTP requests with
improve multitimeout handling by use deferredsetonce and deferredsetonce .
leveledmanifest : check for starved sstables before create a new compaction candidate
added a test annotation to the TestOrcTimezone1 class to ensure proper functionality of the test case
updated the conditional logic in the Debug . java file to use a new method for finding matches and improved the handling of metric and timer system
added error handling for JSON processing in PinotSegmentRestletResource and updated return statements in TraceContext and TraceContextTest to improve robustness
updated JTable rendering logic to handle null superclass cases and added a new test class Test6888156 to ensure proper handling of null superclass
added a conditional check for the existence of the shell file before adding its path to ensure the shell process uses the BUSYBOX environment if
updated the deleteWithoutSubscriptions method call to use a fixed value of 1 instead of a fixed value of 10 to ensure proper deletion of feed subscriptions
replaced List with Set for testInstances and updated imports in MockitoExtension . java and JunitJupiterTest . java to improve
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced ` deleteFilesAfterClose ( ) ` and ` fileMmapEnableIfSupported ( ) ` calls with ` transactionDisable ( )
modified iterator handling in SortedIntList and added a new iterator constructor in SortedIntListTest to improve iterator management and ensure proper initialization of the
added unregister method call in DefaultRemoteProxy and modified exception handling in JMXHelper to improve object unregistration process and enhance error handling clarity
[ hotfix ] [ test ] increase default rocksdb writebuffer size to 64mb
removed unnecessary parameters from the constructor call in Style . java to simplify the instantiation process by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure that the message is not encoded without encoding
do n ' t output a pipeline json graph in samza runner
update helloaudio to use mouseinput . button _ left instead of vector3f . zero .
[ hotfix ] fix checkstyle violation in looprotatebadnodebudget . java
added ` TypeInformation < ? > typeInformation ` parameter to ` convertToMongoType ` methods across multiple classes to improve type handling and support nested pol
[ geot - 5358 ] display complex complex complex in inputbox for linked geo
simonstewart : fix sendkeytoactiveworkelement . tostring ( ) to return ` ` [ send key to active element
added methods to create a scaled instance of an image with specified dimensions and improved error handling for negative dimensions to enhance image scaling logic and ensure
removed duplicate methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker . java ` to
added updateshiftstatenow ( ) to make sure we update the shift state when the shift state change .
removed the ` detectedActivity ` field and its associated retrieval from the location ' s extras in multiple classes to streamline the handling of activity detection
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed import of Buildable from AaptPackageResources . java to clean up the code and improve readability
added comments to various methods in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType to clarify the usage of unused
updated the exception message in WebSocketUpgradeHandler to include the status code of the upgrade protocol to provide clearer context about the status of the upgrade
updated formatting of blockMode assignment in P11Cipher . java to improve code readability and maintain consistency
refactor Mockito class to improve readability to enhance maintainability and facilitate future development
removed redundant conditional checks for plot ownership in Merge . java to streamline code logic for better readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
pdfbox - 4892 : use the new version of phonetest , a suggest by valerybokov
refactor ` stripQuotes ` method to utilize ` PlanUtils ` for string handling to improve code readability and maintainability by centralizing
refactor rendering handling in DLNAResource to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
added a list of remote artifact repositories and updated the way resolution repositories are collected in DefaultPluginManager . java to improve repository management by including additional
camel - 14850 fixed the unit test error of cxfrsproducerclientfactorycachetest
physicsclient : fix typo in physicsclient . java
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable frequent tests due to frequent failure
added a new File instance in ZipFile . java to create a File object based on the provided name to improve file handling by allowing dynamic file creation
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
fix a bug where channel . uid could not be initialize by the default constructor .
added logging functionality and a new utility class for stack trace filtering in GenericDAOImpl and ReflectionUtils to improve debugging capabilities and provide a clearer way
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
refactor unparseList calls to conditionally handle parentheses in FunDefBase and ParenthesesFunDef to improve flexibility in argument
updated SQL query to include cluster names in multiple queries and changed the handling of configs selected multiple times to improve clarity and maintainability of the
rename ` supressWarnings ` to ` suppressWarnings ` and add support for ` jdk . internal . misc . InnocuousThread
updated JsonTreeReader to throw an exception for unexpected JSON elements in the nextJsonElement method to improve error handling by providing clearer error messages
added command - line argument handling for external runner in TestCommand . java and corresponding test case in ExternalTestRunnerIntegrationTest . java to ensure
added new methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to facilitate
[ hotfix ] [ streamsql ] add support for flink planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database management during integration tests
updated progress handling in Progress . java and RSSReader . java to improve progress display based on display percentage and auto - showing state to enhance user
added a check to ensure the parent file exists before proceeding to avoid potential errors when accessing the parent directory
added methods to write and close POIDocument objects in IOUtils . java to improve resource management and ensure proper closure of output streams
updated print statements to include newline characters for runOptions , sketch name , and export classpath to improve readability and maintain consistency in output formatting
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for its properties to improve
modified the ` apply ` method in ` CustomQueryFilterFactory ` to handle generic user search queries and adjusted test cases in ` TestLdapAt
added support for default ports in the NettyHttpServer and related classes to enhance routing functionality by allowing dynamic port matching based on HTTP requests
updated SnmpTargetHandler , AbstractSnmpTargetHandlerTest , StringChannelTest , and SwitchChannelTest to ensure proper handling of thing status
added instructor permission check to submit session in section
added @ Incubating annotation and marked methods as deprecated in AvailableSettings . java to indicate that these methods are outdated and should not be used
modified FileResolverImpl . java to improve path handling and added WarFileResolverTest . java for testing jar file resolution to enhance robustness
updated log message formatting in DocumentsWriterPerThread . java to include specific documentstores to improve clarity of log output for better debugging and
test : use getunlocalizedname ( ) instead of func _ 149739 _ a ( )
swapped the values of ` stripWhitespaceX ` and ` stripWhitespaceY ` in ` ImageProcessor . java ` to ensure proper handling of
increased the number of locks in FeedRefreshUpdater from a fixed value to a dynamic value based on the number of threads to allow for
updated the parameter in TsFileSequenceReader ' s deserializeFrom method from ` false ` to ` exactSearch ` and added a test for the
pdfbox - 4892 : remove unused parameter , a suggest by valerybokov
added preferred size adjustments for the pane in NavigationShareTab . java to improve user interface responsiveness based on the displayed size of the
replaced OffsetAttribute with State in BeiderMorseFilter and added a new test for custom keywords in TestBeiderMorseFilter to
refactor Upnp - related classes to improve code organization to enhance maintainability and readability of the codebase
fix warp lens not collide at the correct block position
added tests for JSON conversion and improved import statements in JsonTest . java to enhance test coverage and ensure proper handling of dynamic test cases
renamed MutableContextDataSupplier class to improve clarity and consistency in naming conventions
updated exception handling to catch Throwable instead of Exception and added a warning log for loading LogWatcher to improve error handling and provide more informative logging
updated KubernetesMockServer constructor to use ' https ' instead of ' true ' to ensure compatibility with different server configurations
refactor foreign call node creation in DefaultJavaLoweringProvider . java to improve clarity and maintainability of the code
updated response handling in DefaultServlet to allow multiple HTTP methods to enhance compatibility with additional HTTP requests
tika - 3396 : use locale . us for geographic conversion in tiff extractor
replaced instances of ` SolrException ` with ` SolrException ` and ` SolrQueryResponse ` for handling 404 errors to improve error handling and
added try - catch functionality to the ReflectorClassWriter class to handle exceptions related to invocation target exceptions to improve error handling and ensure proper exception
added a ` clamp ` method to the ` Vector2 ` class and implemented it in the ` Vector ` class to enable bounds checking for vector
added imports for ClientDetailsEntity and OAuth2Utils , and modified access token creation logic to ensure proper handling of requested scopes and improve access token
refactor BC _ instanceof to improve code readability to enhance maintainability and facilitate future updates
replaced the setSaveFlags method with a static final logger instance in EditorBottomSheetBehavior . java to improve code readability and maintainability
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure compatibility with the
hhh - 14836 - fix nativequery scalar return type cast to ` ` basicdomaintype ' '
added caching mechanism for font - related boolean values in SunLayoutEngine . java to improve performance by reducing redundant retrieval of font - related boolean
use intarraylist instead of intbigarray for block position calculation
simonstewart : update the driver to use sessionid instead of sessionid
updated method names in BrokerRequestUtils . java to improve clarity and maintainability of the code
refactor InjectorBuilderImpl to use a map for storing instances in the correct order to improve the handling of instances in the correct order of the
updated method calls in RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use buildTarget . getBasePath ( ) instead of getAbsolutePath
modify the parsing logic in EchoMessage to handle null values to ensure default values are set when input is not provided
fix keep - alive issue when connect to jabber account .
updated the DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to correct the default load factor
added a method to retrieve all ` DataTypePhysicalVariation ` in ` VectorizationContext ` and updated related classes to utilize this method to improve
move everything from zxing - client under org . google . zxing . client . j2se , not org . google .
updated conditional logic to return RECENTS _ CLEAR _ ALL _ BUTTON when the overview actions are enabled and the shelf is removed
added JPA entity annotation to BaseActivityEventEntity . java to enable proper handling of entities within the application
added tracing functionality for various touch interactions in the NavBarSwipeInteractionHandler and TouchInteractionService classes to improve tracking and monitoring of user
added a new file ` InvalidOptions . java ` to test the behavior of the ` javap ` command line options to ensure that the command
added a check for the size of supported display in DisplayController . java to log an error when the number of supported display changes to ensure that
refactor OAuth20UsernamePasswordAuthenticator by moving the ` getClientIdAndClientSecret ` method to ` OAuth20Utils ` to improve code organization and
changed the default value of the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and
set status and infoUpdated to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut status and info updates
camel - 14850 : seda component default to use a bounded queue size of 500 rather than a fixed size of 1000
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to the App class and invoked them in the Kernel class to enable batch update
added HttpClient configuration to ThirdEyeApplication . java to enable dynamic HTTP client usage in the application
added sorting functionality to ` JobInstanceFetchRequest ` and updated ` JpaJobPersistenceImpl ` to utilize it to enhance functionality by allowing
added currency pair handling and updated order cancellation logic in CryptoFacilitiesTradeService . java to enhance order cancellation functionality by providing a corresponding currency pair
ggb - 1881 hide the keyboard when click on a click in av
use nfi ' s ` ` memcpy ' ' function for memcpy in llvmheap .
refactor code formatting in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
ggb - 2696 fix tooltip not block in desktop
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) instead of DateFormat . DEFAULT and modified GsonBuilder to handle date and time styles to improve
updated playerSet format from " < UID : " to " ( " in ListCommand . java to improve clarity of the player ' s
added a check for empty lists in List . java to return the current instance if it is empty to improve performance by avoiding unnecessary object creation
added exception handling to wrap wrapped command exceptions in ParametricCallable . java to improve error management by ensuring wrapped command exceptions are properly wrapped
modified the ` getLikeExpression ` method to accept a boolean parameter for regex expression type to enhance flexibility in handling like expressions based on the
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to enhance stream supplier functionality by
updated the ` runChild ` method in ` LuceneTestCase ` to set default locale based on available locales to ensure the correct locale is
refactor multiple database - related Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor context handler retrieval logic into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handling
camel - 16400 : camel - test - blueprint now use camel - test - blueprint instead of camel - test - blueprint . thanks
updated assertions in TestExecuteStreamCommand to check for the presence of a specific error message to ensure that the error message does not contain a specific
refactored the returnTypeSubstitutable method to use the Warner parameter for better clarity to improve code readability and maintainability by
added a throttle type enum and modified processing logic to accommodate different character types to enhance flexibility in processing throttled templates with different character encoding
simplified color assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code cl
updated annotations in mmm and ppp classes for consistency to improve code clarity and maintainability
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it instead of extending ` Object ` to
camel - 16400 : fix the test error of camel - http and camel - cxf
added a ` clearEntityManager ` feature to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing of
added null checks and improved shortcut handling in InstallShortcutReceiver , Launcher , LauncherModel , and Workspace to enhance robustness by prevent
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to ensure proper handling of dimensional collections in the processing logic
updated exchange specifications from " btc - e . nz " and " BTC - e " to " wex . nz " and " W
added null checks for columnReaders in OrcEncodedDataConsumer . java and improved null check in EncodedTreeReaderFactory . java to enhance
added null check for segment files in SegmentInfos . java and a corresponding test in TestIndexReader . java to ensure robustness by throwing a
( chore ) camel - fhir : make fhirresourcedaor4searchwithelasticsearchit to implement itestdatabuilder
refactor return statement to use a variable for percentValue and add bounds checking for negative and greater than 100 to improve code clarity and prevent
updated limit check from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 16400 : camel - routes - optimize routescollector to reduce noise in log
fix incorrect calculation of playback position in chunk .
updated test classes for NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to extend LuceneTestCase instead of TestCase to improve
[ hotfix ] [ table - planner - blink ] fix the bug of outputhandler and statefuloperatortest
removed null check for fill before setting bitmap shader shift in Area and Line classes to simplify code by eliminating unnecessary null checks
removed the dbExists method and updated related imports in Blockchain and BlockchainTest classes to streamline database existence checks and improve code clarity
trim whitespace from the result of the matcher group retrieval in SQLPlusSupport . java to improve code readability by preventing unwanted characters from the
correctly set the async flag on the apr socket so that it do n ' t block indefinitely .
fix issue with divider location in dock pane
added health check metrics and updated health check logic in PinotControllerHealth . java to improve health check accuracy and provide better monitoring for controller status
set the visibility of the shared avatars view to GONE in LocalFileListAdapter to improve user experience by hiding shared avatars
remove clientbundle annotation from mebisresources
updated condition checks from " if ( 1 > = args . length ) " to " if ( 2 < = args . length ) " in
added a log level check before executing a command in LogInterceptor . java to ensure that commands are executed only when the log level is fine
replaced CountDownLatch usage with an assertWaitUntil method in EventBusTracingTestBase . java to improve test reliability by verifying
replaced the initialization of the Locale variable with a default value and added getter and setter methods for locale to streamline locale handling and improve code
do n ' t use arraylist in entrycustomizationdialog , use linkedhashset instead
jbrules - 3952 : fix build error when use betanode constraint
added a new class ` OcspUnauthorized ` for handling unauthorized OCSP responses and modified ` PKIXRevocationChecker ` and ` OCSP
replaced a fixed sleep duration with a loop that waits for the server state to improve responsiveness and error handling when the server is already
added ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and related methods to ` SourceCounter ` , modified ` SourceCounterMBean ` , and
implement builder . fields ( list < fielddefinition > ) and make executionstrategy . execute ( ) public
refactor ` createDefaultJavaPackageFinder ` method to return ` ImmutableSet < String > ` instead of creating a new ` createDefaultJavaPackageFinder `
replaced OutputWriter with PrintWriter in ScriptExecutable . java to improve logging functionality by utilizing PrintWriter
[ hotfix ] [ test ] fix filesourcetextlinesitcase to use unique tmp - file name
added import for DataTable and integrated it into JRubyArgs to support handling of DataTable instances in the step definition
updated visibility settings for the author field and refactored API query logic in ApacheHttpClientMediaWikiApi . java to improve code clarity and
refactor ReadSentimentDataset to improve code readability to enhance maintainability and facilitate future updates
improve error message when formula parser fail to parse
added bind address getter and setter methods in WebSocketClient . java and made WebSocketFuture class private to enhance flexibility in WebSocket connection handling and improve
[ java ] delete aeron directory when close cluster medium driver in consensusmoduleharness .
replaced width and height calculations with a unified setSize method to simplify code and improve readability by reducing redundancy
updated sessionFixationAttribute comparison to use Boolean . valueOf instead of direct comparison to improve clarity and consistency in handling session fixation attributes
fix crash when start lalogic line in different digital channel mode .
danielwagnerhall : add back - off mechanism to chrome browser .
added HttpMethod and HTTPRoute attributes to ClientResponseWrapper and updated the handleReceive method to retrieve the route from the WebClient ' s request attribute to
precompactedrow : use integer . min _ value in removedeleted ( ) instead of a hardcoded value
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure correct
add ` ` check ' ' and ` ` not sure ' ' option to contribution question edit form
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] suppress findbugs warn in kafkaexactlyoncesink
added PGConnection to the Proxy instance in PooledConnectionImpl . java and implemented a test for PGConnection in BaseDataSourceTest . java to
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for token encryption secret and changed log level from warn to trace in TokenAuthenticationHandler . java to provide clear
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should no longer be used
added handling for unlimited key JCE requirements in AmbariManagementControllerImpl and refactored command reporting logic in AbstractServerAction to
added support for reading an iterable from the NamedListCodec and updated related methods to improve iterator handling and ensure proper serialization and deserialization of NamedList
fix potential npe in assigncompletelylostpartitions when migration fail
added schema inclusion rule to ApiExample . java to enable public schema functionality in the application
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test reflects the
refactor SDO ring creation to ensure valid coordinates and add new test cases for various polygon types to improve robustness and ensure valid ring creation
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base name and dimension
added a method to set debug evaluation output for next formula evaluation in HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator
test : disable test that fail due to java 8 jdk8 compatibility
updated the profile initialization in LegacyMediaManager . java and modified the condition in PlaybackController . java to ensure correct handling of live TV
added a return statement to the DynamicStyleBar class to improve code readability by avoiding unnecessary method calls
added SLF4J logging for setting and resetting properties in the Utils class to improve debugging capabilities by providing insights into the state of the
refactor ReactiveAuthorizationManager class to improve code readability to enhance maintainability and facilitate future modifications
updated condition to promote both object and boolean types to ensure compatibility with both object and boolean types
[ gr - 16934 ] fix nullify error in llvmstackframenullexception in llvm .
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
add a new test suite for the caffeine cache default to verify transaction - aware cachemanager proxy behavior
added a method ` calculateBoundingBox ` to calculate the bounding box of vertices in the ` Mesh ` class to enhance the functionality of bounding box calculations
added a target hash function option and modified hash function implementation in TargetsCommand . java to allow users to choose between sha1 and murmur
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings for ListViewMultiChartActivity , and modified highlight paint alpha based on arrow drawing in BarChart to enhance
added a new entry to the pgSgPathPlanMap in ClusterPlanRouter . java to ensure the correct mapping of the GPS path plan
[ hotfix ] [ test ] fix the test failure of infinispanremoteproducerit
added file locking mechanism and improved artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver classes to enhance reliability and ensure proper resource management
added a conditional check for GL _ ES precision in the fragment shader to ensure that the shader is only applied when GL _ ES is present
replaced ` SortedSet < Address > ` and ` SortedSet < TableName > ` with ` Set < Address > ` and ` Set < TableName >
added a try - catch block to load the JspPage class and changed log level from warn to debug if no TLD processor is configured to
updated CustomAnalyzer and TestCustomAnalyzer to utilize LowerCaseFilter for version checks and added a test for version awareness to improve compatibility and
added a test for retrieving package archive information in ShadowPackageManagerTest and updated ShadowPackageManager to check for it to ensure correct retrieval of package
replaced direct method invocations with MethodUtil . invoke across multiple files to improve access control and enhance security checks during method invocation
added import statements for project configuration and task start events in GradleBuildService . java and enhanced progress listener functionality in Main . java to
removed synchronization block in AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
simplify the logic for determining initialization fail timeout in HikariConfig . java and improve exception handling in HikariPool . java
removed the parameter ` timeOut ` from the ` getResult ( ) ` method and added an error method for HTTP requests to simplify method signature and
changed the ` isNative ` field to be transient and modified the entry addition to use ` false ` instead of ` isNative ` to ensure
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity and consistency in error reporting
rename ruleenablethandler to ruleenabletmentactionhandler for consistency
fix javadoc issue report by jasper
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of authentication process and error handling
[ hotfix ] [ kafka ] fix typo in test
added null check for the registrant repository before checking if the user is the owner to improve robustness by preventing potential null pointer exceptions
added support for font file extensions " . otf " and " . OTF " in the SunFontManager class to ensure compatibility with additional
updated type handling in AnnotationMatcher to use JavaType . Class . build for matching types to improve clarity and maintainability of type matching logic
updated the color value from " OFF " to " SEVERE " in the Grep . java file to improve clarity and accuracy of the color
modified logging statements in FaultTolerantChunkProcessor to check if debug level is enabled before logging messages to improve logging performance by avoiding unnecessary
surefire : do n ' t include test class that do n ' t exist .
added a condition to check if the default screen should be moved to the default screen when the home intent is requested to enhance user experience by allowing
updated maximum bitrate from " 110 " to " 30 " in the configuration to accommodate larger bitrate configurations
replaced the method ` getOptions ( ) ` with a direct iteration over ` optionsMap . values ( ) ` in ` CommandLineParser . java
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure consistent formatting of the description returned
updated the output filename to use a fixed name instead of a dynamic path to improve clarity and maintainability of the test output file naming
[ hotfix ] remove pid from error message in processbesunoderunner
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to loaded
replaced ` ClassUtils ` with ` Map ` and updated type casting in ` OnBeanCondition . java ` to improve type safety and clarity
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
disable lr pause button in CPUFeature and MemoryFeature classes to improve user experience by preventing unintended selection of pause button
replaced instances of ` PreferenceMultiline ` with a private ` mAccountsPrefCategory ` variable and refactored related methods to improve code
do n ' t send ` ` available ' ' notification when disconnect from the server .
initialize StringBuilder conditionally based on utf length to optimize memory allocation for improved performance
added property values to WebEndpointsAutoConfigurationIntegrationTests to disable metrics export for the WebEndpointTestApplication to improve test flexibility by preventing
refactor InterruptedException class to improve code readability to enhance maintainability and ease of future updates
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor connection logic in ConnectionCheckOperation . java to streamline SSL handling to improve code readability and maintainability by reducing redundancy
modified the conversion logic to check if the target type is a Map before verifying if the value is a String to ensure proper handling of the
test and fix for solr collection item filter
set the intent flag to REORDER _ TO _ FRONT for the AuthenticatorActivity to ensure the activity is displayed in the home screen instead of
( chore ) camel - spoon : fix compile error
changed the return type of ` beginDraggingWidget ` method from void to boolean and added a null check for the drawable before proceeding to
added an import statement for JUnit ' s Ignore annotation and annotated the TestPackedInts class to temporarily disable the test due to LUC
added a null check for the root variable and collected components from the tabbed pane to prevent potential NullPointerExceptions during processing
move confusionmatrix into testclassifier and update it in testSentence .
bug 6175 - improve thread context handling in case of exception during startup
added unit tests to ` ShadowBluetoothHeadsetTest ` and modified ` ShadowBluetoothHeadset ` to handle connection states and remove devices
corrected the spelling of " autowired " to " autowired " in the PropertyBindingSupportTest and PropertyBindingSupport to
added " clone " method to the ` objectMethods ` set and introduced a new constant ` FINALIZE _ METHOD ` to enhance object method
added null check for counters object and updated logging messages in IntegrationTestBigLinkedList . java to improve error handling and provide clearer feedback when
return not _ implemented error code when can _ get _ instance _ info be false
updated the setRegisteredServiceFilter method to include a condition for matching SamlRegisteredService instances to ensure that only registered services match the specified service
added a null check for getActivity ( ) before executing the UI thread to avoid potential NullPointerExceptions when accessing getActivity ( )
rename logger variable from ` LOGGER ` to ` logger ` across multiple classes to improve code readability and maintain consistency in naming conventions
added stringType property and its getter / setter methods to DatabaseAdaptor and modified JDBCSessionDataStore to use this new property to improve flexibility and
updated UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " and modified the test
refactor thread name handling by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
dmn - 2200 dmn evaluation do n ' t handle negative value correctly
[ macos ] disable the splash progress texture map on macos .
added a tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a clearer tooltip for the
replaced calls to ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( e ) ` in ` Enum
add text and description to the navbar ' s action ( # 2321 )
use stringtemplate instead of string . islabelsimple ( ) for spreadsheet label
changed the method used to calculate the BRIGHTNESS _ FACTOR from ` intValue ( ) ` to ` doubleValue ( ) ` to ensure
change sscmhistoryparser to parse context instead of branch when create a history entry .
updated the ` createUser ` method to include an ` isAdmin ` parameter and implemented the ` listUsers ` and ` userIsAdmin ` methods to
added return type validation for indexed and property write methods in IndexedPropertyDescriptor and PropertyDescriptor classes , and introduced a new test class for validation to ensure
updated logging statements to use parameterized messages instead of string concatenation to improve code readability and maintainability by using parameterized messages
updated method parameter names from ' runnable ' to ' task ' in Context . java and Response . java to improve clarity and consistency in method
update itemstack . setcapabilitiesfrompongebuilder ( nbttagcompound ) to be compatible with itemstack . setcapabilitiesfromfrompon
[ hotfix ] [ test ] fix flaky test lifecycleutilstest . testexecutionid
added validation for contract types in Wallet and updated contract retrieval logic in GetContractServlet and TriggerSmartContractServlet to ensure proper contract creation and retrieval
added new package - info . java files for several packages and modified module - info . java files to organize package - info . java files
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to handle node addition more efficiently to improve thread safety and performance
added a HashSet to track JavaFile files and modified parsing logic to ignore duplicate files to ensure that duplicate Java files are processed and improve test coverage
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to improve flexibility in
added a list of parameter names and modified the constructor of ` LoginServerTokenEndpointFilter ` to accept a list of parameter names to enhance flex
added support for the C _ KEY language in the LanguageFactory and updated related conditions in LanguageFactory and CPPParserTokenManager to enhance language
replaced the direct instantiation of ` MoreFutures ` with a single - thread executor using ` MoreExecutors . newSingleThreadExecutor ( )
added cache control headers in FormAuthenticator and modified response handling in ConstraintTest to ensure proper response behavior and improve test coverage for cache behavior
updated error logging to include exception message to improve debugging by providing more context about the error
updated HSSFTests class to include TestAreaReference , TestCellReference , TestRangeAddress , TestRKUtil , and TestSheet
rename FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase files to improve clarity and maintain consistency in naming conventions
added null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when the output file is null
added access controller settings for ExternalResourceControlPriority in Java2DRenderer . java to enhance resource resolution control during resource resolution
added a try - catch block to handle ArrayIndexOutOfBoundsException in the draw method of TestTriggerCoverage . java to ensure the build process does not fail
modified the HotspotThreadMBean to be final and added a CPU time test method to improve thread CPU time validation and enhance error handling
added check for empty comments before checking for whitespace in TabsAndIndentsVisitor . java to ensure that comments are only processed when they are
updated assertions in TestTriggerIntegration to expect 100.0 values instead of 5.0 and added logging for parent node and shard states to improve
updated file path and author comparisons to be case - insensitive in DatabaseChangeLog , RanChangeSet , and NotRanChangeSetFilter classes to
added a method ` getString ` to the ` ShadowBundle ` class to retrieve a string value by its key and default to improve flexibility in
updated date and time formatting logic in TweetActivity . java to accommodate locale - specific date and time formats based on settings to improve
added a check to return an empty list if there are no active connections to avoid unnecessary processing when no active connections are available
refactor keyboard focus handling in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
updated the classpath setting to include quotes around the file path to ensure proper formatting of the classpath for better readability and maintainability
make sure we do n ' t allocate a new array in the solve ( ) method
added import statement for org . springframework . integration . core . Message in GenericMessage . java to utilize Spring ' s Message class for
updated SQL queries in PostgresConnector , TaskAttempt , and MapReduceJobHistoryUpdater to use a more concise join method to improve code
updated file filter handling in AquaFileChooserUI to ensure the filter is only set when it does not already contain the selected filter to
resolve intermittent test failure in p2ptransportmanager ( # 1394 )
updated the method to return a boolean representation in ArrayPtg . java and added a test for it in TestArrayPtg . java to
updated import statements in PGtokenizerTest . java for consistency and clarity to improve code readability and maintainability by using more descriptive
refactor variable handling logic in Java2TypeScriptTranslator and add a new test for nested anonymous classes in StaticsTests to improve clarity
added support for creating a sequence for auto - increment columns in PostgreSQL to support auto - increment functionality in PostgreSQL
updated byte reading logic in DataInput . java to ensure correct handling of negative values and improve performance
removed assertions for " 0 " values for " VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " in ImageParserTest . java to
update parent reference from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` in ` Component . java ` to ensure proper
refactor import statements in multiple Java files for consistency and clarity to improve code readability and maintainability
replace engine _ finish ( ) with engine _ free ( ) and add an initialization for engine
refactor iteration event handling in InterleaveControl and related classes to improve clarity and functionality to enhance code readability and maintainability by standard
added release logic for HttpContent and fileUpload in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are deleted during recovery process
modify URL loading logic to handle " twitter : / / " URLs to launch the new activity when the URL contains " twitter : / / "
added a HeliosClient instance and a wait method for host status in DeploymentGroupTest . java to ensure the client is properly initialized before
updated logResult to enable the " listLabels " log statement in VisibilityController . java to enable the logging of label listing functionality for improved
increased the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for
removed a print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to improve code clarity
added a new ` FRACTION ` resource type and corresponding converters in ` PackageResourceLoader ` , ` Converter ` , and ` R ` classes
removed file write confirmation check in BasicFrame . java to streamline code by eliminating unnecessary checks
updated dependency resolution logic to retrieve groupId and artifactId from the tag if available to improve flexibility in handling dependency versions based on the resolution result
hbase - 20610 improve exception message when a table do not exceed the number of table in a namespace
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future development
added a check to ensure f0 is non - negative to prevent potential errors when f0 is less than 0.0
updated logging messages and added null checks for primary and foreign key columns in SchemaRetriever and TableRetriever classes to improve clarity of log messages and
move clearencoders from coyotadapter to inputbuffer to avoid memory leak .
added functionality to check if empty pages are allowed based on LawnchairPreferences to enhance user experience by preventing empty pages from being displayed
added a warning log message about the deprecation of cucumber - needle to inform users about the use of cucumber - cdi2
updated theme handling in ShadowThemeTest and added new methods in ShadowVMRuntime for object address retrieval to improve theme management and support native object registration
updated failure messages in VerifyFast . java to use Arrays . toString ( ) for better readability to improve code clarity and maintainability by
no effective change - remove db migration for mariadb
updated conditional check in CodeGenerator and added prototype property functions in Global , ScriptObject , and ScriptObject classes to ensure proper handling of property access
updated the shuffle method call in TestFilterDirectoryReader to include a random seed to ensure randomness in the collection shuffle process
updated the display name assignment logic in UsersAndGroupsSearchProvider . java to handle remote clarification based on the user ' s name to
updated path handling in CookieRetrievingCookieGenerator to ensure a non - blank path is used to avoid potential null pointer exceptions
updated closing brackets in multiple Java files for consistency to improve code readability and maintainability
updated cache name variable to use totalBackupCount instead of backupCount to ensure consistency in cache configuration validation
updated the comparison logic in ValidationResult . java to check if the page number is not equal to the current one to ensure accurate validation of page numbers
added a condition to check if the focused widget is equal to the current instance in UIDropdown . java to ensure that the focused widget is
fix checkstyle issue in util / soundutil . java ( # 2635 )
refactor ` ApplePackageDescription ` to use a new method ` getAppleCxxPlatformFlavorDomain ( ) ` instead of
added a new SQL test case to verify the functionality of the " show ololo FROM ololoed " statement to ensure correct SQL syntax for
corrected the method name from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory
refactored the EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new file ` TestGetLoggerNPE . java ` to test the behavior of ` Logger . getLogger ` with security policies to ensure
added a ConcurrentHashMap to PathSharingContext and modified its access in ActionDirectory , ScriptedProcessor , and ScriptedDecideRule to improve
[ gr - 10625 ] fix unsafe . getobject and unsafe . putobject .
added support for " NEXT VALUE FOR " in the NextValExpression class and modified related methods to support this feature to enhance flexibility in handling
add more info on unsupported resource bundle access error
updated the logic for clearing pending writes in BoundedLocalCache and added a test for pending writes in BoundedLocalCacheTest to improve cache
added Leverage _ Level parameter to QuoineExchange and introduced orderDirection field in QuoineNewMarginOrderRequest to enable Leverage
added bound initialization for property descriptors in PropertyDescriptor . java and created unit tests in Test7192955 . java to ensure proper binding of properties
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwjgl
added null check and reset logic for buttonAwatingRelease in Tabs . java to ensure proper resource management by preventing potential null pointer exceptions
update wrapWidth calculation in LineCell . java and set wrapWidth to Double . MAX _ VALUE in StyledTextAreaSkin . java
corrected a typo in an error message string in XSLTErrorResources _ it . java to ensure consistency and clarity in the error message
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper . java ` and ` CustomPre
replace string concatenation with String . format for string concatenation in multiple classes to improve code readability and maintainability by using String . format for string
replaced the use of ` getNamespaceContext ( prefix ) ` with a direct call to ` getNamespace ( prefix ) ` to simplify namespace retrieval logic
added support for nested joins in multiple test classes to enable nested joins functionality based on configuration
fix the error message when listvolumes / listvolumes command be execute on root admin only
added caching for JavacFileManager and modified CompletionTaskProcesor constructor to include cursor for class and platform class paths to improve cache
added configuration settings for METASTOREURIS and Hive authorization manager in TestMsgBusConnection . java to ensure proper management of SQL standard authorization
( chore ) camel - kudu : use hamcrest assertion instead of junit in test
add nullness check to renderer and util . createhandler ( ) .
fix ( tcp ) : fix symbolmapreaderimpl offset calculation
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and updated import paths for ` TypeConverters ` to streamline code by eliminating unnecessary dependency on ` gu
refactored ` ThreadlessExecutor ` to remove dependency on ` sharedExecutor ` and added methods for handling ` finished ` and ` waiting `
simplified error handling in DateTimeFormatter and added new test cases in TestDateTimeParsing to improve code clarity and ensure proper handling of null values
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` for consistency and clarity to improve code readability and maintainability by
added a case for WILDCARD in Types . java and created a new class T7034495 . java with generic interfaces to address potential
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
refactor conditional checks in TransclusionDecideRule . java for better readability to improve code clarity and maintainability by standardizing character
do n ' t print micronaut version in ` ` java . lang . version ' '
added assertions to verify the presence and correctness of name records in the Area3DPtg in TestBugs . java to ensure that the
updated the description handling in MindIconFactory to ensure a default description is used when the name starts with a slash to improve flexibility in
modified the onHomeIntent method to accept a boolean parameter indicating internal state to enhance functionality by allowing handling of internal state during home intent operations
updated the handling of the preferDependencyTree variable in CxxBuckConfig . java to improve clarity and maintainability of dependency tree preference
added ` showDetails ` method implementations for displaying file details across various activities to enhance user experience by allowing users to view file details based on their
removed the ` $ ` prefix from several function names in ` JSweetConfig ` and ` FinalVariables ` classes to standardize function naming con
add a randomize253state ( ) method to the minimalencoder so that it do n ' t exceed the max symbol size .
updated string formatting in SourceBuilder . java to replace newline characters with hyphen characters to improve clarity and consistency in formatting for better readability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to update the adapter after data change events
removed the method ` setDefaultWALSyncMode ` from the ` ShadowSQLiteConnection ` class to streamline the code by eliminating
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type handling and ensure correct functionality of
remove unused getters from aws - crt - asyncclient
updated test cases in ` ParserTest . java ` to reflect changes in the error message for corrupted stream limits to ensure accurate validation of the expected
add more information to the assertion error message in hazelcasttestsupport
graal compiler : catch graalinternalerror instead of bailout
ggb - 1193 fix npe when create a pen with a size of 200
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit . java and updated related references in YoBitMarketDataService .
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to improve clarity and consistency in handling O
added StreamReadConstraints configuration to StandardDataFlow to enforce maximum string length limit for JSON processing
modified the way engines are retrieved by using a default string instead of a configuration object to ensure default values are used for engine retrieval and avoid potential
renamed FullIterator to WheelIterator and updated related code for clarity to improve code readability and maintainability by using a more d
improve error message if a custom bug pattern can not be find
increased timeout duration from 3 seconds to 10 seconds in the LocalChunkProviderTest to improve test reliability by allowing more time for waiting
changed the visibility of the uncomplete check lists menu item from true to false to disable the uncomplete check lists menu item for improved user
refactor DefaultResultSetHandler to resolve discriminated result maps and introduce a new Contract class with associated tests to improve result mapping handling and
added null check for defaultHome and updated receiver unregistration logic in OverviewComponentObserver . java to ensure proper handling of null defaultHome and
removed the import and annotation for VertxGen in PumpImpl . java to streamline code generation by eliminating unnecessary dependencies
removed unnecessary type casting when accessing file operations helper in FileDetailFragment and OCFileListFragment to simplify code by eliminating unnecessary type casting
added trimming of trailing and leading spaces in ConfigAttributeEditor and implemented a corresponding test to ensure that trailing and leading spaces are removed from the
refactor auxiliary classes to improve code clarity to enhance maintainability and readability of the codebase
[ gr - 37454 ] make singlemodulereference public and introduce unnamed module classloader .
modified the case handling for " r " in DatabaseMetaData . java to distinguish between " TABLE " and " SYSTEM TABLE " based on the string
chore : deprecate tier _ enterprise _ plus _ value in favor of tier _ legacy _ value .
updated case handling for RQST in ThriftHiveMetastore . java and modified exception type in HiveMetaStore . java to improve
added a new module - info . java file for the core module to define module exports and required dependencies for better modularity and organization of the
added logic to handle flushing and intermittent fill states in SslConnection to ensure proper handling of encrypted output and prevent intermittent
log4j2 - 1343 fix npe in log4j2logdelegatefactory when no exception be present in the logger
refactor ExecutionEnvironment and TestHelper classes to introduce server VM checks and update library directory handling to improve code clarity and maintainability by
refactor MongoDB operation classes to improve code organization to enhance maintainability and readability of the codebase
replace null reference with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the latest PostgreSQL
disabled the test in TestInterProcessSemaphoreEdges . java by setting the enabled flag to false to improve test reliability by disabling failing
refactor theme key iteration to use an ArrayList and sort resource names to improve code readability and maintainability by reducing redundancy
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to include OSV flavor handling to enhance terminal
added support for additional file extensions " . gr " and " . grs " in ClassType . java to ensure compatibility with additional file types
replaced ` HashMap ` with ` TreeMap ` for ` combinedVectors ` and ` combinedVectors ` in ` DrillTestWrapper . java `
added an additional condition to the for loop to check if both names and values have elements to ensure that the loop does not exceed the expected size
refactor WebSocketPolicy class structure to improve code readability and maintainability
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` from static to instance variables and methods in ` ShadowT
add a new method to standardmessageresolver that allow to perform template - based resolution .
updated constructors in AsmUtil . java to use Class < ? extends MethodVisitor > instead of ClassVisitor to improve type safety and reduce potential
added two new audit services , LoggingAuditService and UaaAuditService , for logging user authentication and user management to enhance user experience by providing
added nullability for temperature parameters and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robust
no effective change - code cleanup : remove unnecessary check for abstract class in beandefinitioninjectprocessor
camel - 16462 : camel - http - allow to configure http proxy via system property
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of the ` jdkSerial
camel - 16400 : add more detail to log about the pool size of the camelcontext pool
replaced calls to ` forceFinishScroller ( true ) ` with ` forceFinishScroller ( ) ` in multiple classes to streamline
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to use ` ConfigUtils . applyConfigWithEnvVariables ` to enhance configuration
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` and updated error handling in ` DisallowValidator `
updated inline QSB handling in InvariantDeviceProfile . java to utilize closestProfile and added new inline QSB constants to improve flexibility
updated ` createClassPath ` method to include ` throws Exception ` and replaced URL encoding with ` URLDecoder . decode ` to improve error handling and
updated regex patterns in TransformSteps . java to match specific characters instead of integers to ensure correct matching of single quotes in method signatures
fix problem with null pointer exception in toolkit . setretinaproperty ( )
replaced hardcoded timeout values with a configurable timeout variable in FaultToleranceTest . java to improve code readability and maintainability by reducing
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added a method to set the Docker image URL in the Environments class to ensure the application uses the correct Docker image configuration
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to improve performance by reducing unnecessary method calls
updated method implementations in AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code clarity and maintainability
replaced createHardLink method with copyFile method in SnapshotTaker . java to enhance file copying functionality to ensure proper error handling and logging for
updated method names and logic in AsyncOperationDocProvider , OperationDocProvider , and SyncOperationDocProvider to replace ` appendToDescription ` with `
[ fix ] warn log if the ndarray be not in the same device .
added a condition to check if the XML is an instance of Xml . Document before visiting XML elements to ensure that XML elements are only processed
updated NotesHelperTest and ReminderHelperTest to use AndroidJUnit4 runner instead of InstrumentationTestCase to enhance test coverage and ensure
removed conditional addition of GasLimitRule and ParentGasLimitRule from CommonConfig to streamline rules by eliminating unnecessary checks for frontier
changed the visibility of the ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java ` and
changed variable and method names from " autocommit " to " runInTransaction " in ChangeSet . java and XMLChangeLogHandler . java
modified the stream handling logic in TripleServerStream . java to ensure proper closure of deframer and listener before proceeding to improve resource management
[ hotfix ] fix checkstyle violation in jobmanageroptions and restartstrategy
added a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality for
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor logging and event handling in Launchable . java to use try - with - resources for better resource management to ensure proper resource management and
refactor StreamExecDeduplicate class implementation to improve code readability and maintainability
[ hotfix ] [ kafka ] log exception when send kafka message to topic
added ` setPersistentPropertyAccessorFactory ` method to ` SimpleElasticsearchPersistentEntity ` and ` isImmutable ` method to ` SimpleElasticsearchPersistentProperty
fix for setundefined ( ) bug in segment3d and coordysys1d
added swipe handling logic for scrolling gestures in AskGestureEventsListener . java to enhance user experience by allowing users to broke the
refactor comparison logic in NGramEstimator to use a loop for comparing keys to improve efficiency by avoiding unnecessary comparisons when comparing values
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` for ScenarioScoped to
updated parameters in StatsLogCompatManager to include folder icon information to enhance clarity and accuracy of folder icon information retrieval
update server name check from getServerSlogan ( ) to getServerName ( ) in ThemeUtils . java to improve clarity and accuracy in
added a new file ` TestSkeletonPredicates . java ` with a test class to verify the behavior of nested loop predicates to ensure proper handling of
updated the ` SelectionHighlighter ` class to include a ` setHandler ` method and improved the ` equals ` method to enhance object comparison
added a new class ` StringResultConverter ` and modified ` AsmRuntime ` and ` AsmUtil ` to use it for string conversion
camel - 19751 : use @ disabled ( ` ` camel - 19751 ' ' ) instead of @ disabledifsystemproperty (
changed the condition from ` WaitForSingleObject ( console , 100 ) ! = 0 ` to ` WaitForSingleObject ( console , 100 ) =
added null checks for the buffer before setting its limit and improved formatting of the ` setInBuffer ` and ` loadMethod ` methods to
updated assertions in TestSolrDiscoveryProperties to use File . separator for data directory comparison to ensure compatibility with different file path separators for better compatibility
updated the condition to check for Windows and added platform - specific handling in AutoUpdaterServerProperties . java to ensure compatibility with Windows and macOS
updated Lock constructor to accept a String lock name instead of a File object to improve clarity and consistency in handling lock file names
updated the launcher object reference from appIcon to allApps and changed the method for retrieving visible bounds to improve clarity and maintainability of the
updated references from ` Invocable . this ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java `
updated the SQL query string in JdbcStepExecutionDao to use " order by " instead of " oreder " to improve clarity and
updated button handling in LwjglInput to return - 1 instead of using Buttons . LEFT and added a check for unknown buttons to
added authorization checks for task claims in TaskRestRepositoriesIT . java to ensure that approve and reject requests are accepted in the claimed tasks
replaced instances of ` logger ` with ` LOGGER ` in ` OpenIdServiceResponseBuilder ` , ` GoogleAccountsServiceResponseBuilder ` , and `
removed the use of ` minus ( 15 , minutes ) ` from the ` isAfter ` method in ` SsoAccessTokenProvider ` and updated
[ geos - 8488 ] skip test that fail on window
added method implementations for creating , retrieving , listing , and summing alarm suppressions in multiple test classes to ensure correct handling of alarm suppressions
rearranged conditional checks for the default close operation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to improve code readability and ensure proper resource management
replaced instances of ` metricsContext ` with ` solrMetricsContext ` for consistency to improve code clarity and maintainability by using a more
updated the logic for generating file and folder lists in OCFileListFragment . java to handle cases where filesCount and foldersCount are less than
change default value of HashKnownHosts from " yes " to " no " and change loadKeys method return type to Iterable < KeyPair > to
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` ThreadFactoryTest ` to validate the behavior of ` MyThreadFactory ` to ensure that the thread factory correctly handles
refactor lock period retrieval in DelegateResourceActuator to use dynamic properties store to improve flexibility in handling delegate lock periods based on dynamic properties
added a new instance of TicketModel in EditTicketPage . java to initialize the ticket model during the edit process
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss functionality in the predicted
updated constructors in various assertion classes to include a selfType parameter in GenericAssert to enhance type safety by ensuring the correct self type is used for
added a new menu item for quote functionality and updated related functionality in TweetActivity . java to enhance user experience by allowing users to quote twe
fix possible deadlock in jmeterthread . getinterrupt ( )
do n ' t passthrough audio sink if direct playback be disable .
added a conditional check for the result before offering failures and closing the consumer if the result is true to ensure failure handling is only triggered when
updated German and French error messages in XSLTErrorResources _ de . java and French . java to improve clarity and accuracy of
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during processing
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` RestAdapterTest `
modified the structure of the component file creation logic in ComponentPresetManager . java to improve code readability and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated assertions in TestJdbcDriver and TestJdbcDriver2
fix for ticket : 1193 -- fix for ticket : 1193 -- fix for ticket : 1193 -- do n ' t
added session validity check and exception throwing in Session . java to ensure that invalid sessions throw an IllegalStateException and improve error handling
deleted the ExceptionHelper . java file to the exception handling utility is no longer needed for the current project
fix jcex25519domain . generatekeypair to generate 256 securerandom key
added a codec configuration for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene ' s
[ hotfix ] [ runtime ] add debug log for empty header list
added asymmetric wrapper algorithm handling for RSA / ECB / OAEPPadding in OperatorHelper . java to improve algorithm parameter management and provide
rename ` DARWIN _ AARCH64 ` to ` MACOS _ AARCH64 ` across multiple Java files to ensure compatibility with the
modified exception handling in DebugSourcesResolver to include SecurityException and improved error logging to enhance error handling and provide clearer diagnostics for source resolution failures
removed unnecessary conditional check for UNIX OS in AbstractTest . java to streamline the code by eliminating unnecessary complexity
updated error handling and file management in the FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest classes to improve error logging and ensure
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory cleanup using ` ByteOrder . nativeOrder ( )
update USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable the pipeline download functionality for
updated DST _ OFFSET setting in SimpleDateFormat . java and added a new Bug7130335 . java file for time zone testing to ensure
refactor variables to use a local iconCount variable instead of accessing mRollo . mState directly to improve code readability and maintainability
server : fix npe in deletevirtualmachinewithvirtualmachinewithvirtualmachinewithvirtualm
refactor StringBuffer class implementation to improve performance and maintainability of the code
added UID assignment for rule in RuleResource . java to ensure the correct UID is used for rule processing
added null check for the listener before unsubscribing and removing it from the registry protocol to avoid potential NullPointerExceptions when the listener is not
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the way ` jsonString ` is
make accessibility of instrumentbranchesspension . access _ table public .
update error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use " No resources were found at location " instead of " Resource " to improve
simonstewart : move do run ( ) to a separate method to improve code readability and maintainability
updated multiple Java files to improve code structure and maintainability to enhance maintainability and readability of the codebase
refactor AmbariManagementControllerImpl to include effective cluster version and upgrade suspension status to enhance code clarity and maintainability by
removed the copyright header from the FindsByCssSelector . java file to streamline the code by eliminating unused copyright information
replaced the retrieval of fields from the writer to simplify the code by eliminating unnecessary variable declaration
updated OAuthProperties to set encryption and signing key sizes using CipherExecutor to enhance encryption and signing configuration for improved security
hbase - 25827 addendum use htabledescriptor . getcolumnfamilystatus ( ) instead of htabledescriptor .
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression for alias checking in ` SampleWebJspApplicationTests . java `
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info . java files to improve code organization and maintainability
added a reset method to the Cluster interface and implemented it in the ClusteredServiceAgent class to enable resetting of the idle strategy for better resource
updated the writer initialization in ChunkedWriter . java to increment the current chunk ID before creating a new writer instance
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a custom implementation for job execution in a batch - based
replaced the return statement with a break statement in the RecoveryStrategy class to improve clarity and control flow in the recovery process
rename ` hugeStaticBase ` to ` staticBase ` for clarity to improve code readability and maintainability by using a more d
do n ' t start consul client if discovery be disabled
replaced ` Float . floatToIntBits ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for setting the hashSalt to
improve error message when runtime compilation fail during bytecode parsing
updated the calculation of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure correct aggregation of time bucket values
added abstract method handling and corresponding tests in ` CallsRealMethods . java ` and ` CreatingMocksWithConstructorTest . java ` to enhance
refactor checkPackageAccess method to accept Class objects instead of String names to improve type safety and clarity in package access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration assertions to enhance testing capabilities for context path plugin
replaced instances of ` dtm ` with ` model ` for consistency and clarity to improve code readability and maintainability by using a more
added handling for the REQUEST _ HAS _ TIS case in QuickstepTestInformationHandler and TestInformationHandler , and updated LauncherInstrumentation
removed unnecessary try - catch block in ConnectAction . java to improve code readability and maintainability
refactor ` showRulesResult ` and related methods to use ` BuildTarget ` instead of ` String ` to improve type safety and clarity
[ jemul ] fix ` ` no functional change ' ' warning in javaemul
added handling for the HOME and END commands and implemented line movement logic in the Less . java file to improve user experience by allowing home and end
removed synchronization block when iterating over connected plots to simplify the code by eliminating unnecessary synchronization
replaced the intent creation and sharing logic for launching activities with a chooser to improve user experience by providing a chooser instead of sharing
removed the public modifier from the Roster constructor to allow external access to the Roster class
added basicConstraints extension to certGen in TestUtils . java to enhance security by ensuring basic constraints are correctly encoded
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address issue with wrong transform offsets in the
replaced multiple instances of checking for ` field . multiValued ( ) ` with a single assignment of ` precisionStep ` in ` TrieDate
removed the TaskbarStateHandler class and its associated logic from BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new class ` ArrayLength ` to test the behavior of ` getField ` and ` getDeclaredFields ` for array types to ensure that ` getField
wait for the hazelcast process to be destroy before shut down the test
refactor ApplicationSettingsService to use @ ApplicationScoped instead of @ Singleton and simplify the save method to improve code clarity and maintainability by
updated assertions and adjusted newValue logic in Safepoint . java to correct value validation logic for negative values
updated the thread name field type in OopUtilities . java from charArrayToString to stringOopToString to ensure compatibility with Java ' s
updated the DEFAULT _ RAND _ SEED constant in Lucene90HnswGraphBuilder and HnswGraphBuilder to a fixed
add strokeobject and fontobject to pgraphicsjava2d so that font can be use
[ calcite - 3241 ] sqltorelconverter throw classcastexception when use window and by clause with dynamic star
added a new method ` findInterestingChildren ` to initialize the ` _ header ` and ` _ children ` of ` Comment2000 ` to
added import for Messages and set a status warning icon in HTTPServer . java to improve user experience by providing a clearer warning message
use modifierex ( ) instead of modifier ( ) , remove unused method
chore ( griffin ) : fix node cycle for amd64countleadingZeros and amd64counttrailingZeros
added null check for contentTypeStr and refactored content transfer encoding variable declaration in EntityParser . java ; added a new test in AS2
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a clearLogButton to the ErrorConsoleController and implemented clearLog methods in ErrorConsoleViewModel to enhance error logging functionality by allowing users
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated methods and imports across multiple classes to replace ` Map ` with ` Set ` and ` LocaleHolder ` for improved locale handling to enhance
added connection pooling functionality to multiple test classes and modified import statements in AbstractTest to enhance test reliability and improve resource management by ensuring proper
[ java ] add opera blink support to the list of session for opera
improve error message when file download fails
added multiple Lifx product entries to the LifxProduct . java file and updated the LifxProduct . java file to include new product entries
added asynchronous handling for replica creation in OverseerCollectionProcessor and CollectionsAPIAsyncDistributedZkTest to improve replica management by allowing asynchronous
removed private access modifier from several constants and methods in PostgresDatabase and PostgresDatabaseTest classes to improve code clarity and maintainability by
updated LogPanel and SummaryPage to use the repository ' s HEAD reference instead of a null reference for objectId to ensure the correct reference is used
update skeletonInterBoneWire ' s model space unit from UNIT _ Y to UNIT _ XYZ to ensure proper transformation of bone lengths in the
added a ` browserDestroy ` method to ` AndroidImplementation ` and modified the ` deinitialize ` method to improve the handling of browser destr
added a call to waitForActiveCollection with a specific timeout of 6 to ensure the test runs on the active collection to improve test reliability by
refactor the loop structure in ScreenTerminal . java and remove unused imports in Tmux . java to improve code readability and maintainability
updated the return condition in SoftResetAction . java to include additional controller states to improve state checking for soft reset functionality
[ forgehooks ] disable on - disc stream cache for texture pack reloading
added a condition to retrieve the DLNA resource in Request and RequestV2 classes to ensure correct retrieval of DLNA resources for media
fix typo find by codespell on fossies . org
replaced direct file output stream deletion with a custom close method to ensure proper resource management and prevent potential memory leaks
added handling for 403 responses in the StandardGitHubRepository class to improve error reporting for 403 responses in the API
log4j2 - 1343 add original method to messagefactory2adapter and use it in test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings
update regex pattern in Version . java from " 1.9 ] { 1 , 2 } " to " 1.9 ] { 1 ,
added initial and dismiss delays for ToolTipManager in ExtractionModelFrame . java to improve user experience by allowing tooltip tooltip to be dismiss
refactor ProjectCommand to utilize a single ` passedInTargetsSet ` variable for target graph creation to improve code clarity and maintainability
added timezone setting and a test for formatting 2445 seconds in TimeTest . java to ensure correct formatting of time values in UTC
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future updates
[ java ] use endpoint . gethandler ( ) . getsslengine ( ) . getsslengine ( ) . getsslen
updated the display of the accuracy value in GpsLoggingService to ensure accurate accuracy information is displayed for improved user experience
added a check for futures enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to utilize this new method to
modify admin account management to use course and instructor table instead of account
added a line to set the accept queue size in the ThriftHttpCLIService to allow dynamic configuration of the queue size based on the maximum worker
replaced direct calls to getClass ( ) . getName ( ) with a constant PROPERTY _ DISABLE _ WATCHER in PathWatcherService .
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for amq - 5
replaced ` parseError ( e ) ` with ` validationError ( e ) ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration variable in GCInspector . java to ensure that the duration may be zero for a really fast collection to improve accuracy
replaced ` flatMap ` with ` map ` for filtering and mapping Javadoc comments in ` NodeWithJavadoc . java ` to improve code readability
refactor memory reserve handling by replacing unsafe access with a native method readReservedMemory to improve code clarity and functionality on macOS
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that the
hbase - 25827 hbaseadmin # waitforoperation should not include procid in tostring ( )
camel - 16400 : camel - cxf - fix the build error of camel - cxf
refactor YamlChangeLogSerializer to use a list of maps and a map for storing databaseChangeLog to improve clarity and maintainability of
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` for formatting output in ` SchemaPrinter . java ` to
remove regeneration of all road in debug road and improve schematic handling in schematic handler
updated instances of HomeFragmentNowPlayingRow and HomeFragmentFooterRow to use getActivity ( ) instead of getContext ( ) to ensure compatibility with
added a new ` @ GeneratedValue ` annotation and imported ` GenericGenerator ` in multiple classes to enable the use of the ` native ` strategy
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method signature and improve code clarity
added position and remaining parameters to the output stream write method in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec
move log init logic from appw , appframe , and web application to appwapplication
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified the creation logic in Value . java to use this constant to improve code
fix group equality check to use equal ( ) instead of = = ( )
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class implementation to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and replaced instances of ` newInstance ` with ` newInstanceExact ` in `
fix typo find by codespell on fossies . org
fix issue with mod metadata not be able to save artifact version
refactor the handling of elements in the NativeArray by introducing a boolean flag for the presence of a previous element in the array to improve
updated file handling in FileUploader to use the parent file ' s ID instead of saving it directly to improve file management by ensuring the parent file
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure proper parsing of supplementary characters in
added unit test base on user forum issue
updated depth assertions in BinanceIntegration and BinanceUsIntegration to include a new depth20 reference to ensure accurate representation of depth information for better
added a ` resetAllocation ( ) ` method to ` Wrapper ` and called it in ` SimpleParallelizer ` to reset initial and maximum allocation
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to System . getProperties ( ) with synchronized blocks for thread safety in Agent . java and added a new AgentCMETest
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert . java for improved code clarity to enhance maintainability and readability of the code
modified width and height calculations in Legend . java to include checks for index values to ensure proper space adjustment based on label lengths and prevent potential
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , and
replaced the use of ` get ( ) ` with ` getValues ( ) ` for array handling in ` MoreLikeThis . java ` to
replaced the usage of ` CxxLink ` with ` new BuildTargetSourcePath ` in ` Omnibus . java ` to
add an option to disable versioning for the command .
changed ` filePaths ` from a ` Collection ` to a ` List ` and added ` numberOfFiles ` field in ` MediaFolder ` to
removed the command - line argument " - b " from the AidlStep and GenAidlTest classes to simplify command - line
do n ' t delete obl for an edge that do n ' t exist in the database
added a TODO comment to the FakeHttpLayer class to clarify the purpose of the test for future development
replaced error handling with revokeing leaders in EmbeddedLeaderService . java to ensure leadership is released when the error occurs
refactor CompositeDiscoveryClient to use Single ' s flatMap instead of Stream for merging instances to improve code readability and performance by reducing redundant
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ table - planner - blink ] clarify jobmanageroptions ' job compute recovers from task failure
updated method names and visibility handling for widgets and search results in WidgetsFullSheet . java to improve clarity and maintainability of widget display
check for woodstox class before use it in the woodstox parser
refactor test setup in AuditAliasCommandIntegrationTest to use a dedicated setup method to improve code readability and maintainability by centralizing setup
removed logging statements related to header view height in WidgetsFullSheet . java and recommended widgets section height in WidgetsRecommendationTableLayout .
( chore ) camel - cxf : disable failing test
added error handling around the update ( ) method call in CachedStore . java to improve robustness by logging exceptions during periodical refresh
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to utilize a new method for adding providers to improve code clarity and
added a method to check default backgroundFills and updated color handling in HSSFCellStyle , HSSFFont , and HSSF
rename ZonedDateTimeFormatterBenchmark . java file to improve clarity and consistency in naming conventions
refactor DistributedUpdateProcessor to utilize a new method ` shouldBufferUpdate ` for better readability and maintainability to improve code clarity
added a condition to check if the rocket ' s stage is null in SimulationListHandler . java to ensure that a valid motor is
update / editreplace and / editscript command description for clarity to improve code readability and maintainability
refactor ExtendedMasterSecretExtension for improved clarity to enhance maintainability and readability of the code
changed the declaration of the ' processor ' variable to be final in AndroidInput . java to ensure immutability of the ' processor ' variable
added error handling for reached end of stream in WritableKeyProcessor to ensure proper error reporting when encountering end of stream during processing
added " CUBE " to MySQLDatabase . java to support the CUBE database feature
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the deletion process
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related method names
replaced reflection - based field retrieval with direct calls to the HttpClient ' s methods in DefaultOkHttpClientFactoryTest to improve code readability and
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions when processing input
ggb - 1889 fix npe in av view when there be no av view
modified the ` jailerMain ` method to include a ` fromCli ` parameter and updated the error message accordingly to ensure the error is
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added preference for pull unread status in TalonPullNotificationService to enable dynamic updates to the pull unread status
added a check for the kind of the parent object in the IsNullNode . java file to ensure that the parent object is a valid kind before
updated Box2DTest , Pong , OrthographicCamera , and OrthographicCamera classes to improve performance and memory tracking to enhance
refactor layout manager initialization for mCommentsRecyclerView in ViewPostDetailFragment . java to improve readability and maintainability of the code
changed log level from trace to warn for background operation aborted message to improve log clarity by providing a more specific warning for aborted operations
do n ' t try to generate an instance of an interface when the method be not abstract .
ggb - 1343 do n ' t call invokelater on touch down in ie10 +
updated ` getNotificationUsers ` method to include ` deviceId ` parameter and modified user retrieval logic in ` CacheManager ` to enhance functionality by allowing
update baseUrl in CGIARProvider . java to use SRTM _ ZIP and SRTM _ V41 / SRTM _
removed unused listeners and set bottomPanel to null in MotifFileChooserUI . java and added a new class bug6520101 .
change hollowuirouter . handle ( ) to return false instead of void .
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to return ` Optional < T > ` and improve error handling to enhance
set the visibility of the transportSpinner based on the makingShortcut condition to improve user interface responsiveness by hiding the spinner when shortcuts are
added null check for attributes _ field and created new classes with annotations in T7043371 . java and T7073477 .
refactor backPressed ( ) method calls to return boolean values for better readability across multiple fragments to enhance code clarity and maintainability by
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and its usage in QueryServices and MetaDataClient classes to enable or disable long view index
changed the string append format from " V " to " v " to ensure consistent formatting of the output
updated private key path handling in PrivateKeyParserTests to use StringUtils ' s cleanPath method to improve path validation by removing leading and trailing spaces
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter and IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
hbase - 25836 add option to disable column family check in importtsv ( krisztian kasa , review by
[ java ] change logrecordingchannel to logsubscriptionid to avoid npe .
replaced direct calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startApplicationDetailsActivity " )
added a condition to return early if the value of the first element of the JSON node is " i " to ensure that processing only occurs when
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
updated resource bundle loading to include default locale and system class loader to enhance localization support for better resource management
[ j2kt ] do n ' t rewrite null array literal in kotlin backend .
updated PerSegmentSingleValuedFaceting . java to improve handling of term counts based on mincount and missing counts to ensure accurate incrementing of
fix modmetadata . getauthorlist ( ) return null instead of optional .
added static jdk . unsupported requirement in module - info . java and created OSGiTest . java for testing to ensure proper handling of
refactor service enablement check into a separate method for clarity to improve code readability and maintainability by reducing redundancy
hbase - 25827 remove the need for clearbufferonfail in htable . waitforallpreviousopsandreset ( ) (
test ( refactor ) : add a test case for annotation apply on any element in a class
simplefeatureimpl : add hasuserdata ( ) method to check if there be a user - data
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify exception handling by elimin
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to ensure all logger handlers are enabled for the main class
added a new class ` InJavaSourceSet ` for processing Java source sets and updated imports in ` UsesJavaVersion . java ` to enhance
updated the resource loading mechanism in TestGDALParser . java to use a specific FIT file path to ensure proper handling of external FIT
added a static method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a convenient way to
removed the condition checking for external storage in the DirectUpload class to simplify the code by eliminating unnecessary preferences
added a new constant ` INDEXER _ NO _ COMMIT ` and modified commit handling in ` IndexerMapReduce ` , ` Indexer
createvolume : do n ' t allow disk offering id to be null when create volume from snapshot
updated assertions in ` BaseTestCellComment . java ` to check for non - empty notes instead of empyy notes to improve clarity
added checks for ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling of ` Period
added a new file ` Issue382 . java ` to handle specific error types in the server to provide clearer error reporting for specific HTTP
replaced the custom signum method with a static import for Integer . signum and simplified the return statement to improve code readability and maintainability by
set the visibility of the holder text to GONE based on a condition to ensure the text is not displayed when a specific condition is met
fix ( import ) : fix npe in case of no method or reference ( # 1358 )
simplified the method reference for retrieving the profile in XpiDriverService to improve code readability and maintainability by using a lambda expression
make liquidblock implement bucketpickup , close # 54688
fix intermittent test failure on ci server
changed the time zone setting from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure
rename ` existingObservation ` to ` distinctObservation ` and adjust related logic in ` DistinctErrorLog . java ` to improve cl
updated TEST _ NIGHTLY , TEST _ WEEKLY , TEST _ AWAITSFIX , and TEST _ BADAPPLES to utilize
modified the method name from ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and adjusted logger initialization logic to improve clarity and
graalcontext : deny access to method and proxy in graalcontext . getcontext ( )
implement image2d . getpixels ( x , y , c , d ) and getpixels ( x , y , 0 , ... )
updated the method call in HiveAbstractReader to use the partition ' s SD instead of the table ' s SD to ensure that transactional properties are
refactor overlay scrolling logic in Workspace . java to improve clarity and functionality to ensure proper handling of last overlay scroll state based on RTL
hhh - 14836 - add a new implementation for unmodifiable batch builder in the hibernate engine
replaced instances of ` shouldNotReachHere ( ) ` with ` shouldNotReachHereUnexpectedInput ( ) ` and updated exception messages to
added a new test class ` MockWithStaticStateDemo ` and modified ` PartialMockingRetainsStateTest ` to verify state behavior to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing and deparsing works
added null check and exception handling in SecurityUtil for action execution to ensure safe execution of actions when ugi is not initialized
replaced direct call to alGetError ( ) with a variable errorCode variable in OpenALMusic . java to improve error handling by providing
rename endpointhelper . reslovestringparameter to resolveparameter and mark it a deprecate .
updated the calculation of ` calciteLiteral ` based on precision and scale in ` RexNodeConverter . java ` to ensure correct handling of
replaced direct retrieval of vendor and device properties with Optional handling in WebAuthnMultifactorDeviceProviderAction . java to improve null safety
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of a string to ensure accurate representation of the current time
replaced ` AxialStage ` with ` RocketComponent ` and updated selection logic in ` BasicFrame ` and ` DesignPanel ` to
added getter and setter for longRunningTime and configured its value based on configuration to improve flexibility in handling long running time configuration
updated priority adjustments in ` FindRefComparison . java ` and created a new class ` Ideas _ 2012 _ 05 _ 21 . java
updated import statements and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to improve code clarity and consistency to enhance
replace decimal . tostring ( ) with decimal . toplainstring ( ) in xsdecimalbinding and add test feature to gml3encodingtest
refactor assertions in TestRestClientRequestImpl to use assertEquals for improved readability to enhance code clarity and maintainability by reducing
added a condition to check if the database already exists in the MissingUniqueConstraintChangeGenerator . java file to ensure that unique constraints are only validated
refactor ` addAndroidConstants ` method to return early and streamline proguard configuration handling to improve code readability and maintainability by redu
replaced direct calls to ` assertEquals ` with awaitments in ` DuplicateCookieTest . java ` and ` SessionRenewTest . java `
added user _ args and is _ daemon attributes to the builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance debugging capabilities by
make native library thread - safe by synchronize list .
updated log message from " match limit " to " match order " in HepPlanner . java to improve clarity of log output for
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of exchange metadata to provide a demo for
added ` strictfp ` modifier to ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes and implemented a test for strictness in
removed the unparseIdentifier call from the append method for column names to simplify the code by directly appending the column name directly
added a new test method ` replaceField ` to the ` JavaTemplateContextFreeTest ` class and modified the ` BlockStatementTemplateGenerator `
added a condition to check if the method is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify path handling
added handling for pending rescue and pending conditions in IkStepDefinition . java to manage and register pending rescue to improve error management and ensure proper
changed ` equals ` and ` hashCode ` methods from final to non - final in ` AbstractType ` , ` BigintType ` , `
added a method to retrieve the SyncLevel ' s default value and modified the enum declaration to improve code clarity and ensure a default value is
make controlcommandtest more resilient to slow machine
added a condition to check if the slice state is not recovery in addition to the CONSTRUCTION state to ensure that recovery operations are only performed
fix compilation error in ` opencv _ core . java `
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and updated process executor parameters to utilize the
refactor TransientBlobCleanupTask to use a cleanup callback instead of a lock - based lock to simplify cleanup process by using a dedicated cleanup callback
bug 11015 : fix the error message for static nat rule creation
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code clarity and maintainability
added row type conversion in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of column types in query
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
fix servletcontext lookup in embeddedvelocitytoolboxview by use the class loader
replaced hardcoded version string with a method to retrieve nightly build information to improve code readability and maintainability by centralizing version
added support for removing trailing / ' s from SQL statements in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing / ' s in Oracle
add findbugs . nullderef . assumensp to prevent nullpointerexception
update jolokia test to use port 12345 instead of hard cod port 8080
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values , and refactored time
added a new multifactor authentication bypass configuration to the DuoSecurityMultifactorProviderBypassConfiguration class to enhance security by allowing
updated method signatures for findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint to improve code readability and maintain consistency
[ drools - 6252 ] fix checkstyle violation in drools - core
added methods to set and get a help page in PMS . java and refactored help page handling in HelpTab . java to improve
added GeocodeProviderFactory and Constants interface files in the project to facilitate the creation of GeocodeProviderFactory and Constants classes for
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
refactor test cases to use try - catch blocks instead of expectedexceptions to improve code readability and maintainability by reducing
do n ' t try to delete object from the gateway if the object be already delete .
modified conditions in ` SegmentsInfoRequestHandler . java ` and refactored SolrInputDocument creation in ` CollectionsAPISolrJTest . java
updated the calculation of numPredictiveAppCols to account for phone devices to ensure numPredictiveAppCols is always at least 4 for phone
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related code in ` DrillJoinRel
added blockbuildcraft to handle item that can be remove from the client side .
updated layout parameters for layout parameters in DeviceProfile . java to ensure proper positioning of the drag target bar to improve layout responsiveness and
changed the method call from ` . run ( ) ` to ` . start ( ) ` in ` YahooSession . java ` to
hive - 15836 : hive metastore client should not use standalone client to shutdown local metastore client ( s
update getDisplayScript method to accept a DISPLAY category parameter and add a test for bug 7079486 to ensure that the default display script is
updated references to ` BASE _ URL _ PROP ` and ` CORE _ NAME _ PROP ` to use ` ZkStateReader . CO
replaced ThreadLocalRandom with a custom Random instance for random number generation to improve code readability and maintainability by using a dedicated random instance
added a condition to check if the launcher is ready before attempting to backup backup files to ensure that backup operations only occur when the launcher is ready
updated exception messages in ` Cell . java ` to include the value of ` space ` , ` top ` , ` bottom ` , and `
added unit test base on user forum issue
rename methods and variables related to body space to bar space in multiple chart renderer classes to improve clarity and consistency in naming conventions related to
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated test case to use TemporaryFolder for file creation and assertions to improve test reliability and accuracy of file message history validation
added debug logging statements to various Logger classes in Grasscutter . java to enhance debugging capabilities for various logging scenarios
changed the ` highlightCnstScrRngQuery ` variable and its methods to static and modified the ` setHighlightCnstScr
added a new method ` getState ( ) ` in ` Workspace ` and modified the condition in ` Launcher . java ` to ensure proper state
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for cacheable before notifying new templates in SnippetTemplate . java to ensure that new templates are only processed when caching is enabled
added SCOPE _ SOLR _ CORE constant and modified data import handling to utilize coreScopeSession for session management to improve scope management and
added a primary key column to the TABLE definition for the measurement table in DatabaseMetaDataTest . java to ensure that the table correctly identifies the primary
change the cli flag ` -- permissions - config - path ` to ` -- permissions - config - file ` in the pantheoncommand
simplified session creation logic in HttpSessionContextIntegrationFilter . java to enhance clarity and maintainability of session handling logic
added a new file TestIfWithDeadRegion . java to demonstrate the use of a dead region in string manipulation to ensure that
fix typo : english _ ud - > english _ usd
replaced ` testConcurrentAccess ( ) ` with ` HighResolutionTimer . enable ( ) ` and ` testConcurrentAccess ( ) ` in
added a static UI setting to control the visibility of the toast bar based on user preferences to enhance user experience by allowing the toast bar to be
refactor the ` drop ` method in ` WindowsSecurity ` to use a lambda expression instead of an anonymous class to improve code readability and
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and modified client ID handling in ` WhitelistLogout
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to include localized error messages to enhance user experience by providing clearer
tika - 3481 -- add mime detection for ooxml and spreadsheetml file
added logging functionality and improved feature path handling in the Runner and FeaturePathFeatureSupplier classes to enhance debugging capabilities and maintainability of the code
camel - 15663 : camel - eip - generate spring - boot tooling metadata to generate spring - boot tooling metadata for the
do n ' t wait for migration to complete when delete a migration endpoint . patch by jbellis ; review by jbellis
added debug logging for audio notification and playback devices in DeviceConfiguration and PortAudioAuto classes to improve visibility into audio playback device handling and enhance debugging
added WebSocketConfig with getter and setter methods to ShenyuConfig and updated WebSocketPluginConfiguration and WebSocketPluginConfiguration to utilize this configuration
fix ` ` cachevalidationlistener ' ' to work with testng 1.7 . 0
updated the handling of the content length in MoreIndexingFilter to ensure that the content length is only added if it is not empty to avoid potential
change synchronization to a private method ` solvingTerminated ( ) ` to improve code readability and maintainability
refactor createTimeseries method to handle PathAlreadyExistException to improve error handling during concurrent inserting of time series
added a check method to the Authz class to provide access to the result of the authentication process
changed access modifier of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
bug 10701 : do n ' t allow to delete reserve ip address when it ' s in reserve state
modified HttpParser to set ` _ valueString ` to an empty string instead of null based on compliance level to ensure ` _ valueString ` is set
refactor thread completion handling in J9VMInternals . java and remove redundant completeInitialization method in Thread . java to improve code clarity
added a method to get and set the external storage public directory in ShadowEnvironment and created corresponding test cases in EnvironmentTest to enhance functionality and ensure
[ jbrules - 3248 ] add test case to demonstrate mvel type coercion
updated log file path handling and improved formatting in LoggingConfig . java and DbgPacker . java to enhance code readability and maintain
added exception message to log message in ActionNode . java to improve error reporting by providing more context about the exception
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5441 ,
refactor visibility logic for shared files in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and removed its usage in TestTxnCommands3 . java to
refactor ExecuteStatementOperation and Operation classes to use a confOverlay variable instead of hardcoded values to improve code readability and maintainability by
replaced usage of ` Lists . newArrayList ( ) ` and ` Sets . newArrayList ( ) ` with ` Arrays . asList ( ) ` and
updated assertion in OGRDataStoreTest to compare type names instead of names to ensure consistency in type comparison logic
removed the ` onErrorInStep ` method returning ` null ` in ` StepListenerSupport . java ` to simplify the code by eliminating
refactor Wallet class to improve code structure to enhance maintainability and readability of the code
camel - 16400 : camel - netty - http - fix the issue that camel - defaultnetty - http do n ' t
replaced ` System . out . println ` statements with logging functionality in ` TestNonBlockingAPI . java ` to improve logging clarity and
added a check to return false if the row index is out of bounds in the connection list to prevent potential index out - of - bounds exceptions
added a new rule to report a violation when a method have the same name as the enclosing class .
added ExtendedPlatformComponent class and integrated it into ManagementFactory for managing MBeans to improve management management by ensuring only registered MBeans are added to
replace double quotes in SQL statements with single quotes to ensure proper SQL formatting for better compatibility
updated parse calls to include the " org / knowm / xchange / bleutrade / dto / " prefix in multiple test files to
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the FilteredQuery construction in AbstractSpatialFieldType . java and updated tests in TestSolr4Spatial . java to enhance
removed progress bar display logic for main form visibility in GpsLoggingService . java to streamline the process of sending results to improve user experience
replaced ` ArrayList ` with ` HashSet ` for ` inlinks ` and updated related methods to use ` Iterator ` for better performance to improve
added synchronization to the stopScan method and updated the removal of older results to ensure thread safety when stopping the service
modified the ` testFilterForPartition ` method to accept a boolean parameter for blocking mode to ensure that the test does not fail with blocking mode
added " Closed " status and " Abandoned " status to the workflow lists in TicketModel . java and updated the TicketsPage . java
removed the default value of ` columnAliasPrefix ` and its assignment from multiple platform classes to streamline the code by eliminating unnecessary field
updated LlapRowRecordReader and related classes to use BytesWritable instead of Text for data handling to improve data handling by using BytesWritable for
show a warning if a 32 - bit jvm be run on a 64 - bit system .
pdfcopy : do n ' t add ` ` b ' ' to ` ` parent ' ' field of type ` ` page ' '
added a new option DAEMON to the OptionEnum and implemented daemon mode handling in TerminalClient to enable displaying a web pendant UI
added a new file ` FlushIndexTask . java ` that extends ` PerfTask ` to facilitate the flushing of the index
improve memtable flush performance by use the estimated size of the data file
added a check for SEASONS in addition to TEXTS _ NOSORT in MediaLibraryFolder . java to ensure that SEASON
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket with an IPv6 loopback address check to ensure that the local
updated grid size points in GridSizeMigrationTask . java to correct coordinates for grid size migration steps
replaced calls to ` getName ( ) ` with direct access to ` name ` in ` SerializerPojo . java ` to streamline code
added support for read - only context in the Context class to improve performance by preventing operations on non - read - only contexts
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
update lastRunEnd calculation to use lastRunStart instead of boxIndex and adjust offset check to ensure correct positioning of child elements in the
added EOFException and EofException checks to the assertion in GracefulStopTest . java to ensure proper handling of EOFException and EofException
replaced multiple locking mechanism with a unified ` put ` and ` remove ` methods in ` NetJavaImpl . java ` to improve code read
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
added conditional logic to set allowAccountAssetOptimization based on CommonParameter instance to improve flexibility in account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to zero to improve garbage collection policy handling by preventing
added validation for transaction prototypes in TransactionCapsule . java to ensure proper handling of invalid protocol buffer transactions
[ java ] remove strictexception - check rule which be no longer need
updated resource path and logging messages in HelpContent . java for improved localization handling to enhance user experience by providing a fallback fallback to English for
added a new file ` ProcessorInfo . java ` with methods to determine available CPU cores and read CPU masking to provide a mechanism for determining
add - html option to print html output
change logbackxmllocation to be a non - optional property
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve cluster ID handling and service component recovery events to enhance clarity and maintainability of
updated SleuthTagPropagationAutoConfiguration to create handlers by default and added new tests for YML support to improve flexibility in handling YAML
refactor dependency type determination in RustCompileUtils to use a switch statement to improve code readability and maintainability by using a switch
modified the oauth2LoginLinks method to accept an additional ` MultiValueMap < String , String > ` query parameter and added error handling to enhance
hbase - 26969 hfilescanner . seekbefore ( ) do n ' t seek to the first key in the file (
hhh - 14826 - introduce generationtiming . issalways ( ) and deprecate generationtime # value ( )
test : add miss test for layer norm with nan
refactor showShareFile method calls to use getFileOperationsHelper ( ) instead of direct calls to mContainerActivity to improve code maintainability and
added a new test class ` LiquibaseUpdateMojoExecutionTest ` for testing the execution of ` LiquibaseUpdate `
convert proxyType to uppercase when setting it to ensure consistency in proxy type handling
add mod _ minecraftforge to make sure dungeon loot try to make things initialize
added caching logic for retrieving columns based on table names and improved case sensitivity checks in JdbcDatabaseSnapshot . java to enhance performance by allowing
added a new container with a CSS border and a label to the CSSBorderTest to enhance the UI by providing a styled label with a
added a new ` RetryInterceptorAutoConfiguration ` and ` RetryableStatusCodeException ` classes , and modified the ` RetryLoadBalancerInterceptor ` to handle
change layout parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout constructor to ensure correct layout behavior for better user experience
updated the creation of the parentTaskName string to use current time instead of nanoTime to improve clarity and accuracy of task name generation
added error handling for invalid Add Service Request input in ServiceResourceProvider . java to improve robustness by providing clearer error messages when parsing invalid
modified the return logic in the IndexDatabase class to always return true when the unversioned file is not accepting to improve code readability and maintainability
[ giac ] fix for round ( - x ) in ca
refactor AnonCipherWithWantClientAuth class implementation to improve code readability and maintainability
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
increase wait time in evictiontest from 20 second to 5 second
refactor Md5PasswordEncoder to utilize a single salted password variable instead of an internal encode method to improve code clarity and
replaced local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code
refactor Response class to improve response handling to enhance performance and maintainability of the response processing logic
use long . max _ value instead of long . min _ value in sstablemetadata . getmaxtimestamp ( )
add a preferred size of 200x60 to the security panel to allow for more flexibility in displaying callparticipant information
added null and empty checks for replies in multiple classes to ensure replies are compressed only if they are not empty to improve user experience by avoiding
refactored the ` HitbtcBalance ` class to remove dependency on ` ToStringBuilder ` and added ` equals ` and ` hashCode
fix ( griffin ) : fix timestamp in where clause with in statement
updated the return statement in RetriesExhaustedWithDetailsException to return addrs as a string instead of a string to ensure accurate representation of
replaced direct node action handling with a cookie opening mechanism in EditGcodeFile . java to improve code readability and streamline file opening
updated HTTP client imports and initialization in JsonToGrpcApplicationTests . java to use the latest client versions and improvements to enhance compatibility
[ wood pipe ] fix energy loss in wood pipe
added a check to delete the temporary output file if it exists to ensure that the temporary output file is cleaned up before usage
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added new test cases for trade and ticker
added expiration checks in ` ReplayProcessor ` and ` ReplaySubject ` classes and corresponding tests in ` ReplayProcessorTest ` and `
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code readability and maintain consistency
added SQL insert and retrieval for video HDR format in MediaTableFiles . java to improve data handling and ensure correct HDR format is used
show only definition for exam in exam ( fixes # 241 )
fix nullpointerexception in sipcommtextfieldui when the component be null
added caching logic for meta scans when start row is null and scanRoot is false to improve performance by reducing unnecessary operations when scanning
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
updated the implementation of Math and StrictMath classes to improve performance and maintainability of the code
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a mechanism for enabling transient taskbar
[ hotfix ] fix checkstyle violation in accessexecution and archivedexecutionvertex
added a condition to set density based on scale in IOSGraphics . java to ensure density is set correctly when scaling is 3
renamed the ` optional ` boolean fields and methods to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in
hbase - 26905 regionstatestore should log exception in addition to error ( sergey shelukhin , review by
refactor assertTrueEventually to use a lambda expression for better readability to improve code clarity and maintainability by using a lambda expression
updated logging messages and refactored test class names for clarity to improve code readability and maintainability by using more descriptive class names
added a boolean parameter ` showArrow ` to the ` title ` and ` subtitle ` parameters in the ` SearchUiManager ` class to allow
added a break statement in the Database . java and modified lock mode handling in MVStore . java , while removing the testSetMode method
skip test that fail on amd64 on linux .
updated input handling in Scalars . java for Integer , StringValue , and IntValue to improve type safety and clarity in value retrieval
updated primary key validation logic in CreateTableStatement . java to check for empty and multiple primary key specifications to improve error handling by providing clearer
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to ensure consistent
fix an npe in vmservicemanager . getviews ( ) when there be no isolate to query
updated HeadersConfigurer to include new header writers for content type options , XSS Protection , cache control , HTTP strict transport security , and
renamed methods in ObjectEnumerableAssert for clarity to improve code readability and maintainability
[ java ] rename smoketest to distributedcdptest , fix devtoolsprovider
updated the @ AggregateRoot annotation to include a type attribute to improve clarity by specifying the type of the root element
added support for prebuilt libraries in the PythonBinaryDescription and PythonInPlaceBinary classes and updated related tests to ensure proper handling of prebuilt
added clientAuth handling in NetServerOptionsConverter and updated related methods in HttpServerOptions and NetServerOptions to improve configuration flexibility for client authentication
updated directory paths in HiveConf . java and MetastoreConf . java to use the system name for repl root and cm root directories to
refactor task view management to utilize primary and secondary task views and their IDs to improve code clarity and maintainability by consolidating task
added a timeout of 60 seconds to the test method in AmqpTransformerTest . java to ensure that the test runs within a specified time
removed the clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary calls
rename variable ` ` controller ' ' to ` ` flowcontroller ' ' in multiple processable classes to improve clarity and consistency in variable naming
[ flink - 22424 ] [ pipeline ] fix the issue that pipelinebuilder # dealwithconsumallchildrenpipelinebreaker do not
added use of ClassLoaderHandler in module - info . java to enhance class loading capabilities in the application
scoredirector : fix race condition in solverandpersistenceframe . solve ( )
added JsonIgnore annotation to ApplicationSettings . java to ignore JSON serialization during serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null before proceeding
updated null check for queryInfo in QueryTimeManager . java to improve code readability and maintainability
fix auto workbench not work if there be no item in the inventory
fix gl200 text decoder ( fix npe )
rename timeColumnName and timeFieldSpec to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to improve
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
add initializable support to containerfactory . createinstancerequest ( ) .
use longtasktimer . sample instead of timer . start ( ) . start ( ) .
replace float SYNC _ DELTA _ RATE with double SYNC _ DELTA _ RATE and adjust fetch time calculation to
[ thymeleaf ] warn about deprecate fragment expression in thymeleaf 4 . x
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes
fix for http : / / issues . apache . org / activemq / browse / amq - 2696 - fix issue with
added new color constants for main and secondary colors and updated the extractInto method to use fallback color handling to improve color extraction logic and ensure fallback
add data folder to src folder list if it ' s accessible
modified the ` appendContent ` method to include an ` includeTitle ` parameter and updated related logic in the ` NotesHelper ` class to improve
removed the initialization of the SessionRegistry variable to simplify the session registry initialization process
added logging for reconnection completion in NettyStreamingService to improve visibility and debugging of connection reconnections
updated proxyFactory to use JavassistProxyFactory instead of CglibProxyFactory and updated related assertions to use Proxy instead of Factory
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by using a more
simplified exception message formatting in SocketExceptions . java and updated exception validation in ExceptionText . java to improve readability and provide clearer
added a check to ensure the view directory is under the repository directory before proceeding to avoid errors when the view directory is under the repository directory
remove ` ` tab - header ' ' and ` ` tab - footer - area ' ' on drag and drop
added multiple test files to use " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers
added a condition to check if the update log state is in ACTIVE or REPLAYING or REPLAYING to ensure that updates are
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
solr - 12313 : remove testinjection . waitinsyncwithleader in favor of testinjection . waitinsyncwithleader
camel - 16400 : camel - swagger - java - dsl - generate json schema documentation with json schema documentation in order to be able to
updated version handling in ApexLanguageModule and added hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with the current version and
rename multiple Java files for consistency and clarity to improve code maintainability and readability across the project
replaced direct instantiation of ` AggregateEngine ` with a singleton pattern using ` IoTDBThreadPoolFactory ` and updated thread pool usage to improve thread
updated WebSocketAsyncConnection constructor to accept a ByteBufferPool parameter to enhance flexibility in buffer management during asynchronous connections
added scrolling functionality to the thumbnail layout manager in UploadActivity . java to improve user interface responsiveness based on the selected index
fix ( sql ) : fix min ( timestamp ) query with alias
added an @ Override annotation in Launcher . java and refactored the onDraw method in LauncherAnimUtils . java to improve code
added a check to disable the default user agent in the HttpClient configuration to ensure that the default user agent is disabled based on configuration settings
added a conditional check for pubsub hubbub before handling the feed in FeedRefreshUpdater . java to ensure proper handling of pubsub hubbub
changed the access modifier of the finalize method from public to protected to allow subclasses to override finalize functionality
added support for synthetic classes in ` StubJarClassEntry ` and updated corresponding tests in ` CalculateAbiFromClassesStepTest ` to ensure
add a web app that do n ' t support rest
added a check for null table aliases in CalcitePlanner and implemented a method to retrieve table aliases containing a column in RowResolver to ensure
[ hotfix ] [ table - planner - blink ] add ` ` trigger ' ' to trigger key
updated logging messages for transaction broadcasting to include transaction IDs and improved error handling to enhance clarity and accuracy of transaction broadcasting failures and
increase timeout for basicmaptest . put ( )
swapped the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` and
added a new ` TlsClientCertPolicy ` enum and updated ` GitBlitServer ` to use it for handling client certificate policies to
added a debug log statement to indicate when a new CHALLENGE has been saved to improve debugging capabilities by providing a clearer message for
added headers and subprotocols to the ProxyWebSocketHandler to allow customizable WebSocket protocols based on request headers
added a debug log statement for the fetch request in HiveQueryResultSet . java to improve visibility into the query results fetching process
updated formatting of dimensions and label in HolidayEventFormatter . java to ensure consistent formatting of dimensions and eventDto names
refactor ` FinalizePrivateFieldsTest ` to ` ignoreInnerClass ` and modify constructor logic in ` FinalizePrivateFields ` to improve clarity
[ hotfix ] [ doc ] fix typo in unexpectedjobexecutionexception
removed the ` jdk . internal . loader . extra ` export and modified the ` buttonShouldBeOpaque ` initialization in ` Aqu
updated max frequency handling in DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq to improve accuracy
added a new mapping for GeoDegeneratePath in the classRegsitry map to enable dynamic handling of GeoDegeneratePath instances in
removed the ` preFill ` parameter from several pool constructors across multiple pool classes to simplify the pool initialization process by eliminating unnecessary parameters
added a check for ` isInLauncher ` in ` TaskbarLauncherStateController ` and updated state handling in ` TaskbarStashController `
updated conditional checks for default style retrieval in CascadeDeleteVisitor . java to improve null safety and prevent potential NullPointerExceptions
refactor GuiUtil methods for setting size and setting maximum and preferred sizes , and update MarqueeLabel constructors to improve code cl
refactor icon retrieval logic in FileTreeViewHolder . java to streamline icon selection for different file types to improve code readability and maintain
update assertions in ParallelUniverseTest from assertThat ( ) . isEqualTo ( ) to assertThat ( ) . contains ( ) for specific
fix possible concurrency problem in xmlreporter
add test for native probability function
added shutdown thread deregistering in ClientContainer . java to ensure proper resource management and prevent memory leaks
hhh - 14836 - sybase dialect should not drop temporary table after use .
simonstewart : fix htmlunit warning for color . valueof ( ) in htmlunitdriver
refactor multiple Java files related to XML parsing and query parsing to improve code organization and maintainability
updated LinksIndexingFilter class implementation to improve performance and maintainability of the code
updated the string format in VirtualAllocCommitUncommitRecommit . java to include " reserved 1024KB for Test " to improve clarity of
do n ' t refresh source info when there ' s no ad group
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by avoiding unnecessary
updated frequency string from " deg _ text " to " unit _ hz " in WaveGeneratorActivity . java to improve visual representation of wave
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the ` putAll ` method with a direct instantiation of ` TreeMap ` using ` includedLabelSets ` to simplify code and improve readability
[ fix ] fix npe in vertexlighterflat when a vertex format have no normal element .
added span tags for ` grpc . message _ received . visible ` and ` grpc . message _ sent . visible ` in multiple interceptor classes to
replaced ` ZoneId . of ( ) ` with ` TimeZone . getTimeZone ( ) ` for time formatting in ` ScheduledTrigger ` to improve
added AsyncBucket and InMemoryExtension classes for asynchronous bucket handling to improve performance and support for asynchronous operations in the bucket system
updated the logic for retrieving the classes directory in resexhausted003 . java to improve clarity and error handling when the classes directory is
removed redundant spacing in ` AbstractConnector . java ` and added exception handling in ` setHost ` method to improve code readability and ensure proper
fix javadoc typo in ongoingstubbing .
refactor web server reuse logic to include an Optional < WebServer > parameter and improve logging to enhance clarity and maintainability of the code
corrected the spelling of ' productConstructor ' to ' constructor ' in HttpClientUtil . java and added a static import for SolrHttpClient in
added a check to clear the thread allowlist if it is not empty to ensure that the thread allowlist is properly cleared when it was util
update TransformerWriterItemProcessorTests to use setItemWriter instead of setOutputSource to improve clarity and functionality of the processor ' s functionality
dmndtanalyser : do n ' t try to find overlap if the hit policy do n ' t match
add a new test for sliding windows combine functionality in CombineTest . java to ensure that the combine functionality works correctly with sliding windows and
modified app binding logic to conditionally bind all apps based on the ` allAppsDirty ` flag to ensure that app icons are only bound when
camel - 14836 : camel - core - optimize unit test to reduce flakiness
corrected formatting of the code in the Solution . java file to improve readability and maintainability of the code
refactor AquaMenuBarUI to check if the LWCToolkit is embedded before retrieving the use of the screen menu bar
fix setrawlocation ( location , boolean fall ) bug
updated the logic for checking if an example is present in SimpleJpaRepository to utilize a new criteria query for querying results to improve code
added new fields for timestamp , parent hash , nonce , and number in BlockUtil . java to enhance the handling of genesis block arguments for better
create safepoint insertion phase for loop safepoints only if necessary .
hbase - 25836 fix npe in rsgroupinfomanagerimpl . getgroupinfo ( ) ( # 2530 )
changed access modifiers of methods in ArtifactResolver from package - private to public to allow access to these methods from other packages
added thread stop and disposal methods in ClientConnectionHandler and BulletPhysics , and improved error handling in ChunkProcessingPipeline to
added a check to ensure maxBufferedDocs is at least 1 in IndexWriter . java to ensure that maxBufferedDocs is at least 1 to
added state management for login in the LoginActivity to manage state during the login process to improve user experience by allowing more control over the login process
added null checks for source and value extraction in Pump . java and implemented a new test for reversed UUIDs in PumpTest . java
changed access modifiers of several methods and fields from private to protected in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation
updated the order in ` BaseAuthenticationServiceSelectionStrategy ` from ` LOWEST _ PRECEDENCE ` to ` HIGHEST _ PRE
added Jetty server setup and handler setup in TestJNDI . java to enhance server functionality and improve handler management
refactor the SortedDynPartitionOptimizer . java file to improve readability and maintainability of the code to enhance code clarity and ensure correct
change return value from checking if the loop is an instance of NioEventLoop to always returning true to ensure proper handling of the event loop
updated the logic for setting ` newNumNulls ` based on the ratio of ` cs ` to ensure ` newNumNulls ` does not exceed
camel - 17850 : camel - jbang - allow to export kamelets via camel - kamelet - yaml . thanks to
replaced OkHttpOAuthConsumer with AuthState and added authorization handling in OSMJob . java to improve access control for OpenStreetMap uploads
add basicptxtest . test ( ) and nce _ flowsafeconnect ( ) . test ( ) . test ( )
added client authentication functionality to IoTDBRestServiceConfig and updated related classes to utilize it to enhance security by allowing client authentication based on configuration
replaced the variable ` mocksToBeInjected ` with a new HashSet ` mockCandidates ` in ` PropertyAndSetterInjection . java `
refactor bloomuriuniqfilter to use initializers instead of hard - coded constants to improve flexibility and maintainability of the bloom
updated getCursorAdapter ( false ) to true in HomeFragment . java and set refresh _ me preference in TweetPager . java to enable
updated the intermediated header height ratio in ProfilePager . java from 1f to 75f to improve layout responsiveness for better user
updated import statements to use ` RuntimeEvent ` and introduced ` RecompilationEvent ` class for handling recompilation events to improve event logging
added a new configuration property for host system preparation status and updated related classes to utilize this new feature to determine if hosts are currently system preparation
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5351 - remove trail
added entity and score properties handling in the StaticPipeline class to enable dynamic processing of entity and score values based on specified properties
refactor file path handling in Frame . java and add configuration for Whoops in WhoopsModule . java to improve clarity and
[ geos - 7021 ] return null instead of exception when store be not find in the workspace
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
updated test classes to differentiate between multi - line and grid - like text to improve test coverage and ensure proper functionality of text manipulation
fix the test which fail on slow ci server
replaced instances of ` writeMeasurementScheams ` with ` schemas ` in multiple files to streamline code by eliminating unnecessary
updated loop structure and memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve code read
updated the slf4j library name from " slf4j - log4j12 - . * " to " slf4
[ huebridge ] fix the flakiness of huebridgehandlerosgitest
rename the package of multiple activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities `
[ drools - 1276 ] ignore kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that initializes topicName and personalAccessToken using a Pinot schema file to enhance flexibility in handling schema files
refactor AbstractExpressionPart class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ doc ] fix typo in taskslot
replaced occurrences of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by logging failures when releasing the lock
replaced properties loading with a resource bundle retrieval for GEM _ PATH and RUBY _ VERSION to improve resource management by using a more
replaced the use of a constant ` ZERO _ ADDRESS ` with ` ByteUtil . EMPTY _ BYTE _ ARRAY ` for the receive address
removed redundant initialization of classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] make sure blob storage directory be delete in jobmanagertest
chore : [ clouddatastream ] update ruby namespace for clouddatamodel . v1alpha1 and google . cloud . datastream : :
added an ` extras ` bundle to the ` FileDisplayActivity ` to enable customization of the activity ' s display options
changed control flow from break to continue in ParticleEmitter . java to improve control flow for handling null particle cases
updated expect return values for cluster methods in AmbariManagementControllerImplTest . java to reflect the correct number of clusters from 4 to 3
removed the nullable constraint from the " SERVICE " column in TransientSessionTicketImpl . java and added a catch for NoResultException in Jpa
updated Bug4823811 . java file to improve code clarity and maintainability
replaced direct addition of ` patternToDelete ` with a path relativizer using the project filesystem to improve path management by ensuring the path is
updated ` requestFullState ` method to accept a boolean parameter and modified its invocation in ` DeconzBridgeHandler ` to accept a boolean
added a ` attribute ` property to the ` ShibbolethCompatiblePersistentIdGenerator ` class and updated related methods for handling persistent IDs to
removed redundant @ Inject annotations in RequestValidationService . java to improve code clarity and maintainability
refactor keyboard handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by reducing redundancy
removed redundant lines of code in FileNodeProcessor . java and added cleanup logic in MManagerBasicTest . java and MTreeTest . java
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add a test case to verify that slurpfile ( ) and slurpfilenoexceptions ( ) do not throw runtimeioexception
changed access modifier of the ` wrap ` method from protected to private and added the ` @ FunctionalInterface ` annotation to multiple classes to enforce
refactor span retrieval in TraceWebFluxTests to use a dedicated method for name comparison to improve code readability and maintainability by redu
added support for date handling in ETypeConverter and HiveSchemaConverter to support date - related conversions in Hive to improve compatibility with Hive ' s
refactor style string splitting to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintainability by
ggb - 1881 make sure input dialog do n ' t show invalid input error
refactor column mismatch checks in SemanticAnalyzer to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
refactor WANDScorer . java to improve handling of upTo and head size checks to enhance accuracy in updating maximum scores based on the
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to enhance code clarity and maintainability by using specific
updated ` curPixVal ` initialization in ` XRSolidSrcPict . java ` and added a new test class ` WhiteTextColorTest
replaced list of subtypes with collection of supertypes in biomedictionary . java to improve performance and readability of the code
corrected the variable name from " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve clarity and accuracy
updated test stability annotations in TaplTestsLauncher3 . java by replacing @ Ignore with @ Stability annotation to improve clarity of
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
added a check to ensure logFileSuffix is not null and not empty before proceeding to prevent potential errors when logFileSuffix is empty
refactor PythonBuckConfig . java for improved configuration handling to enhance performance and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and updated ShadowApplicationPackageManager to return an array from system
improve meiligao protocol decoder ( fix # 544 )
added null check for tile before accessing its properties to prevent potential NullPointerException when accessing block data
replaced direct cache trimming with an asynchronous task and updated cache size summary to improve cache management and provide user feedback on cache size changes
change import to com . google . common . collect instead of com . google . api . client . util . list
replaced return statements with exception handling for NotAuthorizedException in multiple classes to improve error handling by providing a specific exception type for authorization errors
added a new abstract method ` schedulePeriodically ` and updated method signatures to remove unused parameters to simplify method signatures and improve code clarity by
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java `
added a conditional check to choose a random XML file stream if the specified path matches to improve robustness by allowing multiple matching files to be processed
refactor table creation methods to use CreateTableRequest instead of EnvironmentContext to simplify table creation process and improve code clarity
added a volatile flag ` aborted ` and synchronized the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
updated indentation handling in multiple parser classes to accommodate cases with less than 4 spaces to ensure correct parsing behavior for cases with less than 4
added network wifi status receiver and change wifi status event .
removed the condition checking for control frames in FrameGenerator . java to simplify the code for better readability and maintainability
added visibility setting for the collapse handle in WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added two new files , Issue475 . java and XSS . java , implementing support for escaping HTML and JavaScript in Jooby
added a check to return early if the number of units to scroll is zero to optimize performance by avoiding unnecessary processing when there are no units
changed the condition from checking if the contract list size is greater than 1 to checking if it is not equal to 1 to ensure that the contract
added ` add ( Enum value ) ` and ` put ( String key , Enum value ) ` methods to ` JsonArray ` and ` JsonObject `
added a ` hashCode ( ) ` method to ` IPPPrintService ` and created a new ` TestRaceCond ` class with different
refactor DB2iDialect and DB2zDialect to use a unified getVersion ( ) method instead of a local variable to improve code read
added a condition to check if the transaction ' s platform fee is greater than zero before proceeding with the connection to ensure that transactions are only
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
add support for encrypt message and clear the first sample .
removed the public access modifier from multiple classes and constructors in various Java files to enhance encapsulation and improve code readability
added import statement for Retrofit in Part . java and PartMap . java to enable Retrofit functionality in the application
updated JSON building logic in JsonBuildHelper . java and added new API parameter handling in ParamsBuildHelper . java to improve code clarity and
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of types in AbstractFloatingView . java to enhance floating view functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 4382 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation behavior based on recents
removed an additional parameter from the createRenderScript method call in AllAppsView . java to simplify the code by eliminating unnecessary parameters
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor system bundle property checks into a utility method for clarity to improve code readability and maintainability by centralizing the system bundle check
removed redundant import statements and improved formatting in IntegrationTestSparkBulkLoad . java to enhance code readability and maintainability
replaced hardcoded random value with a constant LOW _ FALSE _ POSITIVE _ RATE in the KeyChainGroupTest class to improve code
refactor configuration handling in Overview . java for improved clarity and functionality to enhance code readability and maintainability by using a more
fix npe in agentmanagerimpl # ishostalive ( ) when host be not in use
added null check for value in DefaultRecordStore . java before converting to Data and adding it to the entry set to avoid potential NullPointerExceptions when
[ kvm ] do n ' t return null when fail to find kvm host .
updated the string concatenation for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity of error messages to enhance readability
modified constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept an Object instead of InvocationContainerImpl to
added a method to strip method parameters from the method name in the LocationOpener class to improve code readability and maintainability by reducing
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new version details and ensure compatibility with the latest
use set instead of arraylist for allow command in outputfilter
update symbolizer option to use constant instead of string
ggb - 2246 : resize popups after feature overlap , close # 2246
simplified error messages by removing prefix " Function : " to improve clarity and consistency in error reporting
replaced an anonymous inner class for handling task launching with a dedicated ` StartingWindowListener ` class to improve code clarity and maintainability
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve documentation clarity and maintainability of the MBeanServer class
updated exception messages in CheckPackageAccess . java for clarity and added error handling for PackageAccess and PackageDefinition to improve error reporting and ensure
increased the timeout duration for the executor service termination from 30 seconds to 90 seconds and added an assertion to ensure the test does not terminate
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it to ensure logging is
added @ JsonIgnore ( true ) annotations to Schema . java to ignore specific JSON fields during serialization
increased test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to improve test reliability by allowing more time
refactored the ` train ` method and related methods in ` SimpleNaiveBayesClassifier ` to improve clarity and functionality to
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` extending ` AuditLoggerModule `
refactor Prototype class to improve code structure to enhance maintainability and readability of the code
added a check to initialize tableIsTransactional if it is null to ensure the correct handling of transactional tables
[ java ] remove unused writefragment method from recordingwriter .
make cea subtitle format relative and add assertion to avoid crash .
added ` ` alias ' ' to the datastore metric query so it can be use in test
updated the ` CurrencyPair ` instances in ` VaultOfSatoshiBaseService . java ` to replace multiple instances of ` CAD `
hhh - 14836 - fix resource leak in unit test
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added two new files , GwtBinaryIntegrationTest . java and A . java , and implemented an integration test for building AGwt binary
updated mouse event handling in BrowserContentPane . java and improved error handling in SQLConsole . java to enhance user experience by ensuring loading cause
removed redundant code in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to improve code readability and
added XMLSecurityPropertyManager handling to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to improve flexibility in managing XML security properties
added a new file ` InlineDefaultMethod . java ` containing interfaces and classes with default methods to demonstrate default methods in interfaces and
replaced instances of " LIKE " with " GLOB " in SqliteFieldPredicateView . java to improve performance by using GLOB syntax
( chore ) camel - dmn : change method visibility from private to protect
fixed - rscript . load ( ) and rscript . loadall ( ) method throw npe if slave node do n ' t exist
refactor code to simplify string concatenation and improve readability in EspressoLanguage . java and StaticObject . java to enhance code clarity
updated logging statements to use a verbose method instead of string formatting to improve log clarity and reduce verbosity in debug messages
fix memory leak in fmloutboundhandler . sendproxy ( )
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration to use it to improve flexibility in handling HTTP
refactor shortcut management logic in LauncherModel . java to improve handling of removed shortcuts and ensure updated shortcuts are only updated when they are pinned
remove unnecessary type check for String in DefaultHttpClientBinderRegistry . java to streamline code by eliminating unnecessary type checking
removed the home navigation case from DetailFragment . java to streamline navigation functionality for better user experience
added a check for ` hasAndroidMarket ( ) ` before evaluating play services in ` AndroidImplementation . java ` to ensure that play services
refactor TableBlockParser to adjust cell start and end calculations and add new tests for header rendering to improve handling of cell boundaries and ensure correct
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance functionality by allowing the setting of bridging headers
refactor PotentiallyDeadCode . java to improve method handling and source path generation to enhance code clarity and maintainability by using a unified
added diamond detection functionality in ` Attr . java ` and created new classes ` Foo ` and ` T6939780 . java
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest (
removed unused import of Utils and logging statement in SolrCacheHolder . java to streamline code and improve logging clarity by eliminating unnecessary
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication exceptions
updated the condition to compare negative values of ` d1 ` and ` d2 ` instead of ` d1 ` to ensure correctness of
added a local file for logback . dev . xml in both JoobyMojo . java and Main . java to ensure the
added a new file ` JaasEventCheck . java ` to handle Jaas authentication events to enable event processing for failed and successful jaas
refactor QuickstepTransitionManager to use a list for managing views to animate to improve code readability and maintainability by reducing redundancy
updated string distance comparison in ConjunctionSolrSpellChecker and added unit tests in ConjunctionSolrSpellCheckerTest to ensure proper exception handling
replaced ` HashMap ` with ` Map ` for the ` fetchers ` variable in the ` ShadowSystemServiceRegistry ` class to improve code
removed single and all leader information change event log names from DefaultLeaderElectionService to streamline code by eliminating unused constants
changed the access modifier of the setAuthentication method from public to package - private to allow external access to the method from other classes
kvm : add a system property to control the timeout of the modify storage pool command
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider . java to ensure the correct schema is used for the JDBC table and
updated SQL method names from " SQLUpdateAUP " to " SQLUpdate " across multiple files to improve clarity and consistency in the code
replaced synchronized access to schemaTypeCache with a more efficient computeIfAbsent method to improve thread safety and performance when accessing schemaTypeCache
updated header addition logic in StaticServerHttpHeadersWriter to check for existing headers before adding new ones to ensure that headers are only added if they
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily skip tests due to files not available within the CMU context
added a directory creation for the storage directory in TestCollector . java to ensure the storage directory exists before running tests
added a method to set chunked streaming mode in StarTreeJobUtils to optimize data processing for improved performance
[ jsonschema ] add basicsyntaxchecker , multi - type and single - type checker
hbase - 25827 fix import to use hbase - thirdparty module
added a new test for bean population with recursive structure and created a new Node class to ensure that the BeanPopulator does not cause a stack
added IOException declaration to the getRemoteName ( ) method in AccountingTransceiver . java to ensure that IOException is thrown when retrieving the remote
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl . java and added createPlainClient method in ClientFactoryImpl . java to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security interceptor management by allowing AspectJ mode to be used
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by controlling hostname verification
added a ` remove ` method to ` OHLCSeries ` and created a corresponding test in ` OHLCSeriesTests ` to enable removal of
updated method invocation from ` invoke ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java ` and modified
replaced the removal of joints from the body ' s joint list with a call to destroyJoints to ensure proper management of joints
do n ' t search for phone number when no filter string be specify .
[ flink - 15604 ] [ test ] add miss license header to sourcereadertestbase
added try - finally block to handle file not found exceptions in DocumentsStorageProvider . java to improve error handling and ensure proper resource management during
added new ` HookDefinition ` interface and ` JavaHookDefinition ` class , along with a test class ` JavaHookTest ` for hook registration
refactor the flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
updated setExoOptions method to include an allowTs parameter to enhance flexibility in setting Exo options based on live TV status
removed the USER role from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers in the DMR decoder
added a static constant INVISIBLE in the Color class and refactored the toString method in the RailButtonShapes class to improve code read
updated the condition for enabling null handling in CountAggregationFunction and added a new test for null handling query options in NullHandlingIntegrationTest to
set the ' deep ' variable to - 1 in InternalTransaction . java to ensure proper initialization of transaction state during transaction processing
added XML escaping for the name in the buffer to ensure proper handling of special characters in XML names
updated work directory configuration to use a configurable directory instead of hardcoded " work " to improve flexibility in configuring the directory structure for better
( chore ) camel - ruleset - factory : mark deprecate rule a deprecate
make amd64directcallop use the position of the codebuffer instead of create a dummy label .
replaced instance variables minStamp and maxStamp with static final constants MIN _ TIME and MAX _ TIME in TimeRange . java and added tests
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor metrics JSON emission logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
reordered conditions in DetailFragment and GalleryActivity for consistency and clarity to improve code readability and maintainability by reducing redundancy
fix tank not be able to place item in the tank when they be in sneak
updated CsharpLibrary . java to handle RuleAnalysisLegacyBuildRuleView and improved path resolution logic to enhance the handling of Dotnet
allow to send iq . type . get to a non - pep service . jm - 107
added a null check for ' runtime ' in the IntrinsificationPhase class to ensure that ' intrinsicGraph ' is only initialized when ' runtime
updated conditional logic to check if the active list is not empty before refreshing the active work to ensure that active work is only refreshed when it
pdfbox - 4892 : store last object id , gen id , and object offset in bfsearchcosobjectkeyoffsets if they be
added constructors to LwjglAppletApplication that accept a Canvas as a parameter and modified the LwjglNativesLoader to disable
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig gracefully to improve robustness by avoiding
refactor password policy handling in LdapAuthenticationHandler and AccountStateHandler to streamline authentication process to improve code clarity and maintainability by redu
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enable
updated method signatures in Readable . java to improve code readability and maintainability
pdfbox - 551 : use testsupport . withfont in jsoupnonvisualregressiontest
updated the icon used for the share menu in CaptureActivity . java to improve clarity and maintainability of the menu item ' s icon
updated the ` JRE _ IS _ MINIMUM _ JAVA8 ` and ` JRE _ IS _ MINIMUM _ JAVA9 ` constants
fix is _ jdbc41 to be true for non - jdbc 41 compliant driver
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredSet to improve performance by using a more efficient list implementation
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
replaced the existing ` png ` , ` jpg ` , and ` gif ` variables with new ones in ` ChartProvider . java `
fix import menu item work directory to work directory
simplified the return statement in JavacParser and added a new test class ExtraSemiTest to improve code clarity and ensure
added functionality to find users by created time in a list of users based on their creation date in the repository to enhance functionality by allowing users to
updated Test15FloatJNIArgs . java file to improve clarity and maintainability of the code
replaced hardcoded version strings with dynamic version placeholders in the plugin to improve readability and maintainability of the code
update substring logic in MockProcessContext and add a test for encryption and decryption in TestMockProcessContext to ensure correct substring extraction and validate functionality
[ java ] add ensurenotreentrant ( ) method to aeronarchive . java to prevent reentrant method from be call
added a null check for the dependency before merging it to avoid potential NullPointerExceptions when merging dependencies
updated @ Test annotations to include a timeout parameter in SslBytesServerTest . java to increase test execution time for improved reliability
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
added methods for retrieving the real - time index segment and updated method names for consistency to improve code clarity and maintainability by using more d
replace direct call to viewCaptureDataSupplier with a null check before writing to output to avoid potential NullPointerException when exportedData is null
refactor RecyclerViewFastScroller to use a dedicated method for calculating scroll thumb radius to improve code readability and maintainability by centralizing
updated error messages in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckEventsConsumer to
added a platform check for Windows before adding a JCheckBox in the GeneralTab to ensure that the preventSleep checkbox is only added on Windows platforms
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
updated QuickstepAppTransitionManagerImpl and FloatingIconView to handle vertical bar layout correctly to improve scaling logic for app transitions based on device
added methods to manage full - screen mode state in XWindow and XWindowPeer classes to improve user experience by allowing flexible full - screen
added logic to truncate played duration strings in ` StringUtil ` and created a new ` UMSUtilsTest ` class with corresponding unit tests to
added a method to add credentials for DAGs in DagUtils . java and integrated it into TezTask . java to enhance security
camel - 16400 : use entryset ( ) instead of keyset ( )
trim the last element of the thread name from the array before setting it to ensure consistent handling of thread names by trimming whitespace
updated the message in GpsMainActivity to specify that a description can now be added to a file to provide clearer guidance on the
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` with methods to identify unused types in ` Main . java ` to ensure proper handling of unused types
updated the key used in the componentToClusterInfoKeyMap from " hbase _ master _ host " to " hbase _ master _
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused components to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to enhance the flex
updated MAX _ DELEGATE _ LOCK _ PERIOD validation to allow values less than 10512000 and modified related logic to ensure maximum delegate
server : fix npe when try to create a network profile without a valid rate .
removed initialization of services in CmcExchange and overridden the applySpecification method to streamline the code by eliminating unnecessary initialization logic
updated configuration handling in ` GossipLocalNode ` to use ` seed . node . ip . list ` instead of ` ConfigObject ` to improve
enable client tpc by default when ` ` hazelcast . client . tpc . enabled ' ' system property be set
updated Swagger UI version from 2.2 . 10 - 1 to 3.18 . 2 across multiple classes to ensure compatibility with the latest API
refactor the modular inverse calculation logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve
refactor the key assignment logic in NamedObjectList . java to improve clarity and structure to enhance code readability and maintainability by reducing
refactor cleanup methods to use cleanupEmptyTableDir instead of cleanupEmptyDir across multiple query compactor classes to improve clarity and consistency in
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat and registered it with Kryo for serialization to enable support for RCFileInputFormat in Kryo serialization
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java type and category information from a ` Column `
added error handling for invalid host headers in ` Request . java ` and improved test cases in ` RequestTest . java ` to ensure proper
refactor ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to utilize ` ReflectionHelpers ` for retrieving time zones by country to
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve handling of outgoing values and
refactor SegmentCoreReaders and SegmentReader to use instance variables instead of local variables to improve code clarity and maintainability by reducing red
[ mondrian - 1205 ] aggregatedao : add hasmainthreadprofile ( ) method to check if there be a main
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to enhance error reporting
updated constant names in various filter factories to use lowercase instead of lowercase for consistency to ensure consistent case - insensitive naming conventions across the application
refactor HSSFSheet and Sheet classes for improved code organization to enhance maintainability and readability of the code
remove backward compatibility since dspace 4.0 in search servlets
updated BasicDateTime . java to remove specific America / Dawson , WhiteHorse , and Canada / Yukon from the
updated the instantiation of SurfaceSyncGroup to include the name " TaskBarController " to improve clarity and context of the sync group in the
updated GridFsTemplate to use getId ( ) directly instead of getObjectId ( ) for file deletion and modified GridFsTemplateIntegrationTests to
added tests to validate the retrieval of total size and byteSoFar in the ShadowDownloadManager to ensure that the download manager correctly handles both total size
refactor character insertion logic in TextField . java to handle both desktop and desktop enter keys to improve readability and maintainability of the code
added a check to return early if the GroupNodeViewModel is equal to avoid unnecessary processing when the GroupNodeViewModel is already equal
added a method ` afterSetStatements ` to determine if a block is terminal based on the last non - null variable node to improve the handling
added hashCode ( ) method to IntervalXYDelegate and updated equality checks in XYSeriesCollection to utilize HashUtilities for hash code generation to improve
cleanup clientqueuedisruptiontest after each test to avoid flakiness .
refactor CloudWatchAppender and related tests to improve clarity and consistency in naming conventions to enhance code readability and maintainability by standardizing
replaced ` GsonBuilder . serializeSpecialDoubleValues ( ) ` method with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` method
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock `
added checks for non - empty subtag and privateuse in Locale . java and improved language tag handling in LanguageTag . java to ensure
add kvm . ssh . to . agent global config to control whether or not the management server can be ssh into agent
removed the ` public ` access modifier from the ` ScheduledAction ` class and its constructors in ` SchedulerWhen . java ` to improve accessibility
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest version of PagerSlidingTabStrip
added a condition to check if the string contains a hyphen before processing it in SimpleSearchQueryConverter to ensure that the filter does not contain a
updated sort column label text from " natural order " to " Natural column order " and replaced direct calls to getTables ( ) with a
added a call to Arrays . copyOf ( in , 6 ) in mmm Utils . java and ppp Utils . java to optimize array copying
replace direct call to ` write ( remoteAddr ) ` with ` htmlEncodeButNotSpace ( remoteAddr ) ` in ` HtmlSessionInformationsReport
updated the topic check in ItemStateTriggerHandler to use " smarthome / items / " prefix instead of " / " to ensure the
removed unnecessary synchronized block in FastHttpDateFormat . java to improve code readability and maintainability
refactor file moving logic to use a fixed thread pool for improved concurrency management to enhance performance and maintainability of the file moving process
added two overloaded trigger methods in WrapTimer . java to facilitate the scheduling of a timer based on a specified period to enhance
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils and corresponding tests in TypeStringUtilsTest to support additional SQL data types
updated error handling in AbstractStatusReporter to include verbose option to enhance error reporting flexibility based on user - defined settings
added menu toggle functionality to ClickStartHandler initialization in Header . java and ItemControls . java to improve user experience by toggling menu when
server : do n ' t allow vpn connection to be connect between same account ' s vpn gateway and customer gateway
removed error handling logic in CursorReadingTask and updated unit tests in CursorReadingTaskUnitTests to streamline error handling and ensure consistent test coverage
pdfbox : do n ' t try to create thumbnail / extract text for encrypted pdfs
fix ( curator ) : make sure to shutdown the thread pool when the client get child
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve clarity and maintain consistency in naming conventions
replaced ` getSelectedItemId ( ) ` with ` id ` in ` HostsList . java ` and added a ` deleteItem ( ) `
refactor Java6Assertions and Conditions classes for improved clarity to enhance maintainability and readability of the code
changed the parameter type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to use it for accessing long
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification exceptions on multi - threaded verification to
send offline roster notification when a user do not have access to the roster .
updated MapOperator and PartitionDesc to use getOverlayedProperties ( ) instead of getProperties ( ) to ensure overlayed properties are retrieved from the
reformatted the loadHandle method call in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check for extTypeCustomDesers before creating it in MessagePackFactory and modified the copy method signature in MessagePackFactoryTest to
remove system . setproperty ( ` ` mockserver . loglevel ' ' , ` ` warn ' ' )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary test cases
removed unused imports and refactored the createJetty method implementation in AbstractSolrMorphlineZkTestBase . java to streamline code
updated scoreMap and termScoreMap to use String and Map < Float , Float > instead of Float and Float , and added termScoreMap
updated conditional checks in U64 . java to use ` < ` instead of ` & & 0x8000000000000000L ` and added an
removed headline style settings from MainViewModel . java to streamline the code by eliminating unnecessary styling
updated the condition for notifyChange to include the support for dark text in WallpaperColorInfo . java to ensure proper handling of dark text
[ flink - 20686 ] [ checkpointing ] remove the ontooearly method in checkpointrequestdecider for non - forced
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS constants to MAX _ POOL _ SIZE and CO
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
skip opencv test that fail on window
http : / / issues . apache . org / jira / browse / amq - 4892 - fix http : / / issues
[ py4j ] fix python proxy throw throwable when return message be not a string .
added a new annotation ` @ Issues ` to the ` Issue ` class to enable repeatability and retention of issues associated with type and method
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest to
updated socket connection logic to use a default IP address when socksProxyHost is not set to ensure correct IP address is used when socks
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
removed unnecessary import of ClassUtils from ReflectionUtils . java to streamline code by eliminating unnecessary dependencies
replaced instances of HashSet with LinkedHashSet for excludeProtocols , excludeCipherSuites , includeCipherSuites , and selected _ ciphers to ensure consistent iteration order
added a static static variable ` systemResource ` and updated logic to return it based on its location to improve resource management by avoiding unnecessary resource
added a constant for the size of the plaintext segment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to improve
added a test to verify that the circuit breaker throws an exception for invalid fallback routes to ensure that the circuit breaker correctly handles invalid fallback
added SSL connection factory to the HttpClient builder to enhance security by allowing all hostname verification
set the size limit of the read counter to a maximum of 0x7FFFFFFF and remove unnecessary reset of the bytes read counter to improve
added a ` preferAES ` property with getter and setter methods to ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
( chore ) camel - telemetry : use log instead of system . out . println
( chore ) camel - elb : remove no longer need test
rename method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity and consistency in
added error handling for file creation in DiacriticTest . java to improve user feedback when locale or file system is configured in a way
hhh - 14709 - followonlockingtest : skip timeout test on oracle 11 when use a driver other than ojdbc6
added checks for file existence and improved exception handling in TextureUnpacker . java to enhance error handling and ensure correct file path is used for
added locking mechanism for thread safety in AmbariManagementControllerImpl . java to ensure thread safety during service updates to improve thread safety and prevent
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test case to verify that the result set does not close the statement to ensure proper resource management and prevent potential resource leaks in the
refactor InputStreamBodyGenerator and ChunkingTest classes to improve input stream handling and test coverage to enhance code clarity and maintainability while ensuring
added functionality to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that all database resources are removed from the schema map
replaced the use of ` writeAndFlush ` with ` write ` and added a check for the " chunkedWriter " in the pipeline to
updated item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to include a confirmation dialog for deleting items to enhance user experience by allowing users
refactor RuleBank to use a new interface for RuleBank and update CSSParser to utilize it for rule management to improve code organization and
do n ' t swallow exception in jcescrypto . dofinal .
added new files TestMonomorphicObjectCall . java and Object . java with functionalities for testing and object manipulation to facilitate
replaced the existing ` removeMetaDataSource ` method with a new ` toFront ( ) ` method in ` DataBrowser . java ` and
hbase - 20619 fix scanquerymatcher . shouldseek ( scan , store ) to return null when no time range be find
[ hotfix ] [ runtime ] fix local state directory usage in taskmanagerservices
modified the ` AlterTimeSeriesStatement ` class to initialize ` isAlterView ` explicitly based on the value of ` isAlterView ` to
fix condition . matchtext ( ) to display human - readable name and sub - string .
added try - catch block to handle potential exceptions when retrieving the routing table builder to improve robustness by preventing application crashes
updated parameter map handling in HttpClientIntroductionAdvice . java to use putIfAbsent for key - value pairs to improve null safety and ensure
( chore ) camel - jms : use char [ ] instead of string for jms password
bug 10702 : add search by name / domainid / domainid parameter to listdomainchildren api call
updated the ` toSortedListWithCounts ` and ` equals ` methods in ` Counters ` to use ` ! = ` instead of `
refactor the initialize method to accept an original SimulationStatus parameter and set warnings accordingly to improve clarity and maintainability of the simulation status
sulong : add transfertointerpreterandinvalidate ( ) before currenttimemillis ( ) .
refactor variable handling in the PrettyPrinter class to improve clarity and maintainability to enhance code readability and maintainability by using a more
lru dictionary : fix possible npe in lrumedictionary .
modified DatagramSocket and DatagramChannelImpl to improve filtering logic and handle null packets to enhance robustness by preventing potential null pointer exceptions
testquerydns : migrate dns - common module to junit5 ( # 4358 )
added a new class NutchServerInfo with properties for configuration , jobs , and running jobs to provide a structured way to access and manage
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource and updated attribute handling in EdgeNGramTokenFilter . java to simplify attribute management and
added timestamp handling to CqlInserter , ThriftInserter , and SettingsColumn classes to allow users to specify timestamps in queries and
refactor DSAParameterGenerator to simplify handling of prime strength conditions and improve code readability to enhance maintainability and clarity of the code
replaced direct calls to ` Numbers . floatToIntBits ` with a new method ` Numbers . doubleToLongBits ` and refact
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added handling for SQLExceptions and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve constraint violation detection for better error handling
[ issue # 3540 ] fix checkstyle issue in remoting / broker / offsetstore . java ( # 3540 )
added methods to insert a new tab in Tabs . java and refactored the createTab method to improve tab management functionality and encapsulate
replaced ` toArray ( new String [ ] [ files . size ( ) ] ) ` with ` toArray ( new String [ 0 ] )
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder and mockenvironment
refactor conditional statements in MavenVisitor . java for improved readability to enhance code clarity and maintainability
updated mock and configuration update names from " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " to " MO
added a new file ` FormatCheckingTest . java ` to implement a class format validation test to ensure that the application correctly handles illegal class names
updated line number assignment logic in CodeGenerator . java to improve clarity and maintain consistency in line number handling
added a try - catch block around the method call to handle potential exceptions when accessing configuration properties
added multiple overloaded ` createToggle ` methods to the ` RadioButton ` class for setting toggle options to enhance the functionality of ` RadioButton
updated the initial capacity of the cache in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl
changed access modifier of DEFAULT _ CAPACITY from private to public in SimpleChannel . java and updated channel parsing logic in ChannelParser . java to
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in osg
use system property ` ` usemode ' ' instead of ` ` papplet ' s ` ` -- external ' '
added error handling for adding a shutdown hook in IOManager and improved logging messages in YARNSessionFIFOITCase to enhance robustness
refactor ` RobolectricTestRunner ` to replace ` projectRoot ` with ` androidManifestPath ` for better clarity to improve maintain
http : / / issues . apache . org / jira / browse / amq - 4892 - fix handling of non - existent
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests implementation to Arg class and implemented it in RustBinaryDescription and RustLibraryDescription to enhance test management and improve build target
updated placeholder and error drawable references in FileMessageVH . java to improve clarity and consistency in image handling
refactor OnExitTest class for improved readability to enhance maintainability and facilitate future development
added an ` onUserPreferenceChanged ` method to ` TaskbarManager ` to recreate the taskbar when user preferences change
refactor HeapDump to support JVM - specific dumping for heap dumping to improve compatibility and maintainability of the heap dump functionality
camel - 16400 : camel - mybatis should close the session in a try - finally block to prevent potential memory leak .
danielwagnerhall : add a new function to export the window to the ie driver .
updated imports and annotations in IteratorToFor . java for compatibility with Java 5 and improved type safety to enhance code clarity and maintainability
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure the application is in an unavailable state for better resource management
removed assertions from ByteBufferAs - XBuffer , Direct - XBuffer , Heap - XBuffer , and StringCharBuffer classes and updated position and
replaced ` toUri ( ) . toString ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to
updated setEmpty method implementations across multiple classes to ensure proper handling of empty arrays to improve array management by allowing dynamic manipulation of empty elements based on
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
refactored document addition in TestMultiPhraseQuery to use a new Document instance to improve code clarity and maintainability by using a dedicated
update assignTickets method to use payment method when assign tickets to ensure tickets are assigned only for offline payment methods
added a timeout handling mechanism in the HttpChannelState class to ensure proper synchronization and error handling during listener timeout events
updated logging in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug level and improved
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
updated the read method to conditionally use LOCAL _ SERIAL or LOCAL _ QUORUM consistency level to ensure correct handling of read operations based
added a check for the " Home " model in the HeosDiscoveryParticipant and modified the handling of the SERIAL _ NUMBER property in He
added a ` Wait ` property and its getter / setter methods to ` PlainSelect ` and created a new ` Wait ` class with a timeout
added AttributeController and AttributeTable imports and refactored node and edge data handling in Neo4j . java to improve attribute management and
added a null check for serverName in SessionManager . java to ensure serverName is not null before comparison to avoid potential NullPointerExceptions
deprecate rocksdbmetronome in favor of nifi - rocksdb
updated the method to retrieve the value of " IS _ GRANTABLE " from a results object to improve code clarity and maintainability by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 595 : add
camel - 16400 : camel - cxf - make camel - cxf work on macos
added a check for non - new column descriptors and modified column modification logic in LoadTestTool . java to ensure proper handling of new column descriptors
added implementation of the Disposable interface to the Texture class to enable disposable functionality in the Texture class
updated WebappRegistrationCustomizerImpl to handle null tldBundleLocation and modified extractWars logic in FragmentActivator and OSGiApp
besu command - check genesis file for goquorum compatibility mode
replace IOException with Throwable in HttpInput . java to improve error handling by using a more specific throwable type
added a condition to skip tests for the " JP " country in the LocaleTest . java file to ensure compatibility with the JP era
renamed the ` Wrapper ` interface to ` HostResponseWrapper ` and updated references accordingly to improve clarity and consistency in the API documentation for
added boost comparison and hash code calculation in FilteredQuery . java to ensure proper hash code computation based on the boost value
reformatted the constructor of FileMenuFilter for improved readability to enhance maintainability and clarity of the code
[ geogebra - 4892 ] add symbol table to textedit and fix for debug
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that the CMS class un
fix itemstospendedevent . getitemtossevent ( ) throw exception if no entity be present in the spong
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to ` ColumnMapItemPreparedStatementSetter ` and ` ItemPreparedStatementSetter ` ,
update compactionstest to use identityqueryfilter instead of range
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added a new ` SpEL ` operator and implemented it in the ` OperatorJudgeFactory ` to support SPEL operations in the Soul
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 20613 , use lookup instead of sun . misc . service to find default profiler
updated several Conscrypt - related classes and removed an unused static import in ConscryptTest . java to improve code clarity and maintain
updated constant declarations from ' 0l ' to ' 0L ' for start _ offset and length in ShadowArscAssetManager9 . java
updated fullOptions to use version " 6 " instead of " 1.5 " to ensure compatibility with the latest version requirements
changed the access modifier of the ` extractMetadataColumns ` method from private to public and refactored project retrieval logic in ` PushProjectInto
added imports for handling canonical names and sorted localized names in AboutActivity to improve code readability and maintainability by using a sorted list for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to refresh shared preferences based on live streaming settings to ensure that refresh behavior is only triggered when live streaming is disabled
added the exception cause to the MappingException constructor in AuditConfiguration . java to improve error handling by including the original exception cause
( chore ) camel - core : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeType , DynamicCompositeType , subComparators , and DynamicCompositeTypeTest to use wildcard generics
added a new method ` supportsTransport ` to ` GitClientApplication ` and modified ` RepositoryUrlPanel ` to check for supported transports to enhance
added delegation names for various input consumer classes and modified the reason string in TouchInteractionService . java to provide clearer diagnostics for long press navigation
update availableVersions initialization to handle null MavenMetadata and enable version downgrades based on allowVersionDowngrades to improve robustness by ensuring available versions
added a check for the " Disabled " status of large page support and updated log messages in TestLargePageUseForHeap . java to ensure
cloudstack - 218to22 : skip event migration if usage db do n ' t exist
updated the ` getTestParameters ` method to throw an ` IOException ` and modified the path handling for ` sampleConfDir ` to ensure correct path
added a new test class for ObjectStreamClass and modified the requireInitialized ( ) method in ObjectStreamClass . java to ensure proper initialization and
[ amazonechocontrol ] fix nullpointerexception in zoneawarediscoveryfilter
changed log level from error to warn for logging failures in OpenTracingTracer . java to provide a clearer warning log for tracing failures
added a toString ( ) method to the Generator class to provide a clearer string representation of the registered generators
refactor URI handling logic in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to improve
added a check for resource existence in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure that resources
added error handling and logging for API response extraction in AccepttoApiUtils . java to improve error reporting and provide clearer feedback when the response
removed conditional check for Android version in VertexBufferObject . java to simplify byte buffer allocation for compatibility with newer Android versions
refactor SybaseASADatabase class implementation to improve code readability and maintainability
[ hotfix ] [ table - common ] add forceprojection to hashjoininfo for backward compatibility .
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` object for
added FLAG _ MUTABLE and FLAG _ IMMUTABLE constants and updated PendingIntent creation methods to improve permission handling for push notifications and
added methods to append read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use this new method to improve code clarity and
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to provide a standardized way to display temporary toast
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service version is set correctly based on the parent '
added a new test class RawSerializationTest for Gson serialization tests to ensure correctness of JSON serialization for various collection types and object types
simonstewart : rename seleniumserver to sslcertificategenerator so that it can be use for test
modified the loop structure to iterate over all replies instead of a single status to improve readability and maintainability of the code
increased the timeout duration in ` ExpiringUrlCacheTests ` from 3 seconds to 60 seconds to allow for more time for resource access
added a new test method ` testNGramFilterPayload ` to validate payload handling in the NGram filter to ensure that the NG
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
added a test to verify randomness of different array sizes in the EasyRandomTest class to ensure correctness of the randomness of different array
cloudstack - 4892 : do n ' t swallow exception when stop a vm
added a ThreadLocal variable ` __ tryWriteAgain ` and modified the logic for handling write attempts to manage write attempts more effectively to ensure that
reformatted code for better readability and added an ` ancestorsVisible ` method to improve code clarity and ensure proper visibility checks for actors
added logging for rolling - update failures in RollingUpdateOpFactory . java to improve visibility into deployment group failures during rolling updates
[ hotfix ] [ table - common ] add miss nullable annotation for sinkparallelism
added error handling for non - existent usernames in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve user authentication feedback
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and facilitate future development
updated QParserPlugin to use QParserPlugin . DEFAULT _ QTYPE and added new test cases for handling " lucenePlusSort " to
updated SimpleDateFormat instances to use Locale . US for consistency to ensure consistent date formatting across different locales
added the ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new
updated ClientAPITokenIntegrationTest to use a new parameter name ` shouldHaveIdToken ` instead of ` idToken ` to improve clarity
added transaction handling methods to DatabaseAdapter and improved account deletion in GncXmlHandler to enhance transaction management and ensure proper resource management during database
replaced byte array with ByteArrayOutputStream for reading input data to improve performance by avoiding unnecessary byte array creation
refactor exception message handling in MessagingTemplate . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
added an override method to check if a source file is an instance of CompilationUnit to ensure that only valid source files are processed in the Auto
added configuration settings for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance by reducing the number of
added a new test method ` updateWits ` to verify the updates of witnesses in the Manager class to ensure that the witness data is
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing NoSuchElementException when iterating over elements
use log . info ( ) instead of log4j . level ( ) for version and system property
added basic authentication checks and improved thread management in the BasicAuthIntegrationTest and DaemonStream classes to enhance security and ensure proper handling of asynchronous
replaced ` HashMap ` with ` LinkedHashMap ` for the ` nodes ` variable in ` DependencyUtil . java ` to maintain the insertion order of
added an InternalErrorMapper to handle InternalError exceptions in JerseySupport to improve error handling and logging in the Jersey
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by centralizing header validation logic
refactor system property handling in System . java to improve clarity and maintainability to enhance code readability and maintainability by using a switch
updated method signatures in StringSubject to accept CharSequence instead of String to improve flexibility and flexibility in string handling
add miss jfr / internal / jvm . countertime ( ) and jdk / jfr / internal / jvm . eventwriter ( )
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the JDBC connection factory to use a configurable DataSource based on the forCompactor condition to enhance flexibility in data source management by allowing for
updated DeploymentOptions . java with new import statements to improve code clarity and maintainability
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` directly instead of ` Drawable . ConstantState ` and adjusted the
refactor XmlParser and YamlParser to use try - with - resources for better resource management to improve code readability and ensure proper resource management
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance the handling of coalesce
camel - 16400 : fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper context class loader is used for proxy
refactor DefaultDateTypeAdapter to remove unnecessary constructor and add synchronized keyword to enhance thread safety and ensure thread safety during serialization and deserialization
updated formatting of method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactored URI handling in HttpClientRequestBase to streamline query and URI assignment to improve code clarity and maintainability by eliminating
added a method to filter old entries in FeedRefreshUpdater . java to ensure that only unique entries are processed to improve data integrity by avoiding
hbase - 24975 fix log level in fshlog # appendto ( ) ( # 2498 )
replaced the implementation of the ` getValues ( ) ` method with a new ` NodeMapIterable ` class and refactored the iterator implementation
updated the predicate variable name from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency
added a check for non - empty fields before adding operations in MongoRecordReader . java and updated return condition in RexToMongoTranslator .
added ` ` admin ' ' to the admin list if it do not exist
replaced usages of MultiFields with SolrIndexSearcher ' s slowAtomicReader for terms retrieval to streamline code by eliminating
modify the return statement in ConstantBeanHolder to include the class name and hash code of the bean to improve clarity of the output for better
simplified the condition for obtaining the primitive type in GroovyParserVisitor . java to improve code readability and maintainability by reducing
remove hashcode ( ) and hashcode ( ) from frameinfoqueryresult and javalangsubstitutions .
try to fix flaky test sedablockwhenfulltest . java
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure readLen is correctly calculated based on position and buffer size to improve accuracy
updated import statement for Nullable from micrometer . common to micrometer . core in HttpClientTimingInstrumentationVerificationTests . java
updated SQL query in IconCache . java to include user data in addition to component data to ensure accurate filtering of user - specific icons based on
fix for http : / / issues . apache . org / activemq / browse / amq - 2698 - fix regression in
ignore class - file - only whitelist for module and directory
cloudstack - 420 : fix baremetal foreign key in db upgrade from 4.1 to 4.2
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink to handle offload buffer emptying to ensure proper handling of audio track tear - down
added scheduled tasks to the UpstreamCacheManager to manage upstream tasks with configurable delays to improve flexibility in handling upstream tasks with fixed delay settings
refactor StreamType class to improve code structure to enhance maintainability and readability of the code
updated the assertion message in the Recording class to include an additional context to improve clarity of the assertion failure message for better debugging
replaced authentication checks with admin role verification in FilestorePage and RootPage to enhance security by ensuring only admin users can access the fil
ignore camel - elasticsearch - rest - test that fail on ci server
added a check for the declaring class of the method in the ExpressionControlBusFactoryBean . java file to ensure proper handling of lifecycle methods in
updated button text references in OfferBookChartView . java to replace " leftButton " and " rightButtonFiat " with " buy
camel - 14850 : camel - restlet - do n ' t allow restlet to use consumer - context - path pattern . th
refactor createNextBlock and createNextBlockWithCoinbase methods to remove unnecessary parameters and improve code clarity to enhance code readability and
removed Serializable interface from BTreeMapJava and updated related test methods to improve serialization handling and ensure proper exception handling in serialization tests
improve logging when a rule fail to execute .
refactor conditional statement in Main . java for improved readability to enhance code clarity and maintainability
changed the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to improve code
deleted the PlainVerifier . java file and removed its implementation from DefaultJwtSigningAndValidationService . java to streamline the codebase by elimin
added a condition to close the system windows when the action triggered from the AltTab to improve user experience by closing the recents system when the
refactor dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog responsiveness and state management to enhance user experience
updated MimeUtil . parseCharset calls to include " UTF - 8 " parameter in RestAdapter . java and added a suppression warning in Mime
added a call to ` super . deinitialize ( ) ` in the ` TextField ` class to ensure proper resource cleanup and prevent memory leaks
replaced manual serialization code with a utility method for serializing LogFormat objects to improve code readability and maintainability by centralizing serialization logic
updated method calls to use ` previousUntilLastClause ` instead of ` previousClause ` and modified the ` PreviousFill ` initialization to include additional
added input validation for array size and improved handling of negative values in JAXWSExceptionBase . java to ensure proper handling of negative array sizes
test : migrate ctunresolvedimporthetest to junit 5 ( # 4358 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow for a longer wait time before
[ hotfix ] [ test ] set default slot share group to region in miniclusteritcase
added title support and title retrieval methods to ShadowActivity , ShadowAlertDialog , ShadowDialog , ShadowTextView , and ShadowToast classes to
replaced Apache Commons Logging with Apache POI logging in POIFSFileSystem . java to improve logging consistency and maintainability by using a
updated alarm handling to support multiple alarm codes and added motion area detection to enhance alarm detection functionality and improve logging and handling of motion area events
add map . delete to remove statistic ( # 11904 )
updated the ` Type ` enum to use a switch statement and modified the status check in ` Response . java ` to improve code readability and
added a method to find the Java AC location and updated the loop to use it to improve code clarity and ensure the correct location is used
add project - name to create additional setting ( # 1748 )
added a new file ` DeprecatedStubbingTest . java ` to test deprecated stubbing behavior in Mockito to ensure compatibility with the latest stub
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
fix partmod for when modify np have functional tag , also add nml and nx to the list of all the nml and nml
add a system property to allow RSA key exchange in the FipsUtils class to control the use of TLS _ RSA _ WITH _ RSA _
updated variable names from ` output _ reader ` to ` reader ` and added a ` close ( ) ` method in ` PerforceHistoryParser
[ dsm ] remove the access token when the sdm account be remove .
replaced the AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView .
added handling for UpdateRegionLocation in ConfigPhysicalPlan and updated logging levels in ProcedureManager and DataNodeInternalRPCServiceImpl to improve region migration
added a new file ` FileDialogLeakTest . java ` to test the finalization of the ` FileDialog ` to ensure that the
hbase - 2596 addendum move testopentabletincoprocessor to org . apache . hadoop . hbase .
[ gr - 24937 ] disable uninterruptible feature for truffle .
[ flink - 20604 ] [ protobuf ] remove unused splitcontext method in pbcodegenrowdeserializer and pbcodegenrow
updated condition to check if dimensions [ 1 ] . disi is not null in DrillSidewaysScorer . java to ensure proper handling
updated methods in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , FakeMediaSource , FakeRenderer , and FakeRenderer for improved
added support for determining if the Java version is at least 9 or higher to ensure compatibility with Java 9 and above
updated FileReporter instantiation to explicitly cast null to String and File types to ensure type safety and avoid potential NullPointerExceptions
updated end - to - end encryption key existence check from isFalse ( ) to isTrue ( ) to ensure that end - to - end encryption
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing users to navigate to the home button in
added GET _ USER functionality to RpcServlet and RpcUtils , and updated related constants and methods to enhance user retrieval functionality and improve error handling
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable tests based on the operating system architecture to ensure
updated the handling of the ` notFound ` method to use ` originalStartClass ` instead of ` startClass ` to improve code clarity by
updated error message and added local handling in DexBody . java to improve clarity of error messages and enhance local registration functionality
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
change nimbus look and feel to metal if nimbus be nimbus but incompatible
updated regex pattern in AppPage . java to ensure proper formatting of the version string to improve code readability and maintainability
refactor animation listeners in LauncherAppTransitionManagerImpl to improve clarity and maintainability of animation handling to enhance code readability and maintain
updated error message to include version instead of base58 to improve clarity of error reporting for missing network entries
do n ' t copy extra data from offerpayload to newofferpayload in editofferdatamodel
refactor milestoneParameters initialization in TicketPage . java to use new parameter methods based on milestone status to improve clarity and maintainability of ticket
updated RFBattery initialization to use 80 instead of 640 in PipeItemsWood . java to ensure compatibility with the latest RFBattery
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` parameters to enhance the retrieval of cluster instances
set the default value of the downgradeAllowed variable to true in UpgradePack . java and add a corresponding test in UpgradePackTest . java
updated NameType usage in XML scanning implementations to use ATTRIBUTENAME instead of ATTRIBUTE to improve clarity and consistency in handling different XML event
added a configuration option to emulate the system load library and modified library loading logic to enhance functionality by allowing dynamic loading of native libraries based on
refactor sorting and sorting methods to use a dedicated comparator method in LauncherModel to improve code readability and maintainability by centralizing collation
updated file handling logic in DefaultPlatformManager and FatJarStarter to ensure proper directory creation and closing of entries to improve resource management and
updated the ` doTest ` method to include an additional string format for better debugging to enhance readability and debugging of secret key credential handler tests
( chore ) camel - example - spring - boot - starter - spring - boot - starter - spring - boot - starter
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 20650 testfulllogreconstruction . testfulllogreinitialization fail on slow machine due to hbase -
added a ` reuseAddress ` property and methods to ` DatagramSocketOptions ` for setting buffer and traffic class , along with overrides to enhance
fix ` ` server shut down . ' ' message ( # 5889 )
douniaberrada : remove deprecate ` ` locatable ' ' interface
updated error messages in VersionInfo . java to clarify that the VERSION _ FIELD must be searchable and have docValues to improve clarity
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to stream
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintainability
updated formatting of closing braces in Navigator . java to improve code readability and maintain consistency
changed access modifier of constants from private to default in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest . java to
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator to enhance query creation capabilities for greater
refactor grouping expression handling in CalciteSqlParser to improve clarity and maintainability to enhance code readability and maintainability by reducing
refactor MappedByteBuffer and FileChannelLinesSpliterator to utilize Unsafe and AtomicInteger for buffer reference management to improve memory management and ensure proper resource
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` to improve code readability and maintainability by
fix ( circuitbreaker ) : add schedule ( ) method to circuitbreakerimpl
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags by
updated configuration property from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in Submission
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
added synchronized keyword to ` addExportedCount ` and ` getExportedCount ` methods in ` EntityGraph . java ` to ensure thread safety when
updated import statement for ` IntRangeUtil . requireNonNegative ` from ` IntRangeUtil1 . requireNonNegative ` to ` IntRange
updated HttpParser to handle illegal characters and added a test for encoded headers in HttpParserTest to improve error handling and ensure correct encoding of HTTP
updated the layout reference from ' trends _ activity ' to ' configuration _ activity ' in ConfigurePagerActivity . java to ensure the correct
updated print statement to include position information in SLWTTextListing . java to improve clarity of error messages related to SLWT
refactored ForceLeaderTest and HttpPartitionTest to use a new ForceLeaderWithTlogReplicasTest class to improve test reliability by
rename Thread class to improve clarity to enhance code readability and maintainability
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES to use multiple suffix sets and introduce a forceTemplateMode flag to
camel - 8540 : fix the issue of set the namespace on the cxf element .
formatted the YamlRepresenter constructor and reformatted the RepresentConfigurationSection class to improve code readability and maintain consistent formatting
updated the method to format day and month values in the ` ToChar ` class and added a test for it in ` TestFunctions ` to
added validation checks for transaction list and write ID lists in GenericUDTFGetSplits . java to ensure proper configuration for transaction and write ID
updated logging statements to use ` Collections . emptyList ( ) ` for empty checks and replaced ` ArrayList ` with ` Collections . emptyList ( ) `
added null check for book path and improved logging messages in DataHolder . java ; introduced a new method hasNoData in Picture . java
added a check for ` NextSid ` in the ` manufactureStrings ` method and updated the ` addToStringTable ` method to handle
updated the handling of grid column values in AppPreferencesImpl and ExtendedListFragment to use DEFAULT _ GRID _ COLUMN instead of a hardcoded
updated the return message for the " diff " field in Platform . java and its test in ComparisonFailureWithFieldsTest . java to clar
add buffer . waitingforkeys flag in decoderinputbuffer and fix comparison in clippingmediaperiod
removed the " / api " prefix from the API path annotations in OkexV3 . java to simplify the codebase by eliminating unnecessary
updated comparison conditions in LineUtilitiesTests to use subtraction instead of direct comparison to improve readability and maintainability of the code
added error logging for varargs and old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T656
add warn log if defaultdrmsessionmanager be use on wrong thread
added a new METHOD type to VariableContext and updated related logic in VariableContext . java , along with corresponding test cases in TestVariableContext .
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid JSON inputs in
update buffer limit logic in Piece . java and SharingPeer . java to correctly account for the current position of the buffer to ensure proper
updated GatewayAutoConfiguration and related classes to incorporate HttpClientProperties for response timeout handling to enhance flexibility in HTTP response processing by allowing
refactor NativeLinkTarget handling in CxxLibraryFactory and NativeLinkTargetGroup to improve code clarity and maintainability by using a more
camel - 16400 : added unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance the handling of field access expressions in the query plan
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
use proxy predicate in webclientrequestbuilderimpl . relativize ( uri ) instead of prepareuri ( )
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and correctness in certificate management to enhance code readability and
added reflection access checks in NativeObject and Bootstrap classes and updated related method names in ReflectionCheckLinker to enhance security by ensuring proper access control
removed the ` public ` access modifier from the constructors of ` CollisionMap ` to allow for subclassing of ` CollisionMap `
replaced the ` @ NotNull ` annotation with a deprecated ` @ Deprecated ` annotation and added a null check for the ` input ` parameter to
refactor logging level handling from if - else statements to switch - case statements in ConfigurationValueConverter . java and Main . java to improve code
cloudstack - 8238 : remove region _ id from system . account . user . domain . id and region . account . domain .
added support for handling EncryptedDocumentException in OldExcelExtractor to improve error handling for encryption issues in old Excel files
add -- add - exports = com . oracle . svm . nativeimage . builder / com . oracle . svm . core . j
removed unnecessary spacing in the visibility setting of the image holder to improve code readability and maintainability
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds and adjusted sleep duration from 10 to 1 milliseconds to improve
updated file creation logic in ShadowContext and refactored deleteDir method in ContextTest to improve directory management and ensure proper deletion of external files
refactor ExceptionFactory to use Class . forName for clarity and improve error handling to enhance code readability and maintainability by eliminating
updated WAIT _ TIME _ MS constant from 10 , 000 ms to 60 , 000 ms to allow for a longer wait time before proceeding with
updated ConnectOAuth2RequestFactory to include an " aud " extension and modified ConnectTokenEnhancer to use it for JWT claims to enhance
( chore ) camel - kafka : remove default value for ` ` breakonfirsterror ' '
added a new constant for the selectable item background in R . java to enhance the visual appearance of selected items in the application
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
fix nullpointerexception in txnsetoperation due to change in entryeventtype
[ java ] add resumablerandomaccessfilelistener to avoid memory leak .
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
updated HSSFDataFormat to dynamically set formats based on the size of the existing formats to ensure consistent handling of format records in the workbook
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated the condition to check if the compressed chunk length does not exceed the maximum compressed length to ensure that the checksum length does not exceed the maximum
camel - 16400 : added support for idempotent processor in camel - spring - data - spring - boot - starter - spring - boot
fix vanilla bug where vanilla use metadata here instead of damage .
added logic to handle local repository resolution in LegacyLocalRepositoryManager to ensure correct artifact path resolution based on the layout type
added error handling and logging for task manager initialization in LocalInstanceManager , LocalTaskManagerThread , JobManager , and TaskManager classes to improve
add - dclassifier and - dpackaging option to artifact resolution exception
updated file path retrieval methods to use internal temporary path based on context to enhance security by ensuring temporary file paths are consistent across different contexts
refactor FeedEntryStatusDAO to implement a new method ` findByEntries ` for fetching FeedEntryStatus based on entries and subscription to improve code
added thread execution handling in ContextImpl and improved test cases in BlockedThreadCheckerTest to enhance performance and ensure proper execution of Verticle
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to accept a string for formatter arguments and added a null check for
updated file loading logic in LoadContactsTask to handle different Android SDK versions to ensure compatibility with newer Android versions and improve file handling
replaced calls to setRemoteAddress and setRemoteHostname with direct assignment of remoteAddress and hostname to streamline code by eliminating unnecessary setter
added a null check for the realClass in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements to
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory `
added a test to verify that requesting a plain HTTP endpoint over HTTPS throws SSLException to ensure proper handling of SSL - related exceptions in the server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy . java to improve accessibility of consumer and producer in the application
updated widget event handling logic in PageChangeListener . java and modified widget ID replacement in FrameRenderer . java to improve clarity and functionality of widget
corrected the spelling of " Email " to " SMS " in the warning log message to improve clarity and accuracy of the warning message
# 119 - enh : add draftqueryoptimise ( ) method to beandescriptor and beandescriptordrafthelp ( # 119 )
added error handling for IO exceptions in MultipartBody . java to improve robustness by preventing NIO issues during file transfer operations
fix checkstyle issue in util / executablefactory and zipfolder . java ( # 1308 )
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
fix ` ` attach file ' ' do n ' t work if user specify ` ` working directory ' '
updated SchemaCrawlerOptionsBuilder to use LoadOptionsBuilder and set schema info level to improve configuration flexibility for schema crawling options
renamed the package from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary `
replace exception throwing with returning null in TestReader . java to improve error handling by returning null instead of throwing an exception for unknown operation names
added methods to set name , enabled , and expanded properties in ProjectProperty to enhance property management by allowing customization of project properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper resource management and prevent
[ hotfix ] [ doc ] fix typo in datastreamjob
added error handling for ErrnoException in TestContentProvider . java to ensure proper resource management and prevent resource leaks
camel - 15562 : camel - cxf should use classhelper . getrealclass ( ) to get the class name of the endpoint
added a conditional check for " h2 - 14 " protocol and modified the return condition in the HTTP2ServerConnectionFactory class to ensure compatibility with
updated method symbol handling in LambdaToMethod . java and added lambda detection in ClassFileVisitor . java to improve clarity and functionality of method symbol
tregex : fix typo in whnp rule
increased the timeout duration in the copyURLToFile method from 5000 to 60000 to allow for more time for the cache file to be
added a call to setSlop ( phraseSlop ) in QueryParser . java to set the slop factor for phrase processing
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
update server port from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure compatibility with the latest
add ` ` scheduleparallel ' ' method to game scheduler and use it in ` ` screengrabber ' '
updated visibility condition for the compound view based on the presence of edit options to ensure that the visibility of the compound view is only displayed when the
updated the progress calculation in DepthController . java to ensure it does not exceed a defined maximum of 1.1 f to improve user experience by
remove session . packetreceived ( packet ) , it be no longer need .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service before accessing its properties in the SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadata
added ` hidden = true ` to the ` arity ` and ` description in the ` PantheonCommand ` class to enable the account level
added a method to exclude the class " androidx . room . CoroutinesRoom $ Companion " from instrumentation to avoid unnecessary instrumentation
modified the ` isSupported ` method to synchronize on ` HttpCallerInfo ` to improve thread safety when checking if the authentication is supported
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unnecessary initialization logic
camel - 16400 : fix the issue of thread name resolution in queuereplymanager and persistentqueuerequestmanager
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added handling for tagged images in PdfDocument to ensure proper opening and closing of MC blocks for tags in the PDF document
log4j2 - 1343 add test case for patternselector .
danielwagnerhall : use selenium - server / core / testrunner . html instead of throw an exception
added a new ` MwThankPostResponse ` class and modified the ` thank ` method signature in ` Service . java ` to
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to implement it to support socket - based communications in the Jetty
removed duplicate lines for enabling and disabling the RevokingStore and adjusted the max size calculation to streamline the code by elimin
added test cases for implicit join queries in HQLTest . java to ensure correctness of query execution in multiple scenarios
updated assertions in NonVisualRegressionTest to normalize line endings to ensure consistent line endings across different operating systems
lucene - 3640 : fix indexwriter . close ( ) to not throw unreferenceable file when closing indexwriter
changed method modifiers from ` final ` to ` public ` for several methods in ` BaseError . java ` to enforce immutability and improve
added validation for the consumption percentage in ConsumeUserResourcePercentActuator . java to ensure that the consumption percentage is within valid limits to prevent invalid
added a boolean check for showing the old login in AuthenticatorActivity to ensure proper handling of legacy login display based on user preferences
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to clarify the purpose of the test class
removed redundant response page assignment in EditTeamPage . java to streamline code for better readability and maintainability
updated debug log message to include exception details to improve clarity of error handling during plugin credentials initialization
modified connection management logic to ensure the server socket channel is closed even when the live state is set to false to improve resource management by ensuring proper
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
refactor conditional logic in BaseSemanticAnalyzer to use a helper method for creating dynamic partition specifications to improve code readability and maintainability by
improve round hack when use scientific format
added a ` visitDirectory ` method to ` JarDirectoryStep ` and its implementation in ` DirectoryTraversal ` to enhance directory traversal functionality by allowing
added a new file JWKSetEditor . java to handle JWKSet text input to enable customization of JWK values for user input
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to simplify the finish method
add truffleboundary and fix truffle throwables in espresso .
changed the default value of byIP from true to false in Fetcher . java to disable threads per host by IP for improved performance
added a check for transactionTimeout in addition to queryTimeout in StatementUtil . java to improve query timeout handling logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher and included target configuration hash in HaskellGhciRuleIntegrationTest to
refactor ReplicaPosition class to improve code clarity to enhance maintainability and readability of the code
server : fix the issue of wrong initial delay for network usage stats update task
updated interpolators for animations in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use FINAL _ FRAME instead of a fixed value to
update navigation bar height calculation by incorporating swipe length to improve visual responsiveness based on display density
added a new module - info . java file and updated several classes related to Jetty ' s HTTP3 server to define module dependencies and improve
json : fix npe in jsontype # settextvalue ( ) and jsontest # testvariablevalue ( )
removed unnecessary parentheses in the assignment of the ` ctx ` variable in ` ResourceResolverBean . java ` to simplify the code by eliminating
[ hotfix ] [ checkpointing ] fix checkstyle violation in checkpointconfig
updated the method ` reportInnerClassReferences ` to accept a ` Element ` parameter instead of ` TypeElement ` and added a new test for finding
added space to the " test . tool . vm . opts " property in the command to ensure proper formatting of the VM options in the command
replaced FluentIterable with Java Streams for listing log files to improve code readability and performance by using Java Streams instead of FluentIterable
[ 3.0 ] fix register do n ' t work in jvm
do n ' t close session if otr mode be disabled
added new properties for node label outline size and transparency in PreviewProperty . java and updated renderProcessing method in NodeLabelRenderer . java to enhance
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated boolean parameter from false to true in the Win32FontManager class to ensure correct behavior of font management functionality
added null check and cursor setting in TreeVisitor . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added error handling policy implementation based on classpath status in JDTBatchCompiler . java to improve error handling behavior based on compiler environment settings
added content alignment point and text anchor properties to LabelBlock to enhance label rendering capabilities by allowing customizable content and text alignment points
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
updated the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
added Locale parameter to the fromRfc1123DateString method and updated its usage in Rfc1123DateDeserializer and KrakenServerTimeJSON
( chore ) camel - core : fix filedownloadviaproxytest to work with pdf file
[ el - rest ] add el - rest - output - no - hits property to output a flowfile even if no hits be find for
do n ' t use aggregation ratio when update volume and speed of a volume
[ java ] fix switch / cases indentation see http : / / issues . apache . org / activemq / browse / amq -
fix ( file ) : do not close the directory stream in readfilesp
refactor widget handling logic in PageChangeListener . java to improve clarity and maintainability to enhance code readability and maintainability by reducing
added isWriteProtected method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and modified username handling in FileSharingRecord
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions to improve error handling and logging for session
refactor CategorizationFragment to improve code readability to enhance maintainability and facilitate future updates
improve error message when bridge light be not reachable
fix # 74303 , add fmlclienthandler # isloading ( ) to prevent crash
updated return statements in UI . java and BlockInventoryFragment . java to use the system ' s bundle for mil , k , and th
replaced ` Preconditions . checkArgument ` with a switch statement for handling different string types in ` MessagePackParser ` to improve code readability and
added parameterized tests for querying queries with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure proper handling
added tests for JSON serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps in JSON format
added offset adjustments for x2 and y2 in GeometryUtils . java to ensure proper positioning of coordinates within the offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by eliminating unnecessary type
improve error message if no test plan be find
updated method names in ` GeneratedEntityTranslator ` and ` JdbcManagerSupportImpl ` to use ` Lazy < DbmsType > ` and `
modified the handling of the ` argIdent ` variable to conditionally set it based on the type of the identifier to ensure that the argument is
updated the default protocol setting in JettyHttpComponent9 . java to use the specified protocol from the scf object instead of a hardcoded
set displayVolume to true in VolumeVO class to enable display functionality for better user experience
refactor version method to accept a boolean flag and update logging to use it to improve clarity and maintainability of version output handling
updated the logic to check for global change logs and improved the logic for finding the correct change log parameters to enhance the robustness of the
changed log level from warn to debug for missing transactions in JtaTransactionManager to improve log clarity and reduce log verbosity for better debugging
hhh - 14827 skip setoperationtest on oracle due to illegalargumentexception
removed duplicate calls to startHandshake ( ) and setSoTimeout ( socketTimeout ) in Connection . java to streamline socket timeout handling and improve
updated action bar size calculations in multiple fragments to account for popup activities to ensure proper size adjustment based on the user ' s popup status
changed the CHA option from false to true in EspressoOptions . java and made classes DefaultClassHierarchyOracle and NoOpClassHierarchy
resolve http : / / issues . apache . org / activemq / browse / amq - 2696 - fix the context class
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions for testing random value generation to improve code readability and maintainability by
refactor WebDescriptor to conditionally redirect resources based on servlet version to improve compatibility with different servlet versions for improved compatibility
fix : add node readiness item check to baseoperation . isready ( )
replaced instances of ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to utilize the handler ' s
added a null and empty check for creationStatements in IdTableHelper . java to avoid unnecessary processing when creation statements are not set
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest RPC version in the
added security checks using ` System . getSecurityManager ( ) ` in ` ObjectStreamClass . java ` and ` ObjectStreamField . java `
refactored time calculation and file processing methods in Utils . java and made UGSCommandCount private in XLCDCommunicator .
updated DefaultMetricsTagProvider to return an unmodifiable map instead of an immutable ImmutableMap and added a null check for the host to improve flexibility in
simonstewart : fix checkstyle issue in util / clientdriversuite . java
change default value of opt2 from Level . OFF to Level . ERROR to improve error reporting by providing a more specific error level
changed instance variables from non - final to final in IconNormalizer . java for immutability to improve immutability and prevent unintended
added a boolean flag ` firstCallPrepareDo ` and modified the prefix invocation logic in ` PrepareInterceptor ` to control the behavior of the first
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality based on focus state and content type to enhance user
replaced ` asEagerSingleton ( ) ` with direct binding in ` Auth ` and ` AuthWithStoreFeature ` classes to simplify the
updated the incomingAssociations method to include a boolean parameter for ignoring invisible associations to improve flexibility in handling invisible associations during data model processing
cloudstack - 8237 : remove private ip from storage if it do n ' t exist ( # 8237 )
added a new command description for asynchronous profiling in ProfileServlet . java to provide guidance on the Basic Usage section on the Async Profiler Home Page
allow @ schema . require to be apply to ref field
rename configuration classes from ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreEnvironmentBootstrapAutoConfiguration `
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated UUIDs and unique values in ConfigStore , CommonSetup , and ItemUIDtoHueIDMappingTests to ensure unique identifiers are correctly
added a picture check before setting the image drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure the image is loaded from cache when
updated the description of the compaction mechanism for full CRUD tables to clarify that compaction behavior will always run via queries regardless of the configuration
added a null check for the storage path when checking if the waiting message is down to ensure that the process handles cases where the storage path is
refactor resize threshold checks to use a dedicated method ` checkResize ( ) ` across multiple classes to improve code readability and maintainability by
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
deprecate @ xmlattribute in favor of @ deprecate
removed redundant debug tracing logs in TouchInteractionService and RecentsAnimationDeviceState to streamline code and improve performance by eliminating unnecessary
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to compare hits2 and hits3 instead of hits to ensure correctness of test assertions for better accuracy in
added a new file ` LucenePackage . java ` containing a private class ` LucenePackage ` with a static method ` get ( )
increase the calculation of sizeInBytes by subtracting the value from existing . sizeInBytes to ensure accurate size calculation by subtracting the existing size
added estimation methods for aggregation evaluators and modified variable declarations to be final in multiple classes to improve code clarity and ensure immutability of
added a null check for getDrawerToggle before invoking onDrawerSlide in MainActivity . java to avoid potential NullPointerException when getDrawerToggle
added ` @ SuppressWarnings ( " unused " ) ` annotation to the ` convertToAuthentication ` method in ` DefaultAuthenticationAdapter . java ` to suppress
added functionality to scan modules based on the presence of ` overrideClasspath ` or ` overrideClassLoaders ` in ` Scanner . java ` to ensure
[ msbib ] handle corporate field in msbib export format
added a method to cancel core recovery in the CoreContainer class to improve recovery management based on ZooKeeper awareness and error handling
replaced direct calls to System . currentTimeMillis ( ) with a dedicated method for obtaining current time to improve code readability and maintainability by
removed debug print statements and simplified the logic for clicking the first item in RepoEditView . java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix typo in startup message
added security - related fields and updated the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java to ensure proper configuration of security expression root properties
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( ) `
updated the ` combine ` method in ` DistinctSqlAggregation ` to correctly accumulate values from ` other . values ` to improve the handling of
added a test for calling the login method on successful authentication in UserServiceTest . java to ensure that post - login activities are executed for users
refactor ExtractorFramesRare to allow dynamic instantiation of ExtractorSpanishStrippedVerb based on a dictionary path to improve flexibility
modified the ` CharArraySet ` class to simplify the handling of ` String ` and ` CharSequence ` types to improve code readability and maintain
updated error messages and added a check for audio and video track types in MuxerWrapper . java to improve clarity of error messages and ensure
replaced instances of JsBundleAndroid with AndroidPackageable and updated asset directory handling in JsBundleGenrule . java , updated tests in Js
added UTF - 8 character encoding handling and updated string lookup logic in StringDictionary . java and DictionariesTest . java to ensure proper handling of
replaced instances of " Logical Analyzer " with " Logic Analyzer " and removed applications array from the code to streamline the code and
refactor vector instantiation to use singleton pattern to improve performance by avoiding duplicate instances of the same class
removed syncMetaLeader ( ) method from CMManager . java to streamline leader synchronization process
modify contribution question to show ' no response ' instead of ' no response '
added TestLoggingExtension import and annotated DiagramRendererTest with TestLoggingExtension to enable logging functionality for testing purposes
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 535 : camel
added a new constant VIOMI _ WATERHEATER _ E1 in MiIoDevices . java to support the VIOMI
refactor SSL session data retrieval to use a local variable for clarity to improve code readability and maintainability by reducing redundancy
added a new file ` CreateNewSpreadsheet . java ` to create a spreadsheet with multiple rows and comments to facilitate the creation
replaced ` Duration ` with ` long ` for ` ttl ` and updated related methods in ` CacheProperties ` and ` RedisCacheConfiguration `
updated content URIs in LauncherBackupHelper , LauncherModel , and ShortcutInfo to use CONTENT _ URI _ NO _ NOTIFICATION to
update testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check for the character ' < ' in DocClassUtil . java to ensure proper handling of specific character cases in the code
removed String . format from the return statement in Workspace . java to simplify string formatting for better readability and maintainability
added import statement for Liquibase Scope and sent an error message if no validation errors are found to improve user experience by providing a clear
updated import statements and refactored web resource configuration logic in IntegrationTestContextLoader . java to improve code clarity and ensure correct servlet context
modified scroll handling logic in Component . java and adjusted method calls in Container . java and JavaSEPort . java to improve accuracy in component retrieval
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ClientStat class and updated StatsService and DefaultStatsService to use String instead of Long for client ID to improve clarity and
updated the expression replacement logic in CellContentConverter . java to include newline characters to improve readability and maintainability of the code
simonstewart : make the test more robust
mondrian : fix typo find by codespell on fossies . org
added thread dump logging and improved launcher permission handling in the ProcessTools and CustomLauncherTest classes to enhance debugging capabilities and ensure proper permissions are
[ tumblr ] remove unstable test for tumblr ripper
added a conditional check for symbol slots before converting storeType to ensure that conversion only occurs when the symbol has a slot for the specified storeType
move initialization of the extractor to the end of the chunk if the next load position be zero .
added UTF - 8 encoding handling and updated IndexWriter configuration in BaseLockFactoryTestCase . java to improve test output consistency and ensure proper encoding
tika - 2241 -- add support for dynamic serviceloader to tikaconfig and add a dummyparser for parser
updated imports and added error handling for package - info comments in DocLint . java and added new test files in DocLintTester . java
added IMPORT _ CMD constant and updated condition checks in DataImportHandler and DataImporter classes to support additional import commands in the data import process
add a test to ensure that InnerA and InnerB classes are not modified when ignoreDefinition is true to ensure that InnerA and InnerB
removed the import of android . util . Log in JettyService . java to streamline code by eliminating unnecessary dependencies
modified the ` checkItemPlacement ` method to accept an additional ` ArrayList < Long > workspaceScreens ` parameter and updated related logic to
[ java ] add a / quitquitquit to the webserver so we do n ' t kill the jvm
refactor LLRealtimeSegmentDataManager to store transformed rows in a list instead of single rows to improve code readability and maintainability by
added a check to skip processing if the system is Windows and include " Teredo " in the display name check to ensure compatibility with Windows
improve error message when add contact fails .
replaced registration of a bean definition with a bean component registration in AuthenticationConfigBuilder to improve code clarity and maintainability by using a more
updated the drawBitmap method call to use null for the bitmap ' s position to improve performance by avoiding potential null pointer exceptions when drawing a
update meitrack and totem protocol decoder to fix date format
changed visibility of getFontPath and getPlatformFontPath methods in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used in future versions
fix exception handling in test ( mapstore , mapstore , mapstore )
add an option to keep empty sentence in the sentiment pipeline .
updated createArtifactSubdirectory method to return a boolean and added error handling for directory creation failures to improve robustness by providing clearer error messages
removed the IDELazyTreeLoader class and replaced its usage with JavaCompilerService . NO _ MODULE _ COMPILER in JavaLanguageServer
added null check for answer in DirectAgentAttache . java to ensure proper handling of null answer resources
updated the ` sendEmail ` method to throw ` MessagingException ` instead of handling exceptions to simplify error handling and improve code clarity
add null check to pipeitemsobsidian to prevent crash
updated the ` getDateMathParser ` method to accept a ` Locale ` parameter and modified related calls in ` DateFormatEvaluator ` and ` FileList
added a boolean flag ` includeDecals ` and its getter / setter methods in ` StorageOptions ` , and created a checkbox for it in
updated generateDocumentation method to include a null parameter and added a suppression for the getImplementedDatabases method in LiquibaseTest to enhance
updated HiveProtoLoggingHook to use a dynamic queue for performance logging and refactored test assertions in TestHiveProtoLoggingHook to improve
updated log message formatting in several Java files to improve code readability and consistency
update class file version check to use the current version of the system to ensure compatibility with different Java versions
added a new test class ` LdapPasswordAuthenticationTest ` for testing LDAP password authentication functionality to ensure proper functionality of LDAP authentication in the application
replaced OrcInputFormat with BasicStatsNoJobTask for footer scan checks to improve code clarity and maintainability by using a more
do n ' t show ` ` save all ' ' notification if project do n ' t exist
updated the implementation of the VisibleAdvance class to improve performance and maintainability of the code
fix # 1193 : do n ' t reconnect on startup in aggregator
added a check for dynamic number columns in EdgeDataTable . java and NodeDataTable . java to ensure correct handling of sparklines based on dynamic column
added null checks using ` Objects . requireNonNull ` for ` getGroupId ( ) ` , ` getVersion ( ) ` , and ` mapPlugins ( )
updated API assignment to handle null APIInfo gracefully to ensure robustness by preventing potential null pointer exceptions
updated HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration and caching behavior
added lighting functionality and debug logging in PhotoPanel and FlameRenderer classes to enhance texture and shader management functionality and improve debugging capabilities
updated scene size from 460 to 520 in FxWindow . java and added context menu functionality in InsnListEditor . java to
added bounds checking to the parsing logic in CSSParser . java to ensure proper handling of character lengths and avoid potential ArrayIndexOutOfBoundsException
added a check for the " isLookAndFeelDecorated " property and set default look and feel decoration to true based on the
removed the ' NOT EXISTS ' clause from the SQL query in HostRoleCommandDAO . java to simplify the SQL query by eliminating unnecessary
updated LJ1200Message . java to replace F2 _ TEST with F5 _ TRANSPONDER _ TEST _ REPLY and F
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to utilize the ` ColorStorage ` interface
refactor String class to improve code readability to enhance maintainability and facilitate future updates
removed unused SLF4J logger imports and initialized LOGGER in multiple classes to streamline code and improve maintainability by eliminating unused logger
added a method ` getGlobals ( ) ` to return an array of ` Entry ` objects from the map to provide a way to retrieve
added multiple assertions to verify the behavior of ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin
test : migrate cudfiletest to junit 5 ( # 4358 )
replaced hardcoded semicolon with a dynamic path separator to improve flexibility in handling classpath paths
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow the method to be called without an
added assertions for presence of fields in the AbstractEntity and Person classes in InheritanceTest . java and changed field retrieval method in TestUtil .
removed the ` conf ` parameter from the ` Outlink ` constructor calls across multiple parser classes to simplify the instantiation by eliminating unnecessary configuration
removed the ` LexicalContext ` parameter from multiple ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
added a new import and modified the return statement in UseLambdaForFunctionalInterface . java to include modifiers and remove unused imports to improve code
removed the ` appendClassSelector ` method call when adding a file set to ` m _ classFilesets ` to streamline the addition of
removed the check for the root input type in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating
fix miss mapping miss from registrymanager . active . getregistry ( )
reordered assignment of x3 and y3 variables in Intersector . java to improve code readability and maintainability
added default methods for SBE encoding and limit in MessageDecoderFlyweight . java to indicate that these methods are not implemented by the S
updated Elasticsearch version references in ElasticsearchContainerTest . java and added a new test method for RESTful cluster health to ensure compatibility with the latest Elasticsearch
[ bugfix ] fix buffer copy in work receiver .
added version ID handling and updated cluster name initialization in ClusterDefinition . java and GSInstallerClusterProvider . java to improve clarity and functionality
camel - 14836 : camel - ftp - remove the setconfiguration method from camel - ftp and move it into camel - ftp
[ zeppelin - 4892 ] fix ` ` can not fetch dependency ' ' error when zeppelin -
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to ensure
added a check to return early if basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added a method to initialize the after the first database connection in JdbcPostgresqlDAO to ensure that values with the same time are upserted for
updated WebSocket configuration to set a maximum message size and added input buffer size validation in AbstractWebSocketConnection to enforce a minimum buffer size limit and prevent
replaced the undeleteAll and rollbackUndeleteAll boolean flags with pendingDeleteCount and assert statements in SegmentReader . java to streamline
added null check for scopes in ClientRegistration . java and updated corresponding test cases in ClientRegistrationTests . java to ensure proper handling of null scopes
added null checks for orderBy before adding it to the expression and explanation to avoid potential NullPointerExceptions when orderBy is not initialized
[ hotfix ] [ test ] use hamcrest assertthat instead of junit assertthat in clusterentrypointtest
server : do n ' t send back snapshot event for kvm vm in back up state
replaced direct call to LogUtils . initHiveLog4j with a variable initialization message to improve code readability and maintainability by
added a check for empty tasks before processing the first asset in AssetManager . java to ensure that asset loading tasks are only processed when there are
[ openpgp ] fix delete pubsub node , if node do not exist .
improve the datastore api to return all the value of the entity instead of create a new one
added checks for empty result strings in Code128Reader and Code39Reader , and handled IOException in FalsePositivesBlackBoxTestCase to ensure
replaced TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order in the SSLContext implementation
updated control character validation logic in Escaper . java and adjusted expected string formatting in InternationalizationTest . java to improve accuracy of character
modified the ` ProviderSqlSource ` and ` SqlProviderTest ` classes to handle ` CharSequence ` instead of ` String ` for provider methods and
updated import statements and modified logic for handling aliasChildren in InternalMNode . java to improve code clarity and ensure null safety when accessing alias
added a method to calculate the layout transition offset for a page in PagedView . java and updated Workspace . java to use this method to
renamed ` synthetic ` to ` pruned ` and updated related code for clarity to improve code readability and maintainability by using a more
added a method to set the accessibility of the method in WidgetInterceptor . java to ensure the method is accessible for better access control
added a condition to check if the raw name is not " database . server . id " before setting the literal initializer to ensure that the default
updated Mozilla version in AbstractRipper . java from " Macintosh " to " Windows NT 10.0 " to ensure compatibility
added a menu item to browse a web interface URI in BasicSystemUtils . java to enhance user experience by providing a link to the server '
added support for a new ` actualValue ` variable and updated related logic in ` HandleGetter . java ` and ` HandleGetter . java `
fix possible ArrayIndexOutOfBoundsException when building record in EncryptedSlideShow . java
[ hotfix ] [ checkpointing ] add more debug information to checkpointio and filecheckpointio
call before avatar postLoad in the Player class to avoid null pointer exceptions when loading battle pass manager
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified command line arguments in PortForwardingContainer . java to
added a large array and forced garbage collection in ThresholdTest . java to optimize memory usage during tests
updated condition checks in StdErrLog and added debug logging assertions in StdErrLogTest to enhance log level management and improve test clarity for
fixed - invocation of rremoteserivce . getremoteserivce ( string name ) method throw classcastexception . #
added methods ` isSelected ( ) ` and ` setSelected ( boolean ) ` to the ` MultiButton ` class and updated the ` Selected `
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align with the new activity
removed unnecessary whitespace in the BrokerController . java file to improve code readability and maintainability
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve resource management and ensure proper closure of Redis connections
updated background color handling in ProgramGridCell . java and refactored getBrandColor method in Utils . java to improve code clarity and
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters for various Default classes in ToolingApiLauncher to enhance flexibility and maintainability of the tooling API configuration
removed a fixed value of 55 from the test cases in TestPayloadCheckQuery . java to clean up the test code and improve readability
updated ConsoleReader to handle masking correctly and modified ConsoleReaderTest to include a new test for reading lines with mask to improve character printing functionality
added user information to the command output in BaseCommand . java to enhance debugging by providing context context when the command is canceled
rename org . graalvm . compiler . test to org . graalvm . compiler . api . test to fix build
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
updated version specification check in StreamExInternals . java and modified dropWhile logic in StreamExTest . java to ensure compatibility with Java 9
updated texture and music files from " data / wheel . png " to " data / sys . png " in DecalTest and Music
updated unregistering and unregistering of the system dialog receiver to ensure proper resource management and prevent potential memory leaks
updated import statements in HostsRemovedEvent . java for consistency to improve code clarity and maintainability
added a new boolean flag ` allowIntrospection ` and updated related methods in ` ClientDetailsEntity ` , ` ChainedTokenGranter
replaced calls to ` write ` with ` writer . write ` with HTML encoding for remote user , session attribute names , and content to ensure
added new link statements for PhraseQuery , PhrasePrefixQuery , and SpanQuery in the Query . java file to improve code readability
replace ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` CommentsParser
replaced the method ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` with a more explicit check
updated method signatures in AbstractAssert , Assert , Descriptable , ExtensionPoints , and DateAssert to use Object instead of generic type A to
renamed ` ThrowingFunction ` to ` ThrowingFunction ` and updated its package and method signatures to improve type safety and clarify
refactor getUploaderBehaviour and setUploaderBehaviour methods in AppPreferences and PreferenceManager to use instance methods instead of static methods to improve
fix ( prettyprinter ) : fix the bug in getfinalfield ( ) and getfinalfield ( )
updated BitmapDrawable instantiation to use Robolectric ' s newInstance method to ensure compatibility with Robolectric for Bitmap drawable creation
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable ` c ` to improve clarity and
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a volatile counter for reinvocations and updated log messages to track the number of concurrent executions to improve debugging by tracking the number of concurrent
modified the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure correct
added a break statement in the Recognize . java file to ensure the loop terminates when a specific condition is met
added Haptic feedback functionality to the home screen in multiple classes to enhance user experience by providing haptic feedback based on user preferences
refactored formula handling in ExcelBatchReader and added tests for text and numeric formula in TestExcelFormat to improve code clarity and ensure
fixed bug 1244445 - immutablefield no long report a false positive on anonymous inner class .
added a user agent field to CommaFeedConfiguration and updated HttpGetter to use it to ensure proper user agent is used based on application settings
updated the ` @ XmlAttribute ` annotation to be optional in ` AvroDataFormat . java ` to ensure that the ` @ XmlAttribute `
change log level from info to debug for file not found message to reduce log verbosity for better traceability
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
replaced the version check logic in BukkitMain . java to use an offline player method to ensure compatibility with newer versions of OfflinePlayer
camel - 16400 : camel - core - optimize routescollector to reduce log verbosity
added a vertexColor property and modified color rendering logic in PShape3D . java to allow dynamic setting of the vertex color based on its
modified the ` printForeignKeys ` method to include a ` isPkColumnFiltered ` parameter and updated related logic for filtering primary key columns to enhance
removed the use of Shadow . extract ( ) from ShadowMotionEvent . java to simplify the code by directly using the matrix ' s getValues method
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
removed the caching of class definitions and simplified the return logic in GroovyEngine . java to simplify the code and improve readability by eliminating
fix ( plugin ) : move brandingservlet from web to branding . plugin and add plugincontextlistener
removed duplicate print statement for command in NativeCodeGenerator . java to streamline output by eliminating redundancy
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve
added a new test case to verify the behavior of ` hasCause ` with different types in ` ThrowableAssert _ hasCause _ Test . java
updated variable names for flattening and packing in AutomaticDependencies . java to improve clarity and maintainability of the code
changed the variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity by using a more descriptive variable
simonstewart : add more test for firefoxdriver . setprofile and desiredcapabilities . setprofile .
camel - 14850 : added route . getdescription ( ) to allow for customization of route description .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure the edge has a valid weight for processing
[ te ] fix tariffs cost calculation for usage table
added " adsrc " and " adrelid " fields to the SQL query in DatabaseMetaData . java and updated the tuple initialization logic to
throw an error if we ca n ' t build binarized sentence
updated the ` toString ( ) ` method in the ` User ` class to include detailed user details to enhance debugging by providing more detailed information about
updated message body extraction logic in MessageHelper . java to improve error handling for null message bodies
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to execution
improve rosteraccess . cansubsubscribing ( ) method to also check visibility of group .
added a classpath reference for " maven . test . classpath " in AbstractJRubyMojo . java and removed unnecessary suppress warnings in C
updated method handle assertion to use ' mtype ' instead of ' rtype ' and added a new method ` userMethod ` to improve type comparison logic
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory and LegacyHTMLStripCharFilterFactory to enhance functionality and
updated width and height comparison conditions in URLImage . java to ensure that the image dimensions differ from the placeholder image ' s dimensions before proceeding
added checks to ensure class names do not start with " META - INF / " and modified package name extraction logic to enhance class name handling and
added final modifiers to parameters in createImageToFileSystem and createImageToStorage methods and implemented background task forEdt devices to enhance code readability and
updated the assertion in StackWalkerTest to use a dynamic expected value based on the version check to ensure compatibility with different Java versions and improve test
changed the access modifier of the ` addViewportJob ` method from protected to public to allow subclasses to access the ` addViewportJob ` method
removed the partition parameter from the buildFlow method and related tests to simplify code by eliminating unnecessary parameters
removed server restart settings and check running status in TestDatabase . java to streamline server execution by eliminating unnecessary status checks
added null and empty checks for block in NodePathsConvertOperator and modified return statement in SchemaQueryMergeOperator to improve robustness by handling potential
added functionality to retrieve and display the total harvesting time of the Ice Agent in multiple classes to enhance the call information display by providing
updated font drawing parameters for FPS , Count , and lastMaxActive in ParticleEditor . java to improve visual clarity and performance of
added logic to update the " hadoop - env " configuration with a default value of " keyserver _ port " in UpgradeCatalog240 . java
added transparent background color to SvgViewerFactory to enhance visual appearance by allowing transparent backgrounds
removed minSdk configuration from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code by eliminating unnecessary configurations
refactor the ` containsExactly ` method to accept varargs instead of first and rest parameters to improve code clarity and maintainability by using
updated Bucket4jFilterFunctions to use a new capacity builder method and added a check for a non - empty key before creating a proxy to
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability
added a new ` postExecHooks ` set to the ` Generator ` class and updated transformations in ` QueryProperties ` and ` Optimizer `
added error handling for NoClassDefFoundError in REngine . java to set the supported flag to false to improve robustness by preventing
refactor ` TraceFilter ` and ` TraceWebFilter ` to utilize ` SpanAndScope ` for span management to improve span management and
updated exception handling in AbstractUpdateCommandStep to check for null values before retrieving the message to improve robustness by avoiding potential null pointer exceptions
updated SolrServerException to include the base URL in the exception thrown to improve error handling by providing the base URL for better context
modified landscape and landscape return values in HSSFPrintSetup . java to ensure correct display behavior based on landscape state
modify return statement to handle null values in JavaVoidObjectInspector to improve robustness by preventing potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure that argument names do not contain spaces and improve error handling
added in - memory background location listener handling in AndroidLocationPlayServiceManager to improve user experience by allowing dynamic location updates based on context
changed the condition from checking if primitiveType is not GL10 . GL _ POINTS to checking if primitiveType equals GL10 . GL
trufflestring : do n ' t rely on byte [ ] comparison when length be zero .
added a line to set the command list in ComboBox to ensure the command list reflects the current state of the component
nifi - 9373 : escape filename in alias for nifi - toolkit
updated command - line arguments in ZkCLI . java to use localhost : 9983 for zkcli commands to improve clarity and accuracy of
updated progress comparison in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` method
added a check for remoteGrpcStatus before posting a console event to ensure that the build fails only when the remote grpc status is OK
refactor method signatures in XYItemRenderer and related classes for improved readability to enhance code clarity and maintainability by standardizing parameter
fixed tick entity not be add to the entityid list in forgechunkmanager . gettickdata ( )
added a private static method ` getErrorString ` to handle various error codes in the GLSurfaceViewAPI18 class to improve error logging
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for feature registry .
updated the server URI assertion in RFC2616BaseTest . java to use " myhost : 1234 " instead of the server URI to ensure
added a method call to addToHelperList in the Construction class to enhance the handling of helper lists during construction
added a condition to skip the first element of a string in the GlyphLayout class to ensure proper handling of the case where the first element is
added security permissions handling and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management
refactor directory synchronization logic in ReceiveExternalFilesActivity to handle null file paths to improve robustness by ensuring a valid file path is used and
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed debug logging for components in BarrowmanCalculator and simplified the deltap calculation in TubeCalc to improve logging clarity and eliminate unnecessary
added conditional logic to check if the object is an instance of Node before adding it to the node table to ensure proper handling of node and edge
added a method to register extra components in the BaseBrokerStarter class to facilitate the registration of the BrokerAdminApiApplication for
added a test method for bug 4658 in MultiCfQueryExecIT . java and modified the query execution logic to ensure proper handling of
peergroup : do n ' t pick bloom filter for peer that do n ' t support witness .
fix a bug in the builder that cause the builder to go into infinite loop .
updated ConfigNode and RatisClient classes to utilize a Supplier for RatisConfig . RatisConsensus configuration to improve
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
added a conditional check for the annotation of ManagedService before unregistering and registering JMXHelper to ensure that JMXHelper is only registered when the annotation
tika - 3357 -- fix packageparser to detect non - unicode entry name in zip file .
added a new file ` TestSplitThruPhiDivMod . java ` with multiple methods to demonstrate the problematic division behavior
added methods to lookup generic types and subclasses in TemplateRegistry . java to improve type handling and registration logic to enhance flexibility in handling generic type
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify unavailable language symbols for improved user experience
modify byte array initialization and transfer logic in TransferCompletionHandler . java to ensure a minimum of 8192 bytes before sending to improve performance by avoiding
replaced window focus listener with a window adapter in multiple menu classes to improve window management and enhance focus handling functionality
refactor error handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve robustness by avoiding potential null pointer exceptions
pdfbox - 4892 : use the center and extent of the skeleton ' s bounding box when render a skeleton with a scale .
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added @ ComponentScan annotation to SpringWebConfig . java to enable scanning of component resources in the application
removed the ` getAccount ` method from ` UserListItem ` to streamline account retrieval process by eliminating unnecessary method
added a test for installing packages in ShadowPackageManagerTest and updated handling of process names in ShadowPackageManager and ShadowPackageManager to ensure
refactor AvailableSettings class for improved clarity to enhance maintainability and readability of the code
added constructors and methods to the TransactionTrace class for initialization , execution , and finalization to enhance the functionality of the TransactionTrace class by allowing
add ` ` hazelcast . client . shuffle . member . list ' ' property to shuffle member list
changed the type of ' val ' from Text to CrawlDatum in SegmentReader . java to improve type safety by using the correct Crawl
refactor JsonDeserializer class to improve code structure to enhance maintainability and readability of the code
updated ` TsfileDBConfig ` and ` QueryProcessExecutor ` to use ` ThreadLocal ` for ` fetchSize ` to improve thread safety
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify that the
removed import of ExecutionContext in TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure a default value is used for the title
added handling for empty response bodies in AsyncHttpClientCall and created a test for null values in AsyncHttpClientCallTest to ensure that empty responses are
deprecate embeddedserverinstance in favor of the new one
change macadapter to use reflection for registration of mac event .
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated associated qualifiers and methods to
modified the return statement to consistently return the result of the toEnum method call to improve code readability and maintainability
made the ` hideUnprivilegedObjects ` variable final in ` PgConnection . java ` to ensure immutability of the ` hide
fix unit test that fail on slow ci server
added a condition to save Giphy video support on Android Q and above to ensure compatibility with devices running Android Q and above
fix issue with serialization of delegate variable in service task
refactor various ticket registry and service classes for improved organization to enhance maintainability and readability of the codebase
replaced manual retrieval and retrieval of logging instances with a more concise computeIfAbsent method to improve code readability and maintainability by reducing
deleted the ` DataOutputOutputStream . java ` file and updated imports in ` HbaseObjectWritableFor96Migration . java ` to streamline
removed " hive . stats . column . autogather " setting and updated the expected rowid value in the list of entries to ensure that the
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for enhanced class information
replaced hardcoded provider name " AndroidOpenSSL " with a dynamic retrieval of " Conscrypt " in multiple classes to improve flexibility
added imports for Captor and CaptorAnnotationProcessor , and modified MockitoBeforeTestNGMethod to process Captor instances to
added checks to ensure that only run class and method names are enabled and throw an exception if no test cases are found to improve error handling and
updated import statements and refactored prefix computation logic in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure
fix import bug by use the new osm api
danielwagnerhall : add retries to the base url of the client to handle session creation
changed the visibility of mHideSysUiScrim from final to non - final and added functionality to control the visibility of the screen based
updated method signatures and logic in Call and OkHttpCall classes to improve call cancellation handling and error reporting to enhance code clarity and ensure proper
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
updated the RequestMatcher interface to extend from Spring Security ' s util matcher to ensure compatibility with Spring Security ' s security framework
added IF to the list of constants in DeferredAttr . java and created a new abstract class ImplicitLambdaConsideredForApplicabilityTest
[ j2kt ] add test for j2kt boxing constructor and valueof .
added tests for display metrics qualification and updated device configuration methods to ensure proper handling of display metrics with density and dimension settings
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource used in the RootCursor from a logo to a mipmap icon to improve the visual appearance of the launcher icon
added errorBuilder . setContentText ( content ) to FileUploader . java to set the content text for error handling
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt user trades from Abucoins fill data to improve trading data handling for better trading capabilities
updated event handling logic in PlotSquared , Claim , and Delete classes , and modified clear logic in SetBlockFast _ 1 _ 8 to improve
simonstewart : add proxy support to the htmlunit driver
added handling for VARBINARY data type in BlobType . java to ensure compatibility with VARBINARY data types in the database
http : / / issues . apache . org / jira / browse / amq - 4358 - fix setcookiestup
fix thread safety issue in libfficontext . getsimpletypeinfo ( )
updated InboundBuffer to use ContextInternal for context handling and introduced a new thread check method to improve thread safety and ensure correct context is used
added a new method ` deadServerNoTimeout ` and modified the ` killSwitch ` method to include a timeout parameter to improve error handling and
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure
camel - 8271 fixed the unit test error of cxfmessageheadersrelaytest
refactor multiple UI classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added boost set parameter handling in ComponentAssemblySaver . java and modified return value in BoosterSet . java to improve boosting functionality and
add support for proxy host and port in jabref . fix # 2696
updated metrics key from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` and adjusted interval
replace InternalError throwing with returning false in mmm Class . java and ppp Class . java to improve error handling by returning false instead of
replaced mortbay logging with Apache Commons Logging in TestIPCUtil . java to improve logging clarity and maintainability by
removed the chunked transfer encoding check from the NettyRoutingFilter to simplify the code by eliminating unnecessary logic
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure all attributes are cleared before processing
updated the ` VerificationAfterDelayImpl ` class to include a polling period and improved error handling during verification to enhance the reliability of verification
added compaction feature to SessionState and modified masking logic in SemanticAnalyzer to ensure proper handling of compaction during query processing
[ zeppelin - 4892 ] copy all jar file to / interpreter / * . jar when start zeppel
hbase - 25827 hbaseadmin # gettableregions ( ) should cleanup catalogtracker when gettableregions (
added an @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to issues related to partial escape analysis
updated ` calcXBounds ` method implementations in ` BarLineScatterCandleBubbleDataProvider ` and ` CombinedChartRenderer ` to
added a try - finally block to reset the XML reader handlers to ensure proper resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of the ` UseDiamondOperator `
added a null check and ensured the result set is closed before closing it to avoid potential NullPointerExceptions when closing the ResultSet
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest database
fixed bug 1244445 - usesstringbufferlength no long report false positive for literal .
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
updated the createDb method to return a Connection object instead of void to ensure proper resource management by closing the database connection
renamed CreateCustomMetric , ListResources , and its corresponding test classes to improve clarity and maintain consistency in naming conventions
hbase - 24979 add option to limit off - peak maximum compaction size
updated BitstampDepositAddress to handle both " address " and " address " as JSON and added a new DepositAddressJSONTest
replace IllegalStateException with an IllegalArgumentException in BufferingResponseListener to ensure proper handling of buffer capacity limits
updated the method to check for absolute paths using ` toAbsolutePath ( ) ` instead of a direct reference to ` linkPath ` to ensure
updated ` InvocationFinishedEvent ` class to implement ` MetricsEvent ` instead of ` Event ` and replaced ` operationType ` with ` InvocationType `
refactor network interface enumeration to check for multicast support before returning the first network interface to improve robustness by ensuring only supported multicast network interfaces are
replaced the existing validation check for a valid checksum with a loop that checks all valid checksums to improve code readability and maintainability by redu
added a clone method to ` BufferedChecksumIndexInput ` that throws an ` UnsupportedOperationException ` to ensure that the ` clone ` method throws an exception
replaced ` Math . sqrt ( ) ` with ` radius * radius ` in ` Circle . java ` to improve accuracy in checking circle boundaries
added a conditional check before assigning the frequency band and modified the return statement in the P25Channel class to ensure that the frequency band is only
renamed ` tapSquare ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` and updated related logic in ` GestureDetector `
set default _ replicate _ on _ write to false by default
added a new query parameter for last fill time in CryptoFacilitiesAuthenticated and utilized it in CryptoFacilitiesTradeServiceRaw to enhance functionality
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests to provide functionality for the delegate
updated error handling in FileActivity and refactored sync handling in FileDisplayActivity to improve code clarity and ensure proper retrieval of file details
added functionality to handle stream writable writes in ForeignIncubatorQuicheConnection and JnaQuicheConnection to improve error handling for
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 535 . fix
removed the alignment parameter from the TableCell constructor calls in BaseTextFormattingHelper and TableCell classes to simplify the code by eliminating unnecessary
added a new file ` TracingAutoConfiguration . java ` for auto - configuration of tracing in the ` uaa ` package to facilit
fix miss ` ` first ' ' parameter in submissions
updated the ` getPrunedQueryableSegments ` method to accept a list of ` List < IndexSegment > ` instead of ` List <
updated VertxBufferTest . java file to improve test coverage for buffer processing functionality
bugfix : fix bug in messagesubmissionchunk . readmessagedateextrahyphensubmissionchunk and add test
changed the access modifier of mContext from private to protected in PredictionAppTracker . java to allow subclasses to access the mContext variable for
removed unnecessary imports from ShowTablesOperation . java and ShowViewsOperation . java to streamline code by eliminating unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it for throwing ` MongoDataIntegrityViolationException ` to
[ hotfix ] [ runtime ] fix return value of jobcoordinationservice . jobcompletionfuture ( )
renamed the method ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and added a new method ` bytesToHumanReadable `
refactor merging logic in TestUpgradeIndexMergePolicy to use TieredMergePolicy directly to simplify merging process by eliminating unnecessary type
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
update error message in CpuNDArrayFactory . java for clarity to address issues related to CPU support issues related to hardware extensions
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated the ` contextInitialized ` method to accept an additional parameter
added null checks for incoming fields , terms , DocsAndPositionsEnum , and LeafReader in FilterLeafReader . java to ensure robustness
relate to securerandom issue in jcecrmfencryptorbuilder .
updated IOException to use the exception ' s message instead of the original exception object and removed unused constructor parameters to simplify exception handling and improve code cl
removed unused imports and annotations from multiple Java classes to streamline dependency management and improve code clarity
updated assertions in ` BundledDistributionTest . java ` and added new imports in ` PostgreSQLTest . java ` to improve test coverage for database
[ hotfix ] [ table - planner - blink ] add pipeline . name config option
refactor scale calculation in OverviewState . java to account for two - panel devices to ensure correct scaling based on the device ' s layout
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and adjusted temperature and rainfall
removed ` DateTimeZone ` parameter from ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils ` and ` DataUpdateManager ` to
[ j2kt ] add ` ` isqualified ' ' flag to thisreference .
updated regex pattern in XhamsterRipper to allow lines starting with " wmde . " instead of lines containing " wmde .
fix checkstyle issue in block / entity / glowworld . java
modify the assignment of the table name to include a schema if it is not empty to ensure that the table name is correctly formatted based on the
fix an npe in the console filter
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select and deselect all
[ java ] use termlengthmask instead of termwindowlength in networkpublication .
fix checkstyle issue in io / entity / guildupdaterevent . java
update inPortalTicks logic in Player . java and Entity . java to ensure inPortalTicks does not exceed a maximum of 80 tick to prevent
updated ClusterMonitorTileSkin to improve chart spacing and color handling based on the height of the chart and chart data to enhance visual clarity and
refactor multiple Transactional - related classes to improve code organization to enhance maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to ensure proper handling of larger binary data sizes
removed unnecessary null check for header in RendererConfiguration . java to simplify the condition for checking if the renderer is null
cloudstack - 8238 : do n ' t allow a vm to be scale on the same disk offering if both service offering
updated import statements and replaced wildcard imports with specific classes in HitbtcAdapters . java and Order . Builder to improve code clarity and
rename ` idleCount ` to ` consecutiveIdleCount ` for clarity to improve code readability and maintainability by using a more descriptive
updated the description of the ConfigurableService annotation from " automation : jruby " to " automation : jrubyscripting " to clarify
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated the conditional check in ParticipateAssetIssueActuator to include a check for negative values to ensure accurate validation of the precise exchange amount
added a loop to increment the variable ` i ` in ` FeedUtils . java ` to limit the number of iterations to 10 to improve performance
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify HDF4 file parsing functionality to ensure
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified test cases to use it to improve test reliability by
remove unnecessary whitespace in IDEEditor . java to improve code readability and maintainability
added two overloaded methods ` quietCloseAll ` to ` CloseHelper ` for closing specified AutoCloseable objects to improve resource management by providing
replaced ` posBtn ` string resource with ` common _ yes ` string resource in ` RemoveFileDialogFragment . java ` to streamline
added checks for non - zero srcWidth and dstHeight before drawing a image to avoid potential NullPointerExceptions when dimensions are zero
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . invoke ` for defining a class in ` UnsafeAccess . java ` to
updated the fqdnRegexPattern pattern in GUIUtil . java and added multiple test cases in GUIUtilTest . java to improve regex validation and ensure
modified conflict handling logic in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve performance by reducing the number
fix an npe in sdks when there be no support for api level 0.0 . 3
added a conditional check to return the reference if it is the same as the current reference in the ReferenceMemory class to ensure that references are only
added checks for seed files before adding input paths and improved error handling in the Injector class to ensure that only valid seed files are processed and
added a condition to check if ` hideOriginal ` is true before setting the visibility of ` originalView ` to ensure that the original view is
updated the calculation of maxNodes and modified the conditional check for maxTrips in DefaultLoopPolicies . java to ensure maxNodes does not exceed
added a check for texture coordinates type support in CombinedTexture . java and introduced a utility method in UVCoordinatesGenerator . java to improve error
added error handling for file deletion in EncodeActivity and improved input validation in DecodedBitStreamParser and MatrixUtil to enhance robustness and
added ` seek ` and ` close ` methods to ` TracingConsumer ` and ` TracingProducer ` classes to ensure proper handling of seeking and
updated substring calculation in HandleDAOImpl . java to use oldPrefixLength instead of locate to ensure correct substring length is used for prefix updates
simplified the initialization of the convertedValsList by directly using the collection to improve code readability and maintainability by eliminating unnecessary
[ hotfix ] [ test ] deprecate abstracttimer constructor that take a basetimeunit
added a nightly build warning message if the Universal Gcode Sender is running on a nightly version to inform users about issues related
update getresponsessortedbyrecipient to sort response by recipient team name instead of empty string
updated the return statement in UnnecessaryThrows . java to specify the removal of unnecessary ` throws ` declarations to improve clarity of the error
deleted CacheApplication . java and updated CommonsApplication . java and ShareActivity . java to replace CacheApplication with CacheData to streamline cache
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in RuntimeEnvironment for devices running KitKat and above to ensure proper configuration updates for devices running KitKat devices
added a new constant for updating stack link existence in VersionDefinitionResourceProvider . java and created a corresponding test in StackManagerTest . java to
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
[ hotfix ] [ table - planner - blink ] avoid npe in case of miss index name
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access management by including internal resolver helpers and readers
rename ` save ` method to ` add ` and rename ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes to improve cl
fix handling of loop exit node in graphutil . removeloopinput
replaced RecyclerView with WidgetsRecyclerView and updated related methods in SearchAndRecommendationsScrollController . java to improve recycler view
added a check for terminal support in ConsoleReader to ensure compatibility with terminal features
changed the data type of ` timeAllowed ` from ` Long ` to ` int ` and updated related logic in ` LBHttpSolrClient
added a validation check for the session before flushing in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that only valid sessions are
refactor index change handling to check for null columnNames before processing to improve robustness by avoiding null pointer exceptions during index change processing
replaced Vector with ArrayList for button management and added action listener methods to enhance button management functionality and improve event handling
updated UserManagerCompat to support new VN MR1 and VN MR1 implementations and created corresponding classes to improve compatibility handling for
added methods to retrieve the database major and minor version in MockDatabase and AbstractDatabase classes , and updated ReorganizeTableStatement to handle exceptions
added a maximum mismatch rules limit and updated the handling of mismatched rules in ActionGraphCache to improve clarity of mismatched rules and provide
added LockDatabaseDesc and UnlockDatabaseDesc classes to support serialization and deserialization of database operations
updated RankingTopComponent and RankingUIModel to use setter methods for model properties and added null checks for transformer groups in R
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve connection stability and provide clearer feedback
added a test for setting and deleting the storage group in IoTDBAuthorizationIT and updated AuthorityChecker to handle the DELETE _ STORAGE _
fix : [ cloud ] update namespace from ` ` oud / documentai ' ' to ` ` oud / documentai ' ' (
added handling for ` J . VariableDeclarations . NamedVariable ` in ` Assertions . java ` and improved type validation logic in ` Find
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to enhance test execution flow by allowing
refactor CountersManager to use CachedEpochClock and simplify constructor parameters to enhance code readability and maintainability by reducing code duplication
updated logging statements in MultiSteps and SendEmail classes for improved clarity and consistency to enhance code readability and maintainability by using parameterized
added null check and cloning for joinKeys in JoinDesc . java to ensure that joinKeys is not modified when it is not null to
added a PrincipalResolver bean to WebAuthnConfiguration and updated the authentication handler registration to use it to enhance security by ensuring the default principal resolver
added search paths parameter to the addSettingsFromFile method and updated related tests to enhance search functionality by allowing additional search paths for Xcconfig files
made several lists and collections final in Oracle . java to enforce immutability and improve code clarity
[ hotfix ] [ checkpointing ] disable checkpointing until rescaling of unaligned checkpoint
add unsupportedoperationvisitor for nulls first , last , and query _ by
make compiletheworld log less noisy
added a check to ensure ` lValue ` is an instance of ` LocalVariable ` before proceeding to prevent potential ` CannotDelamba
added support for MySQL timestamp handling in CreateTableGenerator . java to ensure proper handling of timestamp columns in MySQL databases
added context class loader management and disassociation in EnvConfiguration . java to ensure proper context class loader management and prevent potential memory leaks
added ejection delay setting for stageNr 0 in SimulationListHandler . java to ensure proper ejection delay for motor configuration when no stage
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related methods for clarity to improve code readability
modified TransactionUtil2 . java file to improve transaction handling logic
updated methods to use ` resolveIssuer ` instead of ` determineIssuer ` and introduced ` Optional < OAuthRegisteredService > ` in multiple classes to
updated string concatenation and added null check for DocCollection in ClusterState . java to improve code clarity and handle potential null references gracefully
updated method call from ` getStyle ( ) ` to ` getAllStyles ( ) ` in ` TextArea . java ` to ensure consistent alignment across
added methods for retrieving foreign database and schema names in ForeignKeyColumn , ForeignKeyColumnMutator , AbstractRelationalDbmsHandler , and ForeignKeyColumnProperty to
[ java ] warn if cluster leader join fail to join catchup or live log .
replaced static shadows . shadowOf ( ) with a private method shadowOf ( PackageManager packageManager ) in ShadowActivity and ShadowBl
refactor selection root handling in FileSelection . java and add a new test case in TestBugFixes . java to improve error handling and
add item . oninventorytick ( ) , deprecate for removal since 1.20 . 1
fix ( recaf ) : add ` ` war ' ' to zip file
added null check for getSherlockActivity before invalidating the options menu to avoid potential NullPointerException when accessing getSherlockActivity
updated widget binding logic to support binding options in AppsCustomizePagedView and Launcher classes to improve widget management by allowing dynamic binding
[ ecobee ] add support for airpressure , airquality , co2ppm and vocppm to ecobee sensor
reformatted code for better readability and consistency in the OperationSetServerStoredContactInfoFacebookImpl . java file to improve code clarity and
added environment variables for " AAPT " and " AAPT2 " in Genrule . java and updated corresponding tests in GenruleTest .
truffle : only dump access table when instrumentation be enable .
added a null check before disposing the message to avoid potential NullPointerExceptions when disposing
updated the ` db ` field to be final and modified the ` init ` method visibility in ` TxCacheDB ` to improve immutability
updated log warning messages in CoreContainer . java to indicate that LogWatcher is not implemented for log4j to provide clearer guidance on
replaced printStackTrace ( ) calls with fail ( ) and return statements in CategoryPlotTests . java to improve error handling and clarity in testing
replaced ByteArrayOutputStream with SmallByteArrayOutputStream and updated dial method to handle null cases to improve performance and avoid potential NullPointerExceptions during data dialing
shader . getattribute ( ) now use vertexbuffer . type . ordinal instead of string . name ( ) .
updated JDBC connection parameter from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to ensure robust handling of null values and improve output cl
updated TestHtmlTag and C1 classes to include default language handling and added new test cases in TestUseOption and TestUseInterface to enhance
added a condition to check if the result is not incomplete and the size of the items list exceeds 10 to ensure that the completion process does not
updated command - line argument for HybridClusterIntegrationTestCommandLineRunner to specify a time column name instead of a data field to enhance flexibility
updated format handling in SiteSnapshotVariationsTest . java and OutputOptions . java to use a dynamic extension based on the output format value to
inverted the condition for checking if QSB is enabled in DeviceProfile . java to ensure proper handling of QSB layout adjustments based on
refactored equals and hashCode methods in AnimationList and removed redundant equality checks in SceneKey and GltfModelKey to improve code read
added a new ` _ date ` field and a ` setDate ` method to ` AbstractGenerator ` , modified ` HttpGenerator ` and ` Http
replaced instances of Adler32 with CRC32 in Store . java to standardize CRC32 implementation and improve code consistency
fix xen . heartbeat . interval default value to be ` ` null ' '
added a new warning type ` ZERO _ AREA _ FIN ` and updated condition checks in ` FinSetCalc . java ` to improve code
[ hotfix ] [ elasticsearch ] add support for custom retryonconflict in elasticsearchio
hhh - 14833 add date _ trunc function for h2 and oracle
solr - 10362 : fix error message in metricutils when memory pool not find
added a ` useJavaScript ` parameter to the ` ensureSignedUp ` method and improved error handling in ` UserContext ` , ` File
updated error messages to use instances of RUNTIME _ PROTOTYPE _ TYPE and Types . PROTOTYPE _ FACTORY _ TYPE
updated the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the new replay
replace instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) ` and
refactor item notification logic in AllAppsContainerView to use child views instead of adapter items to improve code readability and maintainability by redu
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated start method calls for altContext and otherContext in ResourceHandlerTest . java and ServletContextHandler . java to ensure consistent behavior after context handling
added a condition to return false if mDrawIdentifier equals WORKSPACE _ CUSTOM in Cling . java to improve code clarity and prevent potential
fix nullpointerexception in trufflejdkservices . lookupmodule ( ) .
added JUnit @ Ignore annotation to the method ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to temporarily disable tests
updated import statements to replace references from ` v1 ` to ` ItBit ` in multiple Java files to ensure compatibility with the latest version of
ww - 4442 fix profile and scope interceptor to use parameter . isdefined ( )
made classes ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` final and added private constructors
added try - with - resources for ObjectInputStream in RegionsApiUtil . java to ensure proper resource management and handle potential IOExceptions gracefully
updated writeUTF calls to use specific class names for Vector and Hashtable , and improved exception handling for externalizable classes to enhance code clarity
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to improve clarity of warning messages related to
replaced the length ( ) method with trim ( ) . length ( ) for fragmentList in QueryExecutorImpl . java to ensure that the
fix resourcepackfilenotfoundexception to use modfile . getfilepath ( ) . tofile ( )
removed unnecessary imports and refactored the handling of TransformerBuilder instances in PartitionToolbar . java to improve code readability and maintainability by redu
removed unnecessary condition for showing as grid in RecentsView . java to simplify code logic for better readability and maintainability
refactor ` CalculatorEndpoint ` , ` CalculatorRestEndpoint ` , ` CalculatorService ` , and ` CalculatorServiceImpl `
removed the Comparator from the thenComparing method call in QueryCommand . java to simplify the comparison logic for better readability and performance
fix haybale not take damage . close # 1193
updated the handling of environment symbols in WindowsProcessAddressSpace and added new environment variable constants in J9DDRImageProcess and NewElf
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest and ConfigOption classes to enhance flexibility in handling plugin configuration
changed the condition from checking if ` hashTable ` is not null to checking if ` hashTable ` is empty to ensure proper handling of empty
added a check for non - negative seconds in the Timestamp class and refactored tests in TimestampTest to use assertEquals for clarity to
[ java ] clone archive context to avoid memory leak .
added a check for the ` isCompiled ` flag in the compilation threshold condition to ensure that the compilation threshold is only applied when not compiled
added new test methods and tests for image2 handling in the AbstractTest class to enhance functionality and ensure proper functionality of image mosaic functionality
refactor TogglableFlag to improve default value handling and add a change listener for app search improvements to enhance clarity and
updated logging statements in DockerClientFactory to use parameterized messages instead of raw messages to improve logging clarity and consistency in error messages
added a check to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary operations on devices running Android
replaced assertEquals with assertThat for route assertions in RoutesTest . java to improve readability and maintainability of test assertions
added new functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to provide functional programming
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and updated related methods to handle bitrate limits more
added a conditional check before deregistering the invocation from the invocation registry to ensure that the invocation is only deregistered if the future is complete
replace frameBytes creation and appending with output method in AbstractWebSocketConnection . java to improve code clarity and maintainability by using a dedicated output
added a check for redirecting in LoginActivity and updated the intent handling in SignupActivity to ensure the WelcomeActivity is started only when
added a new class ` ShadowCheckedTextView ` and updated ` Robolectric . java ` to implement it to enable testing of `
made ParserState class serializable and updated member variables to be transient in AccessorProperty and Property classes to ensure proper serialization and prevent potential memory
add expiry exception for identrustdstx3 alias to VerifyCACerts . java to ensure that identrustdstx3 certificate
removed redundant attributes for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline the code by eliminating
fix getnick ( ) method for occupant .
added a ` context ` parameter to the ` QuicSession ` constructor and refactored related connection handling in ` QuicConnection ` and
updated MergePolicy usage in CreateIndexTask . java to utilize LogMergePolicy for configuration management to enhance flexibility and maintainability of merge
refactor code to improve readability and maintainability by using variable names for width and height variables to enhance code clarity and maintainability by
added support for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to enhance default value handling
updated NbtScoreboardIoService . java file to improve functionality to enhance performance and maintainability of the code
do n ' t store saml2 service provider metadata if it ' s already a writable resource
changed visibility of the ` printer ` variable and refactored the printer creation logic in ` GraphPrinterDumpHandler . java ` to protected and
added BigDecimal import and updated order ' s average price based on the cash amount to ensure accurate representation of the order ' s average price for
updated ProjectionOperation and TypeBasedAggregationOperationContext to use the target field instead of the name and changed fields type from String to Field to improve
modify the ` addViewer0 ` method to check if the player is already in the ` viewers ` list before sending a new packet to
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to utilize a customizable ConstantState for UI elements to improve
updated SPDYClient to use a new compression and compression factory for asynchronous connections to improve connection handling by utilizing a controller for SSL connections
fix for nullpointerexception in protostuffobjectoutput . writeobject ( null )
pdfbox - 4892 : add miss brace , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
do n ' t draw ` ` 0 ' ' and ` ` 1 ' ' if ax do n ' t exist
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` with updated calls to
removed unnecessary whitespace in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added support for custom URL trust validation in ` CustomUrlJob . java ` and created a new class ` CustomUrlTrustEverything . java
use real use clock rate instead of hardcoded value for g722
refactor TextureAtlas class implementation to improve performance and maintainability of texture atlas functionality
updated the method to return the module name instead of the product name and added a method to set the module name in the AppleLibraryBuilder
[ hotfix ] fix flakiness in testslot # finishreleaseprocess
# 1193 - fix for find ( idlist ) . findids ( ) and findids ( ) . findids ( ) .
replaced the variable ` closeFrame ` with ` rbuf ` and added an assertion for the response header to ensure that the WebSocket response header
[ wasm ] fix npe in wasmfunctioninstance . callreference ( ) .
fix ( log ) : add ttl parameter to create _ table _ sql query
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and modified related methods in CustomPreconditionWrapper to
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection instead of Jetty ' s util Threads to improve server handling and
added exception handling for Fresco initialization in CommonsApplication and modified VectorDrawableCompat initialization in NearbyController to improve robustness by
modified the return statement to check if objectName is not null or empty before trimming it to improve robustness by preventing potential null or empty
updated error messages to provide clearer context for file operations to improve clarity of error reporting when attempting to open files
[ hotfix ] [ table - planner - blink ] make planner and executor class constant in environmentsettings
updated variable names and improved null handling for X500Name in KeyTool . java and Resources . java to enhance code clarity and ensure
add a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used in future versions
replaced ByteBuffer encoding with direct string conversion using utf8Charset to simplify code and improve performance by eliminating unnecessary byte buffer operations
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to facilitate permission evaluation
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified the buffer handling in ` LineReaderImpl ` to support
fixed - masterfilesystem . checkserverexists ( ) should return false for non - existing server
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ MERKLE _
refactor expandwar to use urlconnection instead of jarfile
improve error handling in defaulthttpclient ( # 2598 )
updated the container ' s position from center to centerAbsolute in the Picker class to ensure the spinner is in an absolute position for better user
[ flink - 20686 ] [ network ] fix the bug of request memory segment in networkbufferpool . requestmemorysegments ( )
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper cleanup of MBeanServer instances
replaced JUnit 4 runner with a RetryTestRule in AbstractIT . java to improve test reliability by allowing retries when running tests
refactored the auto - commit logic in ` CallTask ` and ` QueryStateMachine ` to remove the ` autoCommit ` parameter and
add package - info . java and fix import order
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove redundant callback in streamtask timer test
refactor request handling in ` mmm Request . java ` and add a new test in ` ppp RequestTest . java ` to improve
updated the access level of KEY _ LAST _ SEEN _ VERSION _ CODE and refactored the method for retrieving available storage points to enhance
added methods to handle availability and unavailable sessions in SessionManager to improve session management by allowing dynamic priority changes for available and unavailable sessions
added " liquibase . pro " to the package scan list in ServiceLocator to enhance package scanning capabilities for Liquibase pro
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` MainApp ` and ` SyncedFolderProvider
modified the ` loadWithNewGlobal ` method to accept an additional ` args ` parameter and updated related method calls accordingly to enhance functionality by allowing
refactor FastPathResolver to use a consistent startIdx variable for path matching to improve code readability and maintainability by reducing redundancy
replaced the use of ` Slice . length ( ) ` with ` toIntExact ( ) ` for retrieving the returned size of ` Slice `
renamed methods related to random type handling from ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` across multiple classes to
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and corresponding test cases in TestWindowFrame .
added a line to clear the headers of the proxy request in AbstractProxyServlet . java to ensure that the proxy request headers are properly cleared for
added a condition to skip the test if SA attach is not expected to work to ensure that the test runs only when SA attach is expected to
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created a new TranslucentWindow . java file to
added a check for null user info before populating user info elements in UserInfoActivity . java to improve user info handling by providing a clear error
added a new serialization class ` PrecompiledHeaderSerialization ` to prevent precompiled headers from being used on different machine to ensure that precompiled headers
[ flink - 20604 ] [ kafka ] [ table ] support update mode in append mode in kafkasourcestink
added a new integration test class ` MultipleOutputsIntegrationTest ` for testing multiple named output groups to ensure that named outputs can be used in source
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper formatting of settings when content changes
[ hotfix ] [ runtime ] fix bug in statelesscontrollerserviceinitializationcontext . getvariables ( ) and statelessflow . get
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a taskbar mode switch annotation to the TaplTestsQuickstep class to enable persistent mode for testing purposes
added new device status entries for " leave - dock " , " energy - save - mode " , and " energy - save - mode "
add itemloadingexception to modelloader registry to improve error log
updated import statements in KrakenFuturesStreamingPublicDataTest . java and added @ Ignore annotation to mark the test as ignored to ensure the
fix getcurrentpixelscale ( ) to return 1 for 2x
refactor RussianLowerCaseFilter to improve case sensitivity to enhance performance and maintainability of the code
replaced serverProps and clientProps initialization with EMPTY _ PROPS in CsvBulkLoadToolIT . java and updated server retrieval logic in QueryUtil
replaced ` File . separatorChar ` and ` File . pathSeparatorChar ` with underscores in ` displayName ` to ensure consistent formatting of file
pdfbox - 4071 : use a resettableinputstream instead of littleendien for audio loading
added support for repeating the first line indentation in ColumnText by introducing a boolean flag to enhance flexibility in indentation handling based on the
cast the result of the oid comparison to an Object type to ensure proper type handling for the OID comparison
move metric and health check init logic into separate method to improve code readability and maintainability by reducing duplication
loopex : fix typo : controlflowanchored instead of controlflowanchornode
added code to disable the focus painting of the button in WindowsPlacesBar to improve user experience by preventing focus from being displayed in the
added additional checks for UniqueConstraint and ForeignKey in the DatabaseSnapshot class to ensure proper handling of backing index for unique constraints and foreign keys
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and implemented a new method in ` AccountAPI
add check to prevent duplicate dc . title in group creation
do n ' t throw an error if the utterance have no word
camel - 16400 : added unit test base on user forum issue
replaced the method ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and
increased the fast scrolling threshold from 40 milliseconds to 10 milliseconds in RecyclerViewFastScroller . java to improve performance by reducing the
make hotspotresolvedjavalibrary . getsystemclassname ( ) default to ` ` ljava / lang / system ' '
hhh - 13644 : procedurecallimpl # getrandomvalue should return a stream , not a nullpointerexception
updated the initialization of ` apiProperties ` to handle null cases to ensure a default map is used when ` configuration . getApiProperties ( ) `
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame formats in the WebSocket API
simonstewart : fix flaky test by wait for element to be present
simplified latitude and longitude randomization in RandomGeo3dShapeGenerator . java to improve code readability and maintainability by reducing
added a keepAlive method to manage ClassLoader usage to ensure thread safety during resource loading
changed the return value from false to true in SQLiteDatabase . java to enable the execution of the SQLite database functionality
refactor the handling of concurrent signal in the JSR166LockMonitorenter class to improve clarity and maintainability of the
added MkdirStep calls in AndroidAar , AppleBundle , and ApplePackage classes and updated assertions in FatBinaryTest to ensure
updated coordinate calculations and exception handling in MeshLeveler . java to improve error reporting and clarity for coordinate alignment errors
[ drools - 6542 ] do n ' t allow kie - pmml to be load from classpath when jpmml module
updated variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable name
added OS _ MAC _ TMP _ DIR constant and modified temporary directory creation logic in MountableFile . java to ensure compatibility with macOS
disable memory map buffer on window in prj file reader and catalog manager
added a null check for the organization in the pom file to ensure that Plugis are required to have a valid organization in the pom .
added a notice file to the SepPostingsWriterImpl . java file to indicate that the notice file is distributed with the NOTICE file
deleted the TerminateWebSessionListener . java file to remove unused session termination listener to streamline the codebase
updated the method to use the system ' s class path instead of an empty string to ensure compatibility with the system ' s default classpath for executing
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for crypt key , private key , and md
added JUnit Pioneer annotations and a test method to verify that Javadoc changes are not modified to improve code clarity and maintainability by
changed the value of LAUNCHER3 _ PHYSICS from false to true to enable LAUNCHER3 PHYSI
added a ` < div class = ' noPrint ' ' to the HTML output in ` HtmlThreadInformationsReport . java ` to improve
updated Lucene main version from 3.1 to 4.0 and modified test version from LUCENE _ 31 to LUCEN
added macosx symbolicator and task handles in BsdDebuggerLocal . java and updated platform detection for Darwin in PlatformInfo . java
use weakreference in fmlclienthandler to avoid memory leak .
improve logging of networkdispatcher exception when connection reset by peer .
[ java ] use aeron client conductor ' s admin buffer if available .
added a break statement in TouchImageView . java to ensure proper control flow in the code
fix : [ flow ] update ruby and python library version to match open source code
removed SSL handshake handling logic in FeedableBodyGenerator . java to simplify the process of flushing on SSL handshake completion
fix typeutils . isassignableto ( ) to return true for java . lang . object
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve concurrency handling during memtables flushing
added null check for ` tree . errs ` in ` MemberEnter . java ` and updated error handling logic in ` JavaCompiler . java `
replaced ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` in the ` Browser ` initialization to ensure that the browser
updated the negative button click listener from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure
folddiv ( { min , max } , - 1 , 0 ) should not fold negative value in integerstamp .
added a method to read a byte array from an InputStream and updated the Image instantiation to use this method to improve code readability and maintainability
added functionality to write define and undefine variables in the SwitchCompiler and enhanced CaseStmtToken with local variable management to improve code clarity and
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by catching exceptions during cipher initialization
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to enhance dependency management for better performance
updated string concatenation in StringUtilsTest to use system ' s line separator to improve readability and maintainability of the code
updated TemplateEngineFreemarker to set default encoding and output encoding in TemplateEngineFreemarker . java , and modified
replaced ByteArrayInputStream with String for byte array conversion in CRDGeneratorTest to improve performance and readability of the code by eliminating unnecessary
change variable to be non - static to allow for subclassing .
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure emailable reporting is only
added handling for quoted characters in CommandLineBuilder and improved test assertions in CommandLineBuilderTest to ensure proper quoting behavior and enhance readability of test
removed the ` public ` access modifier from multiple ` Clock ` , ` DelegatingGauge ` , ` MetricProducer ` , ` RegistryProducer `
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to set the number of reduce tasks based on fetchers
fix issue where default value be n ' t be store in the schema
updated the FILEVERSION constant from " 505365 " to " 532077 " in SaveService . java to ensure compatibility with the
updated texture float extension check from " texture _ float " to " GL _ ARB _ texture _ float " and added a constant for GL
bug 50211 - fileserver now implement write ( ) and closefile ( ) method
added a null check for outputDirectory and jarStream before setting the output directory to ensure output directory is set only when either outputDirectory or jarStream is
added performance measurement for SQLite tasks in ShadowSQLiteConnection to enhance performance tracking for database operations
replaced instances of ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
[ geos - 7013 ] add resourceerrorhandling enum to handle resource error .
added a check for buffer position in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure buffer position does not exceed buffer size and
improve error message when resource not find
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class to enhance thread
updated the CHECK _ EVERY _ N constant and modified memory check logic to use a bitwise mask instead of a fixed value to improve performance and
hbase - 26969 fix testsplittransaction to not create region after split
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
added a parameterized test for Jaas environment setup in DemoModulesTests . java to ensure proper handling of Jaas environment configurations in the J
added a check for spanX and spanY when creating a folder and adjusted the calculation of the centering of the cell to ensure that the
refactor CacheOffHeap class implementation to improve performance and maintainability of cache management
improve error message when try to create table dependency on table with higher id
added validation for row and height before parsing XML gid values in TiledLoader . java and improved data string trimming in TiledLoader
added synchronization to the setWorkingSet method to ensure thread safety when accessing the working set
added a new file ` Solution . java ` that implements a solution to calculate the number of manasa stone based on input values to
added a new interface ` AddressChecker ` and refactored ` TrackerRequestProcessor ` to use it for checking bad addresses to improve address
fix multilayermodel . setrendertype ( rendertype = = rendertype . gettranslucentmovingblock ( ) )
remove the default tag from the config element ' s comment when generate the config file .
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated its usage in `
added null check for recieptents before sending mail and changed time conversion from seconds to milliseconds to improve robustness by preventing potential NullPointerException
refactor ` isSingle ` logic into a separate method ` isSingle ` to improve code readability and maintainability by reducing duplication
updated DockerClientFactory to conditionally use a fail - fast client method and improved logging in RemoteDockerImage and ImageFromDockerfile to
added a new ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated ` perfStatsCollector ` to include it to enhance resource
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 535 : fix
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) `
added handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failure scenarios
refactor TreeMap . java to improve code structure to enhance maintainability and readability of the code
added methods to get and set a boolean for enabling asynchronous stack traces in the Display class to enhance stack trace management capabilities in the application
added a method to set the glow color of BubbleTextView and updated Folder to use this new method to enable customizable glow
added style class settings for link and description elements in LinkedFilesEditor to enhance user interface by providing clear text for link and description elements
added a test method to verify class name matching in ResultSetMetaData to ensure correct retrieval of class names from database metadata
removed unnecessary file deletion logic in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to streamline the code by eliminating unnecessary
added null check for _ info in HttpConnection . java to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that initializes the provider variable to allow for customization of the location provider
updated the condition for setting maxRAM based on deviceRam in LauncherPreferenceJavaFragment . java to ensure maxRAM does not
improve localmapstatsprovider to include map without data
added logging functionality to FileProfileActivator for file existence , missing , and missing files to enhance visibility into file profile activation process for better debugging
updated the string used in the addToBody method call from " noname1234 " to " invalid _ " to improve clarity of the error
change guild # getroles ( ) to return a set instead of a list .
updated the length check in ExpandableUploadListAdapter from 30 to MAX _ NUM _ UPLOADS _ SHOWN and changed the return value
added multiple assertions to the DashboardUserMapperTest class to ensure that the delete method returns the expected number of delete entries to ensure that the delete
change parameter name in instructorfeedbackresultspagedata : rename givertoresponse to primaryparticipant to be more descriptive
sulong : fix a bug in llvmpointerstorenode that could lead to memory leak .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide a way to access the buffer size for better
add usage help for the ` ` terasology ' ' command and remove the usage of ` ` headless ' '
updated action bar title handling in DrawerActivity . java and added swipe to dismiss notification functionality to improve user experience by enabling swipe to dismiss
modified CommandLineParserTest . java file to improve test coverage for command line parsing functionality
added static imports for ALL _ APPS and ALL _ APPS _ CONTENT _ FADE _ MIN _ CLAMPING _ THRESHOLD ,
replaced the method call to ` javaName ` with a direct call to ` javaNameFromExternal ` to improve code readability and maintain
added native method declarations for setting window , screen dimensions , and object release in CWrapper . java to enable native functionality for frame management and object
added constant value checks in mmm Checker . java and created a new ValueTest . java file to ensure correct handling of references to constants and
updated tests in MontgomeryMultiplyTest . java , TestMulAdd . java , and TestSquareToLen . java to improve
removed null check for constructors in PojoUtils . java to simplify the code and improve readability
refactor JiraConfiguration to improve code readability to enhance maintainability and facilitate future updates
updated error and coverage failure messages in UploadBuild . java to improve clarity of error and coverage status messages
update bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout adjustment based on search bar position
updated warning messages for clarity in PulseAudioAudioSource . java and modified disconnect logic in PulseaudioSimpleProtocolStream . java to
refactor activity launching logic to run on the UI thread using runOnUiThread to ensure UI updates occur on the main thread for better
removed the ` getSourceGroup ` method and its associated checks from ` AppleSource . java ` to streamline code by eliminating unnecessary
increased timeout values for triggerFiredLatch . await and triggerFiredLatch . await in TestSimTriggerIntegration . java to improve
fix the size of all - null block return from float reader .
fix potential npe in abstractnodecostsearch . getbestpath ( )
added a check to skip processing for specific UI components in ResourceEditorView . java to ensure only valid component types are processed in the code
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint and initialized it with the latest commit if it is null to ensure that the correct commit point is used when
added unit tests for ` getImeiForSlot ` , ` setImeiForSlot ` , and ` getMeid ` methods
added debug request debug information to the SimpleHostRoutingFilter class to improve debugging capabilities for HTTP requests during routing
added ` destory ( ) ` methods to ` IndexSegment ` , ` BitmapInvertedIndex ` , and ` IndexSegmentImpl ` classes
[ issue # 3558 ] fix the bug of normalmessagenewithrecvit ( # 3558 )
use standardcharsets . utf _ 8 instead of resolve charsets dynamically
hbase - 25827 bulkload should not throw an exception if there be no hfile for the specified family when check if bulk load
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` constructor and updated its usage in ` RippleWithdraw
removed import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
consolidated multiple exception handling into single catch statements for SolrServerException and MorphlineRuntimeException to improve code readability and maintainability by redu
added a check for abstract overloaded methods in the Java2TypeScriptTranslator to throw an error if the method ' s body is null or
added StacklessLogging for the FileSessionDataStore ' s sweepDisk method and wrapped it in a try - with - resources block to improve logging
added serialization support to SqlDataType and refactored Entities to use instance variables for XML , HTML32 , and HTML40 to improve data handling
updated SubExactLConstantTest and SubExactLNonConstantTest files to improve test coverage for exact and non - constant scenarios
added a check for null or empty claimRequestString before parsing it to improve robustness by handling potential null values gracefully
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility in building Hive filter sets by utilizing
updated ` processTypeHintForNestedDocuments ` method to handle null values for ` source ` and added unit tests for null values in ` Update
replaced ` CoreAdminResponse ` with ` CoreStatus ` for core status retrieval to improve code clarity and maintainability by using a more
make transformers and locators a list in moddirtransformerdiscoverer so that they do n ' t have to be duplicate .
improve error message for illegal inits in querydsl processor
implement pegraphdecoder . decode ( ) . getcallstack ( ) for good debugging
replaced instances of ` setOf ` with ` copiedSetOf ` and ` listOf ` methods in ` RestTemplateBuilder . java ` to
camel - 16400 : camel - mail : use objecthelper . getidentityhashcode ( ) instead of mailutils . dumpmessage (
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for amq - 4
added setIsPropertyName ( ) method to getIdentifierName ( ) return statement to ensure the identifier name is correctly assigned as a property name
added a new file ` WaveGeneratorActivity . java ` and modified ` InstrumentsFragment . java ` to launch it to streamline the app
added null checks for ` m ` and ` Sheet ` in ` KeyedProperties . java ` and improved error handling in ` SheetOverlay
test : add test for exec and log in podit
added a test method ` testNoWriter ` to ` TestReplicationHandler ` and updated ` useFactory ( null ) ` in ` MockDirectory
add miss call to super . dispatchmethodkernelokra ( ) in graalkerneltester
[ iotdb - 4892 ] fix the ordering of defaultmxrecord by priority ( # 4893 )
refactor thread creation in XToolkit to use a privileged action for improved security to enhance thread management and ensure proper synchronization during shutdown
added validation method in SelectBox and selected Linux6 in UITest to enhance user experience by validating the selection state of the dropdown
[ hotfix ] [ runtime ] use collector . printstacktrace instead of throw illegalstateexception
added a ` SplitState ` parameter to the ` createState ` method and updated related logic in ` FlowBuilder ` and ` SplitState `
changed the ` connectionState ` variable to be volatile and modified its usage in the ` getConnectionState ( ) ` method to improve thread safety by
polish ` ` set default poll period to 1000 ' ' and add integration test
replaced ByteBuffer instances with variable - length variables for ASCII , UTF8 , and UTF16 encoding methods to improve code readability and maintainability
added exception handling for ` DocletAbortException ` in ` HtmlDoclet ` , ` AbstractDoclet ` , and ` AbstractBuilder `
[ java ] unusedmodifier false positive with enum
refactor lambda expressions to method references across multiple Java files to improve code readability and maintainability
updated the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to include a SSL parameter to enhance the configuration of the HTTP client server
added exception handling for IllegalFormatException and improved logging messages in TransformationHelper . java to enhance error reporting and provide clearer feedback during transformation failures
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService . java to ensure correct accessibility for active connection identifiers
replaced direct equality check with a custom equals method using Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by
added a null check for the outputRoot parameter in the process method to prevent potential NullPointerExceptions when outputRoot is null
added AnnotationFilter interface and modified PdfPage , PdfRenderer , and PDFRenderer classes to utilize it for managing annotations based on a filter to
refactor StackTraceCleaner class to improve exception handling to enhance performance and maintainability of stack trace processing
updated content disposition header to set " text / css " or " text / javascript " for specific paths to ensure correct content type is used for
hhh - 14827 skip criterialiteralinselectexpressiontest on some dialect
updated the parameter name from ` slot ` to ` slotSize ` and modified the logic for initializing ` stats ` to improve clarity and ensure
added ` getStats ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and ` DocBuilder `
[ drools - 5842 ] add long polling option to kie client ( # 5843 )
refactor scrolling functionality in PagedView and BaseOverview to use a new scroll method and improve gesture handling in LauncherInstrumentation to enhance
updated unlocks initialization in UI . java and added a button in PausedDialog . java to enhance user experience by providing a clearer dialog
clear the drag event list in PlayerEventListener to ensure the drag event is properly processed before proceeding
added a constant for the default identifier in StreamResult . java to provide a clearer way to specify a default parameter for the StreamResult class
updated exception type in the test method from MalformedURLException to IOException to ensure proper handling of IOException in the test method
updated printBoth to include chunk type and modified skip condition in TsFileSketchTool . java ; added buffer flip in LocalTsFileInput .
added a ImmutableSet to exclude specific Swift headers from the UmbrellaHeader class to improve header management by excluding specific Swift headers
[ grizzly ] fix checkstyle violation in grizzlyasynchttpprovider
added encode ( ) method to RequestPlugin . java to ensure proper handling of encoding in requests
mondrian : fix npe in rolapnativesql when use db2
added null and empty password validation in LdapAuthenticationProviderImpl and created a corresponding test class TestLdapAuthenticationProviderImpl to ensure that a valid password
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters list in ProjectRecordBatch . java to ensure that complex writers are properly cleared when the condition is met
added @ SuppressWarnings ( " serial " ) annotations to multiple cache - related classes to suppress serialization warnings for better code clarity and maintainability
removed the public modifier from the ClassGraphClassLoader class and improved null - checking logic to enhance code clarity and prevent potential NullPointerExceptions
added error handling for schema errors and modified return statement formatting in ErrorResponseException . java to improve error reporting and provide clearer output for location errors
added a constructor to the EventSourcingRepository class that accepts both an AggregateModel , EventStore , SnapshotTriggerDefinition , and RepositoryProvider
refactor symbol handling logic in binary node processing to improve clarity and maintainability of symbol definition logic
modified the search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of screen name to improve user experience
fix : do n ' t send ` ` awake _ str ' ' when in standby mode
tmi - tiff : use ` ` chunky ' ' instead of ` ` extension ' ' for planar configuration
added a close ( ) method call to ItemListTag . java to ensure proper resource management and prevent memory leaks
fix the laser table not update their energy when it ' s full
added two new files , SigInt . java and SigIntBarrier . java , implementing signal handling for thread interruptions to provide a
refactor graph model handling in ExporterGEXF . java to support hierarchical graphs and improve edge counting logic to enhance flexibility in graph
replaced byte array with Hadoop Text for handling null strings in TCTLSeparatedProtocol . java to improve performance by utilizing Hadoop
[ # 1770 ] fix index out of bound exception ( # 1770 )
updated the condition in CatalogComparator to check for the ORIGINAL _ CASE instead of DB2Database to ensure correct comparison of schema and catalog
danielwagnerhall : re - enable browsermobproxytest . testbrowsermobproxy and . testbrowserm
fix potential npe in modelrepositoryimpl
removed duplicate call to reset ( ) for mTextWatcher in InPlaceEditView . java to improve code clarity and maintainability by elim
improve javadoc for internalbytearray and trufflelanguage . gettrufflestring ( ) .
[ hotfix ] [ graph ] update to use generic type instead of tuple3
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the Class Á file and added a new DiacriticTest class for testing to remove unused code to streamline the codebase
[ java ] use a cyclic barrier in cluster membership test to avoid intermittent failure .
added error handling for WorkspaceReader lookup in DefaultMaven . java and updated project collection logic in DefaultGraphBuilder . java to improve robustness
updated SSL scheme comparison and improved test assertions in ServiceRegistryConfig and TestServiceRegistryConfig to enhance clarity and ensure correct IP port validation
refactor Mockito class to improve readability to enhance maintainability and facilitate future development
removed an unused parameter from the Jdbc3Connection constructor to simplify the constructor signature by eliminating unnecessary parameters
refactor the servlet instantiation logic into a separate method ` ensureInstance ( ) ` to improve code readability and maintainability by reducing duplication
added logging functionality and modified delta server time handling in BinanceExchange and BinanceBaseService to improve server time tracking and enhance logging capabilities for
added binding check for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
replaced direct call to getComponentForm ( ) with a null check for the form before deregistering the animation to ensure proper handling of null form
modified the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and updated related implementations in ` ShadowBitmapFactory .
[ java ] use configuration . number _ of _ messages for example example .
added click and long - click functionality to the tweet holder in TimelineArrayAdapter . java to improve user experience by preventing multiple clicks and
added " text " to the unmodifiableDataTypes list and modified conditionals in NumberType . java and ColumnSnapshotGenerator . java to enhance data
re - enable testentryprocessorbouncingnodestest . testentryprocessorbouncingnodes ( # 3683 )
updated method name from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
added a null check before adding a result to the inbox in CreateBridgeServlet . java and updated tests in CreateBridgeServletTest . java to
refactor methods in CrawlServer and PreconditionEnforcer to improve thread safety and consistency to enhance thread safety and maintainability of the code
replace direct calls to ` getDisplayName ( ) ` with a local variable ` dName ` to improve code readability and prevent potential null pointer exceptions
added support for a default shader in the SpriteBatch constructor and updated related methods to enhance flexibility in shader management and improve code clarity
added a property setting for synchronous commit option in TestUtil . java to enable synchronous commit functionality in the application
added element coercion functionality to SortedSetTypeCoercer and updated tests for coercion to ensure that duplicate elements in sorted sets are
refactor message ID assignment based on file and favorite status in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality of
added a condition to check if the character is within a range of 256 in URLPathEncoder . java to ensure safe access does not exceed the
modify fragment storage registration to use a dynamic port based on the current time to ensure the correct port is used for fragment storage registration
updated the assertion in HostResourceProviderTest to return an empty map instead of an empty map to ensure that the method correctly returns an empty map
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
move init ( ) and initstyles ( ) method to the sipcommframe class so that it do n ' t interfere with the
removed the ` ShadowHtml ` class and updated test assertions in ` HtmlTest ` to streamline the code by eliminating unused imports and
added a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` to implement a black hole implementation for StarTreeRecordStore to
updated Jetty logger names from " org . eclipse . jetty " to " org . eclipse . jetty . http3 "
modified the visibility of the ` addListeners ` method in ` MockSettingsImpl ` to package - private and added tests for listener validation to enhance
updated the implementation of StateHandleStore . java to improve performance and maintainability of the code
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
update default section to be consistent with edit
bug 6175 - jmeterutils : use try - with - resources to prevent resource leak
camel - 1145 : fix the camel - 1145 test failure on window
added libraryTarget as a parameter and refactored jar parameter retrieval methods in JarBuildStepsFactory to improve clarity and functionality of library jar
remove invalid reference to ` ` validating - cerficates ' ' in trust manager
http : / / issues . apache . org / jira / browse / amq - 4892 - remove the overridden getpagesize
added a case for the CLOSED state in IteratingCallback . java to ensure proper handling of closed states during iteration
added an ` isAuthorized ` boolean to the ` AccessControlContext ` class and updated the constructor accordingly to ensure the ` isAuthorized ` state reflect
added a check to ensure the application is an instance of AbstractOSGiApp before sending the DEPLOYING _ EVENT event to improve handling
added handling for " tiff " codec in DLNAMediaInfo . java to ensure correct MIME type is used for Tiff files
refactor variable names and initialization in OptimizedCallTarget . java for clarity and consistency to improve code readability and maintainability by redu
added a new file ` CubocDesktop . java ` and modified ` Map . java ` , ` MapRenderer . java ` , and
updated PolicyMonitor initialization to use the target directory instead of the test resource directory to ensure tests run in the correct directory structure for testing purposes
added a call to remove all files from the trashbin list adapter in TrashbinActivity to ensure that all temporary files are removed from the
changed the package reference from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun .
fix handling of llvmglobal storage node when check if it exist .
updated the ` createLauncherEvent ` method to include ` Intent ` as a parameter and added hash code logic for source data to enhance event processing
added a constant for the maximum burn amount and updated the return statement accordingly to ensure that the burn amount does not exceed a defined maximum of 100000
refactor UniqueConstraintSnapshotGeneratorSnowflake to streamline the creation of unique constraints and improve schema handling to enhance code readability and maintain
modified the assignment of the ' item ' string to conditionally use ' nameValues ' based on the ' insertStatementBuilder ' to improve cl
updated test method and import statements in ServiceValidateControllerTests . java and changed PGT URL from HTTP to HTTPS to ensure compatibility with secure P
modified the ` getDefaultValidFunctionName ` method to include an ` isStatement ` parameter and introduced a ` hideDefaultFunctionName ` method to handle statement
refactor JarLauncher class to improve code structure to enhance maintainability and readability of the codebase
updated variable and method signatures to use generics for type safety to enhance type safety and improve code clarity
added a new dimension for 320x200 in DeviceConfiguration and modified return statements in OperationSetVideoTelephonyJabberImpl to
added a test method to update PGobject in ResultSetTest . java to ensure correct handling of PGobject objects in database operations
updated PasswordResetEndpoints to check for non - UAA origin before returning an UNPROCESSABLE _ ENTITY for bad requests to ensure correct response handling
replace retrieval of the second child of the document with direct retrieval of the document element to improve code clarity and maintainability by using the document
refactor caching logic in Cache . java to improve performance and maintainability of cache management
rename timeInSec and prevTimeInSec variables to timeMillis and prevTimeMillis in Isochrone . java and SPTResource .
add a validation check for the bindY value in the light relay logic to ensure that the bindY value is valid before proceeding to avoid
added a new ` Chainer ` class and updated ` CollectionSubject ` and ` MySubject ` to utilize it to improve flexibility in
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the recordedTime calculation in Locations . java to accommodate a maximum of 619315200000 milliseconds to ensure accurate time representation
added a check for Windows terminal type and resizing status in LineReaderImpl . java to ensure proper resizing of the status view on Windows
updated version state handling in UpdateDesiredStackAction . java to ensure host version is only set to INSTALLED if it is not already required to
move jsinteroprestrictionscheckertest to jre _ bundle _ deploy so it can be use by other test
replaced instances of HashSet with LinkedHashSet in multiple Java files and updated method return type in DefaultMavenExecutionRequest to return MavenExecutionRequest to
nodeengine : remove unnecessary try / catch in operationserviceimpl # getoperation ( )
refactor the configuration resolver method call in KnativeEnvironment . java to improve readability and maintainability of the code
updated JMX enabled thread pool executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency
added a connect ( ) method in CloudSolrClient and implemented a test for uploading configuration in TestCloudSolrClientConnections to ensure proper connection handling
synchronize access to ` ` allbindings ' ' list in order to avoid race condition .
added methods to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner to improve code clarity
added TreeMap to the list of classes in SecureXStream and implemented a test for adding and checking styles in XStreamPersisterTest to ensure proper
[ drools - 1341 ] add kiemodulemodel to kiehelper ( # 1341 )
added a check for Farmland instances before canceling the Soil dry event in BlockEventListener . java to ensure that the Soil
added a default implementation of the getLocalIp ( ) method that returns null to provide a default implementation for the method that returns null
updated JdbcStepExecutionDao to deserialize integer values from a binary stream and modified test cases in AbstractStepExecutionDaoTests to ensure correct serialization and
updated comments to clarify the purpose of the code and improve comments to enhance code readability and maintainability by using more descriptive comments
added " libs " to the resource list and included " python37 " in the list of supported resources to enhance resource management and support additional Python
refactor plugin table initialization and add a refresh button to enhance user experience by providing a refresh option to enhance user experience by providing a clearer
updated log level from info to warn for history file errors in DefaultHistory . java to improve error handling by providing a more specific log level for
cloudstack - 8237 : fix npe in vmwarestorageprocessor when vm be attach to a vmware host
camel - 8181 : camel - sftp - allow to run camel - sftp test on window
updated ExperimentalMockitoJUnitRunner . java file to improve test coverage for mockito functionality
updated serial ID handling in GpsSettingsActivity , Session , HttpUrlLogger , and HttpSettingsActivity to use a utility method for consistency to
removed deprecated methods from SwapGBuffers class to improve performance and maintainability of the code
added null checks for spatial and skeletonControl before removing it to improve robustness by preventing potential NullPointerExceptions
added a test for setting smart replies in ShadowRankingTest and refactored ShadowRanking to use a new RankingReflector
[ java ] do n ' t iterate over all segment file for a recording in the archive .
simplified the retrieval of carrot2ResourcesDir in CarrotClusteringEngine . java to improve code readability and maintainability by
added null check for testRect in WindowsTreeUI . java and created a new bug8004298 . java file to ensure proper handling
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the
replaced null return statements with exceptions in RecommenderMapper . java and modified the get method in CacheTest . java to throw TasteException
added clientInfo initialization in SurrogateAuthenticationEventListenerTests to capture and utilize client - specific information during tests
added a isUserView variable set to false in CardPresenter . java to disable user view functionality for better user experience
updated references from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` and removed unused methods in ` GraphvizJavaExecutorUtility `
replaced direct calls to ` metricService . getOrCreateHistogram ( ) ` with local variable ` constructBatchHistogram ` and ` syncLogTimePer
added a new module - info . java file for the SQLite connector module to define module dependencies and exports for better modularization
added a delay of 500 milliseconds in StreamResetTest . java to ensure proper timing during test execution
removed conditional check for " new " web . type " new " in permissionsManager initialization to simplify the code by eliminating unnecessary checks
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a depth method to the SpringLoadedState class that returns a fixed value of 0.5 f to provide a default depth adjustment for better
replaced manual array copying with Arrays . copyOfRange for data handling to improve code readability and maintainability by using a constant for minimum size
[ hotfix ] fix checkstyle violation in executiongraph
removed unnecessary notification handling and removed the bottom layout interactions in NotificationActivity and NotificationRenderer to streamline the notification processing process and improve user experience by
added null check for invocation and updated exception messages for clarity to improve error handling and provide clearer diagnostics for unexpected exceptions
fix checkstyle issue in io / entity / glowcontainer . java ( # 119 )
replaced the method for obtaining the setter in ProxyMaker . java to improve code clarity and maintainability by using getDeclaredMethod instead of
replaced direct integer type casting with Integer method calls for bitand queries to improve code clarity and maintainability by using the intValue ( )
removed StringUtils . join from baseSubject return statements in BaseEmailContentFormatter . java to simplify string concatenation by removing unnecessary StringUtils . join method
added logic to manage the visibility and visibility of the layout provided by a new JPanel based on the layout node and its properties to improve user interface
updated condition to check for null location in ServerCallable . java to ensure proper handling of dead servers when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for null DSA key parameters in BasicChecker . java and simplified public key generation return statement to improve robustness by preventing
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring ignored media types to improve code readability and maintainability by encapsulating the logic
added taskNum variable and updated debug logging format in LlapBaseInputFormat . java to improve clarity of task attempt ID information and enhance
added properties to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding to enhance test flexibility by allowing bean definition
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure and class visibility for BTCMarkets streaming classes to improve clarity and maintainability of the codebase
added a new test method ` issue151 ( ) ` in ` FencedCodeBlockParserTest ` to ensure that non - BRs
added a new file CompatibilityTest . java for testing Compatibility properties to ensure correct parsing and validation of property values in the Comp
added new utility classes for push registration and signature verification in the application to enhance functionality for managing push notification and security in the application
fix the bug in tablerebalancerrunbalancerrule # getnextsinglesegmentassignment ( ) where the number of
bump version to 2.7 . 0 and release note
( chore ) camel - core : fix line separator issue in test
throw a sockettimeoutexception instead of return false for a bio . readtimeout ( )
set default value for friction , restitution , and density in FixtureDef to 0.2 friction , and density
[ te ] rename fetchsaclingfactors to fetchscalingfactors in anomaly classifier
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve responsiveness by allowing users to wait for broadcast
added unit tests for reading font and link tags in ResourcesTest . java and adjusted the span calculation in ResStringPool . java to ensure correct
fix typo in guistatscomponent . patch ( # 2598 )
added permission handling for CALL _ PHONE in Launcher . java and defined a new Android SDK version check in Utilities . java to ensure proper
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes , and added locale handling in Startup
refactored GeoEncodingUtils to use bitwise operations for byte manipulation and changed visibility of BUF _ SIZE _ LONG to private and removed the
added a synchronized method ` isDockerAvailable ` to ` DockerClientFactory ` to check if the Docker client is available to ensure thread safety when
removed the static final String VPX from CodecTypes . java to streamline the code by eliminating unnecessary dependencies
added coordinatorAddress parameter to DistBuildRunCommand and updated its usage in AbstractDistBuildExecutorArgs to allow coordinator address configuration for remote coordinator thrift
added path matching functionality to FsUtils and refactored timer handling in WrapTimer to improve code readability and maintainability by centralizing timer
added a check for non - zero values before adding label values in TestTaxonomyFacetSumValueSource . java to ensure that only valid entries are
ggb - 1881 make sure ` ` true ' ' be not ` ` false ' ' in tostring ( )
added a test annotation to the TestPerfBenchMarkDriver class to enhance test coverage for performance benchmarking
added a method to set materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that materialization time is
added error handling for missing native dependencies in VoskSTTService . java to improve robustness by logging errors when native dependencies are missing
bugfix : do n ' t show the isoneway property in the gui , use the responsecodeok ( ) method
simplified the break weight determination logic in GlyphView . java to improve code readability and maintainability by using a more concise
refactor sync check reading logic in RCFile . java to improve performance and efficiency of sync checksum processing
added an @ AwaitsFix annotation for the AutoAddReplicasPlanActionTest to address the issue SOLR - 13028 in the
replaced direct calls to ` getSortedByCounts ( ) ` with a new ` LinkedList ` for storing ` steps ` and ` processors ` to
removed the order parameter from the ` setToSortedDataFlavorArray ` method and simplified the ` DataFlavorComparator ` implementation to simplify the
added an " - infoport " argument with a random free port for the Thrift server to ensure that the server uses a free port for
added a check for end - of - file in the RegExpScanner class to ensure proper handling of end - of - file scenarios in regular expression
refactor conditional checks for enabled metrics and timers to use sets instead of system properties to improve efficiency and maintainability of the code by reducing
fix a npe in the jabber chat room when there be no nickname .
add miss file name to error message ( fixes # 388 )
refactor refresh token creation logic into a separate method to improve code readability and maintainability by encapsulating refresh token creation logic
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove dead code in yarnflinkapplicationmasterrunner
added a method to return a HardwareBuffer in ShadowNativeImageReaderSurfaceImage . java to provide a way to access the hardware buffer for native
set the SSL URI for the BTCChinaMarketDataService to " https : / / data . btcchina . com "
pmd : use project . getbasedir ( ) . toString ( ) instead of hardcoded file . separator
added two new files , OauthController . java and Oauth2PluginTest . java , and implemented a test for OAuth2 plugin functionality to enhance
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future updates
moved ` flatMap ` and ` flatCollection ` methods from ` AbstractStreamEx ` and ` EntryStream ` to ` StreamEx ` ,
added error logging for invalid parameters in RestCodec and improved exception handling in ExceptionToProducerResponseConverters to enhance clarity of error messages and
updated the logic in RobolectricClassLoader to allow both org . specs2 and org . scala to be run with Maven Sure
fix check for non - transmittableaudioconverters in mediumcontrol . gettransmittableaudioconverters ( )
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator . java ` and updated imports in ` CreateTable
added methods to check GML versions 2.3 and 3.4 in the NormalizedMultiValuesTest class to ensure compatibility with new G
added a volatile boolean field ` wasInvoked ` in ` NetworkTestUtils ` and updated related variable names in ` UaaHttpRequestUtilsTest `
added a configuration check before expanding regex mappings in ColumnarDataSource and refactored return statements in RowProcessor to improve code reliability and
replaced the ` splitIntoThirtyParts ` method with ` splitIntoThirtySecondsParts ` and introduced ` getPositionsArraySize `
added XLCDCommunicator and XLCDController classes , and modified FirmwareUtils to use a switch statement for firmware checks to
[ drools - 1560 ] fix xsd validation on kie - api
added retry logic and assertions to check if the transaction message is not empty in multiple event queries to ensure that the retry logic correctly handles cases where
replaced thread state assertions with thread join logic in WorkerProcessPoolTest . java to improve thread management and ensure proper termination of threads
modified the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased FREEZE _ V2 , UNFREEZE _ V2 , WITHDRAW _ EXPIRE _ UNFREEZE ,
updated method signature and configuration handling in DownloadPlugins . java to improve error handling and ensure proper configuration management
deleted the ` SpringTransactionHooks . java ` file and replaced its usage with ` AbstractSpringTransactionHooks ` in the test to streamline
refactor AbstractClassAssert to improve code readability to enhance maintainability and facilitate future updates
added a new file GetUninitializedStringValueTarg . java to demonstrate the handling of uninitialized string values to facilit
added support for handling provided dependencies in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to support a new query pattern to enhance dependency resolution
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC in FeatureFlags . java to allow users to synchronize keyboard
replaced the system anomaly message retrieval with a boolean flag for saving bug reports to simplify the logic and improve readability by avoiding unnecessary
added a constant for " cinepack " format in FormatConfiguration and utilized it in LibMediaInfoParser to support Cinepack format
added CAMERA _ BOBBING configuration and updated animation offset logic in Player . java to improve animation control based on camera b
updated the data retrieval from ` b . data . describe ( ) ` to ` b . digest . toString ( ) ` in ` Grpc
deleted the HSQLDBServerFilesFilter . java file and replaced its usage with an anonymous implementation of FilenameFilter in TestUtility . java to
walletappkit : prevent call restorefromkey if restorefromseed be null
updated API version retrieval from APIVideoVersion to APIDataSeriesVersion and added logging for missing title based on IMDb ID to improve clarity
added a method to check if a method invocation has a specified type and updated the typeExists flag accordingly to ensure correct handling of method invocations based
updated array size and indexing in AmbientCubemap . java to use a constant for better maintainability to improve code readability and
bugfix # 224248 - profiling feature should reset the mode if it be not configure properly
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskLastN classes , and
clean up derbyblockstore and boundedoverheadblockstore unit test to use temporaryfolder
add itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) method , fixes # 2
fix renderstate # line _ width not work , fixes mc - 167447
danielwagnerhall : set ` ` browser . startup . page ' ' to ` ` 0 ' ' in firefox
added a condition to check for both CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of HTTP / 1.
rename the task from " compile " to " process - classes " to clarify the purpose of the task for processing classes
replaced the shutdown method with the closeIdleConnections method in HTTPHC4Impl . java to improve connection management by allowing idle connections to be
added a check for the aggregate function suffix before processing metrics in AmbariMetaInfo . java to ensure metrics are only added if they do
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this new method to improve flexibility in handling full
added a new Java file that counts the frequency of integers from user input to provide a solution for counting the number of consecutive frequencies
initialized the SocketChannel variable to null in ClusteredAgentManagerImpl . java to prevent potential null pointer exceptions during agent initialization
updated test cases in MutisignOperationerGodicTest . java to improve test coverage for improved reliability
added error handling for NoSuchElementException in StaxEventItemReader and a new test for restarting at the end of a file to improve robustness
replaced specific imports with a wildcard import in ShadowTextView . java and modified return statements in TestAttributeSet . java to improve code read
updated import statements to use net . minidev . json instead of com . nimbusds . jose . shaded . json
added support for " AIX " OS in the OS . java file and updated OSMap for " Linux - s390x - 64
server : use router control ip instead of private ip for vr
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate asynchronous execution of RunnableWith
remove xmpp ignore test from spring - integration - xmpp
replaced direct integer multiplication with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code read
removed unnecessary whitespace in KMeansDriver and FuzzyKMeansDriver run method calls to improve code readability and maintainability
updated the calculation for ClassSize in KeyValue . java to include additional parameters to improve the accuracy of the return value based on class size and row
camel - 15663 : camel - core - optimize to reduce object creation by add service into the context
added support for handling ` ConditionalTask ` in ` SparkCrossProductCheck . java ` to enable processing of conditional tasks in the cross product check
force reload when a managed profile was added or removed to the filter in Launcher and LauncherAppState to ensure the model reflects the
updated the condition in ` LoginInfoEndpoint ` to include a check for ` jsonResponse ` in addition to ` accountChooserNeeded ` and added tests
added a method to convert the timestamp and region name to a descriptive string in AssignmentManager . java to improve readability and clarity of
updated HuobiAccountInfo to include a new " result " field and modified related methods in HuobiAccountServiceRaw to improve cl
added support for " PERIOD " in MariaDBDatabase and a corresponding test case to ensure proper handling of the " PERIOD " column
[ beam - 50000 ] configure the default environment of portable worker to the official beam sdk version ( 8 or 11 )
added new changelog entries for Android 7.1 compatibility in VersionChangeLogs . java to clarify the use of launcher shortcuts and dictionary loading
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and TestUtil . java
removed a debug print statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] check that aeron client be not null before invoke aeron client in consensus module .
added validation for implicit lambda parameters and updated type creation logic in method parameters to ensure proper handling of implicit parameters and improve type safety
refactor menu item visibility and enabling methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
added support for BTC _ deposit type in BTCETransHistoryResult . java and updated corresponding test assertion in BTCETrans
replaced List with Set for series , exceptions , and exceptions in RetryFilterFunctions . java to improve performance by using a standardized set for
marked the PluginLoader class as deprecated to indicate that the class is outdated and should no longer be used
updated the condition in LastQueryExecutor and added a new test in IoTDBLastIT for handling unseq time larger than sequence time to ensure
updated the newline character in the HTTP request string to ensure consistent formatting across different operating systems
added a static block to set the SLF4J simple logger to " ERROR " to enable logging of HTTP errors in the build process
added a call to setSafeArea on titleBar to enable safe area visibility for the title bar
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure proper retrieval of series metadata from the list
added a SQL syntax test for renaming a column in AlterTest . java to ensure proper parsing and deparsing of the ALTER TABLE SQL
changed the visibility of the copyState method from private to public to allow access to the method from other subclasses
fixed - rexecutorservice . executecallasync ( ) method should return a complete future instead of null
added a new constant ` SUFFIX _ SPLIT _ FILE ` and updated references in ` FileLister ` and ` FileSystemSplit ` to use
[ hotfix ] [ table - common ] fix checkstyle violation in orc
removed unnecessary null check for valueArg in CompareFunctionsProcessor . java to improve code readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
removed redundant ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added checks for invalidated state in AbsSwipeUpHandler and null check for lastGestureState in TaskAnimationManager to ensure proper handling of
refactor locking mechanism by introducing getLockTimestamp and setLockTimestamp methods across multiple classes to improve code clarity and maintainability by centralizing
modified the way the audio track ' s artist is set by introducing a ` getArtist ` method to improve code readability and ensure
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is not initialized
updated SplitText . java to include null checks for splitInfo and headerFlowFile , and added new test cases in TestSplitText . java
added support for Windows key store handling in HttpsConnectorFactory to ensure compatibility with Windows - specific keystore configurations
increased the default CHECK _ TIMEOUT from 400 to 1 , 000 in RestTemplateSenderTest and WebClientSenderTests to improve test reli
added a condition to check if the result code is not FILE _ NOT _ FOUND before executing the else block to ensure proper handling of non
added animation functionality and modified value handling in the Slider class to improve animation control and control over animation duration and interpolation
updated assertions in LineSeparatorProcessorTest to use a more descriptive variable name to improve code readability and maintainability by using a more d
changed maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to optimize memory usage for better performance
added a new test method ` negateTernaryNotUnwrapped ` to ` UnwrapParenthesesTest . java ` and modified the return statement
camel - 16850 fixed the npe issue of hazelcastqueueconsumer . poll ( )
added TextFeedbackTest to facilitate testing of text feedback in the JUnit framework
replace Math . round with Float . compare for score comparison to improve precision in score comparison logic
updated case numbers for DENSITY _ 560 and DENSITY _ 4K in AddAndScaleMultiImage . java and refact
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets `
log4j2 - 1340 fix defaultlogpublisher to not publish metric with 0 time
added support for remote SCM functionality in Configuration and RuntimeEnvironment classes to enable or disable remote SCM execution based on command - line options
updated state assignment logic to include additional conditions for STATE _ END , STATE _ RINSE _ HOLD , and STATE _ RINSE
replace ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging in ` StatsLogCompatManager . java ` to standardize
corrected the variable name from ' log ' to ' LOG ' for consistency to improve code readability and maintainability
added tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure proper serialization and deserialization of ProjectGenerationEvent
make sure preview point do n ' t disappear
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future updates
[ flink - 2329 ] [ test ] add check for negative remaining time before run random read .
refactor multiple Java files related to heap dumping to improve code organization and maintainability across the project
added " -- gc - sections " and " nocopyreloc " flags to the ldflags initialization in NdkCxxPlatform
updated SpringCloudCircuitBreakerFilterFactory to expand fallback URIs and generate a full fallback URI using ServerWebExchangeUtils to enhance the circuit breaker
danielwagnerhall : rename ` ` test ' ' to ` ` test ' ' so that they do n ' t
do n ' t add the sst element to the readonlysharedstringstable when use xssf
added a method to retrieve an account net via HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java
added a check for available text width before layout processing in SwingUtilities2 . java and modified GTKLookAndFeel setting in Test6
refactor FlatteningIterator to simplify iterator pushing and improve clarity to enhance code readability and maintainability by using more descriptive variable
replace HTML tags in title and body with empty strings to ensure consistent formatting of HTML tags in notifications
doc : generate sample code in the java microgenerator ( # 49 )
add a test method to reload and delete any existing question in the ' InstructorFeedbackEditQuestionsUiTest ' class to ensure that the
hssfsheet . getfirstrownum ( ) and hssfsheet . getlastrownum ( ) now return 0 when there
added permission checks for launching activities and refactored related data handling in Launcher . java and PackageManagerHelper . java to ensure proper
[ java ] do n ' t send session open event to consensus module .
refactored hashCode implementation in AbstractParquetMapInspector and simplified equality checks in StandardParquetHiveMapInspector to improve code clarity
added buffer flushing and release logic for remotely closed HTTP3StreamConnection to ensure proper resource management and prevent memory leaks when remotely closed
changed SplitReader interface to extend AutoCloseable and removed the close method from SplitReader to enhance resource management by allowing AutoCloseable for better
removed the deepCopy ( ) method from GsonBuilder class to streamline the code by eliminating unnecessary dependencies
sulong : return not _ found instead of null in sulong . getscanner ( )
refactor file opening and closing logic in RestClientRequestImpl . java to improve asynchronous file handling to enhance code readability and maintainability by
removed an unnecessary line of code in GrblController . java to improve code readability and maintainability
replaced MockFactory class loader usage with a new SearchingClassLoader class to improve class loading flexibility for mocking classes
add test to demonstrate the refresh flag bug
added support for LEFT _ SEMI _ JOIN condition in the ConstantPropagateProcFactory to ensure proper handling of left semi join conditions
refactor HttpReceiver and HttpSender to simplify response completion checks and improve response termination logic to enhance code clarity and ensure proper handling of HTTP
[ hotspot ] use arrayoopdesclengthoffset instead of arraylengthoffset .
http : / / issues . apache . org / jira / browse / amq - 4358 - use fixedcountsubscriptionrecoverypolicy
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a check for ` isRunning ( ) ` before invoking ` appCtx . stop ( ) ` in ` CrawlController . java ` to
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return the result of the font drawing
replaced the way metrics are retrieved in SpringmvcClient to utilize MetricsPublisher for metrics retrieval to improve metric management by utilizing a
updated variable names and method references in AccountAgeWitnessService . java for clarity to improve code readability and maintain consistency in naming conventions
refactor StructureHeader and StructureReader classes to improve code readability and maintainability to enhance code clarity and maintainability by standardizing switch
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and its associated tests to enhance flexibility in handling resource URL providers in the
add a transform to dexreturninliner to make it easy to understand
refactored enrichedruledto to extend rule . properties instead of rule . configuration .
removed the NOFOLLOW _ LINKS option from the directory return statement in PathResource . java and added additional arguments in AliasCheckerSymlinkTest .
[ hotfix ] [ table - planner - blink ] remove sqldialect usage from executionentry
refactor ` rDotJavaPackages ` to use a ` Supplier < ImmutableSet < String > > ` instead of an ` ImmutableSet < String >
[ java ] add test for packageinfo annotation in java . base
added a configuration setting for minimum cross compaction unseq file level in IoTDBDescriptor . java to ensure that the minimum unseq file level is
[ hotfix ] [ resourcemanager ] move resourcemanager class to ' active ' package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated the ` ZipResource ` class to handle URI creation with spaces and added a new test class ` ZipResourceTest ` to improve robustness
refactor ExpandableUploadListAdapter to improve handling of upload success and thumbnail generation processes to enhance user experience by ensuring proper thumbnail generation based on
refactor configuration merging logic in RobolectricTestRunner to handle parent classes and methods to improve clarity and maintainability of configuration merging
updated block and item lists to filter out registrations with null registry names to ensure blocks and items are only processed if their registry names are not null
refactored methods in AbstractDataChangedListener to be non - abstract and refactored WebSocketDataChangedListener to extend AbstractDataChangedListener
updated JSONPojoConvertor to handle enum types and modified color handling in JSONPojoConvertorTest to improve type safety and enhance color
added a deprecation warning for the deprecated ` -- view ` option in the project to inform users that the option is deprecated and will be removed soon
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated related logic in ` GWTRequestWrapper `
added orientation correction functionality to GyroControl to handle device orientation changes to improve user experience by allowing more flexible control over device orientations
update BIOME _ LIST _ SIZE to use the length from BiomeGenBase instead of a hardcoded value to ensure the correct size
fix getinterfacetest to use print ( ) instead of println ( )
removed duplicate declaration of the environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to collect
added a preload parameter to MMapDirectoryFactory to control the preload behavior of the map directory
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components in the application
refactor QuickConnectREST to improve code readability to enhance maintainability and facilitate future updates
added aspect ratio and a default card image drawable in CardPresenter . java to enhance the visual appearance of the card ' s port folder
[ ds - 3352 ] fix issue with authentication count selector not work in xmlui .
updated VectorHashKeyWrapper to check if longValues , doubleValues , and byteValues arrays are non - empty before cloning them to avoid unnecessary
added tests for the system . nanotime ( ) method in TimeChangeTest . java to ensure that the system . nanotime (
added line trimming logic to handle null lines in MultiPartFilter . java and included a print statement in MultipartFilterTest . java to improve
add livingexperiencedropevent to fire when an entity be drop .
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages instead of hardcoded strings to improve localization and clarity
remove unsupportedoperatorvisitor , since it ' s not use in planner
added RdepsFunction implementation and improved state checks in GraphEnhancementQueryEnvironment . java to enhance dependency management and ensure proper handling of
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a flag to scale the entire rocket in the selection option to ensure the selection option reflects the current state of the entire rocket
replaced ` Arrays . toString ( ) ` with a direct call to ` assertEquals ( bytes , rs . getBytes ( 4 ) ) `
added time boundary handling for hybrid tables in BaseBrokerRequestHandler and refactored query creation methods to improve code clarity and maintainability by redu
[ java ] do n ' t add socket reference to the poller in case of an error .
updated regex pattern and modified album title handling in EightmusesRipper . java to improve accuracy in title processing and enhance image download
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to improve code
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone devices in landscape
replaced calls to ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTree
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` and added a private method ` readMatchingLines ` to enhance
added dynamic method invocation for ` getResultStream ` in ` JpaQueryExecution ` to ensure proper handling of the ` getResultStream ` method for
fix npe in physicprocess when entity be null
added test for entry processor with predicate to clear map when value attribute be indexed
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color handling in Utils . java and modified htmlMessage in UtilsTest . java to ensure consistent color representation and improve test accuracy
disable menu item when input be empty
updated the scratch path format in Aapt2Link . java and added a recursive step for the link tree path to improve code clarity and
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
do n ' t clear selection on undo / redo
refactor exception handling in YsldValidator to catch EmptyStackException instead of MarkedYAMLException to improve error handling and provide clearer
added isCanceled ( ) method implementations across multiple classes to provide a consistent implementation of the call ' s cancellation status
refactored the ` isAnnotationPresent ` method across multiple classes to implement a default implementation in ` AnnotatedElement ` to improve code readability and maintain
added a default implementation for the removeAllWidgets method in UILayout . java to provide a clearer way to remove all widgets from the application
[ hotfix ] [ test ] fix flakiness in yarn test
opensslcipher . getoutputsizeforfinal ( ) : use the result of getoutputsizeforupdate ( ) instead of getoutputsizefor
added handling for forced transcoding of high - res content in PlaybackController . java to ensure compatibility with Fire TV Stick and improve
[ spark dataset ] fix a bug that cause test to fail
replaced specific imports with a wildcard import and modified listener handling logic in GpsLoggingService . java to streamline listener management and improve code
refactor ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for ` fullwidths ` to
added import for BaseItemDragListener and integrated it with ShortcutInfo handling in FolderIcon . java to enhance drag - and - drop functionality
[ signavio ] add createemptyartifact ( ) method to repositoryconnector interface .
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed conditional check for afterAug1 in VideoViewerActivity to simplify the condition for video link loading
camel - 14850 : camel - sftp - compact the path when send to a remote server . thanks to jason ben for
updated the assertion in BaseWeatherConsumerTest from assertIsSatisfied ( ) to assertMockEndpointsSatisfied ( 20 , TimeUnit . SECONDS
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using
added support for LARGE _ FERN species in the BlockDoublePlant and BlockType classes to ensure compatibility with LARGE _
replaced ` tree . setFocusable ( false ) ` with ` tree . setRequestFocusEnabled ( false ) ` in ` TranscodingTab .
do n ' t swallow exception in virtualmachinemanagerimpl . getvirtualmachinemanager ( ) . ( #
updated the ` acceptLicense ` method in ` DB2TestSystem ` and modified the condition in ` DockerDatabaseWrapper ` to exclude ` DB
changed the ` units ` variable from final to non - final and added a setter method for unit group handling in ` DoubleModel ` , updated
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading operations for BTC and Z
added a check for the number of samples in TestPBRLighting . java to ensure that the correct number of samples is set based on
updated test tasklet names in StepWithSimpleTaskJobParserTests to remove the " job . " prefix to streamline test code by elim
added ' final ' modifier to variables in CentralAuthenticationServiceImplTests . java to ensure immutability of variables to improve code clarity
make sure ggbab ( ` ` ( ) ' ' do n ' t have a space
added multiple ` addServiceOutput ( ) ` method calls and modified the logic for handling service outputs in ` DDLSemanticAnalyzer . java
[ drools - 1340 ] allow bigdecimal to be cast to objectcreationexpr for biginteger .
added " org . eclipse . jdt . " to the WebAppContext . java file to hide the JDT used by the Jetty
changed the return value of the method from ` super . useAuthCache ( ) && cacheSPNEGO ` to ` false ` to simplify
added capitalization to the namespace assignment in PageTitle . java to ensure consistent capitalization of the namespace for better readability
camel - 16405 : camel - core - optimize rout engine to reduce stack frame in use during rout .
added a null check for the ZooKeeper object before setting it to null to prevent potential NullPointerException when zookeeper is not initialized
updated progress bar step message in Loader . java to ensure accurate progress reporting during mod initialization
replaced direct calls to ` mVibrator . cancel ( ) ` with a new method ` runOnUiHelperThread ( )
added a method to update the last remote stream ID in HTTP2Session . java to ensure the correct remote stream ID is used for processing
set render hint for text antialiasing in EditorHeader . java and EditorToolbar . java to ensure text antialiasing functionality is
[ java ] : use currentwindowsize instead of termwindowsize when determine flow control over run .
refactor : remove static import of enums in ctannotationimpl . java ( # 2598 )
refactor ExoPlayer class to improve code readability to enhance maintainability and ease of understanding
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve pixel retrieval by using a
replace direct initialization of ` PrintStream ` with a new method ` newPrintStream ` to handle encoding based on specified properties to improve flexibility in
updated vibration duration from 1 millisecond to 25 milliseconds in TouchableMovementMethod . java to improve user experience by allowing more time for v
added import statements for Date , Key , and InputStream in AppEngineSqlCloudSession , FlybushDataClearer , and TestEnvironment
refactor WebSocketClient constructor parameters for consistency and clarity to improve code readability and maintainability by standardizing constructor usage
simonstewart : fix a bug in the i18n test
updated error handling methods in BytecodeParser and SharedGraphBuilderPhase to use LoadConstantException instead of IllegalArgumentException to improve clarity and specificity
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper state management during test execution
added a static comparator for case - insensitive comparison in CoNLLUFeatures . java to ensure that null values are compared correctly to avoid potential
refactor parsing logic and improve error handling in JavadocTool . java and T7091528 . java to enhance code clarity and maintain
simonstewart : fix a bug in the firefox driver where an option can not be toggle in a multi - select .
added a check for the length of keys in HighestKvno . java to ensure that the count of keys does not exceed the expected
replaced direct assignment of attributeList with a try - catch block to handle Huge object BTrees with 1 record to improve error handling and
[ beam - 13434 ] use pdone instead of pdone in bigqueryio . expand ( )
updated the XML root element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added Swagger implicit parameters for the template
added a new file TestMultiANewArray . java to test multi - dimensional arrays in Java to ensure proper handling of multi - dimensional arrays
[ hotfix ] [ config ] remove unused configuration parameter ` ` secondary . storage . vm ' '
refactor block ID calculation and add head ID condition in SyncBlockChainMsgHandler . java to improve clarity and ensure proper handling of block
set the theme of the PreviewViewer to the preference in PreviewTabView to ensure the preview displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added idle timeout configuration and a test for HTTP idle time in ConnectorTimeoutTest . java and modified the idle timeout in ServerConnectorTimeoutTest .
coref : add miss property to coref constant
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
updated generic type usage in JpaPagingItemReaderIntegrationTests and corrected a typo in JobLaunchingGatewayParserTests to improve type
changed log level from warn to debug for child node logging to reduce log verbosity for better traceability
refactor ColorExtractionService to utilize a new method for extracting the hotseat palette and streamline color extraction logic to improve code read
added new methods for setting default data table entry and cell transformers in TypeRegistry . java to enhance the functionality of the data table type registry by
added an assertion to check if newAvailableShared is less than or equal to initShared in AtomicRemainder . java to ensure that the correct
chore ( regen ) : regenerate with update license year ( # 1 )
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
added a check for the presence of USER _ PROPERTY and AUTH _ HEADER in the info object before verifying the presence of AUTH _ HEADER to
added GET and POST routes for contact form handling and introduced a new Contact class with associated getter and setter methods to enhance the contact form functionality and
guac - 558 : make simpleuser use permission set for connection and connection group .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version
[ drools - 5640 ] fix typo in traitfactory . setmode ( )
updated method names and SQL queries to include ' alias ' alongside ' like ' in multiple classes to improve clarity and functionality by allowing
replaced manual closing of perDoc consumers with IOUtils . closeSafely method to improve resource management and avoid potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflow button to show the menu on click to improve user experience by allowing users to click on the overflow button
updated error messages for null and non - null references in the Subject and OptionalSubject classes to clarify the reason for null and non -
ggb - 1885 update line height for help button in av
move protobufferutilitiestest to core . util package to avoid conflict
fix ` ` divider position not update ' ' error when use ` ` split pane width ' '
add ` ` crossreference ' ' entry to aux file generator for cross reference file
refactor geoserverfeaturesource and geoserverfeaturestore to use metadatamap instead of map < string , object >
renamed the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of
update the avatar of a contact in the tree when a new avatar be change
updated import statements for Command in ShellCommand . java and ShellFactoryImpl . java to reflect the new package structure to ensure compatibility with the latest
added a test method to clean up the audit log table with post parameters by position to ensure proper handling of post parameters by position in the database
changed the return type of the inject method in ComponentContext . java to Object and added a suppression for unchecked casting to improve type safety and
added regex patterns for parsing comments and updated parsing logic in ACLFileParser to improve handling of invalid comments and ensure proper parsing behavior
updated the ` isReadable ` method to include ` FileSystemPlugin ` as a parameter and replaced ` FormatSelection ` with ` DynamicDrillTable `
added an ` ancestorDimensionValues ` map to the ` StarTreeNodeImpl ` class and updated related methods to handle ancestor dimension values to improve
added user unlock check before dumping plugin manager state in TouchInteractionService . java and refactored closeOpenViews method in Launcher .
changed the condition from checking if widthStr is not null to checking if positionStr is not null to ensure the correct variable is used for position
refactor PKIXValidator logic to improve certificate validation logic to enhance readability and maintainability of the validation process
[ hotfix ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . dubbo ` to ` org . apache . sh
vpc : fix npe in listnetworks api when listvirtualmachines command be call from outside the project
replaced ` remove ` method with ` get ` method for retrieving ` typeFieldName ` in ` RuntimeTypeAdapterFactoryFunctionalTest ` to
added a new boolean flag ` storeUndoInfoForProperties ` and corresponding getter and setter methods in ` App . java ` to manage undo information
replaced direct access to the " sun . java2d . xrgradcache " system property with a privileged action to ensure security by
updated StreamCloseTest to use Awaitility for stream size verification to improve test reliability by allowing more time for stream operations to complete
removed the ` doAfterFlush ( ) ` method from ` DocConsumer ` and its implementation in ` DocFieldProcessor ` to streamline the
added handling for deprecation errors in ConfigurationMetadataGenerator and introduced nested configuration property annotations in AbstractJpaProperties to improve compatibility with deprecated properties and enhance
refactor capacity and mask calculations in BiInt2ObjectMap and Int2ObjectHashMap classes to improve clarity and correctness of array allocation
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in Hive . java to
improve trace logging of exception in paralleliosender .
added a null check for the context before creating a new instance of SchemeAndroidIDE to avoid potential NullPointerExceptions when context is null
use the application classloader in nativeimagegeneratortask , not the custom one .
changed the return type of the modifyGrantedAuthorities method from void to List and updated related logic in SwitchUserProcessingFilter to allow modification of
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new classes ` RawJaxrsIntegrationTest `
refactor query timeout handling in HikariPool and PoolUtilities to improve code clarity and maintainability by centralizing query timeout logic
added DataProviders for general and supplementary character tests in XslSubstringTest . java to facilitate testing of substring functionality with
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence handling in MariaDBDatabase and updated related conditions in CreateSequenceGenerator to enhance functionality and ensure compatibility with MariaDB
updated string concatenation syntax and improved formatting in multiple Java files to enhance code readability and maintain consistency in formatting
updated imports and added TableDataManagerProvider to set server metrics across multiple test files to ensure compatibility with the latest data manager features and improve metrics
updated the condition to include " jsse . enableMFLNExtension " in the SSLExtension class to ensure proper handling of JSSE extension
refactor ObjectIterator and ObjectHashSet classes to remove generic type parameters and simplify iterator initialization to enhance code clarity and maintainability by standardizing
updated character count calculations in Compose . java and TweetFragment . java to correct the character count for shortened URLs to ensure accurate character
added datatoltttl to data point write buffer ( # 2598 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and updated the logic for checking Xcode
added a method ` getTerrainAtCell ` to retrieve the terrain at a specific cell coordinate to enhance functionality by allowing access to ter
added default value printing in Pretty . java and created a new class T6665791 . java with Java compiler functionality to handle default values
added error handling for missing QuestEncryptionKeys JSON file to improve debugging by providing a clearer error message when the file is not found
updated the return condition to check if the HTTP protocol is not push to ensure that push support is only enabled for non - push requests
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign operation from blockCapsule in BlockUtil . java to simplify the code by eliminating unnecessary sign operation
modified the return statement in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve
updated row height calculation and modified logic for copying the last row in ColumnText and PdfPRow classes to improve accuracy in row span handling and
added a ` SparseArray ` for undo notes and modified the handling of note selections in the ` ListFragment ` to improve the management of undo
uploadbackupdata : use logic to create new id for each response of a feedback question
removed null check for data and added exception handling for non - null data to streamline code by eliminating unnecessary null checks
no effective change - remove unused pstmtdelegate
replaced the use of ` Padding ` with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame . java ` and `
refactor MethodHandle initialization in NashornBeansLinker to use a static block and introduce a new constant for consStringFilter to
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
replaced the CountDownLatch variable name from ` latch ` to ` goAwayLatch ` and adjusted the timeout duration in the test to
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` for failure messages in ` IterableSubjectTest . java `
replaced ` Workbook . currentBook . set ( null ) ` with ` Workbook . currentBook = null ` across multiple files to
added support checks for MethodInvocation and Object types in ContactSecurityVoter to ensure that only valid method invocations are accepted to enhance security by prevent
removed unnecessary imports from DataLoader . java to streamline code by eliminating unnecessary dependencies
added row count logging functionality to multiple update steps to enhance user experience by providing feedback on successful or failed updates
ggb - 1193 fix margin position in web
set default foregroundFPS and backgroundFPS to 60 to increase application performance by default
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management during transaction operations
replaced the use of ` DefaultWebSocketFrame ` with a ` ChannelFutureListener ` for closing the WebSocket frame to ensure that the WebSocket frame
updated tests to differentiate between TestApplicationEventListener1 and TestApplicationEventListener2 and added new error handling tests to improve state machine error reporting and
replaced the intent handling in SettingsActivity with a new method ` setListBackground ( ) ` to set the background color of the list view
updated the import statement for StringUtils from Apache Commons Lang to OpenHAB ' s StringUtils and added a null check for the line variable to
added an ` accumulate ` method to ` JavaUserDefinedAggFunctions ` to update the accumulator ' s sum and count based on specified values and
[ hotfix ] fix checkstyle violation in put and replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regular expressions to improve performance by caching compiled regular expressions more efficiently
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` instance
added a login method to the DigestAuthenticator class that checks the realm before proceeding with the authentication process to ensure that the authentication process does not
refactor parameter merging logic in SavedRequestAwareWrapper to improve clarity and maintainability of parameter handling to enhance code readability and maintain
updated info status messages to use the variable ' lc ' instead of ' hiddenSingleton ' and added a custom toString method in LoggerContext to improve
replaced ` waitPoint . countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HA
added a check to exclude Android O in PhotoViewerActivity and implemented a new utility method in Utils to ensure compatibility with devices running Android O and
updated schema info level from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with the latest schema information
replaced direct XML output stream with a buffered output stream in SaveTask . java and removed unnecessary element writing in VizModel . java to
replaced the method of generating a random UTF - 8 string with a method that uses a fixed byte length Unicode string to improve performance and maintain
fix mc - 103516 not be able to place damaged item in the world . close # 103516
removed specific container adapter entries from the ProbeConfig list to streamline the configuration by eliminating unnecessary dependencies
[ drools - 1341 ] fix protobufinputmarshaller hash code calculation and add test case
rearranged case statements in NowSearchTerm . java and SearchTermBuilder . java to improve code readability and maintainability by standardizing
pdfbox - 4892 : remove public from class , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and URL resolution to enhance flexibility in URL resolution by using
added a new method ` newResponseBuilder ` to handle response creation with search components to improve code readability and maintainability by encapsulating the
added notification for command start in AsyncBackgroundTaskManagerTest to ensure task manager starts before proceeding
refactor ` computePreviewDrawingParams ` method to ` recomputePreviewDrawingParams ` and add a null check for ` mReferenceDrawable ` to
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to improve handling of character filtering functionality
replaced null checks for ' plot ' , ' generator ' , and ' hotspot ' with a utility method ' ParamChecks . nullNot
added verbosity handling to the ` createSubContext ` method in ` JavacStep ` and ` ExecutionContext ` classes to enhance output output
added a check for the database type and convert the schema to uppercase if it ' s not null to ensure compatibility with Oracle database schema handling
log4j2 - 1343 add logmanager . getcontext ( false ) . getclassname ( ) to the test description
added a new file TestShrinkToOneRegion . java with a main method to facilitate garbage collection to facilitate testing of
replace string . split with Splitter . on ( ' , ' ) . split for customPackages processing to improve code readability and maintainability
replaced utf8ToString ( ) method calls with direct context usage in AnalyzingInfixSuggester . java and added a test
updated the attachment handling logic in PushsaferMessageBuilder . java to use a local variable for the local attachment to improve clarity and functionality
remove label histogram command from model explorer , change provenance hash to jsonresult in stripprovenance
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed the visibility of the FORMATTER function from ` private final static ` to ` private static final ` in multiple test classes to enforce immut
updated UDFRound . java to improve null handling and rounding logic to enhance code robustness and ensure proper rounding behavior
graaljsscriptenginefactory : switch injectionenabled and useincludedlibrary from config to default
changed class declarations from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated player event handling to replace ` no _ permission _ event ` with ` deny . no _ enter ` and modified variable names for clarity
modified the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a ` Session ` parameter to enhance
replaced instances of ` doTestNormsStoredFields ` with ` doTestNormsVersusDocValues ` for testing numeric document
added random body and circle creation in Box2DCharacterControllerTest . java and reset friction in ContactList . java to enhance test
added tests for exceeding maximum size limits and adjusted memory - related configurations in TestBadOptionValues . java and TestMemoryOptions . java to
removed checks for " must be a power of 2 " in ObjectAlignment . java and Options . java to streamline code by eliminating
added functionality to extract and utilize the target package from the Android manifest to enhance flexibility in specifying the target package in instrumentation tests
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an empty list to ensure that the acceptableThrowawayItems list is properly
change method calls in Test6987555 . java to directly call ` mh1 . invokeExact ` and ` mh2 . invokeExact
removed unnecessary comments in MessageHandler . java to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in inflection javadoc
added getter and setter methods for elContext ' s locale in EvaluationContext . java to enhance locale management functionality in the application
removed unused import of Plugin in SummaryPrinter . java to streamline code by eliminating unnecessary dependencies
added a break statement in the DrawerActivity . java file to ensure proper termination of the loop when a specific condition is met
updated import statements in MongoQueryCreator . java to use wildcard import and modified debug log statement to use getQueryObject ( ) to improve clarity
added support for a user - defined logger factory in XWorkConstants and LoggerFactory to enable dynamic configuration of the logger factory based on system properties
renamed test methods for P2P disabled functionality to clarify the purpose of the test for better readability and maintainability
[ hotfix ] fix bean name mismatch for health indicator
use a concurrent map for pstores that do n ' t support write in localpstoreprovider
changed the access modifier of the ` deleteFiles ` method from public to private in ` TestUtility . java ` to restrict access to the method
rename the ` Provider ` class to ` ServiceProvider ` and update related methods for clarity to improve code readability and maintainability by using
simonstewart : do n ' t swallow exception in javainteropreflect # findfield and javainteropmessageresolution
added functionality to check if tools are created in the AbstractCell class and implemented related methods in ToolchainProvider and DefaultToolchainProvider to ensure
do n ' t remove context from engine if it have already be add to the engine .
updated condition checks from ` indexOf ` to ` contains ` for version and fails in ` AbstractCheckDescriptor . java ` to improve readability and
updated linker flags in PrebuiltCxxLibraryDescription , CxxPythonExtensionDescriptionTest , and PrebuiltCxxLibraryBuilder to use '
replaced ` onConfigurationChangedInternal ( ) ` with ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler . java
updated type checks in multiple classes to use a wildcard ` < ? , ? > ` parameter for better type safety to enhance type safety and prevent
updated the object array to use the hash of the newBlock header instead of the entire newBlock object to ensure accurate representation of the blockchain ' s hash
fix defaultmessagestore . getdiskpartitionspaceusedpercent ( ) to use getstorepathphysic ( ) instead of get
remove unnecessary try - with - resources for jvmgcmetrics
[ amq - 6892 ] update getmessageentiretimemax and getmessagetransferredmsgcount in compactionlog to account for
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future versions
added a method to check for the existence of a system UI object and execute a shell command for key event input to ensure that the keyguard
changed logger from static final to instance variable and made principals and sessionIds fields final to enforce immutability of the logger and ensure principals and
added a check for an empty cookie jar in InMemoryCookieStore and a corresponding test in NullUriCookieTest to ensure that the removeAll method
[ bonsai ] fix nullpointerexception in bonsaiworldstateupdater . clear ( )
changed method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept CharSequence instead of String to improve
danielwagnerhall : ignore a couple of test in marionette that be not implement yet
added a try - finally block to ensure the destination connection is returned in a finally block to improve resource management and handle potential IOException during connection termination
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references across multiple files
added synchronization to the heartbeat executor service initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCan
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to ensure the first line is displayed when
hive - 20610 : add tmp / staging / mapreduce / jobtracker / staging / tmp to testinformationschemawithprivilege
refactor graphics configuration retrieval logic to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
tika - 3441 -- add test for oom in legacy mode .
refactor pipeline processing logic to improve clarity and maintainability to enhance code readability and maintainability by reducing duplication
updated PrintTagList . java to handle command - line arguments for model file and updated tag processing logic to improve command - line argument handling and
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` for table name retrieval in ` InsertDeParser . java ` to
improve test case to account for eofexception
[ java ] simplify startfromtruncatedrecordinglogtest until the cluster be ready .
change ` arc ` variable type from ` int ` to ` float ` and update its usage in ` LineBorder . java ` to improve precision
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent processing when galleryImages is null or empty
updated the handling of the DEPLOYMENT _ ID column in the change log history service and created a new column in the database change log table
pdfbox - 4892 : update package name to avoid conflict with the same package
removed the ` moreColumnOk ` parameter from the ` getIndex ` and ` canUseIndex ` methods to simplify the method signature and improve read
refactor QuickfixjComponent to manage provisional engines more effectively to improve engine management by ensuring only one engine is added to the map
added a new boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to use it to improve flexibility in
added corporea block , corporea brick and slab , and corporea slab , along with their corporea - related
refactor ConnectionFactory class to improve connection handling to enhance performance and maintainability of connection management
added a method ` EnableDisableMenuItems ( ) ` to set menu icon based on user settings to enable or disable specific menu items based on
updated the message for empty lists in ExtendedListFragment to reflect the appropriate favorite headline and favorites filter list to enhance user experience by providing
replaced the usage of the @ ServiceRegistry . Setting annotation with the @ Setting annotation in EntityTests . java to improve code clarity and
added auto - resize mode and auto - create columns to the MotorMountConfigurationPanel and updated the MotorMountConfigurationPanel to
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator and subject properties in POIXMLProperties . java and created a test for document properties in TestPOI
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t attempt to read the cnc file if it ' s empty .
refactor ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` FooCommand ` and introduce a new helper class
added methods to handle JMod files and declasses in ClassFileSourceImpl . java to improve class loading capabilities based on the presence of JMod
updated TreeBackedElement and TreeBackedEnter classes to use @ Nullable annotations and removed the PostEnterCanonicalizer parameter to improve null safety
replaced direct assignment of tokenRequest with a PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranter
[ hotfix ] fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
added sync method calls in ZooKeeperAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper nodes
added checks to ensure the current context is not equal to EGL14 . EGL _ NO _ CONTEXT in the GlUtil class to improve
[ drools - 725 ] fix activation in ruleflowgroup when activation be not active .
added a return statement to the method in HystrixDashboardConfiguration . java to prevent further execution of the method
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve robustness by
cleanup clientqueuedisruptiontest after each test to avoid flakiness .
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl # getsignature
changed the access modifier of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated imports in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoPointNumericTermsEnum , and GeoPoint
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it instead of mocking it to improve
replace null checks with empty checks for itemstack and item retrieval in GuiIngameForge . java and UniversalBucket . java to improve
changed references from " rule path " to " rule timeseries " in TSParser . java and SQLParserTest . java to improve clarity and
added a check to return 0 if the velocity is less than a small threshold in TubeCalc . java to optimize performance by avoiding unnecessary
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage . create ( BlobInfo . newBuilder ( ) , BlobId .
removed duplicate call to blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to streamline code by elimin
added methods for creating , replacing , and recreating history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl to enhance the
updated the parameter in the checkEngine method from 2 to 3 to correct the expected number of clustering engines in the test
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test due to conflicts
introduced a new ` ParserStateObjectInputStream ` class and updated ` ParserCacheCommand ` to use it to enable custom deserialization of `
updated object quoting strategy handling in ChangeSet and DatabaseChangeLog classes to ensure consistent object quoting behavior based on change log configuration
replaced ` MetainfoParser . parse ` with ` MetainfoParser . fromXmlStream ` in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
added a method to quote paths in the endorsed argument line and info messages to ensure proper formatting of paths in the output to avoid potential
added a scrim animator to the drag layer background in Launcher . java and updated background animation in AllAppsBackgroundDrawable . java to
updated the long value calculation in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to improve type inference accuracy and enhance test coverage
regenerate client with updated copyright year ( # 4382 )
added expected path type handling in WindowsPathParser and corresponding tests in PathOps to ensure correct parsing and validation of path prefixes in WindowsPathParser
replaced InetSocketAddress instantiation with a direct instantiation of MulticastSocket to simplify code and improve readability by eliminating unnecessary parameters
removed duplicate calls to writer . close ( ) and updated query initialization in TestWildcard . java to improve code clarity and ensure proper resource management
change return value from nBits to nBits . clone ( ) to ensure that nBits is not modified when returning a new instance of n
changed the access modifier of ` deriveCollectorName ` method from private to protected and added tests for custom names in ` TestProfilerCollector ` to
refactor type hint handling in MappingMongoConverter to improve clarity and maintainability to enhance code readability and maintainability by consolidating type
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress warnings related to unchecked type casting issues
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by including the original exception as a cause
replaced the method ` reinflateWidgetsIfNecessary ( ) ` with a call to ` getWorkspace ( ) . reinflateWidgets
added a new file ` DeleteInsideFileDialogTest . java ` to test the deletion of files in a file dialog to ensure that the file
fix ( lwjgl ) : do n ' t call display . update ( ) in lwjglabstractdisplay . render ( ) ,
add test case for update student profile image
added environment variable handling for tests in TestIgnorance . java to improve test flexibility based on environment variable settings
removed the pointer parameter from the fling method signature in ScrollPane . java to simplify the method signature by eliminating unnecessary parameters
added null check for pageable in QueryDslJpaRepository and implemented a test for null pageable in QueryDslJpaRepository
added a method to compute memory size based on a fraction in MemoryManager . java and corresponding tests in MemoryManagerTest . java to ensure memory
camel - 14836 : camel - core - jms - publishjmstest : increase test timeout to 20 second
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
update previousIndex initialization and condition checking in StreamingAggTemplate . java to ensure proper handling of InternalBatch instances and avoid unnecessary null checks
throw graalerror instead of assertionerror if plugin need to be null check .
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to enhance functionality by
updated logging messages to reflect when a file is fully played and added a retry mechanism for moving it to improve clarity of log messages and
replaced the ` setAccessable ` method with a new ` newInstance ` method in ` InjectorProxy ` and updated access modifiers in ` Standard
[ hotfix ] [ stream ] remove unnecessary close ( ) in flinkstreamingcreatefunction
added unit tests for creating , showing , altering , and creating tables in ` ShowStatementTest . java ` and ` CreateTableTest .
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of
updated the test output in NamedSetTest . java to replace " Deliberate error , to test CruiseControl " with " Qu
added a check for websocketReconnect in DeconzBridgeHandler and refactored connection state management in WebSocketConnection to improve WebSocket connection handling and
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
hbase - 25827 addendum retry create table in testregionreplicareplicationendpoint # testenabletablereplication
added configuration settings for PMS in FormatRecognitionTest . java to disable PMS for improved test reliability
create ovadadisktemplate event only when template format be ova
refactor PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 runner instead of Spring Boot test to improve test organization and ensure compatibility with
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated table and table names in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability by using more
added a check to ensure the document count matches the segment document count in SegmentReader . java to ensure that document counts do not exceed the expected
add log . getloggername ( ) and logtrace ( ) method for jain - sip logger .
pdfbox - 4892 : fix typo , a suggest by valerybokov
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatformHttpEngineTest . java
added a case - sensitive CSRF protection matcher test in CsrfFilterTests . java to ensure that the CsrfFilter correctly handles requests
refactor code to use local variable instead of a static class to improve code readability and maintainability
updated methods in SpellCheckComponent , AbstractLuceneSpellChecker , DirectSolrSpellChecker , and SpellingResult to use a
replaced the use of ` Instant . now ( ) ` with a new variable ` now ` in ` FileIO . java ` to ensure
fix sqmctestatement # copy ( ) to copy the cte definition
added import statement for java . sql . ResultSetMetaData in QueryCompilerTest . java to facilitate the use of SQL ResultSetMetaData for
updated library command formatting to include the project filesystem ' s root path to enhance clarity of library command by including the project filesystem ' s root
updated the angle slider position in RailButtonConfig . java from - 180 to - Math . PI to ensure accurate representation of the angle in
move savetoslot to timers . run instead of exec . run in save .
added support for expression language in KerberosProperties . java to enable support for expression language in the configuration
updated translation and scaling logic for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to ensure consistent handling of mount point scaling for
updated ` setupViews ` method to include ` ScrimView ` and modified related animation logic to enhance user experience by allowing customizable scr
[ state - backend ] add config option to disable periodic materialization
added a ` value ` property with getter and setter methods in ` ProtocolParameter ` and updated related classes to utilize this new property to enhance
add a test case to check that we can get a chunk from a head url .
added ` isBumped ` boolean and updated ` parseDetails ` method to handle it to improve the handling of bumped status in the
added a Content - Type header to the SwitchToPostInterceptor and updated SearchRequestUnitTest to ensure proper handling of the Content - Type in
refactor EmbeddedClientConnector class to improve code readability to enhance maintainability and facilitate future updates
replaced SQLFeatureNotSupportedException with logging warning for ignored setFetchSize method in PhoenixResultSet to improve error handling by providing a warning
added initialization of AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
[ hotfix ] [ table - planner - blink ] fix nullpointerexception in sulong segment data manager
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method call by
hbase - 25827 remove hbase - prefix - tree dependency from tablemapreduceutil ( addendum )
added a check for inflation failures in ` DesignerActivity ` and made the ` root ` variable final in ` XMLLayoutInflater `
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future updates
refactor loweringphase to use schedulephase instead of controlflowgraph . compute
updated error message formatting from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to improve clarity
updated newline handling in Makefiles . java and MakefilesTest . java to support additional line breaks to improve code readability and maintainability by
replaced direct call to getDeletedDocs ( ) with MultiFields . getDeletedDocs ( reader ) and added null check for deletedDocs to
replaced ` super . setTransformRefresh ( ) ` with ` refreshFlags | RF _ TRANSFORM ` and added ` setBoundRefresh
[ gr - 3329 ] make sure we only check for uninterruptible share method when need .
added a framebuffer size callback and modified window size handling in LwjglWindow . java to improve window size management and ensure proper closure
updated animations in LauncherAppTransitionManagerImpl to use ' offscreen ' instead of ' center ' for parallax animations to improve animation
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update method signatures accordingly to improve handling of
added ` setLength ` method to ` FSDirectory ` and ` IndexOutput ` classes and adjusted ` totalSize ` calculation in ` CompoundFileWriter `
updated AndroidNdkScriptGenerator , AntScriptGenerator , and LwjglDebugStarter to improve manifest handling and test setup to enhance
camel - 14850 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource for consumer / producer
added permission handling for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorization
updated ZookeeperClientServerRegisterRepository to handle event types more effectively and improved null and empty checks to enhance code robustness and maintainability
renamed methods and variables related to deep stubs in ReturnsDeepStubs . java for consistency and clarity to improve code readability and
updated call value handling to return an empty string if the size of the call value is zero to ensure that a default value is returned when there
fix log message when date can not be parse
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and modified the algorithm name in the ` PBETest
pdfbox - 4892 : do n ' t throw eofexception for invalid tiff value offset
added validation for job parameters in CommandLineJobRunner and created a corresponding test in CommandLineJobRunnerTests to ensure that job parameters are properly formatted and
update message content assertions in SmtpTests and MailTests to remove carriage return characters to simplify test assertions by removing carriage return characters
refactor case statements in ExtendedConnectionDataSourceProxy for improved readability to enhance code clarity and maintainability by using lambda expressions
replaced synchronized sequence management with atomic field updater for lastSequenceId to improve thread safety and performance in sequence management
added a new file ` Test . java ` containing a class ` Test ` with a method ` sum ` to calculate the sum of a variable
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and changed private fields to protected in WifiUsabilityStatsEntryBuilder to
added a new file ` Solution . java ` that implements a solution to determine if a given number of queries meet a specified criteria to ensure that
[ hotfix ] [ table - common ] use concurrenthashmap instead of map to avoid concurrentmodificationexception
refactor taskbar recreation logic to use boolean flags for screen size and orientation changes to improve readability and maintainability of the code
refactor SyncFutureCache class implementation to improve performance and maintainability of the code
update dubbo protocol version from 2.0 . 1 to 2.0 . 2 and document the new version to 2.0 .
[ java ] uselessstringvalueof : fix false negative with string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior
[ hotfix ] [ runtime ] add targetmaxtypessize to hollowproducer . builder
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
rename CompilationTask class to improve clarity to enhance code readability and maintainability
updated database parameter handling in DDLTask . java and modified assertion in TestSemanticAnalysis . java to improve clarity and ensure database location is
added a call to execute a ClearDatabaseChangeLogTableStatement using the Liquibase catalog and schema names to ensure that the database changes
updated the RestClient and CallPath classes to handle versioning and improved path comparison logic to enhance functionality by allowing dynamic versioning based on
updated exception messages and added a synchronized method to manage the closed state of the Phoenix JDBC driver to improve error handling and ensure proper
simonstewart : fix a couple of typo find by findbugs
added unit tests to ` FolderPickerActivityIT ` and modified visibility of UI elements in multiple activities to improve test coverage and ensure proper UI behavior
remove deoptimization phase if dev mode be not enable .
added validation in StringHelper to return a string if the length is less than 2 and created unit tests for the removeLeadingAndEndingQuotes method to
refactor JpaQueryCreator and related classes to improve handling of NOT _ CONTAINING keyword types to enhance code clarity and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5448 -
added a call to dispatch on a copy of the message in P25MessageFramer . java to improve message processing by properly dispatching
added null checks for WebSocket handlers before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end to
update discoveryit to use indexablepooltask and indexableclaimedtask . type instead of hardcoded string
updated widget padding calculations in AppWidgetResizeFrame and Launcher classes to use default padding values from the launcher to ensure consistent widget padding across different
added ` hideAllApps ` method to ` TaskbarUIController ` and ` TaskbarAllAppsController ` , and modified ` closeOverlay
removed synchronization from the launch method and replaced a sleep delay with a join operation to simplify the launch process and improve thread safety
updated calculations for Point positioning in JavaSEPort . java to correctly account for canvas positioning to ensure accurate positioning of coordinates within the
replaced notificationManager notifications with a method call to startForeground for upload progress notifications to improve code clarity and maintainability by using a dedicated
fixed bug 1244445 - excessivepubliccount no long report false positive on static final field
hbase - 15610 addendum set the number of retries to 3 in testthriftservicehandler
change log level from info to debug for half offset commit / rolled back message
added error handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve debugging by
added a new method ` getTickers ` in ` Bittrex ` and created a ` BittrexTickersResponse ` class to
fix issue with entityentry . getenumconstants ( ) always return null .
refactor registerSession method signatures to accept an Object instead of Class < ? > for endpoint instances to enhance flexibility in session management by allowing
added Unicode escape sequences to the character array in FileUtils . java to ensure accurate representation of special characters in file operations
added support for stylesheet management in ResourceService and updated related methods in ResourceHandler and DefaultServlet to improve the handling of stylesheet resources and ensure proper
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before proceeding
changed the method call from ` ObjectParameterStrategy . getAddress ` to ` PointerParameterStrategy . getAddress ` in ` X86MethodGenerator . java
updated condition to exclude PostgresDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDatabase in sequence generation logic
removed redundant condition checking for " java . lang . String " in ObjectStreamClass . java to simplify the code logic for better readability and
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and create a new class for it to improve error handling by providing a more
modified BinaryResponseWriter . java to conditionally create a SolrDocument based on the presence of pseudo fields to improve document retrieval logic based on the
added support for WebSocket PING and PONG cases in WebSocketImplBase and implemented a test for pause and pong handling in WebSocketTest to ensure
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expression matching
replaced specific DNS imports with a wildcard import and refactored cache handling in DnsResolverProvider to improve code readability and maintainability by
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure that messaging tracing is only enabled when the messaging class is available
mondrian : fix mondrian sql injection for mysql compatibility .
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes to streamline
added a condition to handle the case when the character ' / ' is a closing tag in XMLLightweightParser to ensure proper handling of closing
removed the visibility setting from TouchCharInput . java to indicate that the class should not be displayed to the user
added a null check for the current user before comparing the ID to avoid potential NullPointerExceptions when the current user is not present
modify the handling of object members in JSObjectLinker to improve clarity and functionality to ensure proper assignment of members based on their index
modified DefaultUniqueTicketIdGenerator to initialize randomStringGenerator with a new instance and updated constructor and methods accordingly to improve code clarity and maintain
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future versions
deleted ` JoglDebugAdaptor . java ` and modified ` GuiceStartup . java ` and ` RocketFigure3d .
updated ` ExtraFieldPropagation ` and ` AWSPropagationTest ` classes to enhance the string representation of ` ExtraFieldPropagation ` instances to improve cl
added PendingIntent flags to mNotification . contentIntent in FileDownloader . java and FileUploader . java to ensure the notification content is updated
added a private method ` set ( ) ` and modified the ` nextOrd ( ) ` method in ` Lucene80DocValuesProducer `
refactor DateTimeFormatter class to improve readability to enhance maintainability and facilitate future updates
removed unnecessary try - catch block for loading shell folder manager in WToolkit . java to streamline code by eliminating unnecessary class loading
added null checks and exception handling for administrator credentials in KerberosOperationHandler to ensure that credentials are not null , password , or keytab are
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and width calculation for tablet and two panels in BaseWidget
added render start and end call in PSurfaceJOGL . java to enhance rendering performance with the sketch window color
refactor hashing logic in Hashing . java to improve code readability and maintainability
updated the ` accept ` method in ` FileSenderFactory ` to use ` Files . getBaseName ( ) ` and ` Files . endsWith (
updated the ` addToListIfNeeded ` method to include a content description parameter and adjusted drawable resources accordingly to enhance user information display by providing a more
removed null check for ' newType ' and initialized it to null to improve code clarity and prevent potential null pointer exceptions
updated ACTIVITY _ START _ DELAY from 500 to 800 to increase the activity start delay from 500 milliseconds to improve responsiveness
added a static constant WEBAPP _ HOME in SolrJettyTestBase . java and updated path assignments in JettyWebappTest . java
reset selectedMotorSet to null and clear table selection in ThrustCurveMotorSelectionPanel . java to improve code clarity and
added import for BufferUtil and used it to clear the buffer in ByteBufferPool . java to ensure the buffer is properly filled before use
refactored notification rule process method to use originatorid instead of entityid for process notification rule
corrected the spelling of " authorization " to " authentication " in LDAP configuration to ensure consistency in naming conventions and improve code readability
added exchange deletion and queue deletion in DurableOnTransient . java to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ test ] fix flaky bulkslotproviderimpltest . testallocationfulfilledwithnewslots
refactor connection handling in ServerInfoService to use a listener for asynchronous connections to improve error handling for server connection issues
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and facilitate future updates
updated the implementation of Quartz2Adapter to improve performance and maintainability of the code
added exception handling around the execution of a member in SulongLibrary . java to improve robustness by handling IllegalStateExceptions during member lookup
updated schema references from Spring Security 6.2 to 6.3 in SecurityNamespaceHandler and XsdDocumentedTests to ensure compatibility with the latest
updated the ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` NameResolver . Helper ` and modified related references to
added a check for empty annotations and introduced a method to determine earlier position in JavacParser . java , and created a new test class
added a new package name " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with the internal naming
changed the strict variable from false to true in StaxEventItemReader . java to enable strict validation for XML parsing
modified the ` readPartition ` method to handle an ` isExhausted ` flag in ` OfflineSorter ` and added a test for it
refactor ActionResetingPool to improve code structure to enhance maintainability and readability of the code
updated the logic in LightStateConverter to check if the light state is in XY mode before converting toHSBType to ensure correct handling of
refactor CellLayout to use an array for target cells and improve folder creation radius calculations to enhance code readability and maintainability by reducing
added import for FileDisplayActivity and removed duplicate calls to showLoadingDialog ( ) in FileDetailFragment and OCFileListFragment to streamline
added a null and existence check for uigestureFile before initializing xmlLogs to avoid potential NullPointerExceptions when uigestureFile is not present
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitivity to ensure consistent behavior across different locales in the test
added a method to set listeners on the result object to ensure that listeners are correctly retrieved from the result object
added a new ` loadWithNewGlobal ` method and refactored existing methods in ` Global ` and ` Context ` classes to enhance functionality
added JSON serialization methods to StarTreeIndexSpec and updated tests accordingly to ensure proper handling and validation of star tree index configurations
added an import statement for ObjectPostProcessorConfiguration in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfig
replace double quotes with single quotes in string replacement methods across multiple files to ensure proper handling of single - quoted strings in file handling
[ drools - 5605 ] fix npe when use in operator with null fire .
added import for FieldCache and invoked commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to
added test case for message boundary event on subprocess and inside subprocess
added a new method ` resolveStaticCall ` to ` ProgramManager ` and updated references in ` PointerAnalysisImpl ` and ` JimpleProgram
http : / / issues . apache . org / jira / browse / amq - 4892 - use messagegrouphashbucket to
secmod : change slot id to slot id in nss internal module .
added an alignment parameter to the add method in Layout . java and modified the startRenderering method return type in GdxRenderer . java to
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports for MIDI midi classes and added a null check for specific classes in JDK13Services . java to enhance functionality by preventing
added a check for the existence of the keyword in the keywordToReference map before adding it to htmlFilename to ensure that only unique keys are
camel - 14850 : fixed the issue that multicastprocessor do n ' t check the size of the collection .
no effective change - remove unused code
escape string in statsd line ( # 644 )
added udp port support to member serialization and serialization .
rename operatormessagemulticast to operationmessagemulticast , since it ' s not use anymore .
increased send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for
added a try - finally block to ensure the latch countdown occurs in a finally block to ensure proper resource management and prevent potential memory leaks
added a synchronized ` destroy ( ) ` method to ` SessionFactoryServiceRegistryImpl ` that sets ` cachedEventListenerRegistry ` to null to ensure
danielwagnerhall : use jwt token instead of ` ` / home ' '
[ pytorch ] add test case for ndarray . union ( ) and ndarray . mapofTensor ( )
added a task stack listener to clear the force invisible flag during pinned animation in RecentsView . java to improve user experience by ensuring the
pdfbox - 4892 : do n ' t optimize checkdatepattern method , add test
camel - 14263 : camel - cxf - avoid npe if factorybean do n ' t have property
refactor pending animation handling by extracting functionality into a separate method to improve code readability and maintainability
added debug logging for animator play time and improved play time calculation to enhance debugging capabilities and provide better debugging information during animations
added a check for ` BailoutOnException ` before throwing ` RuntimeException ` in ` C1XCompilation . java ` to improve error
updated signup and passwd fields to null in IdentityZoneConfigurationBootstrapTests and changed assertions from " / forgot _ password " to " /
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
updated the variable name from ` onlyFormat ` to ` format ` and introduced a new method ` getOnlyFormat ` to improve clarity and
geotiffreader now set gc _ nodata in renderimage property
sulong : fix npe when there be no source section .
replaced ` toString ( ) ` method with ` new String ( toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` Default
replaced the ` client . blockUntilConnected ( ) ` method with a ` CountDownLatch . awaitComplete ( ) ` for connection state
added null checks to the ` getNullableResult ` and ` setNonNullParameter ` methods in ` ArrayTypeHandler ` to ensure that null values are
replaced regexpTunnel with a reflection - based approach for retrieving the prefix in JakartaRegexpCapabilities . java and deleted RegexpTunnel .
updated the application picking method to use Application . class instead of null to ensure compatibility with the latest application selection logic
[ jbrules - 169 ] fix npe when use a mutable global in a phreak node
replaced Preconditions checks with TransactionUtil validation for asset name , URL , and description in AssetIssueActuator . java to ensure that asset names
make sure paste do n ' t return duplicate algorithm
updated toast descriptions and error messages to use localized messages instead of hardcoded strings to improve user experience by providing clearer feedback on device details
replaced individual node setting methods with bulk addition methods for seed , active , and trust nodes to improve code readability and maintainability by redu
added debug information to the assertEquals statements in BaseTokenStreamTestCase . java and introduced success flag handling in AnalysisThread . java to improve
log4j2 - 1343 change timebasedtriggeringpolicy to take interval and modulus into account
refactor ShadowAdapterView and ShadowListView to improve item click handling and text search functionality to enhance code readability and maintainability by central
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added null check and afterMethodScope method implementations in GraphDecoder and PEGraphDecoder classes to ensure proper handling of method scope during graph decoding and
updated ` HttpSessionDestroyedEvent ` to retrieve session attributes and added unit tests for ` HttpSessionDestroyedEvent ` to improve session management and ensure proper handling
added a test to change the service name in Zipkin to the manually provided one in HttpZipkinSpanReporterTest . java to ensure that
added logging statements and modified spool mode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging capabilities and
renamed ` SeparatedProjectGenerator ` and related test classes to ` SeparatedProjectsGenerator ` and ` SeparatedProjectGenerator
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow for more time for the lock operation to complete
updated ConfluentSchemaRegistryDeserializerProvider to include a cache capacity constant and added new factory methods to improve cache management and enhance flexibility in
replace ` remind ` checkbox with ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to improve clarity and user experience
added new method declarations for various strength strength constraints in NodeGenerator . java and refactored the factory logic in NodeGenerator . java to enhance
hhh - 14836 - fix potential npe in cascadingactions . getpropertyvalue ( )
added support for ` __ proto __ ` and ` __ protocheck __ ` methods in ` ScriptObject . java ` to enhance the functionality of
updated the default read mode from " heap " to " mmap " and modified the return statement in ImmutableSegmentLoader to reflect the new read mode
added import for ByteArrayTemplate and used its instance for byte class handling in ArrayTemplateBuilder to enable handling of ByteArrayTemplate instances for byte data types
added Hipchat service provider configuration to the SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enhance SAML
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` and updated resource retrieval logic to improve
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages for better
camel - 16400 : camel - sftp - add support for sftp to connect to a remote server . thanks to david b
http : / / issues . apache . org / jira / browse / amq - 4358 - avoid lazy - create transaction manager
[ vmware ] fix checkstyle violation in vmwareresource . java
updated method implementations in Timers . java to improve performance and maintainability of the code
replaced the deprecated method ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in the ` DefaultDefectReporter
removed deprecated constants from UAX29URLEmailTokenizer and updated constructor calls accordingly to streamline code and ensure compatibility with Lucene ' s
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and replaced its usage with ` ScriptObject ` in
[ hotfix ] [ metric ] fix typo in eventbusmetrics
ds - 3366 : fix problem with default locale when no eperson specify
refactor ` JaversTransactionalDecorator ` to implement ` InitializingBean ` and implement ` Javers ` with ` afterPropertiesSet `
removed null check for pgTypeName before adding it to the map to simplify the code by eliminating unnecessary null checks
added multiple calls to setServer for handler0 and handler1 in ScopedHandlerTest . java to ensure proper server setup for multiple handlers in
add retry logic when calltimeoutexception occur during wait - notify phase .
replace ` StringUtils . isBlank ( ) ` with ` StringUtils . isEmpty ( ) ` for checking empty passwords in ` RestLoginProcessingFilter . java
updated permission check logic in CommandMap . java to handle " * " as a valid permission to ensure proper permission validation for the account
rename ` encoding ` to ` sourceCharset ` and update related method implementations in ` AbstractCompiler ` and ` ICompiler ` to improve clarity
changed the data type of postLogin and related methods from byte [ ] to String in HostBean , TerminalBridge , and HostDatabase classes to
refactor simulation and parameter handling in GeneralOptimizationDialog . java to improve clarity and maintainability of simulation and flight configuration management
camel - 16400 : camel - jbang - allow to turn off context reload by default
replaced log4j configuration with standard logger configurations in CommonTestUtils . java to improve logging clarity and maintainability by standardizing logger
refactor PrologSizeSanityCheck class for improved size validation logic to enhance performance and maintainability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for supported input stream content type before invoking the reset method in RequestBody . java and created a test for it in RequestBody
added a check for enabled settings in the EmbeddedNeo4jServer and modified the handling of beans in the DefaultBeanContext to improve the
restore the player ' s speed and damage speed in the player ' s prefab if it ' s not present
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted the index calculation accordingly to improve the accuracy of the
updated cache string handling and timestamp validation in GsonParser , MetricsResourceTest , and GsonParserTest classes to improve code clarity and ensure accurate
updated parameter comments in ApacheHttpClientMediaWikiApi . java for clarity to enhance readability and maintainability of the code
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract
pipe : fix the issue that pipetaskcoordinator lock be not thread - safe .
added conditional logic to determine the use of preinstrumented jars based on the system property to enhance flexibility in managing instrumented jars based on
changed the conditional check from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` to ensure that the execution flow control
added validation to ensure dynamic field defaults and requirements are not null and required in IndexSchema . java to ensure proper error handling for unsupported attributes in
do n ' t send a random read repair command if it ' s already a read repair .
replaced ImmutableSortedSet with Iterables for adding system include roots and added a test for directory inclusion to improve code clarity and ensure correct handling
removed default values for startDate and endDate , added isSKIDSensitive and isSNSensitive flags , and modified subject key identifier handling logic to improve
log4j2 - 1343 nosqlappender should use abstractappender . parseint ( int , 0 ) instead of try
deprecate guiscreenevent in favor of guiscreenevent in 1.16
added methods to manage adding , removing , and adding new categories in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the user interface
# 263 - enh : add support for cache type in ebean - cache
updated RocketComponent to iterate through all instances of massOverriddenBy , CGOverriddenBy , and CDOverriddenBy to
[ netbeans - 4892 ] make sure to destroy the compiler after an analysis .
refactor ` Task ` implementation to use a ` Supplier < V > ` for better flexibility to enhance code readability and maintainability by
added synchronization to the wan replication serviceimpl to ensure thread safety when creating and shutting down the executor
added null checks for tPartition and table locations in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robust
refactor code in LocalServiceRegistryClientImpl and RemoteServiceRegistry to use lambda expressions instead of anonymous inner classes to improve code readability and
added a new test class ` FilesTest ` and a static method ` delete ` in ` Files ` to verify file deletion functionality to ensure that
removed exception handling for socket closing in ServerSocketAdaptor and SocketAdaptor to simplify the code by eliminating unnecessary exception handling
updated class name check in SSLLogger from " java . lang . System " to Logger . class . getName ( ) to ensure compatibility with the
refactor the handling of current working directory list to use a dedicated method to improve code readability and maintainability by reducing duplication
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper building of
changed the access modifier of the static String variable from public to private to restrict access to the static string for better encapsulation
updated Java file type settings for CSV and JSON jar files in SimplePostTool . java to ensure compatibility with updated Solr versions
[ geosymbolic , geosymbolic ] check for symbolic toggle in algebraitem . issymbolicdiffers ( )
refactor WebSocket client container start logic to improve error handling and registration to ensure proper shutdown management and shutdown management in the WebSocket client container
updated conditional check to use ' | | ' instead of ' && ' for opening with the application to improve clarity and correctness in handling
ensure the web application context be clean up after each test
added search functionality by introducing a method to retrieve search strings from query parameters and updated resource retrieval logic to enhance user experience by allowing users to
hide the neutral button in SetupEncryptionDialogFragment to improve user experience by preventing unnecessary UI updates
modify itemdao to include include _ archived and include _ withdrawn parameter for more flexible count
updated string concatenation syntax in DDLTask . java to include quotes around tables and partitions to ensure consistency in SQL syntax for better readability
added logging and exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error reporting for better debugging and error management
refactor multiple classes and update method documentation to improve code clarity and maintainability to enhance maintainability and readability of the codebase
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use the new API endpoint and improve response handling to enhance test accuracy and ensure
increased dismiss delay from 20000 milliseconds to 10000 milliseconds in ExtractionModelFrame , DataBrowser , and SQLConsole classes to improve user
bump the surefire version to 2.8 . 0 and add support for junit 5 .
replaced HumanReadableException with RuntimeException for error handling in WorkerShellStep . java to improve error handling by using a more specific exception type
[ hotfix ] [ stream ] add experimental annotation for java datastream api
updated the implementation of StreamCepstrumSource . java to improve performance and maintainability of the code
added a check to ensure index does not exceed the size of the items list to prevent index out - of - bounds errors
updated assertions to check for ` Parenthesis ` instead of ` OrExpression ` in ` CloneHelperTest . java ` to ensure correct type
added confirmation and requiredType options to the DebugPaste command in the DebugPaste functionality to enhance the functionality of the DebugPaste command
replaced calls to ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to improve error handling by throwing
douniaberrada : do n ' t focus the input element if it ' s a new form
replaced ` Arg ` class with a new interface ` AbstractGoBinaryDescriptionArg ` and updated related imports and methods in ` GoBinaryDescription
updated environment variable retrieval logic in Jooby . java to include a fallback for the application ' s logback URL to improve flexibility
updated ` SimpleRetryExceptionHandler ` and related classes to replace ` RetryListenerSupport ` with ` RetryListener ` and introduced ` SecondDummyRetryListener
add decimal support for count ( 0.0 ) ( # 498 )
refactor Contribution class to initialize email , author , and commits as final fields to improve code clarity and enforce immutability of the
replaced a loop with a do - while loop for appending a period in JUnitFormatter . java to improve performance by reducing the number
refactor how elements are retrieved and instantiated from the fields map to improve code clarity and ensure proper handling of non - LinkedList elements
enhanced error messages in StaxEventItemReader to include the URL of the input resource to improve clarity of error messages for better debugging
make testmultirendertarget work again with jme3
added null check for currentProfile and improved logging in DelegatedAuthenticationClientLogoutAction to enhance robustness by handling cases where the current profile
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper namespace declaration is
added BigInteger parameters and DSAParameterSpec initialization in KeyStoreManager . java to enhance security by using specific cryptographic algorithms for improved security
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
fix activiti - 5 engine version not be save in persist process definition .
updated property names in SpecificCompiler . java for consistency and clarity to improve code readability and maintainability by using more descriptive names
updated thread verification logic by replacing ` isCurrentThread ` with ` verifyThreadIsAttached ` in ` CEntryPointSnippets . java ` and
added null check for the map before accessing its values in GenericUDFMapValues . java and created a corresponding test class TestGenericUDF
corrected the spelling of " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in naming conventions and improve
added configuration for oil well generation rate and spout generation settings in BCEnergyConfig . java and modified OilGenerator . java to
added a check for the existence of a " . clean - me " file in the import context and updated the job queue logic to ensure the
add miss i18n lookup for memoryrealm . readxml
updated import statements in CRLDistributionPointRevocationCheckerTests . java to improve code clarity and maintainability
added EXID _ FLAG _ LAT and EXTT _ FLAT _ CT constants to the constants and import statements in ZipConstants64 and ZipEntry
refactor ` newFileSystem ` methods to enhance file validation and error handling to improve robustness and robustness of file system creation
replaced ` createHorizontalStrut ( ) ` with ` createHorizontalGlue ( ) ` in ` IfControllerPanel . java ` to
added an @ Override annotation to the connection creation method in FailoverUpdateURIsTest . java to improve code clarity and maintainability by
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance JSON
add deletebook ( ) method to databaseadapter . deletebook ( ) to delete book only if it have be delete
refactor multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
fix off - by - one error when use ajp with ajp
do n ' t start / stop the admin console server when the server be stop .
removed the unregisterHandlers method and reorganized the initialization of binaryConsumer and textConsumer in WebSocketImplBase . java to improve code clarity
added configuration properties for device ID transformation and ID table in IoTDBDescriptor . java to enhance configuration flexibility for device ID transformation and ID table
updated the number of documents in ExitableDirectoryReaderTest and added a new DelayingSearchComponent class to limit the number of documents to 100
updated the condition for determining if the access error is not found in TestSignatureInfo . java to correct the logic for determining if the error is
refactor script creation to use a local variable for the witness script instead of creating a new one to improve code readability and maintainability by
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional field type definitions in the schema
updated Completers . java to include NullCompleter and added OptionCompleterTest . java for testing completer functionality to ensure proper handling of
fixed checkstyle issue in util / s3utils . java
changed data types of sourcePeerId from String to int across multiple classes to accommodate larger peer IDs instead of strings
added a check for a zip file before uploading files in FtpHelper . java to improve file upload handling by allowing multiple files to be uploaded
updated the transparency settings of the reply button in TweetFragment . java to improve the visual appearance of the reply button
updated the expected string construction in AccessLogSupportTest . java to use a mocked AccessLogContext and expectedTimestamp to improve clarity and
update test to use tmp / testfiles - deleteme instead of testfiles - deleteme
removed null checks for subscribers and simplified related logic in SettingImpl . java to simplify the logic for determining if subscribers are valid
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed initialization logic from AbstractSaml10ResponseView . java to improve
replaced printStackTrace ( ) method calls with LogUtil . warn ( t ) in DataBrowser . java to improve logging functionality by using a more
added a check for non - existent assets directories in development mode and updated tests in AssetsControllerTest to ensure proper handling of non - existent assets
updated the call to ` rocksdbKeyedStateBackend . db . put ` to include ` rocksDBKeyedStateBackend . write
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to standardize the
fix ` ` dijkstrabi ' ' and ` ` douglas . minprecision ' ' hint not work .
use native secp256k1 and altbn128 pairs precompiled contract by default
rename the test class from DuclsSandboxTest to SandboxTest and update related references to improve clarity and consistency in naming conventions
camel - 16400 : camel - cxf - do n ' t log stacktraces to system . err
make forwardpropagatetree public so we can access it
updated the SQL query to include a time limit of 20ms instead of a fixed value of 0 to improve flexibility in grouping by time based
improve error message when $ { project . basedir } be use during profile activation
refactor Style class to improve code structure to enhance maintainability and readability of the code
added zoom functionality to ShareActivity to handle the back key event to enhance user experience by allowing zoom - out functionality
added a condition to skip processing for deprecated fields to ensure proper handling of deprecated fields during deserialization
added animation handling for showing and hiding send layouts in LauncherFragment to improve user experience by providing smoother transitions when floating compose is
[ hotfix ] [ doc ] fix checkstyle violation in util
added Progressable parameter to multiple createSequenceWriter and createCompressedStream methods to enhance progress handling for file writing operations
[ hotfix ] fix typo in sourcecoordinatorprovider
removed a contribution from the ContributionListPanel and updated panel ordering and color updates to ensure proper removal of contributions and update color settings
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated method references accordingly to improve clarity and consistency in
added a check to set dPath to the user ' s directory if it is empty to ensure the application uses the user ' s default directory
fix e - ac3 channel count for audio output with no sample rate .
log4j2 - 1343 - add mapfilter . filter ( ) method to check if a message match a specified value in the
rename VerificationInOrderWithCallsTest . java file to improve clarity and maintain consistency in naming conventions
replaced ` axis . z ` with ` axis . x ` in the ` setFromAxis ` method call to ensure correct axis coordinate is used
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with naming
curator - 1343 add unit test for connection state listener state change
bugfix # # 5355 - fix completion documentation for union type
added a boolean field ` mIsOneHandedModeSupported ` and updated conditional checks based on its value to improve code readability and maintain
added an override for the onDetachedFromWindow method in AppsCustomizePagedView . java to cancel tasks upon detached from the
add ' dictionary - resource ' attribute to morfologikfilterfactory and morfologikanalyzer .
replaced count variable with thrown variable and adjusted exception handling logic in ResultSetTest . java to improve clarity and correctness of exception handling logic
updated the initialization message to use an empty string instead of a specific debug log message to improve clarity by providing a more descriptive message for
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and added MVCC anomaly
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability to enhance code clarity and maintainability by encapsulating
updated the timeout duration in the await statement from 5 seconds to 10 seconds to improve test reliability by allowing more time for the zipkin server
updated DeviantArt login logic to use configuration values for username and password to enhance security by ensuring a valid username and password is provided for
refactor GoogleSignedPackages to use constants for keys instead of known keys to improve code clarity and maintainability by using more descriptive constants
refactor solutionBusiness initialization to use createSolutionBusiness ( ) method to improve code clarity and maintainability by using a dedicated method
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added emailDescription to templateData in EntityGroupKeyContentFormatter and set a test description in TestEntityGroupKeyEmailContentFormatter to enhance email functionality
updated the method call to use ' data . remove ( sel ) ' instead of ' remove ( sel ) ' to ensure consistency in data handling
modified the handling of the ` getISO3Language ( ) ` method to return the correct language based on the length of the base locale to
refactor ChangeLog parsing and update update visitor creation in Liquibase . java to improve code readability and maintainability by encapsulating
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary execution when the screen pinning is not active
added support for custom no - data text and description in Chart . java to enhance user experience by providing clearer information on chart display
added synchronization and a method to check if the response head has been sent in Http1xServerResponse and Http2ServerResponse classes to ensure
refactor chunk handling logic in NettyResponse . java to improve readability and maintainability to streamline the code for better clarity and
updated header tests to use the " : scheme " header instead of hardcoded values to ensure proper handling of HTTP schemes in HTTP / 2 tests
fixed - rlocalcachedmap . getall ( ) and rlocalcachedmap . putall ( ) method throw npe if storemode
camel - 14263 : camel - jpa - do not cache entitymanagerfactory / transactionmanager in jpaendpoint . thanks to
fix jump speed for jumping in physiccharacter . change fallspeed to jumpspeed
added a condition to check if reparsedFunction is null when no syntax extensions are present to ensure proper handling of functions when reparsed functions are
updated logging variable names and refactored order book handling in BitstampPusherService . java to improve code clarity and maintainability by
deprecated the old segment URI methods in FileUploadDownloadClient and added a new constant for the old segment path to improve code clarity and maintain
updated the method call to use a filter parameter instead of a direct call to ` dbCol . findOne ( ) ` to enhance filtering capabilities by
added unit tests for the assertPredicate method in LanguageTestSupport . java and JuelLanguageTest . java to ensure that the predicate function correctly
added bounds checking for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to 1
corrected string concatenation syntax in the import package attribute replacement to ensure proper formatting of the import package attribute
refactor DataSyncConfiguration to improve code structure to enhance maintainability and readability of the configuration
added import for JavaSnippetRepository and called its initialization method in JavaLanguageServer . java to enable the initialization of the JavaSnippetRepository for snippet
modified the conditional check to include a loop for updating sums in StarTreeRecordStoreCircularBufferImpl . java to ensure that sums are only
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
camel - 14263 : camel - pgevent - fix unit test error in camel - pgjdbc
replaced deprecated imports from ` com . sun . syndication . feed ` to ` com . rometools . rome . feed
added handling for the " Content - Length " header in TransferCompletionHandler and updated NettyTransferAdapter instantiation in NettyAsyncHttpProvider to
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
removed the constructor from EnhancedRuntimeException to simplify the code by eliminating unnecessary complexity
try to fix the flakiness of socketappendertest by wait for the udpserver to be ready
camel - 16400 : camel - endpoint - dsl - remove deprecate endpoint class in camel - karaf
updated method signatures and exception handling in ByteArray . java for improved clarity and functionality to enhance code readability and maintainability by reducing
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unnecessary input
camel - 6770 : camel - restlet should use camel - restlet instead of camel - restlet
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method and its usages to simplify the method signature and improve
move module - path test from com . hazelcast . tests to com . hazelcast . test . modulepath
added a new method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and updated the ` getCompiler ( ) ` method in `
removed menu item visibility condition for web page visibility in TweetPager . java to streamline user interface by eliminating unnecessary menu item management
renamed methods related to node relationships and updated assertions in AncestorDescendantTests . java and HasParentNode . java to improve clarity and
add a negative y - coordinate to the player ' s position and position . close # 363
[ iotdb - 3241 ] fix partial insert error ( # 3241 )
removed single quotes from the closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ runtime ] move mailboxexecutor from operator factory to abstractstreamoperatorfactory
hbase - 25827 addendum fix tablestate in meta and settablestate in testaccesscontroller
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer feedback on
update the constructor call to use ` getJavaClass ( ) ` instead of ` getTestClass ( ) ` in ` BlockJUnit4ClassRunner
[ drools - 5352 ] fix kiewatcher . delete ( ) to use lasttimedata instead of remoteitems
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout accuracy by incorporating
[ hotfix ] [ test ] add parent _ first _ logging _ PATTERNS to coreoptions
replace calls to ` doc ( ) > lastScoredDoc ` with ` this . doc ( ) ` in ` BooleanScorer2 .
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure proper merging of the
updated the ` Session ` interface to extend ` Closeable ` and changed the return type of ` close ( ) ` methods to void in multiple classes
refactor GetLocations class for improved readability to enhance maintainability and clarity of the code
removed exception stack trace printing and added null check for exceptions in SchemaValidatorTask . java to simplify error handling and improve code clarity
refactor IOException handling to improve clarity to enhance code readability and maintainability by using a more descriptive variable name
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android support library
ruby flavor : fix syntax error when emit a single term
updated logging level from warn to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
( chore ) camel - nio2 : remove the usecaches flag from the endpoint
refactor database reading logic in CasGeoLocationConfiguration to use Resource directly instead of MaxmindProperties to improve code clarity and maintainability
update instructorfeedbackresultspageuitest to reflect new instructor result page
updated ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance flexibility in determining if a table is raw
removed public access modifier from several methods in ApprovalStore and ApprovalsControllerService classes to simplify method visibility and improve code readability
added a boolean flag to track if the download has started to ensure notifications are canceled when a download is requested to improve user experience by preventing
replaced ` getOpenView ` method with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` Abstract
updated project version from 1.0 . 11 to 1.0 . 13 and modified year from 2008 to 2009 in JFreeChart
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
renamed GsonBuilder class in the codebase to improve clarity and maintainability of the code
added a null check for the centerGeo before adding it to the fixedPoints list to avoid potential NullPointerExceptions when centerGeo is null
remove espresso home option , use homefinder instead
doc : fix javadoc warning in javax . lang . model
changed the access modifier of ` timeToDieInSeconds ` and ` deleteSession ` from protected to private in ` DeleteSessionAction . java ` to
rename ` InvalidDocumentStoreApiUageException ` class and its constructors to ` InvalidDocumentStoreApiUsageException ` to improve clarity by
updated JoinQParserPlugin to initialize sz to 0 and modified result assignment logic in SolrIndexSearcher to handle cases when upto is zero
added an additional parameter to the triggerMediaScan method call in FileDownloader . java to enhance media scan functionality by allowing the file to be
removed conditional logic for printing test results in TestRunning . java to simplify test result handling by eliminating unnecessary verbosity checks
added multiple calls to custom G - code settings in MainWindow . java to enable custom G - code settings from user input
camel - 14850 : camel - jbang - add support for camel - jaxb - mapping to camel - aws2 - jaxb
refactor JsonElement class to improve data handling to enhance readability and maintainability of the code
added exception handling for unsetting system property in TestBadConfig . java to improve test reliability by ignoring specific exceptions during tests
added a method to remove fragments and the action bar in GpsMainActivity to improve user experience by managing fragment and action bar visibility
make the tokenizerannotatoritest more tolerant of spanish and spanish token
updated range handling in RemoteMediaHandler and RemoteRawHandler to use ` Range . Byte ` instead of ` Range . create ` to simplify code
updated the G - code file to use line _ skip _ test . gcode and improved debug output formatting in VisualizerCanvas . java
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " and
fix checkstyle violation in assertions _ sync _ with _ instanceofassertfactories _ test
added a condition to check if the output stage is null and the query state is completed in StatementResource . java to ensure proper handling of output
refactor integritycheck to not use file _ directory for integrity check
removed unused import and field for SolrClient in ChaosMonkey . java to streamline code by eliminating unnecessary dependencies
added null check for the database configuration store before accessing its private persistent file to avoid potential NullPointerExceptions when the file is not initialized
removed unnecessary whitespace in the ` NestedRepositoryTreePanel . java ` file to improve code readability and maintain consistency in formatting
added a public constructor to the ExtensionTypeHeader class and a validation check for the length parameter to ensure the type is within the valid range of
pdfbox - 4892 : remove unneeded try / catch block , a suggest by valerybokov
make pushonshutdown default to true and add a getter / setter for it .
updated the ` TriggerQueueItem ` and ` handleEvent ` methods to include a ` triggerCallback ` parameter and improved error handling to enhance
added a test for handling multiple Python executables on the first path in BuckConfigTest . java to ensure that the correct executable path is
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance the user interface by providing access to the sign - in button
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages to include the exception details when sending forgot password info email to improve clarity of error messages for better debugging and debugging
remove package - info . java , use org . axonframework . util instead
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the private Vector2 center field from multiple classes to clean up the code and improve readability
simplified the conditional check for pcollection in RegisterAndProcessBundleOperation . java to improve code readability and maintainability by reducing
refactor SslContextFactory to improve SSL configuration handling to enhance security and reliability of SSL connections
[ hotfix ] [ test ] remove maxexpectations and maxlogentries from configurationpropertiestest
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer error handling for access confirmation issues
[ 3.0 ] fix classloading issue in referenceconfig
added a new parameter to the ` shiftRows ` method for copying and resetting the original row height to enhance the functionality of the ` shiftRows
replaced instances of ` setRolloverIcon ` with ` setRolloverPressedIcon ` in ` FontImage . java ` to clar
updated TaskViewUtils to set grid translation Y instead of secondary translation and added grid translation handling in TaskViewSimulator to improve UI respons
refactor assertions in the Assertions class to improve code readability and maintainability
added a check to return the value of ` currentDateTimeFunction ` if it is not null across multiple database classes to ensure consistent retrieval of the
added a method ` anonymousPath ` in ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling for anonymous
updated the method signature of ` DigitalWellBeingToast ` to include ` remainingTimeMs ` and added a content description parameter
[ amazonechocontrol ] fix some timing issue in catalogtracker . getmetalocation ( )
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
change genericitem . getstate ( ) to return a stateconverter . defaultconverter instead of null
added Hibernate integration tests and modified imports in BidirectionalOneToOneNPlusOneTest . java to enhance test coverage and ensure proper functionality
added functionality to remove an extra empty screen from the workspace and adjusted the start search page index logic to ensure proper handling of empty workspace scre
updated hashset initialization and added null check in IndexedValueMap to improve memory efficiency and prevent potential NullPointerExceptions
updated value formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to improve consistency and accuracy in string
refactor wait logic in SendingAccountor . java to improve readability and handle interruptions more effectively
hbase - 22082 walprettyprinter should seek to the end of the file when write to it . ( chaoyu t
updated the timeout value in the NettyTransceiver initialization from 1 to 0 to ensure proper connection timeout for the Netty transceiver
sort log event before generate the report ( fixes # 388 )
added a test for CSV line description containing double quotes in the ` getCsvLine ` method to ensure correct handling of escaped quotes in CSV lines
[ coref ] add coref . doscore , coref . scorer , data , parse . model , v8.01 /
do n ' t send iq packet to non - remote user .
added @ JniImpl annotation to VM . java to enable JNI implementation for improved performance
updated configuration settings and logic for handling blocking and robots in Fetcher2 . java to improve code clarity and maintainability by using predefined protocol
added a condition to check if the media HDR format is " dolbyvision " before handling SID in FFMpegVideo .
rename ` other _ package ` to ` other _ package2 ` in ` asttests . java ` to clarify the purpose of the
update worldborder . setworldbordersize ( ) and worldborder . resize ( ) . add integration test .
hbase - 20650 hmaster # getwalgroupsreplicationstatus should return an empty map instead of null
mow - 1343 remove the user from the login dialog when the login fail
updated ` markDataResourceOnline ` calls to use a new method for generating instance configurations to improve code readability and maintainability by centralizing
changed the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add a test to verify that error in maven project build do n ' t throw an exception
removed redundant condition in the if statement in PropertyMap . java to simplify the code logic for better readability and maintainability
refactor ` getControllerId ` method to accept a ` configId ` parameter and update related logic in ` DoorbirdInfo ` , `
replaced sessionFactory . close ( ) with session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the condition checking for refresh token generation in OidcConsentApprovalViewResolver to simplify the code logic by eliminating unnecessary checks
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
replaced the extractor method to use an enum ` NoopGetter ` instead of a lambda expression to improve code readability and maintainability by
refactor ConditionalOnEnabledResourceChain class for improved resource management to enhance maintainability and readability of the code
added a condition to check if the tree root has child elements in BarrowmanCalculator . java to ensure that only valid Rockets are
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated logging statements and added session state handling in FacebookImpl . java to improve logging clarity and ensure proper execution of the login process
updated the return value in ShadowICU from a hardcoded format to a dynamic skeleton and modified test cases in ShadowICUTest to ensure
removed unnecessary KeyguardManager checks in TouchInteractionService . java to simplify the condition for checking device lock status
fix potential npe when get default disk offering for volume
replaced FileChannel with AsynchronousFileChannel and added position tracking in UtowBodyHandler . java to improve performance by utilizing asynchronous file channels
refactor SigInt and SigIntTest classes to simplify signal handler registration and improve exception handling to enhance code readability and maintainability while ensuring
ggb - 1889 fix draw text not update on touch down .
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
updated the initialization of ` IntegerGenerator ` and replaced lambda expressions with static final constants and functions to improve code readability and maintainability by using
added an onRefreshListener to UploadListFragment to notify when data is changed to ensure data is refreshed upon refresh
fix handling of empty file in bib / bib export
replaced multiple instances of ` ParticleEffect . items [ i ] ` with a single call to ` emitters . get ( i )
refactor Tomcat service and engine handling to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
updated error message formatting in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a check to prevent processing when the playback state is not PLAYING to improve performance by avoiding unnecessary processing when the playback state is
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the
added a new test class ` InnerClassFieldClash ` and modified ` Java2TypeScriptTranslator ` to handle inner class declaration clashes
added logging and follow redirect filter functionality to DockerClientFactory and DockerClientProfile to enhance control over client redirection behavior based on configuration settings
refactor display change handling in XToolkit to use awtUnlock and awtLock to ensure thread safety when accessing graphics environment
hhh - 10183 : enable nationalizedscalarquerytest on sql server 2008
pdfbox - 4892 : call ` ` revert ( ) ' ' instead of ` ` verifyZipHeader ( input ) ' ' ,
changed the access modifier of the ` storeClassFile ` method from private to public to allow external access to the method from other classes
updated the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a test class TestSortedSetDocValues to
updated error messages in CGIHandler and added a callback handler in JavaVM to improve clarity of error messages and ensure proper execution of runnable
added additional condition to check for newline characters in LineReaderImpl . java to ensure proper handling of newline characters in the code
refactor ` DistBuildService ` , ` ServerContentsProvider ` , ` DistBuildServiceTest ` , and related classes to use ` Set
added a check to return early if the mesh ' s vertex count is zero to optimize performance by avoiding unnecessary processing when no vertex is present
( chore ) camel - incorect : improve error message when verification in order fails
replaced FileUtil . createData with FileUtil . createFolder in MacroService . java to ensure the deletion process creates a folder instead of
improve javadoc for implicitcast and typesystem , remove unused import
refactor JsonObject class to improve code structure to enhance maintainability and readability of the code
updated idle timeout condition in SelectChannelEndPoint . java and adjusted connection max idle time check in HttpConnection . java to ensure correct idle time handling
fix farmlandblock . cansustainplant ( ) not call on blockstate . getplant ( ) .
added tests for creating a unique primary key table in QueryDatabaseMetaDataIT . java and updated related logic in UpgradeUtil . java to validate primary
updated SimpleDateFormat to use Locale . US for date formatting in HttpCookie . java and added a new class B6791927 . java to
removed multiple redundant calls to ` db . close ( ) ` in ` DbHelper . java ` to streamline database connection handling by elimin
increased polling timeout from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to improve test reliability by allowing more time for
[ gr - 16936 ] add trace phase to economyallocationstage .
fix ` ` save database ' ' and ` ` all ' ' in source tab
refactor ObjectMapper initialization to use a static block to ensure consistent line separator for better readability and maintainability
update NativeEnvironmentRepository . java to replace backslashes with forward slashes in the name to ensure compatibility with Windows path formatting
refactored multiple test classes to use the Application instance directly instead of relying on the Application instance to improve code organization and maintainability by
[ java ] remove validation code that be no longer need .
replaced GroupName with ErrorGroupName for improved clarity to enhance code readability and maintainability by using more descriptive variable names
do n ' t run testfuzzoptimizations . testfuzzoptimizations in travis mode
replaced shared preferences initialization with a private boolean variable ` reverseImage ` to improve code readability and maintainability by eliminating redundant code
updated string comparisons from ` . equals ( entry . getName ( ) ) ` to ` . equals ( entry . getName ( ) ) ` for
improve mdm match link feature to not overwrite golden resource attribute
updated JUnit 4 annotations to JUnit 5 in AuthenticationSuccessListenerTests . java to ensure compatibility with the latest JUnit 5 features and improve
fix settypes to use indexof ( ) instead of arraylist ( )
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the way trigger time is formatted by using LocalDateTime and TimeZone to ensure consistent date formatting across different locales
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method errors in ` MethodHandleResolver . java ` to improve error
camel - 14850 : camel - core - optimize simple language to not throw illegalargumentexception for invalid expression .
removed unnecessary check for empty toExplore list in AbstractParser . java to streamline code by eliminating unnecessary checks
camel - 14284 : fixed the unit test error of camel - jclouds
( chore ) camel - test - infra - camel : remove @ ignore from camelconsultest
added a check for the ACC _ STRICT access flag on the default method and created a new test class to verify its behavior to ensure
[ java ] increase driver timeout in channelvalidatortest to avoid flakiness .
added a new file ` FileExtensions . java ` with constants for CLANG source and header file extensions to provide a centralized way to define
replaced the ` ThreadLocalDateFormat ` implementation with a static final instance of ` ISO8601CanonicalDateFormat ` to simplify the thread - local date
removed deprecated warning entries for " FastTLABRefill " , " DeferPollingPageLoopCount " , " SafepointSp
added displayName property to Pac4jBaseClientProperties and updated related classes to utilize it to enhance client configuration flexibility by allowing display
replaced RuntimeException with EarlyTerminationException in multiple classes and added a new EarlyTerminationException class to improve error handling by providing a specific
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4957 .
fixed npe in forgeeventfactory . getcapabilities ( ) when parent be null
removed KeyCrypterException from exception handling in WalletTool . java to simplify error handling by eliminating unnecessary exceptions
deprecate submitorderedcompletionservice in favor of asynccompletionservice
updated HyphenationTree to track the original length before creating a new Hyphenation instance to improve clarity and maintainability of the code
( chore ) camel - core : fix race condition in register handler .
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the description of the PARAMETER _ NEEDS _ TO _ NAMED constant in ParameterBinder . java to clarify that the parameter
added a new variable ` providersChanged ` and initialized it to ` false ` in ` ConfigurationManager . java ` to ensure that changes are properly
added a method ` quoteIdentifierTokens ` to handle quoted identifiers in the token rewrite stream to ensure proper handling of quoted identifiers in the Hive lexer
pdfbox - 4892 : skip non - existent ' name ' entry for postscript font
updated type casting and variable declarations in SolrResourceLoader . java to improve type safety and clarity in class loading logic
modified the condition to check for the current actor ' s parent hierarchy before returning the hit object to ensure proper handling of hit cells within the window
added null check for appManifest before accessing its targetSdkVersion to prevent potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to improve JSON serialization and deserialization handling to enhance code readability and maintainability by reducing
added userName property and corresponding getter and setter methods to Driver and its implementations to enhance the driver ' s functionality by allowing users to specify a user
camel - 14863 : camel - xslt - allow to configure transformersource for xslt component
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstOutComparator to enhance
removed redundant variable assignments in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to simplify code and improve readability by
fix potential npe in coyoteadapter . logaccess ( )
removed trace logging statements and updated message formatting in ThroughputLogger . java and ThroughputLoggerTest . java to improve performance and cl
updated VM version checks in CompilerConfigFileWarning . java and ConfigFileWarning . java , and added VMOptionWarning . java for diagnostic option validation to
refactor ` MeterStatisticsManager ` to use a local ` statisticsModelMap ` instead of ` MeterStatisticsManager . statisticsOperationMap ` to
replaced System . err . println with a conditional statement to resolve the logback system property to improve code readability and ensure the logback
updated method signatures and class names to use " NoOpCookieValueManager " instead of " DefaultCookieValueManager " and " DefaultCas
updated the Escaper class to use SHELL _ ESCAPER instead of BASH _ ESCAPER for shell command handling
added try - with - resources for container handling in ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to ensure proper resource management
changed the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a shield address in RpcApiService to enable asynchronous processing of shield addresses for the wallet
change return type of readConsoleInput ( ) methods from byte [ ] to String in JansiWinSysTerminal and JnaWinSys
updated regex patterns for presubmit and postsubmit in TestStabilityRule . java and initialized sRunFlavor in TestStabilityRule
added a condition to decrement mvToMatch when the score is greater than zero in DefaultSolrHighlighter . java to ensure that multi - valued fields
modified the ` tryToLogin ` method to accept username and password as parameters to enhance authentication handling by allowing users to specify credentials for the login
removed unused imports and updated entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to
fixed checkstyle issue in com . sun . jms . jms . jmsproducer and com . sun . jms . jmsproducer .
removed the wrapCollection method call from the update method to simplify the method signature by directly using the parameter
added logging and exception handling for unknown currencies in BTCEAdapters . java to improve error handling and provide clearer logging for unknown currencies
removed unnecessary client ID checks and simplified subscription creation logic in DurableConduitBridge . java to improve code clarity and maintainability by
pdfbox - 4892 : change default tolerance to 0.3 , a suggest by valerybokov
updated ` startController ` methods to accept a boolean parameter for tenant isolation and added new tenant creation methods in ` ClusterTest ` and ` Hy
replaced ImmutableMap . builder ( ) . build ( ) with a direct return of the response value to simplify the code and improve readability by
added a condition to check if attrs size is greater than or equal to 4096 in ProjectWorkspace . java to ensure that attrs are not empty before
added abstract methods for project JDK name , type , and language level in ` AbstractIjProjectConfig ` , and refactored related code
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and
added tests for ` GrantedAuthorityEffectiveAclsResolver ` to resolve ACLs for a specific user with specific user details to ensure proper functionality
replaced the use of ` ReflectionDeclaration ` with a method call to ` getSolvedJavaLangObject ( ) ` in ` JavaParserType
added button count management logic in XToolkit . java to limit the number of supported buttons to a maximum of 24 to improve user experience by
updated import statement for assertEquals to use the correct package to ensure compatibility with the updated package structure
added a new ` MessagePackFactory ` class and refactored ` MessagePacker ` and ` MessageUnpacker ` methods across multiple files
added is _ desert and is _ cave tag to the biome ( fixes # 119 )
rename ` present ( deltaTime ) ` method to ` draw ( deltaTime ) ` across multiple screen classes to improve clarity and consistency in
added conditional logic to set layout based on horizontal state and updated UIID assignments for group elements to improve UI responsiveness based on horizontal state
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` for
replaced instances of ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and
[ java ] remove the volatile from clusteredserviceagent . commitposition and make it non - volatile .
added UserSite and UserSiteId classes in the example . records package to facilitate the creation and retrieval of UserSite and its
added error handling for malformed IP address and port retrieval in HttpConverterRegistrar . java to improve robustness by providing a fallback to the default port
server : fix listvolumes api to return host _ id instead of host _ id for storage _ allocated / storage _ pool _ id when the
replaced the method ` openInput ( ) . close ( ) ` with ` fileLength ( ) ` in ` NRTCachingDirectory .
refactor JavascriptCompiler to improve class generation and error handling to enhance code clarity and maintainability by standardizing exception management
made the ` store ` method in ` UISettings ` synchronized to ensure thread safety when saving properties to the file
added a check for native text input support in the TextField class and changed the access modifier of the fireDataChanged method from private to public to
fix spannerio retry logic when emulator only support one transaction at a time .
replaced explicit generic type parameters with the diamond operator in TreeMap and HashMap declarations to improve code readability and maintainability by using the
modified the array type check in ObjectInputStream from double to short and added a new CloneArray class for testing to ensure correct cloning of short arrays
updated nonce retrieval method to use getStringClaim and improved logging severity in OIDCAuthenticationFilter . java to enhance clarity and maintainability of
added a condition to return true for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added support for server slogan in the capabilities table and updated related methods to improve user theming handling and ensure consistent display name retrieval across
refactor conditional logic in DrawerActivity to use ' = = ' instead of ' ! = ' for menu item comparison to improve clarity
replaced a failure test with an assumption check in SolrRequestParserTest . java to improve test reliability by providing a clearer assumption mechanism
added a check to return early if missing symbol events are empty to improve performance by avoiding unnecessary processing when no symbol events are available
added new test cases for various data formats in StringHelperTest . java to enhance test coverage for various data formats
added a warning log when the data provider returns an empty array or iterator to improve debugging by providing feedback when the data provider returns an empty array
camel - 14850 : camel - core - optimize collection method to avoid unnecessary object creation .
updated freeplane version to 1.9 . 8 and refactored style handling in mapstylemodel to ensure compatibility with freeplane 1.
physicsrigidbody . setrestitution ( object , object ) now use restitution instead of mass
added a new ` AutoFtpActivity ` class and integrated it into ` FtpHelper ` for FTP testing to enhance the application ' s
refactor code to use a local variable for token type and add handling for StringLiteral to improve code readability and maintainability by reducing
added getter and setter methods for imageX and imageY in ImageViewer , implemented getComponentState and setComponentState in OnOffSwitch , and
added a new class ` RemoteExecutionEnabled ` to handle serialization and deserialization of ` Boolean ` objects to ensure that ` RemoteExecutionConditional ` is
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading method to use InputStreamReader with UTF - 8 encoding in ImportCsv . java to improve compatibility with different character encoding requirements
scoredirector : add assertworkingscorefromscratch assertion to abstractscoredirector # assertworkingscorearenotstale
updated the configuration key for semi - join conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin
added logging functionality to identify non - byte [ ] and non - serializable instances in multiple DatagramPacket classes to improve error handling and provide clear
replaced ` removeFile ` method with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated file retrieval logic in `
added assertions to verify the presence and existence of the transaction hash in PollingTransactionReceiptProcessorTest . java to ensure that the transaction hash is
fix schemaregionbasictest . testdeletetimeseries and mark it a deprecate .
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to ensure compatibility
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that creating an index on a view is not supported
added a new ` Website ` class with properties for ` name ` , ` URL ` , and ` URI ` in the ` Website
added a setup method to set the default locale to " US " in BSFormatterTest to ensure the test environment correctly sets the default locale
add a check for badly download jar file in coremodmanager
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase for sha1sum comparison to ensure case - insensitive comparison of
added a check for single parameter and its tokens in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analysis process
added a volatile boolean field ` createdVertx ` and modified the conditional check for ` vertx ` to ensure that only one instance of `
updated the ` writeAttributes ` method calls to use the ` node ` parameter instead of ` null ` for style and size to ensure that the
updated log messages in SynchronizeFolderOperation . java for clarity and added null checks in FileDisplayActivity . java to improve log readability
added a new boolean field ` ignoredReadStatus ` and updated methods to set it to ` entries . setIgnoredReadStatus ( keywords ! =
replaced usage of MavenTestingUtils with MavenPaths for path resolution in multiple test classes to improve code clarity and maintainability by using a
added data validation logic and updated import statements in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber classes to enhance data validation and improve code clarity
updated the condition for sound playback state in GwtMusic . java to include a check for the audio ' s paused status to ensure that
added a new permission for admin sectors in MainCommand . java and defined a new permission constant in Captions . java to enhance access control
replaced ImmutableMap with HashMap and refactored query options handling in ServerRequestPlanVisitor . java to improve code readability and maintainability by
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
refactor assertions in ResourcesTest to use predefined strings for emojis and mix text to improve readability and maintainability of test assertions
replaced the native method NMTWaitForDataMerge with two native method NMTOverflowHashBucket and NMTMallocWithPseudo
[ flink - 20604 ] [ serializer ] [ serializer ] rename eitherserializer snapshot to javaeitherserializersnapshot
updated AddressResolverOptions and AddressResolver classes to use constants for default resolv options and rotation options to improve code clarity and maintainability by
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a corresponding test in ` Request
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated references from " liquibase / parser / xml / * " to " www . liquibase . org / xml /
move commonmimetypelocator from com / oracle / truffle / api / source to com / oracle / truffle / api / test / source
replaced the initialization of ` RepositoryVersionState ` from INIT to NOT _ REQUIRED across multiple files to ensure that the correct repository version state is
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to ensure compatibility with different catalog and schema names during the comparison process
replaced JUnit Test import with TestNG annotations in TestBackwardAnoamlyFunctionUtils . java to utilize the TestNG annotations
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG rendering to facilitate testing of progressive JPEG
updated MaterialLoader to set a " AlphaDiscardThreshold " float and set properties to null in the list to improve the handling of material attributes and
improve error message for unsupported native - image build on window .
added a null and empty check before setting the size in Label . java to avoid potential NullPointerExceptions when text is empty
modify the readVarInt ( ) method to use a modulus of 1 , 000 , 000 instead of a fixed value to ensure accurate reading of
changed the PushUtils class from non - final to final and added a private constructor in PushUtils and ThumbnailsCacheManager classes to enforce im
replaced the calculation of the maximum length with a direct call to ` getLength ( ) ` to simplify the code and improve readability by directly
removed the casting of ` MockDirectoryWrapper ` when setting ` setEnableVirusScanner ` to ` false ` to simplify the code by
updated the regex pattern for loading component presets in the Startup . java file to enhance flexibility in loading presets from CSV files
added conditional checks for taskbar accessibility and updated variable names for consistency to improve code clarity and maintainability by using a more descriptive
replaced the method of obtaining the node ID in NodeManager to utilize the RefreshTask class for improved node management functionality
add a check to make sure we can target only jdk 1.3 and jdk 1.5
fix ( test ) : remove powermock from quotaresponsebuilderimpltest
added PrintStream to TestSchemaToolCatalogOps for standard output to standardize output and error streams for improved debugging
added DFSClient parameter to multiple constructors and methods in FanOutOneBlockAsyncDFSOutputSaslHelper . java to enhance security by
updated MongoQueryMethod to include RepositoryMetadata as a parameter across multiple classes to enhance flexibility in query resolution by allowing more flexible metadata handling
add entityresolverwrapper to make it easy to use custom propertysource .
removed duplicate import statements for BYTES configuration in MetaDataEndpointImpl . java to streamline code by eliminating redundancy and improve readability
updated ALLOWED _ REPEATED _ DEADLOCKS constant from 5 to 10 and added retry logic for deadlock handling in TxnHandler
renamed variable ` xl ` to ` xAxis ` for consistency and clarity to improve code readability and maintainability by using more descriptive
added methods to validate printable characters and validate system names in FsUtils . java to enhance security by preventing invalid characters from being printed in the
fix typo : selenide . in ( ) - > selenide . using ( )
[ mng - 7011 ] add process - plugin - configuration option to projectbuildingrequest .
[ java ] add miss ' d ' keyword to tostring ( ) method .
updated the RESOURCES constant to use a conditional check for the existence of the Google Cloud Vision resource directory to ensure the test uses the correct
replaced return value of " STUB " with null in ModeledConnectionRecord and updated ActiveConnectionRecord to return the remote host instead of
add admin button to community list request for admin user
updated thread naming for longCompactions and shortCompactions in CompactSplit . java to include a counter for thread naming to improve clarity and
updated the method to retrieve the package name from resources instead of the application ' s package name to improve clarity and maintainability by using a
replaced the method ` getPlayersInPlot ( ) ` with a new method ` getPlayersInPlotVisible ( plot , player ) `
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest for improved readability to enhance maintainability and facilitate future updates
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test case in Scheme
simplified key and iv initialization logic in UploadFileOperation . java to streamline code by eliminating unnecessary checks for null or empty
added a Stability annotation to WorkProfileTest . java to indicate that the test is running in a local environment for specific flavors
added a check to skip processing if bucketing version is not set to optimize performance by avoiding unnecessary checks
replaced direct call to setCursorPosition with input . setCursorPosition to ensure proper input context is used for cursor positioning
added abstract classes ` LockFreeBucketContendedTimeMeter ` and ` LockFreeBucket _ finalFields _ CacheLinePadding ` and created a
add tpstats to nodeprobe to print out pending task
updated max bitrate retrieval to include user preferences in ExternalPlayerActivity and PlaybackController to ensure compatibility with user preferences for bitrate settings
refactor ZipkinHttpSpanExtractor to improve span ID checks and enhance debugging behavior to enhance clarity and maintainability of span handling logic
refactored getuserpaymentaccounts ( ) to return a set instead of a hashset and make it abstract
fix an issue with the right alignment of the suggestion
added a call to set the project in LauncherUtils . java to ensure the project is correctly configured for processing
updated ` JsBundle ` , ` JsBundleBuilder ` , ` JsLibraryBuilder ` , and ` JsTestScenario ` to include ` Project
rename multiple classes related to envelope and databinding to improve clarity and consistency in naming conventions across the project
[ hotfix ] [ doc ] fix typo in metricsdslcontext
removed the VersionConfig interface and updated its implementation in VersionBuckConfig . java to streamline the code by eliminating unnecessary interface implementation
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by handling potential TypeNot
changed the access modifier of the validateTypes method from static to public and updated the exception message from AST to LST to allow access to the
fix : update gapic - generator - java with mock service generation fix ( # 1193 )
added SLF4J logger imports to SimulationStatus . java to enable logging functionality for the SimulationStatus class
updated VERSION _ POSITION _ Y from 138 to 150 and changed the font size from 9 to 14 to improve the visual appearance of the
replaced direct addition of notifications with a runLater block to ensure notifications are added to the UI thread using runLater to improve responsiveness
added a mock implementation in ReturnsElementsOf . java to enhance test coverage for mocking behavior
updated error message for drop partitions for non - string partition columns to clarify that only non - string columns can be dropped with equality
added a test method for line - file document handling in BaseStoredFieldsFormatTestCase . java to ensure that line - file documents are properly
added a method ` getVersionCode ( ) ` in ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNewActivity
camel - 14850 : bean component support for ambiguous requestbody method . thanks to damian for the patch .
replace occurrences of ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added a boolean flag ` bufferOwned ` and modified ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` constructors to manage
added a transition for " forgotPassword " to the login form in PasswordManagementWebflowConfigurer . java to enhance user experience by allowing
[ hotfix ] [ javadoc ] fix typo in jerseyclientconfiguration
int - 1188 remove the class reference for characterstreamreadingmessagesource and characterstreamwritingmessagesource in the parser
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest . java ` and ` RemoveRedundantTypeCast
added methods to manage column and row indices in StringDict and Table classes to ensure proper handling of empty strings and improve code readability
added AutoCloseable interface and customizer methods to GenericContainer for command creation to enhance resource management and allow customization of container commands
changed logging level from info to error in MediaInfo . java and updated test methods to throw ConfigurationException in RendererConfigurationTest . java to improve error
added a schemapattern option to the BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to enable dynamic configuration of the schemapattern
return an empty byte array if no tl session be available
refactor bitmap creation logic to use variables for width and height to improve code readability and maintainability by reducing redundancy
refactor Base64 encoding methods in multiple files to improve performance and maintainability of Base64 handling
sulong : add fallback to llvmglobalcontainer to support single - context assumption .
simonstewart : unignoring a test that fail on the iphone
rename FlowBuilder and FlowJobBuilderTests files to improve clarity and maintain consistency in naming conventions
changed the ` AttributeResource ` class to use an ` int ` for resource ID instead of ` ResName ` and updated related classes accordingly to
updated Docker client configuration to utilize a ` resolveContextTLSFile ` method for retrieving the Docker context TLS path to improve code clarity and
( chore ) camel - spring - boot - starter - reactive - elasticsearch : fix test
added a loop to handle type variable assignment in ` ppp Attr . java ` and created a new class ` T6450290 .
added logging level configuration to LoggingFlags and LoggingOptions classes to enable dynamic configuration of logging levels based on configuration
added logging statements to various classes for better traceability and debugging to improve debugging capabilities during app icon removal process
added a new method ` allFilesOption ( ) ` to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity
added deprecated methods for processing operations with BiConsumer and BiFunction in MutationOperationGroup . java to indicate that these methods should no longer be used
updated the calculation of numPredictiveAppCols to account for phone devices to ensure numPredictiveAppCols is always at least 4 for phone
updated string initialization to use UTF - 8 encoding to ensure proper handling of character encoding in content processing
added a new class ` RequestMatchers ` with methods to handle multiple request matchers and their corresponding tests to enhance request matching functionality and ensure proper functionality
ggb - 1343 do n ' t show ` ` button ' ' if not in applet mode
updated calculations in ProgressBar . java to account for vertical positioning to ensure proper positioning and positioning of the knob ' s height and
[ nativequeryrunner ] use resource . getfile ( ) instead of src / test / resources / external _ functions . json
changed the access modifier of ` extra _ L0 ` , ` extra _ L1 ` , ` extra _ L2 ` , and `
added a condition to check if the handler is invalidated when verifying gesture state to ensure proper handling of gestures when the handler is invalidated
updated layout constraints and metrics calculations in CellLayout and Workspace classes to improve layout accuracy and ensure proper metrics are calculated based on layout constraints
added a condition to check if the file is " / robots . txt " in the conditional statement to ensure proper handling of robots . txt file
replaced hardcoded icon file with static resource in JBrowseModule . java and CallHierarchyTopComponent . java to improve code maintainability and
renamed " continue " to " createWorld " and changed " close " to " return " in the WidgetUtil ' s trySubscribe method
added null checks for division by zero in UDFOPDivide . java and created a corresponding test class TestUDFOPDivide
updated formatting in AbstractJob and FlowJob classes for consistency and clarity to improve code readability and maintainability
updated ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser ` to use ` MatcherBuilder ` for improved matcher configuration to enhance
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind the service when the activity is destroyed to ensure proper resource cleanup and
corrected the variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys to ensure proper timeout handling for RPC requests
updated logging level from error to debug for time index degrade messages and added a new test for sealed file resources to improve logging clarity
added a call to setSystemProperties in MavenModuleLoader . java to ensure that the model source and system properties are correctly set for improved
added metrics for readiness checks and refactored the ` getReadinessStatus ` method to use instance variables to improve monitoring capabilities for readiness
add miss model handler registration for animatedtorch
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a specified directory and updated multiple test classes to use this method to improve code readability and maintainability
added a link to " Muting Users " in the FeaturesActivity to enhance user experience by providing guidance on managing users
added a property ` jdk . reflect . useDirectMethodHandle ` with a value of ` false ` in ` initializedProperties ` to disable
hbase - 20663 fix splitonleadingvarcharcolumnspolicy to extend steppingsplitpolicy instead of constantsizeregionsplit
[ flink - 15656 ] [ yarn ] fix issue with empty plugins ship directory in yarn deployment .
updated method calls to retrieve pronunciations in both BuildTranscriptHMM . java and TrainerDictionary . java to improve code
removed newline character from JSON string representation in JsonUtilsTest . java to simplify the code by eliminating unnecessary newline characters
added extra " id " to compose in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper handling of tweet
log a warning if a message listener be shut down due to reliance on a reliable topic .
throw a more specific exception when there be no class to analyze
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with the latest security library
updated the compatibility check in DLNAResource . java to ensure proper handling of compatibility cases
updated the ` createAccount ` method signature to use ` AccountCreateContract ` instead of ` Account ` to enhance functionality by allowing the creation of
pdfbox - 4892 : do n ' t throw a npe if the range array be empty
http : / / issues . apache . org / jira / browse / amq - 4892 - fix regression in amq -
enable off - heap format by default and update default version from " ON _ HEAP " to " OFF _ HEAP " to ensure compatibility with the
modify the title setting in FeedUpdateService to limit the length of the title to 2048 characters to ensure the content title does not exceed a maximum
updated the initialization of the previewPanel in JColorChooser and BasicColorChooserUI classes to utilize ColorChooserComponentFactory for better flexibility
changed logging level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity when checking extensions
added a null check for the reusable bitmap before setting inBitmap to avoid potential NullPointerExceptions when accessing the bitmap
added a new import for ViewGroup . LayoutParams and a method to retrieve layout parameters in FakeView . java to provide access to layout parameters for better
added a check in DefaultCursor to throw an IllegalStateException if the cursor is already closed to ensure proper exception handling when using an iterator on a closed
pdfbox - 4892 : fix typo , a suggest by valerybokov
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests related to JMS communication
added a private ` String ts ` field with getter and setter methods in the ` Message ` class to provide a mechanism for retrieving and setting the
return a more specific error response for generic exception mapper
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove the ` ` turn _ costs ' ' parameter from query hint for isochrone resource
removed ` public ` access modifier from multiple test classes and added ` @ Nested ` annotation in ` JavaRecipeLifecycleTest ` to improve visibility
refactor CSRF handling into a separate method ` setCSRF ( HttpServletRequest request ) ` to improve code readability and maintainability by encapsulating
add a bootstrap option to the eclipseloaderpatchertransplants to use the shadowclassloader instead of the shadowclassloader
[ drools - 5842 ] add support for numeric disabled rule in excel parser
hive - 14836 : hiveconf should log default value to debug instead of info ( sergey shelukh
added null checks for axes and buttons in Lwjgl3Controller . java and modified controller management logic in Lwjgl3Controller
updated ObjectFactory import from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactory
refactor port forward saving logic in PortForwardListActivity . java to improve clarity and maintainability to enhance code readability and maintainability
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter methods in ` GlobalConfiguration ` , and updated
refactor SyncedFolderObserver to check for a non - null temp file before creating a PersistableBundle to improve robustness by avoiding
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
removed unnecessary check for trackpad motion events in StatusBarTouchController . java to simplify touch event handling logic for better readability and maintainability
refactor VectorReader to a class instead of an interface and update its imports accordingly to improve code organization and clarify the purpose of the
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to standardize the usage of Mockito matchers across tests
refactor relative path handling by replacing calls to ` getRelativePathName ( ) ` with direct calls to ` getRelativePath ( ) ` across multiple classes to
updated RecordReader and RecordReaderFileConfig to use RecordReaderFileConfig instead of RecordReader to improve flexibility in handling record reader configurations
added a null check for the extractor before instantiation in ControllerMethodInvoker . java and annotated classes with @ WithArgumentExtractor to ensure that the extractor
cloudstack - 8237 : fix default _ max _ secondary _ storage for project volume
fix potion shift event not fire in inventory effect renderer
deprecate ` cold _ reads _ to _ omit ` in the ` sizetieredcompactionpolicy ` , since it ' s
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure that the leech service is stopped
[ issue # 4596 ] fix the issue of popmessageprocessor not report label be retry .
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
replaced the JUnit @ Test annotation with @ Ignore in ShadowDateUtilsTest . java to mark the test as ignored for a specific time
rename ` MongoClientSettingsBuilderCustomizer ` and ` EventLoopGroup ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and
added upgrade request handling in UpgradeConnection and corresponding test cases in ClientConnectTest and JettyTrackingSocket to enable tracking of upgrade requests and responses
added a timeout feature to the AndroidImplementation class to allow dynamic configuration of the connection timeout based on its value
refactored methods in GitblitClient to return a list of RegistrantAccessPermission objects instead of using RpcUtils for user and
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing works correctly for
updated assertions in Misc . java to differentiate file access checks based on the root state to improve accuracy of file access checks based on the
added logging capabilities and refactored executor management in FixedThreadExecutor . java to enhance flexibility in managing thread pools based on dynamic properties
added null check for the field before checking for " catalogname " to avoid potential NullPointerExceptions during field validation
replaced instances of ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to align with the new naming conventions and improve
refactored animation end logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating the
hbase - 22079 regionfile . deflateroutputstream . close ( ) need to call def . end ( ) to make sure
added a new file ` gsp001 . java ` to implement a native method for retrieving system properties to ensure that JVMTI Get
fix bug in beandefinitioninjectprocessor when use @ injectable
[ jme3 ] export camera / light / camera to jme3 - export .
updated PopupNotificationPanel to create a new PopupNotificationPanel with a custom panel title and simplified mouse event handling to improve the clarity
replaced custom exceptions related to ambiguous and unambiguous instances with a more general InferenceException class to improve clarity and maintainability of
added a method ` getFeatureValue ( ) ` to return the value of ` featureValue ` to provide access to the ` featureValue ` variable
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` VerificationAfterDelay ` class to allow
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
added conditional logic to set the icon based on the text direction in RTL and adjusted positioning in FlowLayout to ensure proper icon display based
added a boolean flag ` enablePositionIncrements ` to the ` StopFilter ` class and modified the instantiation of ` StopFilter ` to allow
replaced hardcoded email strings with a dynamic internet address initialization in EmailsTest . java and SystemErrorEmailReportTest . java to improve
added a new boolean variable ` mTryShareAgain ` and initialized it to ` false ` in ` FileActivity . java ` to control the
added conditional logic to determine the terminal name based on the version of the Jansi native pom to ensure compatibility with different operating systems and improve
refactor bandwidth calculation to use a new variable ` bytesSize ` instead of a hardcoded value to improve code readability and maintainability by
replaced direct calls to ` then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
replaced multiple URL constants in EaseeBindingConstants . java with a single API _ BASE _ URL variable to improve code readability and
[ hotfix ] [ test ] set kafka container startup attempt to 3
updated the matching logic in SearchResultMatcher to use ' is ( itemName ) ' instead of ' allOf ( itemName ) ' to improve clarity
updated OkHttp . java to include SSL trust management and hostname verification in OkHttp . java to enhance security by enforcing client and server certificates
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by
added a new file HyperlinkFormula . java and modified StringPtg . java to use int instead of byte for field _ 1 _ length
added nullability checks for workingDirectory and initialized stdout / stderr in ShellStep . java to ensure workingDirectory is not null to prevent potential NullPointerException
increase timeout for asyncappendertest .
refactor escapeDatabaseObject methods to include additional parameters for Table and Index classes to enhance flexibility in escaping database objects with specific schema and object
added a boolean variable ` inputChanged ` to track if the input field has changed and updated the condition for material title validation to improve the handling
added a state change test for display state changes in ShadowDisplayTest . java and implemented state change logic in ShadowDisplay . java to ensure correct
[ geos - 6635 ] dispatcherservice should not throw an exception when invoke a direct invocation .
gwt 3.0 : add ` ` ^ x ' ' and ` ` ^ y ' ' for x and y key
updated SQL query construction in PgDatabaseMetaData . java to conditionally include pg _ depend and pg _ class dependencies based on server version to ensure
http : / / issues . apache . org / jira / browse / amq - 4358 - fix npe in queuechannel
updated method signature and variable names in FileUtils . java for clarity to improve code readability and maintainability by using more descriptive variable names
added support for handling Jenkins nodes in the remoteCollector initialization to improve monitoring capabilities for Jenkins nodes in the CollectorServer
replace direct attribute retrieval with a helper method for resolving placeholder attributes in HeadersBeanDefinitionParser . java to improve code readability and maintainability by
updated EOFException handling and logging messages in ProtobufLogReader . java to improve clarity of error messages and ensure accurate logging during end - of -
removed duplicate calls to destroyRegistries and destroyMetadataReports in DefaultApplicationDeployer and added shutdown logic in NacosRegistry to ensure proper
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAway classes to utilize a new method for writing status codes and update state management based on SPDY version to enhance
refactor AuditEvent initialization and JSON output formatting in AuditEventTests . java to improve readability and maintainability of the test code
added a check for FLOAT _ ROUNDING _ ERROR in the Interpolation class and modified the return statement to use 0 instead of a value to
change default folder to / defaults / in order to avoid path conflict .
refactor code to store the DX executable path in a variable before adding it to the builder to improve code readability and maintainability by
added assertions to verify equality of PointRangeQuery instances in TestPointQueries . java to ensure correctness of point comparison logic in PointRangeQuery
hbase - 26969 fix testhfilecleaner to work on window
updated file label display logic to conditionally display the file name based on the file transfer request ' s file size to ensure the download file name
do n ' t swallow exception in jedisclustercommand # execute ( )
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always for rowtimeminibatchassgineroperator
updated filter invocation decoration from RegExpBasedFilterInvocationDefinitionMap to PathBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor . java to ensure
added benchmarking methods and adjusted HashMap initialization in QMap benchmark classes to improve performance and maintainability of the benchmarking process
added a new HashMap instance named G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added a check for empty fields and refactored method handling in GroovyEngine . java to improve code readability and maintainability by reducing
fix for geotools . setdrawable ( false , false ) for angle
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ ALIVE configuration options in HiveConf . java and
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the purpose of the method for better
no effective change - remove unused import
replaced Joda - Time imports with a lambda expression for thread handling in RealtimeSegmentRelocator . java to improve code readability
vpc : do n ' t return the success value when start vpc
updated windowAlpha calculation to ensure progress is non - negative to prevent out - of - bounds errors when calculating window alpha
updated fatal error message to reference 4.0 schema instead of 3.2 to ensure compatibility with Spring Security versions 4.0
refactor multiple assertion and subject classes for consistency in naming conventions to improve code clarity and maintainability by standardizing naming conventions
added ' final ' modifier to several fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immut
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to include a method to
updated regex pattern in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage
replaced multiple instances of logger ' s debug and info methods with direct calls to LoggerFactory ' s debug and info methods to streamline logging
replaced ` updatePurgedShards ` and ` purge _ time ` methods with ` deletePurgedShards ` across multiple classes to standardize
added support for version 17 and version 17 - preview in JavaLanguageModule . java and updated LanguageVersionTest . java accordingly to ensure compatibility with
make fileappenderresiliencetest more robust by wait for compression job to finish
[ hotfix ] [ runtime ] remove unnecessary assertion in volatilereadnode
added a method to return an unmodifiable list of steps and formatted code for better readability to improve code clarity and maintainability by standardizing
removed redundant fromBase58 and toBase58 fields from TronJsonRpc . java and TronJsonRpcImpl . java to streamline
refactor currency pair creation to use a local variable for clarity to improve code readability and maintainability by reducing duplication
fix timing issue with longtasktimer and meterregistrycompatibilitykit
[ hotfix ] [ euphoria - core ] remove shaded dependency from euphoria - euphor
updated value handling in HostEditorActivity to use CharSequence and added ListPreference support to improve flexibility and support for multiple entry values in the preference
replace ` IncompatibleDatabaseHandler ` with ` DatabaseVersionHandler ` and update related method signatures to improve clarity and maintain consistency in naming con
added a constant for the maximum number of tweet contributions and updated the condition to check for it to ensure that the query does not exceed the
increase the refresh interval in AbstractCachedLDAPAuthorizationMapLegacyTest from 1 to 2000 to improve test reliability by allowing more time for the
added a test for persisting the persisted byte size of a fully acked tail page in the Queue to ensure that the tail page is properly
fix checkstyle issue in block / entity / state / glowserver . java ( # 4696 )
refactor the grow logic into a separate private method ` grow ` to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the submitted file name
added markReadForLoad ( ) method to LauncherFragment . java to mark the fragment as read for loading functionality
modified the ` main ` and ` instrumentJar ` methods to include ` ClassNotFoundException ` and handle ` NegativeArraySizeException ` to improve error handling
added a method ` checkForSpillPossibility ` to check for spill positioning in ` HashAggTemplate ` to ensure proper error handling
changed the variable declaration of ` dsName ` from ` info . info . info . getDocStoreSegment ( ) ` to ` dsName `
added a default name ID format constant and a default value in the supportedNameFormats list to ensure that the default name ID format is used when
add a redirect option to the ChangePasswordPage to handle password change aborted to improve user experience by providing a clear error message when the password change
removed an unnecessary semicolon in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file containing methods to check font size between MetalLookAndFeel and the system ' s look and
updated date filtering logic in RRD4jPersistenceService to validate begin and end dates to ensure that invalid dates do not exceed the current time
added a check to return early if numVectors is less than or equal to zero in GenericUDAFComputeStats . java to improve performance by
test : migrate executablereferencetest to junit 5 ( # 4368 )
added null checks for view and glassPane before setting them to null in JLayer . java and created a new test class bug699
camel - 14850 : added wiretap to support simple tap expression . added unit test for it .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ` TOPN ` in ` PlannerSettings ` and implemented its matching in ` PushLimitToTopN ` to enable
[ java ] remove unnecessary aerondirectoryname usage in agent test .
fixed - redistimeoutexception be throw by rbatch . executeasync and rbatch . setqueued ( ) method of rbatch .
refactor HiveConf to use a URL for configuration file handling instead of a byte array to improve flexibility and performance when initializing Hive configuration variables
updated the model creation to use the device from criteria instead of a default device to ensure compatibility with the specified device for model creation
updated the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper menu inflation and selection behavior for motor
updated the CertificateValidator class to improve certificate validation logic to enhance security and reliability of certificate validation
update homeDir initialization to use " hawtio . dirname " system property instead of hardcoding it to " . " to ensure the
added a check for empty comments and empty whitespace in the Space . java file to ensure that a single space is returned when there are no comments
made several fields volatile in multiple dictionary classes to ensure immutability and prevent potential memory leaks
removed printStackTrace ( ) method call from ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
split unit and integration test for customitemdroptest into its own module
added support for checking ifNotExists in partition handling in DDLTask and DDLSemanticAnalyzer classes to enable conditional execution of partitions based on the
fix a bug that could lead to data loss when read a large file .
[ hotfix ] remove unused controlrequeststreamid in service node
wfs 2.0 . 0 : add spatial operator support to wfs getcapabilities request
added import for LuceneTestCase and annotated with AwaitFix for a specific bug in BasicDistributedZkTest . java to address
added a condition to check for preface matching in Http11InputBuffer . java to ensure proper handling of preface parsing based on position and
[ java ] set cluster ingressexclusively false by default .
hbase - 20650 hbase . bucketcache . ioengine and hfile . block . cache . size should not be store in
added methods to track and update the running record count in JSONRecordReader . java to improve clarity and maintainability of record counting logic
added filtering logic to remove items from mergedItems based on year format to ensure only valid year formats are processed in the mergedItems list
updated drawing color in CacheableTextView , CellLayout , and HolographicOutlineHelper from a hex value of 0x00000000 to
added check for OpenGL ES 2.0 availability and managed state handling in Mesh . java to ensure compatibility with OpenGL ES 2.0
added imports for ActionContext and set context to null in BackgroundProcess . java to ensure proper context management during action execution
added support for prepending the default database name to table names in BaseSemanticAnalyzer and QBParseInfo classes to improve table name handling
added connection timeout configuration in TestConnections . java and changed the count variable in StubConnection . java to be final in StubConnection . java to
added multiple test cases for the ` approx _ percentile ` query with different parameters in ` TestHiveAggregationQueries . java ` to ensure that
updated the default idle timeout and write timeout values in WebSocketConstants and WebSocketChannel to improve flexibility in handling idle and write timeouts more effectively
updated the method to retrieve shared files using the user ' s platform account instead of the account object to ensure compatibility with the current user ' s
updated Inet6Address . java to use generics for type safety and improved null handling to enhance code robustness and prevent potential NullPointerExceptions
updated variable names and refactored button enabling / disabling methods in PlaybackControlView . java to improve code clarity and maintain
updated session handling in Session . java and Token . java to check for session ID instead of session object to ensure correct session ID is used for
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
make useexceptionprobability = ___ _ , not true by default
updated the placeholder color assignment logic in PredictedAppIcon . java to handle different themed icons to improve visual clarity by using a
refactor mysqluser . init ( ) to remove usage of userwithblobs .
added " centre " alias to the aliases list in Middle . java to support the center functionality in the application
added dependency injection for DirectUpload in CommonsApplicationComponent and made the DirectUpload class public to enhance dependency management and allow external access to the
added space to left and right axes in BarChartActivity and adjusted spacing in BarLineChartBase to improve layout consistency and prevent axis padding issues
added new variants of HasJavaAbi . CLASS _ ABI _ FLAVOR and HasJavaAbi . TARGET _ ABI
added operation event status handling in OnlineHubService and initialized services list in CompositeLogService to improve event processing and ensure proper initialization of services
added debug logging for parameter annotations and created a default visibility annotation if none is found to improve debugging output and ensure a default annotation is used when
( chore ) camel - jms : use @ setup and @ teardown instead of @ startbundle
refactor process creation to store classpath in a variable before use to improve readability and maintainability of the code
updated the ` documentLoader . load ` method to use a different file separator for resource loading to improve clarity and maintainability of resource loading
[ hotfix ] remove ' this ' reference from dataset . min ( ) and max ( ) .
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting in ` ShouldHaveMessage ` and added a test for escaping percent in ` ShouldHaveMessage _ create _ error _ message
fixed - jcache . close ( ) method throw npe if jcachemanager . geturi ( ) return null
change log level to info for already claimed exception to reduce log verbosity
added an empty block to the initialization of ALPNClientConnectionFactory in HTTP2Client . java to ensure that the ALPNClientConnectionFactory is properly
fix entitypropertiespacket to write base value instead of max value
fix sonos warn when speaker be not initialize
increased the timeout duration in the countDownLatch . await calls from 500 milliseconds to 5 seconds to allow more time for tests to complete
changed log level from info to debug for light type determination failure message to improve clarity of error messages for better debugging and understanding of
async - job manager : use a fixed thread pool for async - job execution and db . properties . add db . db . maxactive to
updated exception handling and error messages in ` Reporter ` , ` ReturnsSmartNulls ` , and ` ReturnsSmartNullsTest ` classes to improve cl
updated the method signature of ` generate ` to use ` DataFrame ` instead of ` Frame ` to ensure type safety and improve code clarity by
updated multiple package - info . java files for consistency in formatting to improve code readability and maintainability
added a check for non - empty column names in OrcPageSourceFactory and created a test for handling empty files in TestHiveFile
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine . java ` file to enhance the
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and modified test parameters in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to improve
simplified the condition for validating leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability by eliminating
fix nullpointerexception in stringtemplate # isvectormatrixmultiplication ( )
add $ $ and find to find ( ) and findall ( ) method in selenideelementproxy . java
fix e - ac3 channel count for audio output with no sample rate .
add getformula ( ) and setformula ( ) method to xssfname , and make xssfname final
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to allow for more
updated condition in SimpleTypeGT to check for zero length instead of one and added a new test for pattern schema in GMLParserTest to
added a new test class ` ClassPathXmlJobRegistryContextTests ` for testing job registration to ensure proper functionality of job registration in the job
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 : camel - restlet - shoulddeprecate restlet producer ( fixes # 12320 )
camel - 14836 : camel - log - should use log4j2 log4j2 and log4j2 log4j
renamed ` submitTraceEvent ` to ` writeChromeTraceMetadataEvent ` for clarity to improve code readability and maintainability by encaps
added a check for non - canceled , non - filled , and non - rejected order statuses before adding them to limitOrders to ensure that only
added pixel offset calculations and validation in LCMSImageLayout . java to ensure correct handling of image layout dimensions and improve error handling
[ java ] use ruby ' s timestamp api instead of java ' s built - in one .
added a check to return a resource if it does not exist in ContextHandler . java and created a corresponding test in WebAppContextTest . java
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
update scroll handling in JEditTextArea to differentiate between horizontal and vertical scenarios to improve accuracy in scrolling behavior based on user input
added null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure proper handling of guards and
test ( refactor ) : migrate sniperprettyprinterjavaprettyprinter to junit 5
replaced direct instantiation of ` URLOutputStream ` with a try - with - resources statement for better resource management to ensure ` URLOutputStream ` is
added Entity annotation to Mail class to enable entity - related functionality in the application
updated default values for " Defaults to false " and added a new command - line option " -- includeTablespace " to true to enable the
added getter methods for ` metaDataBuffer ` and ` valuesBuffer ` in ` CountersReader . java ` to provide access to these buffers for
added a flag to check for a read non - empty file in ScanBatch and implemented a corresponding test case in TestJsonReader to ensure proper
updated failure comparison logic to include internal custom name in failure messages to improve clarity of failure messages when custom names are not provided
added a regex pattern for matching library names and updated the conditional check in LibUtils . java to ensure correct handling of specific library names and improve
changed catch blocks from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages . java and PackageHelper . java
hbase - 15976 wait for filesystem to be safe before write to disk in master
enhanced error message in TracingTaskListener to include the class name and error message to improve clarity of error reporting for better debugging
remove plugin descriptor cache , we do n ' t need to clone it anymore
fix update contact status of jabber contact when their parent provider be connect .
fix javadoc error and remove unused method in resourcemethodtest
added a new integration test class for fetching account information from BTCE exchange to ensure proper functionality of account info fetching in the polling account service
added mouseWheel method to VDUInput and vt320 classes and updated mouse reporting logic in TerminalView to enhance mouse interaction functionality for better
update library path handling in Natives . java to improve clarity and maintainability of library path management
no longer use @ columnhstore , remove deprecate @ columnhstore
added player skin flags to metadata in GlowPlayer . java and updated related tests in MetadataIndexTest . java to enhance player metadata management
update load balancer with service test to use http and https
fix nullpointerexception when get a non - existent member from eventdata
replaced direct system property retrieval with privileged access for retrieving the operating system version to enhance security by restricting access to the OS version property
updated the file suffix handling in TemplateEngineFreemarker to use a configurable property instead of a hardcoded value to improve flexibility
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback to hide the HDragger panel and made dockParent final to improve code clarity and prevent potential null pointer exceptions
use easy bind . when ( hascaret ) instead of bindconditionally ( # 4248 )
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize CxxBuckConfig for
replaced SimpleParameterAccessor with ParameterAccessor in multiple files to improve clarity and consistency in parameter handling
added a null check for passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is not provided
added array creation logic for array types in DataUtilities and created corresponding unit tests in DataUtilitiesTest to ensure correct handling of default values for byte
updated SSL engine logic to handle null addresses and use the host name based on client authentication settings to ensure correct host name is used based on client
tweak testfstabledescriptors to use asserttrue instead of assertequals
danielwagnerhall : delete cookie by name instead of by url .
added a new boolean variable ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` to
added UTF - 8 meta charset to HTML head and title tags in HTMLListWriter and HTMLWriter to ensure proper handling of special characters in HTML
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator handling in multiple classes
added a new class ` bug6337518 ` that extends ` BasicComboBoxUI ` to demonstrate bug 6337518
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future development
refactor UserInfoActivity to improve code readability to enhance maintainability and ease of future updates
added imports for HomeContentProvider and updated broadcasting method calls in multiple services to ensure proper notification of content changes for the HomeContentProvider
added handling for pressed and focused background state in BubbleTextView and Launcher classes to improve UI responsiveness based on user input and
updated ` getFallbackResponse ` method signatures to include an additional ` Throwable ` parameter across multiple classes to enhance error handling by providing a more specific
removed the condition checking if ` env . _ compile _ only ` is true in the ` DumpBytecode . java ` file to simplify the
added null checks for tags before retrieving tags in ChannelUri . java to avoid potential NullPointerExceptions when tags are not initialized
updated JAVA _ REGEX _ SPECIALS string and modified test method name from MUltipleMatchers to MultipleMatchers in TestSqlPatterns . java
added functionality to save and retrieve the action bar title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar
updated the method call from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser .
updated the schedule time from " * " to " 0 " in CleaningService . java to allow for a starting time of the clean service
updated TransactionalValidationListener to handle partitioned tables and improved path retrieval methods to enhance table structure validation and enhance error handling for partitioned tables
added a polling feature in the ReplicationHandler and SnapPuller classes to enable polling functionality for improved performance
changed the data type of generatedKey from int to long and updated SQL statement handling to improve key generation and ensure correct SQL execution with auto -
updated variable name from ' proxy ' to ' _ rc ' for clarity to improve code readability and maintainability
update inlining reasons to include ' failed to inline ' to improve error reporting for clarity
updated keep - alive timeout values and logging behavior in WebClientFactoryImpl . java to increase default keep - alive timeouts and improve logging clarity
deleted the HttpTestAccount001 . java file to the test class is no longer needed in the project
changed exception handling from Exception to Throwable in Dispatcher . java and refactored tests in DispatcherTest . java to improve error handling clarity and
camel - 16400 : camel - cxf - fix the issue of defaultcxfbinding do n ' t work with cxf message
added a case for the ' ~ ' character in ClientUtils . java to support additional character ' ~ ' in user input handling
camel - slack : use java . time . duration for delay in camel - slack
use fireblockharvesting instead of block . getblockdropped ( ) in blockutil . getblockdropped ( ) .
increased the layout size from 4 * pref to 5 * pref in FormLayout and modified the label formatting for encodedAudioPassthrough
added a new file ` bug8057791 . java ` to demonstrate the use of Nimbus Look and Feel
updated flag assignments in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and maintainability of
if engine api be not available , do n ' t subscribe to eth
changed the condition from checking if ' to . length ( ) > 0 ' to checking if ' to ' is not null before proceeding to
modify ParquetFixedWidthDictionaryReaders to conditionally read values based on the using of a dictionary to improve flexibility in reading values based on
updated layout handling logic in PortraitPagedViewHandler to use landscape and adjusted divider height calculations to improve layout responsiveness based
added a new ` @ Log ` annotation and ` @ LogInterceptor ` class for logging to facilitate logging before and after proceeding
modified the string concatenation in the QueuedThreadPool class to include a placeholder for trace length to improve clarity of thread dump output by providing more
updated CacheGenerator and CacheProvider to include an implementation parameter and modified related method calls to enhance flexibility in handling different cache implementations
updated the parameters of the createReferenceMap method in FrameMap . java to include totalFrameSize to ensure accurate tracking of the total frame size
updated the TypesafeConfigurator class implementation to improve performance and maintainability of the code
( chore ) camel - graphql : add karaf feature for camel - itest - karaf
removed the main method from RFE2891944 and added multiple bug methods for testing to improve code readability and facilitate
removed URL encoding for keys and values in HttpClientIntroductionAdvice . java to simplify code by directly appending keys and values instead of
replaced the implementation of ` unsupportedPlatformTool ` with a new ` UnsupportedPlatformTool ` class to improve code clarity and maintainability by
updated loopCount type from double to int and adjusted logging duration based on starting recovery delay to improve type handling and enhance logging clarity for retries
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
( chore ) camel - addressmanagertest - make sure address manager do n ' t have a random index
updated column specifications and row specifications in VLCVideo . java for improved layout consistency to enhance user interface clarity and maintainability of the
replace instances of bisq with bitsquare in multiple files to ensure compatibility with the latest version of bitsquare
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory path and refactored file parsing logic in MBoot . java and MavenCli . java to improve clarity and ensure
added binding of a buffer using GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure the buffer handles are properly managed
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future updates
added a JUnit 5 @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable the test due to configuration issues
added support for default HTTP headers in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing customizable default headers
improve error message for user password validation
deleted the NoOpConfigPathGetter . java file to remove unused code that is no longer needed in the project
replaced codec . base16Decode with Bytes . fromHexString in EngineAuthService . java to improve key processing efficiency by using a more efficient
updated FloatUtil . java to use CSSName for floating - point properties and adjusted inline block positioning based on CSS properties to improve flexibility
jbrules - 2309 : update optaplanner - core to v3.20 . 1 ( # 1309 )
refactor RestUtils to utilize MultiMap for default headers instead of CaseInsensitiveHeaders to improve header handling by allowing for more flexible header
http : / / issues . apache . org / jira / browse / amq - 4892 - use charset instead of string for
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` Long . valueOf ( ) . compareTo ( ) ` with ` Long . compare ( ) ` for comparison operations in ` Expandable
changed logging level from error to debug for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging performance by reducing unnecessary
updated import statements in LegacyAuthenticationHandlerAdapter . java to reflect the new package structure to improve clarity and maintainability of the code by using
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check for the owner key of the filter before removing it from the network to ensure that only valid filters are removed from the network ,
add bcpginputstream . wrap ( inputstream ) and move to bcpginputstream . wrap ( inputstream )
modified the data output stream initialization to use a buffered output stream to improve resource management and ensure proper closure of the output stream
added a new test method ` testSelectAllFromView ` and refactored column index handling in ` HiveBaseResultSet ` to improve test
updated FocusTransitionTest . java file to improve test coverage for focus transitions
[ web ] use guava instead of gwt project
added a condition to check if ` sourceTask ` is an instance of ` MapRedTask ` before creating a ` JobClient ` instance to
updated the assignment of the readListener variable in HttpInput . java to ensure that the readListener is not null to prevent potential NullPointerExceptions
refactor color setting logic in AppearancePanel . java to utilize a ChangeListener for color selection events to improve the handling of color changes
updated constructor parameters in TaskHelper to use ' hidden ' flag instead of ' false ' to ensure proper handling of the ' hidden ' flag in
resolve http : / / issues . apache . org / activemq / browse / amq - 2181 - fix failovertimeouttest
pdfbox - 4892 : fix file lock leak in ccittg3 . tif and ccittg3n .
updated import statements in BoundSql , SqlSource , and LanguageDriver classes to utilize DefaultParameterHandler to enhance code clarity and maintainability
lsra spill optimization : do n ' t set spill state to storeatdefinition if loop depth be less than or equal to sp
[ java ] add test to make sure groovy can not compile script block .
fix : pgresultset . closeoncompletion ( ) be call twice . patch by jbellis
set default value of ` serviceAdvisorType ` to ` ServiceAdvisorType . PYTHON ` to ensure proper initialization of ` ServiceAdvisorType `
replaced the static ` ResolvingDecoder ` with a thread - local ` ResolvingDecoder ` in ` GenericDatumReader . java ` to
changed the parameter type from Collection to List in the Path constructor and updated return statements in PdfContentStreamProcessor , PdfCleanUpContentOperator ,
replaced direct byte array creation with a utility method for generating random bytes in SendCoinShieldTest . java to improve code readability and
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation based on date and locale to enhance
removed redundant code in CodeGenerator . java to streamline the code for better readability and maintainability
removed the ' percent ' parameter from the scroll method across multiple classes to simplify the code by eliminating unnecessary parameters
changed the access modifier of the pointer variable from private to public and added reset and resetTo methods to allow external access to the pointer for better
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` and update references accordingly to improve clarity and maintain consistency in naming con
simplified cast expression by removing unnecessary imports and adding a conditional check for INT type to improve code clarity and maintainability by elimin
replaced the use of ArrayList with a boolean flag for handling accepted media types to improve code clarity and maintainability by simplifying the logic
added a new boolean variable ` false ` with a value of ` false ` in ` TaskView . java ` to control the behavior of the
added ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and modified ` CreateTableChange ` to include it in `
set the default value of the ` errorText ` variable to ` " Command failed due to Internal Server Error " to provide a clearer error
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize new utility methods and added JVM options to enhance performance testing
replaced ` add ` method calls with ` push ` method for ` toSimulate ` in ` BasicEventSimulationEngine . java ` to
added support for AJP connector configuration in GitBlitServer . java and updated Build . java to download Jetty AJP files to enhance
added type coercion for intersection components in ` TransTypes . java ` and created a new class ` Intersection03 . java ` to
rename the class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
refactor toolkit thread initialization to use a native method to improve performance by avoiding unnecessary thread creation
add -- localizationcompressioninparallel to compress the bundle in parallel .
set papplet . hidesurface ( ) on window to hide surface
updated the temporary file path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added configuration options for enabling fullNode and solidityNode HTTP services to enable or disable HTTP requests based on configuration settings
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and updated related methods in ` GoogleCloudFirestoreTicketRegistry `
rename Generate . java files to improve clarity to enhance code readability and maintainability
fix json _ format ( ) return null for java / json null
updated BadgeRenderer to use a constant for DOTS _ ONLY and adjusted width calculation based on its value to improve code readability and maintain
changed the method modifier of getConfiguration from final to non - final in FreemarkerManager . java to allow for subclassing of the
added a test for handling invalid excluded package names in OgnlUtil to ensure proper configuration exception handling for invalid package names
refactor device Udid assignment in AppleTest . java and add support for macOS in IdbRunTestsStep . java to improve
replaced error logging with warning logging and updated response handling in DefaultHttpClientFilter . java and TestDefaultHttpClientFilter . java to improve error handling
added null checks and execution logic for mScript in AllAppsView . java to improve code robustness and prevent potential null pointer exceptions
added a new boolean flag ` TEXT _ BURN ` and modified the conditional check for ` lineCount ` to include it to enhance text sty
added teardown methods for dropping tables and views in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and cleanup after tests are
added a line to retrieve a parser from the registry using a specified name to improve flexibility in handling multiple parsers
added a new test method ` fastpath ` in ` BoundedLocalCacheTest ` and modified the condition in ` BoundedLocalCache ` to
updated ` RawConnection ` interface to extend ` WebSocketConnection ` and modified ` WebSocketAsyncConnection ` to implement a new ` flush ` method to
added multiple test cases for various assertions in SoftAssertionsPerfTest . java to ensure correctness of assertions in the performance testing framework
added a constant for test failure exit code and modified the execute method in PythonRunTestsStep to handle it to ensure that the Python test execution
updated the handling of the xAdvances array in GlyphLayout . java to include a conditional check for markupEnabled to ensure proper positioning of
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and performance to enhance code maintainability and
updated the method call from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure
replaced conditional flush call with direct call to player . flush ( ) to simplify code by eliminating unnecessary type casting
added a check to prevent multiple invocations of ` Launcher . java ` and ` LauncherAnimUtils . java ` to improve performance by avoid
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code readability and maintainability
updated import statements and added a condition to check for NOT _ APPLICABLE in ReplicaAssigner . java to improve code clarity and ensure
updated the default return value of the method to true for the MEDIAPARSERV2 boolean to enable the detection of the media info parser
add support for @ interceptedmethod ( @ aop ) in @ beandefinition and @ interceptedmethod ( @ aop )
added assertions and verification for the ` TRUNCATE TABLE ` operation in ` FolderPermissionBase . java ` to ensure that the ` TRUN
added a boolean parameter to handleProviderRegistered and modified the publishStatusInternal method to handle provider registration state changes to improve handling of provider registration state
updated the color calculation in PastelColor . java to use a fixed value of 180 to improve randomness by using a uniform color base
updated the implementation of ScriptEngineFactory to improve performance and maintainability of the script engine
updated the handling of bitmaps in HolographicViewHelper to use a new method for creating original and outline bitmaps to improve code
refactor HTTP method handling in CloudClient to improve clarity and error handling to enhance code readability and maintainability by reducing redundancy
fix a bug in multiterminikpreprocessor that lead to unigramtokenization exception
removed the import statement for IOException in IOChannelUtilsTest . java to streamline the code by eliminating unnecessary dependencies
added conditional logic to determine the output format class if the class name is a specific Hive pass - through class to ensure proper class loading based on
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code readability and maintainability
added a check for negative lengths in the DOMBuilder class to ensure that the length does not exceed the expected array ' s length to prevent potential
modified conditional logic for determining the visibility of the hgraph in ClusteringCoefficient . java and updated edge retrieval methods in EigenvectorC
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` containing a class and interface with static and default methods to demonstrate
camel - 16850 : camel - core - allow to configure the camel context for the default key selector . thanks to david
replaced instances of ` Throwable ` with ` ThreadDeath ` and simplified exception handling in ` LogResolverBean ` and ` ResourceResolverBean
refactor multiple key and trust manager classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and sorted jars
refactor client key assignment logic in HttpClientIntroductionAdvice . java to improve clarity to enhance code readability and maintainability
int - 1186 add support for ' transformer ' in the ' config ' section .
updated constant names and conditions related to the BACK _ FACTOR and REWIND _ TIME in ResumeObj . java to improve clarity and
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and ` JavaSEPort ` , and
updated usage formatting in UtilityCommands . java and removed redundant permissions check in DocumentationPrinter . java to improve clarity of command usage and streamline
corrected a typo in the attribute name from " collection . map " to " collections . map " to ensure consistency and clarity in
removed setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated size retrieval in RewriteCrossSpaceCompactionSelector to
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
do n ' t synchronize ruleset when update the project property
fix a race condition in abstractsootfieldref . checkfieldaccess by synchronize on the class instead of the class itself
use custom name convention in elastic meter registry ( fixes # 469 )
added new methods and imports to IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to improve
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering behavior for huge horizontal rules
replaced instances of ` System . out . println ` with ` TTY . println ` in ` TypeSystemTest . java ` and `
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
change condition from checking if frameLength is equal to zero to checking if frameLength is less than or equal to zero to ensure that frameLength
updated return statements in IntFloatMap . java and IntIntMap . java to replace zeroValue with value and defaultValue to improve clarity and
refactor ImageDownloadService to use Runnable for setting icon and style updates to ensure UI updates occur on the UI thread for better responsiveness
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when registered is null
[ ieee ] remove hasnextSibling ( ) method from the node interface .
fixed - npe be throw by redisdistributedmapcacheclientservice . checkdistributedmapcacheservice . checkdistributed
updated logging messages in MobFileCache . java to improve clarity of cache initialization and eviction settings to enhance debugging capabilities by providing clearer
rename ColConvCCMTest . java file to improve clarity and consistency in naming conventions
replaced instance variables with local variables for ` allowCovariantReturns ` and ` syntheticNameChar ` to improve code clarity and maintainability
pdfbox - 4892 : improve generic , a suggest by valerybokov
updated JSON serialization method to use ` asString ( ) ` instead of ` asFloat ( ) ` and added a new class ` X ` with
added a return statement to the GenericFileConsumer class to improve code readability by avoiding unnecessary method calls
added an invocation to EventQueue . invokeLater in bug6638195 . java to ensure the Runnable is executed on the Event Dispatch Thread
updated maxSize calculation to use getMaxBinaryMessageSize ( ) instead of getMaxBinaryMessageBufferSize ( ) to ensure the maximum size does not exceed the
updated steeringValue calculations from ` + = - . 5f ` to ` - . 5f ` in multiple test files to correct
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve code readability and maintainability by using a standard
replaced ` Date ` and ` Timestamp ` with ` LocalDate ` and ` LocalDateTime ` for better handling of date and timestamp values to improve accuracy
update version from 2 to 3 and modify metadata handling in ParseData . java to ensure compatibility with version 3 and improve data writing efficiency
refactor FlywayAutoConfiguration and FlywayAutoConfigurationTests to introduce a custom Flyway dependency configuration to enhance flexibility
added a sorted list to the ClassesImpl class to ensure the classes are sorted before processing
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class implementation to improve code readability and maintainability
refactor memory and resource scope handling in TestCloseScope0 . java to support both MemoryScope and ResourceScopeImpl classes to improve compatibility with
updated test parameters from 500 to 5000 in AdaptServerSocket . java to increase test coverage for server socket functionality
updated CaptchaChannelProcessorTests . java file to improve test coverage for Captcha functionality
added logic to update the owning collection of an item based on a change condition to ensure that the item ' s owning collection is updated correctly when
added retry mechanism for saving registry cache properties in AbstractRegistry . java to improve robustness by preventing retries when saving properties fails
updated the parameter name from ' mergeDirectory ' to ' directory ' in TrackingDirectoryWrapper instantiation to ensure the correct directory is used for tracking
implement rfe 1561478 - unusedimports no long report false positive on jdk 1.5
added validation in HiveIcebergStorageHandler to prevent insert overwrite queries on bucketed tables to ensure that insert overwrite queries are not performed on
updated assertions in BootstrapTests to check for the presence of a legacy SAML key in the default zone to ensure correct validation of SAML configuration for legacy
updated method names and conditions to include non - static variables in the Excluder class to improve clarity and functionality of anonymous or local
refactored the ` getAddressVector ` method to use a local variable ` addressees ` instead of a local variable ` theAddressie
added constants WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE
lucene - 1770 : fix lock . release ( ) to throw an ioexception if the path can not be delete
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure
added a conditional check for unary operators in SpelExpressionTransformer and updated return statements in various classes to improve logic flow and enhance clarity in
added TypeValidation to the ByteBuddy initialization to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` ElementScanner8 ` and added a new ` ErroneousAnnotations ` class
make lockmodepessimisticreadwriteintegrationtest more resilient to concurrent issue
simplify the ` setSystemProperties ` method by removing the ` logFile ` parameter and ensuring ` logFile ` is not null before applying system
refactored the ` request ` method to accept a ` HttpURLConnection ` for redirection status code and added a method to check for redirect status codes
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants . java and modified MicroserviceFactory . java
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
changed DB _ PATH _ REGEX to static and updated DB _ PREFIX usage in BaseAndroidTestCase . java and GeocodeHelperTest . java
updated return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread counts for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool
added a limit parameter to the ` getAllOrder ` method in ` MarketOrderIdListCapsule ` and updated related logic in ` Wallet `
added null check for the user before retrieving UserSettings to avoid potential NullPointerExceptions when retrieving user settings
updated the file handling in LocalFileSystem to use getAbsoluteFile ( ) and added a new test for matching relative wildcard paths in LocalFileSystemTest to
added maximum width and height limits for component bounds in ComponentBuilders . java to ensure that the component ' s bounds do not exceed a defined maximum
added logging functionality and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer . java ` to improve code clarity and
removed unused ExceptionHandler import and error handling for document creation to streamline error handling and improve code clarity
refactor filename handling in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and ensure
added number and separator checks in SpellChecker . java and a corresponding test in SpellCheckerTest . java to enhance spell checking functionality for
updated the message constant formatting in HelloWorld . java to improve code readability and maintain consistency
refactor file action handling in FileDisplayActivity to use a dedicated method for retrieving OCFileListFragment to improve code readability and maintainability
added a daemon mode to the ReplicationHandler and wrapped the logReplicationTimeAndConfFiles call in a try - catch block in SnapPull
updated method call syntax in StoreCachedTest . java to improve code readability and maintain consistency
updated the constructor parameter name from ' materials ' to ' theMaterials ' and added logic to remove all MaterialColumnParser instances from the file
updated dependencies in DependencyBank . java for consistency and clarity to improve code readability and maintainability by standardizing dependencies
added maximum recycled views for various item types in the RecyclerView ' s pool to improve user experience by limiting recycled views
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to verify that building binaries
improve chat message when no world be available for a player ' s mining .
added imports for ` ParsedNode ` , ` ParsedNodeException ` , and ` ResourceAccessor ` in ` CreateProcedureChange . java ` to
added null handling checks and new tests for range and equal filtering in FilterOperatorUtils and NullHandlingEnabledQueriesTest to enhance filtering functionality and ensure
added validation checks for bootstrap method signature and argument sizes in JDynamicInvokeExpr . java to ensure proper handling of bootstrap method signatures and argument types
update localhost in jms test from localhost : 9000 to localhost : 9000
removed the clear method call from runtimeOptions in CucumberInstrumentation . java to streamline code by eliminating unnecessary calls
changed the type of contacts from List < RegisteredServiceContact > to List < DefaultRegisteredServiceContact > and updated return statements to ensure type safety
added a condition to hide workspace labels based on cell padding in DeviceProfile . java to ensure workspace labels are only displayed when they are below the
updated assertions in ReplicationFactorTest to use a unified method ` assertRf ` for better readability to improve code clarity and maintainability
sulong : allow context to be initialize during context pre - initialization .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf with Integer . parseInt for value parsing in VisualScoreTagTest . java to improve performance by avoiding unnecessary boxing
updated error messages for clarity and changed file tree walking limits to improve debugging and ensure proper handling of file operations
refactor segment name checks to use a dedicated method ` isLowLevelConsumerSegmentName ` to improve code readability and maintainability by central
added startActivity and startActivityForResult methods to ShadowFragment and corresponding tests in FragmentTest to ensure proper handling of activity startings and verify
replace ` DateTime . now ( ) ` with ` new DateTime ( clockReader . getCurrentTime ( ) ) ` in ` DueDateBusiness
updated the return statement in TargetCpuType . java to include " x86 _ 64 - none - linux - android " to specify the architecture
added deleteAllFiles method to FileDataStorageManager and implemented account file deletion in ManageAccountsActivity to improve file management by allowing deletion of files
updated the command - line help option in SchemaCrawlerCommandLine . java from " - ? " to " - h " to clarify the
added a static method to create a suite description with an unique ID and updated the constructor accordingly to enhance the flexibility of suite identification by allowing
replaced the decoding method with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code and improve
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and improve code clarity
[ gwc ] make gwczoomcontextfinder # getrange tolerant to start / end
added dependency tracking configuration to JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enable tracking of dependencies during script execution
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
only add new keyspace if they do n ' t already exist
refactor WelcomeWindow to use a caching mechanism for image handling and improve rendering performance to enhance performance by reducing unnecessary background image updates and
updated tuner configuration handling and modified buffer resubmission logic in RTL2832TunerController . java to improve code clarity and
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enable testing of sh binary
added a condition to set the includeString variable to " db : hsqldb " to ensure compatibility with the HSQLDB database configuration
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t display materialize host exception when there be no host stack
refactor service loading and export mechanism in graalservices . java to improve code readability and maintainability by reducing redundancy
add test for duplicate command handler resolution in aggregateannotationcommandhandler
[ flink - 20865 ] [ network ] add support for fine - grained shuffle mode
fix entityfishhook not respect the fish ' s fish material . close # 1193
camel - 16850 - camel - ftp , camel - ftp , camel - test - infra - aws2 - sftp , camel -
changed variable and method names from ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename boolean variable ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to improve clarity
added a check for empty items in AppsContainerRecyclerView to prevent processing when no items are available
added conditional annotation to ensure REPORTER _ BEAN _ NAME is not present in ZipkinAutoConfiguration to improve configuration flexibility by
log4j2 - 1349 add support for mdc property map in xmllayout
added support for an " omitHeader " parameter in multiple classes to enable handling of response headers based on request and response settings
updated EscherProperty method to use getPropertyNumber ( ) instead of _ id and added a new test class TestEscherProperty to ensure proper
replaced direct calls to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code clarity and maintain
add a call to modifyhierarchy ( ) when the method be remove from the scene .
avoid npe on null dispute to test if try to replay
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified methods in ` DatabaseSchemaCrawler ` and ` TableRetriever
wallet : set ` transaction . getconfidence ( ) . confidencetype ` to ` ` not _ rely _ in _ chain ' ' ( #
refactor handling of body and header annotations in HttpClientIntroductionAdvice . java to improve clarity and ensure correct header name is
[ craftinghelper ] add condition support to json file .
hbase - 15921 hregion . close ( ) should log a warning if it fail to open a region
refactor credential comparison logic to improve null checks and length comparison to enhance code readability and maintainability by reducing redundancy
[ java ] do n ' t call hasimage on a subscription that do n ' t have an image .
updated the ` destroy ( ) ` method in ` TestJvmProcess . java ` to directly invoke ` destroyForcibly ( ) ` and
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database operations
camel - 15663 : camel - mail : only try to connect to the mail store if it be n ' t already connect
added logic to validate that the last token in the document is not consumed by the stop token in the parser to ensure that the parser does not
camel - 14850 - aws - translate : list all the available language in the enum - start with ` ` ka ' ' and `
added a method to retrieve the data file name in the Model class and updated Voice . java to use this method to improve code clarity and
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition to enable setting and retrieving the email domain for identity
added read and connect timeout configuration methods to Configuration . java and updated ViewRegistry . java to use these timeouts to improve configuration flexibility and provide
do n ' t run processdeferredconcepts if there be nothing to save
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests to enhance test coverage for Redis service registry functionality
updated test annotations and method parameters in FindDeprecatedMethodsTest . java and FindDeprecatedUses . java to use ParameterizedTest and improved null and
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the WaterfallPanel
removed unnecessary import statements from multiple Java files to improve code clarity and maintainability by eliminating unused dependencies
updated event signature handling in ContractEventTriggerCapsule and LogEventWrapper classes , and added a new method to improve event signature representation to enhance
updated filter logic to include an underscore in the session name to ensure the file name does not contain the session ID to avoid conflicts with existing session
replaced ` clearRect ` with ` fillRect ` and set the background color in ` MapView . java ` to improve rendering quality by
improve rule compilation error when invoker be not find
removed unnecessary print statements and improved code formatting in several Java files to enhance readability and maintainability of the graph processing logic
added a condition to check if score is NaN before asserting the expected value in TestFieldCacheSort . java to ensure that the test only
replaced a direct assignment of entity keys with a method that copies keys from the device profile to improve code clarity and maintainability by using
added functionality to handle zero - time strings in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper
replace ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` taker
updated FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector to use wildcard
[ drools - 5605 ] fix session configuration for pseudo kiesessions ( # 2698 )
updated the instantiation of HiveMetaStoreClient to use the current instance of HiveMetaStoreClient to ensure the correct configuration is used for HiveMeta
added a conditional check to return early if the modalness equals the current modalness to optimize performance by avoiding unnecessary processing when the modalness
added a test for CodecCapabilities creation from profile level in ShadowMediaCodecListTest . java and implemented native global settings method in ShadowMediaCodec
[ # 5460 ] request focus on confirm button when enter key ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in X11SurfaceDataProxy and XRPMBlit
updated the thousands separator from a period to a non - breaking space in the FormatData _ uk . java file to ensure proper formatting of
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] _ loops ` and modified related logic in ` AsyncStressTest .
added beta flavor handling and visibility logic in AchievementsFragment and LeaderboardFragment to improve user experience by displaying specific messages when beta flav
updated SearchMethodVisitor to include access , name , and description from context in Search . java to improve code clarity and maintainability by using
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and handled InterruptedException in addition to SQLException to improve test reliability by ensuring proper
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
[ resequence ] remove the ` ` required ' ' attribute from the < resequence / > and < stream - config / >
refactored transaction management by introducing a ` txnAcquired ` flag and refactored related methods in ` TableReader ` to improve
use ssl . keymanager . algorithm instead of hardcoded keymanager - type
refactor ` getSingleSourceApplicableTest ` to use ` Applicability . or ` for using a list of ` UsesType ` to improve
fix ` ` tab ' ' do n ' t work correctly if repeat be set to false
replace ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to improve clarity and consistency in naming con
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for better clarity to improve code readability and maintainability
updated ` stripes ` and ` stripeStats ` assignment logic in ` OrcInputFormat . java ` to ensure accurate retrieval of stripe statistics
added a null check for the exception before proceeding to avoid potential NullPointerExceptions during execution
update myhentaicomics ripper to use https instead of http
added command - line argument handling and version option in the App . java file to enable users to show the current jar version when no arguments are
fix export list by use splittokens ( ) instead of split ( )
added support for default rotation settings in ConsoleActivity and improved input connection handling in TerminalView to enhance user experience by allowing dynamic selection of rotation
changed the type of ` hq ` from a generic ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc >
added a null check for the ownerConnectionAddress in ClientSmartListenerService to avoid potential NullPointerExceptions when ownerConnectionAddress is null
camel - 16462 : camel - jbang - add option to jolokia to obtain the class name of the headersmapfactory for
updated closing brace formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
add support for ' outbound - gateway ' to ' jmsoutboundgateway ' in spring - boot ' s config
updated the index used in the expect function call from ` i + 1 ` to ` i + 2 ` to ensure the correct index is used
updated class loader initialization and added error logging for script engine addition in AbstractScriptProcessor . java ; changed variable visibility in InvokeScriptedProcessor .
added support for PGStatement proxy in PooledConnectionImpl and created a test for it in ConnectionPoolTest to enhance proxy functionality for PGStatement
refresh size estimate after each test . patch by jbellis ; review by jbellis
change log level from error to warn for no more memory fragment limit message to improve error reporting for better debugging
do n ' t sort candidate when calculate min timestamp for aggressive ttl expiration
fixed - rblockingqueue . pollfirst ( ) and rblockingdeque . polllastasync ( ) method do n ' t return 0
removed unnecessary string formatting for job output in JobInspectCommand . java to improve code readability and maintainability by reducing redundancy
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
refactor the return statement in ChildHolder . java to use entrySet ( ) for sorting to improve code readability and maintainability by using a
simplify acl client by use sessioncredentials
changed condition from ` numIndexDims ` to ` numDataDims ` in BKDWriter . java to ensure correct handling of data dimensions
replaced printStackTrace ( ) with a warning log statement and added a null check for interpreterGroup to improve error handling and prevent potential null pointer exceptions
fix a bug in expressionnodeevaluator where the variable name be not the variable name .
removed the public access modifier from the methods ` verifyIdsAreStable ` and ` getNodeId ` in ` NodeIdAccessor . java ` to
server : improve error message when fail to attach volume to vm during snapshot policy
removed the ` public ` access modifier from several ` write ` , ` flush ` , and ` clear ` methods in ` ItemWriter . java
updated the string parameter in the Mock Thing initialization from an empty string to a specific test identifier to provide a more descriptive identifier for testing purposes
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient RAM directory implementation
added a static variable ` mLineHeight ` and modified its assignment based on the height of ` mDrawTextRectBuffer ` to ensure the
refactor WalletAppKit class to improve code structure to enhance maintainability and readability of the code
bugfix # 217171 - remove hat . js and nashorn . js from oqlengineimpl . getinitstream
remove a checkbox menu item from the button group in the chat transport selector box to improve code clarity and maintainability by reducing redundancy
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
refactor bsqblock explorer handling to use Optional for better null safety to enhance code robustness by preventing potential null pointer exceptions
added methods to manage and retrieve session attributes in StandardSession and Session classes to enhance session management capabilities by allowing dynamic management of session attributes
added assertions to verify the presence and presence of a plain bean in the TestDbJson _ List class to ensure the correctness of the JSON
updated the initialization of the ' averages ' array to use ' initialPageCount ' instead of ' pageSize ' to ensure the correct size is
[ hotfix ] [ doc ] fix typo in batchcommandlinelauncher
added datasource and transaction manager beans in BatchMetricsApplication . java to enable support for HSQLDB in the application
change glowrootloghttpservice to implement httpservice instead of unauthenticatedhttpservice
updated the ` drawImage ` method to use ` getNonStrokeJavaComposite ( ) ` instead of ` getCurrentClippingPath ( ) ` to ensure
removed synchronization from the close method in DocumentsWriter and added synchronization for segment refresh in DocumentsWriterPerThread to improve thread safety and ensure
added methods to retrieve and set properties for multiple choice options and validation constraints in UiBinding . java to enhance the functionality of the UiBinding class
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency across multiple classes to improve code clarity and
test plan : only update the stored copy of the tree when save the whole tree
refactored dictionary and dictionary to use a map of pattern to improve performance and reduce memory usage
replaced explicit generic types with the diamond operator for lists in KrakenAdaptersTest . java to improve code readability and maintain
removed the import of CharTermAttribute and its associated variable from DefaultIndexingChain . java to streamline code by eliminating unused imports
updated the implementation of NBJavacTrees . java to improve performance and maintainability of the code
removed unsupported encoding check in VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary error handling
added import for MarkerFactory and modified logging logic in HttpSolrCall . java to enhance logging clarity and improve code readability
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy resources
improve performance of defaultentityqueryrepository . getlvlfilter ( ) and add test
updated error message handling in HubChangeExecListener to provide clearer feedback when a changelog is not registered with the Hub
[ zxing ] add try harder to the blackbox test case .
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` to improve code clarity and maintainability
replaced the initialization of ` maxEvents ` and modified the iteration logic in ` ObjectStore . java ` to ensure ` maxEvents ` is
simplify the validation check in ` ValidatedLocalValidatorFactoryBean ` by consolidating constraint checks into a single return statement to improve code
refactor the handling of temporary block entities to use a list for clarity to improve code readability and maintainability by reducing redundancy
removed unnecessary type checks in IntrinsifyArrayCopyPhase . java to simplify code logic for better readability and maintainability
try to fix the test failure of testcoyoteadapter
replaced the ` WantedAnywhereAfterFollowingInteraction ` exception with a more descriptive ` WantedAnywhereAfterFollow
added validation checks for account and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator to
change scriptlauncher to sort command by name , not by default .
chore : [ cloud - platform - bazel ] update go _ package to match open source code
changed the method name from ` addProperty ` to ` setProperty ` in ` BaseSingleTreeBuilder . java ` to improve code readability and maintain consistency
updated AsmLoader instantiation to accept a ClassLoader parameter to ensure proper class loading with the correct interface class loader
pdfbox - 4892 : improve robustness of rlineto and rrcurveto , a suggest by valerybok
updated the namespace declaration logic in Java2TypeScriptTranslator to conditionally declare the namespace based on the definition scope to improve clarity of the
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` and added a request handling mechanism to ensure that
removed the ` new String [ ] ` array from the ` addListener ` method calls in ` HelloInput . java ` to simplify the code by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : abstract
updated package declaration for ReadFolderTest and RenameFileTest classes to improve code clarity and maintain consistency in naming conventions
refactor BufferedImage handling and filter logic in AwtCanvas . java to improve performance and clarity of image processing based on source type to enhance
fix native image location qualifier not be set on graal runtime .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from usestimersinpardo test
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 119 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility with serialization versions
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log a warning if the max size configuration of a map do not allow any data in the cluster
updated references from " AST " to " LST " in multiple files to standardize the terminology for improved clarity and consistency
updated calculations for scoreables per thread and job handling in ThreadedAcousticScorer . java to improve accuracy in calculating scoreables
replaced AssertionError with a return statement in NetHooks . java to improve error handling by returning null instead of throwing an exception
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) . title ( ) instead of a hardcoded server address to
added a new ` makeString ` method to ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedRichIterable ` ,
replaced the hardcoded ordered order with a constant for the default order in OidcServicesManagerRegisteredServiceLocator to improve code readability and
updated ` WeakAssociationsAnalyzer ` to accept a ` Predicate < ProposedWeakAssociation > ` for weak associations validation to enhance flexibility in
refactor Deflater class to improve compression handling to enhance performance and maintainability of compression operations
added a try - catch block to handle exceptions in Font . java to improve error handling by throwing an IOException instead of swallowing exceptions
added a null and empty check for the content array in VersionTypeBinding . java to ensure that a default version is returned when the content is
refactor NearbyListFragment to use a local list of places instead of a local variable to improve code readability and maintainability by
updated content type check to be case - insensitive to ensure consistent handling of case insensitivity in content type validation
added check for ssh magic , change return value to ASN.1
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding status and modified hint setting logic to streamline folder
replaced specific Hibernate annotations with a wildcard import and modified cache usage annotations in InheritanceCacheTest . java to improve code clarity and
updated import statements in ConnectOAuth2RequestFactory . java and implemented the getUserApprovalRequest method in TofuUserApprovalHandler . java to
fix influxdb name convention not apply to tag value ( # 645 )
do n ' t fail the quickfix test when there be no resolution for a marker .
updated cookie key check from " Cookie " to " Cookie2 " to ensure correct handling of multiple cookie requests
added a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` and updated its usage in ` Subject . java ` to improve
added functionality to manage the visibility of the clear all button based on user preferences in OverviewActionsView to enhance user experience by allowing users to
updated ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider ` to use ` final ` for ` desiredRepoVersion ` and
deleted the MemoryLeakTest . java file , which contained a test for memory leak scenarios to streamline the code by eliminating unnecessary
updated the return statement in ServletTester . java to include the local host address if localhost is set to ensure accurate representation of the local address
added a conditional check for MVDW API and introduced a new setting for this plugin to enable hooking into MvDWPlaceholderAPI
fix partition assignment test by wait for cluster size to become available
replaced an exception throw with a singleton implementation in FFIProvider . java and added a method to retrieve the FFIProvider instance based on
tika - 2241 -- add test for hierarchical w file list in batchprocess
added null checks and updated logic for saving collections in MongoTemplate to enhance robustness and prevent potential null pointer exceptions
change position values from 0 to NODE _ LIST for directInputCount and directSuccessorCount in NodeClass . java to improve clarity and
added ` accTradeValue ` field and its getter / setter in ` BithumbTicker ` and updated related tests to ensure accurate trade value
updated logging statements in RealtimeSegmentDataManager and AvroUtils to include segmentName in log messages to improve logging clarity and maintainability by
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex and FixedByteSVMutableForward
refactor multiple dictionary implementations for consistency and clarity to improve code maintainability and readability across the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions when destBuffer is null
try to fix the camel - msv unit test failure on slow ci server
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` instead of ` beginCycle ` to ensure correct validation of
increased the length of generated codes from 6 to 10 in JdbcExpiringCodeStore and related tests to ensure that generated codes have at
added a check for UniqueConstraint instance before matching the table in StandardObjectChangeFilter . java to ensure proper handling of UniqueConstraint instances in the
refactor description handling and language code extraction in MediaDetailFragment . java to improve code clarity and efficiency in processing language descriptions
log recoverable exception for arrayindexoutofboundsexceptions and classcastexception .
added withReferenceFilter and withFilter methods to ListImagesCmd and ListImagesCmdImpl classes to enhance functionality for filtering images by reference and key
camel - 15663 : camel - jms - allow the bridge error handler to be use on the endpoint .
added a check for specific conditions in OpExclusionUtils and set all ops to true if no matching conditions are found to ensure proper handling of
added two return statements to the DatabaseCommand class to ensure proper handling of database commands by returning false
replaced individual Politician instances with individual Politician instances in HonestPoliticianExample . java to enhance
[ hotfix ] [ interpreter ] fix check for empty init file in beanshellinterpreter
camel - 14284 : fixed restlet component to work with port 0 .
removed the case for WALL _ SIGN in SchematicFormat . java to streamline the code by eliminating unnecessary block handling
added a system property for maximum query length in QTestUtil and removed overridden configurations from SessionState to optimize query performance and improve configuration management
changed access modifiers of several fields and refactored the creation of HttpConfiguration in WebServer . java and WebServer . java to enhance encaps
updated processor names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple files
modified the result condition in HiveConf . java and adjusted the handling of the application name in HiveSparkClientFactory . java to ensure correct
fix bug where @ includedproperties do n ' t have the same name
simonstewart : add a new server api to maximise a window
updated methods in LocalCellProviderFactory and AbstractEmbeddedCellBuckOutInfo to improve path resolution and introduce getMainCellBuckOut to
added an assertion to check if the exception message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that
updated table offset and length assignments to mask values against 0x7FFFFFFF to ensure proper handling of non - hexadecimal values in the table
removed an assertion from the customize method in DirectMethodHandle . java to ensure that the customization method is not null to avoid potential NullPointerExceptions
refactor line buffer initialization and condition checks in LineChartRenderer . java for improved clarity and functionality to enhance code readability and maintain
refactor flavor checking logic in AndroidBinaryDescription . java to use a loop for better readability and error handling to improve code clarity and
updated buffer offset reference from ' offset ' to ' i ' in LwjglGL11 . java to ensure correct buffer generation for the
added new ` Property ` and ` PropertySuper ` classes , along with a test class ` TestClassResolutionFail ` to handle class resolution errors
do n ' t remove shutdown hook if the group property ` ` shutdown . hook . enabled ' ' be false
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and refactored the constructor of ` VirtualFilterChain ` to
replaced Collections . sort with Arrays . sort and updated return statements in PercentileAggregationFunction . java to improve performance and clarity by using
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that tables are
set baseType to null in DatabaseInfoRetriever and initialize literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to improve null handling and
refactor multiple Java files to utilize { @ link } syntax instead of hard - coded links to improve code readability and maintainability by
refactored EvaluatorFactory to use static instances of ObjectEqualEvaluator , ObjectNotEqualEvaluator , BooleanEqualEvaluator , and BooleanNotEqualEvaluator
updated file names from " osx _ x86 - 64 " to " osx _ x86 _ 64 " and " osx _
added sound effect management functionality in AllAppsView . java to enhance user experience by allowing custom sound effects
changed the exception type in the main method from Exception to IOException to provide a more specific exception type for better error handling
added granularity enablement for the left axis in BarChartActivitySinus . java to enhance the visual representation of the left axis in the
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability by reducing redundancy
updated ` ContextHandlerGetResourceTest ` to use ` MavenTestingUtils ` for determining the target testing directory and added OS support checks to ensure
added a close ( ) method to Connection and JsonAsyncHttpPinotClientTransport classes to ensure proper resource management and prevent resource leaks
replaced the method for getting last event with a BlockingQueue for event tracking in MockAppender and updated assertions in SocketRemoteTest to improve efficiency
[ beam - 4142 ] improve error message when hadoopresourceid . getdirectory ( ) return null
removed multiple specific sprite batch imports from IsometricStaggeredTiledMapRenderer . java to streamline the code by eliminating
removed duplicate unbindHandle call in ItemServiceImpl . java to improve code clarity and maintainability by eliminating redundancy
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the code
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
removed unused imports and simplified navigation button tinting logic in NavbarButtonsViewController . java to streamline code and improve maintainability
change abort to throw in PolyBenchLauncher . java to ensure proper error handling for language determination
replaced bootstrapMethodIndex , nameAndTypeIndex , and memberIndex with refKind and memberIndex in ClassWriter . java to improve clarity
added BlockFormattingContext parameter to findBox and findElementBox methods and adjusted their position based on block formatting context to enhance rendering flexibility by
added a method to retrieve standard error output and improved error handling in WorkerProcess and WorkerShellStep classes to enhance error reporting by providing clear
added null checks and error handling for empty list in CheckedListReplaceAll . java to ensure safe handling of null operators and improve robustness
added conditional logic for writing to the connection in SslConnectionTest . java to ensure proper handling of client connections during connection setup
added device configuration change listeners and changed the visibility of ` defaultValue ` and ` mCurrentValue ` in ` FeatureFlags ` to improve the handling of
added an import statement for JUnit ' s Ignore annotation and annotated the test class with @ Ignore to temporarily disable the test due to a known
removed import of MalformedURIException from StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
added focus to end of input box when click on it in the instructorfeedbackeditpage
refactor synchronization and subscription logic in KrakenStreamingTradeService to improve readability and maintainability of the code
replace System . err . println with System . out . println for ignoring Class - Path entries to improve clarity and consistency in logging output
refactor ` SparseRowMatrix ` constructor to accept a boolean parameter for random access rows to enhance flexibility in creating ` SparseRowMatrix `
cloudstack - 8237 : fix npe in delete volume usage event
refactor plan file handling to use a dynamic path based on Hive configuration to improve flexibility in specifying the path for the Hive plan
[ beam - 1770 ] fix udfs test to use vendored guava
memorycallgraphbuilder : register memorycctprovider before reset internal state
add check for multichat operation set before try to create a chat room .
added file permission check in Save . java to ensure the update file is writable before proceeding to prevent operations on non - writable files
added a new FolderSyncActivity class and integrated it into the DrawerActivity to manage folder synchronization functionality to enhance user experience by allowing users to
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
improve the spanishtreenormalizer to handle the case where ` ` , ' ' and ` ` % ' '
replaced the way ` heapPointWriter . getPointValue ( ) ` is appended to ` offlinePointWriter ` using ` getPackedValueSlice
added LocaleRandomizer and its corresponding test class to generate random values for specific locales in the randombeans system
add mime detection test for font - printer - metric and font - type
update installer and autoupgrade version to 10.0 and 9.0
removed the ` AccessController . doPrivileged ( ) ` call from the ` TCPTransport . java ` file to streamline the code by eliminating
updated the read timeout handling in Http2AsyncParser . java to use a default value of 0 to ensure that the read timeout is always set
updated the default WATCHER _ INITIAL _ DELAY value from " 120 " to " 600 " in TimelineMetricConfiguration . java to
updated the message format for the PRIMARY KEY column restriction to include the previous name to improve clarity of the error message for better readability
added Joda - Time support for date parsing in ThirdEyeJiraClient to enhance date handling capabilities in the Jira client
refactor HeadersGenerator to simplify the priority generation process by introducing a PriorityGenerator instance to improve code readability and maintainability by reducing
added a constant for the maximum scalar replace code size and updated the scalarReplace boolean condition to ensure scalarReplacement behavior does not exceed the defined maximum
added DATE _ TAKEN to the projection test and sort order in MediaProvider . java to ensure accurate sorting of media data by including the
update drawImage calls in TexturePacker2 . java to correct rectangle positioning to ensure proper rendering of images with proper dimensions
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and updated related test cases to ensure proper handling of WebSocket upgrade filters and improve test coverage for
added shutdown methods for validation and transaction handling in multiple classes to ensure proper resource management and prevent potential memory leaks
added a new annotation processor for handling RawJsonRequestBody in the JaxrsSwaggerGeneratorContext to enable the handling of raw JSON request bodies in
added a new method ` newTarget ` in ` LoggerUtils ` to create a ` Target ` instance with specified target type and extension to fac
updated BeanContainer to use an ArrayList for list creation and added a new test class BeanContainerTests to enhance functionality and ensure proper functionality of the
fix typo in metric : blockcounthitpercent - > blockcachecounthitpercent
camel - 16405 : cachedoutputstream should release temp file stream when exchange complete .
add deviceid to teltonika position ( fix # 469 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line in ` HybridProjectBuild
added a check for null operator in JCAssignOp and created a new Test class to ensure proper assignment of operator to avoid null pointer exceptions and
added a boolean flag ` enableAccountHandling ` and modified ` mixinRegistry . onCreate ( savedInstanceState ) ` call to conditionally call `
[ isochrone ] fix nullpointerexception in getmaxpolygon ( point )
added a path parameter to the DrillViewTable constructor and updated its usage in WorkspaceSchemaFactory to enhance flexibility in view handling by allowing
updated the constructor of PooledByteBufAllocatorL to include default allocator configurations to enhance flexibility in allocator configuration for improved performance
modified the array type check in ObjectInputStream from double to short and added a new CloneArray class for testing to ensure correct cloning of short arrays
added LLAP _ IO _ THREADPOOL _ SIZE configuration to control thread pool size for LLAP I / O operations
use reruninitialization for substitution class on java 8 and 11
updated latlonGrid . java to use a calculated minimum range for latitude and longitude checks and added assertions in TestLatLonGrid . java to
simonstewart : add ` ` invisibilityofelementwithtext ' ' and ` ` refresh ' ' method to expectedconditions
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated its usage throughout the code to enhance file replacement functionality
added a test for the ` getOuterClass ` method using ` SomeInnerClassReflector ` in ` ReflectorTest . java ` to
updated configuration to use " auto _ generate _ android _ facet _ sources " instead of " disable _ r _ java _ idea _ generator "
updated message construction and logging in HubChangeExecListener . java to include changeset ID and author to improve clarity of error messages for better debugging
added properties field and corresponding getter and setter methods to Link class and corresponding tests in QuickLinksConfigurationModuleTest to enable dynamic configuration of link properties
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO , and added a toString ( ) method in YamlConfigFileDTO to streamline
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCall to use specific request and response types to improve type safety and clarity
refactor class loading methods in mmm Class . java and ppp Class . java to improve clarity and support for caller - specific class
updated import statements and refactored token retrieval logic in RequestItemRepositoryIT . java to improve code readability and maintainability by using a
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread handling by using ` ThreadPoolExecutor
changed the access modifier of the setSecurityContextAccessor method from void to public to allow access to the method from other packages
refactor TimeStepdefs to use Jchronic ' s Options and Calendar classes instead of Cucumber ' s xstream converters to improve
fix ` ` spark _ isolated ' ' and ` ` spark _ recessive ' ' in mod banner
updated RestInvocationHandler to accept a URL instead of an ExchangeSpecification parameter and adjusted related proxy creation logic to streamline proxy creation by using the
removed redundant print statements and improved string concatenation in RecordGenerator . java to streamline output formatting for better readability and maintainability
[ kafka ] remove auto commit support for kafka consumer
removed unnecessary lock release and output statements in Liquibase classes to streamline lock management and improve code clarity
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include additional warnings to improve code clarity and maintainability by
made several methods synchronized in Database and SessionRemote classes to ensure thread safety to improve thread safety during database operations
polish ` ` add support for nested property in spring - boot auto configuration ' '
changed the base symbol used in the ticker adaptation from ` baseSymbol ` to ` counterSymbol ` to ensure the ticker reflects the correct
camel - 16400 : camel - core - optimize camel - core to reduce dependency on camel - core
replaced UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbc
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
fix height map in fractalheightmapgrid to use heightscale parameter instead of hardcoded value
updated equality check in SecurityConfig and changed assertion method in SecurityConfigTests from assertEquals to assertNotSame to simplify comparison logic and improve test
set default value of dumpPartitionId to false to ensure default value is used for partition ID retrieval
added UTXO - related imports and implemented testing for TronTXOutput and TronTXOutputs in UTXOSetTest . java
[ java ] ignore unused variable name in java 9
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for job parameter overrides in JsrJobOperatorTests to ensure job restart properties are correctly updated during job execution
added a new boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ` to the ` Database
refactor principal initialization logic in JaasAuthenticationHandler . java to improve clarity and maintainability of the code
replaced direct core closing with a separate thread pool using ` ExecutorUtil . newMDCAwareFixedThreadPool ( Integer . MAX _ VALUE )
added null check and visibility setting for mActionsView based on fullscreen progress to ensure proper UI behavior when mActionsView is not null
refactor parameter handling in RunIdIncrementer to improve clarity to enhance code readability and maintainability by reducing redundancy
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added assertions to verify the actual results of the ` getShowDevicesPlan ` method in ` SchemaRegionBasicTest ` to ensure that the expected
[ 3.0 ] log error when invoke metric event in metricseventbus
updated EigenvectorCentrality . java to handle cases where max is zero and added a new EigenvectorCentrality
updated registry creation and lookup logic in LookupIPv6 . java to use a dynamic port to improve flexibility and maintainability of registry management
refactor geometry data handling to include database session parameters and improve color and normals handling to enhance data integrity and ensure compatibility with the new database session
set the amplifier of the beacon to 0 instead of 2 to improve the accuracy of the beacon logic
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated the handling of the ` DEFAULT _ GROUPS ` and ` groups ` lists to use ` Class < ? > ` instead of ` Class
updated bug annotations and added a timeout for the main method in bug8057791 . java to improve code clarity and ensure proper timing
modified the scheduler initialization to set the daemon thread to allow threads to exit via the main method completion to improve thread management and allow for daemon threads
fix lexica botania gradle version parse issue on some platform .
added a reflection access check in the JavaAdapterFactory class to enhance security by ensuring reflection access is validated
( chore ) camel - mina : fix some camel - core test failure
updated initIOContext method in CombineHiveRecordReader and related classes to include RecordReader as a parameter to improve context initialization by allowing for
deleted ClassLoaderHolder and LoaderManager classes , and updated VerticleManager to directly use the current class loader to streamline code by eliminating
added a new method ` configurationChanged ` in ` FileStore ` and updated file existence checks in ` JavaLanguageServer ` to improve configuration handling
added try - catch blocks around register and unregister session callbacks in PackageInstallerCompatVL . java to handle potential exceptions during callback registration and un
removed the " src / test / org / apache / lucene / index / index . cfs " and " index . nocfs "
make akkarpcserviceutils # createandstart ( ) more flexible by pass a constructor to akkarpcserviceutils
added a retry mechanism to set the maximum number of map attempts to 3 if the retry mechanism is not met to ensure that the mapreduce map
pdfbox - 4892 : disable non - symbolic font embedder , a suggest by valerybokov
added a new test class ` SslConnectionTest ` for testing SSL connection behavior to ensure that the SSL connection is properly closed before fill
refactored address family validation in InetAddress and NetworkInterface classes to improve error handling for invalid address types to ensure robustness by throwing an InvalidObjectException
added a test for date serialization in a collection using Gson to ensure proper handling of date objects in JSON format
refactor Message class to improve code structure to enhance maintainability and readability of the code
added debug logging for SQL generation and modified conditional logic for firstUpdateKey to improve logging clarity and ensure correct handling of the first update key
updated loop condition in TableOutput . java to correct the index calculation to ensure correct indexing of the loop based on the running width
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
change priority of violation of formatstringchecker to high
added property to ignore non - final loop variable in for - each statement .
pdf export : add full compression to pdf , fix test
added unit tests for ` LdapUserDetailsMapper ` to validate role attribute mapping to ensure correct functionality of role attribute mapping in LDAP
add a config to set ldap connection timeout in milli sec
updated multiple TestDescription . java files to improve code structure and readability to enhance maintainability and facilitate future development
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
renamed ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple hash map classes to clarify that ` shouldAvoid
added a condition to check if the handler is invalidated when verifying gesture state to ensure proper handling of gestures when the handler is invalidated
updated distance calculations for folder creation and removed old rotation Ys array to improve folder creation accuracy and reduce memory usage
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve configuration handling and ensure proper configuration initialization
updated Testjsig . java file to improve test coverage for jsig functionality
mana ring , terra pick and tablet now use the count of the stack instead of just the max mana .
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field and added a suppression warning in P11TlsPrfGenerator . java to streamline code by eliminating unnecessary
replace tsFileNotValid with isEmptyFile and add error handling for tsFile validation to improve clarity and robustness of tsFile validation logic
added two new files , Switch21 . java and Switch19 . java , implementing pattern matching and null / guard handling to improve code structure and
updated error message in ComparableSubjectTest to reference the correct test class name to improve clarity of error reporting for string conversion issues
updated StreamHelper to set the XML standalone flag in XML content and added a new test class TestStreamHelper to ensure proper handling of standalone XML
updated bounds checking and improved error message formatting in Int2ObjectCache . java to enhance clarity and maintainability of the code by ensuring
added ordering to security filter chains and corresponding tests in WebSecurityConfigurationTests . java to ensure correct ordering of security filter chains based on bean definitions
removed the ` TimeInForce . GTC ` parameter from the ` MARKET ` order type in ` BinanceTradeService . java `
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and add validation for min and max values to enhance flexibility in random value generation
changed the character KEY _ SEP from \ 0 to \ t in RocksDBBuildInfoStore . java to ensure proper formatting of the
camel - 16400 : camel - jms - add support for the json schema for jms component
added error handling for bound retrieval in SourceUtils and created a new test class for bound functionality to improve robustness by handling potential NoSuchFieldError
refactor LeafFilterFactory to use a dedicated method for building FilterPredicateLeafBuilder based on parquetType to improve code readability and maintain
added a check to ensure originalArtifactName does not start with " SCOPED _ TARGET _ BEAN _ PREFIX " and closed StepSynchronizationManager
added a loop to read multiple certificates from the input stream in HttpsSegmentFetcher . java to improve certificate retrieval by logging the serial number and
updated ` getDefaultBooleanValue ` method to return a String instead of a boolean and added a new ` DnsFallback ` class for testing configuration to
ww - 4891 add the cause to the exception when fail to write a tag
changed the type of the ` success ` variable from ` boolean ` to ` String ` and updated the constructor accordingly to allow for a URL instead
refactor the ` drop ` method in ` WindowsSecurity ` to use a lambda expression instead of an anonymous class to improve code readability and
removed " address " and " phone " scopes from the CommonOAuth2Provider and its tests to simplify scope management for improved clarity and
replaced direct submit with a new Start class implementation to manage the state of the selector to improve thread safety and ensure proper synchronization during selector updates
added BigDecimal constants for hue65535 and saturation255 in WLedHandler . java and updated request handling in WLedBindingConstants . java
replaced the ` isValidCaller ` method with a ` Set < String > VALID _ CALLERS ` in ` VectorizationProvider . java `
added a new method ` caseJSRInst ` to the InstSwitch class to facilitate handling of JSRInst instances in the
added transactionmanager to subscriptionactivatingsubscriber so that it can be use within a transaction .
refactor database operations to use an ` UPDATE ` statement for updating and inserting metadata to improve code readability and maintainability by using a more
remove elevation setting from ContactItemInflater for devices running Lollipop or higher to ensure compatibility with devices running Lollipop and
rename variable and method from ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming con
replaced direct access to file operations with privileged actions in SandboxFileManager to enhance security by enforcing privileged actions during file operations
refactor Groovy parser and printer to handle binary operations more effectively to improve code clarity and maintainability by streamlining the handling of binary
updated warning message format in MetaDataFetcher to include the exception class name to improve clarity of the warning message for better debugging
updated character reading and compression logic in ` RecordInputStream ` , ` UnicodeString ` , and ` TestUnicodeWorkbook ` classes to ensure correct handling
added a test for downloading a file with norway characters in the name to ensure that the download functionality correctly handles file names with orway characters
replaced RuntimeException with CancellationException and added isCancelled method in AsyncResource . java to handle cancellation scenarios to improve error handling and provide clear
fix potential npe in timedmemberstatefactory . count ( )
added a new test method to remove objects from an explicit collection in MongoTemplateTests . java to ensure correct functionality of the removal of objects from
update copyright year to 2022 ( no functional change )
use % n instead of \ n in coder . tostring ( ) .
added handling for the clear - all button ' s revealability in RecentsView and modified scroll behavior in PagedView to improve
refactor HiveIcebergMetaHook to use a consolidated COMMON _ HMS _ PROPERTIES map for better readability and maintainability
added a method to check if an address is already in use and refactored related code to use this method to improve code readability and
added a command line argument " - cp " to the argList in TestNestmateAttr . java to specify the classpath for testing
updated logger initialization from ` Logger . getLogger ( ) ` to ` SchemaTextDetailType . verbose _ schema ` to improve logging clarity and
[ hotfix ] fix checkstyle issue in com . apache . catalina . ha
# 119 - enh : add nestedusesavepoint support for sub - transactions ( # 119 )
replaced ` int fetchSize ` with ` ThreadLocal < Integer > fetchSize ` in ` QueryProcessExecutor ` to improve thread safety and
[ java ] use noop idle strategy for ping pong in embeddedpingpong .
refactor HttpClient call handling by introducing a new method ` handleBlockingCall ` to improve code readability and maintainability by centralizing the
added logic to retrieve and set the HDP version in SliderAppsViewControllerImpl . java to ensure the HDP version is correctly set
refactor JavacProcessingEnvironment by replacing instance variables with private fields and adding close methods to improve resource management and ensure proper closure of service
added a new ` DeepCloner ` class and modified the ` methodBlock ` method in ` ParameterizedRobolectricTestRunner ` to
added bind for WebServer . JETTY _ SHOW _ STACKTRACE in ResourceBase . java to disable stack trace visibility for WebServer '
added a check for JSType . OBJECT in NativeObject . java to return null if the object is not a OBJECT to ensure proper handling of object
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot .
updated JwkKeyListView to use PublicKey type hierarchy for serialization and improved serialization handling to enhance clarity and functionality of public key serialization
make the heap section writable when use - xx : + useonlywritablebootimageheap option
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
added getOwnerAddress ( ) method and implemented it in multiple actuator classes to return a ByteString representation of the owner address for better contract validation
http : / / issues . apache . org / jira / browse / amq - 4892 - add main class to test the
zcount , zrangebyscore , zcount and zrevrrangebyscore should return ` ` + inf ' ' instead of `
fix ( core ) : handle empty index for node and edge
[ java ] only remove correlationid from asynccommandid set when the correlationid be already in the set .
added method calls to saveConflict in FileDataStorageManager and updated conflict handling in FileDownloader and FileUploader to improve file management and maintain
updated generic types in ExecutionContext , AbstractTransactionalResourceItemWriter , AbstractMethodInvokingDelegator , and AbstractTransactionalResourceItemWriter
updated imports and method calls from ` org . apache . solr . common . util . StrUtils ` to ` org . apache . lucene
added Oracle and MySQL specific driver properties in DatabaseFactory to enable remarks reporting and use information schema for Oracle and MySQL databases
updated the constructor of ` SignedSupportingClassProxyFactory ` to accept a ` handler ` and added a serialVersionUID to the ` mockedMethods
updated time measurement in FileChangedExclusiveReadLockStrategy to use current time instead of the current date to improve accuracy in tracking file modifications based on
[ hotfix ] [ table - planner - blink ] wrap classloader in executioncontext .
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve UI responsiveness and responsiveness during buffer changes
refactor ` processConfigFile ` method for improved readability and structure to enhance code clarity and ensure proper handling of configuration files
refactor freeze logic to handle both V2 and TVM freeze v2 conditions in OperationActions . java and OperationRegistry . java to improve
added a insecure configuration option and corresponding getter and setter methods in TlsConfig . java , and modified the trust manager creation logic in Tls
refactor code to simplify source and class path handling in JavadocTool . java and introduce a new class T7091528 . java
updated edge attribute handling in ExporterGDF to use ' edgeColumns ' instead of ' nodeColumns ' and added an edgeIdColumn for
added cascade option to the OneToOne relationship in DefaultUserInfo . java to ensure that the relationship is in the same collection as the DefaultAddress class
change message . equals ( object ) to use arrays . equals ( object ) instead of messageid . hashcode ( ) .
updated Unicode escape sequences in ` AsyncProvidersBasicTest . java ` to ensure compatibility with Unicode characters in the response body
[ hotfix ] [ test ] remove unused method in rocksdbserializedcompositekeybuilder
added a method to retrieve the static permissions from ProtectionDomain and updated subjectPd assignment logic based on its value to enhance security by ensuring
fix a crash with the float flower which cause some item to crash in the inventory .
updated parsing logic in Parser . java to correctly handle parentheses during parsing to improve parsing accuracy and ensure correct parsing behavior
added showConnectionErrorPopup method to UploadMediaDetailFragment and its implementation in UploadMediaDetailsContract to enhance error handling by providing alert dialogs for
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to handle unsupported media types to ensure proper
updated bitwise operation from ' 1 < < bitIndex > ' to ' 1L < < bitIndex > ' in NodeBitMap . java
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
refactor ConsoleUIService to use standard input instead of Git BASH configuration to improve flexibility in handling console input based on environment settings
replaced mock AccountManagerCallback with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test reliability and cl
do n ' t cache the enclosing type , it ' s not need anymore .
renamed methods for consistency in the Pairs class and updated references in InPairsExpression and TestCacheViaComplexNaturalKey3 to improve
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the code by eliminating unnecessary delays
[ issue # 3995 ] fix npe when consumer be empty or not ( # 3995 )
[ java ] generate source identity when create a new subscription to the driver conductor .
added a new file TopTabAction . java to implement a toolbar with a label " lalal " to enhance the user interface by providing
camel - 15850 : dynamic router should use reactive to avoid deadlock when use multiple recipient mode .
updated imports and annotations in AggregateItemReaderTests . java to use JUnit 4 annotations to improve test structure and ensure proper setup for the test
added generic type parameter ` < T > ` to the Procedure constructor in ` AbstractObjectValueTypeMap . java ` to enhance type safety and improve
updated imports and added methods for retrieving Wikidata edits in AchievementsActivity , NetworkingModule , and OkHttpJsonApi
added a validation check for variable ' len ' in OfflineSorter . java to ensure ' len ' does not exceed Short . MAX _ VALUE to
do n ' t report unconditional warning for constant long . min _ value
refactor multiple dataset classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated the error message in ` ProvisionClusterRequest ` to include acceptable values for credential types to improve clarity in error reporting for invalid credential types
updated random number generation for vector elements in TestVectorUtil . java to enhance randomness by allowing more than one value to be generated
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the time comparison logic to improve accuracy
added SSL property handling and updated test assertions in TestUtil . java and PGPropertyTest . java to enable dynamic configuration of SSL settings and ensure
simonstewart : enable safebrowsing by default on chrome
added null check before cloning flight configurations in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions during configuration cloning
added a condition to check if transcoding is disabled in DLNAResource to ensure proper handling of transcoding behavior based on configuration settings
updated data table diff logic to handle empty lists and improved condition checks to ensure correct behavior when comparing tables with empty lists and enhance error handling
added a static constant ` CustomIgnoreTag ` and a conditional statement to remove it from the iterator if the section ' s native code starts with
camel - 16400 : camel - jdbc : use optimisticlockingaggregationrepository . optimisticlockedexception instead of runtimeexception
fix @ configurationproperties ( ` ` parent ' ' ) for @ configproperties ( ` ` name ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments for UI elements to improve UI responsiveness
deleted the ClusterNodeInfo . java file to remove unused code to streamline the codebase
removed redundant return statement in ShieldedTransferActuator . java to improve code clarity and maintainability
added debug output for chosen ciphersuite in ServerHandshaker . java to enhance debugging by providing context about the chosen ciphersuite
updated the template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates correctly to improve user experience
added a ` duplicateWithLabels ` feature to the ` ImportContainerImpl ` and ` ImportContainerParameters ` classes to handle duplicate node labels to
added a new file R2303044ListSelection . java to implement a GUI test for list selection functionality to ensure proper functionality and error
[ java ] do n ' t reuse publication registration in the driver conductor .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify the correctness of compound property
updated row counting logic in StatsRulesProcFactory . java to use a new variable for row counts to improve code clarity and maintainability by
added path handling and improved parameter filtering in SpringBootDocBuildTemplate . java and DocUtil . java to enhance code clarity and ensure
refactor logger initialization and improve notification handling logic across multiple classes to enhance code clarity and maintainability by using more descriptive class names
replace ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and introduce ` LocalCachingBuildEngineDelegate ` based on
updated RuntimeException to include JSON parsing error message to improve error reporting for better debugging and debugging
added a DEBUG flag to the logging statement in WidgetsModel . java to optimize logging performance by avoiding unnecessary string formatting when debugging
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a new test method in ` TestSimilarityBase
added null checks and verification for the ` send ` method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests `
added new exit and quit methods with corresponding properties to Global . java and removed the old quit method from ScriptingFunctions . java to streamline
[ hotfix ] [ example ] fix checkstyle violation in loanbrokersharkdetectordemo
rename methods and variables from ` getFirstUnverified ` and ` getLastUndesiredInvocationStackTrace ` to ` findFirstUnverified ` and ` findLast
[ vmware ] fix npe in vmwarecontext when there be no cookie in vcenter .
removed redundant lines in ResinAcegiAuthenticatorTests . java to improve code readability and maintainability
updated bigIntegerToBytes method calls to include an additional parameter to ensure proper handling of 32 - bit values in the key representation
update system property key from " fml . disabledMods " to " fml . modStates " in Loader . java to ensure the
refactor account selection handling by extracting account selection logic into a separate method to improve code readability and maintainability by reducing duplication
updated IOException message to include host IP and port to improve error reporting for better debugging and debugging
added error handling for unexpected empty simulation results in ValidatorContractController . java and created a corresponding test in ValidatorContractControllerTest . java to ensure
updated TexturePackerFileProcessor to handle empty files by checking for null before reading fields to improve robustness by avoiding potential null pointer exceptions
removed null check for datasource and datasourceJNDI in PooledConnection . java to simplify code logic by eliminating unnecessary null checks
increased TARGET _ MB and WINDOW values , and modified the count calculation in TestRefprocSanity . java to optimize memory allocation
do n ' t try to write to stdout when console be not available
( chore ) camel - aws2 - kinesis : set kpc credential refresh delay to 100
replaced multiple instances of AlertDialog with a unified method ` showInfoAlert ` to improve code readability and maintainability by centralizing the
renamed the loop from ` priv ` to ` pack ` and updated the ` test ` method to include a ` - package ` argument to
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified dependency versions in tests to ensure
do n ' t resolve pluginbase / shared dependency that be already provide by pluginbundlemanager
added a HashSet to manage ZipFileInputStream instances and modified the releaseInflater method to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to ensure consistency and accuracy
[ hotfix ] [ source ] fix race condition in sequencegeneratersource
fix typo find by codespell on fossies . org
replaced the implementation of ` findAny ( ) ` with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T
added support for " ppc64 " and " ppc64le " architecture checks in Bits . java and ByteArrayAccess . java to enhance
updated the exception message format in RoboMonitoringInstrumentation . java to include a link to the GitHub issue to improve clarity of the error
updated timeout parameters in waitWithDeadline method calls from minutes to milliseconds to allow for more flexible timeout handling in transaction operations
[ hotfix ] [ test ] replace java . time . date with java . time . instant in test
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message to inform the user that the YouTube Player does not work on Lollipop yet to inform users about the
added checks for unterminated SQL statements in ` Parser . java ` and corresponding test cases in ` StatementTest . java ` to ensure proper error
added a null check for mVibrator before proceeding with vibration logic to ensure proper handling of vibration when vibr
updated table border and background color settings and improved column background handling in DotRenderer . java to enhance visual clarity and ensure correct background color
added a method to check if a specific configuration variable is encoded in HiveConf . java and updated SetProcessor . java to use this method to
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code structure to enhance maintainability and readability of the code
fix wavefront uri validation ( # 3903 )
replaced ImageView with NetworkedCacheableImageView and added image loading functionality to enhance image handling capabilities and improve performance in the application
removed the ' target ' parameter from the ` LauncherAnimUtils . ofFloat ` method calls across multiple classes to simplify the method signature and
added gdxControllersVersion to DependencyBank and updated dependencies in BuildScriptHelper and DependencyBank classes to ensure compatibility with the latest controllers and improve
updated the implementation of the LaunchedURLClassLoader class to improve performance and maintainability of the code
updated ` DataSourceHealthIndicator ` to use ` DataAccessUtils ` for querying a single result set to improve data retrieval accuracy and ensure correct column
add ` ` no - cache ' ' and ` ` cache - control ' ' header to ` ` layout tag ' ' response
updated the warning message format to use Locale . ENGLISH to ensure consistent formatting of the warning message across different locales
added an import statement for Analyzer and modified the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility in handling query
updated copyright year and added licensing information in multiple Java files to ensure users have the correct copyright year and licensing information
removed an unnecessary semicolon in MainTest . java to improve code readability and maintainability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector when source is a VoidColumnVector
replace templateName with req . getName ( ) in StatementGenerator . java to ensure the correct name is used for processing operations
removed the ` isTypeMatch ` method and updated the configuration addition in ` AbstractConfig . java ` to streamline the code by eliminating
[ java ] : add offer ( ) method to the sessiondecorator so that it do n ' t have to re - use the buffer .
rename methods and variables related to XForwardedRemoteAddressResolver to improve clarity and consistency in naming conventions
feat ( bootstrapinserter ) : add support for @ nobootstrap
hbase - 24950 tabledescriptorchecker # checkmaxfilesize and # checkmemstoreflushsize should use getvalue ( ) instead of
replaced ` maxCommits ` with ` requestedCommits ` and updated related logic in ` BranchGraphServlet . java ` to ensure correct handling of
updated method signatures in bug6794831 . java to include InvocationTargetException and changed invokeLater to invokeAndWait to improve error handling and ensure
added a static final String ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed duplicate calls to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating redundancy
added a default TezConfiguration instance and updated its usage in TezConfigurationFactory to enhance configuration management and improve code clarity
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a forget method to the OpenALAudio class and modified the stop logic to handle null recent sounds to improve robustness by preventing
clear ` positiondiscontinuity ` when there ' s a new one in ` simplebaseplayer `
added new decimal formats and tick units in NumberAxis . java to enhance the display of tick values in the number axis
replaced the use of TargetGraphAndBuildTargets . builder ( ) with TargetGraphAndBuildTargets . of ( ) across multiple files to
removed the ` IndexFileNameFilter ` class and simplified file handling in ` IndexFileDeleter ` and ` IndexWriter ` to streamline file
add ` ` fullboundingboxladders ' ' property to the forge dummy container and make it configurable .
added a compression level parameter to several methods in ApkBuilderStep , ApkBuilder , and SignedJarBuilder to enable customizable compression levels
add a test method to verify inclusion of static fields in a class to ensure that static fields are correctly included in the generated jar
added support for the BYTES data type in the MetricFieldSpec and related classes to enhance functionality to support byte data handling in the MetricFieldSpec
updated string formatting in multiple error classes to include a newline character to improve readability and maintain consistency in error messages
replaced the use of ` Objects . hashCode ( id ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java
added caching functionality and test cases in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and Forum
fix for ticket : 142 -- use locale - specific filename for pronunciation model .
updated SimpleHttp . java to return a form body builder when the postBody is empty and added a new test in TestHttpPlugin . java to
added a dispatcher to the ClientSideSlb class and updated its shutdown method to improve resource management and ensure proper shutdown of the executor service
added conditional logic to set texture coordinates based on vertical flipping to ensure correct texture positioning based on vertical flipping behavior
improve error message for unknown property on discovery strategy
changed contextPath from final to non - final and added a null check for it to ensure contextPath is set to " NA " when it is null
[ drools - 6635 ] fix project classloader reinitialization when use kiecontainer . addclass ( )
added serialization support for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined its value in SerializationHeader .
added support for precompiled headers and improved error handling in the C++ source rule factory to enhance flexibility in handling precompiled headers based
replaced WeakReference with a custom AccWeakReference class and updated image update method to utilize privileged actions to enhance security by ensuring
modified visibility of findNextIndex method in ObjectSet and updated remove method in OrderedSet to enhance encapsulation and improve code clarity
changed the value of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the object is direct
fix for ticket : 282 -- make sure to return the audio effect help text
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow retrieval of coordinates from the
pdfbox - 5764 : use the buffer ' s limit instead of the buffer ' s capacity , a suggest by valerybokov
added a null check for the context before removing the close hook to avoid potential NullPointerExceptions when the context is not initialized
modify border spacing calculations in CellLayout and DeviceProfile to accommodate folder cell layout border spacing based on container type to ensure consistent border spacing
refactor value numeric parsing to use a dedicated ValueNumeric class to improve code readability and maintainability by encapsulating parsing logic into a dedicated
added a condition to check if the response is not deferred when determining if the login or error page is to ensure proper handling of deferred responses in
updated command - line argument checks from " -- module - startd - ini = " to " -- add - to - startd " to
added a default partition value and modified the handling of dynamic partition values in DynamicPartitionFileRecordWriterContainer to ensure that the default partition value is
[ hotfix ] [ runtime ] make operatorfactory not null in streamnode
updated return statements in DefaultArtifact . java to include classifier in conflict ID and group ID to improve clarity of artifact identification and maintain consistency in
camel - 14850 : kafka consumer should not call staterepository . getstate when rebalance be call twice .
improve error message when a class can not be find in the classpath .
fix typo : gmail _ notifications _ enabled - > enable _ gmail _ notifications
doc : [ cryptionkey ] clarified purpose of the java . security . cryptokey proto field
updated test assertions in LumberjackMultiThreadTest to use a dynamic concurrency count based on available processors to improve test reliability by allowing
fix npe in getplayerdisplayname ( ) when player be dead
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
apiupdateuser : update api _ key and secret _ key require to be specify with apikey / secretkey
replaced switch - case statements with if - else statements in MfaProvider , JdbcMfaProviderProvisioning , and SAMLServiceProviderConfiguratorTest to
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added SQLIntegrityConstraintViolationException handling for dropping tables in materialized views to ensure that tables are not used in materialized view definitions and provide
corrected the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in the
added a new file for RoboExecutorService in the org . robolectric . util . concurrent package to mark the class as deprecated and
added root group menu functionality to the GroupTreeView to enhance user interface by allowing subgroups to be added for root groups
renamed method ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and updated condition to check if the path starts with
refactor process builder creation and argument handling in TestDynamicNumberOfGCThreads . java to improve code clarity and ensure proper execution of
replaced ` ImmutableList < ImmutableFlavor > ` with ` ImmutableSet < Flavor > ` in ` CxxPlatforms . java ` and
updated CreateTable and CreateTableDeParser to use PlainSelect for create options and table parameters to enhance flexibility in SQL creation process by allowing
set the alpha of the background drawable to 64 in ChatViewerFragment . java to improve the visual appearance of the chat window by providing a
test : migrate ctiteratortest to junit 5 ( # 4358 )
replaced calls to ` Token # clear ( ) ` with ` Token # clear ( ) ` in multiple tokenizer classes to ensure proper handling of
add a test to make sure we do n ' t crash on block statement
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to remove dependency on ` Enum < S > ` and added validation to
danielwagnerhall : remove unnecessary check for ` ` link = ' ' in selenium - test - suite
updated StringConverter to set maximum fraction digits based on BigDecimal and Float types to improve formatting flexibility for floating - point values and enhance test coverage
simplify aggregatelifecycle . getcurrentscope ( ) by not rely on currentunitofwork
replace ` setTouchableInsets ( ) ` with ` setTouchableInsets ( TOUCHABLE _ INSETS _ REGION
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser to simplify the parsing logic by eliminating unnecessary
added socketTimeout property handling in ConnectionFactoryImpl and BaseDataSource classes to allow configuration of socket timeout values for socket read operations
added a sleep delay using Thread . sleep in ElementAttributeTest . java to handle InterruptedException to improve reliability by preventing intermittent
updated BufferedReader initialization to specify UTF - 8 character encoding to ensure proper handling of character encoding in HTTP responses
refactor List class implementation to improve performance and maintainability of the code
added constructors to AsyncFileImpl for handling URI and Path exceptions , and created a new test class AsyncFileImplTest to improve code clarity
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are stable and should not be
fix npe in nuagevspmanagerimpl . getvirtualmachinewithvirtualmachinewithvirtualmachin
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity
updated JAVA _ VERSION constants and methods in ConstantPoolTagTests . java to reflect the correct Java version to ensure compatibility with Java 9 and improve
skip error , warning , and recompile with - xlint
added a method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` to clear the client header map to provide a way to remove headers from
replaced Vector with ArrayList and updated associated method calls to improve performance and clarity in handling string elements
updated the default value of DEFAULT _ GRID _ COLUMN from 4.0 f to 3f to improve visual clarity by using a more
added a condition to check if ` forViewCreation ` is false before verifying the presence of ` hasTableDefined ( ) ` to ensure that
updated regex pattern and improved assertions in TestHS2HttpServer . java to enhance readability and maintainability of date validation logic
do n ' t swallow exception from snippet reflection in graphprinter
danielwagnerhall : fix a bug in the single - test suite that fail on the ie driver .
update byteOffset calculation to use Math . addExact and add a new test for too many allocations in ByteBlockPool to ensure correct byte offset
updated ` InteractionValueEncoder ` to use instance variables instead of static ones and modified string formatting to use ` Locale . ENGLISH ` to improve
add a try - catch block to handle unexpected exceptions in the TcpTransport class to improve error handling by providing clearer error messages when an unexpected
suppress warning for java 1.5 and java 1.6
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class hierarchy by removing unnecessary dependency on Source
add ` ` discard change ' ' and ` ` save ' ' to ` ` return to the main window ' '
added response type validation and access control checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in OAuth20AccessToken
added a call to the ` chk ( index , 1 ) ` method in ` DrillBuf . java ` to ensure proper handling of buffer
updated the ` initTableMapperJob ` method signatures to include ` Class < ? extends InputFormat > ` as a parameter and refactored
removed an duplicate call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code
sulong : throw an error when eval be call with no language or internal language .
added a deprecated check for the ' RESERVE ' parameter in ReplicationHandler to ensure that ' master . ' and ' RESERVE '
corrected variable name from ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` and updated related references to
updated ECKeyPairGenerator to return an Object array instead of a long array for key pair generation to improve type safety and clarity in handling key
[ flink - 11977 ] [ runtime ] add restarting . suspend ( throwable , jobstatus ) and make statewithexecutiongraph
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState . java ` to
refactored the handling of port table and overrides in UniFiControllerCache . java to use flatMap for improved readability and
updated method signatures and variable types from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
change offerbook . fillofferbookitems to remove an offer with the same id instead of create a new one
use constant for tl 1.0 and 1.1 for test
updated MockitoMethodInvocationControl and SystemClassUserTest to use the new ` doReturn ` method for mock type handling and improved test
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` in multiple files to improve exception handling by
added an extra file to the intent in FileDisplayActivity to ensure proper handling of file data in the activity
added error handling and file deletion logic in StoreDirect and StoreWAL classes to ensure proper resource management and prevent resource leaks during file renaming
added a task snapshot retrieval process in AbsSwipeUpHandler and modified the stopSwipePipToHome method call in SystemUiProxy to
added a hidden flag to CommandArgumentDefinition and associated methods in LiquibaseCommandLine and CommandArgumentDefinition classes to enable handling of command arguments
[ hotfix ] [ test ] change remote address in loggingkafkaplugintest from 8090 to 9092
[ geos - 8048 ] use resourcepool to obtain sld from styleinfo instead of catalog
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents to enhance security by
added ID management methods to TideMapLoader , TmxMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection string and session builder to include version specification to ensure compatibility with the latest API and improve session management
added new properties for schemas and includedSchema in LiquibaseGenerateChangeLogMojo . java and updated diffOutputControl initialization to enhance
replace ` putIfAbsent ` with ` put ` in ` JmxRegistry . java ` to ensure proper handling of registry entries in the cache
plannerbenchmarkrunner : use logger . warn instead of logger . error
removed the ' final ' modifier from the method ' doPutRecord ' in AbstractCacheRecordStore . java to allow for subclassing of the
update string concatenation to use a single quote for directory paths in Tools . java and FileSelectorFragment . java to improve code readability and maintain
added new test methods for handling large and slow HTTP responses in FastCGIProxyServletTest . java to improve test coverage for HTTP response content
added a call to start the ReadInteractionsService in MarkReadService . java to enable starting the ReadInteractionsService for improved functionality
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when the
added a check for the server port and set it to a default value if it is null to ensure a valid port is used for email communication
add retry mechanism for SSLFactory reloading in TlsUtils . java to improve reliability and error handling during SSL factory renewal
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm : ss ' Z ' " to "
update assertion message for private class visibility in SpyingOnRealObjectsTest to improve clarity of the error message related to mocking private classes
added functionality to check if the line ends on a specific line tag in InlineBoxing and LineBox classes to ensure proper handling of line end
updated filePathString initialization to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor the input stream creation in NinjaServletContextTest and add a new test for handling Windows - 1250 multipart requests to improve code
updated the properties property in AbstractCasEndpointTests to include specific exposure configurations to enhance flexibility in managing endpoint exposure in the test environment
added a check to ensure the current graph is a dynamic graph in StatisticsControllerImpl . java to ensure that the current graph is a valid dynamic
fix @ scopeone do not work with @ factory ( # 4445 )
added support for suppressing exceptions in JsonPath expressions by introducing a new method ` jsonpath ( String text , boolean suppressExceptions ) `
removed duplicate instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage message in CLHSDB and HSDB from " java " to " clhsdb " and " hsdb " to cl
refactored the configuration of FaultTolerantChunkProvider in FaultTolerantStepFactoryBean to improve code clarity and maintainability
[ beam - 13434 ] remove write class , use org . apache . beam . sdk . io . write instead
refactor ShadowAccessibilityManagerTest to use a private AccessibilityManager instance instead of a private AccessibilityManager instance to improve accessibility manager
add ` ` flutter usage statistic ' ' to the analytics ( # 2329 )
removed the usage of ` AbstractBuildRuleWithResolver ` from several classes and methods across multiple files to simplify the class structure and eliminate unnecessary dependencies
replaced the existing ` PostgreSQLEnumDataTypeHelper ` class with a new ` PostgreSQLEnumDataTypeHelper ` class for obtaining enum data types to
updated the expected log path format in LogFileTests to include the platform - specific file separator to ensure consistency in log file paths across different operating
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple Java files to standardize the
added support for dropping index tables in HiveMetaStoreClient to ensure proper exception handling for unsupported operations
added a check to update disabled flags for non - visible visibility in RecentsView to ensure proper handling of disabled scrolling behavior when the visibility
added a specific highlighter for syntax highlighting on non - Windows environments to enhance user experience by providing specific syntax highlighting for non - Windows
add ` ` optional ' ' local variable to cross - site script
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed an extra space in the removeCaptureListener method call to improve code readability and maintain consistency
changed the value of ` _ metaDataComplete ` from ` true ` to ` false ` in ` MetaData . java ` to ensure that the metadata
modified the ` removeTaskTarget ` method to execute asynchronously in ` RecentsAnimationController ` and adjusted bitmap creation logic in ` Thumbnail
added environment variable exposing for release flavor and Android flavor in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest
modified type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` to improve type handling
added tests for handling new line breaks in comments and Javadoc in AddImportTest . java to ensure proper formatting of line breaks in import statements and
added support for hubMode in AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to enable
modified skip policy creation in JsrFaultTolerantStepBuilder and simplified null check in JsrChunkProcessor to improve code clarity and
added a check for the existence of ` linkDb ` before adding it to the input path in ` IndexerMapReduce . java ` to
simplified the method lookup for setting the indexer thread pool in LuceneTestCase to improve code readability and maintainability by reducing
updated the address string format in GameCanvasImplementation . java to remove the ' 5000 ' suffix to simplify the address format for improved readability
added a copy method and updated job execution handling in MapJobExecutionDao to ensure proper serialization and deserialization of JobExecution objects
added a new file ` DownloadTest . java ` to implement a HTTP download test to verify the functionality of the ` Download ` functionality in a
fix language normalization in format . getlanguage ( ) . fix javadoc error .
updated error handling in GenericUDFRound to use UDFArgumentTypeException for better clarity to improve error reporting for different argument types in ROUND functions
added a null check for selectedVersion before processing the version tag in ManageDependencies . java to ensure robustness by preventing potential NullPointerExceptions when
added multiple AntPathRequestMatchers for various styles , scripts , polyfills , glyph icons , and Roboto in SecurityConfig . java to
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are no longer needed
added a condition to check if the class name matches the actual class name before processing bean definitions and updated type references accordingly to ensure proper handling of
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests related to HTTP redirect functionality
[ openwebnet ] use fix delay instead of scheduleatfixeddelay in the notification
refactor code to simplify socket event processing by directly using the socket wrapper to improve code readability and maintainability by reducing redundancy
deleted the SunToolkitSubclass . java file to the class is no longer needed in the project
replaced direct calls to ` worldTransform . getTranslation ( ) ` with a new method ` getTranslation ( ) ` in ` DefaultRenderableSorter
added a test to verify the registration of type handlers before primitive types in TypeHandlerRegistryTest . java to ensure that wrapper handlers are correctly registered
added a method to convert a raster to a RGB image if the alternate color space is an PDLAB to improve image processing flexibility by
replaced hardcoded URLs with constants from BuildConfig in CommonsApplication . java and Utils . java to improve code readability and maintainability
camel - 16400 : camel - health - add health check for component that have extension for connectivity verification .
fix a crash in the thorn chakram that could lead to a crash in the world .
added a test for altering a table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that the table and
updated offset initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve clarity and ensure correct document document handling
removed DrillMongoConstants . ID from the fields collection in MongoRecordReader . java to streamline the code by eliminating unnecessary fields
added a disconnect method to YeelightHandlerBase and DeviceBase , and modified WifiConnection to handle connection termination to improve connection management
added support for auto _ increment in database syntax to ensure proper handling of integer values in the parser
fix ( kubernetes - client - api ) : add test for sharedindexinformerfactory
server : fix template detail update for private template
refactor ShadowBitmapFactory to handle RobolectricBufferedImage and improve image size retrieval logic to enhance flexibility in image size retrieval and
removed deprecated constants from LauncherSettings and added new constants in LauncherProvider to streamline code and improve maintainability by eliminating obsolete
[ zeppelin - 4892 ] move data file to examples / broker / data
added a new legend variable ` legendTop ` and updated related calculations in ` PieChart . java ` to improve legend positioning and offset
added a condition to return early if the world transform detension is zero to optimize performance by avoiding unnecessary processing when the world transform is not
pdfbox - 4892 : add a new file maryscriptcreator . java to create a script that can be create from a file
added a remote host attribute to the flowFile in ListenHTTPServlet . java to ensure the flowFile reflects the request ' s remote host
removed duplicate code for closing the CompactionLogger and added file deletion logic to streamline the code for better readability and maintainability
updated license and location URL attributes from " xlink : href " to " href " in ComponentDescription . java to standardize the syntax for
( chore ) camel - aws2 - s3 : fix typo in s3streamuploadproducer
hbase - 25820 log regionserver state when cluster shutdown ( # 25820 )
added null checks before logging stopped spans in Slf4jSpanLogger . java and DefaultTracer . java to improve robustness by avoiding
trim whitespace from active options before adding them to the configuration to ensure consistent formatting of active options
added wallpaper depth preference handling in DepthController . java to enable dynamic wallpaper zoom effect based on user preference
updated the assertion in OverseerTest to check the success count of the overseer to ensure that the overseer ' s success
replaced the method ` getKernelVersion ( ) ` with a direct return of ` true ` in ` LinuxFileStore . java ` to
refactor ExecConstants class to improve code readability to enhance maintainability and facilitate future updates
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better test coverage
added a new method ` setScanAttributeForPaging ` in ` ScanUtil ` and updated ` TableSnapshotResultIterator ` to utilize
added a condition to check if lowRange is less than 1 , 000 , 000 in Request . java and RequestV2 . java to ensure
changed visibility of MemSizeEstimator variables from private to protected in AbstractCachedSource . java and adjusted cache size estimation calculation in AsyncWriteCache .
update zone ID assignment from host UUID to zone UUID to ensure accurate representation of host zone information
[ zeppelin - 4892 ] fix utf - 8 encode issue in zeppelin - zeppel
update filesystems . remove method to include zfs parameter to ensure proper removal of filesystems based on the provided zfs
changed the type of the ` obj ` variable and related methods from ` Object ` to ` String ` in ` HttpRequestBuilder . java ` to
updated polling duration in SoftAutoCommitTest from hardCommitWaitMillis * 2 to hardCommitWaitMillis * 5 and hardCommitWaitMillis *
try to prevent ` ` fail to take screenshot ' ' if browser be not available
renamed multiple classes related to the dial package to improve clarity and consistency in naming conventions
updated error logging statements in SyncQueue . java to ensure consistent formatting of error messages for clarity
updated the Ryuk version from 0.4 . 0 to 0.5 . 1 in the RyukContainer class to ensure compatibility
updated method call from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and
move patchy path into fmlclientlaunchprovider to avoid conflict with old version . jar
[ hotfix ] [ yarn ] remove yarnclient dependency from yarnitcase
add empty local map stats when no data be include in localmapstatsprovider
deleted the AllTests . java file to remove unused tests from the project
added handling for non - breaking hyphens and zero - width spaces in AbstractWordConverter to ensure proper formatting of special characters in string representation
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory starving behavior for large stack trace
replaced direct calls to ` getResultMappings ( ) ` with a method call to ` getResultMappingsForRowKey ( nestedResultMap ) `
added a flag ` eventHandled ` to the ` UIText ` class to indicate when an event has been handled
deleted the ` @ Controller ` annotation and renamed ` Weldby ` class to ` WeldModule ` to streamline the codebase by elim
[ tregex ] monitor capture group in empty check ( # 1358 )
replaced the initialization of ` liquibaseProLicenseKey ` with a protected field ` liquibaseProLicenseKey ` to
refactor member reader handling in RolapCube by introducing a new method setMeasuresHierarchyMemberReader to improve code readability and
make - g an alias for - h for debug info generation
mondrian : fix typo find by codespell on fossies . org
added support for retrieving Kotlin source paths in Kotlin - related classes to improve flexibility in handling Kotlin library arguments and
added aliases for character scripts in Character . java and modified main method in CheckScript . java to enhance character script functionality and improve code readability
refactor ExecutionCommand equality check to use ` . equals ( ) ` and add a utility method for converting JSON to ` ExecutionCommand ` to
refactor Mockito class to improve readability to enhance maintainability and facilitate future development
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to SystemScope class to provide a readable string representation of the SystemScope object
refactor CSS parsing logic to handle percentages and improve error handling to enhance clarity and ensure correct behavior of the cmyk ( )
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT ` to ensure correct handling of reverse
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated test method names in ` BackupHelper
updated toast messages to use localized strings for better readability to improve user experience by providing clearer context for toast messages
removed redundant parentheses in loop conditions in RendererUtilities . java and updated test cases in RendererUtilitiesTests . java to simplify logic and improve test coverage
replaced ` Iterator < JsonNode > ` with ` ArrayNode ` and added ` askSize ` and ` bidSize ` methods in ` K
added error handling for SQLite database column addition in FileContentProvider . java to improve robustness by logging a known problem when upgrading from 24
remove debug print statement from AsyncServletIOTest . java to clean up the code and improve readability
added hash table load factor and refactored data size computation to use a new method to improve code readability and maintainability by reducing
updated the ` buildView ` method to accept a ` Context ` parameter and set background resources for ` disableView ` , ` defaultView `
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : do n ' t allow vpcid to be null .
[ flink - 10955 ] [ test ] disable flink savepoint test on jdk 1.11
fix intellij warning on ` ` intellij ' '
updated loop condition to use ' i < actions . size ' instead of ' n ' and modified action processing logic to ensure proper iteration and prevent
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the new Bitmex exchange structure
add a test case to demonstrate that orgunit do n ' t have a parent / child relationship
fix npe in lodcontrol . getnumtris ( ) when spatial be null
updated lastTokenFiltered to true and adjusted position increment logic in ConditionalTokenFilter . java , and modified test cases in TestConditionalTokenFilter . java
set state after node in unsafestorenode and storefieldnode .
replaced the call to ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the event repository does not contain any events to ensure that the event repository is not empty before proceeding
remove unused parameter ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from ` AuthenticationAttrProcessor ` and ` AuthenticationAttr
added null key validation in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure that a specified key is not null and
removed the ` setTypeface ` method in ` CodenameOneTextPaint ` that throws an exception to prevent runtime errors when attempting to set
added ` open ` method implementations for ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
danielwagnerhall : remove deprecate method webdriverrunner . fail ( string )
modified the conditional statement in SolrRequestParsers . java to simplify the logic to improve readability and maintainability of the code
refactor DefaultResultSetHandler to use a private boolean variable ` useConstructorMappings ` instead of a private static class ` ResultObject ` to improve
updated SQL syntax in CreateTableGeneratorTest to use double quotes around the table name to ensure consistency in SQL syntax for foreign key creation
added filtering logic in VectorizationContext to handle filter mode correctly to ensure proper handling of boolean result types in filter expressions
updated the type specification for moveSelectorConfig in ExhaustiveSearchPhaseConfig . java to ensure type safety and improve code clarity
replaced the instantiation of ReorganizeTableStatement with a new method call to modifyDataTypeStatement to improve code clarity and maintainability by
refactor cluster name handling by replacing hardcoded string values with constants in multiple classes to improve code readability and maintainability by using defined constants
refactor connection handling and error logging in PeerGroup . java and ClientConnectionManager . java to improve clarity and maintainability of connection logic
added logic to convert style strings based on their corresponding values in Nano . java to enhance styling flexibility based on the specified styles
use adventurenbtconverter instead of custom nbt fix type
change the return message from " Use ` String ` to " No # toString ( ) on String " to clarify the purpose of the
8274296 : [ testbug ] jfr / event / thread / testthreadfailure . java fail with vm _ exit _
refactor retry logic to use ` FailureContext ` instead of ` int ` and introduce ` DataProviderRetryAnalyzer ` and ` DataProvider
updated the method to return the bandwidth index instead of the first token to ensure the correct token is returned based on the specified bandwidth
danielwagnerhall : add a couple of method to the webdriverbackedselenium class that do n ' t
removed the unused ` printWarning ` parameter from the ` doPrintEntry ` method and added public key algorithm details to simplify the method signature and
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks to ensure that dialog and frame components are opaque and not decorated before setting properties to ensure that dialog and frame components are properly managed and
changed the access modifier of the ` state ` variable from private to private final in ` DefaultProjectFilesystem . java ` to enforce immutability
updated RedisObjectFactory to use RedisStandaloneConfiguration for configuration to enhance configuration flexibility for sentinel connections
fix a problem with jabber account with delayed message not be send to the chat room .
replaced instances of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to use the
replaced direct creation of share operations with a service - based intent handling in FileOperationsHelper . java and OperationsService . java to improve code
removed the condition checking for isInjected in BeanDefinitionInjectProcessor . java and added @ Inject annotation in FieldPropertyInject . java to simplify the
updated loop initialization to use a variable ` yStart ` instead of ` getMinBuildHeight ( ) ` to ensure proper starting of the y -
do n ' t swallow npe in smackintegrationtestframework . setup ( )
tmi - jbang : do n ' t ignore interop subdirs when read exif with interop subdirs
added support for ENABLED _ LS mode in VersionTargetGraphMode and modified dependency executor initialization in VersionedTargetGraphCache to improve flexibility in handling
added checks for video format in DLNAResource . java to ensure proper handling of video formats in the application
refactor AutoMlClient to improve code structure to enhance maintainability and readability of the code
added a static load method to LwjglNativesLoader to control loading of native libraries based on the presence of ServiceManager to improve
updated CSVRequestHandler to support a new escape option and improved encapsulators handling to enhance flexibility in CSV parsing by allowing users to specify
added validation for the grant type ' s AUTHORIZATION _ CODE in ClientRegistrations and updated corresponding tests to ensure only the Authorization Code grant
enhanced exception messages in Throwable . java and SuppressedExceptions . java to include the throwable ' s cause and improved error handling to enhance
added a new query to ` DerivedTableIT ` and modified the ` ClientAggregatePlan ` to accept ` null ` as a parameter to
added handling for the " RSquare " value in RegressionEvaluator and a corresponding test case in StreamExpressionTest to ensure correct evaluation of
added handling for request headers in ThreadContextMDCServletFilter to ensure proper context attributes are added from the request
replaced direct casting of ` work ` with a local variable ` mapWork ` in ` SparkPlanGenerator . java ` to improve code read
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for caching images to improve code read
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer . java ` and added a
sulong : add an option to not cache interop function for method that do n ' t exist .
removed a redundant MILLISECONDS . sleep ( 500 ) call in AbstractBasicMockingIntegrationTest . java to improve code clarity by eliminating
added a new file ` KernCrash . java ` that implements a simple application using custom fonts to demonstrate and display a
added a fail ( ) method call in LinkedHashTreeMapTest . java to ensure proper error handling during tests
added a method to retrieve network interface IP addresses based on a prefix in NetUtil . java to improve functionality for retrieving network interface addresses based on
cancel a scheduled task when the housekeeper thread be shut down ( # 4248 )
[ hotfix ] fix checkstyle issue in util / grouptransferservice . java
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added a new test file ` Issue247Test . java ` with a JUnit test class to validate the functionality of the ` TreeMap
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
updated validation logic in ValidatorTest . java to check if the current year is a leap year before validating max age to ensure that the test correctly
added error handling using GrblLookups for alarm and error codes in GrblController to improve user feedback by providing more detailed error
added a condition to return a home button label if there are no screens and adjusted the return statement accordingly to improve user experience by providing
removed the ` count ` parameter from the ` getTrades ` method in ` BittrexMarketDataService ` and related calls to
updated ConsoleReader and MemoryHistory classes to improve text formatting and index handling to enhance readability and maintainability of the code
removed the " . jdk " suffix from the jdkPath assignment in JavaBuild . java to streamline the path generation process for better
refactor code to replace calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` across multiple classes to
updated JFCModel to accept a logger for warning messages and modified related method signatures to enhance logging capabilities by allowing more flexible logging during model
added a validation check for the tolerance value in MaximumInscribedCircle . java to ensure that the tolerance value is positive to prevent illegal argument exceptions
added methods to create and drop views in TestUtil . java and implemented privilege checks in DatabaseMetaDataTest . java to enhance view management functionality and
added platform - specific handling for checking stable float and double expectations in NaNTest . java to ensure tests are skipped based on user - defined
added a new ` DesktopTaskbarUIController ` class and updated ` TaskbarManager ` to use it to set hotseat icons
add progress tracking and button state update to mod item adapter to improve user experience by ensuring UI updates occur only when necessary
refactor file handling methods in Files . java to improve code readability and maintainability
refactor AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use Collection instead of Set for interceptor collections to improve code clarity
changed the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and modified the ` ChainingServicesManager ` class to simplify the
fix resourcepackloader not generate packinfo for mod file
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added ` grow ` methods to the ` Cell ` class for setting expandX and expandY properties to enhance flexibility in cell rendering by allowing
refactor DefaultInputHandler to use a final map for bindings instead of a separate map to improve code readability and maintainability by reducing
( chore ) camel - activemq : fix test flakiness
replaced ` long [ ] [ ] ` with ` byte [ ] [ ] ` for memory allocation and added a memory fail count check to
deleted the JobParametersPrototype . java file to the prototype class is no longer needed for job parameters
added a securityEnabled flag and updated related methods in MappingsTable and TableResolverImpl to support security features to enhance functionality by allowing users to
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable temporary file output for
fix eos propagation workaround for aws sdk v1.2
[ java ] do n ' t increment producerlimit if it ' s already at the end of networkpublication .
added a condition to check if dbInfo is null and output options are no info to ensure proper handling of output options when no database information is
enable ssl = false by default in presto - driver uri
added DOMOutputOptions to the build method in DOMConverter . java to enhance HTML output options for improved rendering
refactor assertions in Assert . java for improved clarity to enhance maintainability and readability of the code
added ' retain ' option to event and publish to allow for more flexible handling of retain message .
removed @ JsonIgnore annotation from TestResultSummary and added testCaseName in EventSerializationTest to ensure proper serialization of test cases in event serialization
[ flink - 2329 ] [ table - planner - blink ] [ table - planner - blink ] fix the name of
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
improve abstractsessioncontext . settimeout ( ) to be thread - safe
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
change log level from debug to trace when no firmware update handler is available for a thing
added unit tests for retrieving null values for date and timestamp in GetObjectTest . java to ensure correct behavior of date and timestamp retrieval in the database
refactor string handling in ` StringSubject ` and ` Subject ` classes and add new tests in ` RelabeledSubjectsTest ` to
added a test for multiple repository permissions in UserModelTest to ensure correct functionality of repository permissions across different teams
added a new file ` Test7088020 . java ` with method handle testing for ` WrongMethodTypeException ` to ensure proper error handling
refactor audience validation logic to use a HashSet for better clarity to improve code readability and maintainability by reducing duplication
refactored cache refresh methods in AbstractDataChangedListener and updated synchronization in HttpLongPollingDataChangedListener to improve code clarity and ensure
replaced direct usage of ` _ stderr ` with null and modified error logging logic to handle null streams gracefully to improve error handling by avoiding
added a warning ordering constant in the Warning class and updated the BasicEventSimulationEngine to check for active stages to ensure warnings are only added when
updated the parameter used in the optimize method from offlineTableConfig to realtimeTableConfig to ensure the query optimization behaves correctly for real -
updated SQL command execution in ` PhoenixHBaseAccessor . java ` and added property handling in ` UpgradeCatalog240 . java `
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added Bluetooth class handling methods and tests in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enhance functionality and ensure Bluetooth class is
fix typo : ` ` contains ' ' - > ` ` containsprofile ' '
fix error message when sum ( ) be call with null or empty list
removed the call to graphModel . getGraph ( ) when calling readUnlockAll ( ) to simplify the code by eliminating unnecessary dependency on
updated coreNodeName construction to use getCoreName ( ) instead of getNodeName ( ) to ensure the correct coreNodeName is generated from nodeProps
change chatactivity to use backpressure update instead of toolbar update
refactored test cases in TaggerParserPosTagCompatibilityITest . java to improve code clarity and maintainability
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the condition in ` elemtype ( t ) . tag < = lastBaseTag ` and added a new class ` T7005671
updated calculations for superTriangle [ 0 ] and superTriangle [ 3 ] in DelaunayTriangulator . java and modified test class
added @ Override annotation to several ArrayList , HashSet , LinkedHashMap , List , PriorityQueue , Set , Comparator , and Vector classes to ensure that the
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability by using a builder pattern
refactor stack overflow state management in StackOverflowCheckImpl . java to improve clarity and maintainability of state management
added shadow methods for SQLiteDatabase and ContentValues in Robolectric and removed deprecated methods from ShadowContentValues to streamline Robolect
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ByteArrayComparator ` and updated comparison logic in ` BKDWriter . java ` to utilize a
replaced language , country , and variant with script , and updated locale initialization logic to enhance locale handling by incorporating script support and
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct icon is displayed for the last set text
corrected a typo in the warning message from " Confimap " to " ConfigMap " to improve clarity and accuracy of the warning message
replaced specific test class imports with a call to a suite runner method in DefaultConfigurationTestSuite . java to improve test reliability by util
added trimming of whitespace in GzipFilter and updated initialization parameters in GzipFilterDefaultTest to ensure consistent handling of whitespace and improve test coverage for
updated assignment of _ outputType in Response . java to ensure consistent output type handling
updated the default implementation string from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest JNI framework
refactor ViewCapture to use FutureTask and Executor instead of Handler and Message to improve asynchronous handling of view properties to enhance performance and maintainability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - improve feature
added a check for the existence and creation of the parent folder in GitBlit . java to ensure the parent folder exists before proceeding to
updated nodeDiscoveryBindIp default value from " 0.0 . 0.0 " to " 127.0 . 0.1 " to
fix the wrong default handler name in camel - jbpm
pdfbox - 4892 : make class private , a suggest by valerybokov
replaced instances of " Managed by your company " with " WorkTab FOOTER " in the AllAppsGridAdapter and Alphabetical
updated multiple Java files related to Dalvik analysis and transformation to improve code consistency and maintainability across the codebase
fix ( prettyprint ) : print super of type parameter in super constructor
[ hotfix ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder and StringQuery classes for consistency and clarity to improve readability and maintainability of the code
replaced the eviction counter implementation with an AtomicLong and updated related methods in ConcurrentLRUCache . java and FastLRUCache . java
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
change condition from checking if localHost is not an Inet4Address to checking if intendedDestination is an Inet4Address to ensure correct validation of
set the data and source root for the main frame in the opengrok environment
added constructors for MarkedClientEnabled and MarkedServerEnabled classes to log successful initialization for Solon Admin client and server to improve logging
refactor TableEnvironment class to improve code readability to enhance maintainability and facilitate future updates
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` and ` ExecutorTestHelper ` to streamline
removed the ` hangingTscTimeout ` parameter from multiple method signatures and added a null check in ` JSweetTranspiler . java
added serialization support for GeoLocationRequest and GeoLocationResponse classes in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and Geo
replaced ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` and updated error messages in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest `
do n ' t throw exception for non - HPSF document , add unit test for jxl . xls
make sure we do n ' t throw concurrentmodificationexception when setvalue ( )
( chore ) camel - nio : wait for the channel to be available before return the connection .
added checks to ensure that ` Optional . of ( ) . hasValue ( ) ` does not compare ` actual ` and ` expected ` to improve
updated return statement in BackgroundAppState and modified mMidProgress calculation in ShelfScrimView to include VERTICAL _ SWIPE _
added a null check for the navigation object in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 1193 : fix image position for classic bounding box ( and label rectangle )
updated ErrorOccuredInOnExceptionRoute . java file to improve exception handling logic
updated scheduling method from scheduleAtFixedRate to scheduleWithFixedDelay and changed log level from info to debug in AstroDiscoveryService . java to
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code clarity
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable the test due to hang
updated import statements in GuiceFactoryTest . java to include specific dependencies instead of a wildcard import to improve code clarity and maintainability by
added system feature management methods in RobolectricPackageManager and corresponding tests in RobolectricPackageManagerTest to enhance functionality by allowing
added a new constant for the path postfix and refactored the path property handling in RCAFrameworkLoader . java , along with creating a
removed logging of " Started cancellation watch dog " to clean up the code and improve readability
added a null check and initialization for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
replaced ` needInline ` boolean flags with ` needStartText ` and ` needEndText ` flags in ` BoxBuilder . java `
replaced ` collectAndSendTelemetryData ` with ` collectAndSendTelemetryDataAsynch ` and added a method to retrieve the
removed conditional database type alteration for UPGRADE _ ITEM _ TABLE column to simplify code by eliminating unnecessary database type checks
updated error messages in BaseTableDataManager to provide clearer guidance on permissions for index and temp resources directories to improve clarity of error
updated method signatures in DatasetUtilities . java to improve code clarity and maintainability
added selector ID to the key string in mmm Matcher . java to improve clarity of selection key representation
updated debug logging format in GouraudShadingContext . java for consistency and clarity to improve readability and maintainability of the code
updated taskbar alpha handling and visibility logic in multiple controller classes to improve visibility control of the taskbar based on device demonstrations and
removed unnecessary whitespace from KeyExchange . java to improve code readability and maintainability
added a check to ensure the connection is an instance of JdbcConnection before attempting to execute a SQL statement to avoid potential ClassCastException when accessing the database
refactor file index handling in ServerMainTest . java to use a variable for the file name to improve code readability and maintainability by
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and Display classes to provide access to the media
fix rendertileenchanter and rendertilepylon not use shaders if confighandler . useshaders be false
updated the ` BindableFilter ` condition in ` DruidAdapterIT . java ` and changed the return value in ` DruidAdapterIT
updated the instantiation of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
improve xmpmetaparser to make it easy to configure the factory
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional statement with a while loop for checking for the presence of " < script > " in the result to improve code readability
renamed the variable for varargs access from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to
replaced calls to ` getTemplateProperty ` with a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve log clarity and reduce log verbosity
updated ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to utilize ` HubRegisterResponse ` for better handling of hub registration
updated byte handling in multiple Java files to use ` Byte . toUnsignedInt ( ) ` instead of bitwise operations to ensure proper handling of unsigned
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
change default dependency file from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to enable caching by default
changed the rangePannable property from true to false to disable range panning in the CategoryPlot class
updated the logic for setting the main active state and handling the work mode switch to ensure proper management of views when the active page is WORK
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java
added handling for CancellationException in FunctionTest . java to improve robustness by preventing execution when the CancellationException occurs
changed constructors in ` JarFileResource ` and ` JarResource ` classes from package - private to protected to allow subclasses to access these constructors without
refactor DefaultTrackSelector to improve code structure to enhance maintainability and readability of the code
added a waiting loop for unseq merging in LevelCompactionTsFileManagement to ensure proper timing during compaction operations
updated the fee currency expected in the BTCMarketsAdaptersTest from AUD to BTC to ensure the test reflects the correct currency
updated SQL query syntax and refactored test cases in HibernateDTOProjectionTest and JPADTOProjectionTest to use a more descriptive
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
removed unnecessary whitespace in the onComplete ( ) method call to improve code readability and maintain consistency
[ beam - 14825 ] remove SSECustomerKey deserializer and replace with JsonPOJOBuilder to improve flexibility in building SSECustomerKey
added handling for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory and improved exception message in RangePredicateEvaluatorFactory to enhance functionality by providing
refactor variable names from ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve cl
removed unused imports and print statements from ParameterInfo . java to clean up the code and improve readability
added AC3 support and improved playback state management in PlaybackController . java and VideoManager . java to enhance playback functionality and enhance timestamp
modify the return statement in LocalNode . java to include a JSON response with a null value to ensure that the response returns a JSON response with
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement . java and DiskFileItem . java files to address deprecation warnings related to
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to
refactor RTimerTree class to improve readability to enhance maintainability and clarity of the code
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
test and fix for issue # 358 ( centered test text do not look nice )
updated client thread and scheduler initialization in ClientConnector . java to include unique names for client threads and scheduler to improve clarity and maintainability of
refactor ViewResultsFullVisualizer to use private JSplitPane and improve layout configuration to enhance code readability and maintainability by reducing
added support for retrieving and adding user phone numbers in ScimUserEndpointDocs . java to enhance user experience by providing a clearer and more
changed access modifiers of classes and methods in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to public and added private constructors to enhance
added null checks and error logging for HTTP responses in JsonHttpPropertyRequest and URLStreamProvider classes to improve error handling and provide clearer feedback
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` DEFAULT _ PARALLEL ` in the
[ hotfix ] [ test ] fix checkstyle violation in test - vmware
updated error handling in CardImpl to include SCARD _ E _ NO _ SMARTCARD to improve robustness by catching SCARD _
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system - specific warnings during test execution
camel - bindy : add support for one - to - many and one - to - many key - value pair in camel - bindy
set ` ` useowner ' ' and ` ` usetimestamp ' ' default value to false
change parameter type of ` runAndCheckException ` method from ` Runnable ` to ` ThrowingRunnable ` to improve type safety and clarity in
replaced direct calls to ` toString ( ) ` with null checks for ` via ` , ` viaContext ` , and ` pathFromSeed
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored method calls in Liquibase
change default value of proxy . cert . validity to 90
replaced ` frame ` with ` smoothDelta ` and updated related calculations in ` ThreadHandler . java ` to improve handling of smooth transitions and
added a condition to check if paginator is null and updated URL construction logic in HttpBatchReader and HttpScanBatchCreator to improve URL handling and
added null check for CompactionInfoClient and created a test for handling exceptions in FindNextCompact and MetaException to improve error handling and ensure
fix shadowfragmentactivity # onsaveinstancestate to call fragment # onsaveinstancestate instead of fragment # onsavein
reformatted code for better readability in BatchResourceFactoryBean . java to improve code clarity and maintainability
added a test for parsing color references in ColorResourceLoaderTest to ensure proper handling of Android color references in the color resource loader
added error handling for NoResultException in AbstractJPAQuery and created a test for null as uniqueResult in AbstractStandardTest to improve robust
refactor the way communities are retrieved by introducing an owner variable and adjusting the logic for adding communities to improve clarity and
updated depth preference retrieval to use LawnchairApp to ensure compatibility with the current application context
removed and re - added the import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method and adjusted its usage in ` Manager ` and ` E
add null check for extensions in ExtensionStack . java and implement a test for toString ( ) in ExtensionStackTest . java to improve robustness
2 . x : fix flatmap race condition when inner error occur
updated connection timeout settings in MultiGetRequest and ControllerStarter , and added warning logs for connection timeout issues in ServerTableSizeReader to improve
reformatted the assignment of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency in formatting
replaced ` NewModelTest ` with ` ModelTest ` in the ` LwjglDebugStarter ` class to update the test
updated EdgeSyncCursor to use new fetchers for SystemResourcesEdgeEventFetcher and removed the inlineImage method in BaseImageService to streamline
added a new test for output hash calculation in CachingBuildEngineTest and modified the caching logic in CachingBuildEngine to ensure that output
camel - 14836 : camel - netty - allow to configure whether to use bytebuf or not .
updated the method call to use ` Warehouse . getQualifiedName ( tbl . getTTable ( ) ) ` instead of ` alterTbl . getOld
updated IllegalArgumentException to include a descriptive message to clarify that the Vertx instance must be created with the preferNativeTransport option to ensure
test : add test case for enum type handler serialization
refactor StreamEx class to improve code readability to enhance maintainability and ease of future updates
added hint settings for JavaEE query and lock timeout in SessionImpl . java to improve query performance by reducing unnecessary timeout settings
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a single instance of ` ILoggerFactory `
replaced multiple instances of ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , list ) `
added orientation comparison logic in TaskbarManager to ensure proper handling of window orientation changes
add xml escape for occupant nickname in jabber chat room
updated the ` longStackPut ` method signature in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable references and enum checks
jbrules - 2309 : fix broken test in drools - integration - tests
updated conditional statements in DLNAMediaInfo . java , DLNAResource . java , and FFMpegVideo . java to
updated NBWriteServlet to accept an unlimited boolean parameter and modified the TestWriteListener to accept it to enhance flexibility in handling unlimited
fix incorrect total difficulty when import a block
simplified the action assignment logic in DefaultPlaybackController . java to improve readability and maintainability of the code
replaced synchronized list with CopyOnWriteArrayList for knownLibraries and modified verification cache cleaner method to improve thread safety and ensure thread safety when accessing
added uniform allocation logic and adjusted position calculations in AllAppsView . java to optimize memory usage and improve positioning accuracy
added a check for the presence of a colon in the key variable to ensure proper validation of the presence of a colon in the key
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance security by ensuring proper bean resolution for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve code readability and maintainability by utilizing a more
added a method to remove trailing slashes from the StringBuilder in IoUtil . java to ensure proper handling of trailing slashes in the string builder
added a static final instance of PatternsMatcher and a new method ` matchesAny ` to check for pattern matching in a string to enhance functionality
updated error message formatting in LoadIncrementalHFiles . java to improve clarity of error messages when hfofDir is null
fix fire not be able to place a block on potion .
updated the method call syntax for the method ` beginOrAdjustReorderPreviewAnimations ` to improve code readability and maintain consistency
updated calculation of decreasePercent in ContractStateCapsule . java and adjusted formatting in ReceiptCapsule . java and ResourceProcessor . java to improve
added debug logging for unready input and updated method calls in AsyncContentProducer and BlockingContentProducer to improve debugging capabilities and ensure proper handling of
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that the weightField parameter is not mandatory to prevent runtime errors
added variable expansion functionality for " Info . plist " in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest .
fix turret shooting , close # 1793
updated the ` adaptOrder ` method to return an ` Object ` instead of a generic ` OrderCreateApiRequestBuilder ` to improve type safety and
added a new file ` PreParseGrammarTest . java ` for testing XML grammar preparation to facilitate testing of XML schema parsing in
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings related to missing dependencies in the codebase
added font override functionality in ExtendedEditText . java to ensure consistent font rendering across the application context
added a null check for currentUser in AuthorizeTag and implemented a test for unauthorized access in AuthorizeTagTests to ensure proper handling of unauthorized
camel - 14284 : fixed the unit test error of camel - cxf
added setupdata ( ) method to the jdbcgeometrytestsetup class to ensure that the test data is properly initialized
removed the import of DumpHandler from MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] add check for closed backend closeable registry in backendrestorerprocedure
add server . rmi . create property to create rmi registry
replace string . join with stringutils . join for anticompact range logging
updated display metrics retrieval in multiple classes and modified test cases for qualifier handling to ensure accurate display metrics and improve test coverage for qualifier configurations
[ java ] add cluster member id to service heartbeat record .
added a conditional check for the major version in TestThreadMXBean . java and adjusted the number of attributes based on the version check to ensure
added handling for NaN values in the evaluate method and modified hash code calculation to ensure correct handling of negative and positive infinity values and improve hash code
updated debug logging format and improved error handling in AjaxListener . java to enhance readability and clarity of error messages for better debugging and
added routes for " authenticate " and " authorized " in Routes . java and implemented authentication and authorization methods in AuthenticityController . java ,
added assertion to check if the next node is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java to improve
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure proper logging context for the HttpClientRequestImpl class
replaced multiple instances of ` compareFalseFirst ` with ` compare ` for improved comparison logic to enhance code clarity and maintainability by
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
draw image with crop box if it ' s not already crop
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new field ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` Widget
tika - 3351 -- add content - type - name to the submd if it exist .
updated the URI construction in ThumbnailsCacheManager to use localId instead of remote path to improve clarity and consistency in file ID generation
added support for marking and resetting the input stream in the Source class to ensure proper handling of input streams and prevent potential memory leaks
added @ Deprecated annotations to AsyncProcessor , BehaviorProcessor , AsyncSubject , and SerializedSubjectTest classes to indicate that these classes are outdated and should
added configuration property to show or hide error stacks in the error page to enhance user control over error handling in the application
bug 10701 : fix the bug in deleteaccount method - if deleteaccount fails , log a warning .
removed unnecessary null checks for foreign calls in SPARCArithmeticLIRGenerator . java to simplify the code by eliminating unnecessary exceptions
[ drools - 5305 ] throw unsupportedoperationexception when use legacy drl api
refactor onRequestPurchaseResponse method to use a runnable for handling purchase results to ensure proper execution of purchase error handling on the UI thread
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to improve test reliability by allowing
refactor resource name qualification logic in ShadowAssetManager . java to ensure proper handling of leading ' @ ' characters to improve clarity and
deleted two files MrefStat . java and MrefStat1 . java , and added new classes MrefStat and MrefStat1
added a check for blank scope in DependencyInsight . java and updated its usage in DependencyInsight . java to ensure a default scope is
added error handling for missing trades and bad status in BTCETradeServiceRaw . java to improve robustness by handling specific error messages
( chore ) camel - core : use hamcrest assertion instead of junit in tests / integration / web - infra -
bitcoinuri : add getpaymentrequesturls ( ) , add test
[ optaplanner - 383 ] throw a more specific exception when use a parameterized collection .
removed duplicate lines setting folder info in FolderPagedView . java to streamline code by eliminating redundancy
fix ( griffin ) : only notify the event writer if the node have the lock owner .
[ hotfix ] [ table - common ] make basicabstracttuple throw npe if the value be null
refactor LintUtility to use InputResourceUtility for loading linter configurations to improve resource management and error handling for linter configurations
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to run updates on the UI thread to
fix incorrect index pass to inventory . oninventorytick ( ) .
added support for the OCELOT _ BABY event in PlayerEvents . java to enhance event handling for the OCELOT
[ hotfix ] [ state ] add @ publicevolving annotation to statettlconfig
added null check for ` x ` in ` PreparedStatement ` and updated ` set ` method accordingly to handle null values to ensure proper handling of null
[ java ] add more information about valid recordings to archive tool output
replaced string concatenation with single quotes for newline character in StringBuilder . java to ensure consistent formatting across different operating systems
added a new test method ` jsonSnapshot ` in ` SiteSnapshotVariationsTest . java ` to validate JSON serialization format for snapshot data to
added a method to remove transaction and block entries from the cache in BroadTest . java to ensure that transactions and blocks are properly removed from
added functionality to enable or disable the lens lens feature in AmcrestHandler and DahuaHandler to enhance camera functionality by allowing users to
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify error handling by
refactor ChangeLogIterator constructors to accept both ChangeSetList and ChangeSetFilter lists to improve clarity and maintainability of the code by
do n ' t swallow guest exception in launcher . exit ( 1 )
( chore ) camel - ec2 : use getenvorsystemproperty ( ) instead of getenv ( )
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility with serialization standards
refactor whitespace handling in SpacesVisitor to use dropParentUntil for better clarity to improve code readability and maintainability by reducing
# 236 - enh : add servercacheoptions . copy ( boolean nearcache ) ( # 2365 )
added a test for hidden border visibility in the VisualRegressionTest class to ensure that the border is not visible on a floated element with
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and
updated KucoinExchange . java to replace LIVE _ URI with PROD _ URI and improved exception handling logging to enhance clarity
updated resource loading logic and modified search path handling in SpringResourceAccessor . java to improve resource path accuracy and enhance search functionality
updated unit tests to use " µ g / m ³ " instead of " μ W / m ³
replaced the method ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java `
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
fix ` ` alt ' ' field not be resolve in latex parser
added a check for Robolectric legacy mode in ResourcesTest . java to prevent tests from running in legacy mode
added a conditional check for FirebirdDatabase before returning the DOUBLE PRECISION data type to ensure compatibility with Firebird databases by returning a specific DOUBLE
added null checks for ' dataSource ' and ' transactionManager ' in DefaultBatchConfigurer to ensure proper initialization of ' dataSource ' and ' transaction
test : add @ api to unittest stubs package - info . java
updated command to use IP address and modified test timeout settings to improve test reliability and ensure proper timeout handling
# 1187 - ebeanserver _ savealltest : use try - with - resources for transaction
updated TermScorer to conditionally use FREQS or NONE based on scoreMode to ensure correct scoring behavior based on score requirements
update metric retrieval logic to use first non - null checks and set metrics to null to improve robustness by preventing null values from being returned
server : do n ' t search account data center virtual account when vm be in deploy - in state
refactor DynamicPartitionPruner to utilize a new method for finding target object inspectors to improve code readability and maintainability by redu
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStepTest `
added logic to set the selected row in the ThrustCurveMotorSelectionPanel based on the selected row from the table to ensure that
add a helper method to assertthrows arraystoreexception to allow subclassing of arraystoreexception
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added support for specifying the environment name in the HttpClientBuilder and HttpClientConfiguration classes to enhance the flexibility of HTTP client configuration by allowing users to
refactor session creation and access time handling in MemorySessionStore . java to improve code readability and maintainability by encapsulating session creation logic
updated assertions in IssueTest . java and changed the type of results in Reporter . java from Set < String > to Set < Object > to
updated ByteArrayDataSource initialization to use a default content type if the file ' s content type is null to ensure that a default content type is used
added activationrequestdenied event to prevent request from be send to the system .
added @ SuppressWarnings ( " serial " ) annotation and improved code formatting in GraphApplet . java to enhance code readability and maintainability by
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` RecentsView ` and modified visibility of ` updateSnapshotRadius ( )
added logging for schema generation and updated revision assignment in StaticMicroserviceVersions . java to improve visibility into schema generation and ensure compatibility with the latest
modified the return type of the ` put ` methods in ` ArrayMap ` from void to int to return the index instead of void to provide
updated KafkaContainerCluster to use a startup timeout and improved broker handling to enhance reliability and reliability of the Kafka container startup process
( chore ) camel - rocketmq : do n ' t retry if send back message fails
updated header checking logic in StaticServerHttpHeadersWriter and added a case sensitivity test in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check before loading a listener class to ensure proper access to the listener type before adding it to the list
added a custom list and image adapter for managing applications in the ApplicationsFragment to enhance the user interface by providing a customizable list of applications
updated the applyIcon method to accept both mIcon1 and mIcon2 parameters and modified the null check for iconView and task to improve
updated DownloadTracker and DownloadManager to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
fix a bug in basesqmtosqlastconverter where the current clause be not the insert clause .
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests and removed the ExecutionContext variable from HibernateCursorProjectionItemReaderIntegrationTests
added a Poller class and modified input stream handling in DataInputStreamWithTimeout . java to improve thread safety and error handling during the polling process
added ENABLED _ TS case to VersionTargetGraphMode and imported ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance performance by
refactor UpgradeCatalog150 . java to improve code structure to enhance maintainability and readability of the codebase
renamed ` createTestNet3 ` to ` createOldTestNet ` and updated related method names for clarity to improve code readability
do n ' t update geos when there be only one geos in property view
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and modified ` HdfsIndexOutput ` to extend ` BufferedIndexOutput ` to
added a conditional check to set the graphics clipping based on the status of the clipping path to ensure proper clipping behavior when the clipping path is not
removed synchronization for setting localAddress in SocketChannelImpl . java to simplify the code and improve readability by eliminating unnecessary synchronization
refactor row manipulation in TemplateTransformer to use a new helper method to improve code readability and maintainability by reducing duplication
added a utility method ` isWindows ( ) ` in ` Utils . java ` and modified the file renaming logic in ` Wallet . java `
replaced the use of the ALPHABET _ STRING array with a new CHECK _ DIGIT _ STRING constant in Code39Reader . java to
do n ' t generate unexpected value for generic / void return type
removed the conditional check for ' fieldType . stored ( ) ' in the IndexingChain . java file to streamline code by eliminating
fix ( sql ) : fix parse floor partial timestamp with nanosecond precision
fix lwjglcanvas # setrunnablestacktraces to always return null
updated description formatting in AbstractGCSProcessor . java for clarity to improve readability and maintainability of the code
updated the method name from ` assertInitialized ` to ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and
updated method calls to use " single " instead of null in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure
refactor FaultTolerantChunkProcessor to use filterCount instead of size and adjust related methods for better data management to improve efficiency and cl
added a tab to the ` tabbedMethod ` method and refactored file handling in ` T4994049 . java ` to
replaced conditional checks for WindowsTerminal with assumeTrue method calls in ConsoleReaderTest . java to improve code readability and maintainability by redu
removed the check for ` userInfo . isAdmin ` when processing sessions in ` GetFeedbackSessionsAction . java ` to simplify session retrieval logic by elim
updated calculations for newSelection and adjusted threshold values for velocity and positioning in AllAppsView . java to improve user experience by adjusting selection
bugfix # 258272 , do not call threadinfo . initialize when profiledappthreads be 0 .
added loadModelList ( ) and refresh ( ) in DataModelManagerDialog and modified connection handling in DbConnectionDialog and ExportPanel to improve
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` for consistency and clarity to improve code readability and maintainability by
refactored the segment size calculation in DocumentsWriter and added a new test for no documents index in TestIndexWriter to improve code cl
fix an issue with the armature modifier that cause an exception to be throw if the dvert variable be null .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replace direct creation of UnsupportedOperationException with a predefined instance that does not fill in stack trace to improve code readability and maintainability by avoiding unnecessary
updated the method to return an average of line height instead of a fixed value based on the size of lines to improve accuracy of label rendering by
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
updated quote handling logic in AVA . java to improve string processing to ensure correct parsing of quoted strings
replaced Long . valueOf with IdConversion . convertToLong and updated traceId handling in the ServletHandlerInterceptor to improve type conversion logic and ensure
added unit tests for the ServerDatagramConnector to verify the functionality of the ServerDatagramConnector to ensure that the server correctly handles and handles
updated the assertion in TestSqlEntityProcessorDelta . java to correctly handle the first element of the COUNTRY _ CODE _ s string to ensure
refactor caching logic in Cache . java to improve performance and maintainability of cache management
updated variable names from ' e ' to ' ev ' and modified scope settings in ResourceSetRegistrationEndpoint . java to improve clarity and ensure
updated the ` doBefore ` method and modified the ` newSearcher ` call in ` TestUnifiedHighlighterTermVec . java `
added a JFrame and JTextArea to the GcodeTable class with a button to add rows to a GcodeTable to facil
updated WEBAPP _ CONNECT _ TIMEOUT to use a dynamic configuration value to improve flexibility in determining web application connection timeout
updated various classes to improve code clarity and type safety to enhance maintainability and readability of the codebase
updated TestMediaService . java file to improve test coverage for media service functionality
removed the constant ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from the Messages class to streamline the
add a new file marketsprinttool . java to print market currency information in a standard locale
add hostname validation to endpointaddressinterceptor to ensure that account id do not contain illegal character
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality for improved API
rename ServerSpanThreadBinder . java file to improve clarity and maintain consistency in naming conventions
update user pointer reference from ` getUserPointer ( ) ` to ` userData ( ) ` in ` BulletPhysics . java ` and
replaced the " Location " field with " the _ geom " and added " number " field to the Csv2Shape builder to enhance cl
updated gas calculation from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity and
refactor parameters in the Parameters class to improve code readability and maintainability
added setIgnoreNullValues ( true ) to piePlot in MultiplePiePlot . java to ensure that null values are ignored when plot
refactor ResourceBundle . java to simplify loading and cache management logic to improve code readability and maintainability by reducing duplication
pdfbox - 4071 : fix typo find by codespell on fossies . org
allow execution script action to be allow during edit
added a userModified flag to LoginSamlAuthenticationProvider . java to ensure the user has been modified before proceeding
added a new file ` TestSealedObjectNull . java ` that tests the behavior of a ` SealedObject ` with a null cipher
replaced the ` onOpen ` method with ` succeeded ` method in ` ConnectPromise ` and updated the corresponding call in ` WebSocketClientConnection
added a static set of Material instances and updated conditions for checking if SNOW is present in 1.16 . 5 to ensure compatibility with newer
added an ID field and updated trade handling in CryptsyAdapters and CryptsyPublicTrade classes to improve trade tracking by incorpor
added error handling for closing the synchronization MSC connection to ensure proper resource management and prevent memory leaks
fix ( server ) : use random seed in glowserver . getrandomseed ( )
updated the device profile for Nexus 5 and added it to the device profiles list to enhance user experience by providing a new device profile for N
2 . x : fix refcount and refcount not be reset when disconnect .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added a new token type ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` and updated formatting logic in ` FormatVisitor ` and `
update file existence and existence checks in SaveTask . java and add unit tests in SaveAndLoadTaskTest . java to ensure files are not
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during time series operations
add handling for mutable logevents in SmtpManager to ensure proper serialization and deserialization of mutable log events
replaced ` LengthLike ( ) ` with ` NonNegativeLengthLike ( ) ` for the ` PADDING ` property in ` PrimitiveProperty
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` across multiple resource classes to simplify context
refactored methodirbuilder . buildexceptionentries ( ) and sootworldbuilder . buildexceptionentries ( ) to use a single body
updated error message formatting in AndroidPlatformTarget . java to include system properties for clarity to improve user experience by providing clearer guidance on
reduced the cache size from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if the start state is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
added a try - catch block to handle NullPointerException when loading KeyStore instances to ensure a default KeyStore is used when the input is null
updated the port handling in UpstreamCheckUtilsTest to use a dynamic local port instead of a hardcoded value to improve test reliability by
bugfix # 226606 , ` ` max ' ' do n ' t take panel dimension into account .
added checks for OpenGL extensions before setting shader storage limits in GLRenderer . java to ensure compatibility with OpenGL versions that do not require shader
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
skip save - all notification for non - project data ( # 2329 )
added UTF - 8 encoding handling in ZQLJobManager to ensure compatibility with different file encoding
added a check to ensure args length is greater than 0 before verifying if the last argument is an instance of Table to avoid potential ArrayIndexOutOfBoundsException
replaced hardcoded string values with a constant prefix in the FakeOSSOHeaderDecoder class to improve code readability and maintainability by
added @ Deprecated annotations to several classes and options in GenerateJavaSources . java , Config . java , and JavaGeneratorMojo . java to
removed multiple debug log statements related to Derby driver class version checks to streamline logging by eliminating unnecessary error messages
added a timeout attribute to the fireAllRules test method and refactored its usage in CepEspTest and CepJavaTypeTest
replaced parallelStream ( ) method with stream ( ) method in PersonNameSuggestionProvider . java to improve performance by reducing the number of
updated logic in HubUpdater . java to check if the Liquibase Hub mode is already set before proceeding to ensure proper handling of
added new constants for Java version checks and corresponding test cases in Constants . java and TestDDRExtensionGeneral . java to ensure compatibility with different
updated logging messages in FontFamily . java for better clarity and added a new DebugFonts . java file to enhance debugging capabilities for different
added HTTP version check in NegotiatingServerConnectionFactory . java and updated imports in ALPNNegotiationTest . java to ensure compatibility with
added import for RateControl and set no rate control for HTTP2 in MaxConcurrentStreamsTest . java to ensure proper handling of rate control in
added a new file Test6741426 . java that implements a Runnable for JComboBox and JTextField using Nimbus Look and Fe
updated the error message in the CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of the error
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that managed and external directories are only made if they are
move s3copyobjectrequest to com . cloud . bridge . service . core . s3 package
refactor setup methods in SettingsActivity to remove accentColor parameter and use viewThemeUtils for setting category titles to simplify code and improve maintainability
updated error message in TemporaryFolderUsageTest to use ' fileAtRoot ' instead of ' / temp1 ' to improve clarity of error
replaced instances of ` ClassTypeInformation . from ( Object . class ) ` with ` ClassTypeInformation . LIST ` and ` ClassType
add check for empty / null address in clientnetworkconfig . addaddress ( )
added " keynectisrootca [ jdk ] " to the VerifyCACerts class to ensure that the correct root certificate is verified
[ java ] return the output batch size , not void .
updated mode setting logic in ModeToggleMenu . java to conditionally set mode based on popup visibility and action command to improve user experience by prevent
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 571 : memory
added two new test files , ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` , to verify the finalizer
replaced ` . map ( routes ) ` with ` . doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator . java
refactor address handling in BurningManService to use Optional for improved clarity to enhance code readability and maintainability by redu
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
increased the size of the longData array from 1 , 000 , 000 to 1000 , 000 , 000 in BatchValidateSignContractTest
rename the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve
replace " @ " with " from : " in the recent query saving logic to ensure consistent query formatting by removing " from : " prefix
removed the conditional check forRebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary checks
added a new POST endpoint for importing accounts in YubiKeyAccountRegistryEndpoint to enable account management functionality in the application
updated shader program parameters and improved asset resolution logic in multiple classes to enhance shader clarity and maintainability by using a more descriptive variable
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted padding in ` SideMenuBar ` to ensure proper handling of
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before assigning the caption in HierarchyBase . java to ensure that the caption is set correctly based on the
replace IMMOBILE data flag with GRAVITY data flag in EntityItem . java to ensure correct handling of gravity data in the item
modified condition checks and added a null check for sim and name in CustomExpression . java to ensure robustness by preventing potential NullPointerExceptions and
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
added a new test case method ` testCase4 ` in ` PostgresTest . java ` to verify the behavior of ` Hikari
updated string literals in SubtitleUtils . java and RemoteUtil . java to use single quotes instead of double quotes to improve code readability and
updated line separator handling in DefaultJavaPrettyPrinter to use a regex pattern to improve readability and maintainability of the code
sulong : use atomicreferencefieldupdater instead of atomicreference to store singleimplementor snapshot .
added null checks before adding queries to the qlist in SimpleFacets . java and updated the test case in SimpleFacetsTest . java
[ fix ] fix bridgepoints not be add to the child of a bridge .
replaced calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve error handling by providing clear
added a check to return the output file if it exists to ensure that the output file is not null before proceeding
camel - 14850 : camel - xml - bind - allow to parse date with ` ` + / 00 : 00 ' ' and `
added a test for retrieving a Post by slug in SpringDataJPALockTest . java and implemented a query in PostRepository . java to
changed the data type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related logic to improve
added a static client request factory with connection and read timeout settings in ClientRegistrations . java to improve HTTP request handling by allowing more time for
improve test for source . fromfilename ( ) . withmimetype ( " text / x - java " ) .
[ graalvm ] remove dependency to ` ` graalvm . version ' ' from graalvm locator
added logic to set access token and refresh token validity seconds to null if they are zero to ensure proper handling of token validity settings in the client
update return statement to use android _ api _ version ( ) instead of a hardcoded default value to ensure compatibility with the latest Android API version
refactor PropertyPlaceholderHelper to use direct references instead of instance variables to improve code readability and maintainability by reducing redundancy
added a version number to the Subject Public Key Algorithm in the Subject Key Algorithm to clarify the purpose of the public key algorithm in the
solr - 12028 : fix flaky test zksolrclienttest . testwatchcollections ( ) .
remove BigInteger from simpleTypes in MongoMappingContext . java to streamline code by eliminating unnecessary dependency
added a condition to check if the buttonText matches the string resource in the toast show condition to enhance user experience by allowing the toast to show
added a condition to check if MEncoder is no out of sync and disabled MC0 and Noskip to ensure proper handling of M
increased the maximum number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow for
changed access modifiers of several variables and methods from package - private to protected in CountMin4 class and modified feedback handling in AdaptiveWindowT
modified the ` ExternalFileField ` class to return a ` FileFloatSource ` and added a new ` ExternalFileFieldSortTest ` class
updated fetcher exception message from " Invalid URL " to " Connection error " to provide clearer context for connection errors
added source handling to the FlightEvent creation and modified event output formatting to include event IDs to enhance event output by including source information for better
changed the access modifier of the check method from private to protected final in ShapeRenderer . java to restrict access to the method for better encapsulation
added handling for synchronizing file operations in FileActivity to improve error handling for file synchronization issues
updated the URI generation logic in ThumbnailsCacheManager . java to use URLEncoder for file path and updated the request header to enhance security by
added a check for the initialization state and a null check for the " cn1 $ infinite " client property in InfiniteContainer . java to
updated the initialization of the ` total ` variable and modified the calculation logic in ` IntHashSet . java ` to ensure accurate tracking of the total
added a check for locked state before updating an entry in FeedRefreshUpdater to handle cases where the feed lock timeout is detected to improve error handling
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the
replaced the List < Integer > list with an array for storing edges and refactored the tree creation logic to improve code readability and
added a try - finally block to close the input stream in ZkCLI . java to ensure proper resource management and prevent resource leaks
remove trail carriage return and carriage return in bibtexparser . parsecomment ( )
added strict property handling in Main . java and corresponding tests in MainTest . java to ensure proper parsing of command line arguments based on strict mode
add support for custom constraint that can not be validate by @ custom ( ` ` validateby ' ' )
camel - 14284 : camel - http4 - fix the verifier to use http4 instead of http
added a call to waitForThingsToLevelOut with a delay of 30 seconds in TestCloudPivotFacet . java to improve test reliability
removed specific length checks for Integer and Long in UBJsonWriter . java to simplify code logic for better readability and maintainability
updated ApplicationTest . java with new test cases to improve test coverage and ensure proper functionality
replaced String with StringBuffer for building details to improve performance and readability of the code
rename the ` Type ` enum to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] do not set action . abort if not dispatch complete .
added cache key and lookup key handling in EntityProcessorBase to improve data retrieval efficiency by ensuring both ' cacheKey ' and ' cacheLookup ' are
added a new file PutfieldError . java that demonstrates the use of IncompatibleClassChangeError to demonstrate the
translate public address before trigger a connection to the client to ensure that only public addresses are processed in the client connection
add log when enqueue memtable flush
replaced usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple Java
move the encodedlength ( ) method from flyweight to flyweight so it can be use by other thread .
updated TestMethodResultMapBuilder . java file to improve test coverage for method result mapping functionality
added handling for Integer type exceptions in the FindNullDeref class to ensure that methods that throw exceptions and exceed Integer . MAX _ VALUE
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated string return values in Utils . java for better formatting to improve readability and maintainability of the code
modified conditions for handling DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve handling of DeepShortcutView instances and
updated ` JwtIssuerValidator ` to use a ` Predicate < Object > ` instead of a ` String ` for the ` JwtClaimValidator `
renamed methods for quick rate retrieval and added error handling in CoinmateMarketDataService and CoinmateTradeServiceRaw to improve
added a new CoverageConfig class to manage coverage - related configurations to enable conditional loading of coverage data classes in the coverage controller
added a check to ensure EventBus is registered only for the current instance to avoid potential duplicate registration of the same instance
added a check for ASCII characters in the NormalizerBase class to determine if the string is only ascii or not to improve normalization reliability by
updated method call from ` isMigrationAllowed ( ) ` to ` areMigrationTasksAllowed ( ) ` in ` JobCoordinationService . java
added error handling for SQL execution in SpillableGroupByIT and corresponding test category in NoOpStatsCollectorIT to ensure that update statistics SQL
camel - 16400 : upgrade camel - cometd to 4.0 . 0 and camel - cometd to 4.1
added ` attrs ( AttrKind . OK , ... ) ` to multiple ` HR ` and ` attrs ( AttrKind . USE _ CSS
added a line break tag to the HtmlCoreReport . java file to improve the formatting of HTML output for better debugging
updated ramBytesUsed calculation to handle null scores to ensure ramBytesUsed is only calculated when scores are not null
added a custom type adapter for ` StringHolder ` and updated imports in ` CustomTypeAdaptersTest . java ` to enhance serialization and deserialization of
added extra data handling in MergeCoordinator and a corresponding test case in MergeCoordinatorTest to enable the merging of extra data from mining parameters in
added a static map to initialize the number of arguments for file parsing and output to improve flexibility by allowing dynamic configuration of file parsing and output
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
improve migration rule listener to shut down the rule manage executor to avoid deadlock
updated method parameter names from " part " to " partOrList " in RestClientRequest and RestClientRequestImpl classes to improve clarity
[ te ] update twitter bootstrap to use the resource folder
added a regex pattern for parsing a basic category string in SpanishTreebankLanguagePack . java to improve the accuracy of category extraction based on
hhh - 14850 - introduce uniqueentityloader . load ( ) and deprecate entityloader . loadbyuniquekey ( )
hbase - 25827 regionserversnapshotmanager # canceltask should wait for task to complete before remove task from taskpool ( # 25
fix setsize ( ) for empty width and height
fixed checkstyle issue in io / pool / hikariconfig / hikaridatasource . java and io / pool .
removed assureMatchVersion ( ) method from multiple filter factory classes and initialized luceneMatchVersion to LATEST in AbstractAnalysisFactory to
do n ' t resolve interceptor call for abstract interface method . fix # 1193
tweak drl parser to not throw an exception if a comma be use instead of a comma .
refactor multiple subject classes for consistency and clarity to improve maintainability and readability of the codebase
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 -
move publishsubscribechannel from ' channel ' to ' dispatcher ' , not ' channel '
updated executionId type from String to Long across multiple classes to ensure consistent handling of the scheduled query execution ID across the codebase
update image processing to use byte values for width and height in ImageProcessor . java to ensure accurate representation of image dimensions for better performance
added import statements in SolrConfigHandler . java and modified logging in SolrConfig . java to improve code clarity and maintainability by elimin
updated the delay duration in FileSyncAdapter from 24 days to 30 seconds to avoid excessive synchronizations during synchronization
updated the initialization of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure accurate retrieval of last modified
refactor path handling in QueryProcessExecutor to use a Path object instead of a String to improve code readability and maintainability by reducing
updated DefaultPackageScanClassResolver to handle URL paths correctly and improved error logging for URL parsing to enhance robustness and clarity in URL
[ hotfix ] [ table - common ] [ table - common ] add timestampextractorutils . java to extract field reference for tsextract
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for retrieving LDAP user details and credentials to enhance security
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest SDK requirements
replaced autoSuggestDialog with SimpleFormDialog for displaying custom file name to improve user experience by allowing dynamic suggesting of a custom file
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
updated the method signature of ` stream ` in ` MongoTemplate . java ` to use the correct variable for the collection name to improve code cl
map overview : fix zoom issue on tablet
added similarity handling to KNearestNeighborClassifier and updated related tests to utilize LMDirichletSimilarity to improve similarity accuracy and ensure
replaced SolrQueryParser with ConstantScoreRangeQuery for query creation in LukeRequestHandler . java to simplify query handling by using a more
updated the method call from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) ` to improve clarity
updated package - info . java files for mmm and ppp packages to ensure consistency and clarity in package documentation
updated ShadowBluetoothGattTest . java and ShadowBluetoothGatt . java to handle mtu request callbacks more effectively to ensure proper
refactor the method to create a ` ServletOutputStream ` using a dedicated ` createServletOutputStream ` function to improve code readability and maintainability
added imports for LibVosk and LogLevel , and handled UnsatisfiedLinkError in VoskSTTService to improve logging and
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent scenarios
updated Japanese and Chinese resource files to include " all , " " grouped , " and " summary " to enhance clarity and
updated JDBCTypeMapping to use size > 1 instead of size > 0 and modified assertions in JDBCTypeMappingTest to improve accuracy of type mapping
added synchronized modifier to addPlayer and removePlayer methods and refactored entity addition and removal methods to improve thread safety and streamline entity management
refactor accessibility handling by replacing screen reader active check with a direct pattern matching to improve readability and maintainability of the code matching logic
added support for handling " SIDE _ NAVIGATION " behavior in the MenuBar and SideMenuBar classes to improve user experience by
removed unnecessary Disposable subscription in PoloniexManualExample . java and added state change logging in WampStreamingService . java to stream
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and corresponding test case in UpdateSettingForEnergyLimit
replaced variable name ' url1 ' with ' javaUrl ' and added protocol handling in PostmanJsonBuilder and UrlBean classes to improve
added getter and setter methods for the namespacePrefixRef variable in SoapJaxbDataFormat . java to allow dynamic configuration of the namespace prefix
updated assertions in TestRange . java to use a new method ` isSameDay ` for date comparison to improve code readability and maintainability by
added server restart logic and security status verification in BasicAuthIntegrationTest . java and initialized security properties in ZkStateReader . java to improve
add price feed to tradeschartsviewmodel when use sticky market
refactor replication configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve code read
updated the handling of the ` lastIndexOf ` method to use ` end ` instead of ` from ` and added bounds checking for ` numPos `
added file download functionality using FileDataStorageManager to enable file download functionality in the application
[ java ] set log length when create a randomaccessfile in mappedrawlog .
added a method to check if a registry is running and a method to delete a file with retries to improve reliability in checking registry status and
updated import statements in EditTest . java , Quick3dMain . java , and TextureTest . java to utilize componentPresetDao .
removed private variables and added multiple ` @ SuppressWarnings ` annotations across multiple Java files to improve code clarity and maintainability by eliminating unnecessary
added a null check for instances in TraceFeignContext . java to avoid potential NullPointerExceptions when instances are null
added TX _ MUST _ BE _ ENABLED _ TO _ SET _ ISOLATION _ LEVEL error handling and updated isolation level checks in Pho
added transaction attribute handling to AbstractStepFactoryBean and updated ItemOrientedStep and SkipLimitStepFactoryBean to utilize it to improve
replaced ` CasClient ` with ` DirectCasClient ` and refactored the ` CasManagementSecurityInterceptor ` class to improve code
added visibility and functionality for the " add category " menu item in the ListFragment and NavigationDrawerFragment to enhance the user interface by providing a
renamed the ` cancel ` method to ` cancelMatchingOperation ` and corrected the method name in ` FileDisplayActivity ` to improve clarity
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to use a constant for text size to improve code clarity and maintainability by using
added a check for the fact before modifying it in ConstantAnalysis . java to ensure that the current fact is valid before proceeding to avoid potential
refactor multiple Java files related to encoding and parsing to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to ensure that the spans list is modified before returning it
removed the lock service from the Liquibase class to simplify the code by eliminating unnecessary locking mechanism
added a ` setRevision ` method to ` MicroserviceVersions ` and updated its usage in ` InstanceCacheChecker ` and ` TestInstanceCache
updated foreignKeyName and indexName to include unique names and modified index initialization logic to improve clarity and ensure unique names are used for foreign key and
camel - 14284 - add uri - endpoint - override option to all aws2 - s3 component
removed the currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService . java to simplify the method signature and improve code cl
added error handling for component retrieval in BlueprintContainerRegistry to ensure robustness by returning null when the component is not found
modified push ( ) method to return a boolean and updated related classes to utilize PushToken for push functionality to enhance functionality by allowing push operations
refactor the comparison logic in LegacyAddressTest to use a BufferedReader for reading addresses from a dataset to improve readability and maintainability of the
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
refactor Snackbar handling in NotificationsActivity to utilize a separate setupPushWarning method to improve code readability and maintainability by
added logging for channel closure and improved exception handling logic in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper channel closure
updated LDAP password policy enforcement logic to check for empty attributes and improved date handling methods to enhance code readability and maintainability by using
refactor DefaultAnnotationEngine and Stubber classes for improved clarity to enhance code maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 1769 : add a timezone field to the aboutdto to provide a way to set the timezone of the nifi
updated assertions and conditions for splitting ranges in the Splitter and StorageService classes to improve code clarity and ensure correct handling of ranges based on
no effective change - remove unnecessary try / catch block
removed redundant synchronized block around circuit addition and notifying processes in CircuitManagerImpl . java to improve code clarity and maintainability by consolidating
replaced GdxRuntimeException with IllegalStateException for uniform fetching errors to improve error handling by using IllegalStateException instead of GdxRuntimeException
[ hotfix ] [ runtime ] move pollablerunner # getsink and pollablerunner # getsource into pollablerunner
updated logging behavior in FastBindLdapAuthenticationHandler to use info level instead of error to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance user experience by ensuring proper focus traversal behavior
[ fix ] test and add test for freehand function
renamed the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity to enhance code readability and maintainability by standardizing
refactor database connection handling in ` SchemaCrawlerMain ` and ` Executable ` classes to ensure proper resource management and logging to improve resource management and
bump default tl version to v1.2 with a fallback for old jdks
corrected a typo in the exception message from " labels " to " metadata " in CountersManager . java to improve clarity and
modified audio queue position handling logic in MediaManager . java to ensure correct positioning of the audio queue when stopping
updated debug logging statements in HttpConnection . java to include the cancelled state to improve log clarity by providing more context about the upgrade process
added support for the ` @ Transient ` annotation in the ` isTransient ` method of ` JpaPersistentPropertyImpl ` to ensure proper handling
updated test cases in UpgradeResourceProviderTest to reflect the new version of the HDP repository to ensure compatibility with the latest HDP versioning
truffle : make eval return an object , not a symbol .
changed the visibility of the method ` isBinaryType ` from private to public and updated debug logging statements in ` Proxy . java ` to enhance
updated the configuration key for dynamic partition pruning max data size from " parition . pruning . max . data . size " to "
updated the ` findProblem ` method in ` JavaEditor . java ` and modified the constructor of ` JavaProblem . java ` to remove priority
remove dictionaryindexconfig . default _ offheap and use dictionaryindexconfig . default instead
replaced hardcoded newline characters with a configurable line separator variable in TableWriterTest . java to improve flexibility and maintainability of the test
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean field ` ownsTexture ` to ` ParticleEffect ` and implemented a check in ` ParticleEffect . java ` to ensure
added LDAP authentication properties to HiveConf . java to enhance security settings for LDAP authentication in Hive
fix : add @ scope to datacatalog search
updated the method of toggling the soft input in DetailActivity to use Context . SHOW _ FORCED instead of a hardcoded value to
added a test for converting a map of primitive types to a map of integers to objects in DataTableTypeRegistryTableConverterTest to ensure correct conversion
updated the size calculation in TestFileSystem . java from 100 , 500 to 10 , 50 , and deleted a file system to improve memory management and
update error message for M2.4 exception in ContentTypeManager . java to provide clearer guidance on closing resources before triggering a bug report
refactored the ` dropSequences ` method across multiple database classes to implement its implementation to ensure proper sequence dropping functionality across different database implementations
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the assignment of the variable ' f ' in DocumentBuilder . java to assign the result of binaryField . createField to a variable before
improve handling of nest and parent style event ( # 3248 )
added a test method to verify the behavior of ` findOne ` after upserting a non - existing object returns the inserted object to ensure that
[ flink - 1869 ] [ table - common ] fix wrong calculation of mid value in lucene ' s getall ( )
added stats tracking for app launches in Launcher and Stats classes to improve tracking of app launches and ensure proper broadcasting when shortcuts are
updated graphics handling in JavaSEPort . java to use Graphics2D for rendering to improve rendering efficiency and prevent potential memory leaks
update instructorfeedbackresultspagedata to include the current team in the list of team with response
added a check for zero inventory IDs and updated the method to generate a new ID if the player ' s inventory ID is zero to ensure that
added a conditional check for the ' found ' variable before continuing the loop to ensure proper termination of the loop when ' found ' is true
updated method signatures in ReloadableJava parser visitors to include returnTypeAnnotations as a parameter to enhance clarity and functionality when handling return types in the
modified the initialization of TileMapRenderer to handle null blended tiles gracefully to improve robustness by avoiding null pointer exceptions when blen
removed unused sunClasses from the @ Classes annotation in Probe . java to streamline code by eliminating unnecessary dependencies
fixed potential npe in getarea ( )
improve throttle performance by set the lock on the thread .
refactor PipeEventBus and PipeBehaviourEmzuli classes to use superclass methods instead of static methods to improve code clarity and ensure
increased timeout value from 1000 to TIMEOUT in ZkController initialization to improve test reliability by allowing more time for the ZkController
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to verify the handling of client
added imports for KeepWordFilter , LengthFilter , and CharArraySet , and implemented new test cases for broken offsets to ensure proper handling of
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the test code and improve readability
sulong : fix handling of 64bitvastart argument to be unsigned .
updated the method for creating ` btCollisionObject ` instances and modified the ` upcast ` method in ` btRigidBody ` to
added a copyright year property and updated the copyright URL in the AboutDialog to enhance build copyright information and improve user experience by providing clearer
add ` getdistributedobjects ` method to ` jetclientinstanceimpl ` ( # 2598 )
added debug print statements in FinSet . java and updated expMOI , expIyy , and expMOI _ tr values in M
replace TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to align memory management with the maximum available memory
changed exception handling from MetadataException to a more general Exception in StandaloneSchemaFetcher . java and corrected a typo in the setCompress
check if btc be active before send delayedpayouttx to make sure we do n ' t send delayedpayouttx if it ' s
updated JSON string handling in JsonLoaderTest . java and added exception handling for " big _ integer _ t " to improve test reliability and
updated the table size validation condition in ObjectSet . java to allow a maximum of 0x40000000 to ensure that the table size does not
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure valid data scale is set before setting
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify the fields by removing unnecessary dependencies
added security exception handling in FileHelper . java and modified content limit logic in TextHelper . java to improve robustness by preventing security exceptions
added a new constant ` StyleWithMultipleAttributes ` and unit tests for ` resolveAttributes ` in ` ShadowThemeTest . java ` to support
updated sheet name validation in HSSFWorkbook and modified test cases in TestHSSFWorkbook to ensure correct handling of sheet names and improve
changed the tint color from primaryColor to elementColor in ManageAccountsActivity . java to align the tint with the element ' s color
updated the initialization of the Handler in DefaultEventBus to handle null replyHandler and simplified the path resolver in DefaultPlatformManager to improve robustness
added binary collation support and updated imports in MariaDbDbmsType , MySqlDbmsType , DbmsType , and AbstractDbms
added a default method ` whenType ` in the ` Tree ` class that returns an ` Optional < T > ` based on the type of
refactor navigation logic by introducing a method to retrieve user view destination to improve code readability and maintainability by reducing duplication
updated the response handling in FeedREST to redirect to a temporary redirect based on the application ' s public URL to improve user experience by providing a
[ hotfix ] [ kinesis ] check that deserializer be serializable in flinkkinesisconsumer
( chore ) camel - johnzon : fix typo find by codespell on fossies . org
replaced direct initialization of ZkStateReader with a try - finally block to ensure zkClient is closed properly after use to improve resource management
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
replaced direct calls to ` _ endPoint . fill ( ) ` with a new ` read ( ) ` method in ` ProxyHandler . java
replaced instances of ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase
modified the ` prepareStreamsToUpload ` method to return a boolean instead of void and adjusted its return condition to improve code clarity and ensure
updated comparison logic in AbstractConfigLoader to use Integer . compare and Integer . MAX _ VALUE for better readability to improve code clarity and
added a new file ` PicOfDayAppWidget . java ` to handle image loading and updates in the app widget to provide functionality for managing
cloudstack - 8237 : change internal lbserviceofferingid from uuid to string to avoid npe
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and modified join condition handling in ` HiveParserCalcitePlanner .
pdfbox - 4892 : deprecate legacy savepoint class in favor of legacy savepoint class
added user and password options for JMX connector in NodeToolCmd . java to enhance authentication flexibility for remote JMX access
removed duplicate initialization of BytesRef in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated widget handling logic in AppsCustomizePagedView . java to use mPageViewIconCache instead of null for unused parameters to
ggb - 2246 : use 3d view for thumbnail ( for 3d view )
updated rotation calculations in GcodeRenderer . java to ensure proper positioning to prevent out - of - bounds errors
added a new workspace option to the OptionEnum and utilized it in TerminalClient to enable setting the workspace directory for the terminal backend
updated the file path in CLIManagerTest from " options . apt " to " options . html " to align the test file with the
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test reliability and ensure proper exception handling
refactor OAuthConfirmationController to use a Map < String , Object > instead of ModelAndView for model processing to improve code clarity and
update HibernateIT test to assert that session retrieval success and second level cache hit count is accurate to improve test reliability by ensuring that the
refactor EventBusHook class to improve code readability to enhance maintainability and facilitate future updates
modified MultiPaintEventTest . java file to improve test coverage for multi - paint functionality
removed the final modifier from the variable mNewScale in WorkspaceStateTransitionAnimation . java to improve code clarity by directly assigning the new scale
refactor SyncFactory class to improve synchronization logic to enhance performance and maintainability of the code
added unique key handling in LukeRequestHandler to ensure unique keys are correctly stored in the schema
added round border color attribute and updated document filter in BorderEditor and EditableResources classes to enhance color handling functionality for better visual feedback
add compilationasserts . neverpartofcompilation to binaryparserexception .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging for pending requests in GatewayRSocket and modified return values in PingPongApp to improve debugging capabilities and ensure proper handling of pending
added a menu item click listener to the RecentChatFragment to enhance user interaction by providing a toast message for the recent chats menu item
modified ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
renamed methods from ` add ` to ` push ` and ` removeTail ` to ` peek ` across multiple classes to improve clarity and
updated URLs in CommonsApplication . java to use " commons . wikimedia . org / wiki " instead of " testwiki .
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by consolidating logic
replaced usage of ` Collections . sort ` with direct method calls to ` Collections . sort ` in multiple classes to improve code readability and
added various date and time patterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for better user experience
clear focus from the clicked view in DetailFragment . java to improve user experience by ensuring the clicked view is displayed correctly
updated ` DescriptionsAdapter ` and ` SpinnerLanguagesAdapter ` to handle language selection more effectively to improve user experience by ensuring the correct language
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registering global and weak items and refactored the FastGetField class to improve performance and maintainability of the code by
added default value handling for UNION and NULL types in ReflectData . java and updated test assertions in TestReflect . java to ensure correct handling of
try to fix flaky seda blockwhenfulltest
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when the RClass is not initialized
added constructors to multiple HapiFhirDialect and HapiFhirH2Dialect classes to ensure proper initialization with DatabaseVersion for
camel - 16400 : added connection : close http header for http component . thanks to damian for the patch .
increased the socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to improve test reliability by allowing
added an assertion to verify that the count of tickets with status ' FREE ' and final _ price _ cts are greater than zero to
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code structure to enhance maintainability and readability of the code
update thymeleaf template parser to use getfirstelementchild ( ) instead of getfirstnode ( )
[ optaplanner - 1341 ] fix illegalstateexception when remove enum value from the list
[ java ] wait for cluster node to shut down to prevent memory leak .
( chore ) camel - el : change warn to info
added a new content type " application / octet - stream " to WebdavEntry . java to ensure proper handling of multipart / form - data
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for its functionality to ensure that the
[ fix ] distanceop do n ' t respect the min distance of two point .
rename ` ` required ' ' attribute to ` ` requiredlabel ' ' in abstractuitag
removed the ` next ( ) ` method and added an ` updateProgress ( ) ` call in ` PurgingPartitionIterator . java ` to
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure vertices contain at least 3 points and adjusted localVertices assignment logic to ensure that only valid polygons contain at least 3 points to
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to streamline object mapping by using a standard ObjectMap
do n ' t allocate squarefree array for implicit curve if the equation be not polynomial
updated ExternalNameRecord to handle both compressed and unicode name lengths based on multibyte flags to ensure correct handling of Unicode names in the record
updated the description of the JMS Destination parameter in AbstractJMSProcessor . java to clarify the purpose of the description to ensure that the
added logic to handle login prompts based on the return value and excluded prompts in LoginInfoEndpoint . java to ensure that username and password
replaced ` remove ` method with ` removeIf ` in ` AbstractController . java ` to improve listener removal logic to enhance readability and
added a case to toggle the spinner in the PieChartActivity to enhance the visual appearance of the chart by providing a smoother
cloudstack - 4892 : kill vhd process when copy vhd to secondary storage
hbase - 20650 hmaster . normalizetableandregioninfo ( ) should skip table that have a namespace quota
updated import statements and added a method to resize the pressure array to improve code readability and maintainability by encapsulating pressure resizing logic
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and reformatted the ` @ VisibleForTesting ` annotation to improve
ignore clientmapnearcachetest that fail and block prs
fix the hopperhock not respect the item ' s radius when interact with the item
added authentication dialog functionality and updated import statements in SsoWebViewClient . java to improve user experience by providing a clearer dialog for authentication
updated TestStressIndexing2 . java to improve document deletion and query handling to enhance test reliability and ensure proper handling of document deletions and
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase until flink - 22559 be fix
replaced ` get ` method with ` computeIfAbsent ` for retrieving ` typeList ` and corrected the calculation of ` endPos ` to improve performance
added configuration to accept single value as an array in DefaultEntityMapper to enhance flexibility in object mapping by allowing single - value as an array
updated localization message to include BE , UK , and SL to provide clearer context for localization updates
changed the initialization of SHORTCUT _ CATEGORIES from a hardcoded string array to a dynamic resource retrieval method to improve flexibility by
change ' instanceof ' to ' instanceof ' and add test
nifi - 1769 : added mime . type attribute to gethttp to allow to specify the mime type of the flowfile
refactor provenance creation to use a dedicated method for resource history entity creation to improve code clarity and maintainability by centralizing provenance handling logic
replaced the ' Exit ' button with ' done ' button in HelpActivity and added a check for ' searchable ' status in SearchBookContents
[ hotfix ] fix checkstyle violation in natsconfiguration
replaced the method ` invalidateStalePartition ` with ` invalidateStalePartitions ` and modified its logic to accept a ` List < PartitionNameWith
improve performance of viewresultsfullvisualizer by use circularfifobuffer instead of boundedfifobuffer
updated icon references from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to enhance user experience by providing a more
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile
updated method names in MocksCreationTest to follow a consistent naming convention to improve clarity and consistency in method naming conventions
added a static final string DATA _ SOURCE _ NAME to CSVThirdEyeDataSource and changed the visibility of generateDetectionConfig method in YamlDetection
increased awaiter timeout from 10 seconds to 30 seconds in multiple locations to allow for a longer waiting time for phaser execution to complete
removed the ` BuildSlaveFinishedStatusEvent ` class and updated its usage in ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
fix findbugs encode issue in vmwarestoragemanagerimpl . java : fix findbugs encode issue in vmwarestorag
add test for deposit workspace item without workflow
added distinct processing to the classpath stream in ClassLoaderSupportImpl . java to ensure that the classpath files are processed only once
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unnecessary functionality
updated argument handling in SpecificCompilerTool to use indexOf for " - encoding " , " - string " , and " - templateDir " to
added a check for external tables before deleting the directory in HiveMetaStore . java to ensure that the directory deletion occurs only for non - external
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS configuration and improved exception messages in SQLOperation . java
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for task role and update service and component retrieval logic to improve code clarity and maintainability by
added a variable ` diff ` to store the current configuration info in ` OperationSetTelephonyConferencingSipImpl . java ` to
fix an npe in the flutterlogview by clear the tree ' s entry
updated return statements in ChannelEndPoint . java to include conditions to check if the channel is open and input is not active to ensure proper handling of
refactor SetNullableGenerator to improve code readability to enhance maintainability and facilitate future updates
camel - 16400 : camel - example - reportincident should use the new file endpoint for the example
replaced specific imports with a wildcard import in NettyRoutingFilter . java and refactored form attribute handling in FormIntegrationTests . java
added @ ApiOperation annotation for " hello " and " helloWithValue " methods across multiple classes to enhance the functionality of the service ' s
replaced the ` update ( Array < LifecycleListener > lifecycleListeners ) ` method with direct calls to ` window . update ( ) ` and
updated the FG _ FK color value from 90.0 to 200.0 in UIUtil . java to improve the visual appearance of
fix issue with mp3 audio format not be require
fix flaky test : secondaryindexmanagertest # testnotmarkedasbuilt ( )
add ` ` preference . pmd . group . about ' ' and ` ` preference . pmd . label . pmd . eclipse
[ hotfix ] [ test ] use optional for root cause in customserializationitcase
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added an overridden method ` isCellEditable ` that returns false to indicate that the cell is not editable to enhance functionality by providing a default behavior
added a method to conditionally print commands based on the ` isOnlyPrintCommands ( ) ` flag in ` AbstractUnusedDependenciesFinder ` to
added a static integer variable ` tmpCount ` in ` VocalTractModifier . java ` and updated the scale factor in ` Vocal
updated import statements in TestScalarUdfTest . java , TestUDFRound . java , and TestGenericUDFConcat . java to
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and hashing behavior for object instances
update testskeletoncontrolrefresh to use new skinning animation system
rename nodefilter to nodecountfilter to improve clarity
updated condition to check if the size of sync block to fetch is less than or equal to SYNC _ FETCH _ BATCH _ NUM to
fix type size for ` ` var ' ' and ` ` var ' ' in debugexpr grammar
refactor dependency exclusion logic to use streams for better readability to improve code clarity and maintainability by using more descriptive conditions
replaced the method ` tmp ( ) ` with ` dst2 ( v ) ` and modified the ` lerp ` method signature to
initialize the ` args ` array with an empty array in ` GridHubConfiguration ` to ensure proper initialization of the ` args ` variable
updated linker argument retrieval to include linker flags and changed ` rustcFlags ` to ` ImmutableList ` to improve flexibility in handling linker flags
simonstewart : fix test that fail on travis
added external query name configuration to HiveConf and updated logging in GenericUDTFGetSplits to include it to improve debugging by providing more context
removed unnecessary import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
mondrian : gradle daemon should abort if build fail
modified the ` validateQuery ` method to accept an additional ` arguments ` parameter for improved error handling to enhance flexibility in query validation by
updated index version from 1 to 2 and refactored tree retrieval methods in LuceneExecutor . java to improve code clarity and maintainability
[ hotfix ] [ kryoserializer ] add a test to ensure default kryoserializers do not change their type
added null check before removing a property in ` BlueprintConfigurationProcessor ` and updated test assertions in ` BlueprintConfigurationProcessorTest ` to ensure proper handling
refactor boolean handling in MetaStoreDirectSql to use BooleanUtils for better clarity to improve code readability and maintainability by reducing
added hideCustomizationDrawer ( ) method to Launcher . java to enhance user experience by hiding the customization drawer
replaced term vector handling with warning handling in TermVectorComponent . java and updated test cases in TermVectorComponentDistributedTest . java to
added conditional logging for optimistic types and improved log message formatting to enhance logging clarity based on environment settings for optimistic types and enhance
rename Expect class to improve clarity to enhance readability and maintainability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and implemented its functionality to enable Docker socket access for local socker environments
added flaky test methods for ` CloseableDoSFilter ` and ` CloseableDoSFilterTest ` classes to address flakiness in tests
camel - 16400 : improve error message when reactive stream have no active subscription
refactor ` Vectorizer ` and ` TezCompiler ` to use ` MapWork ` instead of ` MapRedTask ` to improve code
modified the superclass method calls in StringAppender and LogDivertAppender to include an additional boolean parameter to enhance functionality by allowing configuration of the layout
fixed possible npe in tree model when no gui package be available
[ gr - 3329 ] fix linkage . isweak to support more weak function .
updated multiple Java files including XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization and
add test for defaulttransactionthreadlocal . get ( )
added a check for invalid OperationHandle and logging warnings in HiveStatement . java to improve error handling for invalid operation handles and provide clearer feedback
updated command type from ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - 14284 - support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code readability to enhance maintainability and facilitate future updates
removed error message from the email send error response to simplify the error message for better readability
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the constructor accordingly to enhance functionality by allowing subTree behavior
updated column width calculation in Sheet . java and added unit tests for column width in TestHSSFSheet . java to ensure correct column width
added a new parameter ` configPath ` to the ` less ` command in the ` Commands . less ` method to enhance command execution by providing a
changed method parameters from ` Set ` to ` Collection ` and replaced ` Set ` with ` List ` in ` GraphExecutable . java ` to
updated the SSHD container image reference from a SHA256 address to a specific version to ensure compatibility with the latest SSH image version
cloudstack - 8237 : fix npe in agentmanagerimpl when hostid be null
replaced conditional check for multi - valued columns with a single - value iterator for generating raw keys to improve code clarity and maintainability by
refactor testSeekNegative method to testSeekingExceptions and update seek behavior to include EOFException handling to improve error reporting and ensure proper seek behavior
refactor BCSiliconRecipes to use a builder pattern for building ingredient stacks to improve code readability and maintain
fix typo : put ( string , object ) - > putobject ( string , object )
modified visibility setting logic for child views in CellLayout and refactored drag exit handling in Workspace to improve code clarity and maintainability by
modify request body handling in ModifyRequestBodyGatewayFilterFactory and add a test for empty upstream request bodies to ensure proper handling of empty request bodies and
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper handling of package accessibility in constructor , field
replaced instances of logger . warn with logger . trace in LoggingHandler . java to improve logging level for better traceability
fix # 389 : whitelist classpath uris contain wildcard ( # 389 )
added menu functionality to create and interact with gallery attachments in GalleryActivity to enhance user experience by allowing users to access gallery images dynamically
refactor MongoDBServiceFactory to use a singleton pattern for instance creation to improve performance by lazy loading the service instance
added tests to replace boolean literals with corresponding boolean values in InlineConstantMutatorTest . java to ensure correct behavior of boolean values in InlineConstantMutator
updated the ` decode ` method to accept a ` Blackhole ` parameter for improved handling of state decoding to enhance flexibility in testing state
fix : update gapic - generator - java with mock service generation fix ( # 1193 )
[ knx ] fix the issue of fail unit test in devicethinghandler .
removed the call to dbManager . getWitnesses ( ) . clear ( ) in ManagerTest . java to streamline the code by elim
change jdbcpagesink to not throw prestoexception when abort
removed the " stack " property and replaced it with getter and setter functions in NativeError . java to streamline stack management by eliminating
removed a condition that checks if the path name starts with a dot in DrillPathFilter . java to simplify the path validation logic for better
rename ` onboard ` to ` autoload ` in the ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomaly
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before proceeding with operations
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 in HSSFFont . java to update the bold weight
updated fThreadGroup to be volatile and changed fLookForStuckThread to final in Timeout class to ensure thread - safe access to f
changed the return type of the getValue ( ) and setValue ( ) methods in ValueResultData . java from Object to Object to improve flexibility
updated hash code and equality checks in FuzzyQuery . java to ensure proper hashing and equality comparison based on superclass implementation
removed debug print statement for target in PushedResourcesTest . java to clean up the code and improve readability
changed return types of removeFile and removeDirectory methods from SharedRandomAccessFile and List < SharedRandomAccessFile > to void to simplify method signatures and
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in tests to ensure compatibility with the latest HSQL database engine
updated method calls to retrieve person attributes with an empty HashMap and refactored principal creation logic to improve code clarity and ensure proper principal resolution
changed log level from info to warn for connection issues in OpenWebNetBridgeHandler . java to improve logging clarity and reduce log verbosity
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to standardize naming conventions and improve
added a constructor to ThumbnailGenerationTask to ensure that storageManager is not null and mImageViewReference is not null before executing thumbnail generation
updated the condition in the loop to check for ` nrFound ` and ` tries ` against ` count ` and ` tries ` to ensure that
added a new file ` Bug1933922 . java ` to demonstrate the use of recursive compilation in Java files to fac
removed unnecessary parentheses in comparison operations across multiple files to improve code readability and maintainability
updated character validation check from 33 to 32 in FileResolver . java to ensure proper handling of control characters in the file resolver
added a request focus call to the cmp component in Display . java to ensure the cmp component is focused before proceeding
[ 3.0 ] instructoredituitest : move test data to separate page
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated Crouton cancellation logic and modified notification handling in DetailFragment . java and MainActivity . java to improve code clarity and ensure proper
added a new test method for schema query and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of schema
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
replaced the direct execution of command line arguments with a ProcessBuilder to improve process management by removing the JAVA _ TOOL _ OPTIONS environment variable
updated the local host reference in HintedHandOffTest to use 127.0 . 0.1 instead of the local host to ensure
refactor the subsystem assignment logic to use a loop for splitting the controller string to improve code readability and maintainability by reducing redundancy
added assumptions to tests in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on devices that support build and install
refactor jvmciversioncheck to use getrequiredproperty ( ) instead of validateproperties ( )
refactor Mockito class to improve readability to enhance maintainability and facilitate future development
updated TestLargePageUseForAuxMemory . java file to improve performance testing of large page operations
updated method calls in BinaryParser and PlainTextParser to use the context for reading source bytes and added charset handling in ParsingExecutionContextView to
added support for setting and retrieving the MultiPartFormDataCompliance in HttpConfiguration and created a new MultiPartFormDataCompliance enum to enhance flexibility in
added support for JDK - 17 in GradleDistributionManager to enable compatibility with JDK 7.2 and above
added a ` addType ` method to ` SnapshotControl ` and refactored its usage in ` DatabaseSnapshot ` and ` SnapshotControl ` to
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
update return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add test case to verify that
refactor multiple Java classes to improve code structure and maintainability to enhance maintainability and readability of the codebase
pdf417 : improve blackbox test to not fail on failure
update mTintAmount variable usage in TaskView . java to improve code clarity and maintainability by reducing redundancy
added a new file ` SumZeroAggr . java ` and implemented ` SumZero ` function in Drill to implement aggregation function for sum
[ hotfix ] fix test for firstvaluefunctionit and nthvaluefunctionit
refactor getAllocationFailWarningMessage method to improve error message formatting to enhance clarity of allocation failure messages for better debugging and debugging
added a null check for propName before adding it to the roleObject ' s properties to avoid potential NullPointerExceptions when propName is not provided
added @ VisibleForTesting annotation to several fields and methods in StatusBarTouchController . java and modified task removal logic in RecentsView .
added a method to log a container stream and modified the existing logContainer method to keep the stream open indefinitely to improve container logging
mvstore : add a performance test to demonstrate the use of mvcache . commit ( )
changed the value of the LONG constant from " L " to " J " in PrimitiveType . java to ensure compatibility with Java ' s long
changed the method ` delegatingApplicationListener ` from instance to static in ` WebSecurityConfiguration . java ` to allow the method to be invoked
camel - 9448 : camel - rest - dsl - remove message body from exchange in restbindingadvice so it do n ' t
added file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` for managing file deletion in a batch
euclidianview # updatestoragekeepdrawable ( ) should be call from companion instead of view # upd
replaced index - out - of - bounds checks with index - based comparisons in multiple Java files to improve code clarity and maintainability by
updated ` sendEventToTest ` and ` goToOverviewUnchecked ` methods to accept state ordinal instead of a string to improve state handling
added checks and methods to handle video thumbnail requests in RequestHandler and RequestHandlerV2 classes to improve request handling and ensure compatibility with Lavf /
fix problem when select text in scrolltoerrorline ( )
updated the component addition logic in SideMenuBar to differentiate between top and bottom buttons based on the UI manager ' s theme settings to ensure
added preload = ' ' libskia ' ' to presets for skia .
add ` ` unittestnet ' ' to the list of supported unit test .
added error handling for query arguments without format arguments in QueryCommand . java and implemented tests for owner and format arguments in QueryCommandIntegrationTest .
updated variable names and logic in IntIterator . java for clarity and efficiency to improve code readability and maintainability by using a more d
updated the ` walkRuleAndAdd ` method to include ` srcRule ` as a parameter and added logic to determine if dependencies should be visited
[ netbeans - 4892 ] fix module location when use source - based patch
[ java ] remove check for protocol version when check for candidate term id in election .
added conditional logic to set the default policy based on SAML authentication status to ensure compatibility with both single session and ALWAYS _ NEW _ CLIENT configurations
add a meaningful error message when a mappedtableresource ( table ) be require when building a readbatch
tidy up the code and use a utility method to close resource
refactor AnonymousAuthenticationFilter to utilize a Supplier for security context management to improve code clarity and ensure proper handling of anonymous security contexts
modified the ` removeActor ` method to accept a boolean parameter for unfocusing in ` Group ` and updated related calls in ` Actor `
replaced multiple instances of cloudConfig initialization with a single validConfigs variable to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and RoutingInBoundHandler for improved response handling to enhance logging capabilities and ensure proper handling of data
refactor multiple Java files including DatumAliases , AbstractParser , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintain
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates are executed on the
camel - 16400 : camel - groovy - optimize to reduce object allocation .
replaced the use of ` project . getManagedVersionMap ( ) ` with ` Collections . EMPTY _ MAP ` and changed the way resolved
[ hotfix ] [ python ] make some method and class public in clifrontendparser
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added storage alias retrieval and certificate chain logging in HttpsMessenger . java to improve storage key management and provide clearer output for certificate chain retrieval
simonstewart : add a try / catch to make sure we get a good error message
changed access modifier of updateImage ( ) method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override
fix block . dropblock not be call when a player be drop . close # 6240
added native methods for spatial location calculator configurations in DataOutputQueue and depthai classes to enhance functionality for spatial location configuration management in the application
rename multiple Java classes related to community detection and components to improve clarity and consistency in naming conventions
replaced the method ` keySet ( ) . isEmpty ( ) ` with a new ` isEmpty ( _ root ) ` method and added a new
updated foreground and background method calls in AttributedStringBuilder . java to use specific dimensions instead of a fixed value to improve flexibility in handling color
modified the ` doFingerprint ` logic in ` PeerSync ` to exclude fingerprinting based on the ` solr . disableFingerprint ` system property to
modified the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
refactor MongoTemplate event emission and add a new test for UUID properties in MongoTemplateTests to enhance event handling and ensure proper context management
fix settransactiontest by use testhazelcastinstancefactory instead of hazelcastinstance
close the input stream when closing it in TikaCLI . java to ensure proper resource management and prevent memory leaks
updated the exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve clarity and
updated the formatting of the loadConfig method call in OptionsParser . java to improve code readability and maintain consistency
[ 3.0 ] instructorfeedbackcopyactiontest : fix typo find by codespell on fossies . org
[ hotfix ] fix checkstyle violation in java . util
removed the step parameter from the HmDatapoint class and related methods to simplify the code by eliminating unnecessary step handling
added logging for acquiring and acquiring shared locks and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling process by eliminating redundant calls
danielwagnerhall : fix testgettextcontent for non - rc and ie browser
replace static logger management with a ThreadLocal Logger instance to improve thread safety and maintainability of the logger management process
added @ VisibleForTesting annotation to the convertToCompilationUnit method and replaced JMockit with MockitoJUnitRunner in test cases to improve test
added boxedTypeOrType method to handle primitive types and updated subtype checking in Infer . java ; introduced a new class T699
update task view orientation handling in RecentsView . java and remove unnecessary initialization in TaskView . java to improve task view responsiveness
hbase - 25836 fix flaky testflushfromclient . testflushfromclient . testhbaseregions ( ) ( #
added functionality to clone and delete a repository for contract updates to ensure proper handling of contract storage changes during transaction processing
updated balance calculations to use dynamic properties for asset issue fees instead of a hardcoded value to ensure accurate balance adjustment based on the repository '
refactor RealisticRenderStrategy to improve texture caching handling by introducing a needClearCache flag and improving texture management logic to enhance cache
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added support for unselected styles in the component and label classes to improve text width calculation based on font settings
updated ArrayList initializations to specify initial capacity and refactored action list handling to improve performance and maintainability by reducing initial capacity
removed the ` flags ` parameter from multiple method calls in ` ShadowApplicationPackageManager ` and added a new constant ` FLAG _ PRIMARY ` in
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
ignore test for api < 25 for sample with increasing timestamps .
[ tradfri ] do n ' t log warning for gateway with old firmware
updated the implementation of the AjaxElementLocator class to improve performance and maintainability of the code
updated conditions in BoxLayout and DefaultLayout to include " table - cell " display in DefaultLayout to ensure proper handling of table - cell display
refactor JsonDecoder logic to improve handling of JSON array elements and add a new test for field reordering to improve code clarity and ensure
updated the listener signature in BlockCache . java to include removal cause to improve clarity and maintainability of the code
[ hotfix ] [ test ] ignore savepoint test temporarily
added @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for the parser functionality
changed fields in ContextRegisterListener from non - final to final for better immutability to improve immutability and prevent potential runtime errors
refactor ObjectHashSet to initialize iterator conditionally based on initialCapacity and loadFactor parameters to improve performance by avoiding unnecessary initialization of the iterator
added batch size validation and default value size in SparkReduceRecordHandler and ReduceRecordSource to ensure data integrity by preventing out - of -
replaced context . MODE _ WORLD _ READABLE + Context . MODE _ WORLD _ WRITEABLE with Context . MODE _ PRIVATE in
updated logging message to clarify that close ( ) is called after already close ( ) and added error handling for abort ( ) to improve
updated the ` getAnimationToState ` method to use ` mState ` directly instead of ` getState ( ) ` and added accessibility import
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for malformed edits
updated scope handling in UaaTokenServices and added a new test for scope truncation in UaaTokenServicesTests to ensure that the token is
updated import statements and added a toString method in AvailableJDBCDrivers . java , and renamed TestAvailablePlugins to AvailablePluginsTest . java to improve

( chore ) camel - itest - jdbc : remove duplicate jdbctableservice
added methods to retrieve left and top padding based on orientation in CellLayout . java and modified bitmap creation in Launcher . java to improve layout
refactor the initialization of the ` cands ` list to conditionally assign it based on the ` sb . length ( ) ` to ensure
refactor SamlMetadataUIParserAction and related tests to use Action type instead of AbstractAction to improve code clarity and ensure proper execution
added a method to check the number of open ports in the LdapMockMvcTests class to ensure that only valid LDAP processes use the specified port
log4j2 - 1343 change default shutdown callback from - 1 to 0 in loggercontext . shutdown ( )
updated URL handling logic in Fetcher . java and modified refresh logic in HTMLMetaProcessor . java to improve redirect handling and ensure correct refresh behavior
updated SolrQuery to use " name : samsang " and changed the assertion message from " homer " to " hope " to ensure
karaf : support for old and new console api in karaf terminal
blender loader : use mloopcol instead of mcol if not compatible
added exclude _ timestamped _ reports _ directories filter and updated the copy method in HTMLReportGenerator to exclude timestamped reports from the copy process
( chore ) camel - datavalidatortest : migrate datavalidatortest to parameterizedtest
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java and threw an TemplateProcessingException if it is null to improve error handling by providing clear
removed a debug print statement from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` and modified the ` readField ` method in ` FieldSupport ` to allow it to
replace the string " { name } " with the actual device name in WebDataHandler . java to ensure that the device name is correctly referenced
updated the way Lookup is instantiated by introducing a fallback mechanism for creating a Lookup instance to improve flexibility in creating Lookup instances based on Java
deprecated the weights method in ZParams and renamed it to weightsByDouble in SortedSetCommandsTest to clarify the purpose of the method and
updated ` writeCustomHTML ` method signatures to include a ` Database ` parameter across multiple writer classes to enhance functionality by allowing the use of the
removed unnecessary type casting when deserializing keys in BTreeMap . java to simplify code by eliminating unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to catch specific BalanceInsufficientException and InvalidProtocolBuffer
bugfix # 2181 , add a system property to disable zerofile generation
replaced ` System . out . println ` calls with ` Scope . getCurrentScope ( ) . getUI ( ) . sendMessage ` for message
[ hortonworks ] fix the buffer size for hortonworks encoded schema reference
added import statements for ChunkListener , ItemReadListener , ItemWriteListener , and ExitStatus listeners in multiple Java files to enhance batch processing capabilities
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
replaced direct usage of ` doc . get ( " title " ) ` with direct usage of ` title ` in ` SearchFiles . java
updated Test7005594 . java file to improve test coverage for new functionality
improve error message when resource validation fails
[ hotfix ] [ doc ] fix typo in topkrollupphaseonejob
server : fix npe when there be no ip address for the nic
fix detection of m modifier analog trigger in gamepad
renamed methods and updated test cases in IterableSubject and IterableTest to improve clarity and consistency in naming conventions to enhance code readability
camel - 8540 fixed the issue of defaulthttpbinding . map ( string key , string value ) do n ' t apply to external
added multiple native SQL queries to verify the expected result count in ActivityHistorySQLServerStoredProcedureTest to ensure that the SQL query returns zero for
added a new ` LargeValueFormatter ` class and updated chart value formatting logic to improve handling of large chart values and enhance code clarity
replaced the hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to argument type compatibility
updated printLir statement in TraceLinearScanLifetimeAnalysisPhase . java to correct formatting to improve code readability and maintain consistency in formatting
added an Auto - generated method stub in NullAssertionValidator . java to address auto - generated method stubs for better code clarity
added import for RuleKeyAppendable and utilized it in DefaultRuleKeyBuilderFactory to append " . buck " to the rule key for
added file existence check and setup / teardown methods in PmsConfiguration , DLNAMediaInfoTest , and SearchRequestHandlerTest classes to
replaced the instantiation of ` DefaultThreadFactory ` with a new method ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExec
refactor message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability by
added a attribute " accept " with " image / * " to the ImageFileInputDialog to enhance user experience by allowing images to be accepted
updated ElasticIndexWriter and TestElasticIndexWriter to use new builder methods and replaced deprecated Headers with new Node and ShardId imports to improve code
added detailed information about witness and witness class types in ForkController . java to improve debugging by providing more context on witnesses and their types
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null pointer and empty arrays to ensure that null pointer and
added method to find configured generated source paths using dependencies in BaseIjModuleRule . java to improve code clarity and maintainability by elim
updated UaaStringUtils to include a method for escaping wildcard patterns with any character delimiters and modified wildcard pattern construction to enhance wildcard handling by allowing
added validation for ` TableScanOperator ` aliases in the ` Vectorizer ` class to ensure that only one instance of ` TableScanOperator `
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito framework and
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging exceptions when setting values are set
refactor the ` getLangs ` method to return a ` Set < String > ` instead of a ` String [ ] ` to improve the
removed redundant parameters from the extracting method in LazyTraceScheduledThreadPoolExecutorTests . java to improve code clarity and maintainability by eliminating
hbase - 25836 add prepare ( ) method to takesnapshothandler and enabletablesnapshothandler to avoid race in takesnapshothandler
[ j2kt ] add support for ` ` isnull ' ' in finally block
added a test to verify that the HTTP RPC endpoint has been modified in the DockerQuickstartTest class to ensure that the HTTP RPC endpoint is
added a volatile boolean flag ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread suspension handling and
updated Javadoc return statements to replace Javadoc . Author and Javadoc . Since with Javadoc . Hidden and Javadoc . See and Javadoc . Serial to improve Javadoc
fix the issue that camel - spring 3.0 do n ' t work on spring 3.0
removed redundant @ Override annotations from multiple security - related classes to streamline code by eliminating unnecessary method overrides
added module import handling in Java2TypeScriptAdapter and updated assertions in EnumTests and MyComplexEnumsAccess to enhance enum functionality and ensure
use http : / / www . w3 . org / 2001 / xmlschema instead of javax . xml . constants . xml _ schema
update content description based on itemInfo ' s content description and badge status in BubbleTextView . java to enhance user experience by providing clear
added mouse wheel listener to handle mouse wheel events in TestMouseWheelScroll . java to improve mouse wheel functionality for better user interaction
added closing of the PDDocument objects and a new test for positioning absolute in VisualTester . java to ensure proper resource management and prevent
updated currency pair names and their usage from BTC _ ETH to XRB _ BTC in KucoinAdapters and Kucoin
changed the type of location variables from ` VacuumEnvironment . Location ` to ` String ` in multiple files to improve type safety and
simplified the return statement in BitfinexAdapters . java to improve code readability and maintainability
replaced HashSet with ImmutableSet and updated field handling logic in JsonFormat . java to improve code clarity and ensure default values are output correctly based
added a check for array type and enum type in JacksonXmlFormatMapper to ensure proper handling of enum values in JSON serialization
refactor virtual thread constants and improve thread management in VirtualThread . java to enhance clarity and maintainability of thread management logic
updated the ` DirectoryTaxonomyWriter ` to include a ` shouldRefreshReaderManager ` variable and adjusted related method calls to improve code clarity and
updated VetoableChangeSupport . java for improved functionality to enhance performance and maintainability of the code
adjusted the vertical position calculation in BrowserContentPane . java to correct the positioning of the owner component by adjusting the Y - coordinate
pdfbox - 4892 : do n ' t throw invalidpasswordexception , ioexception instead
added unit tests for handling ` getShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
make sure ` ` close ' ' button do n ' t show in exam mode
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced direct sleep calls with ThreadHelper . waitUntil calls in BackendInitializerHelper . java and TerminalClient . java , and added new test
updated version checking logic in SwingStartup . java to handle exceptions and release status more effectively to improve robustness by ensuring only relevant release status is
added functionality to include a comment in the migration process by introducing a configuration option to control the inclusion of generated files in the database migration process
updated usage and permissions in various plot command classes to include wildcards to enhance clarity and flexibility in command usage messages
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter implementations to streamline the
fix optionprocessor to use ` ` optionname ' ' instead of ` ` namevariable ' '
added a condition to check if the XML suite is parallel in TestNGContentHandler . java to ensure proper handling of parallel classes in the test
updated the logic for enabling acting master and changed the condition for registering first to improve clarity and correctness in handling empty old addresses
refactor : remove static import of enums in ctmethodimpl . java ( # 2598 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to utilize a constant separator for SHA - 64 hashing to enhance flexibility in hashing based on
updated the handling of the SYSTEM _ ACTIONS _ ENABLED parameter to check for null values before parsing to improve robustness by preventing potential NullPointerException
added a new class ` Person ` with a private name field in the ` org . apache . maven . it0074 ` package to provide
do n ' t pass the local address to the gossiper . start ( ) method .
updated the method call to use ` toUpperCase ( ) ` for timeStr in ` AbstractClient . java ` to ensure consistent case handling for time
added time column and time unit assertions to ` SegmentMetadataImplTest ` and updated ` SegmentMetadataImpl ` to include time column and time unit
updated color import from ` java . awt . Color ` to ` net . sf . openrocket . util . Color ` and changed the
added a new subscription to the disconnectEmitters in NettyStreamingService to ensure proper handling of disconnection events
no effective change - use annotationtypesbytereotype instead of annotationnamesbytereotype
danielwagnerhall : fix click scrolling when an element be hidden by double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a custom JNDI lookup mechanism for the JTA TransactionSynchronizationRegistry in JtaTransactionManager . java to enable dynamic JNDI lookup based
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unnecessary functionality
renamed the variable ` enabledCiphers ` to ` result ` and updated its usage throughout the ` JSSESocketFactory ` class to
[ bigquery ] [ table - planner - bq ] fix timestamp conversion in bigquery storage api
replaced multiple null checks with requireNonNull method in Identifiers . java and DatabaseConnector . java to improve code readability and maintainability by redu
rename ` ` input ' ' parameter to ` ` inputmap ' ' in the ` coercevalueforinputobjecttype ( ) ` method
added boundary checks for row and column indices in FlightConfigurablePanel . java to ensure valid indices are within the table ' s row and column
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user experience by ensuring the selection
[ java ] unnecessarylocalbeforereturn : fix false negative with memberselector
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to streamline the code by eliminating
simplified calculations for distance similarity in EuclideanDistanceSimilarity . java and updated test assertions in EuclideanDistanceSimilarityTest . java
check if sst be null before create backup to avoid npe
updated the ` relativize ` method to accept two ` Path ` parameters and added normalization checks to improve path handling by ensuring non - null
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure correct handling of null values for column size and decimal digits
modified the filtering logic to skip temporary files in DeadLetterQueueWriterTest to ensure that the current writer head file does not contain " . tmp
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
rename ErrorHandlerController to Error403Controller and create corresponding controllers for error handling to improve clarity and organization of error - related controllers in the
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both UnixTerminal .
replaced method invocation tree imports with new array tree imports and modified trigger patterns for collection conversion to improve code clarity and maintainability by using
fix for http : / / issues . apache . org / activemq / browse / amq - 2690 - fix concurrentmodification
updated method names and references from ` getDateConverter ` to ` getLdapDateConverter ` and ` setLdapDateConverter ` in ` PasswordPolicy
pdfbox - 4892 : avoid npe if a pdf file have no tree , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error reporting for class creation failures
added ` readerException ` and ` writerException ` to ` LargeStreamletTest ` and updated thread join timeouts to improve exception handling and
updated HomeFragment to dynamically increment extra pages based on user preferences to enhance user experience by allowing dynamic page navigation based on user settings
[ fix ] broken guassians should not be apply on android 11 +
remove unnecessary suppressnode ( ) call from baseparser
refactor FDFParser instantiation to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused test cases
added command to execute keyboard input in AbstractLauncherUiTest and removed an assertion from LauncherInstrumentation to enable keyboard event handling in the launcher
added functionality to map filenames to URLs and serialize it to a JSON file to improve file handling and organization in the output
bugfix # 232347 , make sure that profilerserver . resultsnotified be set to false after each call .
refactor texture loading methods to improve clarity and functionality to enhance code readability and maintainability by using a unified approach for loading images
updated test assertions to remove the " application : " prefix from the context ID to simplify the test case for better readability and maintainability
updated isbn randomizer values from " 9781797745008 " to " 9781797845005 " in Randomizers
updated notification sound setting to use Uri for ringtone handling to improve flexibility in setting notification sound based on user preferences
added a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting loop count for loop - related calls
added a condition to finalize the current stack version for a specific cluster when the upgrade context is standard to ensure that the cluster is finalized
fix npe in portableregiondaoimpl . listregions ( ) when regionid be null
removed duplicate opening of streamManager in ItemOrientedStep . java to improve code clarity and maintainability by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that generates a series of numbers with a random number to demonstrate the
[ fix ] fix checkstyle issue in hotspotgraalruntime and compilertovm
[ gr - 3248 ] throw jvmcierror if pending speculation field be of type long or jlong .
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` and ` ITKafkaStreamsTracing `
[ # 7998 ] feedback constant sum question : add received point to result ( # 7998 )
added a call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java to ensure dynamic color settings are applied when available
added thread management and stack dump functionality in CloseRace . java to improve error handling and debugging for child threads during thread termination
updated return statement in IntPointField to use intValue ( ) method and added multiple assertions for value retrieval in TestPointFields to ensure correct handling
change ` arcSize ` from an ` int ` to a ` double ` and update related calculations in ` MyButton . java ` to improve
improve border width in addandscalemultimedia by use 640 instead of 768
[ hotfix ] rename configuration option minifysqlenabled to shrinkwhitespacesinsql
refactor waitForStateTransitionToEnd method calls in AbstractLauncherUiTest and WorkProfileTest to improve readability and maintainability of the code
added import statements for various configuration classes across multiple test files to enhance configuration management and maintain consistency across the codebase
replaced ` raf . readLong ( ) ` calls with ` DataIO . getLong ( buf , 0 , 16 ) ` for reading single byte
camel - 16462 : camel - http - optimize to avoid unnecessary fluenttemplate . withheader call .
refactor the creation of the proxy classpath to use a builder pattern for module boot paths to improve code readability and maintainability by reducing
add defaultscriptscopeprovider to provide access to the audio / voice scope .
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to manage layer managers more effectively to improve layer management
added a check for an empty queue in DeferredHandler and removed unused methods in Workspace to improve performance by avoiding unnecessary processing when no queue is
added null checks and improved error handling in MapRecordProcessor and TezProcessor to enhance robustness by catching all throwable types instead of
refactor CylinderRegion to use Vector2D instead of Vector for center and center2D to improve code clarity and maintainability
replaced static JUnit assertions with JUnit ExpectedException rules in TestBadUseCases . java to improve test reliability by utilizing a
modified the way subqueries are processed in QueryExecutorImpl . java and added a new test method in StatementTest . java to improve query execution
do n ' t log " visualvm - security customization environment " if it be set to false .
updated the API endpoint in ReviewInterface . java to include an additional parameter for rctag in the recent changes query to enhance functionality by allowing
refactor Test . java for improved readability to enhance maintainability and ease of understanding
updated PBEKeySpec to use ' keyLength ' instead of ' blkSize * 8 ' to ensure correct key length is used for improved
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a method call to writeSectionDefinition ( ) in the RtfDocumentHeader class to enhance the functionality of section definitions in the document header
added distance calculation and error logging for large jump detection in GpsLoggingService . java to improve user experience by providing feedback when a large jump
removed detailed logging statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 49 )
replace boolean fields with Reference < Object > and int fields for rootNameFn and sourceFilterFn in InsightFilter to improve memory management and
simplified the addition of app information in the AllAppsList by removing binary search and directly adding the info to the data and added lists
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed ` ThemedPreferenceActivity `
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose
removed redundant assert statement in FST . java to improve code clarity and maintainability
added an assertion to check if the security policy file exists and is a file to ensure that the policy file is a valid file before proceeding
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to improve test reliability by allowing more time for
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception context
add the ability to publish a mpp image by http to the xmpp client .
camel - 16400 : camel - netty : fix the npe issue of camel - netty producer
updated URL regex pattern to allow trailing hyphens and added tests for valid and invalid host names to improve URL parsing accuracy and ensure correct handling of
remove system . setproperty ( ` ` org . apache . jasper . compiler . disablejsr199 ' ' ) because it be
added handling for null string values in CSVRecordReader and CSVRecordReaderConfig to ensure proper formatting of CSV records with null values
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to enable the use of Liquibase
updated cursor type from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` and ` addImportedStatic
added / / command and / / state to the event topic so that it can be easily differentiate between command and state .
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception
updated case handling for " zkCredientialsProvider " and added corresponding tests in SolrXmlConfig . java to improve code clarity and
fix the mana tablet not be able to pick up the mana from the inventory . close # 1193
added assignment of identifier collection in P25P2DecoderState to ensure the current call event has the correct identifier collection
removed the import of DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter from TestRandomChains . java to streamline the code
updated the thread pool name format in the ` deriveKeyWithScrypt ` method to remove the " - % d " suffix to simplify the
updated the GeneratedCode class to improve code structure to enhance maintainability and readability of the code
updated assertion to check for a non - null definition parameter in TypeDefinitionRegistry . java to improve error handling by ensuring the definition is not null
set the visibility of the shareWithMeIcon view to GONE in LocalFileListAdapter . java to improve the visual appearance of the share
updated the link to Bootstrap CSS from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingWebFilter classes to ensure security by using
added null checks and improved header handling in RouterFilter and RouterServerListFilter classes to enhance robustness by ensuring headers are not null and
enhanced assertion message in TestIndexWriterMergePolicy to include additional context about the document count and segment count to improve debugging by providing more context
added @ Deprecated annotation to multiple classes and methods to indicate that these classes are outdated and should not be used in future versions
added null check for context in CrawlerSessionManagerValve and updated request expectations in TestCrawlerSessionManagerValve to enhance robustness by prevent
modified the ` getJspApplicationContext ` method to use ` AccessController ` for privileged actions when security is enabled to enhance security by allowing access to the
updated the length calculation logic in RocketComponentConfig to use minL and maxL instead of a fixed value to ensure accurate bound boxing
replaced ` @ Singleton ` with ` Scopes . SINGLETON ` for ` NonceService ` binding in ` OpenIDAuthenticationProviderModule ` to
added a lambda expression to update child links in FileWrapper . java to ensure that child links are updated correctly with updated properties
refactor ` doExecute ` and ` buildRealURL ` methods to use ` URI ` directly instead of ` String ` parameters to improve code
increase publish delay from 100 to 500ms in RetrievalBlockingMessageStoreTests . java to improve test reliability by allowing more time for
added a new boolean variable ` mShiftCodesAlwaysOverride ` and modified the logic for determining if shift codes should override based on its value to
updated heartbeat logic to use ` isActiveClusterCoordinator ( ) ` instead of ` getElectedActiveCoordinatorNode ( ) ` and modified leader election
updated formatting of a conditional statement in NearbyActivity . java to improve code readability and maintain consistency
updated filter logic in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and accuracy of the
updated the ` newInstance ` method signatures to include a ` boolean noop ` parameter instead of ` AbstractCommandOptions ` to enhance flexibility by allowing
added a sleep delay before handling IOException and InterruptedException in TestListenTCPRecord . java to ensure proper timing and error handling during the test execution
updated the handling of methodCall . arguments by replacing direct assignment with a temporary array to improve code clarity and maintainability by reducing red
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing loaded libraries to
http : / / issues . apache . org / activemq / browse / amq - 2638 - add sequence support to the
added x509PublishUrl and x509ViewName fields to ClientKeyPublisherMapping and JwkViewResolver classes to enable publishing of client X.
updated the logic for handling single SolrIndexReader in QueryComponent . java to ensure the correct reader is used when no readers are specified
replaced ValueSourceParser with Double2Parser for " max " and " min " functionality to utilize Math . max and Math . min
simplified return statement by removing focusable and pointer event checks to improve code readability and maintainability
removed unused variables ` n ` and ` minScore ` from ` Highlighter ` and ` SpanGradientFormatter ` , and modified the ` next
cloudstack - 8231 : fix user uuid generation for disabled account
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use a conditional bean qualifier for FlowBuilderServices to enhance flex
updated WriteJdbcPTest . java to modify database connection settings and improve table management to enhance test reliability by allowing more than 500 connections and
simplified the look and feel setting logic in DefaultPlatform . java to improve code clarity and maintainability by eliminating unnecessary
replaced instances of ` getDesiredStateEntity ( ) ` with ` stateEntity ` for consistency to improve code readability and maintainability
updated margin calculations in FloatingTaskView . java to simplify margin calculation to improve readability and maintainability of the code
added a condition to break the loop in RootFolder . java and updated the status line message in NavigationShareTab . java to ensure proper control
updated the threadId variable reference in CPUCallGraphBuilder . java to ensure the correct thread ID is used for thread tracking
ggb - 1889 use default toolbar instead of a hardcoded value for perspective
added NetworkAddressChangeListener implementation and improved logging messages in HomekitImpl . java to enhance network address handling and enhance logging clarity for better
updated lease handling in TestHDFSEventSinkOnMiniCluster to use leaseRenewalTime instead of lease to improve clarity and
replaced the usage of ` Optional . absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` link
added null check for exception message in ExceptionHandlerRegistryFactory and created a test for handling null messages in ExceptionHandlerRegistryTest to ensure robust handling
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to improve thread safety and error handling to ensure thread safety
http : / / issues . apache . org / jira / browse / amq - 4358 - fix intermittent test
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` SourcePathArg ` classes to implement
replaced StringBuffer with direct string construction in IllegalArgumentException to simplify code and improve readability by eliminating unnecessary string manipulation
added custom index field name and updated facet handling in ` OrdinalMappingAtomicReader ` and ` TestOrdinalMappingAtomicReader ` to improve
updated the calculation of ` millis ` in ` Instant . java ` to handle negative seconds and non - negative nanos correctly to ensure accurate conversion of
updated buffer type retrieval from ' vb ' to ' vb . name ( ) ' in OGLESShaderRenderer . java and Lw
added logic to block and manage script updates in CopyPaste . java to improve user experience by controlling whether scripts are blocked or not
added a new file TestCMoveLimitType . java with methods for testing character buffer operations to ensure correct behavior of character buffering and improve performance
reset temporal attributes in ChannelState and add a method to check for RecorderType in RecordConfiguration to improve handling of audio packet processing and ensure
refactored code to use array index instead of enhanced for - each loop to improve code readability and maintainability
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align with the
refactor console handling in Main . java and add version printing functionality in VersionCommand . java to improve code readability and maintainability by encaps
replaced the token validation logic in InputStreamBinder . java and removed it from NextcloudRequest . java to streamline the token validation process and
throw eofexception instead of return false for negative nread
added unit tests for group deletion functionality in DefaultGroupProviderTest . java to ensure proper handling of non - existent and non - existent group members
camel - 14263 : camel - ftp - optimize to reduce object array allocation .
deleted the V2ReplicationProtocol . java file to the replication protocol implementation is no longer needed for version 2
replaced instances of ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths `
added new files for ConstructorArgsDemo . java and StrictDemo . java , and renamed StupidFinal . java to improve clarity and
make close ( ) method thread - safe in directtemplatefeaturecollectionfactory . close ( )
updated the assertion condition in WriteResponseHandler to include 2 * DatabaseDescriptor . getReplicationFactor ( ) to ensure responseCount does not exceed the
added a null check for the index number in the ItemRowAdapter class to ensure that the item ' s date created is only valid when its
rename ` ` showanchestors ' ' to ` ` showan ancestors ' ' and add a method to return ` ` selfif
added a check to return early if the application width is less than 12 to avoid unnecessary processing when the application width is less than 12
updated equality check in ChangeLogParameters and added a new test case in ChangeLogParametersTest to ensure correct handling of non - global properties in
changed the ` loggers ` map from static to non - static in ` LogFactory . java ` to allow the ` loggers ` map to be
modify return statement to use getBasePlot ( false ) instead of a direct return of the plot object to ensure that the method returns the base plot
( chore ) camel - rest - server : do n ' t warn if upload directory be delete externally
added a boolean parameter to the ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to control the sending of status 200
added a check for non - empty comments in the multi - line comment condition to ensure that multi - line comments are processed only if they contain
added imports for BuckFileType , FileTypeManager , and FileTypeManagerImpl , and implemented logic to remove specific file types based on their default file
replaced multiple specific function imports with a wildcard import and changed return type of multiply methods from ToLong to ToInt to simplify import statements and
added a new constant ` RTM _ OS _ ERROR ` and updated error messages in ` TestUseRTMLockingOptionOnUnsupportedCPU
formatted code for consistency and readability in ` AccountsActivityTest . java ` to improve code clarity and maintainability by standardizing spacing
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a mockito package import method for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate the use
fix arrayindexoutofboundsexception when use guest to host reflective call .
added context handling and reset functionality to AndroidTestEnvironment and ShadowFontsContract to ensure consistent context management and improve code maintainability
added a method ` toMillis ` in ` TimeGranularity ` and updated date handling in ` PinotDataSourceMaxTime ` and ` Pinot
refactor control flow analysis in ` ControlFlow . java ` to handle null values for ` _ try . getFinally ( ) ` to
updated array comparison logic in Assert . java and modified test messages in ArrayEqualityAssertTest . java to improve clarity of error messages for better
fix switch / cases indentation see http : / / code . google . com / p / mybatis / issues / detail ? id =
updated bitwise operation syntax for index calculation in MeshBuilder . java to improve code readability and correctness
nifi - 1769 : remove unused variable controllerserviceprovider from standardprocessscheduler
added processor handling and integration test for Kotlin in KotlincToJarStepFactory . java and KotlinLibraryIntegrationTest
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION 150 and simplified
added shortcut permission checking and refresh functionality in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed correctly based on the presence of shortcut host
added cases for HISTORY _ SEARCH _ BACKWARD and HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance functionality for handling history search
added null check for core name in CoreAdminHandler . java and implemented a test for reloading a null core in CoreAdminHandlerTest .
added marker selection functionality in NearbyMapFragment to manage the bottom sheet visibility to improve user experience by ensuring the bottom sheet is hidden when
added exception handling to print stack traces in FileSyncAdapter . java to improve debugging and error reporting for debugging purposes
refactor test memory checks to use OutputAnalyzer for better error handling to improve robustness by handling runtime exceptions during memory checks
modified FeedQueues . java to filter out heavy load feeds based on application settings to improve performance by avoiding unnecessary processing when heavy load
add warn log if defaultdrmsessionmanager be use on wrong thread
updated AndroidBinaryDescription to use Locale . US for case conversion and added a setPackageType method in AndroidBinaryBuilder to ensure consistent handling of
changed the MIME type from " text / xml " to " application / xml " in multiple test files to ensure the correct MIME type is used
updated file reference from ` configFile ` to ` INSTANCE . confFile ` in ` Args . java ` to ensure the correct configuration file is used
updated the wait condition in HostPortWaitStrategyTest from " sleep 5 ; exit 1 " to " exit 1 " to align the test with
updated the import statements and data types in HiveExpandDistinctAggregatesRule . java to use LongMath instead of IntMath to ensure compatibility with larger
added multiple checks for GraphicsEnvironment . isHeadless ( ) in mmm Toolkit . java and ppp Toolkit . java to ensure
updated the condition in ExoflameFurnaceHandler to check if the current recipe matches the given furnace to ensure that the
add solverconfig . move _ thread _ count _ none to specify move thread count
fix search withRevInclude and add test
added a new test class Issue582Test for sorting features in a tree map to ensure correct ordering and ordering of features in a mapdb
[ native ] add e2e test for decimal overflow
refactor LoadingCache class to improve cache management logic to enhance performance and maintainability of the cache
added a rule for avoiding non - constructor methods with class name in NamingRulesTest . java to enhance test coverage for class naming functionality
simonstewart : add ` ` expectconditions . elementtobeselected ( ) ' ' method to check if an element be select
added a check for the existence of a view in ViewExistsPrecondition . java and refactored related methods in DatabaseSnapshotGenerator and Jdbc
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations and logging functionality in TaskViewUtils and Utilities classes to enhance visual feedback during task view transitions based on full - screen scale
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in both FeatureFlags . java and RotationHelper . java
added a walk method to ` TempFSTTermsReader ` and modified the handling of document frequency in ` TempTermOutputs ` to improve the
modified the ` create ` method signatures in multiple augmenter factories to include ` SolrQueryRequest ` as a parameter to enhance functionality by allowing the
added null checks for post content and announcement fields in the SingleTableMySQLTriggerTest . java file to ensure that null values are properly handled and
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a new setComparator method to improve code clarity and maintainability
updated string concatenation syntax in PhoenixQueryBuilderTest . java to use double quotes around column names to ensure proper formatting of expected queries for
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization of Spark resources before proceeding
added methods to manage and retrieve total storage pool , limit , and fees in DynamicPropertiesStore to enhance functionality by allowing retrieval and saving of
added support for dev mode in AssetsController and updated related tests to handle resource loading based on NinjaProperties to improve resource management and error handling
updated the method to check for the existence of a map mark by using a helper method to improve code readability and maintainability by using a
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance flexibility in handling default value
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
updated file path retrieval and logging messages in JxBrowserManager . java and added exception handling in FileUtils . java to improve clarity of file
updated image file retrieval logic to use case - insensitive comparison for format comparisons to improve code readability and maintainability by using ` . equals (
[ somfytahoma ] use thing . getuid ( ) instead of thing . getridgeuid ( ) . getid (
[ flaky test ] disable flaky test on github action
refactored OpenWireConnectionTimeoutTest to use static final properties for keystore and trust store configurations to improve code readability and maintainability by
[ dynatrace ] fix npe in dynatraceexporterv2 .
removed a sessionId from the sessionIdToSessionInfo collection to ensure the session is removed from the session info map
added null check for hostname in HeartBeatHandler and updated log message formatting in AlertReceivedListener to ensure proper handling of null host names
simplified the return logic for buffer flushing in ChannelEndPoint . java to improve readability and maintainability of the code
( chore ) camel - kie - maven - plugin : fix classpath issue for kmodulexsdtest
added a test for seeking to mode in ShadowMediaPlayerTest . java and modified the seekTo method in ShadowMediaPlayer . java to
updated method names from ` createTask ` to ` createThrowingTask ` in multiple executor classes to clarify the purpose of the method
added border settings for the tabCloseButton based on Aqua LAF version to enhance visual clarity in the CloseButtonTabbedPane
added connection and read timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to improve request
( chore ) camel - jbpm - xstream : enable wildcard type permission for xstream
added error logging for non - generic diamond types and introduced a new DiamondRaw class for testing diamond application to improve
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated the conditional checks for setting ID and value in Http2Settings . java to use logical AND instead of logical OR for value validation to improve
deleted the file MapInterfaceTest . java and removed its reference to Issue664Test . java to remove unused test files to streamline test
[ hotfix ] remove unstable test sessionspooltest # testdisposedsession
[ geot - 5358 ] fix wms type attribute in xml ( # 5358 )
updated the method for setting the selected index in PopupMenuButton . java to improve code readability and maintainability by using integer values instead
added a check for manual unstashing in TaskbarStashController . java to ensure that unstashing only occurs when the application is
camel - 14836 : camel - core - optimize routecoverage to reduce memory usage
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting on expected events to enhance flexibility in event mismatch messages based on
added a new file ` HeaderFixer . java ` to process and write header files to a specified directory to ensure that header files are correctly
added broadcast functionality for first loading completion in Launcher . java and modified widget binding logic in LauncherProvider . java to enhance user experience by
deleted the ` SuperJumperAndroid . java ` file to remove unused code to streamline the codebase
modified the return value of the ` isDistributed ( ) ` method in ` SystemTableScan . java ` and updated the query string concatenation
removed KeyValuesProviderAware and ObservationConventionAware interfaces to streamline the code by eliminating unnecessary interface definitions
fix potential npe in persistentregistrymanager . processidrematches ( ) .
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct handling
added caching mechanism for date and format handling in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the URL in RemoteAuthenticationEndpointTests to include a filter for username in the attributes to ensure that only valid username is included in the response
updated condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure correct
updated the logging mechanism in the Launcher class to include container information for the launcher ' s ALLAPPS exit event to improve logging clarity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to the test is no longer needed in the project
added null check for newInput and improved debug messages in BugContentProvider , BugGroup , and DeltaInfo classes to enhance robustness and
added a " Reopen in the Browser " menu item and implemented server opening logic to enhance user experience by allowing users to open the JavaScript server
added a new error message for duplicate output specifications and improved semantic exception handling to enhance clarity and maintainability of the error messaging related to
added null checks for the addEntryListener method in BasicTest . java to ensure proper exception handling for null entries in the entry adapter
fix npe in coordinatearrays . reverse ( ) and add test
swapped the order of the setOpen ( ) method call in ToolbarPanel . java to ensure the method correctly reflects the state of
added a new boolean variable ` first ` and initialized it to ` false ` in TestPayloads . java to ensure the variable ` first `
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to simplify overview
added a line to set the destination of the message in NetworkRouteTest . java to ensure the message dispatches reflect the correct destination of the
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the method returns the
amd64floatconvertnode : fix checkstyle violation in util / math / nestedarithmetictest . java
update pending buffer addition logic in HttpClientRequestImpl . java and improve test assertions in HttpTest . java to enhance buffer management and ensure correct padding
updated artifact replacement logic in GetMavenDependenciesTask . java to include " ( ? < ! solr - ) analysis - " to ensure correct
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to simplify code by eliminating unnecessary console output
fix field visibility predicate not apply to query type .
added support for HTTP JSON - RPC configuration by introducing port and enablement to enhance flexibility and control over JSON - RPC configuration based on
added a type check for the folder before removing it from the drag controller to avoid potential ClassCastException when the folder is an instance of DropTarget
refactor the creation of the stub jar into a separate method for clarity and reusability to improve code readability and maintainability by
added new features for the Setup wizard and Workflow helper in StartPageTopComponent . java to enhance user experience by providing more detailed information about the
cassandraserver : fix schedulewithfixeddelay to avoid race condition
simplified the condition for checking the availability of a Boolean in OnlineTestCase . java to improve code readability and maintainability by
changed return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure correct handling of user - specific return values
refactor the handling of idle timeout and failure callbacks in HttpChannelState . java to improve clarity and functionality to enhance error handling by ensuring
updated CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to improve thread safety by allowing non - blocking implementations
updated TABLE _ HEADER _ SEPARATOR regex and added new test cases for table headers to improve parsing accuracy and ensure correct handling of column headers in table
update return value from 32.0 f to 31.5 f in Camera . java to improve camera rendering accuracy
added a preference for starting on - boot setup in GpsSettingsActivity and modified return values in Utilities and GeneralLocationListener to disable the setup
increased the client secret length from 128 to 512 characters in the DefaultOAuth2ClientDetailsEntityService class to improve security by using a
updated error messages in MySQLStoredProcedureTest . java and PostgreSQLStoredProcedureTest . java to include " enablePassingNulls ( true ) "
ignore flaky scheduledmethodmetricstest due to race condition
refactor PinotFS methods to use PluginManager for initialization and error handling to improve code clarity and ensure proper initialization of the Pinot
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is applied for non - English locales
added MetalLookAndFeel import and set it as the current look and feel in the UI to enhance the user interface by using
added synchronization and refactored ping task handling in Bot . java to improve thread safety and ensure thread safety during session management
modified the error handling in GlobalErrorHandler to use the throwable directly instead of its message to improve error reporting by using the throwable directly instead of its
rename parameter ` module ` to ` from ` in ` addReads ` and ` addExports ` methods across ` ModuleTable ` and ` Package
added handling for CmdLineException in PinotAdministrator . java to improve error handling and provide clearer logging for exceptions
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as
refactor boolean variable declarations for consistency and clarity in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and
update zoom level settings in BasicMapViewer . java to use zero and 24 values instead of 10 , 20 , and 7 values to ensure zoom
replaced direct user and group retrieval methods with impersonation utility methods in DrillRoot . java to improve code clarity and maintainability
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider . java ` and
added ArgumentExtractor to the DelegatedClientAuthenticationAction class and updated service resolution logic to enhance argument extraction capabilities for better session management
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure immut
replaced tilecache . destroy ( ) with destroycaches ( ) and createtilecaches ( ) in TileSizeChanger . java
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating unnecessary code
refactor cleanFeedsWithoutSubscriptions method to improve clarity and efficiency in cleaning feeds without subscriptions to enhance code readability and maintainability by
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with a single variable ` auth ` in ` ImmutableAssertionTests . java
nifi - 1741 : use temporaryfolder in filebasedclusternodefirewalltest to avoid test failure on window .
make sure conic through 5 point do n ' t produce nan
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod .
refactor CImage class to introduce imageToArray and createFromImages methods for improved image handling to enhance code readability and maintainability by
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to streamline the
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` and update related references to improve clarity and consistency
replaced manual null checks with ` java . util . Objects . equals ` for null - safe equality checks to improve code readability and reduce
rename ` resolveclassfromcanonicalname ` to ` resolveclassfrombinaryname ` and add @ nullable annotation
added verification for default view properties in NinjaDefaultTest . java to ensure correct retrieval of HTML error , bad request , and not found views
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated padding bottom calculation in DetailFragment . java and adjusted list view position offset in ListFragment . java to improve layout positioning by adjusting
updated exception handling in ZkStateReader to catch InterruptedException instead of Exception to improve error handling clarity and ensure proper thread interruption during
added null checks for field and field values in HttpFields . java and implemented a new test for empty headers in RequestTest . java to ensure
added a check for the availability of the StaticNat service in the network model before proceeding to ensure that only valid static nat rules are processed
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a call to removeExtraEmptyScreen ( true ) in the mWorkspace class to ensure the extra empty screen is removed from the workspace
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to ensure correct positioning based on the fixed width of the
removed the boolean parameter ` showTitle ` from the ` createFragment ` method and refactored related calls in ` ChangeLogFragment ` to
added preEvent , postEvent , and stateContext methods to AbstractStateMachineFactory to enhance state machine integration with the interceptor
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and facilitate future updates
updated role creation in TestAuthorizationApiAuthorizer and enhanced Hive configuration handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
updated properties handling in CheckstyleReport . java to use the build directory for checkstyle cache file to ensure the correct cache file path is used
added logic to stop Jetty and improve error handling in DeleteInactiveReplicaTest . java to enhance test reliability by ensuring Jetty is stopped
added a filename parameter to the FileActionsDialogFragment ' s newInstance method and updated its functionality to display the file name instead of the title to
updated the handling of reorder direction in CellLayout to include INVALID _ DIRECTION for external mode to ensure proper ordering of drag - and - drop
updated InnerTransferRequest to include currency , from , and to fields , and modified API paths in AccountAPI to ensure compatibility with the latest API
fix intermittent failure in writejdbctest # testwritejdbctest and writejdbctest # writej
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and modified the visitIdentifier method to include marker handling for fully qualified types to streamline import statements and
added a method to set the action text color to a primary dark color to enhance the visual appearance of the user interface
added ComparableField import and implemented find method in Manager , StreamSupplierComponent , AbstractManager , MockManager , and MockManagerImpl classes to enhance
rename methods from ` addTestStepsForPickleSteps ` and ` getAfterStepHooks ` to ` createTestStepsForPickleSteps
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to call it to
added support for implicit pre - coercion values in SkylarkParamInfo and related classes to ensure proper handling of default values for
initialize ` lastDisplayedUser ` with ` Optional . empty ( ) ` to ensure ` lastDisplayedUser ` is initialized with an empty
added a new method ` findAll ( OrderSpecifier ... orders ) ` to ` QueryDslMongoRepository ` and a corresponding test in ` Abstract
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions when stopping consensus
planner - 1640 : fix defaultplannerbenchmark to exit warm - up loop when failure
add xread and xreadgroup method to pipeline , add stream support to pipeline
updated methods in LinkedBufferInput and StreamInput to use variable ' n ' instead of ' len ' and ' remain ' for consistency to improve
added a new WebSecurityCustomizer bean and refactored existing configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore . java `
added a method to register a ContentProvider in ShadowContentResolver and modified ContentProviderController to utilize this method to improve registration process and ensure
updated the version parameter from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the latest version
added a line to set the keep - alive configuration in SingleConnectionManager to ensure proper configuration for connection management
[ java ] use supplier for flow control for multicast sender in driverconductor .
fix for npe in 3d locus with no point
added error handling for IOException in HttpServerTestBase . java and modified WebSocket connection logic in WebSocketGeneratorD13 . java to improve robustness and
updated Firefox driver initialization and added screenshot functionality in HttpWebClient . java to enhance compatibility with different Selenium versions and improve screenshot handling
replaced JUnit assertions with AssertJ assertions in multiple test files to improve code readability and maintainability by using a more modern assertion
remove trufflelanguage . getcontextreference , deprecate .
initialized the ` e ` variable to ` null ` in ` StubberImpl . java ` and added tests for handling ` UninstantiableException
updated condition checks in Actor and Group classes to throw an IllegalArgumentException for non - ascendant actors to improve error handling for non - ascend
added location permission handling to the LocationPickerActivity and modified the ContributionController ' s location permission handling to enhance user experience by allowing users to
http : / / issues . apache . org / jira / browse / amq - 4358 - add support for counter on message
added CookieSpec import and set it to standard in GetHTTP request configuration to ensure standard cookies are used for HTTP requests
replaced manual boundary checks with a method call to ` r1 . overlaps ( r2 ) ` to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed a log statement in Air
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors and implemented monitoring URL functionality to enhance monitoring functionality by allowing users to
added a new configuration option for service creation timeout in KubernetesConfigOptions . java to provide a default timeout value for service creation based on time unit
updated NearbyListFragment to set icon resources based on place description to improve user experience by providing specific icons based on place descriptions
added a null check for the package before processing classes in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when accessing the package
added a new file ` PrintInlining . java ` that prints " Passed " to provide a program that prints " Passed "
fix ( javadoc ) : fix nested brace in javadoc tag
[ java ] remove unused initialtermid and starttermid from archive test .
updated EdgeDataTableModel to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) for creating and setting edges to enhance functionality by
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated logging format from ` % d ` to ` % f ` and added logging for playback speed setting to improve clarity of error messages and
fire muc room remove event when cluster be start .
updated the minimize property from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to align with the new configuration settings for improved
added flip and generate mips functionality to the key in TextureHelper . java to enhance texture rendering capabilities by allowing flip and generate m
replaced ` PythonDslProjectBuildBuildFileParser ` with ` EventReportingProjectBuildFileParser ` and updated related references to improve event
[ j2kt ] add library normalization pass to transpiler .
replace ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to
[ hotfix ] [ test ] fix checkstyle violation in memorymanager
added imports for Temporal and TemporalType , and annotated the ConsoleSessionVO class with TIMESTAMP to ensure proper handling of timestamps in the console session
added new files Hbs . java and HbsTest . java to implement a template engine for Handlebars in the handlebar package to enhance
updated chat message handling to check for null or empty hints and refactored message setup logic to improve code readability and maintainability by redu
changed the iteration from iterating over keySet ( ) to iterating over values ( ) in ImportCsv . java to improve efficiency by using values instead of
test : add test for waituntilalertdialogappears ( ) method
added a check for the size of distinct column indices in ReduceSinkDeDuplication . java to ensure that a null return is returned when
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5358 -
regenerate client with updated copyright year ( # 4382 )
updated websocket server and client dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - client " to
make samlauthenticateduser . getattributes ( ) return an unmodifiable map instead of an unmodifiables
fix ` ` setmodified ' ' for ` ` sketch ' ' when change ` ` state ' '
replaced instances of creating new Double and Float with direct return statements across multiple classes to simplify code and improve readability by eliminating unnecessary
replaced ` getDate ( ) ` with ` getTimestamp ( ) ` in ` JdbcDataSource . java ` to ensure correct timestamp retrieval for data retrieval
updated the condition for binding object type in HtmlJndiTreeReport . java to include a check for " javax . naming . Context " to
add write buffer size for specific database types in StorageUtils . java and improve logging format in Manager . java to enhance buffer management for specific database
changed condition from checking for " double " to checking for " mutual " in ImporterGEXF . java to ensure correct handling of
replaced the static final integer FLAG _ SLIPPERY with an import statement for WindowManager ' s LayoutParams . FLAG _ SLI
fix truffleconstantfieldprovider . getarraydimension ( ) to return 1 for array field .
added functionality to retrieve and set Google Drive folder path in the application to enhance user experience by allowing configuration of the Google Drive folder path
ggb - 1889 add shuffling of suggestion on up , down and enter
added @ Nullable annotations to multiple assertThat methods in Truth . java to improve null safety and clarity in method signatures
updated return statements in ArrayUtil . java to correct bit manipulation logic to improve code clarity and maintainability by using more accurate bit manipulation logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if a constructor can be instrumented before instrumenting
added a synchronized multimap for waiting for Anticompaction in StreamInManager and updated related classes accordingly to ensure thread - safe handling of
added a boolean field ` isKeyguardSecure ` and methods to get and set its value in ` ShadowKeyguardManager ` , along with
added serialVersionUID fields to StringDialog . java to ensure compatibility with serialization versions
updated string handling in GrblUtils to replace ' > ' with a single ' > ' and added a conditional check for the number of
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the checkDrained ( ) call in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that
updated LIGHTS _ NUM and LIGHT _ INTESITY values and changed light shader from " light " to " vertexpath " and
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to utilize the project '
changed the type of the ` featurePaths ` list from ` List < String > ` to ` List < PathWithLines > ` and updated
refactor Gson , JsonArray , and JsonObject classes to improve code readability and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array and added a TODO comment for 2022.1 in PubRoot . java to
added a call to close the ParcelFileDescriptor using Shadow ' s directlyOn method to ensure proper resource management by closing the ParcelFile
added thread - local implementation for managing prefix indices in ` BasisLibrary ` to improve thread safety and maintainability of prefix index management
added import for LogLevel and annotation for HttpConnection in TestDistributedStatsComponentCardinality . java to enhance logging capabilities for debugging purposes
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to ensure that calls to ` throwIfImmutable ( ) `
added @ NotNull annotation to onApplicationEvent method and updated GrpcClientBuilder to use the GRPC plugin URL to improve null safety and ensure proper
move graal demo from jline - demo to jline - demo - graal
truffle : only invalidate the function array if the insight key have change .
added platform - specific handling for writing XML files in GenerateManifestStep . java to ensure proper formatting of line endings in manifest files on Windows
fix for sf bug # 3531161 : assert ( neverreturnnull ( ) ! = null ) fail
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and modified null checks in ThingResource . java to improve code robustness
fix cancellableexception should not be throw by masterjobcontext . createcancellationexception ( )
pdfbox - 4892 : do n ' t open a page if there be no image to open
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to allow access to All Ap
replaced direct activity initialization with Robolectric ' s buildActivity method to simplify activity initialization process and improve code readability
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve clarity
rename classes from ABCase to TestABCase across multiple files to improve clarity and consistency in class naming conventions
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
replaced the direct assignment of RocketChangedEventHandler with a method call to doSimsChanged to improve code clarity and ensure sims
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to change Maven dependency groupId and artifact IDs to enable the change of Maven
refactor file path initialization and segment checking logic in IndexingJob . java and SegmentChecker . java to improve code clarity and ensure segment
updated comparison operator from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve performance and maintainability by reducing the number of
rename ` JsonExamples ` class to ` Examples ` and update package - info file to improve clarity and maintain consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve visibility into the extraction process for better debugging and debugging
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new file ` Main . java ` containing a class to demonstrate the usage of the ` java oop entry point `
fix a problem with sip account registration that result in a multichat operation set failure .
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary
refactor dependency resolution logic to use memoized suppliers instead of ImmutableSet for better performance to improve performance and readability by reducing unnecessary
updated the count method from ` remoteContainsResults . stream ( ) . count ( ) ` to ` remoteContainsResults . size ( ) `
added charset extraction from content type in ExtractingDocumentLoader . java to ensure proper content encoding is included in metadata
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
fix playerinventory . getslot ( ) to return early if slot be - 1
add -- ignore - transitive - repositories cli option for maven execution
updated the injection annotation for BackgroundJobManager in ContactsPreferenceActivity . java to ensure proper dependency injection for background job manager
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android support library
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is not initialized
added a condition to break execution if the matcher ' s start and end are the same and the index equals the string length to ensure proper handling
added a port configuration to the IntegrationTest annotation in MvcITest . java to ensure the test runs on the correct server port
added a new User Defined Function ( UDF ) named " reverse " in FunctionRegistry . java and implemented its functionality in UDFReverse . java
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in ` Dispatcher . java ` and updated related return statements in `
refactor Tracer class to improve code readability to enhance maintainability and ease of future updates
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase until we fix it
replaced multiple specific assertions with a wildcard import and modified import statements in XMLChangeLogParserTest . java to simplify import statements and improve code
added synchronization to clear buffer in StarTreeRecordStoreCircularBufferImpl . java and created a corresponding test in TestStarTreeRecordStoreCircular
updated the values for forecastMinutes , forecastHours , and forecastDays in OpenWeatherMapOneCallHandler . java to adjust time and time
added timeouts to multiple test methods and renamed ` lastFetchTime ` to ` lastFetchRequestTime ` and ` previousFetchRequestTime ` to
added logging and improved handling of remote target handles in RemoteTargetGluer . java and FloatingHeaderView . java to enhance debugging capabilities
updated ` CucumberPropertiesParser ` to use ` splitAndThenFlatMap ` and changed return types of ` parseRerunFile `
added multiple item for livingrock , chisel , and biome chiseled to the creative tab to enhance the user interface
updated assertions in TestRadioButtons to compare sizes of optItem and retrievedOptions to ensure that the expected behavior reflects the correct expected behavior of
added support for file sizes in RCFileCat and implemented a method to retrieve the number of rows to enhance the functionality of RCFileCat by
renamed multiple classes related to clustering and hITS for consistency to improve code clarity and maintainability by standardizing naming conventions
added a new method ` checkNDArray ` and multiple calls to ` checkNDArray ` in ` JnaUtils . java ` to ensure
[ hotfix ] [ doc ] fix typo in blobserver
fixed bug 129372 - unusedprivatemethod no longer report false positive on static private method call from an enclosing
renamed lexicalScope to lexScope in Global . java to improve clarity and consistency in variable naming
added a test method to verify the auto - startup of the SFTP inbound adapter to ensure that the adapter is properly stopped during auto - startup
added getter methods for level and root in Node , Quadtree , AbstractNode , AbstractSTRtree , and STRtree classes , and modified constructors
modified version parsing logic to handle both single and double - digit minor version numbers to ensure accurate extraction of version numbers from the version string
added a check for non - empty tags before adding to the ActiveItem to ensure that tags are only added if they are not empty to improve
added a new method ` parseDateTimeStringToEpochMillis ` in ` DateTimePatternHandler ` and a new ` fromDateTime ` method in ` DateTime
refactor disassemble method to remove session parameter and simplify cache handling in CustomType . java to improve code readability and maintainability by redu
refactor Log4j2ConfiguratorServlet for improved logging configuration to enhance performance and maintainability of the logging framework
replaced instantiation of HiveException and AuthorizationException with direct return statements in StorageBasedAuthorizationProvider . java to simplify code by eliminating unnecessary
updated the command prefix handling in CGoCompileStep and added a new test for C++ prebuilt dependencies in GoBinaryIntegrationTest to improve
added @ Buildable annotation to CustomResource . java to enable the use of a builder package in the Kubernetes API builder
removed the @ Override annotation from Only . java to streamline code by eliminating unnecessary method overriding
added a constant for the socket timeout in the HttpClientFactory to limit the connection timeout to three hours for improved performance
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
add ` ` enable all but trace ' ' constraint to the security filter .
added the @ Singleton annotation to the ApplicationController class to ensure proper dependency injection for the ApplicationController
updated username assignment logic in ShareActivity to use OwnCloudAccount for improved user identification to ensure a valid username is used based on the
added BatchStatus import and a test for resuming a paused job instance in SimpleJobLauncherTests to ensure proper handling of paused job executions in
added null check for cacheConfig in HttpSyncDataService and refactored data refresh logic in DataRefreshFactory to improve code robustness and
[ grid ] refactoring to make dockersession public
[ j2kt ] fix compilationunitcontext . getpackagedeclaration ( ) to use the default package name
pdfbox - 4892 : do n ' t parse dictionary , a suggest by valerybokov
fix checkstyle issue in net / distributedlanczos / testdistributedlanczossolvingcli . java ( # 1
refactor HttpServerTestBase class to improve code readability to enhance maintainability and facilitate future development
fix test break by fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
added tests for handling inner bean lists in ` NestedBeanIgnoreNulls ` to ensure correct behavior of ` NestedBeanIgnoreNulls ` when using nested
added a new interface ` RedissonAutoConfigurationCustomizer ` and an autowired dependency in ` RedissonAutoConfiguration . java ` to
fix bug in indicator . todouble ( ) and add test
added new methods ` execInContainerWithUser ` to handle user - specific commands in ` ContainerState ` and refactored ` ExecIn
update interestedInByteMessages and interestedInTextMessages to use bitwise OR instead of a hardcoded true to improve readability and maintainability of
added unit tests for attribute conjunctions and negation in the Semgrex class to ensure correctness and functionality of semantic graph parsing in the
added a broadcast intent to send a " CLEAR _ PULL _ UNREAD " in HomeFragment . java to enhance user experience by
modified the initialization of isPreGingerbread and overScroller in TouchImageView . java to always set isPreGingerb
add flush method to defaultprofilevalidationsupport so that it do n ' t leak memory
( chore ) camel - base - engine : fix the veto problem
added FloatingActionButton functionality to manage a FAB menu in ShareActivity to enhance user experience by allowing users to open a FAB menu
added support for inline formatting in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages in multiple files to replace " tecken " with " token " to improve clarity and consistency in error messages related to
updated server check logic in AuthenticatorActivity to ensure server is checked before binding to operations service to improve user experience by preventing server check from being
updated Position construction to use getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure accurate positioning of the node
added waitFor method calls for processor , outputProcessor , and errorProcessor in CxxPreprocessAndCompileStep . java and managedThread . java
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented the ` mergePersonAttributes ` method in ` Core
make mapcontainer . getapproximatetosize ( ) public and remove checkifloaded ( ) from checkifloaded ( )
added support for enabled SSL protocols in Netty web server configuration to enhance security by allowing customization of SSL protocol settings
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a wrapper class for thread - safe handling of objects to improve thread safety and
updated QueryDslMongoRepository to handle null property and added a test for empty path expressions in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest for consistency and clarity to ensure correct equality checks for RoundRectBorder behavior in tests
added checks for empty cluster genesis configurations and improved error handling for empty clusters to ensure robustness by preventing operations on empty clusters and
remove parallel test for $ . confirm ( ) . shouldhave ( ' wait ' )
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a length check for the sign array to ensure
changed condition from " if ( windows ) " to " if ( ! windows ) " in ProcessInformationsPanel . java to ensure correct handling
renamed methods in MoreCollectors for better clarity and consistency to improve code readability and maintainability by using more descriptive names
added initialization and null checks in BitmexStreamingExchange , BitmexStreamingMarketDataService , WebSocketClientExtensionHandler , and Bit
added validation for invalid latitude and longitude in GeoPointField . java to ensure that invalid latitude and longitude are handled correctly
refactor methods in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency in file handling to enhance code read
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated getTableDocument method to include a boolean parameter for managing dependent tables to enhance flexibility in retrieving table documents based on the presence of dependent tables
added a check to prevent consecutive uploads without coordinates in UploadActivity . java and updated UploadPresenter . java to handle this case to improve user experience
added caching functionality for profile data retrieval and modified profile data retrieval method to improve performance and maintainability of profile data retrieval
refactor JpaMetamodelEntityInformation to enhance identifier derivation logic and improve property value handling to enhance clarity and maintainability of property
phoenix - 1758 add index index and table timestamp test to ensure that the index have the same timestamp for all table and
do n ' t register custom jersey exception mapper if registerdefaultexceptionmappers be false .
fix a bug in the entry editor when create a new entry
modified nativeCreateNSWindow method to include an owner pointer parameter to enhance functionality by allowing the window pointer to be retrieved from the owner
updated SQL command to change the table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to ensure the correct table name is used
added a new ` STOCK ` tile and updated related methods in ` Tile . java ` to enhance the visual appearance of the Sto
fixed - java . lang . classcastexception be throw by redisson - client . getbuckets method if codec be specify in redisson -
add findunrelatedtypesingenericcontainer annotation to detect unrelated type in generic container .
added BackProgressAnimator to manage back animation progress to improve user experience during animation transitions
changed the ` _ initialPageNo ` variable from final to non - final and added logic to update ` _ contentLimits ` based on the
fix ( jedis ) : fix crc16 performance regression
added support for parsing comments in the FormattedSqlChangeLogParser to support single - line comments in changesets
replaced direct instantiation of ` JarArchiver ` with a variable declaration in ` MavenArchiver ` and set it in ` AbstractJarM
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using a more
simplified the condition checks in ` TSServiceImpl . java ` and added a new test method ` multiAggregationTest ( ) ` in
added support for reading pixel data using ByteBuffer and ByteBuffer in GwtGL20 . java to improve error handling for unsupported graphics formats and ensure compatibility
refactor test methods for consistency and clarity in OutputMemoryTest , PrintR , and VarDump classes to improve code readability and maintain
updated InlineBytecodeGenerator to handle exceptions related to javac - compiled classes and introduced a lastException variable to improve error handling by providing clear
add class initialization trace to nativeimagebytecodeinstrumentationagent . class initialization
[ hotfix ] [ broker ] fix typo in basebrokerrequesthandler parameter
replaced Google Guava ' s CacheBuilder with Caffeine ' s CacheLoader for loading topic routes to utilize Caffe
mbtiles : set read - only by default when create jdbc datasource
updated the regex pattern for invalid target release in FindBuildToolFailures . java and added a fatal error compiling in FailureLogAnalyzerTest .
updated URI construction and added location intent check in DetailFragment . java to improve location location handling and ensure proper URI formatting
modified the initialization of referencedIds to handle null cases when getInheritedParameterContexts ( ) is null to improve robustness by preventing potential
refactor ClassLoader methods to improve code readability to enhance maintainability and facilitate future updates
added functionality to set origin response headers in ProxyRequestHelper to ensure correct handling of response headers in the request context
removed the new ProfileSettingDrawerItem ( ) method from GpsMainActivity . java to streamline the code by eliminating unnecessary functionality
added XML validation attribute handling in multiple classes to enable dynamic validation based on configuration settings
danielwagnerhall : fix the firefox driver ' s javascript string handling in the firefox driver .
modified the handling of fetch size and max rows in IoTDBStatement . java to ensure fetch size does not exceed defined limits to improve flexibility
refactor isCountOptimizable method to allActionsAreOptimizableFilters and update related logic to improve clarity and maintainability of the logic
added node and mouse event handling for node and mouse click events in StandardVizEventManager to enhance user interaction with selected nodes and mouse interactions
replaced direct calls to ` buffer . setMemory ` with a private method ` zeroBuffer ` to improve code readability and maintainability by
[ drools - 725 ] add getter / setter for xorgroup in terminalnode .
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elimin
replaced direct calls to ` getRelativePath ` with ` getPathPrivateImpl ` and added a new method ` getAllAbsolutePaths ` to improve code cl
fix # 119 - fix issue with dstu2 attribute handling ( # 119 )
updated the ` changeSchemeIfIsIsWebSocketUpgrade ` method to use ` containsEncodedParts ` for URL encoding to ensure correct handling of encoded
rename suite config file to be more descriptive
refactor CxxPlatform retrieval logic into a separate method ` getCxxPlatform ` to improve code readability and maintainability by encapsulating platform
added imports for ` IndexReader ` , ` Search . Hits ` , ` Field ` , ` Searchable ` , and ` Similarity
modified ` ConcurrentLinkedStack ` to handle null values before returning the current value and updated tests for ` pop ` and ` iterator bubbles
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before creating a new String array to avoid potential NullPointerException when mDirectories is null
added a condition to check if overview state is not enabled and first layout is not present in RecentsView . java to ensure proper handling
added multiple package - info . java files for various Apache Lucene packages to improve documentation clarity and organization of the codebase
added a line to set the text of the visible auto leveler in AutoLevelerTopComponent to improve user experience by providing a clearer
added post - optimize callback handling in DirectUpdateHandler and DirectUpdateHandler2 , and implemented post - commit callbacks in UpdateHandler to enhance the
updated the Inflater and Deflater constructors to include a boolean parameter and adjusted the handling of the compressed byte array to ensure that the
removed the check for user data in Shaderc . java to simplify the code by eliminating unnecessary checks
added a check for local MetaStore in the retry condition to ensure proper handling of retries when the local Meta Store is used
ignore connectionclosedexception and timeoutexception in heliossolologservice
refactor Subject class to improve code structure to enhance maintainability and readability of the codebase
use weak reference map in abstractserializationservice to avoid memory leak
fix typo in hssfpalette . findsimilarcolor ( ) and add test
chore ( regen ) : update license year for generated file ( # 1 )
danielwagnerhall : add some more test for find element by numeric id .
added a flags parameter to multiple registerReceiver methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to enhance flexibility in receiver
upgrade to ffmpeg 0.10 . 9 - 1 and fix test failure
modified OggInputStream and OpenALMusic classes to manage and manage the previous input stream to ensure proper resource management and prevent memory leaks
updated the failure message handling in AssertionResult . java to use a constant for null response to improve code readability and maintainability by standardizing
[ te ] fix the anomaly migration error when there be no anomaly
refactor BaseActivity and DetailActivity to use a custom showToast method instead of direct Toast calls to improve code readability and maintain
updated the method used in Request creation to use ` httpMethod ( ) ` and ` requestTemplate ( ) ` instead of ` method ( ) `
added name validation and refactored LDAP referral handling in LDAPCertStore . java to improve error handling for missing or invalid names and enhance
refactor code to extract retain logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
rename AdapterViewTest to ListViewTest and add a new test for item click handling to improve clarity and functionality of item click events in
[ hotfix ] [ test ] move checkpointfailuremanageritcase to classrule
remove genericitemuiprovider since it ' s no longer need
add the ability to set the selected object in the sipcomm selector box
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to ensure the access static method of FileSystemPool is accessed as a
added a line to set the server ' s host using HTTP _ INFO . bindAddress to ensure the server ' s host is correctly configured for
updated token validity settings for new client based on heart mode and grant types to enhance flexibility in handling different grant types during client registration
added a new ` CloverInstrumentationFilter ` class and modified the filtering logic in ` TestInterfaceAudienceAnnotations . java ` and ` Split
added support for the Smartmi Evaporative Humidifier in MiIoDevices and updated the read - only comment in Read
fix plausible break do n ' t work properly with the mining cost
changed the access modifier of the method ` setScrollRangeDelta ` from private to public to allow access to the method from other classes
ambari - 20688 . ambari should not be able to create a cluster / host if there be no repository to manage . (
simplified the condition for checking missing values in the IntHashSet class to improve code readability and maintainability by using logical OR instead of
added serializable to ruleadminadministrator so that it can be create by user .
refactor CrossOriginFilter to use Set for allowed origin and timing origin patterns instead of List to improve performance and maintainability by reducing duplicate
updated test files in BaseG3dHudTest . java to replace " g3d / cube _ anim . g3dj "
added error handling for negative solidifiedPosition in Manager . java to ensure robustness by logging errors when updating the latest solidified block
hbase - 15926 fix npe in execresult . getvaluetype ( ) when return null
added a method ` hasAccess ` to check access permissions and modified error handling to include null response checks to improve code clarity and ensure proper error
replaced the method ` writeTo ` with ` getStubClassBytes ` in ` ClassMirror . java ` and refactored the jar file
added a TextView to display the share internal link text based on the file ' s folder or file type to improve user experience by providing a clear
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent behavior of string formatting across different locales
changed the condition to check for SATURDAY in ModelZooTest . java to ensure that SATURDAY is not equal to
updated input hiding logic in AllAppsContainerView and LauncherAllAppsContainerView to ensure proper handling of IME visibility based on device
added inmemoryeventstorageengine to event storage test so that it do n ' t interfere with multiple test
replaced the method for retrieving the parent directory with a native call to get the mount name in BsdFileStore . java to improve functionality
add test case for issue # 1599 methodcallexpr # 1599 ( # 1599 )
added support for optional x , y , and z parameters in the SpawnCommand class to enhance spawn functionality by allowing x , y , and
added minimum content dimension constant and refactored methods to use getContentAreaWidth ( ) instead of getDesiredWidth ( ) to improve code
move graalcompilertest . testcodeinstall to graalcompilertest . testcodeinstall
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check classes to the failedChecks list in UpgradeCheckRegistry . java and modified the addColumnsToUpgradeTable method in UpgradeCatalog2
updated the implementation of the Environment class to improve performance and maintainability of the code
added a LuceneTestCase import and a BadApple annotation to RecoveryAfterSoftCommitTest . java to address a known bug related to
modified the path construction logic in CodenameOneImplementation . java and removed a warning message in HashtableContent . java to ensure proper path handling
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource imports with a wildcard import and modified resource accessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser
added import of Security and set TLS disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms
updated ` AbstractCxxDeps ` to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY ` to
renamed expectedDirectory and actualDirectory variables to expectedStubDirectory and actualFullDirectory for clarity to improve code readability and maintainability by
removed the ` @ DoNotSub ` annotation from the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to streamline
updated folder name hint logic to check for empty titles before setting text to improve user experience by providing a clearer hint when the folder title is
added a parameter " uaa " to the loadClientByClientId method calls in UaaResetPasswordServiceTests to enhance test coverage for different
changed method visibility from public to private for ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` methods in ` ShadowSQLiteDatabase .
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle closed state appropriately to ensure accurate representation of value values
refactor MimetypeIconUtil class to improve code readability to enhance maintainability and facilitate future updates
change method name from ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in method
added a new test method ` negateInstanceOf ` in ` UnwrapParenthesesTest . java ` and updated the ` UnwrapParentheses
added a ` built ` flag and a ` teleport ` method to the ` Location ` class to control the behavior of location creation based on the
replaced direct Base64 encoding with Base64Utils for better URL handling in TokenKeyEndpoint to enhance security by using a standard Base64 encoding
updated import statements and changed statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the ` ContainerAnnotation ` annotation to ` ContainedBy ` to clarify the purpose of the annotation being referenced
added a null check for the ` getId ( ) ` method in the ` ObjectIdentityImpl ` class to ensure that the ` getId ( )
refactored the handling of muffled tweets in TimeLineCursorAdapter to improve clarity and maintainability of the code by encaps
updated user profile activity to display verified text based on theme settings to enhance user experience by displaying verified text based on theme settings
removed the static instance variable from the AbucoinsDigest constructor and made the timeDiffFromServer variable final to improve code clarity and enforce
camel - 14284 : camel - mongodb - add autowired option to allow to configure the mongo connection .
added a sourceIndex parameter to the AttributeMapping constructor and related methods to enable dynamic indexing based on the source index for better data access
log ` ` corrupt column statistic find when alter partition ' '
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled for
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geoserver ] escape html for email in geoserver home page
move reflections with subsystem from modulemanager to modulemanagerimpl .
refactor JoinModeller to use the number of features instead of a fixed value for mean and variance to improve clarity and accuracy of the
added a check for the length of the command before processing it in AlgebraProcessor . java to ensure that the command string is not empty before
added conditional checks before logging debug and trace messages in SingleNodeKafkaResumeStrategy . java to improve performance by avoiding unnecessary logging when debug
replaced the static long ACTION _ SET _ PLAYBACK _ SPEED with a reference to PlaybackStateCompat . ACTION _ SET
removed deprecated ' automatic ' separation warning and updated motor event handling in multiple classes to improve code clarity and ensure proper initialization of motors
tika - 3496 -- allow ascii and unicode name length to be equal in msownerfileparser . patch by jbellis for
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to skip tests that are not deterministic on JDK 1.
refactor lockFile creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated sync interval settings and added notification settings in UpdateUtils . java to enhance user experience by providing clearer sync intervals and notifications for version 5
added a check to return null if the username equals the FEDERATION _ USER to ensure proper handling of FEDERATION _ USER
truffle : do not convert truffleobject to truffleobject if the parameter be not a truffleobject
refactor JakartaClientShutdownWithServerWebAppTest to use a more concise list filtering method to improve code readability and
logback : do n ' t try to access the file if the filter chain do n ' t exist .
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
removed unused import of Version from CreateIndexTask . java to streamline code by eliminating unnecessary dependencies
added handling for missing primary keys in the ` MissingPrimaryKeyChangeGenerator ` class to ensure correct schema and catalog information is set based on database context
added ` MetastoreException ` to the ` execute ` method signature and modified exception handling in ` MsckOperation ` to improve error handling
retry kafkaproducer transaction commit when exception occur during recovery
[ rocketmq - 2598 ] fix duplicate call to getreceipthandle in the forwardmessagetodlqactivity
added service handling functionality to DockerComposeContainer and created a corresponding test class to enhance flexibility in DockerComposeContainer by allowing multiple service names during
fix : use collectionutil . copyset ( ) in export and structcontextdecorator
removed HTMLCleaner usage and simplified XML return statement in FeedParser . java to streamline XML processing by eliminating unnecessary code and improve
removed a condition that checks for ` AppsCustomizePagedView . DISABLE _ ALL _ APPS ` in ` Launcher .
changed data types of multiple energy - related variables and methods from int to double in MeterRealtimeBodyDataDTO . java to improve precision in
added a new JApplet class ` bug4150029 ` that creates temporary directories and creates a file chooser to ensure proper directory management
added a boolean flag ` isSparkConfigUpdated ` and updated related methods in ` HiveConf ` , ` SparkClient ` , and ` Spark
added a ` getLongPressIndicator ( ) ` method to ` AppIcon ` and ` AppIconMenuItem ` classes and modified ` Launchable `
fix wkb writer to write empty polygon without srid
refactor NativeLibraryMergeEnhancer to use a builder pattern for creating UnflavoredBuildTarget instances to improve code readability and
added a new file MultiplyByMaxInt . java that contains a method to multiply an integer by the maximum value of an integer to improve
removed the call to ` searchView . onActionViewCollapsed ( ) ` and added a drawer indicator enabling condition for the current file to
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the codebase
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code
( chore ) camel - dmn : improve error message for feel expression compilation error
replaced instances of ` @ ContainerFor ( RTA . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple
updated file sending message to include the duration of the file being sent to improve user feedback by indicating the duration of the file being sent
updated the way the base class name is retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to ensure proper access to the
fix readresponseresolver . isvalid ( ) to return false if data be not present .
update freeSize calculation in StoreDirect . java to optimize memory usage by rounding to 16 to improve memory efficiency
refactor the ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and update its logic for handling touch events to improve touch
replaced instances of ` SslContextFactory ` with ` SslContextFactory . Server ` and ` SslContextFactory . Server ` in multiple server classes to enhance
removed the ` PrivilegedSocket ` class and simplified the socket connection initialization to simplify the code by eliminating unnecessary security checks
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
updated ` AbsSwipeUpHandler ` and ` TaskViewUtils ` to handle ` finishRecentsAnimationOnTasksAppeared ` calls
updated NearbyMapFragment . java to conditionally remove current location marker and add a null check for curLatLng before adding it to
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of directly using the ` client ` object
updated SqlSourceBuilderTest to use @ BeforeEach instead of @ BeforeAll and modified SQL query formatting to improve readability and maintainability of
http : / / issues . apache . org / activemq / browse / amq - 2698 - wait for the consumer to
added tests for handling UnknownKeyException and Unknown rowKey in SlidingGanttCategoryDataset to ensure proper exception handling for invalid key and row key
updated ShenyuTrieRuleListener to handle null conditionDataList and added return statements in ZookeeperSyncDataService to improve code robustness
lightcontrol : add clonefields ( ) method and rename spatialtolight ( ) to spatialtolight ( ) .
updated the logic for determining ` _ hideStacks ` and simplified stack trace handling in ` StdErrLog . java ` to improve code clarity
updated ` HttpSessionEventPublisher ` to utilize a new ` getContext ( ) ` method for event publishing and added null checks for the application context
added a semantic check to ensure the syntax of CREATE CQ statement has changed from v0.14 to improve error handling for CQ statements
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink
modified custom simplification logic in CanonicalizerPhase . java to include a counter for known nodes to enhance clarity and maintainability of the simpl
updated the context parameter for retrieving the file type icon in ActivityListAdapter . java to ensure proper context is used when retrieving the file type icon
updated ` readIdentifierWithSchema ( ) ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) `
( chore ) camel - bq : support read timestamp from bigquery table
added ` findViewWithTag ` method implementation in ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest `
updated enumeration types to use generics in multiple classes to enhance type safety and improve code clarity
updated import statements in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic to improve annotation handling and ensure correct method name is used for
svm : fix resourcefeature . getclasspath ( ) for jar file
add ` cublas . cuda _ dnn _ patchlevel ` to presets for cuda 3.5 +
refactor ` ResourceLoader ` to handle multiple layout directories for resource loading to improve code readability and maintainability by reducing duplication
use blockface . down for redstone torch when not use simpleattachablerenderablematerialdata
added support for VARBINARY case in RelToStageConverter to enhance compatibility with VARBINARY data types
removed unused import of DateHelper in NoteAdapter . java to streamline code by eliminating unnecessary dependencies
updated backup handling to differentiate between saving and loading failures to improve user experience by providing clearer feedback on backup creation failures
mow - 1640 fix the position of ` ` simple ' ' button in web
replace the file creation method in ShadowParcelFileDescriptor . java to simplify the file creation process to improve code readability and maintainability by
replaced poll ( ) and offer ( ) methods with addFirst ( ) and removeFirst ( ) methods in StackBasedSecurityContextHolderStrategy .
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
canonicalize ` ` ^ y = = 0 ' ' to ` ` y = = 0 ' ' for x ^ y = = 0 '
added a constant STRING _ ARRAY to TypeFactory for string array type handling to improve type management for string arrays in the application
refactor keyboard hiding logic to use a dedicated hideIme method to improve code readability and maintainability by centralizing keyboard hiding
force bit density to fix network issue in state container
updated assertions in ` TimelineMetricCacheSizingTest ` and improved cache management in ` TimelineMetricCacheTest ` to enhance read
add optimization to the gl _ max _ texture _ size to avoid multiple texture load .
[ java ] call trystoplogrecording after try to stop log recording .
added a condition to reset startPosn if isInTransform is true to ensure proper initialization of startPosn when transformation is in progress
add querycontext . isskipstartree ( ) - > querycontext . isstartreedisabled ( ) , use it in querycontext .
added a boolean flag ` lockNearbyView ` and modified related methods in ` NearbyActivity . java ` to manage progress bar visibility
add maptransformer . of ( map ) and map . inverse ( bimap ) .
updated imports and class names in EmeddedObjects . java and EmbeddedObjects . java to improve code clarity and maintainability
added support for loading launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget loading functionality by utilizing a SparseArray
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to standardize event handling and
added methods to get and set calling UID and calling pid in ShadowBinder and implemented reset functionality in ShadowBinderTest to enhance functionality and ensure proper
replaced the ` @ AutoValue ` class with a non - final class and updated the ` ExpectationFailure ` class to improve type safety
removed warning log for unsupported message deserializing in BitcoinSerializer . java to clean up the code and improve readability
simplified the assignment of newW and newH based on targetWidth and targetHeight to improve code clarity and ensure new dimensions are
added support for handling special characters in Markdown rendering and updated tests for verification to improve Markdown rendering accuracy and ensure correct handling of newline characters
added a neutral button to the share password dialog and refactored the password sharing logic into a separate method to improve code readability and
refactor mapping methods to use a dedicated class for accessing file channel methods to improve code readability and maintainability by reducing duplication
( chore ) camel - abstractassert : fix test by use string . randomalphanumeric ( )
added new options for slider AM keytab and updated existing options in LlapOptionsProcessor . java to enhance functionality for setting slider AM keytab
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and updated animation handling in the ` Extraction
added functionality to manage and assert workspace loading status in LauncherModel . java to ensure that shortcuts are only added when the loader has completed and
updated data and isFinished fields in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to be final and simplified
updated method signatures and class names in IssueInterface , ValidationReport , and JsonValidationReport to improve clarity and functionality to enhance code readability
added a method ` safeProviderName ` to safely retrieve the cipher provider name to improve error handling and provide clearer output when the cipher provider name
replaced instances of ` getDynamicConfiguration ( ) ` with ` getFlinkConfiguration ( ) ` across multiple files to align with the new fl
changed log level from WARNING to OFF in CCJSqlParserUtil . java to adjust logging behavior for better error handling
removed conditional check before appending a newline in AggregateLifeCycle . java to streamline output by eliminating unnecessary indentation
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow access to these constants
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the test for it covariant override functionality
refactor curly method to use a new Qtype variable instead of a hardcoded value to improve code readability and maintainability by reducing
camel - 16400 : camel - core - model - reloadstrategy should use the type converter to load route definition from xml instead of the
added space minimum and maximum values to the X - axis in ScatterChart to improve the visual representation of the X - axis in the
corrected spacing in the string append operation in ExpressionStringBuilder . java to improve code readability and maintain consistency
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` , ` BaseState ` , and `
added a check for the presence of the " UTF8 " key in the properties file to ensure that a valid UTF8 encoding key is provided
updated TestReproduceMessage . java and LuceneTestCase . java to improve error handling and seeding annotations to enhance test reliability
added a new UI event for long - pressing an AllApps item in StatsLogManager and implemented logging in ItemLongClickListener to enhance user
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure that
added a condition to check if ` showSectorLandInfo ` is true based on the ` showSectorLandInfo ` flag to enhance
fixed compiler warning concern rawtypes compositetype < ? >
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the buildNearbyRandom method to accept a boolean parameter for random selection options to enhance functionality by allowing dynamic selection of nearby random values
remove temporarycache . expireafterwrite ( ) and use cachebuilder . expireafterwrite ( ) instead
added visibility settings for SQL view and WMS layer import containers in NewLayerPage . java to improve user experience by disabling UI elements for
initialize Availability _ availability to UNAVAILABLE in ContextHandler . java to ensure that Availability _ availability is set to UNAVAILABLE when no availability is present
updated methods in FetchInvDataMsgHandler and PbftDataSyncHandler to accept BlockCapsule instead of long blockNum and adjusted epoch
chore : upgrade gapic - generator - java to 2.7 . 0 and update gapic - generator - java to 2.16 . 0
replaced the ` _ freeSpaceReclaimDisabled ` boolean with an ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed ` KDCOptions ` constants from public to private static and added a new class ` KdcDefaultOptions ` to improve encapsulation and
refactor JsonWriter initialization and assignment logic to improve code clarity and ensure proper handling of the writer instance
updated method calls and variable names for consistency and clarity in ProfilePager . java to improve code readability and maintain consistency in naming conventions
renamed the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity and consistency in
added a method ` valueFromClassConstant ` to retrieve a value from a class constant in ` Configuration . java ` to ensure proper handling of
added error handling for service initialization in KafkaService . java to improve robustness by logging exceptions during service initialization
updated ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` from a ` Set ` to an ` ImmutableSet ` to include additional resources to
improve auto - creating of channel for endpoint that do n ' t have the ' autocreatechannels ' option .
added functionality to retrieve and index keywords from meta tags in HTMLDocument . java and created a test for this functionality in TestDemo . java to
update SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android SDK versions
added an else clause to the assignment of the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the assignment of the _ addresses
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall .
refactor Builder class to improve code structure to enhance maintainability and readability of the code
improve error handle for isbn - to - bibtex fetcher
[ gr - 3248 ] increase keepalivetime for polyglot exception handling .
added a null check for the text before firing a DataChangedListener to avoid potential NullPointerExceptions when text is not initialized
feat ( sentimentmodel ) : add an option to not simplify the model
added line . trim ( ) to SuffixURLFilter . java to trim leading and trailing whitespace from URLs
added a check for godmode in HandlerCombatInvocationsNotify . java to return early if the player is in Godmode to
ggb - 1883 remove registration / unregistration of popup in checkbox creation dialog
updated LinkedHashMapCache and BoundedLinkedHashMap constructors to remove boolean parameters and set statistics to false to simplify constructor parameters and improve performance by reducing
removed redundant calls to _ channel . close ( ) and adjusted buffer length assignment in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and modified KeyIndexBuilder usage in OrcRecordUpdater . java to
added Locale import and modified exception handling in DirectUpdateHandler2 . java to improve error handling by using Locale . ROOT for string formatting
fix defaultjavaloweringprovider to not create pi node when canonicalization be enable
do n ' t follow edge in exceptiondispatchblock if the start bci be less than end bci .
make sure ` ` high variance ' ' be not equal to 0.26 , not 0.5
replaced instances of ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` buildTarget ` directly in multiple files to simplify code
updated SqlRunner class to improve SQL execution handling to enhance performance and maintainability of SQL execution
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and updated related
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to improve clarity and
replace progress indicator with confidenceprogressindicator in createofferview
updated HTTP header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to align with the new
modified ` iterateBpt ` method to accept a boolean parameter and updated related logic in ` TileBuilder . java ` and ` BlockIndex .
added new view types for messages in CrowdfundingChatAdapter and updated the onCreateViewHolder method to handle different message types to improve
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
simplified an exact match expression by removing the ' ++ ' operator in a sentence to improve code readability and maintainability
removed the canvas parameter from the insert method and related calls in TexturePacker . java to simplify the code and improve readability by elimin
refactor the ` getVisitors ` method to use a default ` apply ` method in ` RefactorModule ` to improve code readability and
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements by name in ` Xml . java ` to improve functionality for
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and its corresponding tests to ensure proper handling of character encoding in
updated UI state management to use SystemUiControllerFlags instead of a static UI _ STATE _ ALLAPPS constant to improve code clarity and
removed the ClientConfigurationService variable from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependency
updated the RuntimeException message format in HiveRecordSet . java to provide clearer context about the error when opening a Hive split to improve clarity
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
corrected a typo in the configuration key from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot to ensure consistency in
added score calculation to the merge method in TextFragment . java to ensure that the text position does not exceed the score of the current fragment '
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added validation to ensure ` maximumUnimvedStepCount ` is greater or equal to 0 to ensure that ` maximumUnimprovedStep
added a check to return early if currently opened editors are empty to avoid unnecessary processing when no open editors are available
replaced calls to ` Mockito . verify ( mock ) ` with ` Mockito . verify ( mock ) ` and added new test cases
replaced the context class loader retrieval from the current thread to the current class loader to ensure compatibility with the current thread ' s context class loader
updated the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a direct string in ` CodeFirstPojo
make abstractsplitbrainprotectiontest more resilient to different type
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout filter to ensure proper configuration and avoid
[ giac ] fix giac output for degree [ 0 ] [ 1 ]
added logging functionality to DockerComposeContainer and created DockerComposeLogConsumerTest class to improve logging management and test coverage for DockerComposeContainer functionality
updated the type parameter in the testMapping method from ` Class < ? > ` to ` Class < ? > ` to ensure type safety and
removed unnecessary import statements in AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to convert a ` Supplier < T > ` to a ` ThrowingSupplier < T , E >
replace ' break ' statement with ' return ( true ) ' in ConsoleActivity . java to ensure proper termination of the loop
camel - 14850 fixed the issue that camel - platform - http : / text / post have a body of type buffer . thanks
added methods to handle platform - specific path separators in MorePaths . java and updated test cases in AarWithLibsIntegrationTest . java
added a null check for authorizationContext params before processing to avoid potential NullPointerExceptions when processing parameters
replaced the method ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` and added a privileged action for file existence check to
updated SDK version from " 4611349 " to " 4514284 " and added new test cases in ShadowTextToSpeechTest to
add transactionlogkey to avoid duplicate entry in queue
added a boolean property ` enableSqlWithoutProfile ` and its getter / setter in ` JdbcEnvironmentProperties ` , and updated ` JdbcEnvironmentRepository
added a try - finally block around the write method call in ConnectHandler . java to ensure that the data is properly released after writing to the
fix ` modloadingstage # createregistry ` to use ` eventgenerator # fromfunction `
updated date parameter from ' date ' to ' calendar ' in DateUtils . java and removed a test assertion in FontParsersTest . java to
updated the ` loadValue ` method to use ` CachedThreadStatesGaugeSet . super ` and modified the ` getThreadInfo ` method to include
added a new protected field ` prevTlogOnPrecommit ` and modified the sleep duration in ` LeaderTragicEventTest ` to
updated the job file path for FastAsyncWorldEdit from P2 - V6 / to 1.17 / to ensure compatibility with the latest
added a check to ensure the output directory exists before creating it and added a null check for the input path to ensure that the output directory exists
update objutils . calculatenormalvector to use the new utility method to improve code readability and maintainability
modified the ` find ` method in ` JdbcAuditService ` to include ` IdentityZoneId ` as a parameter and updated the query accordingly to
refactor SpanCollector to improve code readability to enhance maintainability and facilitate future updates
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the method only executes if the session manager
refactor TransactionIsolationLevel class to improve code structure to enhance maintainability and readability of the code
rename methods and variables from " printLVgroups " to " printLogicalVolumegroups " for consistency to improve clarity and
added thread name setting for the current thread in TestSession . java to improve clarity of the thread ' s purpose during the forwarding process
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
simplified the return statement in LauncherExtension . java by returning an empty ArrayList instead of a loop to simplify the code by elimin
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory to facilitate touch interactions in the
replaced ` scaleHotseatWithWorkspace ( ) ` method with ` getHotseatScaleAndTranslation ( Launcher launcher ) `
added a check for JUnitRule in the DefaultStackTraceCleaner and created a test for filtering elements above MockitoJUnitRule to ensure
replaced instances of ` dstnull ` and ` srcnull ` with ` dstByteArray ` and ` srcByteArray ` and introduced new utility methods
added a private BalanceListener field and updated its initialization in DepositListItem . java to ensure proper management of balance listeners in the wallet service
modify color conversion logic in RealisticRenderer to differentiate between sticker mode and non - sticker mode to ensure correct color values are applied
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated log initialization in multiple test files to ensure robustness by preventing NullPointerExceptions
fix ( gl200 ) : remove pattern check from gl200 protocol decoder
updated playback time handling in FullDetailsActivity to include logging for the last playback event time to improve visibility into episode refresh conditions for better debugging and
handle multi - word token for multi - word token ( mwe ) .
added a check to clear the ISO language entry if it is empty in InstallItem . java to ensure proper handling of empty ISO items by clearing
updated the ` ReactiveLoadBalancerClientFilter ` to dynamically set the ` overrideScheme ` based on the secure status of the service instance to ensure the
http : / / issues . apache . org / jira / browse / amq - 4892 - fix memory leak in defaultm
[ gr - 3329 ] fix checkstyle violation in debuginfobase and nativeimagedebuginfoprovider
refactor the Correspondence implementation in ShadowBackupManagerTest to use a lambda expression to improve readability and maintainability of the code
updated references from US to EN language support in JRELocaleProviderAdapter and LocaleDataMetaInfo to ensure consistency and accuracy in handling locale support
removed redundant null check for redeemData in LocalTransactionSigner . java to simplify the code logic for better readability
added minecraftforgeclient to use terrain texture for block render .
added a return statement to the method in TxCacheDB . java to prevent further execution during execution
updated import statements to use the jdk . internal . org . objectweb . asm package instead of com . sun . xml . internal .
refactor FastDictionary class implementation to improve performance and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5951 -
updated the initial value of the FlightEvent instances in FlightEventsTest . java to use a new value of 43.1 instead of
chore ( ruby ) : update import of vendored grpc to vendored vendored grpc to vendored version
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper namespace declaration is
update instructorfeedbackresultspagedata to use studentprofilespacelink instead of getprofilespacelink
added shortRules list to DefaultPasswordValidator and updated defaultRules initialization to improve password validation logic to allow long passwords with alphabetic characters and
danielwagnerhall : fix checkstyle issue in util / selenium / selenium - api / selenium - java - client
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary dependencies
modified the argument order for scaling and padding in DLNAMediaInfo . java to ensure correct formatting of thumbnail dimensions for bgr24
replace speculative guard movement phase with canonicalization phase in speculative phase .
added checks to prevent overriding of ` AuthenticationManager ` bean definitions in ` AuthenticationManagerBeanDefinitionParser ` to ensure proper handling of multiple authentication managers
updated conditions and logic for handling forwarded request fields in ForwardedRequestCustomizer . java and added corresponding tests in ForwardedRequestCustomizerTest
added a line to reset the StringBuilder in ConsoleReader . java to ensure the StringBuilder is properly initialized before use
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and modify role management functionality
update version numbers for OpenIDE - Module - Specification - Version from 1.31 . 0 to 1.32 . 0 across multiple files to
hbase - 10688 set default wrap size for hbase . server . netty . tls . wrapsize in nettyrpcserver
updated multiple Java files related to cookie management and socket options to improve code consistency and maintainability across the codebase
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added tests for incorrect line length and whitespace handling to improve test coverage and ensure proper
refactor protocol binding logic in OpenSamlAuthenticationRequestFactory and add unit tests for protocol binding validation to improve flexibility in protocol binding handling and
refactor DepthController to use AttachedSurfaceControl for applying SurfaceControl transactions to improve code clarity and maintainability by using a dedicated transaction
update version check from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility
hbase - 15827 addendum change the permission for pre - pre - bulk - load and pre - cleanup - bulk - load
removed the size parameter from the subList method in TsFileManagement . java and updated references in MergeTaskTest . java to streamline the list
camel - 16462 : fixed genericfileconverter to use fileinputstream for convert to inputstream .
added login functionality to ShardManager and updated DefaultShardManagerBuilder to conditionally login to enhance security by allowing users to enable or disable the login
removed an extra space in the DeleteGlobalRef method call to improve code readability and maintain consistency
corrected the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency
added a check for the marked state before processing the response completion in HttpSender . java to ensure proper handling of response completion when the exchange is
added check for user student before verifying if the student is a user in the FeedbackResponseCommentsLogic . java file to ensure that only
added checks for linked profile allowance and updated profile path handling in BMPImageReader . java to ensure compatibility with different operating systems
updated the parameters of ` setSimpleCuboid ` method calls in ` ClassicPlotManager . java ` to correct the positioning of the
added a wait message for PMD status in PMDOpenTool . java and refactored the actionPerformed method to run on a Runnable to
refactor grid presenter initialization to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing redundancy
changed return values from false to true in ContributionsListFragment . java to enable new functionality in the user interface
added a test skip range test in DistinctPrefixFilterIT . java and modified loop logic in BaseResultIterators . java to handle pagination
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to get the last modified timestamp of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp of
added a condition to check if the " metaTable " property exists before verifying the AVRO file format to ensure that only valid metadata tables
add a popup to ask user to choose a currency other than the default currency
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a new boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to manage animation state
added a new public String field activeKeyId in UaaConfiguration . java to provide access to the active key ID for better configuration management
updated action labels and method names in SendMailActions for clarity and consistency to improve code readability and maintainability by using more descriptive
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread safety when accessing the ` isActive ` variable
replaced ` isDesc ( ) ` method calls with ` isAsc ( ) ` method calls in ` OrderByExpressionContext ` and related classes
fix classcastexception in pdfbox - 4892 : avoid unchecked cast to charsequence
added a check for the OWNCLOUD _ APP _ NAME in the conditional statement to ensure proper handling of the application name based on the
hbase - 15827 master should set hbase . rootdir . perms to 700 when kerberos be enable ( karaf
updated references from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServlet
refactor Instant class implementation to improve performance and maintainability of the code
updated state format from int to String and added null check for DocCollection . STATE _ FORMAT in CollectionsHandler . java to ensure default values are
removed unnecessary type parameter from logger message in CentralAuthenticationServiceImpl . java and modified condition in AbstractTicket . java to improve logging clarity
pdfbox - 4892 : add illegalargumentexception to the list of exception throw by getprofiledata
updated conditional check for file existence in AbstractFileResourceSet . java to ensure proper handling of file paths in the code
( chore ) camel - maven - plugin : do n ' t parse the parameter value if it ' s not a configuration child
[ beam - 1561 ] move protobuf coders to extension package ( # 1561 )
updated JpaQueryParsingToken instantiation to include a false parameter and added a new test for query with signed numeric literals to enhance query parsing functionality
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` generateRailButtonFromRASAeroGuide ` methods
removed the getNonceFactory method implementation from BitmexStreamingExchange . java to simplify the code by eliminating unnecessary functionality
( chore ) camel - mail : use log placeholder instead of string concatenation
[ java ] use default value for timer interval in driverconductortest .
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable class
added focus to the search field in FullTextSearchPanel to ensure the search field is focused when needed
refactor NioParams initialization in TlsConnectionLogging . java to improve readability and maintainability of the code
removed an assertion from the test for retrieving a random double from the result set to simplify the test case for better readability and maintainability
updated the assertion in TestSolrConfigHandler to include the server URL in the error message to improve clarity of error messages related to the expected
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` mocks in ` CsrfWebFilterTests . java `
updated density filtering logic in FilterResourcesStep . java to handle the NO _ QUALIFIER case to ensure accurate filtering of drawable density based on
added methods to update UIID based on the component type and introduced a method to handle button elements to improve code clarity and maintainability by
removed a condition checking densityDpi in RecentsAnimationDeviceState . java to simplify the code by eliminating unnecessary dependency on Display
added two new Java files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue
fixed - rexecutorservice . executeasync ( ) method throw npe if nextstartdate be null
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability by reducing redundancy
added null check and closing logic for the StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions when closing
replaced calls to ` get ( ) ` with ` getOrDefault ( iface , 0L ) . doubleValue ( ) ` for better readability
added a nonce parameter to the token claims map in TokenMvcMockTests . java to ensure that the nonce is correctly validated for the token claims
refactor ChartEditor , DefaultAxisEditor , DefaultChartEditor , DefaultAxisEditorFactory , DefaultChartEditor , DefaultColorBarEditor , Default
added width and height settings for formLayeredPane and disabled layout to improve layout flexibility for the form layered pane
updated the maxY method implementation in BrowserContentPane . java to correctly calculate the maximum Y - coordinate based on the owner ' s height to ensure
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean value indicating whether the database is connected to improve the handling
refactor DOCKER _ COMMAND to use Platform . DOCKER _ COMMAND in DockerTestUtils . java and add Platform . java to
added a null check for the input stream before reading input files in the initializeParameters method to avoid potential NullPointerExceptions when the input stream is not
updated the ` drawLeaveBehind ` method to accept a color parameter for folder leave - behind colors to enhance the visual appearance of folder
show an error dialog if canary version of android studio do not support it .
added a null check for the table name before retrieving the UUID in ApiResponseSerializer . java to avoid potential NullPointerExceptions when the identity proxy table name
removed modulePersistEnable and modulePersistDisable lists and their associated getters and setters from StartArgs . java to streamline the handling of module persistence
updated argument length check from ` args . length = = 1 ` to ` args . length > = 1 ` and modified error message for cl
replaced HashSet with LinkedHashSet for the ' questions ' key in the flow scope to ensure uniqueness of questions in the flow scope
add a test case to demonstrate the bug
removed multiple JSP entries from the AuthCheckFilter class to improve resource management by excluding specific JSPs
refactor scheduling logic by introducing a ` isExecutingRunnable ` flag and refactoring runnable execution logic to improve readability and maintainability
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to accept varargs instead of arrays to
refactor XML parsing logic to handle end - of - stream condition to improve robustness by preventing potential end - of - stream errors
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to handle horizontal page overflow
added pivot point adjustments for mArrow based on arrow dimensions and icon position to improve arrow positioning for better user experience
fix checkstyle issue in io / entity / jabrefexecutor / jabrefexecutor . java and acmportalfetcher . java
refactor updateThumbnail method to include a refreshView parameter and update related logic to enhance control over thumbnail updates based on gesture state and refresh behavior
pdfbox - 4892 : improve usage message , a suggest by valerybokov
updated InternetAddress constructor to include a boolean parameter and improved error handling for hostname validation to enhance code clarity and provide clearer error messages
replaced instances of ` this ` with direct reference to ` this ` across multiple activities to simplify code and improve readability by eliminating
updated the SizeBasedDocIdIterator and related classes to use a consistent variable for maxDocId and introduced a currentDocId variable to improve
added multiple overloaded methods to ` FileDialoger ` for opening files with optional file extensions to enhance flexibility in file selection by allowing
updated widget span and page count handling in AppsCustomizePagedView . java and removed setCurrentPageToWidgets method in AppsCustom
added transformation logic for active Rocket components in FlightConfiguration . java and updated expected length in FlightConfigurationTest . java to improve accuracy
update test to use ` ` direct : ' ' instead of ` ` seda : ' '
updated DateTimeFormatter to use Locale . ROOT for default date time format to ensure consistent formatting across different locales
add permission filter to the metadatavalue in case the user do n ' t have permission to access them .
added a test method to verify that missing dimension and metric names are set to null in StarTreeConfig to ensure that missing required dimensions and
camel - 15662 : camel - spring - route - builder - add support for dynamic recipient list
refactor InlineLayoutBox and HoverListener classes to improve layout handling and repaint logic to enhance layout responsiveness based on target painting
refactor AuthenticatorActivity to use ServiceConnection and OperationsService for authentication operations to improve the management of authentication methods in the application
