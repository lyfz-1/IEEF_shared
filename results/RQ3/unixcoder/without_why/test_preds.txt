updated SocketAppender initialization to set remote host and port to enhance socket connection configuration flexibility
refactor BasicAuthPlugin to use a new method ` getPromptHeaders ` for setting prompt headers to improve code readability and maintainability by reducing
replaced ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` in the message length
cloudstack - 1771 : when vm detail cpu / ram be null , use cluster cpu / ram overcommit ratio
added flags to the ShadowPaint class and updated related tests to enable proper handling of anti - aliasing of Paint instances
updated the title for the MassSetFieldsDialog to use localized strings to improve internationalization support for the user interface
some test case polish . run test on both javac / ecj
added a check to ensure the nonce is non - empty before processing to prevent potential errors when the nonce is empty
added a new interface ` RemoteInputListener ` and modified ` RemoteInput ` to accept connections and disconnect events to enhance input handling by notifying listeners
updated conditional structure in OrcEncodedDataReader . java to improve code readability and maintainability
added a condition to check if a thing is enabled before processing to ensure that only enabled handlers are processed in HomeConnectBridgeHandler
added null checks before removing and adding policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when bs is null
updated assertions in DefaultTypeAdaptersTest , DefaultDateTypeAdapterTest , and ObjectTest to use ` matches ` instead of ` isEqualTo `
added JSON serialization and logging for the DAG information in TezTask . java to improve debugging and tracking of DAG information in the TezTask class
updated time calculation in ComputedSummary . java and added a new method to retrieve heap time in HprofHeap . java to improve accuracy in time representation
replaced RxJava2Tasks with ApacheHttpClientMediaWikiApi in ContributionsActivity . java and removed RxJava2Tasks . java to
mvstore : do n ' t force lock even if read - only
[ issue # 5060 ] fix commitlog offset out of bound ( # 5060 )
updated folder opening logic in Launcher . java to check if the associated folder is open before logging a message to ensure that the folder is only opened when
added a test for sorting properties in PGPropertyTest . java to ensure that PGProperty names are sorted in ascending order to maintain consistent ordering of property names
added a new constant ` HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN ` to the ` Common ` class to provide a
updated the ` supportsDrop ` method to accept ` ItemInfo ` instead of ` Object ` for better type safety to enhance code clarity and ensure
updated error message handling in RequestBuilderTest to improve clarity of assertion failure messages
replaced references to ` NearbyMapFragment ` with ` NearbyListFragment ` in ` NearbyActivity . java ` to
use sessionstatus instead of status to avoid npe
added a configuration option for sending zero anomalies in EmailConfiguration to allow users to choose whether to send email notifications when no anomalies
[ hotfix ] [ kafka ] [ connector / connectors / kafka ] fix flinkkafkaproducermessagetest
remove unused method from datamanager
added a constructor to BlockingResponseListener that accepts a length parameter to improve flexibility in handling varying response sizes
[ java ] use byte [ ] instead of channeldata [ ] for clarity .
[ iotdb - 3840 ] fix multileaderserverimpl . sendsnapshotfragment ( ) to properly close resource
removed redundant query strings in LoginSAMLAuthenticationFailureHandlerTest . java to simplify test assertions for better readability
refactor ConfigMetadataProviderTest class to improve code readability and maintainability
updated import statements and method names in ListFragment and SnoozeActivity to improve code clarity and maintain consistency in naming conventions
added a new ` AcceptAllFilter ` class and refactored directory stream creation to use it to improve code readability and maintainability by
refactor JdbcTestDataSet class to improve code readability and maintainability
added ` throws ClassNotFoundException ` to multiple helper methods in ` CompilerToVM ` , ` CompilerToVMHelper ` , and ` FindUniqueConcrete
refactor Docker image name validation to use a new utility class ` DockerImageName ` to improve code readability and maintainability by centralizing validation
updated error messages in LoginActivity to include " wrong " credentials to improve user feedback by providing clearer feedback on incorrect credentials
[ ds - 3952 ] add ` ` autofocus ' ' to control panel .
added unit tests for SAML configuration in SamlIDPRefreshMockMvcTests . java to ensure correct handling and validation of SAML properties in the
[ mng - 7644 ] fix comparetoversion to handle negative number
updated method names from ` topLeftMode ` to ` topRightMode ` and modified return values in ` getPreferredW ( ) ` and ` get
updated package imports for ParallelUniverse from ` org . robolectric . android ` to ` org . robolectric . android . internal `
updated method return type handling in LocalCacheFactory . java and NodeFactory . java to improve clarity and maintainability of the code
change the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the visual
added functionality to draw edges and self loops in ProcessingPreview . java to enhance visual representation of graph data for better user experience
replaced instances of ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` with ` ALLOW _ TVM _
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added translation to the drag handle indicator in AllAppsTransitionController to improve user experience by disabling the drag handle indicator during transitions
added logging statements for collection , community , and item views in CollectionViewer , CommunityViewer , ItemViewer , and ItemViewer classes to improve traceability
updated the configuration message for filter optimization in HiveConf to clarify that filters may be pushed down in the operator tree to improve user understanding of
skip scanningappproviderruntimeupdatestest on osx
added imports for " jetty - alpn - java - client " and " jetty - alpn - java - client " , and
act - 1895 : refactor executeasyncjob ( ) to executeasyncjob ( ) for good readability
refactor Transaction class to improve code readability and maintainability
replaced @ AddToRuleKey with @ ExcludeFromRuleKey for genrule execution to exclude remote execution from artifact caching
simonstewart : add ability to launch firefox on window
added a check to ensure the existence of a member in the colFamToDynamicColumnsMapping before adding it to the mapping to avoid adding duplicate entries
[ hotfix ] [ runtime ] remove rawtypes from hadoopoutputcollector
added a check for non - mapped views in MetaDataEndpointImpl . java to ensure compatibility with older client versions that do not support derived columns and indexes
fix : update student ' s id after delete a student
updated import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest version of the Apache POI library
lenspiston now check if block hardness be great than zero
added a new file LongPointerPressTest3049 . java to implement a test for networking errors to ensure proper handling of networking errors
truffle : do n ' t run inlining if not necessary
refactor null checks in BaseBuilder , XMLConfigBuilder , and XMLConfigBuilder to remove redundant return statements to improve code readability and reduce
removed the condition for checking if the matched ListBlockParser is an instance of ListBlockParser and added a new test for deeply indented lists to simplify
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it for null checks to improve error handling
added @ Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests related to issue # 1070
[ java ] remove unused native method from test case logger
removed unnecessary closing braces in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is video to ensure proper handling of video formats in the configuration
added security property to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms for enhanced security compliance
server : do n ' t delete storage pool for local storage
updated cacheEntry handling in Driver . java and QueryResultsCache . java to include cacheEntry as a parameter to improve logging output to enhance clarity
added an option to skip updating the model after managing dependencies to improve dependency management by avoiding unnecessary updates
update shadowactivity ' s startintentsenderforresult to send the intent automatically to match more closely the android activity ' s implementation .
updated rendering hints and FBO setup in RocketFigure3d . java to improve rendering quality and performance by using overlay graphics
added synchronization to the controllerListeners list to ensure thread safety when accessing shared resources
added JUnit @ BeforeClass method to TestCoreAdminApis . java to skip tests that are not compatible with Java 9
updated year retrieval logic to use ` getYear ( ) ` instead of ` getYear ( ) ` for BC dates and added a new ` LOCAL _
fix possible npe in jabber initialization .
updated the variable name from " cur . ws _ table " to " cur _ ws _ commit _ id " in TxnHandler . java to improve
replaced ByteChunk with ByteBuffer for improved memory management to enhance performance and resource handling by utilizing a more efficient byte buffer implementation
added a method ` toSync ( CompletableFuture < T > future ) ` to ` AsyncUtils ` and a corresponding test class ` AsyncUtilsTest ` to
added ActionGraphBuilder to multiple classes and updated method signatures accordingly to enhance action graph handling and improve code clarity
danielwagnerhall : add unit test for upload with hidden file input
removed the try - catch block for creating tables in SQLManager . java to simplify error handling by avoiding unnecessary exceptions
added a check to ensure the file exists before retrieving the local Maven directory to avoid potential null pointer exceptions when accessing the local Maven directory
hide algebra label for hidden prefix
refactor : avoid npe in ctelementimpl # getmetadata
do n ' t set decode _ only flag for default track output
fix : do n ' t reorder non - sorted entity
improve error message for miss method call for verify ( mock )
added null check for backupFolder before logging to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the usage of ` Array . newInstance ( void . class , 2 ) `
added @ AddToRuleKey annotation to ToolType variable in ClangCompiler . java and GccCompiler . java to ensure toolType is included in the compiler
replaced hardcoded time threshold with a constant PINCODE _ TIMEOUT to improve code readability and maintainability
added isSampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to enable sampling functionality in the Prometheus
removed @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to enable tests that require a MongoDB server for execution
( chore ) camel - jms : fix checkstyle violation
updated the condition to check if the table is not an artical table to ensure that only non - artical tables are processed further
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct
added null and empty checks for session attributes in MongoSessionManager to ensure proper handling of null or empty session attributes to avoid potential NullPointerExceptions
replaced setFixedSize ( ) with setSizeFromLayout ( ) in CameraSurfaceView . java to improve layout handling for surfaceHolder
refactor stopping logic in AbstractConnector to use a variable for the stopping object to improve code readability and prevent potential null pointer exceptions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : camel - jms - remove stopwatch from camel - defaultmessagehistory
( chore ) camel - mono : fix checkstyle violation
updated error handling in WebsocketTest to improve clarity and ensure proper assertion failure reporting for WebSocket handshake errors
added an ` View . OnLayoutChangeListener ` to the ` AllAppsTransitionController ` class and modified the layout change handling in ` AllAppsTransitionController
refactor variable names from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve code readability and
int - 1851 add default - output - channel attribute to xml router
updated cacheSeconds from int to String in MessageBundleProperties and CasCoreWebConfiguration to enable dynamic cache duration configuration for improved flexibility
updated the version string from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple Java files to
updated ByteBufferPool . java to improve buffer management to enhance performance and reduce memory usage
added a check for " alt - rt . jar " presence in the boot class path to skip tests that require the " alt - rt . jar "
updated test cases and user deletion logic in JdbcScimUserProvisioningTests . java to ensure correct handling of user names and improve test coverage
refactor FlightRecorderProfiler to use a list of options instead of an array to improve flexibility in specifying flight recording options for different Java versions
added a method to check if the stream is empty in WebCamInputPanel and updated image drop handling in WebCamInputDialog to improve input validation and
added a check to ensure content is not empty before processing in HttpParser . java and implemented a chunked PUT test in ProxyServletTest . java
refactor AtmosEndpoint class to improve code readability and maintainability
added additional checks for " printf printf " in Java2TypeScriptAdapter . java to ensure correct handling of print statements to enhance type safety and prevent
added a new file ` TestCapacityUntilGCWrapAround . java ` to test the behavior of metaspace capacity until garbage collection is wrapped around to
updated package - info . java files to improve documentation clarity
updated the calculation of the end time in SamplingStatCalculator to account for stamped resources to ensure accurate reporting of resource times
added unit test base on user forum issue
tmi - jpeg : improve error message for bad sequence number
fix tornado rod not trigger reequip
added a check to ignore entries in JoobyModule and JoobyExtension to ensure that only relevant classes are registered for bean registration
refactor webapploader to use container ' s parent classloader .
add property to nameupdater so it can be use in test
added start tracking for ellipsoid region selection to ensure proper initialization of ellipsoid region selection state
updated URLs in JavaSEPort to use HTTPS instead of HTTP to enhance security by restricting access to external URLs
[ geos - 10641 ] add validation for sortby in getfeature
updated null check for grantor assignment in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values
added graphics configuration handling in DiagramGenerationTest . java to ensure consistent image rendering across different screen devices
throw a runtime exception if the sidedDelegate be null
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization to enhance maintainability and readability
use asserttask instead of sleep for locktest # testlock
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization of strings to enhance string processing capabilities
do n ' t log 404 error if host not find
refactor command highlighting logic to use a variable for commandIndex to improve code readability and maintainability by reducing repetitive command index
updated VERSION and VERSION _ DATE constants from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and " 1
updated buffer operations to use dimensionSize instead of idx to ensure correct buffer size is used for improved data handling
added drag - and - drop functionality to the QuickstepTestInformationHandler and SystemUiProxy classes to enable handling of drag - and - drop
[ java ] add test for java 7 compatibility
added PSK - AES256 - GCM - SHA384 + TLSv1.2 cipher with GCM - SHA384 + TLSv1.
replace ` getDescription ( ) . getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to ensure
added JsonProperty annotation to ScimGroupMember class to enable proper serialization and deserialization of ScimGroupMember objects
updated HqlQueryRenderer to support parsing of reserved keywords and added schema scoping tests in HqlQueryRendererTests to enhance query
( chore ) camel - core : fix checkstyle violation
refactor Parser class to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted related calls to enhance functionality by allowing control over
tika - 697 -- fix mime type detection for cpio file
[ hotfix ] [ table - planner - blink ] remove unused method in flinksqloperatortable
added ` EqualsBuilder ` and ` hashCode ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes to enhance object
added a condition to check if assistant is not running before fling to ensure fling only occurs when assistant is not already launching
added a new file SolarisShortDSA . java to implement DSA key pair verification tests to address a specific bug in Solaris related to DSA key
added a method to toggle the search label in ListFragment to enhance user experience by allowing dynamic search options
server : fix npe when backup snapshot on secondary
replaced ServiceConnection with a new DetailsServiceConnection class to improve clarity and maintainability of service connection handling
refactor exception handling in HttpClientTLSTest to use AtomicReference to improve thread safety to enhance clarity and maintainability of exception handling logic
removed the equals method from ConjunctionScorer to simplify the score comparison logic
added a null check for the item in the bindItems method to avoid potential NullPointerExceptions when removing a colliding item
fix race condition in cpmemberaddremovetest due to race condition
log a warning if the cache size be full
updated API endpoints from " / v2 " to " / api / v3 " and modified order parameters in CryptoFacilities and CryptoFac
added an ` empty ( ) ` method to the ` freenect2 ` class that returns a boolean indicating if the ` freenect2 `
added null checks for page data in AsyncPageReader and introduced a new test for empty dictionary pages in TestDrill - 8416 to address
refactor ` buildChannelName ` method to accept an additional parameter for market data type validation to enhance input validation and improve error handling for
add a config option to disable the animation when a mana pool be charge .
[ java ] do n ' t swallow timeout exception in cluster restart test .
added logging for interrupted exceptions in WaitForHelper . java to improve error handling by logging specific error messages
fix test failure on window
removed redundant calls to ` StyleInjector . inject ` in ` ResourcesInjectorFull . java ` to improve code clarity and maintainability
replace the file path string with ant fileresource object for strong typing and good path handling .
updated equality check in BlockWorldVector . java to use getY ( ) and getZ ( ) instead of get getX ( ) and getY (
updated return statements in LongConcurrentLRUMap . java to remove unnecessary null checks to improve code clarity and prevent potential NullPointerExceptions
added regex handling to resource configuration to improve pattern matching functionality
updated cache retrieval logic and improved argument handling in FileCredentialsCache . java and EmptyCC . java to enhance cache management and ensure proper error handling
rename dbPath to output _ ValidateMultiSignContract _ test to clarify the purpose of the test directory
add peer requirement check to ibft ( # 1382 )
danielwagnerhall : do n ' t attach the session to the current session if it ' s already on the thread
added a check to prevent expanding " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format expressions in Expression
added a condition to clear pending rendering operations when minimized to improve rendering performance by reducing unnecessary operations
fix flaky hazelcasttestsupport # sleepmillis ( ) .
add write - behind - write - behind - write - over - write - over - write - over - write - over - write - over
added a null check for the JLabel ' s icon in GroupTreeCellRenderer . java to ensure it is not null to prevent potential NullPointerExceptions
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between strict and non - strict redirect matching scenarios
added shutdown monitoring functionality to ShutdownMonitor and modified test methods in ShutdownMonitorTest to improve resource management and enhance test coverage for shutdown behavior
updated the calculation of ` moveSize ` in ` RandomAccessStore . java ` to use ` moveSize ` instead of ` autoCommitMemory ` and
refactor field handling in Json . java to use a dedicated method for reading fields to improve code readability and maintainability by centralizing field
[ hotfix ] [ runtime ] move componentclosingutil to coordination
cloudstack - 3473 : delete volume in error state when snapshot creation fails
cloudstack - 4894 : do n ' t try to assign ip6 range to ip6 range that do n ' t exist
rename ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` InitializeAuthenticationProviderManagerConfigurer
updated the leader retry duration from 15000ms to 30000ms in CollectionsAPIDistributedZkTest . java to allow more time for leader election
refactor error handling by replacing ` Exception ` with ` Exception ` in multiple parameter - related classes to improve clarity and consistency in error reporting
updated drawing parameters in URLImage . java to correct coordinates for image rendering
updated field name comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure consistency in field comparison logic
pdfbox - 4892 : simplify code , a suggest by valerybokov
[ hotfix ] [ stream ] include exception cause in streamtaskexception
refactor tag handling in Preprocess . java to use StringBuilder instead of String to improve performance and readability of the code
refactor read method signature in MessagePack . java to improve readability to enhance code clarity and maintainability
added a new annotation ` Mapper ` to the ` org . apache . ibatis . annotations ` package to provide a standardized way to define
do n ' t encode empty extension list in json parser
updated regex patterns in ` Artifact . java ` and ` LibraryManager . java ` and added null checks in ` LibraryManager . java ` to
added alias for node _ popup _ scripting in ScriptingMenuEntryVisitor . java to enable scripting functionality for node popup scripts
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView and RecentsView
( chore ) camel - jms : fix checkstyle violation
updated formatting in multiple Java files to improve code readability and maintain consistency
deleted ` AbstractDelegatedVerb ` and ` FailureContext ` classes to remove unused code related to placeholder handling
updated ` __ content ` and ` __ contentETagGzip ` to be ` final ` in ` GzipHandlerTest . java ` and added
[ java ] : do n ' t increment consumer capacity when repeat .
added logging functionality to SpeedmentImpl to track component lifecycle events to improve debugging capabilities by providing insights into component lifecycle events
added dspace - config servlet to load oai configuration from dspace . xml
updated the handling of row updates in StoreScanner and TestWideScanner to improve null safety and clarity to enhance code robustness by ensuring
camel - 16400 : camel - nagios - enable jmx by default for camel test
updated string concatenation to use a constant for the CANONICAL _ PACKAGE _ SEPARATOR to improve code readability and maintainability
added methods to find YARN binary and Hadoop home paths in HiveConf . java and RemoteSparkJobMonitor . java to enhance configuration
added support for both MySQL and Maria database types to enhance compatibility with additional database systems
updated log messages in SplitLogManager . java for clarity and consistency to improve readability and maintainability of log output messages
added a new file ` ExecuteAndReturnStringTest . java ` to test networking errors related to form handling in Codename One to ensure proper
added a new file ` InvokespecialInterface . java ` that implements a method on apecial interfaces to demonstrate the use of `
refactor EvictingBoundedList class to improve code readability and maintainability
do n ' t turn cost if there be no turn cost support
added a check for backgroundDisabled in SelectBox . java to ensure that selection is valid and prevent illegal argument exceptions
added a null check for MD in RpcServer . java to ensure that an exception is thrown when MD is null to prevent runtime errors
updated calculation of hotseatCellSize in TaskbarViewController . java to include border spacing to improve layout consistency by considering device profile dimensions
updated key and value string construction in ExpressionTree . java to use partition index instead of key to improve clarity to enhance the accuracy of partition name
add support for version 4.1 in nametaskdecorator and taskdefinition
updated directory reference from ` getIndexDir ( ) ` to ` newIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the correct
changed the ` equal ` variable from ` false ` to ` true ` in ` DisplayModeTest . java ` to ensure that display modes are considered equal
fix high code point in latex conversion
added handling for ISO control characters in OAIDCCrosswalk . java and updated value assignment logic in Item . java to ensure proper formatting of
danielwagnerhall : do n ' t start the selenium session if it ' s already in the select window
added a clear button to the toolbar and modified related logic in StringSearchPanel and BookmarksPanel to enhance user interface by allowing users to
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the request URL to improve URL construction reliability and maintainability
updated assertions in ` SoftAssertionsTest . java ` to use ` parseDatetime ` for date parsing and improved error messages to enhance date
updated BitmexAdapters to support reverse order handling to enhance order processing functionality by allowing orders to be reversed
added null or - 1 handling for tree . vartype in PrettyPrinter . java and created a new Java11Var class with a test method to
danielwagnerhall : remove unused import and fix build
updated HiveConf to disable configuration for Hadoop conf property overriding to ensure that Hadoop conf defaults correctly when overridden
replaced the call to ` super . drawChildren ( ) ` with ` super . draw ( ) ` in ` WidgetGroup . java ` to ensure proper
added unit test base on user forum issue
use context . getCatalinabase ( ) instead of system . getProperty ( ) for file creation
added tests for retrieving JMM date patterns in ShadowICU to ensure correct handling of JMM date patterns across different locales
updated the PlotSquared class to include a new style attribute for color codes to enhance the visual representation of plot colors in the plot
added zuulproperties to tracerestuulcommandfactory so that it can be configure with @ dependency .
tika - 2088 -- fix flaky test on window
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a ` getBuildTime ( ) `
update xDist calculation in PagedView . java to use Math . min to ensure xDist does not exceed the bounds of mScroller
remove unused file guirwtester . java
removed unnecessary null checks in multiple classes to simplify code and improve readability
[ hotfix ] [ test ] fix typo in teststream
rename thymeleaf . templateparser . markup to thymeleaf . templateparser . markup .
added XPathTest . java and updated XPathTest . java to use XPathFactory for XPath evaluation to improve test coverage and ensure correct handling of XPath expressions
[ hotfix ] [ core ] fix checkstyle violation in futureutils
add a warning message when invoke dynamic expression be not resolve
updated email addresses from " myFakeEmail " to " example . com " in ContextTest . java to reflect the correct email for testing purposes
updated HTTP / 1.1 handling in HttpConnectionTest . java and modified URIUtil . java to return false for URIUtil . java to ensure proper
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` to
added default methods to AsyncClientInterface , SyncClientInterface , Test - json - async - client - interface , and V2TestDynamoDbBase
[ bug - 64972 ] hssfpicturedata # getpicturetype ( ) should return 0 for unknown picture type ( to be consistent with other implementation )
use java . time . java . duration instead of java . time . long
added version handling and improved logging in LibMediaInfoParser . java to enhance version management for media information parsing
added proxy type handling for IdeaDependency instances in ProjectReader . java to improve flexibility and maintainability of dependency management
added a new class ` SerialHeap ` and updated ` Universe ` to use it instead of ` GenCollectedHeap ` to enhance heap management by
added @ SuppressWarnings ( " serial " ) annotations to @ Gson $ Types . java to suppress serialization warnings related to the class
use mouse . get ( mouse . get ( ) ) instead of mouse . getTicks ( )
datamongo - 1608 - fix nullpointerexception when find by firstname with null parameter
[ hotfix ] [ core ] add multistage support for maptypeinfo
added a method to retrieve identity providers by issuer and zone ID in XOAuthProviderConfigurator . java to enhance error handling for duplicate identity providers
pdfbox - 4892 : add test for cmapparser with poor whitespace
refactor ContactsBackupJob to use OperationsServiceConnection for managing service lifecycle to improve service management and ensure proper cleanup of expired files
refactor constraints handling in ` ForAll ` and ` Infer ` classes and add a new class ` T6938454a ` with
added a check for account configuration hidden in AccountList . java and implemented it in ProtocolProviderFactory . java to ensure accounts are only hidden when they are
added a check to ensure the number of supported displays differs from the size in DisplayController to prevent inconsistencies between display states to avoid runtime errors
replaced ` SchemaUtil . getSchemaKey ( ) ` with ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added a
mow - 161 add event for passive login
added a new file ` Box2DTest . java ` and updated ` GDXTester . java ` to include Box2DTest to
patch by jbellis , review by brandonwilliams for cassandra - 1382
[ hotfix ] [ network ] change default buffer request timeout to minutes
updated the default generator name and version to " gapic " and " 0.0 . 5 " in the SpeechClient and SpeechSettings classes
add help button to openoffice panel
[ java ] change tcp _ nodelay option to child option in the protocol decoding server .
updated method signatures in BinanceAuthenticated , BinanceFundingHistoryParams , BinanceTradeService , BinanceAccountServiceRaw , and BinanceF
added a transient class reference and refactored class loading logic in ScanResultObject . java to improve efficiency by avoiding repeated class loading operations
refactor connection handling in DecodeServlet . java to streamline error handling to improve code readability and maintainability by reducing redundancy
added a method to convert null handling in the Querydsl class and created a new test class QuerydslIntegrationTests to enhance null handling functionality
added a null check for the actor before processing actions in ParallelAction . java and SequenceAction . java to ensure actions are only processed if the actor is
test : fix compilation error in cttypetest
added synchronization to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` implementing ` JJ ` , ` JK ` , and ` Kotlin `
added a new constant REVOKE _ AGENT _ CRT in CertificateManager . java and refactored related tests in CertGenerationTest .
added a condition to check for no body responses in AbstractHttpTest . java and implemented a corresponding test in HttpServerTestBase . java to ensure
improve error message when script engine can not be load
added support for " hikaricp " connection pooling type in Hive configuration to enhance connection pooling capabilities for Hikari connections
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistency in
added functionality to filter and manage file locking actions in FileMenuFilter and OCFileListFragment to enhance user experience by allowing file lock visibility based
refactor Version class to improve code readability and maintainability
clear replication strategy cache on keyspace update
refactor ` waitForState ` method to use a dedicated ` waitForState ` method to improve code readability and maintainability by reducing duplication
updated SkylarkRuleContext to utilize SkylarkRuleContext instead of SkylarkRule to improve attribute handling to enhance clarity and
danielwagnerhall : move storage interface to storage . java to make it easy to reuse it
fix ( sql ) : avoid npe in create view statement
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to provide more specific error messages for segment generation failures
updated query handling in SpellCheckComponent to ensure a default query is used when no query is provided
added error handling for illegal characters in header values to ensure proper validation of header values to prevent runtime exceptions
replaced ` instanceSize ` with ` arrayBaseOffset ` in ` HybridLayout ` and ` HostedInstanceClass ` and ` UniverseBuilder `
change astcommentcontainer to be abstract apexcommentcontainernode instead of astcommentcontainernode
hhh - 14589 log lazy fetch mode for eager fetch
refactor NoGetOperationsFilter and NoUserOperationsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify parameter filtering logic
added assertions in TestCompactionTxnHandler and setDbname and setTablename in TxnHandler to ensure correct database and table name retrieval from ResultSet
camel - 16400 : camel - timer - add a graceful shutdown test base on user forum issue
added a conditional check before adding traces in TraceBuilder to ensure traces are only added if they are not processed to avoid redundant traces processing
updated the condition to check for null elements in the providers collection to ensure proper handling of null elements to prevent NullPointerExceptions
simplify the check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added limit checks and modified scan processing logic in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable classes to enhance query validation
added a check to prevent adding a collection with the same name and a different type that has already been used in the previous collection to ensure that incompatible collections
updated cursor position calculations in VDUBuffer . java and vt320 . java to improve cursor handling logic to ensure correct positioning of cursors based on
removed the useRetries constant from HttpShardHandlerFactory to streamline the code by eliminating unused constants
updated the version number parsing logic in JavaVersion . java to ensure compatibility with Java version 11.0 . 7 . 0 . 4
[ hotfix ] [ runtime ] fix checkstyle violation in streamtask
added a test method ` test ( ) ` to ` TestReceivingMessageSourceParserTests ` to the ` TestReceivingMessageSourceParserTests `
updated the return statement to handle null properties safely to avoid potential NullPointerException when properties is null
[ hotfix ] [ filesystem ] add cause to ioexception in filesystemblobstrategy
updated terminology in multiple Java files to improve clarity and consistency in terminology
txidfield : add tx confidence listener to txidfield
added a new constant for " G1 Perm Gen " in JmxSupport . java to support functionality related to the Perm Gen model
removed unused imports and simplified the return logic in NearbyController . java to improve code readability and maintainability
pdfbox - 4892 : avoid unchecked cast , a suggest by valerybokov
added imports for TaskInfoCompat and TaskInfoCompat , and modified conditional logic in BaseSwipeUpHandlerV2 . java to ensure proper handling of tasks
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants in ` DefaultEdgeClientFilter . java ` to
updated method names and imports in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and ensure consistency in capitalization
added a call to setUnfreezeAmount in UnfreezeBalanceV2Actuator . java to update the unfreezeAmount value to ensure the unfreeze
fix typo in conference scheduling example
refactor ` copyModel ` method to use ` FileUtils . copyDirectory ` instead of ` Files . copy ` for improved clarity to enhance
updated assertion classes for consistency in naming conventions to improve code readability and maintainability
2 . x : improve javadocs of observable . delay ( )
replaced the creation of a DBObject with a method call to addMultiFieldOperation to improve code readability and maintainability by using a dedicated
added a null check for ` randomUUID ` before assigning it to ` hubChangeLog ` to avoid potential ` NullPointerException ` when it is null
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction by dispatching hover events appropriately
replaced the assignment of ` boostrapConf ` with a conditional check for " boostrapConf " in ` CoreContainer . java ` to ensure
( chore ) camel - netty - http : fix typo
hbase - 20564 increase the hbase _ client _ retries to 15 by default
use absolute path instead of relative path for template file creation
do n ' t cache invalidation test graph in encoded graph cache
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new test for
added functionality to retrieve and store Kraken assets with scale information
added a ` toString ` method to ` AnyOf ` class and a corresponding test class ` AnyOf _ toString _ Test ` to improve string representation of
updated email recipient handling in AlertTaskRunnerV2 . java to use a dimension map instead of a key to improve code clarity and ensure email subject
[ influxdb ] do n ' t publish metric if not specify
rename doTransform method to downcast method across multiple converter classes to improve clarity and consistency in naming conventions
added a check for unique local addresses in the NetUtils class to ensure that only valid local addresses are filtered out to prevent network issues
added a method to quote column names in DataTextFormatter to ensure that column names are properly formatted to prevent SQL injection vulnerabilities
added ` getProperties ` and ` getProperties ` methods to ` WrapSystem ` , ` StrUtils ` , and ` MethodEntity ` classes
added a constructor to UpdateRequest that accepts a URL parameter to initialize UpdateRequest with a specific request method
renamed enum serialization and deserialization methods to improve clarity and consistency in naming conventions
added a warning for experimental response format in RequestHandlerUtils and ReplicationHandler to inform users of potential changes in response formats to encourage users to
added a method to format module names in JpmsUtil to improve readability of module names for better debugging output
updated row height calculation to use UITools ' s default label font to ensure consistent label appearance across different UI components
http : / / issues . apache . org / jira / browse / amq - 4682 - fix defaultbrokerheartbeatmanager to
[ hotfix ] fix npe in cqlinputformat
simplified the condition for checking class names in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
add equal and hashcode ( ) method to ruleterminalnode lefttuple class
added a new import for StageIDsRearranger and implemented it in TezCompiler to optimize stage management during query optimization
fix for http : / / issues . apache . org / jira / browse / amq - 4894 - add support for jmx
refactor memory consumption checks in LotsOfOutput . java to use a variable for clarity to improve code readability and maintainability
added imports for Lucene ' s Document class in multiple Java files to improve documentation clarity and maintainability by utilizing Lucene ' s
updated LdapAutoConfiguration and LdapProperties to use a boolean property for anonymous read - only to enhance configuration flexibility by allowing anonymous read -
refactor DatabaseMetaData class to improve code readability and maintainability
fix example echo pipeline test to work with junit4
added a ` finishMocking ` method to ` MockitoSession ` and modified the ` finishMocking ` method in ` DefaultMockitoSession ` to return
removed extraDeps parameter from the withDeclaredDeps method in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to stream
refactor SPDYAsyncConnection to replace buffer and handler variables with readBuffer and writeHandler to improve code clarity and maintainability by using
replace static block with flowing block in BlockLiquidWrapper . java to improve block management in the Liquid engine
replaced ` getBackgroundLocationListener ( ) . getName ( ) ` with ` getBackgroundLocationListener ( ) . getData ( ) ` and updated intent data
fix typo in javadoc
[ hotfix ] [ cli ] add support for streaming planning
updated item count calculation and replaced HashMap with computeIfAbsent for retrieving recipes to improve efficiency and simplify code readability
flume - 2088 . fix flaky testfilechannelrestart . testforcedcheckpoint
removed unnecessary whitespace checks in TabsAndIndentsVisitor . java to simplify code for better readability and maintainability
added a regex pattern matching " pg _ temp _ . * " in NeuteredLinesFilter . java to exclude pg _ temp _ . * files
chore : update java microgenerator to 2.0 . 0 and update gax - java to 2.1 . 0 ( # 438 )
updated DataTypeFactory and ColumnSnapshotGenerator to handle INTERVAL data types correctly to ensure proper handling of NCLOB and NCLOB data types to improve data type
[ wavefront ] do n ' t publish gauge if not publishing histogram
updated the ` distributeUpstream ` configuration in ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to include a
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable registration of sensor events with specified parameters
added logging for HTTP method calls and full URI handling in SelectChannelServerSslTest . java to improve debugging and error handling for HTTP requests
camel - 16400 : camel - ignite - do n ' t close ignite connection if it ' s null
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 569 . no longer
pdfbox - 4892 : return false instead of ioexception , a suggest by valerybokov
added tests for setting display hdr and max luminance capabilities in ShadowDisplayTest . java to ensure proper functionality and error handling for display hardware capabilities
added a finally block to ensure classLoader is properly released to prevent memory leaks
improved error messages in SemanticAnalyzer and added a new toString method in SemiJoinHint to enhance debugging information and provide clearer output for
added a constructor to the Message class to enable instantiation of Message objects
make serializable idiom work with java . awt . component a high priority
updated PhoenixDecimalObjectInspector and PhoenixDecimalObjectInspectorFactory to use PrimitiveTypeInfo and HiveDecimalUtils for decimal type handling to
updated GZIPOutputStream and CompressionResponseStream to use OutputStream instead of GZIPOutputStream to improve flexibility in handling gzip responses
corrected the spelling of " WWWAuthenticate " to " authenticateHeader " to improve code readability and maintainability
removed conditional check for " EJS " and " OMG \ " directories in DCD . java to simplify directory validation logic for better readability
updated ThreadLeakTest to use a method to retrieve the thread group name to improve code readability and maintainability by centralizing thread group name retrieval
added logging functionality to MethodInvocationPrivilegeEvaluator for better error handling to improve debugging and traceability of unauthorized access decisions
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools `
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and maintain
server : add iso path for volume that be in a user vm ( # 3971 )
refactor signal handling logic in SigInt . java and update test methods in SigIntTest . java to improve error handling to enhance clarity and
replaced ` isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability and reduce dependency on external libraries
use discoveryclient instead of noop discoveryclient
pdfbox - 4892 : fix typo find by codespell on fossies . org
deprecate planningentityselector . setresetinitializedplanningentities ( false )
added build time information to ArtifactInfo and related classes to enhance artifact caching functionality by tracking build time details
updated the handling of field declarations in GroupByOperator . java to improve accuracy in determining row sizes based on declared fields to ensure correct row sizes are calculated
wallet : do n ' t crash when block be null
added support for CNC as a currency pair in BTCEUtils and updated TickerDemo to use it to enhance cryptocurrency trading
updated skewAllowance from 5 to 15 in SamlIdPResponseProperties , SamlRegisteredService , and SamlProfileSamlConditions
replaced instances of ` ItemFields . PrimaryImageAspectRatio ` with ` ItemSortBy . SortName ` in ` SongListActivity . java ` and updated
added a method to read a body as a TypedByteArray in the Utils class to ensure proper handling of body data for HTTP requests
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` and added ` getNbtReference ` and ` setNbtData ` methods
refactor snapshot retrieval logic in IcebergBranchExec . java to improve clarity and error handling to enhance robustness by ensuring tags do not
replaced ` newArrayList ` with ` Collections . newList ` for setting ` externalGroupsWhitelist ` in ` AbstractLdapMockMvcTest . java ` to
ray trace demo : use a buffer instead of an integer for the box
added validation for the requirePasswwordChangeRequired property in IdentityProviderEndpoints to ensure that the operation is only allowed on an external identity provider to prevent
added a check for non - reflective constructors in UnreadFields . java to ensure proper handling of uninitialized fields during reflection operations
updated error handling in JdbcExecutor to distinguish between closed and closed connections to improve clarity in error reporting for database operations
added a new test method ` testRequiredBody ` to the ` SpringmvcClient ` class to validate the functionality of a ` RestTemplate ` to ensure
updated regex patterns for user and password patterns in CredentialInjector . java to improve pattern matching accuracy for user credentials
added a new menu item " Item4 " to the list of menu items in ActionListenerCalledTwiceTest . java to enhance functionality by allowing
updated test output messages in TestCoreParser . java to include class name and query to improve clarity of test output for better debugging and traceability
updated conditional checks in SimpleNode . java to use ` id ` instead of ` id ` to improve clarity and consistency in variable naming
removed the public modifier from the PopulatorContextStackItem class to allow access to the class from other packages
lucene - 8470 : morelikethis # getdocs ( ) should return - 1 if the field do not exist
updated quest condition trigger event formatting to improve readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
replaced instances of ` new BasicDBObject ( " $ gt " , 0 ) ` with ` new BasicDBObject ( " $ lt " , upper
added a new macro method ` unsafeLongLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate the use of ` UnsafeLong `
update time zone representation from ARAST to EET across multiple Java files to ensure accurate representation of the time zone in the application
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct deprecation transaction ID for accurate tracking
hhh - 14613 - fix for hhh - 14613 - do n ' t wrap jdbcexception in lockexception
do n ' t download external link that have no extension
do n ' t use screenbar on macosx , since it ' s the default
[ ca ] add piecewise integration test
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSwipeUpHandlerV2
added a new test method ` testConfigWhiteList ` in ` HiveConf ` and a corresponding test in ` TestJdbcWithSQLAuthorization
added validation for entry classes to ensure only valid entries are processed
updated the method to retrieve the closest geometry to use the player ' s team instead of the sharded team to ensure accurate geometric calculations for better accuracy
updated cookie domain configuration to use domainHelper ' s hostname to ensure the cookie is created with the correct hostname based on the specified domain
added nullable validation logic in ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` Column ` classes to ensure that null values are
chore : update license year for generated file
added query and commit functionality in CustomCollectionTest . java and changed the separator variable to static final in CompositeIdRouter . java to improve query
added support for creating a snapshot for bytea data types in ExecutablePreparedStatementBase and integrated it in PostgreSQLIntegrationTest to enhance
updated conditional checks for max _ cached _ files , max _ cache _ file , and max _ cache _ file in DefaultServlet . java to ensure proper
added drag - and - drop support to the jabref window ( # 3971 )
updated description handling in ExecutionUnitRunner , CucumberTest , ExecutionUnitRunnerTest , and ExecutionUnitRunnerTest classes to improve clarity
updated the check for ` myVersion ` and ` buildTimeString ` to use ` StringUtils . isEmpty ( ) ` instead of ` myVersion ` to
removed public access modifier from TimeUtils methods and updated package names in TimeUtilsTest to improve encapsulation and clarify package structure
fix : jdk . reflect . use . usedirectmethodhandle should not be set to false
updated file extension checks in PreviewImageFragment . java to ensure compatibility with different file extensions
[ gr - 26709 ] fix native - image - debug info output for host method .
added imports for javax . swing . Icon and ImageUtilities , and introduced getIcon ( ) methods in Data and Data classes to enhance
added a check for the last occurrence of ' . ' in the request name before retrieving its substring ' s substring ' s substring ' s substring ' s
updated the replacement logic in FindAndReplace . java to handle special characters in regex and added a test for dollar signs in FindAndReplaceTest .
do n ' t connect to jabber if there be no remote server .
refactor SchemaExtractionProcessor class to improve code readability and maintainability
added a new ` copyDir ` method to the ` IO ` class and updated ` SpecWebAppTest ` to utilize this method to
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for unknown data types
refactor ABI handling in DefaultJavaLibraryBuilder to improve clarity and maintainability of ABI retrieval logic
updated itemHeight calculation in SelectBox . java to simplify height adjustment by removing background padding
added normalization for database and table names in ObjectStore . java to ensure consistent identifier formatting
updated database schema handling in DbSqlSession . java to ensure correct schema is used for Oracle databases to improve compatibility with different database configurations
removed the logging mechanism for the mApiClient in HomeFragment . java to simplify the logout process by eliminating unnecessary response handling
[ hotfix ] [ test ] fix flaky test
added a null check for candidates in FastImportAction . java to ensure graceful handling of null elements to avoid potential NullPointerExceptions
updated the logic in ContainerLifeCycle to check if the bean is managed instead of being managed to improve clarity and correctness of lifecycle state checks
rename ` ` iexecutionattributedialect ' ' to ` ` iexecutionattributedialect ' ' for consistency
added a call to close the metadata object to ensure proper resource management and prevent memory leaks
added null check for loc before accessing its properties to avoid potential NullPointerException when loc is null
added null check for measurement and improved exception handling in DisruptorQueue to enhance robustness by preventing null pointer exceptions during execution
deleted the Session2Token . java file to remove unused or redundant code from the project
cloudstack - 8470 : delete dest volume if it fail to create it
added a new ` SystemShortcut . Install ( ) ` class and integrated it into ` SystemShortcut ` and ` PopupDataProvider ` to enable
added a constructor to ` LdapAuthenticationProvider ` that initializes ` Authenticator ` with a null authority populator to facilitate the creation of ` Ldap
added a fallback mechanism for retrolambda JAR retrieval in Executor and CN1BuildMojo to handle cases where retrolambda may not be found
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify method call to improve code readability
replaced FixedBitSet with a direct method to sort live documents to simplify the code and improve performance by eliminating unnecessary object creation
add null result handling to jmespathextractor to avoid npe
updated import statements and added a null check for currentUser roles in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated logout URL handling in multiple test files to use ` java . util . Date ` instead of ` DateTimeUtils ` to improve clarity and
cloudstack - 8470 : fix the error message for vgpg enabled vm snapshot
refactor configuration handling in RobolectricTestRunner and Config classes to improve clarity and maintainability of configuration merging logic
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to enhance network communication capabilities
added a check for partial partition keys in HiveAlterHandler . java and updated related tests in TestHiveMetaStore . java to improve partition key
added a debug flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` to the ` FeatureFlags ` class to enable the icon in the text
updated the condition for checking component activation in SimulationStatus . java to ensure proper handling of component activation state
replaced instances of ` SharedBlockingCallback ` with ` Callback ` in multiple files to standardize callback handling and improve code clarity
added WorkspaceListener functionality to PreviewControllerImpl to enable dynamic updates of the graph based on workspace selection
added a check for non - viable methods in ` ReflectUtil . java ` and modified the return condition in ` ReflectUtil . java ` to ensure
refactor TransportHelper class to improve code readability and maintainability
updated file path formatting in CatalinaAcegiUserRealm . java to ensure correct resource loading for XML files
updated logging statements in AmbariServer . java to improve clarity and traceability of server startup processes
added null checks for node instances in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions during JSON processing
refactor ` run ` method to accept a ` FileSystem ` parameter instead of a ` Map < String , String > ` to simplify the method
added a check to ensure the backgroundManager is attached before attaching it to prevent potential null reference exceptions
updated tab navigation logic in AllAppsTabbed , Launcher , PagedView , and Workspace classes to improve user experience by ensuring correct tab positioning
added null check for the URL parameter in BaseDataSource . java and created a test for it in SimpleDataSourceTest . java to ensure proper handling of invalid
added JRE and JRE annotations to PebbleModuleTest . java to enable compatibility with newer JRE versions to ensure tests are executed with the latest
added ` EditNameDialog ` functionality to handle directory creation in ` FileDisplayActivity ` to improve user experience by allowing users to create a new
added functionality to toggle bar borders in various chart activities to enhance user experience by allowing users to toggle bar borders
updated the SSL URI and host for the OkCoin exchange from " https : / / www . okcoin . com " to " www . okex
jbrules - 2835 : fix test failure in acceptedforagertest by use natural score comparator
replace FileChannel with SeekableByteChannel for better resource management to enhance performance by using SeekableByteChannel for reading input streams
refactor the ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve code clarity and maintainability
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added heap limit configuration for debug devices in QuickstepProcessInitializer to ensure that the application does not exceed a defined maximum heap size limits
refactor summation logic in Collectors . java to improve readability and maintainability of the code
log4j2 - 1349 do n ' t rethrow bundle exception if it be miss
updated conditional checks for top - level deletion status in PrecompactedRow . java to improve code readability and maintainability
updated rendering intent handling in ICC _ Profile and added InvalidRenderIntentTest class in ColorConvertOp to ensure correct processing of rendering intents
added lifecycle management for MeterRegistry in MetricsAutoConfiguration and MetricsAutoConfigurationTests to ensure proper resource cleanup and prevent memory leaks
fix ( config ) : remove common _ unexpected _ exception from log message ( # 10122 )
added multiple try - catch blocks to ensure proper handling of CertificateException during certificate generation
camel - 16400 : camel - predicate - allow to use an alias for a predicate with an ambiguous function .
refactor tab handling in EditorActivity and add focus change handling in IDEEditor to improve focus management and ensure windows are closed based on focus changes
include user ' s name in error message
updated file paths for SkeletonModelGpuSkinningTest . java and modified mesh name retrieval logic in OgreXmlLoader . java and SkeletonModel
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method signature in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotation to UpgradeResponse . java to indicate that the class is outdated and should no longer be used
added support for generating d . ts files in JSweet transpilation to allow users to specify whether to generate d . ts files during trans
[ hotfix ] [ stream ] add support for kinesis consumer factory in streamconfig
[ beam - 8470 ] fix npe in streamingdataflowworker
updated the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to optimize thread management for the metastore server
changed the return type of onTaskSnapshotChanged from void to boolean to indicate success of the snapshot change operation
replaced mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to improve clarity by using a more descriptive variable name
added a new test method ` aggregatorInput ` to the ` ChainParserTests ` class to verify the handling of nested and aggregation messages in the message processing
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure the loop does not exceed
do n ' t call isinternal ( ) on non - interactive source
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper comparison to avoid potential NullPointerExceptions
added DisplayController import in LauncherPreviewRenderer . java to enhance functionality by integrating display management capabilities
removed conditional logic for setting the name of the home directory in MetalFileChooserUI . java and SynthFileChooserUIImpl . java to streamline the code
updated screenSize retrieval from getToolkit ( ) to Toolkit . getDefaultToolkit ( ) to ensure compatibility with the latest toolkit API
change type of ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < CaptionObject > ` in `
added methods for inserting , removing , and deleting entities in JPASQLBase . java to enhance testing capabilities for entity management in the database
updated drag index handling in FreeformFinSetConfig . java to improve clarity and functionality of point removal logic
update moe version to 1.2 . 0 in dependencybank
added a call value error message and a call value spend operation in the Runtime class to improve error reporting and ensure gas spending is handled correctly
updated error messages in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldBeSatisfy _ create _ Test
mark the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor unsafe plugin registration logic into a separate method to improve code readability and maintainability by reducing duplication
added @ Hint annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinaryModularIntegrationTest classes , and
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical scrolling functionality
added a call to ` doneProcessing ( ) ` in ` migrationInfo . doneProcessing ( ) ` to ensure proper completion of migration info during processing
[ konnectedupnpserver ] rename moduleip to baseurl in konnectedhandler
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java `
added database handling methods in TestJdbcWithMiniLlap and LlapBaseInputFormat to enable testing with a specified database for database - specific queries
added a test case for handling brackets in SQL queries to ensure correct parsing and deparsing of CASE expressions with bracketed parentheses
added touch event handling for copying in ConsoleActivity . java to improve user interaction by enabling copy functionality on specific devices
refactor XML output writing to use a try - with - resources statement to ensure proper resource management and avoid potential resource leaks
camel - 16400 : camel - aggregator - optimize to avoid npe
( chore ) camel - core : avoid circular dependency
rename ch . qos . logback . classic to ch . qos . logback . classic . basicconfigurator .
dataflow analysis : do n ' t allow phi node to be a phi node in typequalifiersflowanalysis
remove unused import of sharedstringsource to clean up the code and improve readability
added a new method ` invokeMethod ( IObject iObject , MethodEntity , TraceInfo , ... ) ` to the ` ObjectInvokeHelper ` class
refactor multiple Java files related to box and whisker calculations to improve code organization and maintainability
[ hotfix ] [ test ] migrate test to junit 5
lucene - 7979 : fix npe in indexedindexreader when collection name be empty
changed the visibility of IndexFileNameFilter from static to private to enhance encapsulation and restrict instantiation of IndexFileNameFilter
refactor IfStatementTest to improve plugin definition handling to enhance clarity and maintainability of the test code
updated method call for putting only table header row to ensure consistency in accessing table headers
replaced instances of ` GsonBuilder ` with ` nullSafe ` in ` TypeAdapter . java ` and ` StreamingTypeAdaptersTest . java ` to
updated the expected value in BundledDistributionTest from 12 to 13 to reflect the correct expected output after recent changes
added a new file EXIFReader . java to handle EXIF metadata processing to enable processing and validation of EXIF metadata in the application
fix cloudwatchmeterregistry . tostandardunit when unit be unknown ( # 1851 )
applypmml4datafactory : fix npe in case of invalid parameter
improve error message for counter currency transfer start
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing
[ gr - 18860 ] recompile conservatiavely when branch target estimation be
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java to ensure that initPending is set to false
added ` find ` method to ` TicketCatalog ` , ` DefaultTicketCatalog ` , and ` HazelcastTicketRegistry ` classes
updated SSL connection string construction and assertions in TestSSL . java to improve readability and maintainability of the code
[ hotfix ] [ runtime ] fix race condition in sort merge result partition
( chore ) camel - jms : fix checkstyle violation in jmsio
added support for an additional parameter ' type ' in plugin handle queries and updated related classes accordingly to enhance the filtering capability of the plugin handle retrieval
replaced ` nextSpan ( ) . name ( changedName ) ` with ` start ( ) ` in the DefaultSpanCreator and SleuthAdvisor
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat configurations to IOSApplicationConfiguration
refactor LoginIT to use a dedicated method for user login attempts to improve code readability and maintainability by reducing duplication
[ pytorch ] make jni comptible with pytorch 1.11 . 0 ( # 2263
refactor lockName retrieval logic in SynchronizationStatistics . java to use a loop for better readability to improve code clarity and maintainability
updated implementation details in Implements and ShadowPicker classes to improve code clarity and maintainability
refactor HTTP client options to use a dedicated method for creating HTTP2 client options to improve code readability and maintainability by centralizing HTTP
added support for DynamicArray in the SolidityFunctionWrapper and SolidityFunctionWrapperGenerator to enhance type handling and improve error reporting for missing types
updated text - align property retrieval to include a boolean parameter to enhance flexibility in text alignment configuration
added ` shouldRecurse ` parameter to ` CopyStep ` constructor and corresponding test cases in ` CopyStepTest ` and ` CopyStepTest ` to enable
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) do n ' t work with redis 5.0 . 0 .
camel - 16400 : camel - core - optimize routecontextprocessor to avoid classcastexception
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to utilize it for parsing flavor strings to improve code
changed data types from List < String > to List < ByteString > for witnessesAddressList and currentShuffledWitnessesList to
added a check for non - empty results before printing results to avoid printing empty results to improve output clarity
refactor ConcurrentLinkedQueue to improve item removal logic and add a new class RemoveLeak to enhance thread safety and prevent potential memory leaks in
[ huggingface ] support add special token in tokenization
[ hotfix ] [ runtime ] use nCopies for compute slot resource profile
updated the handling of ChunkData and alignedChunkData in LoadSingleTsFileNode . java to improve clarity and consistency in data management to ensure accurate
added session storage context handling in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to improve session storage management to enhance user experience
added a test case for schema validation in TestJspDocumentParser . java to ensure proper handling of XML schema validation in the application
added a constructor to TypeAdapter and updated suppress warnings in ReflectionAccessTest to ensure compatibility with Java 17 to address deprecation issues related to security management
refactor event dispatching to improve clarity and separation of concerns in Debugger . java and SuspendedEvent . java to enhance
refactor AntPathRequestMatcher class to improve code readability and maintainability
[ ds - 3952 ] remove unused parameter from createresourcepolicy method .
added a null check before releasing the deflaterEntry in GzipHttpOutputInterceptor . java to avoid potential NullPointerException when _ deflaterEntry is null
added JUnit AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests run after each test to improve test reliability and maintainability
updated the MD5 computation to normalize Unicode characters in the valueToChecksum to ensure compliance with Unicode standards for better compatibility
refactor command handling and improve null safety in the code to enhance code robustness and prevent potential NullPointerExceptions
changed the visibility of the keyListener variable from private to final in BasicProfilerState . java and added multiple @ Override annotations in BaseAppState . java
updated the variable name from objectToSave to dbDoc in MongoTemplate . java and added a new test for saving JSON strings in MongoTemplateTests . java
added support for multiple remote addresses in RequestUtils to enhance request handling for remote addresses in HTTP requests
updated getJobArgs method to return ObjectBuilder instead of String to enhance flexibility in handling JSON data structures
refactor CookieManagerTest to use a local variable for the host address and improve error handling to enhance code readability and reliability by
updated character wrapping logic in GlyphLayout . java and added a new test in BitmapFontTest . java to ensure proper handling of whitespace wrapped runs to improve
[ hotfix ] [ connector / pulsar ] [ connector / pulsar ] add support for pause / resume split reader
added a new configuration variable ` HIVE _ SCRIPT _ OPERATOR _ ID ` in ` HiveConf ` and its usage in ` ScriptOperator ` to
updated the ` getListedTermCounts ` method to accept a ` SortParam ` for term counts to improve flexibility in sorting term counts based
added a new action ` UseSeparateStepSizeAction ` in the ` com . willwinder . ugs . nbp . nbp
added imports for AccountManager and FileLockingHelper , and modified filter logic in FileMenuFilter . java to enhance file locking functionality and improve
hbase - 27809 fix roundrobintableinputformat to handle empty regionserver
updated the value of PARENT _ SPAN _ ID from " false " to " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to
pdfbox - 4892 : use ioutils . closequietly instead of null check
updated methods in GwtGraphics and GwtApplication to support fullscreen functionality and screen resizing to enhance user experience by ensuring proper handling of fullscreen mode and screen
updated WebfingerIssuerService to use URI type for issuers and changed parameter name from " login " to " identifier " to improve code clarity and align with WebFinger standards
added unit tests for SoulApacheDubboClientConfiguration in SoulApacheDubboClientConfigurationTest . java to ensure
updated texture path handling in SkinLoader . java to use ` pathWithoutExtension ( ) ` instead of ` Gdx . files . internal ( ) `
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to improve log
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in ` PlayerApiServlet . java ` and ` BrowseHandler . java `
updated package declaration in Compiler . java to ensure consistency in package structure
added exception handling logic in NullDerefAndRedundantComparisonFinder . java to improve error reporting for redundant code comparisons
make dashrendererbuilder more consistent with other renderer
added a configuration property to specify the maximum number of prepared statements per database connection to enhance control over statement caching for database connections
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes from ` WritableConfig ` to ` Configuration
added error handling for command payload validation in AutoScalingHandler to ensure proper error reporting for bad requests
refactor CombinedDataset class to improve code readability and maintainability
replaced the byte array with a variable ` b ` for clarity to improve code readability and maintainability
added methods to remove cryptographic restrictions in Utilities . java to enhance security management by allowing users to remove cryptographic restrictions
fix nether not be able to create chunk if the event be cancel
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure proper handling of long text transformation scenarios
added a null check for ` vContext ` before creating a new instance of ` VectorizationContext ` in ` Vectorizer . java ` to ensure `
fix wialon protocol speed value ( fix # 1079 )
hbase - 20583 disable metric user aggregation by default
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to check if
updated variable names from ` mUserPresent ` to ` mAttached ` in ` Launcher . java ` to improve clarity and ensure unregistering the
refactor multiple classes related to HTTP request and response handling to improve code organization and maintainability
add parameter to the zadd ( ) method in pipelinebase
[ ds - 3952 ] fix build after upgrade to late version
rename testasyncmessages to testasyncmessagesPerformance
added a method to retrieve an Optional < TargetNode < ? , ? > > for a specific target in VersionedTargetGraphBuilder to improve
updated epoch condition checks in TimeZoneProvider . java to improve accuracy in time range validation
update return value in EscherBlipRecord . java to return HEADER _ SIZE + HEADER _ SIZE + HEADER _ SIZE and add a new test case
removed redundant initialization of row and column variables in JSONParser . java to streamline code for better readability and maintainability
refactor ` isAssignableFrom ` method to accept ` Pattern ` instead of ` FullyQualified ` to enhance flexibility in matching fully qualified
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added functionality for playing trailers in BaseItemDetailsFragment to improve
added a native method to remove glyph info from the cache and removed it from the StrikeCache to improve memory management and ensure proper resource cleanup
terminate end - of - activity : do n ' t delete orphaned process entity
camel - 16400 : camel - jaxb - allow to use xmlRootElement a a parameter for xml type name
updated the endpoint from " http : / / apereo . org / scottb . html " to " https : / / www . a
reset all preference to default value
hbase - 27486 make thriftmetrics protect to allow subclassing
[ danfossairunit ] remove deprecate channel _ manual _ fan _ speed ( # 16486 )
use hamcrest assertion instead of junit in test endpoint
removed duplicate code in TweetActivity . java to improve code readability and maintainability
added null check for index in PartitionPanel and implemented hashCode method in PartitionFactory to ensure proper handling of null values and prevent potential NullPointerExceptions
server : add root disk size to vm detail
updated PredictionRowView to conditionally display prediction indicators based on user preferences
[ geos - 10641 ] fix bbox parser to handle invalid crs
added validation methods for value and position parameters in LibrustzcashParam . java to ensure that value and position shoud are non - negative
move ithrowableentity to fml instead of fml . com
updated the x and y assignments in NodeDataImpl . java to use random values instead of fixed values to improve the variability of the node data
updated the ` validateRefreshToken ` method name and added a test for handling missing scopes in ` TokenValidationTest . java ` to improve clarity and ensure
refactor variable declarations for declaredDepsBuildResult and firstOrderStderr in JavacStep . java to use try - with - resources to ensure proper resource
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version of the software
added a condition to handle deep shortcuts in LoaderCursor . java to enhance functionality to support deep shortcuts in item loading
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hashing behavior for instances of TimeGranularitySpec
changed visibility of BooleanWeight and DisjunctionMaxQuery classes from private to protected to allow subclass access to these classes for better extensibility
added a boolean flag to control the use of proxy response codes in HttpURLConnection to ensure proper handling of NTLM proxy responses based on configuration
refactor aarch64address to use scratch register
server : return total memory when vm be in capacity of vm
added a condition to check if ` docs . getMaxScore ( ) ` is not null before processing score inclusion in JSONResponseWriter . java to ensure that score
updated audio recoder parameters from 22050 to 44100 to improve audio quality during recording
updated the calculation of newOriginX in RocketFigure . java to correctly account for minimum x - coordinate based on subject bounds
[ hotfix ] [ table - planner ] fix checkstyle violation in druidquerybasedinputformat
added ORIGINAL _ TYPE to the ORIGINAL _ ID and modified regex pattern in CustomProperty . java and CustomPropertyTest . java
added a new method ` create ` to create an index with a parent table and data to facilitate the creation of index instances with associated data
simplified the conditional check for lower and upper boundary periods to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility and added a new test for reader and writer incompatibility to improve compatibility checks to ensure correct handling of reader and writer
added support for handling entity paths in the QueryUtils class to improve the handling of entity relationships in JPA queries
added synchronization for accessing and modifying the spans list in TestSpanHandler . java to ensure thread safety during concurrent access to the spans list
updated method signatures in multiple classes to use wildcard types instead of Object to improve type flexibility and reduce potential runtime errors
updated exception handling in ViewContextImpl . java to include detailed error logging to improve error reporting for better debugging and traceability
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages in SCBEngine , TestInvocationFactory , TestInvokerUtils , HighwayServerInvoke , and HighwayServerInvoke classes to cl
added iOS data and moe resources in GdxSetup . java to enable access to additional iOS resources for testing
added ConcurrentMergeScheduler to TestSearcherManager to enhance merge efficiency during tests
updated condition in QTestUtil and modified list handling in GenericUDTFInline to improve session state validation and enhance list retrieval logic
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and readability
ggb - 1357 fix : prevent default in spreadsheetkeylistener
hhh - 15686 - fix osgi test failure in osgi test
improve timeout calculation to account for connection timeout
do n ' t create component . xml if it do n ' t exist
refactor file name handling in Compat and FileOpener classes to improve clarity and ensure proper file existence checks to enhance code readability and
changed the return type of the row ( ) method from Cell < T > to void to indicate that the method does not return a row object
improve error message when port name be specify multiple times
added nullMask functionality to WebSocketClient and updated WebSocketConnectionD12 to use it to improve flexibility in masking WebSocket connections
changed the return type of ` genUDTFPlan ` from ` RelNode ` to a ` Pair < RelNode , RowResolver > ` to improve
[ hotfix ] [ runtime ] add node selection stats to node scheduler
add a new class Person to facilitate the creation and management of Person objects
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to check if ` ownerPtr ` is
added clock functionality to PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback
remove redundant markDirty ( ) call from multiple classes to streamline code by eliminating unnecessary method calls
changed the visibility of ` Class IMPL ` from final to non - final and added error handling for loading ` SegmentReader ` to improve flexibility in
added SwingUtilities . invokeLater to SudokuGridEvent to ensure UI updates occur on the Event Dispatch Thread for thread safety
refactor DefaultTypeAdapters and related classes to simplify IP address handling to improve code readability and maintainability by reducing redundancy
added null and empty checks for double , long , and string values in Series . java and corresponding tests in DataFrameTest . java to ensure proper
updated command - line option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager .
updated boundary checks in GeoRelationUtils and GeoUtils to improve boundary validation logic to enhance accuracy in geometric calculations involving lon and lat
server : fix vm deploy error when vm be in stopped state
added a cleanup method to HazelcastTest to ensure resources are released to prevent memory leaks
added tests for AES encryption modes in BlockCipherTest . java to ensure proper error handling for NoSuchPaddingException and NoSuchAlgorithmException to improve robustness of AES
added filters to print operation logs in QFileClient . java to enhance visibility of operation logs for better debugging
fix : add support for inject parent interface ( # 7073 )
fix possible nullpointerexception when connect to sip server
replaced manual arithmetic addition with a utility method for capped addition to handle potential overflow more gracefully and improve code readability
updated ImageOutputStream handling to use try - with - resources for ImageOutputStream to ensure proper resource management and avoid potential NullPointerExceptions
replaced calls to ` TvApp . showSearch ( ) ` with ` startSearch ( ) ` in multiple classes to streamline search functionality
refactor ` SchemaCrawlerCommandLine ` and ` GrepOptions ` to improve code structure and formatting to enhance readability and maintainability of
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for osgi
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository component
replaced ` Exception ` with ` InterruptedException ` in the ` stop ` method of ` UIServer ` and ` TestVertxUIManual ` classes to improve
add more block to cactusblock placement validation ( # 301
refactor mouse event handling in ThemeSelector to use a dedicated mouse motion listener to improve code readability and maintainability
[ java ] extend abstractminmulticastflowcontrolpadding to allow subclassing .
added alignment parameters to editStringAt methods in IOSImplementation and IOSNative classes to enhance the functionality of the editStringAt method by
added null check for modelFile in StatTokSentAnnotator constructor to improve error handling by throwing an exception when modelFile is not specified
added a check for distinct queries in ClusterIntegrationTestUtils and QueryGenerator to ensure correct handling of distinct queries in query generation
do n ' t throw nosuchelementexception when a method be not find .
fix a typo in the javadoc
added a null check for the children list in PartitionPruner . java to prevent potential NullPointerException when children is null to enhance code stability by
added tokenPosition and currentPosition fields to MessagePackParser and improved JsonLocation handling in MessagePackParserTest to enhance parsing functionality and
added locale handling in AbstractSolrMorphlineTestBase to reset the default locale to enhance test environment by ensuring consistent locale settings
simplified the calculation of status bar height based on the SDK version to improve code readability and maintainability
added a new test class MetricsReporterTest to implement metrics reporting functionality to ensure that metrics are properly registered and exceptions are thrown when registered
camel - 16400 : camel - core - optimize to reduce memory usage
added equals and hashCode methods to Rectangle class to ensure proper comparison and hashing functionality for instances of Rectangle
[ hotfix ] [ test ] [ kafka ] add test for non existent topic
updated DSAParameterGenerator to use ` BigInteger . ONE ` instead of ` BigInteger . ZERO ` for prime strength checks to improve code clarity and
added FQDN usage configuration in LLAP daemon settings to allow users to choose whether to use FQDN when submit work to LLAP
fix client outofmemoryhandlertest # testclientoutofmemory
added getCmoObjectId method to AbstractShape , CommentShape , LineShape , and TextboxShape classes , and created a new test class for
added a new test method ` testWithDistinctScalarQuery ` in ` DistinctTest . java ` to verify distinct query functionality to ensure correct handling of
updated Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to improve code organization and maintainability
remove unused extensionadapter from managedkubernetesclient
updated subtitle formatting in DetailsDescriptionPresenter and Utils classes to use a new utility method to improve code readability and maintainability by centralizing subtitle
test : migrate test to junit 5
improve error message when generate summary html
lucene - 7979 : do n ' t leak memory in termshash
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added support for TIRAMISU in ShadowWindowManagerGlobal for managing window session delegation to enhance compatibility with newer Android versions
fix urlhelper . forceaddschemehost and urlhelper . forceaddport for nonstandard port
updated foreign key constraint handling to support MSSQLDatabase to ensure compatibility with MSSQL - specific foreign key constraints
phoenix - 2088 addendum : fix test failure in hbase - replication
added side check to filter pipe event . fix # 1114
simonstewart : make htmlidentifier log output in debug mode
updated HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( ) for field data types
improve thread safety in exoplayer2 .
updated schema name assignment in SequenceSnapshotGenerator to use a custom SchemaAndSchema to enhance schema name customization for better database compatibility
updated SpriteBatch , SpriteCache , LwjglDebugStarter , and AlphaTest classes to use AlphaTest instead of ProgressiveJPEGTest and modified
fixed - redissonconnection . to completablefuture ( ) . join ( ) method return wrong result . # 3473
added base core checks in SolrLoggerServiceImpl . java to ensure statistics are only added if they do not already exist
updated method names from ` launchTask ` to ` launchTaskFromView ` for clarity and consistency to improve code readability and maintainability
refactor MorfologikFilter to accept a dictionary resource for better resource management to enhance flexibility in loading dictionary resources and improve
updated sorting options in GridFragment . java to use localized strings for community ratings to improve internationalization support for sorting options
added imports for ViewKt and ViewKt , and modified the visibility of the header item in CustomListRowPresenter to ensure the header item is not visible
refactor client type handling in StressAction . java to improve code readability and ensure proper resource management
refactor HttpClient class to improve code readability and maintainability
updated case sensitivity checks in CatalogAndSchema , CatalogAndSchema , and AbstractDb2Database classes to use instanceof for DB2Database instances to improve code
add support for serialization of java . time . timestamps
replaced Apache Log4j MDC import with SLF4J MDC in LogUtils . java to standardize logging framework across the application
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to improve type handling by explicitly casting it to ` Type ` to
updated import statements and formatting in CoinbaseTransaction . java to improve code readability and maintain consistency in formatting
added a method to force a list of build targets in BuckConfig and updated ProjectCommand to use this method to enhance flexibility in
replaced the initialization of IdleStrategy with a call to BusySpinIdleStrategy to ensure idle strategy is properly set before use
replaced ` ContentProvider ` with ` ContentResolver ` across multiple files to standardize content handling across the application
removed redundant conditional checks in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix nullpointerexception in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that implements garbage collection procedures to facilitate the removal of system garbage
removed redundant super ( ) calls across multiple exception classes to streamline exception handling by eliminating unnecessary super ( ) calls
added a setUIID method to the ScaleImageLabel class to ensure the correct icon is set for the UI element
replaced ` foundEntry ` with ` update ` in the ` FeedUpdateService ` class to improve clarity by using a more descriptive variable name
updated command - line argument handling in Main . java to support both " - classpath " and " - cp " options to enhance flexibility in specifying
avutil : fix compilation error
set initialized to true in StorageService . java to ensure proper initialization state
updated Test7196045 . java file to improve test coverage and functionality
updated the default density and decay values in ShaderParametersLightShaft . java to improve shader rendering quality
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and ` OidcRedirectActionBuilder ` classes to support state management
fix : add nullable column to unique constraint
added file sharing federation checks in UsersAndGroupsSearchProvider and EditShareFragment to ensure that only users with federated share can share files
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to determine if ` needsDocValues ( ) ` is true
refactor BufferAlignmentAgent and related classes to improve error handling for unaligned byte access messages to enhance clarity and maintainability of error reporting
added a method ` intForEach ( IntObjConsumer < V > ) ` to ` Int2ObjectHashMap ` and updated ` IntObjConsumer
fix : share scoreboard early in worldserver # sharescoreboard ( # 4588 )
change return type of count method from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes to allow
refactor MTree snapshot creation logic to use a conditional statement to improve readability and maintainability of the code
updated the dot product calculation in VectorUtil to improve precision and accuracy of vector scoring logic
added a new constant IRREVERSIBLE _ THRESHOLD and implemented it in DynamicPropertiesStore to track and manage the number of irrespective
replaced the ` setLocale ( ) ` method with ` Systems . setLocale ( ) ` in GpsMainActivity and MainPreferenceActivity to
added a check for if a new database was created in LauncherClings . java and created a new database in LauncherProvider . java to ensure
refactor exception handling to improve readability and maintainability of the code
added a null check for ` datamodel ` before initializing ` is64Bit ` and ` is64Bit ` to ensure ` is64Bit `
added a thread check in TestIndexWriterDelete to ensure the test runs only on the correct thread
changed the visibility of the closeDatabase method from private to protected to allow subclass access to the closeDatabase method
replaced ` BaseItemPerson ` with ` BaseItemPerson ` across multiple files to ensure compatibility with the latest Jellyfin SDK features
added attribute handling in BatikSVGDrawer . java to ensure the correct attribute values are set for SVG document elements
added try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling for parsing user configuration
added handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to conditionally set " WaitingForResult " based on intent extras to ensure
modified the constructor of ` HitQueue ` to accept a ` Supplier < T > ` for pre population to enhance flexibility in pre
added widget description handling and visibility management in WidgetCell . java to improve widget information display for better user experience
added a limit on the number of registered attributes in the attribute registration to prevent exceeding the maximum allowed attribute count
move predicate test to impl . predicates package . fix # 205
camel - 16400 : camel - jbang - allow to turn off case insensitive header filter by default
refactor InlineLayout and Breaker classes to streamline inline alignment handling and improve code clarity
added null checks for ` view ` and introduced ` mAvatarRadiusDimension ` in ` ShareUserListAdapter . java ` to improve robustness
refactored the ` shouldInstrument ` method to use a new ` isFromAndroidSdk ` method to improve code readability and maintainability
added a check for insert destination before source in BrowserContentPane to ensure correct index is returned for insertions before source
added memory limit file path handling in CmdModifierTest . java to improve memory management based on Docker container version
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` and added a check for empty dependencies
improve error message when source be not unique
add support for proxy for mc version 1.9 . 2
added a check for negative atIndex in StringUtils . java to ensure atIndex is always non - negative to prevent potential errors
increased timeout duration from 100ms to 500ms in BuckBlockJUnit4ClassRunner to allow more time for tests to complete successfully
added AssistContentRequester to TaskOverlayFactoryGo and TaskOverlayGo constructors to enhance functionality by integrating assist content requests
updated witness address handling in VoteWitnessProcessor . java to improve clarity and correctness of witness address generation
refactor DefaultMethodRegressionTests class to improve code readability and maintainability
[ hotfix ] fix typo in workloadmanagermxbean
updated KafkaException from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to ensure compatibility with the latest Kafka
added a call to close the container to ensure proper resource management and prevent memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and a corresponding test in ` FaultTolerantException
improve error message for config deployment failure
added extraProperties parameter to multiple method signatures across multiple classes to enhance configuration flexibility by allowing additional properties to be passed
added a check to prevent adding segments that are already in progress to optimize segment addition by avoiding duplicate segments
added a check to return null if the component is touchable but disabled to ensure that disabled components do not receive touch events
added a new test method ` testBuildUsingPrecompiledHeader in ` PrecompiledHeaderIntegrationTest ` to verify the support of precompiled headers to ensure
throw retryablehazelcastexception instead of nullpointerexception when cache config can not be create
refactor module installation logic in JSweetTranspiler and add a method to check if a node package is installed to improve code clarity
added @ ManagedObject annotations to MBeanContainer and Destroyable classes to enhance monitoring and management capabilities for component lifecycle management
changed the condition from checking if the inAppBrowser is true to checking if it ' s false to ensure that the long - click functionality behaves as expected
use ` ` . equals ( ) ' ' instead of ` ` equals ( ) ' ' for string comparison
updated type checking logic in ` mmm Types . java ` and added new classes ` T6558559a ` and ` T6558559b
improve debug output for worldeditlistener
camel - 16400 : camel - kafka - do n ' t spin up the kafka consumer thread pool if it be not need .
added a default method ` examples ( ) ` to the Schema class to provide a convenient way to retrieve example information
refactor thread interruption logic in AgentRunner . java to use a while loop to improve clarity and ensure proper termination of threads to enhance
added time column removal in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in data source configurations
added a null check for sreq . shards in FacetComponent . java to ensure proper handling of cases where shards are not set
updated RustBinaryDescription and RustLibraryDescription to use CxxPlatforms instead of LinkerProvider for parsing time dependencies to improve code clarity and
added a ` name ` property to ` JaaAuthenticationProperties ` and ` NtlmProperties ` classes to store and manage the name of authentication properties
improve error message when printer can not be connect
refactor small scan threshold handling in BaseQueryPlan and QueryServices classes to improve code readability and maintainability by reducing repetitive
updated the return statement in RetryGatewayFilterFactory to include routeId and routeId in the string representation of the filter to enhance clarity by including
replaced calls to ` redisplay ( ) ` with calls to ` callWidget ( RE DISPLAY ) ` in ` LineReaderImpl . java ` to improve
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` and ` DiscoveryBounce ` classes to improve
refactor null checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` and add a
updated the publish method to include an updateLastState parameter to enhance state management by allowing updates to last state
updated string concatenation syntax in MetastoreDirectSqlUtils . java to improve code readability and maintainability
removed a null assignment for the ' exp ' variable to avoid potential null pointer exceptions
danielwagnerhall : add ` ` exacttextcase ' ' and ` ` exacttextexact ' ' to ` `
removed redundant loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1181 - add ormqueryengine . forwardonlyfetchsize ( ) method to ormqueryengine
do n ' t send 404 back to the client if the channel be already close
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl . java to ensure proper window radius adjustment based on device capabilities
changed the type of ` mBackground ` from ` ShapeDrawable ` to ` View ` in ` DesktopTaskView . java ` and updated related
[ hotfix ] [ test ] fix upstreamcheckservicetest # testupstreamscheckservice
changed log level from warn to debug for session immortal logging in AbstractSession . java and AbstractSessionManager . java to reduce log verbosity and improve
replaced logging of ZooKeeper children with a direct return statement to simplify error handling by avoiding unnecessary exceptions
[ hotfix ] [ runtime ] fix checkstyle violation in executionconfig
added a check for custom data before generating mipmaps for texture arrays to ensure mipmap generation to avoid unnecessary mipmap generation when using mipmaps
fix defaultmaskingthrower to use ' secretkey ' instead of ' secretkey '
added selectability functionality to the List class to allow items to be marked as selectable based on user interaction
added a check for empty field vectors in LlapArrowBatchRecordReader to ensure that the reader correctly handles cases where no values are present
added a constructor to PolicyContext and updated variable names for clarity to improve code readability and maintainability
replaced HashSet with ArrayList in FieldQuery . java to improve performance and reduce memory usage
refactor TLSRestrictions class to improve code readability and maintainability
http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : kafkamanager
updated assertNodeStateProvider to accept a list of ignorable node values as a parameter to enhance functionality by allowing nodes to be ignored during snapshot state
added a lock file to the RocksdbMavenPomCache to ensure thread safety when accessing shared resources
[ hotfix ] fix npe in minizookeepercluster
added a method to retrieve a REST response in RestClient to improve error handling and logging for connection issues
updated the parameter of segmentTarURIs from an array to a single string array in IngestionUtils . java to ensure that segmentTarURIs to
added a password parameter to the loginStudent method calls in AllAccessControlUiTests to enhance security by allowing the test to use a password
added null checks for ` mCurrentRow ` and ` mCurrentItem ` in ` EnhancedBrowseFragment . java ` and ` StdBrowseFragment .
increased the maximum number of strings from 500 to 100 in TestSpecialOperations . java to accommodate a larger dataset for testing purposes
fix wkbattributeio to use byte [ 0 ] instead of array
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity by explicitly indicating
added a method to check if a transition is direct substates in AbstractStateMachine to ensure proper handling of direct substates in the state machine to enhance
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure
added JoinOperation to the PostJoinOperation class to enhance functionality by integrating additional join operations
added a new test method ` testAdditionalPostgreSQLTest ` to verify PostgreSQL functionality to ensure that the PostgreSQL test correctly handles database operations
http : / / issues . apache . org / jira / browse / amq - 5035 - add test for amq - 5035
refactor AvaticaDatabaseMetaData class to improve code readability and maintainability
updated lifeTime , idleTime , and maxWaitTime fields from milliseconds to strings in MongoDbConnectionPoolProperties . java and MongoDbConnectionFactory . java to improve
fix nullpointerexception in siputils . createaudiomedias
refactor filtering and domain changes handling in FacetProcessor to improve clarity and functionality to ensure filters are only processed if they are not null to en
http : / / issues . apache . org / jira / browse / amq - 2679 - allow to turn off the timeout handler
replaced hardcoded value for mQuickStepStartingRotation with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability and maintainability to
( chore ) camel - xpath : fix checkstyle violation
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : use dataresource
add unit test for edge case tokenizer ( # 1751 )
added error handling for missing ' atlas ' property in AtlasTmxMapLoader . java to ensure the map ' s ' atlas ' property is present
camel - 16400 : camel - core - optimize property placeholder resolution in camel - core
added a call to close the levelDbDataSource to ensure proper resource management and prevent potential memory leaks
replaced ` String [ ] ` with ` List < String > ` for splitting lines in ` CoreMarkdownNodeRenderer . java ` for better readability to
removed unused imports from WebServiceInboundGatewayParserTests . java to improve code clarity and maintainability
replaced ` ImmutableList . Builder ` with ` List < Object > ` and added null - friendly bindings handling to improve flexibility in managing SQL
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a call to ` getKeepAlive ( true ) ` in ` ReactorClient . java ` to ensure proper resource cleanup after each request
replaced instances of ` VertexAttribute ` with ` ShaderProgram . POSITION _ ATTRIBUTE ` across multiple files to improve code readability and maintainability
camel - 16400 : camel - core - optimize to avoid reflection
updated null check for accountCapsule in UnfreezeBalanceActuator . java to ensure account existence is validated before accessing its properties
prepare for 3.8 . 1 release .
replaced calls to ` t . unannotatedType ( ) ` with ` t . unannotatedType ( ) ` in ` Types . java `
updated assertions in StorageGroupProcessorTest to use an iterator instead of direct calls to getWorkSequenceTsFileProcessors to improve code readability and ensure correct
added ` DumpableCollection ` to ` DumpObjects ` method and introduced ` getAll ( ) ` method in ` Environment ` to facilitate
added a delay parameter to the FFMpegVideo initialization to improve video processing timing
removed the ` _ skipCorrupt ` parameter from ` OrcEncodedDataConsumer ` and its usage in ` OrcColumnVectorProducer ` to simplify the
make accessorstest # listindex out of the box
add a method to get the framemap for the lirgenerator .
replaced ` @ Ignore ` annotations with ` @ ConditionalIgnore ` in multiple test files to ensure tests are ignored due to continuous integration conditions
fix boat ' s y - coord to account for water
updated the ` toString ( ) ` method in ` Directory ` and ` RAMDirectory ` to include ` toString ( ) ` for better string representation to improve
removed the method ` allowExperimentalOptions ( ) ` from the ` Launcher ` class to simplify the conditional check for experimental options
added methods for asserting paths in BDDAssertions to enhance path assertion capabilities in BDDAssertions for improved testing capabilities
updated the variable name from ` hp ` to ` hostField ` for consistency and clarity to improve code readability and maintainability
updated logging messages to provide clearer guidance on Kubernetes configuration files to improve user understanding of configuration file usage on Unix systems
added file upload status handling and logging in FileUploadService and UploadListActivity to improve file management and error handling during uploads
added a new file ` ProviderLoader . java ` and refactored ` TerminalManager . java ` to use ` ProviderLoader . java `
use tracemessageheaders instead of span
updated SQL query to use a wildcard query for retrieving changeset history to improve performance by reducing the number of query executions
hhh - 14589 - fix oracle compatibility with postgresql 11
ignore partition size if datamembersize be 0
added error handling for Scheduler initialization and refactored scheduler start logic to improve robustness and ensure proper scheduler state management
removed unnecessary string conversion for inline boxes in BoxBuilder . java to simplify code and improve readability
updated string concatenation syntax in StatisticMap . java to improve code readability and maintainability
updated the return value of getStagedRectSlideEnd method from 383 to 500 to correct the timing logic for staged rectangle slide end
updated button label from " Random " to " waves . random " in WaveInfoDialog . java and PlacementFragment . java to improve localization and
updated conditional logic in BukkitMain . java to include an additional check for owned plots to ensure road item removal only occurs when the plot area
added a test for touchExploration state change listener invocation in ShadowAccessibilityManagerTest and modified listener handling in ShadowAccessibilityManager to ensure
pdfbox - 5328 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
remove usage of stringproperty for testelement # getname ( )
replaced direct instantiation of NPOIFSFileSystem with POIFSFileSystem . create method to simplify code and improve readability to enhance maintainability by reducing
added plot area handling in Move . java to enable retrieval of plot coordinates based on the specified string
updated version regex from " 0. [ 0 - 9 ] + . * " to " [ 0 - 9 ] + . * " in TestWeb
updated the condition from ` count < 0 ` to ` count < 1 ` in ` pickleEvents . java ` to ensure the count is less than or
add client id to kafkaproducer when kafkaproducer be run in parallel
added a check to throw an exception if the javac execution fails to improve error handling by throwing a specific exception when the execution fails
mow - 1010 do n ' t repaint euclidianview if not need
camel - spring - batch - fix checkstyle issue in camel - spring - batch
added a method ` isAnimationFinished ` to check if an animation has finished to provide a way to determine if the animation has finished correctly
updated imports in LoginInfoEndpoint . java and LoginMockMvcTests . java , and added a new test case in LoginMockMvcTests . java to
added null check for ` otherUrl ` before comparing ` otherUrl ` in ` TimeLineCursorAdapter ` and improved string concatenation in ` HomeFragment
fix for ticket : 246 : rfe : rfe do n ' t work with space
refactor ObjectHashSet class to improve code readability and maintainability
updated null and array comparison logic in DataUtilities . java to improve code readability and performance by using explicit null checks
allow for deletion of enchanted books , mc - 12770
add a test case for async resource ( # 1851 )
renamed ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX `
added error handling for sending messages in MailService . java to improve debugging and error reporting for sending messages
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskItemView . java ` and added ` EMPTY _ LABEL
added tests for partition retrieval with multiple batch sizes in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct functionality of partition retrieval with varying batch
refactor FileListListAdapter class to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OCFileListAdapter . java
updated the index of the child in removeViewInLayout from 1 to getChildCount ( ) - 2 to correctly reference the intended child in the layout
removed " org . eclipse . jetty . websocket . util . server . internal " from JettyWebSocketConfiguration and module - info .
updated S3Request constructor to include an additional parameter to enhance request configuration flexibility
fix issue with jfxradiobutton animation not be update properly
updated the length check from 0 to 1 in DeweyNumber . java and added an exception for parsing a Dewey number to improve error handling
replaced direct string concatenation with a static variable to improve code readability and maintainability
removed redundant whitespace in WebSocketClientTest . java to improve code readability and maintain consistency
added a null check for classLoader in WebappLoader and updated corresponding assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure
hhh - 15464 : do n ' t inherit persistent field from managedCtClass if it be not mapped superclass
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to test the functionality of the ` PorterStemFilter ` class to ensure correct
added success parameter to postBatchMutate method to ensure index updates occur only if the miniBatchMutate operation was successful
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . org . spring . batch . core
fix a concurrentmodificationexception when closing multiple chat tabs in one click .
removed redundant calls to Sys . touch ( ) across multiple Java files to streamline touch handling and improve code clarity
updated HgCmdLineInterface and NoOpCmdLineInterface to use " - mardu " instead of " - rev " and modified test assertions
camel - 14284 : camel - netty - use a timer instead of a hashed wheel timer to avoid leak
added ' final ' modifier to these fields in DirectionalLight , PointLight , SpotLight , and SpotLight classes to enforce immutability
updated width and height assignments in X11GraphicsConfig and WGLGraphicsConfig classes to ensure minimum values are set for width and height parameters
added toString ( ) methods to DelegatingSecurityContextCallable and DelegatingSecurityContextRunnable classes to improve string representation of the delegate object for better debugging and logging
added an ` AnnoFilterTreeSet ` class to handle annotation filtering to improve efficiency by reducing redundant checks for inner classes
updated the handling of ` newLength ` in ` BytesColumnVector . java ` to ensure that ` newLength ` does not exceed ` Integer . MAX
fix eviction test ( # 164 )
changed the parameter type of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` Mot
make sure polyfunction be only compare polynomial function , not polynomial function
added a null check for the table before retrieving column class to avoid potential NullPointerException when table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException to ensure that a fallback to the original instance of CustomChange is
refactor DistBuildConfig and RecordingFileHashLoader to use BuckConfig instead of ConfigPathGetter to enhance code clarity and
show export warning when double entry be enable
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to broken tracking functionality
updated the ` doJoin ` method to return a boolean indicating success or failure to improve error handling by indicating success or failure of join operations
removed the ` Optional < Boolean > autodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by elimin
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure proper handling of activity flags in the
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance pagination control in the query processing logic
updated repository URL retrieval logic in RepositoryConventionPluginTests . java to use the correct Maven repository URL from the first repository to ensure the test verifies the
added a new class ` AffiliationTask ` to handle affiliation tasks for a node .
improve error message when taglib directive uri be invalid
changed the access modifier of the buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes
added handling for arrays in CacheKey and updated equality checks in CacheKeyTest to improve robustness and correctness of cache key updates
updated DefaultFileTypeDetector to use FileSystemProvider for file type detection to improve compatibility with different file systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
updated ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManagerTest to use VirtualSensorCallback and VirtualSensorDirectChannelCallback instead of parameters to improve
added a check to ensure that the ` httpSession ` is not removed from the session if the execution context equals the ` contextBeforeExecution ` before execution
refactor loopback address handling in NetUtil . java to improve clarity and functionality to ensure correct identification of loopback and point - to - point addresses based
updated BUF _ SIZE from DEFAULT _ BUF _ SIZE to DEFAULT _ BUF _ SIZE and replaced BUF _ SIZE with DEFAULT _ DEFAULT _ BUF _
added secure validation checks in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance security by
added a boolean flag to track if the icon change listener is installed before adding it to ensure that the icon change listener is only added once to avoid redundant
added Russian language support to enhance localization for Russian users
hhh - 15464 - fix duration conversion to nanosecond
disable frame state verification in substrategraphkit
added system property handling for Robolectric tests to ensure proper cleanup of system properties before each test execution
added " org . slf4j . " to the list of system classes in ViewClassLoader and corresponding test cases in ViewClassLoaderTest to ensure proper
added a default check for the packaging variable in ChangePackaging . java and implemented a test for it in ChangePackagingTest . java to ensure
added ` withExtension ( " txt " ) ` to the ` download ` method in ` FileDownloadViaHttpGetTest ` and ` FileDownloadViaProxy
added a call to nk _ buffer _ flush in GLFWDemo . java to clear the buffer before processing commands
rename ` setDefaultUnits ( ) ` to ` setPreferredUnits ( ) ` in ` JogService ` and update related unit handling in ` Settings `
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure consistent date representation across different time zones
removed redundant return statement in Terminator . java to improve code clarity and maintainability
improve error message for hdfs namenode host resolution
improve performance of show tracking notification in jabref
ftpreconnectattemptserverstopit : fix flaky test
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to improve concurrency handling to enhance performance by using a
added ` ignore ` methods to ` JavaUtilLog ` , ` LoggerLog ` , ` StdErrLog ` , and ` StdErrLog ` classes
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions when accessing runningTaskView
removed unnecessary type casting for item damage calculations to simplify code and improve readability
added a call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to clean the image before processing to ensure the
added ` MMapDirectoryFactory ` and ` SimpleFSDirectoryFactory ` classes for managing MMap and SimpleFS directories to enhance directory
added null check for ` ic ` before creating a ` BaseColor ` instance to avoid potential ` NullPointerException ` when ` ic ` is null
updated the assertion in QueryEqualityTest to use field1 _ s maxDocFreq instead of field1 to ensure the test verifies the correct maximum document frequency
refactor ExtendedOperatingSystemMXBeanImpl to improve code readability and maintainability
added a new private method ` installLeftCommands ( ) ` to handle the installation of left commands in the SideMenuBar to enhance the functionality
added a new boolean variable ` advanceWindowed ` and conditionally calls ` setUpWindow ( ) ` based on user preferences to control windowing behavior based
added support for SybaseDatabase in DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code readability and maintainability
[ java ] : wait for leadershiptermid to be append to the end of the leadershipterm before release .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` and setCellLayoutPressedOrFocusedIcon ( ) ` in
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files to improve documentation clarity
added error handling for server shutdown to ensure graceful shutdown of the server and handle potential exceptions
camel - 15836 - camel - aws2 - s3 : upgrade to s3 4.0 . 0 for camel - aws2 -
[ hotfix ] [ runtime ] fix typo in webmonitor
bug cs - 14589 : do n ' t drop key that do n ' t exist in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` to verify password handling in the ` TOpenSessionReq ` class to ensure that the
added a new private variable ` maxEnergyLimit ` and updated energy limit initialization in ` VMActuator . java ` to allow dynamic adjustment of energy
added maxInMemorySize property and its getter / setter methods in HttpClientProperties . java , and updated WebClient instantiation in HttpClientPluginConfiguration . java to allow
refactor Cache class implementation to improve performance and maintainability of caching logic
added new test and step definitions classes for Cucumber to facilitate unit testing and validation of Cucumber features
added error handling for parsing JSON double values in TypeJsonUtils . java to ensure robustness by handling potential JSON parsing exceptions during value retrieval
updated unit tests for Utf8StringBuilderTest to reflect changes in hex string conversion
added parameter validation logic in Params . java and updated path handling in RestInvocationHandlerTest . java to ensure parameters are only added if they are set to
camel - 16400 : camel - circuit - breaker - add option to limit the number of output in the circuit breaker
updated max buffered documents in TestIndexWriterExceptions to ensure consistent document frequency validation
replaced ` String . toString ( ) ` with ` Sha1Hash . update ( hasher ) ` for hash calculations across multiple classes to improve performance
removed enumValue and longValue methods from AsmRuntime . java to simplify the code by eliminating unused functionality
add more biome tag to biome tag provider ( # 10432 )
improve performance of applet by use a thread pool
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager from private to protected to allow subclass access to these fields for better extensibility
corrected the spelling of " u0627 " to " u0627 " across multiple Java files to ensure consistency and accuracy in the language representation
replaced instances of ` getImage ( ) . equals ( ) ` with ` getImageEqualTo ( ) ` in ` AbstractSunSecureRule . java `
camel - 16400 : camel - jbang - add repository parameter to run - dcamel . jbang
added handling for NaN values in CrawlDbReader . java to improve robustness by preventing processing of invalid score values
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure the target file is removed after each test execution
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor ` and modified focus handling in ` FindAction
[ hotfix ] [ runtime ] make checkpointcleaner thread safe
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to facilitate testing of XML schema handling in the application
added a check for empty trieLog before saving trieLogLayer in BonsaiPersistedWorldState . java and added a test for
refactor FilledNewArrayInstruction class to improve code readability and maintainability
added timeout annotations to test methods in SimpleNetworkTest . java to ensure tests complete within a specified time frame
updated the string concatenation logic in OCFile . java to correctly handle trailing slashes in parentPath to ensure correct path formatting
added a print statement to indicate the failure of loading the skin file to improve error visibility for debugging purposes
added dirty check and validation methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure that the accumulator is only processed if
added a new constant UNDEFINED and updated the return statement in TestStep to use it to improve clarity and consistency in result handling
phoenix - 589 : fix test failure due to nullpointerexception in testtransactioncallback
check jet service before upload job to avoid race condition
log recovery location if ignoremissingjournalfiles be set to true
bug fix : do n ' t create a new summarylevel object for each node
replaced ` pos ` with ` pos ` in ` DataOutput2 ` and added a new ` nextPowTwo ` method in ` DataOutput2 `
added JUnit @ Ignore annotations to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark tests as ignored due to
use sublist instead of int to avoid overflow
updated parameter order in FileManager . java for consistency to improve readability and maintainability of the code
updated TransformFunctionType and TransformFunctionFactory to include additional transformation functions to enhance transformation capabilities for mathematical operations
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` , ` getEnclosingElement ( ) `
updated RFC 5280 to RFC 5280 in multiple Java files to ensure compliance with RFC standards and improve compatibility
updated version number from 2.17 . 3 to 2.17 . 4 in Recaf . java and SearchAnnotationVisitor . java to reflect the
replaced LruCache with SparseBooleanArray for selected items in NoteAdapter to optimize memory usage and improve performance by reducing memory usage
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener and added a new test in ConfigFileApplicationListenerTests to improve path validation and ensure correct file path formatting
updated PreviewPositionHelper initialization to accept context as a parameter to enhance flexibility in handling different window modes
[ java ] do n ' t publish new leadershipterm when there be no leadershipterm .
pmd - coverage - improve error reporting
refactor byte skipping logic in ByteArrayInputStream . java and add a new Skip . java file to improve code readability and facilitate testing of
refactor conditional logic in UpdaterTask . java to improve code readability and maintainability
peer : make max _ headers public
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to support the inclusion of the " rt . jar
refactor the connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
updated method signatures and variable handling in RasterLayerResponse , RasterManager , and GTDataStoreGranuleCatalog classes to improve code clarity and
added a check to prevent sending a 500 error if the response is already committed to avoid redundant error handling
updated condition checks in HttpSession . java for better handling of pending elements and connection queue limits to improve logic clarity and ensure correct polling behavior
updated the fade - out behavior of the fake task view in HomeGestureTutorialController and SwipeUpGestureTutorialController to disable the
[ core ] fix npe in prefab module ( # 4817 )
updated ScimGroupExternalMembershipManager initialization and added " internal . superuser " to the group set in LdapMockMvcTests . java to enhance
updated the initialization of thirtyDays in FreezeBalanceActuator . java and added a validation check for non - existent account transfers to ensure that
updated path handling to use File . separator for consistency to ensure compatibility across different operating systems
do n ' t hide the keyboard if there be an error
updated GpsMainActivity to include session description in Gps description to enhance user feedback by displaying relevant context information
added a check for the number of pages in the Jsoup document before asserting that it does not exceed a specified number of pages to ensure that the test
rename androidbufferallocator to androidnativebufferallocator and mark it a deprecated
updated flag name handling in Main . java and Util . java to improve clarity and correctness in flag processing logic
no effective change - code cleanup
updated the condition for checking item use op in BattlePassManager . java to ensure correct handling of item use operations
refactor QueuePriorityTest to use a list of PriorityElement instances and add a toString method to improve code readability and provide a clearer string representation
bug 7059 : fix unit test for affinity group
added a null check for command and improved argument handling in Main . java to enhance error handling for null command input and help output
updated LightOutputStream initialization parameters in PropertyTypes , ByteIterableBase , and LongBinding classes to use a fixed value of 5 instead of a fixed value of
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified the condition for displaying blank lines in ` ClassWriter . java ` , and created a new
added a check for the length of the Person object to ensure that the Person object has the expected length
updated the handling of file extensions in VirtualFile . java to check for null extensions to ensure robustness by preventing potential NullPointerExceptions
fix : do n ' t return to edit contact list in contact right button menu
[ hotfix ] [ runtime ] simplify slotsharinggroupassignment logic
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding process in PlainSocketImpl to improve resource management and ensure proper closure of the socket implementation
added functionality to clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to enhance the management of bookmarks in the fragment
change documentation of ‘ org . openqa . selenium . interactions . actions . movetoelement ’ to good match the w3c spec ( see : http : / / github . com / seleniumhq / selenium / issues / 4847 # issuecomment - 530368015 ) . ( # 8722 ) [ skip ci ]
added a new file ` bug4865918 . java ` that implements a scrollbar block increment to address bug 4865918 related to scrollbar
ambari - 20583 . remove dependency on velocity from ambari - krb5 to use it
replaced specific imports with a wildcard import and added a new case for " groupTriggers " in QuestCommand . java to streamline import statements and enhance
do n ' t launch file chooser if no file manager be available
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enable proper string representation of these classes in the output
added a static final constant for the configuration URI in CloudService to improve code readability and maintainability
removed multiple calls to setViewportComponent and setJScrollPane in BrowserPanel . java to ensure proper component and scroll pane functionality
updated key references in LwjglInput . java , modified event handling in ParticleEditor . java , and added a new key code for backward navigation in
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration to enhance indexing behavior based on the " moreIndexingFilter . index
fix jsdoc issue with private constructor and author
updated metrics constant names from " DELTA _ TOTAL _ DATABASES " to " CREATE _ TOTAL _ COLUMNS " and "
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient instead of a List to improve compatibility with Drill ' s
updated oauth2LoginLinks method to accept queryParams as a parameter to enhance flexibility in handling OAuth2 error responses
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al - Q
added a condition to check if the browser is not a Firefox to ensure compatibility with non - Firefox browsers in the WebAudioWrapper class
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` to append a ` ServerInterceptor ` to the gRPC server configuration
added default charset to the test table to ensure compatibility with different database configurations
updated method calls in WriterRecordBatch and StreamingAggTemplate to improve clarity and consistency to enhance code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a boolean field ` hasFrom ` and its getter / setter methods in ` Delete . java ` , ` DeleteDeParser . java ` , and
replaced ` isSuccess ` method with ` isMultiStatus ` in ` SynchronizeFolderOperation . java ` to improve handling of multi - status
refactor recipe applicability checks to use a new method ` applicableListTests ` to improve code readability and reusability to enhance maintain
updated regex pattern for regex matching in LogAnalyser . java to improve accuracy of log line parsing to enhance robustness of log input validation
( chore ) camel - test - infra - google - cloud - app
fixed - redissonsearch . value ( ) method should be use exclusive rather than exclusive
ds - 1041 cleanup of cc web service - good configurability support
added a null check for ifcRoot ' s global ID before adding it to the guidIndex to avoid potential NullPointerException when accessing guidIndex
updated equality check in OptionalAssert to use a custom comparison strategy to improve accuracy of value equality validation
make sure last margin be set only once
added a new file TestArrayCopyToFromObject . java to test array copying functionality and ensure proper exception handling for ArrayStoreException
refactor sys . path handling in BuckPythonProgram . java to improve clarity and consistency to enhance maintainability and readability of
do n ' t set async state to closed if not async
deprecate craftinghelper . findfiles ( ) , deprecate craftinghelper . findfiles ( ) , deprecate findfiles ( )
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable due to instability
updated error handling in TestInternalInputBuffer to check for null exceptions before asserting response status to ensure that a 400 error is treated as a 400 response to avoid
refactor autoloadCall method to include a lowerName parameter and improve lock management to enhance resource loading efficiency by preventing duplicate class loaders
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to improve server version
updated KDC and OneKDC to use a local hostname instead of a hardcoded string to improve flexibility and avoid potential issues with hostname resolution
added a boolean flag ` jsr250AttributeFound ` and modified return statements in ` Jsr250Voter . java ` , and created
updated import statements in MP4Parser . java to use specific classes instead of wildcard imports to improve code readability and maintainability by reducing
added a constant for the HS2 proxy user and updated session parameters handling to improve clarity and ensure session parameters are correctly formatted
camel - 16400 : camel - hdfs - add snappy support to camel - hdfs
added a sleep delay in HttpClientTest . java to ensure proper synchronization during tests
fix bug # 56215 - fix bug in xssfsheet . setcell ( cell _ type _ blank )
updated glyph wrapping logic in GlyphLayout . java and modified text in BitmapFontTest . java to address AGWlWi issue to enhance font handling and
updated references to ` ISTIO _ VERSION ` and ` CONTAINER _ ISTIO _ BIN _ PATH ` in ` Fabric
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . reportPlaybackStart ` with ` TvApp . reportPlayback
use bufferedinputstream instead of fileinputstream to reduce memory footprint
fix map - loader hitting eviction on initial load ( # 16400 )
updated the return statement to include ERROR _ BIT in ResponseFlag . java to ensure the correct bitwise operation for error handling
add a check for READ policy before add anonymous policy
added a SoftReference to manage font caching to improve performance by avoiding repeated font lookups
set prefHeight to 0 instead of passing getHeight ( ) to simplify height calculation for better readability
drools - 2321 dmn dmn dmn dmn dmn dmn - dmn - dmn - dmn - d
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed access modifier of finishRunningRecentsAnimation method from private to public and added MAIN _ EXECUTOR to MAIN _ EXECUTOR for
added null checks and improved edge handling in ElementFactoryImpl , ImportContainerImpl , and ImporterGDF classes to enhance error handling
[ beam - 8470 ] [ beam - 8470 ] do n ' t swallow unknown response in fnapicontrolclient
updated the session initialization in ` bin ` and added a new test case in ` TestMergeContent ` to ensure that flowfiles do not exceed the bin
improve performance of teams . getClosest ( ) .
added a check to skip copying the content length header in RestTemplateCopyHeaderFilter to improve performance by avoiding unnecessary content length copying
updated Java2TypeScriptTranslator and Literals classes to improve string handling and test assertions to enhance functionality and ensure correct behavior of exported variables
updated filter parameters in FilterFactory , ChannelizerViewer , and TwoChannelOutputProcessor classes and adjusted sample size and maximum frequency calculations to improve filter
hbase - 25809 add - allregions option to the canary to try all region in regionserver mode
[ java ] remove unused nodemodule from cassandraconnectorfactory
no effective change - fix bug in kahadbstore
added minimum size and height constraints for the new frame in CallDialog and OneToOneCallPanel to ensure the new frame does not exceed the specified dimensions to
fix blockfalling not preserve state information during world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static variables instead of instance variables and streamline test setup and teardown processes
added dependency injection for KerberosPrincipalHostDAO and updated entity deletion logic to improve code maintainability and ensure proper cleanup of entities
removed the ' true ' parameter from the getTableSnapshot method call to simplify the snapshot retrieval process
do n ' t swallow exception and log a warning
updated the error message for the ` android . licenseKey ` section in ` AndroidGradleBuilder . java ` to include the base64 - encoded RSA
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` FileTranscodeVirtualFolder
[ drools - 7 ] add support for boot - inf . classes in kie - build - inf . jar ( # 349 )
added a check to ensure compatibility with the latest runtime features in CheckIndexTest to prevent tests from running on incompatible Java versions
removed context parameter from assignTargetsForSplitScreen methods in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify method signatures by elimin
[ hotfix ] [ runtime ] fix typo in leadershiplatch
added librustzcashInitZksnarkParams method and its usage in SolidityNodeHttpApiService . java to facilitate the
transaction confidence : make depth - in - blocks configurable
added ` createMediaRecorder ( String path ) ` method to ` CodenameOneImplementation ` , ` Location ` , and ` MapComponent `
set default platformName to " ios " to ensure compatibility with iOS platforms
pdfbox - 4892 : fix typo find by codespell on fossies . org
reformatted conditional statements in Graphics2D . java to improve code readability and maintainability
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a try - catch block around the nextOutgoingFrame method to handle potential exceptions during frame processing
refactor class loader retrieval to use ` AccessController . doPrivileged ` for better security to improve code readability and maintainability to enhance security by
added functionality to manage parent category relationships in CategoryREST to ensure proper parent - child relationships between FeedCategory objects
updated the title for the ContributionManagerDialog to use a localized title based on its type to improve user experience by providing context - sensitive titles for
added a BigDecimal vwap field and updated the Ticker constructor to include it in the Ticker class to enhance the Ticker class to include a
added a new field ` mNoWidgetsView ` and updated related methods in ` SearchAndRecommendationsScrollController ` and ` WidgetsFull
add render graph api to make it easy to use
added a setColor method to NCFirebaseMessagingService to use the primary theme color from ThemeUtils to enhance UI consistency by utilizing the
updated ShadowUsbManagerTest . java to improve test coverage for USB functionality
improve log for evaluation
added a call to update the selected configuration to ensure the selected configuration reflects the latest settings
updated bounds calculation in AndroidGraphics . java to ensure stroke width does not exceed bounds to prevent rendering issues
replaced HashMap with LinkedHashMap in multiple Java files to maintain insertion order for options
replaced nativeClosureManager with closurePool in NativeClosureFactory . java to improve resource management by utilizing a dedicated closure pool
( chore ) camel - core : migrate to junit 5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement WebSocket integration tests for K8s WebSocket
[ ds - 3952 ] remove the generic type set ' RecordType ' from abstractimportsourceservice since it be n ' t need .
refactor authentication equality check in AbstractCasWebflowEventResolver to use EqualsBuilder to improve readability and maintainability to enhance code clarity and
added a conditional check for the system property " jnr . ffi . x86asm " in X86MethodGenerator . java to ensure that the method
replaced direct calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` for clarity to improve code readability
added a new interface ` Insecure ` and modified ` MessageBuffer ` and ` MessageBuffer ` to include ` @ Insecure ` annotation to enhance
added new configuration variables for default and reserved keywords in HiveConf . java to enhance configuration options for Hive settings
initialize collections to avoid null pointer exception
refactor MultiReader constructor to accept a Collection of reader finished listeners to improve flexibility in managing reader closure states
refactor multiple classes related to secure directory handling to improve code organization and maintainability
danielwagnerhall : ignore test that fail in 2.49 http : / / bit . ly / 1jkt
refactor ` getFirstTypeArgument ` method to return a parameterized type instead of a generic type to improve type safety and eliminate unnecessary type casting
changed method return types from Set < Integer > to KeySet and values ( ) in Int2IntHashMap . java to enhance type specificity for
added duration and duration parameters to the FlipTransition class to allow customizable animation duration settings
removed logging statement for setting subsAreValidForStreaming to streamline code by eliminating unnecessary logging
bump the major and minor version to 9.10 . 10
updated warning messages to use ` LowLevelLogUtil . log ` instead of ` System . err . println ` for unsupported ` sun . reflect . Reflection
add javaparser version to make it easy to check for java 16 compatibility
updated padding adjustments based on reply count in ExpansionViewHelper . java to improve layout consistency and ensure proper background positioning
should n ' t send empty anti - entropy operation when cluster be pre - 3.9
added metadata handling to SeedUrl and SeedResource classes to store and retrieve additional metadata associated with seeds
added a null check before setting the pattern in PatternBuilder to avoid potential NullPointerException when declaration is null
refactor TestCoprocessorWhitelistMasterObserver class to improve code readability and maintainability
ww - 3833 fix annotationactionvalidatormanager to include package name
updated the ` asList ` method to accept ` Object ` as a parameter and added a new test for handling null values in the ` Iterable ` class
added default streams and parallel streams to MapIterable and PrimitiveObjectMap classes to enhance performance by allowing concurrent processing of map entries
clone notifInfo before returning it to ensure the original notifInfo remains unmodified
improve performance of applet
refactor AEADBlockCipher class to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` WebVariablesMap ` , and ` VariableMap ` classes
added a check for resource names containing " . " in PackageResourceTable . java and updated the default resource mode in RobolectricTestRunner . java
added a check for ulSize before retrieving the table buffer in TrueTypeFont . java to ensure proper handling of table elements when ulSize is zero to
refactor SignPlugin to accept a List of HttpMessageReaders as a parameter to enhance flexibility in handling HTTP message readers during sign operations
refactor Int2ObjectCache class to improve performance to optimize object caching efficiency
added validation for remote repository in StandardMavenAuthenticationProvider . java to ensure that the remote repository is a valid Maven deployment instance before proceeding
refactor AudioNode class to improve code readability and maintainability
[ linky ] add sslcontext to enedis http api ( # 1863 )
updated HiveFunctionRegistry to implement PluggableFunctionRegistry and modified variable names for clarity to enhance functionality and improve code readability by
http : / / issues . apache . org / jira / browse / amq - 4633 - fix amq - 4607
updated the method name from ` getBuildTargetForAlias ` to ` getBuildTargetForAlias ` to include a ` possiblyFlavoredAlias ` parameter and
camel - 16400 : camel - olingo2 - fix olingo2 consumer to handle empty feed entry
added support for both 0.13 . 1 and 0.13 . 0 versions in MetaStoreSchemaInfo to ensure compatibility with different Hive version identifiers
server : do n ' t try to expunge a vm that be already expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to mark methods as outdated and discourage their use in future development
updated methods in ONDashClockExtension and AlarmReceiver to use getNoteTitle and getAlternativeTitle for better title handling to improve clarity and
rename ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and update related imports and assertions in ` GoogleAuthUserConfigTable
replaced ` commit ( ) ` with ` apply ( ) ` in multiple Java files to ensure changes are applied to the correct editor instance
added an idle listener to the session creation in AsyncTimeoutTest . java to ensure proper handling of idle state during tests
[ beam - 8470 ] add test _ id to bigqueryioit output
added a background resource for predicted icon in HotseatPredictionController and reset it in BubbleTextView to improve visual feedback by removing the predicted icon background
mondrian : fix checkstyle issue in mondrianproperties
add abstract test for native system query
refactor LIMEExplanation to use a map for retrieving active output features to improve clarity and handle cases where no output features are present
added a ` List < String > ` parameter to the ` LaunchBehavior ` constructor in ` AppleSimulatorController ` and ` InstallCommand ` to
refactor code to improve readability by reducing repetitive variable assignments to enhance code clarity and maintainability
added checks to ensure that the lifecycle state is available before proceeding with pipeline and manager checks to avoid potential NullPointerExceptions during execution
added clipping to the QSB background view in QsbWidgetHostView to improve the visual appearance of the QSB widget
added timestamp tracking and flag conversion logic in SQLManager , PlotArea , and BlockTypeListFlag classes to track the duration of flag processing and improve
fix floatingtext render to not use depth
[ gr - 26709 ] fix libffi nfi for linux .
datajpa - 1349 - allow to configure propagation behavior for transaction
add regularization support for regularization in layer validation
added error handling for read / write operations in AbstractChecker . java to improve robustness by logging exceptions during write operations
changed the initialization of ` colorStack ` from static to instance variable to allow access to ` colorStack ` from multiple instances of ` GlyphLayout `
changed the parameter of ` hasMappedStatement ` from ` false ` to ` true ` in ` getMappedStatement ` and ` hasStatement ` methods to
convert tradableIdentifier to lowercase for depth retrieval to ensure consistent currency handling regardless of case
updated MQTT publish value assertions from " 0.30000 " to " 0.327000 " in ChannelStateTests . java to reflect the correct
remove versionedhashes field from enginenewpayload ( # 5078 )
reset trigger price on reset
fix : studentfeedbacksubmissioneditsaveaction should redirect to home page if an error occur
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 20613 addendum : fix npe in hstore ( addendum )
no effective change - code cleanup - add test
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator ` to control whether to always save the URI to
added methods to set layer type and paint in ShadowRenderNode to enhance functionality for managing rendering node properties
updated import statements and added popup menu visibility logic in LWChoicePeer . java to ensure proper visibility handling of the popup menu in the user interface
removed duplicate null check for insert in StressProfile . java to streamline code by eliminating redundancy
replaced ` asScalaIterable ( ImmutableList . of ( ) ` with ` collectionAsScalaIterable ( ImmutableList . of ( ) ` in multiple Java
fix npe in httpforwardobjectcallbackactionhandler .
added a warning log for loading a properties file in DefaultEnvironment . java to improve error handling and provide clearer diagnostics when loading fails
replaced the use of a try - with - resources statement with a try - with - resources statement for SessionDataSet to ensure proper resource management and automatic closure
added a condition to check if the network interface supports multicast and is up to ensure proper handling of network interface configurations
updated command string initialization to include the length parameter to ensure command strings are correctly processed with the specified length
added calls to setLatestConsumeTime and setLatestConsumeTimeForEnergy in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to
added a method to specify the invalid session strategy in SessionManagementConfigurer to improve flexibility in handling invalid session strategies
improve error message when serialization fails
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of keys in a map assertion using ` MapAssert ` to
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and modified multiple method signatures in ` JdbcProxyGenerator ` to use it to enhance
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated method parameters in ` DirectUpgradeTest ` to enhance WebSocket container
replaced ` ImmutableMultimap . Builder ` with ` ImmutableListMultimap . Builder ` in ` toLanguageFlags ` and ` toLanguageFlags ` methods to
pdfbox - 4892 : avoid npe , a suggest by valerybokov
replaced the initialization of MethodHook with a static final EMPTY array to improve memory efficiency by avoiding unnecessary array creation
added a ` grantAccess ` parameter to the ` MockAuthenticationManager ` constructor and modified the return statement in ` MockAuthenticationManager ` to allow conditional access
updated the ` afterJob ` method signatures across multiple classes to include ` JobExecution ` parameter to enhance job execution tracking by associating job executions
added a check to ensure that the file can execute before proceeding to avoid potential errors when attempting to write to a non - existent file
added hasTimeSeriesQueryLanguage method to TimeSeriesQuery and TimeSeriesQueryOrBuilder classes to support language - specific functionality in time series queries
change parameter name from ' e ' to ' event ' for good readability
added constant values for battery , annotation , and profile name in BundleConstants to improve code readability and maintainability by using named constants
fix : use map instead of hashtable
use absolute screen location instead of widget
updated listener resizing and texture filtering in JoglGraphics . java and ProjectiveTextureTest . java to improve clarity and functionality of texture handling
updated the ` setResourceToDelegate ` method to return a ` File ` object instead of void to ensure that the output file is created and writable before
camel - 16400 : fixed issue with property component should not use placeholder .
updated the condition to check if ` currentTime ` is less than or equal to ` stage . getLastAttemptTime ` in ` ActionScheduler . java ` and
updated dbg _ zip assignment to use " / tmp / ums _ dbg . zip " or " / tmp / ums _ dbg . zip "
fix ( render ) : hide debug log in renderingdebugconfig
added resetGate ( ) method to BlockGenericPipe and Pipe classes to reset the pipe ' s gate state to ensure proper state management during block updates
added locale handling in TestSupplementary . java to ensure consistent behavior across different locales during tests
updated the team color range from 0.6 to 0.4 in the color specification to improve team color variability
improve performance of sequencematcher by avoid concurrentmodificationexception
updated null check for annotation in SoftAsserts . java to simplify the condition for checking expected exceptions
updated error messaging in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance
refactor call tree printing to use a CSV file format to improve readability and maintainability of the code
added null checks for ` note ` and ` noteTmp ` in ` DetailFragment . java ` and ` EditText . java ` to
added a peakTasks variable and modified task loading logic in AssetManager . java to track and manage the number of loaded tasks more effectively
danielwagnerhall : fixing firefox driver to work on window
added scoring and fetch interval metadata handling in Injector . java to enhance crawling capabilities by allowing dynamic scoring and fetch interval
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4
added a method ` isShareSchema ( ) ` in ` CoreContainer ` and a test method ` isShareSchema ( ) ` in ` TestCore
updated memory usage calculations in multiple classes to include a boolean parameter to improve accuracy in memory usage reporting during segment merging operations
removed redundant assertions in VersioningTest . java to improve test clarity and maintainability
updated SQL query conditions in Field . java and added a new test for not null domain columns in DatabaseMetaDataTest . java to ensure correct handling
[ java ] : do n ' t send new leadership term event if there be no leader .
added a method to retrieve the content type from the ServerWebExchange to ensure the correct media type is used for HTTP requests
replaced ` fillUsingLengthPrefix ` with ` fillSlice ` in multiple files to improve clarity and consistency in method naming
added a boolean variable ` isCompactedBase ` and modified conditional checks in ` AcidUtils . java ` to improve code clarity and
add null check for immutable storageScheme and qualifierEncodingScheme in PTableImpl . java to ensure robustness by avoiding potential null pointer exceptions
added POJOProducersCustomized , PojoProducersCutomized , and RestProducersCutomized classes to the servicecomb demo package
updated cache configuration retrieval to use CACHE _ SECTION _ NAME instead of " cache " to improve clarity and maintainability of cache configuration
fix crash in aes - siv key manager .
fix the wood wood in oredictionary . ( # 3162 )
refactor multiple classes related to session management to improve code organization and maintainability
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` UndefinedSymbolsLinkerScript ` class and removed ` SourcePathResolver `
prepare next release 3.2
hhh - 15464 - fix test failure on oracle
updated the position of texture drawing in HelloWorld . java to correct the placement of texture elements in the sprite batch
updated permission checks in PlayerFunctions . java and modified string concatenation in PlotId . java and WorldGuardListener . java to improve permission handling to enhance
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version is outdated and may be removed in future releases
updated print statement formatting in SSLSocketImpl . java to improve readability of output messages
added a new test method ` testCastToSignedInteger ` to ` SelectTest ` to validate SQL parsing and deparsing to ensure correct handling of signed
refactor dependency type to use enum instead of string
refactor ` NoSuchBuildTargetException ` to use ` parseContext . makeTargetDescription ` instead of creating a new method to improve code clarity
updated the initialization method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to improve test coverage by
increased the initialization capacity of configBlocks from Block . blocksList to 256 to accommodate larger block lists and improve performance
updated logging statements in BukkitMain . java to use System . out . println instead of PlotSquared . log for clarity to improve
added support for escaping Postgres query strings in AbstractSQLChange and its corresponding tests to enhance compatibility with PostgreSQL ' s prepared statement syntax
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and ` MutableBagFactoryImpl ` to enhance bag creation functionality from iterable
added HTML escaping for file names and permalink attributes in BuildNavAndPDFBody . java to ensure proper handling of special characters in file names and
nhcmqttconnection2 : do n ' t create a new mqtt connection if one already exist
updated changeSet retrieval logic to ensure root change logs are used when available
[ hotfix ] [ plugin ] fix potential memory leak in rocketmq global plugin
added HiveMetaStoreClient initialization and logging in TestHiveMetaStorePartitionSpecs . java and TestObjectStore . java to enhance database management and improve
added a " order _ currency " parameter to the BithumbAuthenticated class and updated its usage in the BithumbAccountServiceRaw class to support
deleted the SSEFluxWebConfig . java file which contained configuration properties for ThymeleafWebConfig to the configuration is no longer needed
updated method return type checks to use ` isVoid ` instead of ` getFullyQualifiedName ` for better clarity to improve code readability and
replaced YAML _ READER with YAML and added a GET endpoint for listing YAML YAMLs to streamline YAML data retrieval and enhance API functionality
removed the public modifier from the equals ( ) and hashCode ( ) methods in Marker . java to allow method overriding in subclasses
refactor thread factory initialization in Basic . java to use a lambda expression for better readability to improve code clarity and reduce redundancy in thread
added unit tests for the ` addToList ` method in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to
mow - 161 fix applet width / height mismatch in web
replaced direct toolbar visibility setting with a delayed execution to improve UI responsiveness by avoiding immediate visibility updates
refactor ` initFirstPageReader ( ) ` and ` unpackAllOverlappedChunkMetadataToCachedChunkMetadata ( ) ` methods to improve code
server : do not save vr password if vr be down
reset instance variables in Response . java to ensure proper resource management and prevent potential memory leaks
added a check to return early if assignment side effects are not met to improve performance by avoiding unnecessary processing
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the width and height of the icon from maxHeightWithMargin to maxWidthWithMargin in FileUploadApiController . java to ensure the icon does not exceed
refactor ` RegisteredServiceProperty ` , ` JwtTokenCipherSigningPublicKeyEndpoint ` , and related tests to improve code readability and
added a check for user mime types on Unix systems and implemented a method to verify MIME types to ensure proper MIME type validation and error handling for
update nettyconnection to use lzlibdecoder instead of lzlibdecoder
added a method ` doesClassLoaderDescendFrom ` to check class loader hierarchy to improve clarity and maintainability of class loading logic
removed the ` doConnect ` method from ` ChannelProvider ` and ` ProxyChannelProvider ` classes to simplify the connection process by eliminating unnecessary dependencies
added a test for handling empty final columns in CSV processing to ensure proper handling of empty final columns in CSV output
added compass gravity and margins to NearbyMapFragment to improve navigation and user interface layout
added a new test method ` testInterpolation ` to ` GeoPathTest ` for distance calculations to ensure correct distance computations between spherical and
updated the ` getLeafFilterBuilderByType ` method to throw ` HiveException ` and improved error handling in ` ParquetFilterPredicateConverter
added language setting for video tracks in LibMediaInfoParser to ensure proper language handling for video tracks
added a warning log for schema changes in MicroserviceRegisterTask . java to indicate compatibility issues with newer schemas
replaced direct array manipulation with ` addAll ` method across multiple array types to simplify code and improve readability by reducing repetitive
no effective change - code cleanup
updated InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of client registrations to improve flexibility in managing
added a method to reset the UI state in the SchemaUpgradeHelper class to ensure that the UI properly reflects the cluster ' s current status after an upgrade
added a boolean flag ` failedStep ` and modified error handling logic in ` JUnitReporter ` and ` JUnitReporterTest ` to improve
allow . in entity selectors for player .
added Closeable interface to Selector class to enable proper resource management for the Selector class
updated MaxConcurrentStreamsTest to use a MultiplexConnectionPool for connection pooling to improve connection management and resource utilization
added stringType ( ) method calls in CoreOptions . java to improve code readability and maintainability
updated HqlQueryRenderer to handle both character and parameter contexts in HqlQueryRenderer and UserRepositoryFinderTests to ensure compatibility with EclipseLink and
updated HTTP status checks to use constants instead of magic numbers to improve code readability and maintainability
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
fix flaky test
updated ParquetFormatPlugin and ParquetGroupScan to improve metadata handling and directory existence checks to enhance performance and reliability of file selection
updated the success flag from false to true in Jsr199Javac . java and added error handling in BuckJavacTaskProxy . java to
added a Listener class to handle table model changes in DefaultSortedTableModel to ensure that listeners respond to changes in the table model effectively
updated the condition for determining if a value is less than or equal to 65535 in ServerConfig . java to ensure that the value is within a valid range
added support for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running Android KitKat and above
added logging functionality to the MainApp class to enhance debugging by providing visibility into application state
added exception handling for wrapped RequestRejectedException in FilterChainProxy to improve error handling and ensure proper exception management
updated the calculation of the ` newSize ` variable to use ` this . length ` instead of ` length ` to improve clarity and ensure the correct length
pdfbox - 4892 : avoid npe if filterlist be empty
add a new class tbstopwatch to make it easy to see how to stop
set initialized to true in PListStore . java to ensure the initialized state is correctly initialized for proper functionality
marked multiple classes as deprecated to indicate that these classes are outdated and should not be used in future development
[ hotfix ] [ zeppelin - 4674 ] fix zeppelin - 4674 to use current thread context classloader
fix npe in forgehooks . java .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with newer features
updated parameter names in DeadlineTimerWheel . java to improve clarity and consistency in naming conventions
# 1851 - enh : add getname ( ) and getshortname ( ) to beandescriptor
updated file paths for JavaScript and CSS in BasePage . java and added WroSassProvider . java with ProcessorProvider and SassImportProcessor to
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of retrieving the
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to clarify the purpose of the configuration
updated exception handling to check for ` CertPathValidatorException ` type before throwing ` CertPathValidatorException ` to improve error handling clarity and ensure proper
benchmarker : make writeoutputsolutionenabled configurable
bulk client regen : set maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` for testing ` SliceSize ` in ` SortedTableMap . Sink ` to address issue # 8
add additional pipe sealant recipe use slimeballs
[ mahout - 1874 ] fix infinite loop in sequentialaccess sparse vector .
added handling for Shulker entities and updated entity management in BukkitMain and EntitySpawnListener to improve entity lifecycle management and ensure proper
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the debug
[ flink - 20613 ] [ connector / kahadb ] [ connector / kahadb ] make sure destination name do not exceed max
updated the instantiation of UpToTagChangeSetFilter and added a check for tag matching in Liquibase to enhance error handling by logging a warning
[ beam - 8470 ] fix compilation error in gearpump
refactor BrokerRoutingManager class to improve code readability and maintainability
updated color settings for volume and upPaint in CandlestickRenderer to improve visual clarity and aesthetics
refactor layout parameters handling in InsettableFrameLayout . java to improve clarity and maintainability of layout parameters management
added a duration parameter to BuildTargetDurationListener and updated test cases to include it to enhance rule duration tracking functionality and improve test coverage
replaced ` @ Profile ` annotations with ` assumeTrue ` in multiple test files to ensure tests are only executed when the required profile is enabled
added a null check for the user object before processing claims in OAuthConfirmationController . java to avoid potential NullPointerExceptions when user is null
camel - 16400 : camel - test - add unit test for replace from endpoint
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance and reduce contention in concurrent operations
api : add listpublicipaddresses api to list public ip address by source network id
added battery optimization tests in ShadowPowerManagerTest and ShadowPowerManager to enable testing of battery optimization behavior in ShadowPowerManager
update version retrieval to use build properties if available to ensure the Jetty version is accurately configured based on build
added unit tests for verification order in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct behavior of invocation verification under varying input scenarios
refactor debug force evaluation logic to improve clarity and maintainability of the code
updated startProfile method to include " - foreground " parameter to enable foreground mode for profile execution
replaced instances of ` executor ` with ` executorLauncher ` and ` executorLauncher ` in ` MiniSolrCloudCluster . java ` to improve resource management
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` for ` parseFieldnames `
updated logging in CodeEditorView and added null check for editor in EditorTextActionWindow to improve logging clarity and prevent potential null pointer exceptions
updated skippedEntries to include exception details and improved warning messages to enhance error reporting and provide clearer context for skipped entries
refactor Fetcher and FetcherMain to utilize LuceneStorage for document storage to improve performance and maintainability of document storage operations
updated populateBubble method to include an additional parameter for an existing Bubble instance to enhance functionality by allowing for better handling of BubbleBar
( chore ) camel - scheduled : fix checkstyle violation
refactor methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor for improved clarity and consistency to enhance
[ java ] : use nak _ multICAST _ delay generator for medium driver .
updated Gson instantiation and added client secret handling in ClientInformationResponseView . java to improve JSON serialization to enhance client information response by including client ID
added a check for zero field in openOrder before setting average price to avoid division by zero errors when the field is zero
removed the ` rawExecutionReports ( ) ` method from the ` BinanceStreamingMarketDataService ` class to streamline the execution report subscription process
added a ` fail ( Exception ) ` method to ` LdapTimeoutTest ` and modified the failure handling in ` LdapTimeoutTest ` to improve error reporting
do n ' t crash if user dictionary file do n ' t exist
updated password handling logic in AmbariServerConfigurationHandler to check for blank password file or credential store alias before updating to ensure that the alias / file
added a check to skip parsing segments that already have been parsed to improve efficiency by avoiding unnecessary parsing of segments
[ hotfix ] [ yarn ] [ config ] make application attempt failure validity interval configurable
[ geos - 10641 ] skip unload the h2 driver if it be not include
hbase - 27809 add readtype configuration for snapshot - based input format ( # 3473 )
added fixed height and fixed width options to the LoginInstanceRequest class to allow dynamic adjustment of instance login options for improved user experience
added corner radius parameter to the update method across multiple classes to allow dynamic adjustment of corner radius during animations
updated COMMANDS _ TO _ REMOVE to include additional commands for RIBE commands to enhance command filtering and improve output clarity
added a retry mechanism to handle exceptions from the connection pool to work around a potential BONECP bug to improve connection reliability and error handling
http : / / issues . apache . org / jira / browse / amq - 4894 - add transaction - check - reserve -
added a private field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage the ` strings ` array to facilitate the
phoenix - 2892 add explain plan for delete statement
updated exception handling in BaseServiceException . java and BaseServiceExceptionTest . java to improve clarity and correctness of retry logic for socket exceptions
added support for a list of rapid install types in AdbHelper , AndroidDevicesHelperFactory , and RealAndroidDevice classes to enhance
updated the regex pattern in SeedPattern from " - srand " to " - ? \ d + " to allow optional leading zeros to enhance flex
refactor MultimapSubject to use a factory method for creating iterable values to improve code readability and maintainability by reducing redundancy
updated the return statement in Workspace . java to correct the calculation of the display size based on the device orientation to ensure accurate positioning of the hotseat
added support for transmuxing audio and video in transformer .
added localization support to the Picker class to enhance user experience by allowing internationalization of selected text
camel - 16400 : camel - cxfrs - camel - cxf - do n ' t throw npe if camel - cxfrs
hhh - 14585 - handle lock acquisition on oracle jdbc driver
added assertions and modified queryId handling in TestJdbcDriver2 . java , HiveStatement . java , and HiveStatement . java to improve test reliability
[ beam - 8470 ] fix flakiness in par do test
updated HTML string concatenation in GpsSimpleViewFragment to use Strings utility to improve code readability and maintainability
[ java ] remove unused parameter ` leadershiptermid ` from ` logreplay `
refactor HttpSender to use a field for HttpExchange instead of a local variable to improve code readability and maintainability by reducing repetition
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated the ` token ( ) ` method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter
added null check and improved marker handling in multiple classes to enhance code robustness and prevent potential NullPointerExceptions
pdfbox - 4892 : use double instead of float for font size
refactor email handling in AddressBookDoCoMoResultParser to use a variable for email arrays to improve code readability and maintainability
[ mng - 7484 ] mng - 7484 : fix npe in rawmavenresolver when there be no ex
added null checks for dsxExchangeInfo and updated currency handling in DSXAdapters and DSXBaseService to improve error handling and ensure proper
updated multiple test files for consistency in naming conventions to improve code readability and maintainability
drools - 90 : fix incremental build failure if kiemodule pom be invalid
modified the initialization of a NativeArray and added a condition for defining its own property to ensure that properties are only defined when the source object has the specified key
camel - 16400 : camel - jackson - fix the javadoc issue of jacksondataformat
truffle : fix compilation error in hostfielddesc
added a nullness annotation for the " completedStage " method in DefaultNullnessAnnotations . java to indicate that the completion stage is not nullable to en
adjusted the calculation of mFreezeCheckPoint from 9000 to 10000 milliseconds to allow for a longer pause duration before triggering the freeze functionality
removed unused imports and updated internal state handling in AbstractCommonPowerMockRunner and PowerMockRunner to improve code clarity and ensure proper internal state management
updated unmarshalling method to use realType ( ) instead of typeCode to ensure correct type handling during unmarshalling
added handling for ` J . MethodInvocation ` and ` J . Ident ` in ` TabsAndIndentsVisitor . java ` to improve clarity
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with the latest testing framework standards
replaced newColumn with a wrappedText tag in HtmlProcessInformationsReport . java to improve text formatting for better readability
resolved - issue batch - 1592 : jobrepository now persist the latest execution context
added a conditional to add a child only if the new media folder configuration allows it to be hidden
added null checks for ` actor ` in ` SplitPane . java ` to ensure proper handling of null ` actor ` and ` setFirstWidget ` and
added handling for Parameterized types in RemoveUnusedImports . java to improve type management for parameterized Java types
fix nullpointerexception in uniquemodlistbuilder when there be no modinfo
changed the logger reference from static to static in TicketGrantingTicketImpl . java to ensure logging is scoped to the correct class context
updated SQL string format in PhysicalPlanTest . java to correct the length of tags and attributes in the timeseries creation process
added a ` isValue ` method to ` AttrData ` class and updated error handling in ` Converter ` and ` LayoutInflaterTest ` to improve value
added support for handling international PC characters in CPlatformResponder and LWCToolkit to enhance character recognition for international PC users
[ java ] set publication connection timeout in test .
added a check for specific request URIs in GTVGFilter . java to exclude favicon requests to optimize processing by avoiding unnecessary requests
added unit tests for the ` pm install ` command in ` TestUtil . java ` to ensure the correct functionality of the ` pm install ` command to validate
no effective change - remove oracle - specific code
updated test cases in TestSimpleBodyHandler , TestVertxTLSBuilder , and TestSecureBodyHandler to use a new MultiMap implementation to
updated paths in DiffRuleKeysScriptIntegrationTest . java from " e3506ff7c1 " to " fc76b6367ddddd
added a boolean flag ` mIsDismissHapticRunning ` to prevent multiple dismissal of the task in ` TaskViewTouchController . java ` to
improve world explosion error message for projectile .
removed the method ` setStableIds ( true ) ` from ` SymbolInputAdapter ` to streamline the item ID retrieval process by eliminating unnecessary
updated API endpoint parameters in Bitfinex . java and BitfinexPollingMarketDataService . java to improve API consistency and adapt to new requirements
camel - 16400 : camel - jax - transform - spring - xml - dsl - allow to use double quote in xml output
[ hotfix ] [ runtime ] add tostring ( ) method to kubernetesclelectiondriver
refactor SqlSessionFactoryBean class to improve code readability and maintainability
fix ( rpc ) : do not call rpcutils # getmethod ( ) for non - generic invocation ( # 10432 )
replaced Gdx . app . call with GdxRuntimeException for reading errors to improve error handling by throwing a more specific exception for file reading failures
added a method to check if the threadlocal Deadline is not null and start a timer if it ' s already started to ensure proper handling of timer
improve error message for closed channel
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpoint ] fix reset call in checkpointcoordinator
add support for mappedcontainercomponent to handle collection of mappedcontainers .
added null check for oldestUnpinnedMemTableInfo before accessing its value to avoid potential null pointer exceptions to ensure robustness by handling potential null pointer exceptions
add test for retry same host on callback failure
update package - info . java to reflect new package structure
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server query handling to ensure proper functionality of escape characters in Hibernate queries
updated CamelModule constructors to add nullability checks and refactor the context parameter to improve code safety and clarity by ensuring required parameters are not
refactor JavaFXSEPort to use a while loop for handling null values to improve code readability and maintainability
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaffl .
refactor cropperutils to accept imageobject a a parameter
removed appName parameter from configure methods across multiple classes to simplify configuration by eliminating unnecessary appName parameter
add test for install / uninstall command with ignore dependency
danielwagnerhall : use -- headless = chrome instead of -- setheadless ( true ) for test
changed the initialization of the value field in VersionedValue to use an intern method to optimize memory usage by reusing the value object
added " MOVE " status check for " INSERT " , " DELETE " , and " MOVE " HTTP status codes in the connection validation logic
updated date formats for US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME to
replaced ` org . apache . common . collect . Lists ` with ` com . google . common . collect . Lists ` in multiple test files to
[ hotfix ] [ runtime ] avoid race condition in hsbuffercontext # startspillingbuffer
updated permission checks for untrusted visit functionality to ensure only authorized players can visit untrusted plots in plots
do n ' t register jabber if it ' s already register .
added support for curly braces in BasicURLNormalizer and a corresponding test case in TestBasicURLNormalizer to enhance URL normalization functionality to accommodate
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict method visibility
added a check for zero res in EncodingConfiguration . java to ensure consistent handling of zero clock rates to avoid potential errors
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified the return type of ` generateProjects ( ) ` to
updated zero - digit handling in HostLocaleProviderAdapterImpl . java to ensure valid calendar ID checks to improve robustness by preventing invalid calendar identifiers
added a new file MSwingUtilities . java that implements MSwing ' s image scaling functionality to enable dynamic resizing of images based on specified dimensions
camel - 16400 : camel - mail - add support for async delivery to the mail producer
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh behavior of configuration classes
add unit test base on user forum issue
added Main class and ScriptRenderer classes to facilitate the execution of scripting in integration tests
added a condition to check if the input state is __ NONE and implemented a test for query parameters in RequestTest to ensure proper handling of form
updated calculations for descent and touch focus in BitmapFont , FlickScrollPane , SelectBox , and SelectBox classes to ensure proper handling of
added close hook execution in DeploymentManager to ensure proper handling of failure scenarios during deployment
fix lexicon recipe mapping to not ignore item that be ignore
increased the sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to allow more time for operations to complete before timing out
updated import statements in LoincHandler . java to simplify code and improve readability
use classloader to load holiday xml from classpath
added a new file FieldUtils . java that includes utility methods for field access and retrieval to provide utility functions for reflection - based field access in
updated assertions in DeferredAttr . java and added double static import in DoubleStaticImport . java to simplify condition checks and introduce a new test class to improve
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom content in AppWidgetHostView to improve layout consistency
add ` ` save last account ' ' to xabber account manager .
added a new method ` setvar ` to set variable values in ` LineReader ` to provide users with the ability to programmatically set variable values
fix catentity event not be fire correctly . close # 3971
improve error message for unsigned range validation
pdfbox - 4892 : add test case to verify that the font name be not null
added app mode setting in PageListController to ensure the app reflects the current mode
added support for specifying a Docker file path in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance flexibility in
added a null check for threadInfos [ threadId ] before creating new ThreadInfo instances to avoid unnecessary object creation to ensure threadInfos [ threadId ]
updated the condition to use ` Utils . FLOAT _ EPSILON ` instead of ` 0.00001f ` for the sweep angle comparison to improve precision
[ hotfix ] [ checkpointing ] [ runtime ] add extra debug log for each checkpoint
added new schema definitions to the Schema class to enhance the schema management capabilities in the application
added a minimumSimilarity parameter to FuzzyQuery and updated related classes to allow for more flexible similarity scoring in fuzzy queries
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity by
log4j2 - 1349 log4j2 - 1349 move immediate flush property to enclosing appender
added additional auto - configuration classes to ZipkinAutoConfiguration to enable integration with additional auto - configuration options
modified the null check for ` comp ` in ` JLayer . java ` and added a new class ` bug6875716 . java ` to handle
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base . Function `
refactor block handling in BciBlockMapping and GraphBuilderPhase to improve block management and unwind handling to enhance code clarity and maintain
refactor rendering logic in Label . java for improved clarity and functionality to enhance the readability and maintainability of the code
replaced ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJwe
added a null check for mObserver before calling mBasePredicate . isHomeAndOverviewSame to avoid potential NullPointerException when mObserver is null
updated the ` thenComparing ` method in ` Comparator ` to remove the generic type parameter and added a new ` Department ` class to enhance
refactor DocIdSet class to improve code readability and maintainability
updated end time setting to use currentKey bucketMillis instead of null to ensure accurate time representation for anomaly results
added exception handling for NumberFormatException in VisualScoreTagTest . java to ensure graceful handling of NumberFormatException during value parsing
added class loader setting in MockFactory to ensure proper class loading for mock objects
added a new ` OriginalFormat ` class to convert ` Object ` to a string representation of ` source ` in ` ConverterWithEnumFormat ` to en
replaced SimpleDateFormat with a constant pattern for year formatting to improve maintainability and readability of date formatting logic
fix typo in jawtrenderer javadoc
camel - 14868 - camel - aws2 - * : improve the ability to create an aws2 - lambda component with autowire the autow
server : allow user to use a valid mac address for vm ( # 6894 )
added a check for " Authorization " header in ProxyServlet to ensure proper handling of authorization headers
replaced ` this . delegate . execute ( ) ` with ` delegate . execute ( ) ` in ` TraceableExecutorService . java ` to ensure proper
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePassword
updated the initialization of ` randUsePoints ` to use ` randomInt ( ) . nextInt ( 5 ) ` instead of ` random ( ) .
apps - 2892 use end sentence instead of appendDot ( ) to avoid crash
updated time formatting methods to include Locale parameter across multiple classes to ensure consistent formatting across different locales for better readability
replaced specific imports with a wildcard import and added a condition to handle multiple unparsed arguments in GroovyParserVisitor . java to improve code readability and
added bounds checking for inset values in Border . java to ensure that inset values do not exceed defined limits
replaced direct instantiation of GestureState with a static final default state to improve code readability and maintainability by centralizing state initialization logic
replaced ` DateTime ` with ` DateTimeFormatter ` for better date formatting to improve compatibility with modern Java time API
refactor Openblas and Openblas _ nolapack files to improve code organization to enhance maintainability and readability of the codebase
use try - with - resources to avoid resource leak
added synchronization to the initTxnMgr method to ensure thread safety when accessing shared resources
increased timeout duration in ` waitForRecoveriesToFinish ` method from 120 to 480 milliseconds to allow more time for recovery processes to complete successfully
added a new class ` SearchResults ` to handle search results to facilitate the retrieval of multiple documents based on search results
bugfix # 205180 - avoid npe in cpusampler
refactor initialization of primitives in BytecodeNode to ensure primitives are properly initialized before use to avoid potential null pointer exceptions
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwardsCompatibility . java
updated ENABLE _ TWOLINE _ ALLAPPS feature flag from DISABLED to TEAMFOOD and modified the return condition in AppIcon . java to
added a new endpoint to retrieve tenant pools for the current instance to enable monitoring and management of tenant pools for the current instance
added methods to check early termination on document IDs and prefixes in TopFieldCollector and TestTopFieldCollectorEarlyTermination to improve code clarity and
fix inline byte buddy mock maker to mock interface .
added logging statements for compilation and preprocessing steps to improve traceability and debugging of compilation and preprocessing processes
add helper method to remove character from a string ( # 1782 )
[ 3.0 ] add support for metadata service protocol ( # 10432 )
[ drools - 7 ] add datatransformer interface to make it easy to use
change type of ` objval ` from ` Collection < ? > ` to ` Number [ ] [ ] ` in ` DistributionGraph . java ` to
simplified the conditional check for varargs in FormatStringChecker . java to improve code readability and maintainability
reformatted the initialization of SolrCore to improve code readability and maintainability
refactor ITestDbTxnManager class to improve code readability and maintainability
refactor database connection handling to use try - with - resources to ensure proper resource management and automatic closure of the connection object
added unit tests for MapModel functionality in CodeFirstPojoClient and CodeFirstPojo to ensure correct mapping and retrieval of user names in
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated selection handling in ScaleDialog . java to improve clarity and functionality to ensure proper selection and state management of scaleOffsets
rename itemTravelbelt . updateplayerstepstatus to itemTravelbelt . tickbelt ( ) to avoid npe
pdfbox - 4892 : avoid npe in appearancegeneratorhelper , a suggest by valerybokov
replaced TreeSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to ensure uniqueness of keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG duration from 1500ms to 1000ms in CancelEventTimer . java and added a
updated the library version from " libdc1394 - 22 " to " libdc1394 - 25 " in the preload array to reflect the latest
added a conditional check for agentSupport before setting all constructors to public in MainMockTransformer . java and created a new test class MockStaticWithPrivateCtor
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
set window title to awt app class name if available
modified the depth determination logic in XRSurfaceData . java to ensure correct depth handling based on pixel representation
added error handling for unsuccessful response in OkHttpDataSource to improve robustness by throwing an exception for unsuccessful responses
added a static method ` exit ` to ` TopLogging ` and replaced ` Thread . sleep ( ) ` with ` TopLogging . exit ( ) `
updated start assignment logic in NativeRegExp . java to ensure correct starting index is used for non - global regex patterns
planner - 468 : disable test that fail when upgraded to optaplanner 6.3 . 1 +
[ hotfix ] [ runtime ] fix indexoutofboundsexception in defaultallocator
added functionality to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to enhance data integrity by allowing deletion of entries without feeds
changed the return type of appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] add no - op idle strategy for low latency medium driver .
added checks for NOT _ MODIFIED responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of non - modified responses to
refactor instrumentation test to use toolevalnode instead of splicednode
removed the paintTabArea method from SynthTabbedPaneUI to streamline the code by eliminating unnecessary painting logic
refactor methods in KrakenMarketDataService and KrakenMarketDataServiceRaw to accept an additional argument for depth retrieval to improve flexibility
camel - 14284 : camel - core - optimize to avoid reflection
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to utilize this new method to
added trace logging for registered Hive UDFs in HiveFunctionRegistry . java and created a corresponding test in TestInbuiltHiveUDFs . java
increased the loop iteration from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for cloud state updates
handle unknown columnfamilyexception gracefully
added a check to skip output file writing if the output file is writable to avoid errors when attempting to write to a non - root test environment
added error handling for package info retrieval in LauncherModel . java to ensure robustness by logging exceptions when the component name is not enabled
bug cs - 14589 : do n ' t throw exception when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to ensure that
replaced ` . matches ` method with ` . regionMatches ` method in ` LineReaderImpl . java ` for case - insensitive matching to improve case -
added imports for SourcesFileErrors and SourcesFileResult , and updated return logic in Recipe . java to utilize a list of global data tables to
added functionality to dismiss all tasks in the overview in the TaplTestsTaskbar to enhance user experience by ensuring tasks are properly managed
cloudstack - 4441 : fix updatetemplate for system vms in db upgrade
updated connection handling in LdapClient . java to improve code clarity and ensure proper resource management
refactor index checks in SequenceAction to use a local variable for clarity to improve code readability and maintainability
make cassandraserver . set _ keyspace thread - safe
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing
added a new LoggerProvider class and integrated it into Configuration . java and ApplicationController . java to enable logging functionality for the Logger application
updated ` ImmutableMap . Builder ` to ` ImmutableMap < String , Object > ` and modified port handling in ` ServerStatusCommand ` to improve flexibility in
added deprecation warning messages for deprecated spring context configuration to inform users that there are multiple glue classes configureing the spring context
added a deepStart method to the Startables class to facilitate the creation of deep starting instances from multiple startables
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code by
fix block laser not work properly
refactor the object name validation logic to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
[ hotfix ] [ test ] fix memorylimittest failure
refactor conditional checks for handlerName and handlerName to improve readability to enhance code clarity and maintainability
modified the logger name retrieval to normalize the servlet name before returning it to ensure consistent logging format and improve readability
updated Python environment variable handling in ProjectBuildFileParser . java to improve readability and maintainability of the code
updated audio format handling and error handling in DirectAudioDevice and Toolkit classes to improve robustness and clarity of audio data initialization
added a null check for enums before returning an Optional to avoid potential NullPointerExceptions when enums is null
improve error message in commitlogreader
added a policy assignment for the WebSocket session to ensure the WebSocket session uses the correct session policy
removed the condition for checking static fields of the current type in Java2TypeScriptTranslator . java to simplify the logic for initializing static fields to streamline
added a webroot parameter to the StaticHandler constructor in UserService to allow customization of the UI directory location
( chore ) camel - test : migrate to junit 5
do n ' t use reflection to check if a vm be attach to the monitor
renamed method ` createHeader ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in method naming
replaced individual imports of trade DTOs with a wildcard import and added a method to place stop orders to simplify import statements and provide a placeholder for future
added multiple calls to buffer . flush ( ) in ReduceRecordProcessor . java to ensure the buffer is cleared before new data is processed
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is null
updated conditional checks for decimalExp in FloatingDecimal . java and added a new class ToString . java to verify difference between 0.001 and 0.
updated property type comparison logic in PropertyDescriptor . java and added a new test class Test7189112 . java to enhance type safety and ensure proper
removed maxVersion initialization in RealTimeGetComponent . java to simplify version retrieval by eliminating unnecessary maxVersion parameter
added a check for secure URIs in NettyRequestFactory to ensure that the ORIGIN header is correctly set based on whether the URI is secured
updated task visibility and animation logic in RecentsView and TaskView classes to enhance user experience by providing a smoother transition effect
enhanced error messages in ORCRecordReader to include the field name to improve debugging by providing more context in error messages
[ demo ] remove outdated sample
refactor HIBERNATE _ ENTITY _ MANAGER _ INTERFACE to HIBERNATE _ SESSION _ INTERFACE
updated log messages from " ExecRPCInvoker " to " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . a
added diagnostic logging in TestSpecificCompiler for error and warning handling to improve error reporting and debugging capabilities during compilation
added a return statement to the session creation logic in WebSocketEndpoint . java and implemented a test for session closure in WebSocketIT . java to ensure
[ multistage ] [ state ] reduce delay in statenetworkservice to 10 second
ww - 4892 update xwork / xwork - 1.1 . dtd to xwork - 2.0 . dtd
added a conditional check for the stream ' s stop status before stopping it to ensure proper handling of video tracks when stopping the stream
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriod
use simplefeaturebuilder instead of gml2
replaced ` s . stream ( 200 ) ` with ` s . remove ( 200 ) ` in the ` g ` method call to ensure proper removal of
hhh - 10956 : add support for identifiergenerator in entity tuplizer
rename findfulltextaction to downloadfulltextaction for good clarity
refactor URI registration logic to include host and port to ensure URIs are registered with valid host and port values
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank ` osdbHash ` before calling ` getInfoFromOSDbHash ` in ` getInfoFromOSDbHash
added token transfer functionality in RuntimeImpl . java and integrated it into MUtil . java to enhance contract handling by allowing tokens to be transported
updated file handling logic in FtpOperations . java to support stepwise file operations to ensure correct directory management during file operations
( chore ) camel - spring - xml : fix typo
added validation for empty result sets in MapJoinOperator . java and updated join condition logic in HybridHashTableContainer . java to ensure proper handling
updated the ` HTTPSPDYAsyncEndPoint ` constructor to include an ` endPoint ` parameter and added local and remote address retrieval methods to en
added " id " to the intent in TimeLineCursorAdapter , TimelineArrayAdapter , TweetPager , and TweetFragment to store tweet IDs in
added a new method ` disconnectWeb ( ) ` to handle WebSocket disconnection logic in ` HttpURLConnection . java ` to improve connection management by ensuring proper
replaced ` int _ numChildren ` with ` AtomicInteger _ numChildren ` and updated the return statement to use ` AtomicInteger ` to improve thread safety
replaced JWT with JWT in multiple Java files to standardize JWT format across the project
disabled the test due to potential null pointer exceptions in ValueTypeTests . java to improve test reliability by avoiding unnecessary exceptions
[ drools - 7 ] move resourcefactoryserviceimpl implementation from kie - api to kie - api - kie - api - kie
updated predicate types in ByteNotInPredicate , CharNotInPredicate , DoubleNotInPredicate , FloatNotInPredicate , IntNotInPredicate , LongNotInPredicate ,
replaced ` AccountUtils . AccountNotFoundException ` with ` OwnCloudAccount ` in ` FileActivity ` and ` ReceiveExternalFilesActivity ` to
added a null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the string concatenation in JoinDesc . java to use getExprString ( ) for better clarity to improve code readability and maintainability
added a check to ensure that the item ' s Javadoc is not present before adding it to the item list to avoid adding it to the item list
replaced ` holderMethod ` with ` holderMetadata ` in ` CompiledICHolder . java ` and added ` RedefineInterfaceCall . java `
removed duplicate revalidate calls in Tabs . java to improve code readability and maintainability
[ flink - 18552 ] [ connector / kafka ] deprecate unregistered metricgroup in serializationadapter
updated the calculation of y in Polygon . java to use a variable for the original coordinate to improve code readability and maintainability
updated cache creation to use a specific Configuration type to ensure compatibility with different cache configurations
added a check for non - empty stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
updated ShadowCookieManager to enhance cookie management functionality
added a permission check for dropping an external table in Hive to ensure backward compatibility with external table access control
updated conditional statements in Stage . java and ProgressBar . java to improve code readability and ensure correct rendering based on the width of the background background
use native byte order to improve performance
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " in WindowsClientProvider
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the web view loading logic to enhance flexibility in handling
corrected a typo in the exception message for JDBC Type to improve clarity and accuracy of the error message for better debugging
updated date format in AuditEventsMvcEndpoint and AuditEventsMvcEndpointTests to use " yyyy - MM - dd " instead of " yyyy - MM -
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple files to improve clarity and consistency to enhance code read
fix softbodytest so it do n ' t crash
[ hotfix ] [ table - common ] make sinkfunctionprovider public
[ hotfix ] [ zeppelin - 4442 ] [ zeppelin - 4441 ] make zeppelin -
add unit test for the jingle element .
add a check for ` ` redPlasma ' ' before call the crafting method .
added support for x - http2 header in response
updated member removal logic to use trusted members instead of member checks to enhance security by ensuring only trusted members can be removed
updated delimiter lines in SimpleReport . java for clarity and consistency to improve readability and maintainability of the code
added a method to ignore symbol files in JavapFileManager and created a new class T6863746 with a main method to facilitate testing
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update related methods to improve clarity and consistency in naming conventions
refactor contract creation logic in Runtime . java to improve error handling for unknown contract types
do n ' t create input3d if not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception when parse script tag payload
added @ Override annotation to getRepositoryFactoryClassName method to ensure proper method overriding and improve code clarity
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance
updated variable names in IOSGLES20 . java for consistency to improve code readability and maintainability
deleted the UploadPathActivity . java file to remove unused components to streamline the codebase
updated return statements in SimpleTextFieldsReader to handle DOCS _ ONLY index options to ensure correct term frequency calculations based on index options
fix ( constructor ) : fix implicit constructor in ctclass
updated ` populateValidateNullableIfNeeded ` and ` populateValidateUniqueIfNeeded ` methods to include a ` Database ` parameter in the ` populateValidatePrimaryKeyIfNeeded `
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder class to improve code readability and maintainability
updated variable names in DefaultIndexingChain and PointInSetQuery to improve code readability and consistency
removed the length check for the rawName string in SchematicHandler . java to simplify the code and improve readability
added handling for " java . util . Collections $ EmptyList " , " java . util . Collections $ EmptySet " , " java . util .
changed the access modifier of the Option enum from static to instance to allow access to the Option enum from other classes
updated dialog handling logic in Compose . java and ComposeActivity . java to improve user experience by allowing users to choose a twitlong
replaced the method ` toggleKeepInSync ( ) ` with ` toggleKeepInSync ( ) ` in ` FileDetailFragment . java ` and removed
replaced ` DatatypeConverter ` with ` Base64 ` in ` ImageUtil ` and added a new test class ` ImageUtilTest ` to
added a new file ` ControllerCounter . java ` and ` DBCallback . java ` with methods for tracking controller and database operations to provide a structured way
added a ` final ` keyword to the ` ticketId ` parameter in the ` deleteTicket ` method to indicate that the parameter should not be modified
added a new file FlywayMigrationRunner . java that contains a main method for FlywayMigrationRunner to facilitates migration of Fly
replaced isEmpty ( ) with = = 0 in HashMap . java and added a new NotEmptyHashMap class for testing to improve code readability and
update version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version release
added nullability annotations to the modify method in CompressionCodec and ZlibCodec classes to enhance code clarity and prevent potential NullPointerExceptions
added null check for main value and improved error handling in LauncherHelper . java , and refactored jar creation logic in TestHelper .
removed unnecessary whitespace in test class names to improve code readability and maintain consistency
[ gr - 27832 ] fix compilation size of graal node .
refactor CellCopyPolicy to use a constructor for cloning of CellCopyPolicy to improve code readability and maintainability by encapsulating object initialization
added a method to reset the icon load result in FloatingIconView to improve code readability and maintainability by centralizing icon loading logic
fix incorrect capitalization of string
updated the calculation of outRect based on the device orientation in IconRecentsView . java to improve layout handling for landscape orientation to ensure proper margin
deleted the AddAdapter . java file to remove unused adapter class to streamline the codebase
refactor constructor code handling in NonStaticLifter . java to improve readability and maintainability of the code
added a boolean parameter ` processSortCols ` to the ` OpTraitsRulesProcFactory ` class to control the processing of sort columns based on
refactor LogWatcher initialization and improve error handling in TestLogWatcher . java to enhance clarity and reliability of event registration checks
added a new import statement for " < any > " in Java2TypeScriptTranslator . java to enable the use of TypeScript ' s TypeScript
updated the SDK version from 4799589 to 4913185 to reflect the latest build release
added a check for the presence of SPRING _ AOP _ PROXY _ TARGET _ CLASS in the environment before adding it to the map to ensure
updated singletonLock initialization in TypeCachingBytecodeGenerator . java to simplify locking mechanism based on configuration
improve clarity and usability of callback action example
added a ` append ` parameter to the ` writeFile ` method in ` Utils . java ` and updated related methods in ` Utils . java
updated MavenExecutionContextView and MavenRepositoryMirror classes to improve handling of Maven settings and refactor mirror retrieval logic to enhance code
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer ` classes
updated the redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController . java to ensure proper handling of service clients with the same redirect URI
refactor annotation handling by replacing instances of ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser . toArray ` across multiple classes to improve code
updated method calls from ` getBadgedDrawableForUser ` to ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` to ` get
updated the default line separator configuration in GlobalConfiguration . java to allow customizable line endings for output
fix configurationmanagerutils . isimplementinginterface to return a derived class
make sure to sanitize input before send it to the rest api
chore : update java and python dependency ( # 662 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include error handling for file names to ensure proper output verification during inter - cell builds
refactor CountersReader class to improve code readability and maintainability
updated container type handling in AllAppsRecyclerView , UserEventDispatcher , DeepShortcutsContainer , and DeepShortcutsContainer classes to improve clarity and consistency in
hbase - 26909 deprecate config key in bytebuffallocator ( addendum )
fix npe in native window test
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve parameter types from ` Executable ` based on generic information to improve parameter handling by
refactor TestFSTs class to improve code readability and maintainability
fix input box height for latex text
hbase - 26909 increase upper bound region split policy should not try to split large region
updated model loading behavior in LauncherClings . java to ensure proper loading state to improve user experience by preventing unnecessary page loading
replaced List < String > with List < SelectorUpdate > for key and update lists in ManagedSelector . java to improve clarity and consistency to enhance
added a set of excluded data sources in SpringDataSourceBeanPostProcessor to allow filtering of Spring data sources to enhance flexibility in data source management
added undo functionality to TableValuesView and TableValuesPanel to enhance user experience by retaining undo information during deletion operations
camel - 16400 : camel - aws2 - * : improve the ability to create kinesis client with a clientconfiguration
refactor channel press handling in VelbusSensorHandler to use a loop for processing channel press events to improve code readability and maintainability
disabled test due to unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure proper database
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure a fresh state for file changes
renamed ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and updated related calculations in ` DeviceProfile . java
reformatted whitespace in CharTokenizer . java for consistency to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 638 )
fix typo in the xenserver _ network _ label constant name ( # 4810 )
updated libGDX version from 1.5 . 5 to 1.5 . 6 in DependencyBank . java to incorporate the latest features and
added a private Set < String > metricNames to the SolrCore class to store metric names for better monitoring and management
fix mavenmanifestfactory to work on window
replaced direct property lookup with a static variable ` IS _ MAC ` in ` OisControllers . java ` to improve code readability and maintainability
refactor JdbcAggregationRepository class to improve code readability and maintainability
added functionality to populate slotList with additional items from another Frame instance
set m _ predCount to - 1 in PredicatedNodeTest . java to ensure proper initialization of m _ predCount to avoid null reference issues
added imports and implemented the mergeProperties method in ConfigurationSpringInitializer to enhance configuration management by allowing dynamic property merging
updated the ` setupLogging ` method to use ` org . slf4j . Logger ` instead of ` org . slf4j . Logger
replaced HashMap with LinkedHashMap for aliasToWork across multiple classes to maintain the insertion order of elements in the hash map
added a null check for jdbcHandlerMap before retrieving its superclass in TypeHandlerRegistry to avoid potential NullPointerExceptions when accessing type handlers
added debug logging statements to multiple writer classes to improve traceability of data writing operations
updated string handling for language range parsing in LocaleUtils . java to ensure proper trimming of comma - separated values to improve robustness by preventing potential
updated Http2ServerResponseImpl , VertxHttp2Handler , Http2Test , and Http2ServerResponseImpl to use executeFromIO for closing handlers to
improve performance of xssfevaluationworkbook # gettable ( string )
updated schema text formatting to use BASIC instead of VERBOSE to improve clarity and consistency in schema text representation
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` and ` MongoClientFactoryBean ` to
replaced HashSet and HashSet with LinkedHashSet in SparkWork . java to maintain insertion order for sets
added a list for table scan cloning operations in SkewJoinOptimizer . java to ensure operator tree is properly cloned before further operations
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated imports in JsonFileRegisteredClientService and JsonFileRegisteredClient
added a new patch for AchievementList . field _ 187981 _ e to delete the AchievementList . field _ 187981
initialize ` userName ` , ` productName ` , ` productVersion ` , and ` productName ` to ` empty ` in ` MutableDatabaseInfo `
updated method name from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheet
added LongBuffer functionality for reading long data in ByteBuffersDataInput . java to improve handling of large long values during buffer reading operations
refactor UnixFileAttributes to use a new method for converting Unix file timestamps to FileTime objects to improve code readability and maintainability by encapsulating time
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` to test the behavior of eager reclaim of humong
added functionality to hide the app search bar based on user preferences to enhance user experience by allowing dynamic visibility of the search bar
fix : use routes ( ) instead of router ( )
added a null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class to handle page reload actions to enhance user experience by allowing dynamic page reload functionality
changed log level from info to warn for ` entry # { } ` in ` SQLManager . java ` to warn for ` entry # { } `
updated minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest features and
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is selected to avoid runtime exceptions
use serviceloader to load extension point
added a closeTable method to HiveHBaseTableInputFormat to ensure proper resource cleanup to prevent memory leaks by ensuring the table is closed after use
added a method to stop statement executors in JdbcConnector and HiveViewImpl to ensure proper resource management and avoid potential memory leaks
added support for external DTD declarations in DocumentFactory , ElementHandlerFactory , and related tests to enhance security by preventing external DTD
replaced ` waitForPrompt ` with ` contToExit ` in ` JdbStopThreadidTest . java ` to ensure the application exits with the expected
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to retrieve the type of a given URI to
[ hotfix ] [ table - planner - blink ] fix thread safety issue in expression thread pool
updated the default HTTP port configuration from " 8080 " to " vertx . httpPort " in HttpTestBase . java to align the configuration with the
updated the method name from ` addCaptureListener ( new ChangeListener ( ) ` to ` addListener ( ) ` in ` Dialog . java ` to
increase default batch size to avoid oome
[ hotfix ] [ runtime ] log failure to establish resource manager connection in taskexecutor
updated exception handling in LambdaRewriter . java to improve clarity and ensure proper fallback behavior when classFile is null
updated error message to include the minimum and maximum values to improve clarity of exception messages for better debugging
updated method signatures to include owner parameter for telegram messages to enhance message handling by associating messages with their respective owner
added Cursor interface and Database classes to manage database operations to provide a structured way to handle database operations in a structured manner
updated assertion classes for consistency to improve code maintainability and readability across assertion methods
# 161 - enh : add setbeanid ( ) and setbeanid ( ) to ebeanserver
updated XSLT transformation method from " tools / xslt / add - menu - to - site - descriptor . xsl " to " AddToSiteDescriptorX
added a list of RequestMatcher instances to the requestMatcher constructor to allow multiple matchers to be registered for request matching functionality
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for instances of ContactResource
remove unused import
updated logging messages and improved error handling in FileManager . java to enhance clarity of log output and provide better feedback on object saving status
fix testcases which fail with - dtests . multiplier > 1
refactor syntax tests to use Lambdas with interfaces instead of references to improve code readability and maintainability by reducing redundancy
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
tika - 2088 -- upgrade to tika 4.0 . 0 , remove unused parserdecorator
fix fml security warning .
reformatted variable declarations in AccountUtils . java for consistency to improve code readability and maintainability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApiMapping
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and modified the parsing logic in ` Parser `
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality as per bug report 195263971
added error handling for missing Buck configuration in BuildEndToEndTest . java and CxxEndToEndTest . java to improve user feedback by
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure tests only run on sufficient physical memory to avoid errors
add deprecate conversionservice to mapToLocaldateconverter
added success flag to HiveMetaStoreClient to ensure the operation has successfully completed
updated equality check in ResourceReferenceInfo . java and modified the bundle creation in Dstu2BundleFactoryTest . java to include a new String parameter to
added support for " amp . twimg . com / v / " and " amp . twimg . com / v / " in multiple
added @ Deprecated annotation to AreaReference class to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code readability and maintainability
added assertions and refKind checks in MemberName . java to improve error handling and ensure correct reference kind handling
changed the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization in ` runChange ` method to ensure
updated conditional statement for handling mouse events in EditNodeTextField . java to ensure proper event handling logic
camel - 16400 : camel - spring - xml - dsl - allow to use a bean with a static method . thanks to
chore ( regen ) : update license year for generated file
refactor exception handling in AgentRunnerTest to improve clarity and maintainability of the code
added descriptions for Maven dependency and plugin in multiple classes to improve clarity and understanding of the code functionality
refactor face addition logic in ObjLoader . java for improved clarity and structure to enhance readability and maintainability of the code
refactor ProcessEngine class to improve code readability and maintainability
replaced instances of ` reentrantLock ` with ` lock ` in multiple files to improve clarity and consistency in variable naming
added " mavenPackaging " parameter to the getBomReference method in PrintMavenAsCycloneDxbom . java and
updated back ( ) method call to use the correct component reference to ensure proper event handling for the back action
refactor certificate verification logic in SASLAuthentication . java to improve readability to enhance clarity and maintainability of the code
updated method signatures in ObjectArraySubject and StandardSubjectBuilder to use ` @ Nullable ` instead of ` @ Nullable [ ] ` for better type safety to
updated method calls from ` NutchConf ` to ` getConf ( ) ` in ` Fetcher . java ` and ` Generator . java `
bug fix : do n ' t remove the selected stub
added getSessionId ( ) method to RemoteWebDriver class to provide access to the session ID for better session management
added null checks before setting time interval and edge time interval in ImportContainerImpl . java and corresponding tests in ImporterGEXF2Test . java to
updated the command to use " - serverPort " instead of " - logLevel info - serverPort " in MockServerContainer . java to improve clarity
updated error logging to include exception details to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in ` DispositionProcessor . java ` and updated related methods to utilize
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
( chore ) camel - scan - xml : fix checkstyle violation
added alternative path method to expectnewdemo .
updated initialization in LogEntryParseTester to use the first filter ' s init method to ensure proper filter initialization
[ hotfix ] [ runtime ] add protectiondomain to bufferalignmentagent
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable semi - joins on external tables in Hive to improve performance by avoiding unnecessary optimization on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for request public keys
updated wallpaper offset setting from - 30 to - 0 in Workspace . java to improve wallpaper visibility during scrolling
updated return values in SybaseASADatabase and CreateSequenceGenerator to return true instead of false for SybaseASADatabase and CreateSequenceGenerator to
nifi - 2892 : fix npe when commit / rollback fails
added error handling for creating sub - directories in SnapPuller . java and corresponding tests in TestReplicationHandler . java to ensure proper directory creation and
updated AppTargetId from " id : launcher " to " launcher " in AppEventProducer . java to ensure consistency in target identification format
updated frame method to accept a ByteBuf output parameter across multiplexer implementations to enhance frame handling by allowing the output parameter to be passed in
updated method signatures in OAuth2 authorization request filters to include the client registration repository to improve clarity and consistency in handling client registrations during OAuth2
[ hotfix ] [ table - common ] fix typo in genericudfstringtomap
updated the ` formatInstance ` method to use ` ChronoUnit . MILLIS ` instead of ` Instant . ofEpochSecond ` to improve precision
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and updated close method to use RETRY _ CLOSE _ TIMEOUT _
refactor privateLookup handling in ClassLoadingStrategyHelper to use a dedicated method to improve code readability and maintainability
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clarify
ignore test that produce no sample result
corrected a typo in the IllegalArgumentException message to improve clarity and accuracy of the error message
refactor DecisionNode and WagonCART classes to improve formatting and error handling to enhance code readability and maintainability
added sorting functionality for BoundSheetRecord in XLS2CSVmra and BoundSheetRecord classes to improve the organization and retrieval of bound sheet
refactor the calculation of average impulse by introducing variables for start and end thrust values to improve code readability and maintainability by
niftyjme : fix nifty display to use inputmanager
refactor hash code field handling in UniverseBuilder . java to improve clarity and ensure offset validation to enhance code readability and maintainability by
remove deprecate tessellator . mesh ( ) from block
[ hotfix ] [ yarn ] fix npe in yarntaskmanagerrunner
added EMPTY _ WORD _ OPTIONS option handling in the LineReader and LineReaderImpl classes to improve flexibility in matching options based on empty word options
[ java ] do n ' t log replayed view update if commitlog be disable .
added functionality to auto - open web content in CaptureActivity and PreferencesActivity to enhance user experience by allowing users to open web content directly from preferences
added a test method ` testBatching ` to ` JoinedTableTest ` to validate the behavior of batching posts in JPA to ensure that
added handling for duplicate timestamps in JpaPersistenceService to improve error logging to provide clearer context for item persistence failures
deprecated the -- format option in CucumberOptions and updated RuntimeOptions to use a plugin name to encourage the use of a more descriptive
removed an unnecessary call to clear ( ) in PMS . java to improve performance by eliminating redundant operations
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder ` and added a new class ` Capacity ` to enhance capacity management and
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to ensure proper handling of
added support for endnote reference in xwpf document ( http : / / schemas . openxmlformats . org / officedocument /
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent to enhance event details for better traceability
added a test method ` testVersion ` to ` BridjGRDataStoreTest ` to verify the current version of ` OgrLibrary ` to ensure
added a new file ` Lifecycle . java ` that implements network error handling to facilitate the management of network events within the application
deviantart ripper should not try to download a url that do n ' t exist
removed unused imports and simplified child iteration in RocketFigure . java to improve code readability and maintainability
added support for retina scaling in the PJOGL class to enhance rendering quality based on the device ' s scaling preferences
add initial value for create project offline option ( # 5441 )
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of FormatAndBits for improved efficiency to enhance performance and reduce memory usage
replaced ArrayList with SortedSet in DefaultStatusRoute and DefaultRouter classes to preserve the order of status routes to ensure predictable iteration order
removed unused imports and simplified data handling in GoAwayTest . java to improve code clarity and reduce unnecessary complexity
added property handling for ` FluentSetterBean ` in ` ReflectionUtils ` and created corresponding tests in ` EasyRandomTest ` to enhance bean
replaced ` ListenableFuture < ? > ` with ` HttpResponse ` in ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to enhance
updated file URL construction to use a dedicated prepareFolder method to improve code readability and maintainability by centralizing folder preparation logic
updated variable name from lastAppearedTaskTarget to lastAppearedTaskId in GestureState . java to improve clarity by using a more descriptive
add support for pdf / a - 2 conformance
added support for SQL aggregation functions in TSServiceImpl to enhance data retrieval based on the aggregate function name
replaced ` LuceneTestCase ` with ` WithNestedTests . AbstractNestedTest ` and added cleanup methods to improve test structure and ensure proper resource management
added functionality to enable or disable the X - Cap server URI in PresencePanel to enhance user control over the presence settings
ww - 3850 add option to turn off exception handling
added stopEditing methods to CodenameOneImplementation , Display , AndroidImplementation , and AndroidTextArea classes to enable text editing stop functionality to enhance user
nifi - 1086 : fix npe in controlrate when group attribute be null
added a new parameter ` isNewComponent ` to the ` showDialog ` method and updated related logic to ensure the component opens only when a new
added error handling to the ChatAnnotation class to log chat messages and ensure thread safety when sending messages to the client
added a check for the operating system type in the HTMLDataFlavorTest . java file to ensure the test runs only on non - Windows OS to avoid
added SQL _ SERVER _ SNAPSHOT and SQL _ SERVER _ SNAPSHOT in TransactionIsolationLevel . java to enable support for SQL Server ' s
added a loop to wait for a new recid to be added to the new recid before adding it to the new recid list to ensure that
use java . util . zip . zipfile instead of jreCompat
added a null check for the command class in RegisteredServiceSimpleFormController to ensure command class is not null before creating a service instance
set default disk _ failure _ policy to ignore
remove the ` public ` modifier from the ` rip ` method in ` RipperInterface ` , ` RipStatusHandler ` , and `
peerdiscoveryagent : do n ' t try to connect to non - existent ip address ( # 1894 )
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the job identifier handling logic
updated AutoRebalancing strategy from AutoRebalancingStrategy to ClusterDataCache in PinotSegmentRebalancer . java to enhance performance
danielwagnerhall : remove container . delete ( ) method from containerconfig
simonstewart : make defaultselenium command support pipe - separated argument
createglossarytests : fix flaky test
updated schema references from ` allOfRef ` to ` COMPONENTS _ SCHEMAS _ REF ` in ModelResolver . java to improve clarity and
updated EntityDeletedEvent to use JsonUtils for audit data serialization to improve consistency and accuracy in audit logging
added a new constant MI _ GOP in FormatConfiguration . java and updated related methods in DLNAMediaInfo . java and LibMediaInfoParser .
added a new file ` TestProfileReturnTypePrinting . java ` to implement a test for profile return type printing to ensure correct behavior of method return type printing
make parseconfigutils thread safe
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to improve resource management and ensure proper release of operators
danielwagnerhall : fix flakiness in firefox profile test
added @ return annotation to retrieve density value in HasAndroidDeviceDetails . java and updated method return type in getSystemBars ( ) to improve code cl
remove dead bug from project stats
bugfix # 233 , disable shadow and foreground label on gtk
removed redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check for empty recurrence fields in ScheduledAction . java and implemented a corresponding test case in ScheduledActionTest . java to ensure that
replaced the upload button with a single upload action menu item in ShareActivity . java to streamline the upload process and improve user interaction
refactor multiple Java files related to message expression handling to improve code organization and maintainability
added ` loadExchangeMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an input stream to
added a WritableSerializer to serialize Writable objects in CrawlDbReader . java to enable serialization of Writable objects for improved data handling
no functional change - remove unused test
updated the ` @ Component ` annotation in ` MDNSDiscoveryService ` to include a ` ConfigurationPid ` parameter to enhance service configuration by specifying the
added null check for messageItem before calling scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization to include a custom ForkJoinWorkerThread parameter to improve thread safety during concurrent execution
removed redundant assertions for DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline tests by eliminating unnecessary dependencies
added a method ` deDupWithTableInfo ( ) ` to ` PartInfo ` and refactored the ` deDupWithTableInfo ( ) ` method
updated formatting in multiple Java files to improve code readability and maintain consistency
added transformation matrices for the logo sprite in BitmapFontTest . java to ensure proper scaling and visibility of the logo image in the rendering process
[ hotfix ] [ python ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink
refactor ` hasPendingEcho ` and ` markPendingEcho ` methods in ` EndpointState ` , ` Gossiper ` , and `
added a method to retrieve unreachable token owners and updated method names from ` isUnreachableMembers ( ) ` to ` isUnreachableTokenOwners ( )
apps - 2679 do n ' t change to multiplication when there be no multiplication
updated content type handling in FormAuthenticator and SavedRequest classes to ensure default content type is set when none is provided
refactor XToolkit to ensure local graphics environment is not null to improve error handling and prevent potential NullPointerExceptions
fix checkstyle issue in java / awt / job / abstractjob
replaced ` synchronized ` with ` ReentrantReadWriteLock ` for concurrent access to ` metaLock ` and ` metaWriteLock ` in ` EnvironmentImpl .
added a test for reading identity providers using ZONE tokens in IdentityProviderEndpointsMockMvcTests . java to ensure that the identity provider correctly handles
updated job scheduling to use ExpireJob and added null check for timestamp to ensure proper job expiration handling and prevent potential NullPointerExceptions
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 5078 ] fix rebalance push not send heartbeat ( # 5072 )
added a method to retrieve and retrieve detachedMkDirMode in multiple configuration classes to allow dynamic configuration of directory creation behavior
[ java ] add a pause when there be a low follower .
change default label from author3 to auth
replaced direct calls to getCxxPlatform ( ) with CxxPlatforms . findParseTimeDeps ( ) in DBinaryDescription and DLibraryDescription
refactor GoogleCloudAPI to improve service disposal logic and ensure proper cleanup of OAuth services to enhance resource management and prevent potential memory leaks
camel - 16400 : camel - core - optimize the file consumption to avoid reflection .
added a boolean flag ` reopenReaders ` and modified the conditional check for file existence in ` SolrCore . java ` to allow configuration of reopening
[ fix ] add dialect attribute to mapwriter
added methods ` currentDate ( ) ` and ` currentTimestamp ( ) ` to the ` Update ` class and corresponding tests in ` UpdateTests
added a dup method in mmm Attr . java and created a new class PrimitiveTypeInBoundForMethodRefTest . java with a map method for
refactor assertions in AddConfigWidgetTest and RequestPinItemTest to use lambda expressions instead of anonymous inner classes to improve code readability and
replaced Term and TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve query performance by using a more efficient scoring mechanism
removed unused imports from ConcurrentClassLoadingTest . java to improve code clarity and reduce unnecessary dependencies
added direct nearby upload preferences to the CommonsApplicationModule to enhance user experience by allowing direct access to shared preferences
added support for handling " SYSIBM " and " SYSDUMMY1 " database modes in Parser . java and Mode . java to
updated logging statements in TraceGatewayEnvironmentPostProcessor . java and added conditional annotations in SamplerAutoConfiguration . java to improve code readability and
added last pid property handling to POIXMLProperties and corresponding test cases in TestPOIXMLProperties and TestHPSFProperties to ensure correct retrieval of
[ geot - 4071 ] fix npe when no data be present
added error handling and refactored command execution in CliDriver . java and SessionState . java to improve code organization and ensure proper resource management to en
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated ` MockRestAdapterTest ` to use ` Func1 `
refactor selectByRuleIdSet method to use a partitioned list for ruleIdSet to improve code readability and organization to enhance maintainability
refactored exit description handling in ExitStatus and AbstractStep classes to use a dedicated method for adding exit descriptions to improve code clarity and
fix multiblock render when click right click
rename columnfamily to columnfamilycolumn to avoid confusion
removed unnecessary import of java . util . Collections to streamline code and improve readability
refactor ` buildUIAlertView ` and ` buildUIAlertController ` methods to use ` UIAlertController ` instead of ` UIAlert
updated the method call from ` params . buildBuildTarget ( ) ` to ` nativeLinkable . buildBuildTarget ( ) ` in ` PythonUtil . java
updated the parameter name from arrayValue to values in the ofArray method to improve clarity and consistency in parameter naming
added a null check for the message in AdvServiceTest . java to ensure that the item message is not null to avoid potential null pointer exceptions
refactor key handling in MappingMongoConverter to improve type safety and clarity to enhance readability and maintainability of the code
updated logging statement formatting in NearbyMapFragment . java to improve readability and consistency of logs
camel - 16400 : camel - jbang - fix deprecation warning in camel - jbang
updated FuzzyLikeThisQuery to use MultiFields for term retrieval and added a test for non - existing fields in FuzzyLikeThisQuery
refactor application link handling in HtmlCoreReport . java to use a boolean flag for tabularList to improve code readability and maintainability to en
[ ds - 3952 ] use dspace . identifier . factory instead of dspace . utils . slf4j . logger instead of dspace
replaced ` bytes . length ` with ` bw . length ` in ` assignBytes ` method calls to ensure correct length is used for byte assignment
added a return statement to the getDisplayScript method to indicate that the method does not return a value
simonstewart : fix test failure on firefox
pdfbox - 4892 : create a copy of cosobjects to avoid concurrent modification
added a check to ensure active interfaces are not empty before proceeding with network configuration updates
added a method to retrieve embedded objects from a HSSFShape container in HSSFWorkbook . java to improve handling of nested objects in the workbook structure
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies by eliminating unused imports
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity and consistency
added a check for " Symbol " in the BaseFont class to ensure proper handling of font names starting with " Symbol "
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourglass . java ` to
refactor LiveTvGuideActivity to use a private Calendar instance for managing guide start and end dates to improve code clarity and ensure accurate
updated MockGateway and MainMockTransformer to use Whitebox for method retrieval and added CommonParentTest class for testing to enhance method resolution and
added calls to ` findInLdLibPath ( " libFreetype . so " ) ` and ` findInLdLibPath ( " libFont
refactor variable expression handling in FunctionParser . java for improved clarity and structure to enhance readability and maintainability of the code
[ gr - 25809 ] do n ' t allow non - overflow guard in loop optimization .
[ flink - 30613 ] [ table - planner - blink ] fix classnotfoundexception in typeframemodeling
added a new ` LocalizedString ` class and refactored related methods in ` Formattable ` , ` Attr ` , and ` Resolve
added a new boolean property ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` , and updated conditional logic in ` Default
make audioformat array final in dataline
updated default retries value from 0 to 2 in Reference . java and updated assertions in AnnotationPropertyValuesAdapterTest . java to increase the default retry value for
added functionality to load settings from a JSON file to enable dynamic configuration of texture packing options
replaced ` setProgressTextFormatPattern ` with ` setText ` for ` imagesUsedByWikiTextview ` in ` AchievementsFragment . java `
added multiple calls to ` startAnnotationProcessingRound ` and ` endAnnotationProcessingRound ` in ` TranslatingJavacPhaseTracerTest . java ` to
updated category information retrieval in CategoryInterface . java and added a new CategoryInfo class with getter methods in MwQueryPage . java to enhance category
updated assertions in AuthzAuthenticationRequest to use varargs for username and password to improve readability and maintainability of the test code
added accessibility support for taskbar visibility in TaskbarStashController to enhance accessibility features for better user experience
added exception handling for NoSuchElementException in GenericSignatureParser . java to ensure that NoSuchElementException is thrown when processing signature input
updated access flag handling in ClassVisitorDriverFromElement and added tests for generic interface and enum stubbing in StubJarTest to ensure correct
added null checks for the input parameter in IntervalFilter and LowpassIntervalsSource to ensure robustness by preventing potential NullPointerExceptions
added tests for the ` EntrySet ` iterator functionality in ` MapInterfaceTest ` to ensure proper handling of ` NoSuchElementException ` and ` NoSuchElement
added a serialVersionUID field to TreeMap class to ensure compatibility during serialization and deserialization of TreeMap instances
updated image creation time conversion from milliseconds to seconds in ImageData . java to ensure correct conversion of timestamps for accurate data representation
singularws : add locus command for locus2d
added encryption keys for accounts in AccountRemovalJob to enhance security by using private and public keys
updated keep - alive header handling in JDKAsyncHttpProvider and AsyncHttpProviderUtils to use a dedicated method to improve code readability and maintainability
fix postjoinmapoperation when map do not have interceptor
danielwagnerhall : do n ' t use custom inlining for text and comment in standard dialect
[ hotfix ] [ table - common ] remove unused spillenabled parameter
refactor environment variable handling to use a dedicated method to improve code readability and maintainability by reducing duplication
ww - 4892 fix typo in defaultactionmapper
added SerializableMode import and corrected formatting in PluginSwitch . java to enhance serialization support and improve code readability
improve error message when field injection point be nullable
refactor SQL query handling to support isolation level in select statements to enhance compatibility with DB2 database operations
refactor HiveConnection to use constants for transport and transport modes to improve code readability and maintainability by avoiding magic strings
added an override for the isCacheable method in GlobalOrdinalsWithScoreQuery to return false to ensure that caching is not supported in this query implementation
added a new file TestStrangeControl . java that implements a test for StrangeControl functionality to test the behavior of StrangeControl to ensure that
updated file generation paths in JsFile . java and JsLibrary . java to use " % s . jsfile " instead of " % s . json
added methods for setting and getting selection indices in ShadowEditText to enhance functionality for managing text selection positions
refactor grpc server start to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a ` path ` parameter to the ` use ` method in ` Jooby ` and updated bindings in ` JoobyTest ` and `
added a null check for fst in FreeTextSuggester . java to prevent IllegalStateException when lookup is unsupported
updated newline handling in T4975569 . java and T6729471 . java to ensure consistent newline normalization to improve cross - platform compatibility for
added ABI writer class loading and logging in JavacInMemoryStep . java to improve handling of ABI writer classes during processing
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlwaysInverted to
do n ' t schedule pullrequest immediately if not stop
refactor EnergyEndpointer class to improve code readability and maintainability
refactor component preset handling in ComponentPresetChooserDialog to use ordered keys to improve readability and maintainability of the code
removed unused import of bufferedinputstream from multiple files to clean up the code and improve readability
camel - 18131 - camel - google - spreadsheet : fixed switch / cases indentation see camel - 14540
added a default return value for exported header style in CxxLibraryDescription . java and updated related methods in CxxLibraryMetadataFactory . java to ensure
deleted the file ` Constants . java ` to remove unused code that is no longer needed
refactor key splitting logic in RandomPartitioner . java to improve readability and maintainability of the code
[ gr - 36400 ] fix initialization of jdk . internal . foreign . abi . fallback . fallback link to jdk . internal . foreign
added a new test method ` create ` in ` RoleBindingTest ` and modified the ` create ` method in ` RoleBindingOperationsImpl `
added debug logging statements for session cookie configuration to improve traceability and debugging of session cookie settings
updated the file name generation to use the calendar ' s DAY _ OF _ YEAR instead of a hardcoded value to ensure consistency in file naming conventions
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : blockingblockingsubscribe
added error handling for option usage in ` JavapTask . java ` and created a new test class ` T8033711 . java ` to
removed redundant calls to collect in multiple Java files to simplify code and improve readability by eliminating unnecessary method calls
updated log level from error to warn for fetching new tasks and improved error handling in TaskDriver . java to enhance log clarity and ensure appropriate
[ hotfix ] [ network ] enable tiered storage in gate spec
improve code readability and reduce duplication
added GL20 configuration to Cuboc . java and updated LwjglApplication initialization to enable support for OpenGL 2.0 rendering in the application
no functional change
updated OutputMacroExpander to utilize HumanReadableException and HumanReadableException instead of DefaultSourcePathResolver to improve error handling and provide cle
fix flakiness in simpletestinclustersupport # assertnojobslefteventually ( ) ( # 16400 )
added a condition to check if the input file does not contain a build directory to ensure that duplicate words are not processed further
[ # 7711 ] instructor : instructorfeedbackresponsecomment : add comment list to instructorfeedbackresponsecomment
removed redundant whitespace in the if statement to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` that includes a class ` A ` and a test method ` saveInto ` to verify object
refactor file reading logic to use IOUtils for better readability to improve code maintainability and reduce boilerplate code
added connection pool initialization and error handling in ConnectionPool , JdbcInterceptor , and TestSlowQueryReport classes to enhance connection management and improve
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by capturing a broader range of exceptions
hbase - 27826 lrublockcache . getblock ( ) should return 0 when eviction be in progress
removed unnecessary null check for taskCount in RecentsView . java to simplify code and improve readability
added instance config change listener to HelixBrokerStarter and adjusted sleep duration in HelixServerStarter to ensure proper handling of instance configuration changes
added CoinmateMetadataServiceRaw and CoinmateStatic interfaces and integrated them into CoinmateExchange and CoinmateExchangeService
add miss $ { project . basedir } to error message
pdfbox - 4892 : avoid npe , a suggest by valerybokov
[ beam - 8470 ] add displaydata support to ptransform
replace ` Truth . THROW _ ASSERTION _ ERROR ` and ` Truth . THROW _ ASSERTION _ ERROR ` with ` assertThat `
added a security property to disable MD2 certificate path algorithms to enhance security by preventing potential vulnerabilities
added checks for subcommands and subcommands in OptionData . java to ensure proper error messages are provided for invalid input constraints
updated module - info . java files to reflect new module dependencies
added error handling for server connection issues in IOSImplementation . java to improve robustness by providing meaningful error messages when server errors occur
removed redundant null assignments in LauncherInstrumentation . java and LogEventChecker . java to improve code clarity and ensure proper resource management
refactor exception handling in FileSinkOperator to improve clarity and error logging to enhance error reporting and ensure proper resource management during file operations
added diagnostic printing functionality in SchemaGenerator . java to improve error handling by displaying diagnostic information
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to replace ` SemanticException ` with ` OptiqSemantic
refactor DataSourceMonitorTests class to improve code readability and maintainability
added a set of loaded resource paths to improve resource scanning efficiency by avoiding redundant scans
[ flink - 30613 ] [ test ] fix npe in testserviceutil
added null check for HttpResponse and improved response handling in RoutingInBoundHandler to enhance error handling and ensure proper response management
added a nullable natIp annotation to EkeyConfiguration and updated logging messages to include the host address to enhance logging clarity by providing more context about
updated imports in multiple Java files to use ArrowBufAllocator instead of ArrowBuf to improve compatibility with Arrow ' s memory management system
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks for null or empty buffer buffers in HttpConnection . java and implemented a test for handling requests with a body in RFC2616Base
refactor TimeoutSubscriber to use AtomicReference for better management of upstream subscriptions to improve thread safety and clarity in handling subscription requests
add compaction counter to track the number of starved sstables
added a test annotation to TestOrcTimezone1 . java to ensure proper functionality of the timezone handling tests
updated conditional logic to include substrings for enabled metrics and timers to enhance flexibility in matching enabled metrics based on string patterns
added error handling for JSON processing exceptions in PinotSegmentRestletResource . java and updated return statements in TraceContext . java to improve robustness by
updated the default renderer retrieval logic in JTable . java and added a new test class Test6888156 . java to enhance rendering handling
added a check to ensure the shell is available before adding it to the arguments to avoid potential null pointer exceptions when the shell is not available
updated the number of deleted feed subscriptions from 10 to 1 in DatabaseCleaningService . java to optimize resource usage by reducing unnecessary subscriptions
changed the type of ` testInstances ` from ` List ` to ` Set ` in ` MockitoExtension ` and ` JUnitJupiterTest `
refactor FieldMonitor class to improve code readability and maintainability
removed redundant calls to fileMmapEnableIfSupported ( ) in BTreeMapTest . java to streamline code for better readability and performance
updated iterator initialization in SortedIntList . java and added a new test class SortedIntListTest . java to improve iterator handling and ensure proper functionality of
added unregistering functionality in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management by ensuring proper cleanup of JMX objects
update default buffer size for rocksdb configuration to 64MB
updated the background image parameters in the Style class to ensure the correct background image is used for rendering
replaced ` addArgument ( " message " , f [ 0 ] . getMessage ( ) ) ` with ` addArgumentNoEncoding ( " message " ,
[ beam - 8470 ] [ beam - 8470 ] remove unused pipelinejsonrenderer . tojson ( pipeline )
use mouseinput . BUTTON _ LEFT instead of vector3f in helloaudio
refactor LoopRotateBadNodeBudget class to improve code readability and maintainability
added a ` TypeInformation < ? > ` parameter to the ` convertToMongoType ` method across multiple classes to enhance type safety by allowing
apps - 2892 do n ' t display real unit in input box
danielwagnerhall : fix npe in ` ` sendkeystoactiveelement ' ' for empty key
added methods to getScaledInstance for scaling images with specified dimensions to improve image scaling flexibility and performance
removed unused method ` extendArgumentCheck ( ) ` from ` DBMaker . java ` to streamline the code by eliminating unnecessary parameters
add a call to updateShiftStateNow ( ) in anysoftkeyboard .
removed the DETECTED _ ACTIVITY constant and updated related classes to streamline the handling of detected activity details across the application
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty .
removed unused import of Buildable in AaptPackageResources . java to clean up the code and improve readability
added comments to indicate unused variables to improve code clarity and maintainability by clarifying unused variables
improve error message for invalid upgrade protocol
updated blockMode assignment syntax in P11Cipher . java to improve code readability and maintain consistency in formatting
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated permission checks for plot ownership in Merge . java to ensure proper handling of plot ownership based on user permissions to enhance security by restricting plot ownership
removed deprecated methods for getConversationID in HttpContentResponse , HttpRequest , HttpResponse , and Response classes to improve code maintainability by removing obsolete functionality
tmi - free - tts : use unitselection instead of freetts
refactor ` stripQuotes ` method to utilize ` PlanUtils ` for stripping quotes in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` to
refactor rendering context handling in DLNAResource and Request classes to improve clarity and maintainability of rendering updates
added a list of resolution repositories to the DefaultPluginManager to support multiple resolution repositories for the project
camel - 16400 : camel - cxf - cxf - jaxrs - jaxrs - jaxrs - jaxrs -
refactor PhysicsClient class to improve code readability and maintainability
added JUnit Ignore annotation to SessionTest . java to temporarily disable tests that are frequent due to frequent failure
added initialization of the file object to ensure the file object has a valid name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to provide a placeholder implementation for future removal
add unit test for channel constructor ( # 588 )
added logging functionality and a new StackTraceUtils class in GenericDAOImpl and ForumServiceImpl to enhance traceability and debugging capabilities for
removed the @ Test annotation from FormLoginIntegrationTests to streamline test execution by eliminating unnecessary dependencies
refactor unparseList method to handle parentheses separately to improve code readability and maintainability by reducing redundancy
updated SQL query to use Multimap for retrieving configuration selection to enhance clarity and maintainability of configuration retrieval logic
updated supressWarnings initialization and added support for " jdk . internal . misc . InnocuousThread " in UnsafeAutomaticSubstitutionProcessor . java to
updated JsonTreeReader to throw an IllegalStateException for unexpected JsonElement types to improve error handling by providing clearer exceptions for unexpected input
added handling for " -- " command - line arguments in TestCommand . java and implemented a test for it in ExternalTestRunnerIntegrationTest . java to ensure
added deduplication and indexing methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for deduplication and indexing of Solr documents
[ hotfix ] [ examples ] support flink planner in streaming mode
added a call to clear the database to ensure a fresh state for integration tests
updated the ` Progress ` class to include a ` dispose ( ) ` method and modified the ` displayProgressPercentage ` variable in ` RSSReader ` to
added a check to ensure the parent file is not empty before proceeding to avoid potential errors when the parent path is not valid
added methods to write and close documents in IOUtils . java to improve resource management by ensuring streams are properly closed to prevent memory leaks
updated print statements in JavaBuild . java to include line breaks for runOptions and exportClassPath to ensure consistent formatting of output for better readability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` getRootBox ` and ` dotsPer
added support for custom user search queries in LdapQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance
added default ports handling to NettyHttpServer , DefaultRouter , UriRoute , and FilteredRouter classes to enhance port management by allowing
added checks to ensure that the ThingHandler is initialized before updating the status in SnmpTargetHandler to enhance stability by preventing
add instructors who can submit session in instructor edit page
marked AvailableSettings as deprecated to indicate that this feature should no longer be used in future development
refactor path handling in FileResolverImpl . java and add a new test class WarFileResolverTest . java to improve path resolution logic
updated the string format for newFlushedSize in DocumentsWriterPerThread . java to improve clarity in logging output
fix ( example ) : show unlocalized dirt name in examplemod
updated variable names from ` stripWhitespaceX ` to ` stripWhitespaceY ` in ImageProcessor . java to improve clarity and consistency in variable naming
updated locks calculation to multiply threads to ensure that the locks are loaded in seconds instead of milliseconds
updated the parameter of ` isDeviceLevel ` in ` deserializeFrom ` from ` false ` to ` exactSearch ` in ` TsFileSequenceReader .
( chore ) camel - csv : remove unused parameter
added a dimension for the FList in NavigationShareTab . java to improve UI layout by accommodating dynamic width and height adjustments
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and its usage in ` TestBeiderMorseFilter
refactor multiple Upnp - related classes to improve code organization and maintainability
fix the lens warp not work properly .
added a new test class ` DynamicTest ` to the ` JsonTest ` class to enhance test coverage for JSON conversion functionality
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed exception handling from Exception to Throwable to improve error handling by capturing a broader range of exceptions
updated KubernetesMockServer constructor to accept a HTTPS connection to enhance server performance by allowing connections to securely securely
change defaultjavaloweringprovider to use correct stamp for unary math operation
updated HTTP method handling and allowed options in DefaultServlet and DefaultServletTest to improve compliance with HTTP standards and ensure correct handling of OPTIONS requests
tika - 2088 -- fix for tika - 2087 -- tika - 2087 -- tika - 2088 --
updated exception handling in ShowFileRequestHandler to return a 404 NOT _ FOUND error instead of BAD _ REQUEST to improve error handling by providing more
added handling for Throwable and InvocationTargetException in ReflectorClassWriter . java to improve exception management and ensure proper propagation of exceptions
added a clamp method to the Vector2 class to enable clamping between specified min and max values
added scope handling in the ChainedTokenGranter class to ensure requested scopes are preserved when creating access tokens
refactor BC _ instanceof class to improve code readability and maintainability
fix : do n ' t set save flag to null in editor bottom sheet
refactor UaaUrlUtilsTest to use JUnit 5 annotations and improve test setup and teardown methods to enhance compatibility with JUnit 5
hhh - 15464 - fix nativequery . addScalar method to return basicdomaintype
added a WeakHashMap for font anti - aliasing to improve performance by reducing redundant calculations for font anti - aliasing
use fastarraylist instead of intarraylist
danielwagnerhall : fixing test that fail on ie
[ hotfix ] fix typo in brokerrequestutils
refactor InjectorBuilderImpl to use a map for managing injected instances to improve efficiency and clarity in handling injected objects
updated RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile to improve clarity and
camel - 16400 : camel - echore : avoid npe in echomessage when the value be null
fix jabber connection leak .
updated DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to correct the default load factor for the
added ` getAllDataTypePhysicalVariations ( ) ` method to ` VectorizationContext ` and updated ` VectorPTFOperator ` to utilize
change package name from com . google . zxing to com . google . zxing . client . j2se .
updated conditions for handling overview actions in OverviewState . java to improve clarity and functionality of overview actions handling
added @ Entity annotation to BaseActivityEventEntity class to ensure proper persistence of related entities in the database
added tracing functionality to the TouchInteractionService and modified the SYSTEM _ TRACE constant to enhance debugging capabilities by providing insights into launcher lifecycle events
added a new file ` InvalidOptions . java ` to handle error handling for command - line options to provide a utility for validating command - line
added a check to ensure the number of supported displays differs from the size in DisplayController to prevent inconsistencies between display states to avoid runtime errors
refactor OAuth20UsernamePasswordAuthenticator and OAuth20Utils to consolidate client ID and client secret retrieval into a single method to improve code
changed the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest to enable unwrapping of servlet exceptions by default
added logic to update ShortcutInfo status in PackageUpdatedTask to ensure ShortcutInfo is set to DEFAULT when certain conditions are met
camel - 16400 : camel - seda - allow to configure unbounded queue size
added calls to ` batchUpdateStart ( ) ` and ` batchUpdateEnd ( ) ` in ` Kernel . java ` and ` App . java `
added HttpClient configuration to ThirdEyeApplication to enable HTTP client integration in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable retrieval and setting of job sort order
updated the error handling in CryptoFacilitiesTradeService to use the correct CurrencyPair for canceling cryptoc facility orders to ensure the correct currency pair is
[ web ] hide keyboard after click in algebra view
use native function handle for memory move to improve performance
reformatted the method signatures in ` BindLdapAuthenticationHandler . java ` and ` ResolverTestConfig . java ` to improve code readability to en
make tooltip block by default
updated DefaultDateTypeAdapter to accept a timeStyle parameter and adjusted related date and time formatting methods to enhance date formatting flexibility by allowing
updated playerSet formatting in ListCommand . java to improve clarity and consistency in output representation
added a check to return a List < Z > if the list is empty to avoid potential null pointer exceptions when the list is empty
added exception handling for CommandException in ParametricCallable to improve error management and ensure proper exception propagation
updated the ` getLikeExpression ` method to accept a ` isLike ` parameter and modified related logic in ` VectorizationContext . java ` to enable
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enable proper lifecycle management of stream processing components
updated the ` runChild ` method to set the default locale using available locales from ` Locale . availableLocales ( ) ` to ensure consistent locale handling across
refactor multiple Java - related classes to improve code organization and maintainability across the project
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
add a test case for camel - 9 . x
nifi - 2892 : fix flaky test for nifi - 2892
refactor return type substitutable methods to remove unnecessary parameters to simplify the code and improve readability
added support for different throttling types in TestExecutor to enhance flexibility in handling different throttling scenarios
removed unnecessary variable assignment for pixel and argb in ColorBleedEffect . java to simplify code and improve readability
refactor Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface ` Model ` in ` org . apache . poi . hssf . model ` and updated ` Sheet ` to extend
( chore ) camel - http : use default filter pattern
added a method to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder classes to allow configuration of whether to reset the entity manager
added null checks for ShortcutInfo before adding a shortcut to prevent potential NullPointerExceptions during shortcut installation
changed the initialization of TwoDimensionalCollectionValuedMap to include a boolean parameter to enhance flexibility in handling collection values
updated exchange specifications from " btc - e " to " wex " in WexExchange . java to reflect the correct domain for Bitcoin and Bitcoin ex
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to avoid NullPointerExceptions to enhance robustness
added a null check for ` files ` in ` SegmentInfos . java ` and created a test for opening a reader after closing ` IndexReader ` to
fix indexoutofboundsexception when use elasticsearch
refactor the calculation of percentValue in DeviceHandler . java to improve readability and maintainability of the code
updated limit checks in RangeInputStream and RangeReader classes to ensure proper handling of negative limit values
camel - 16400 : camel - jbang - show route load duration in debug mode
fix playback of live hl stream with # ext - x - program - date - time tag
updated package declarations for NumericRangeFilterBuilder and NumericRangeQueryBuilderTestCase from ` com . apache . lucene . xmlparser . builders ` to
[ hotfix ] [ datastream api ] [ table - planner - blink ] fix npe in statefuloperatortest
removed null check before setting the bitmap shader shift in Area . java and Line . java to avoid potential NullPointerExceptions when the fill is not initialized
added a method to check if a blockchain exists and updated imports in BlockchainTest and BlockchainTest to enhance database existence validation and improve
replaced ` matcher . getString ( 2 ) ` with ` matcher . getString ( 2 ) . trim ( ) ` for trimming whitespace to ensure
added multiple calls to setAsync ( false ) in Http11AprProtocol . java to ensure the socket is not set as async for improved performance
ggb - 258 fix : do n ' t center the divider in the right place
added health check metrics to PinotControllerHealthCheck to improve monitoring and error handling for controller health checks
hide shared avatars in LocalFileListAdapter to improve user interface by reducing visual clutter
make mow - mow - scss work again
updated conditional checks in BurstSendReceiveUdpPing , SendSendUdpPong , ReceiveSendUdpPong , and SendReceiveUdpPing classes to
added conditional logging for fine - grained command execution in LogInterceptor . java to ensure commands are only logged when not already logged
replaced CountDownLatch with awaitWaitUntil for span completion in EventBusTracingTestBase to improve test reliability by ensuring spans are finished before proceeding
replaced ` Locale ` with ` Locale . getDefault ( ) ` in the ` parse ` method and updated its usage in ` QueryParser . java ` to
fix entryCustomization dialog to be consistent with other set
jbrules - 2835 : make rulebaseimpl and mannerstest public to allow subclassing
pdfbox - 4892 : add ocsp response , a suggest by valerybokov
added a volatile variable ` serverState ` and modified server state handling in ` SSL . java ` to ensure proper synchronization and error handling for server operations
added a new counter for tracking the number of open connections in the Avro source to improve monitoring and management of active connections in the application
make executionstrategy . execute ( ) public so it can be use in test
refactor the ` createDefaultJavaPackageFinder ` method to accept a ` Set < String > srcRoots ` as a parameter to improve code clarity
replaced direct instantiation of Writer with a PrintWriter to improve flexibility in output handling
[ hotfix ] [ test ] use uuid to avoid collision
added support for DataTable in JRubyStepDefinition to enhance compatibility with Cucumber ' s DataTable framework
changed author visibility from GONE to VISIBLE in SearchImagesRenderer . java and modified image nodes retrieval logic in ApacheHttpClientMediaWikiApi .
refactor ReadSentimentDataset class to improve code readability and maintainability
improve error message when formula parse fail
added bind address support to WebSocket connections to enhance flexibility in managing WebSocket connections
[ java ] do n ' t close clustered medium driver when close it .
refactor the width and height assignment logic in WidgetGroup to use a dedicated method to improve code readability and maintainability
changed the type of sessionFixationAttribute from Boolean to Boolean for better clarity to improve type safety and avoid potential null pointer exceptions
fix ( lalogiclinesfragment ) : add edge option
danielwagnerhall : add a linear backoff mechanism to the chromebinary .
added ` HttpMethod ` and ` HTTPRoute ` attributes to ` ClientResponseWrapper ` and ` WebClient ` in ` TraceExchangeFilterFunction `
do n ' t purge cf in precompactedrow by default
updated rendering intent handling in ICC _ Profile and added InvalidRenderIntentTest class in ColorConvertOp to ensure correct processing of rendering intents
[ # 7071 ] add ` ` notsure ' ' parameter to ` ` submit question ' ' form ( # 7072 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java ` to ensure
[ hotfix ] [ connector / kafka ] remove unnecessary serializable interface
added support for PGConnection in PooledConnectionImpl and added a test for PGConnection in BaseDataSourceTest to ensure proper connection handling and enhance error
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption configuration in TokenAuthenticationHandler . java to provide clearer information about the absence of a token encryption
marked the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated the handling of UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl . java and added topology update
refactor NamedListCodec to improve handling of iterator types and add tests for iterator functionality to enhance the robustness of NamedListCodec and
fix npe when assign completely lose partition
added inclusion rules for schema crawling in ApiExample . java to enhance schema validation by restricting access to public schemas
updated the expected value from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected value for the mean variable
added coordinate sequence validation for polygon creation in SDO . java and corresponding tests in SDOCreateTest . java to enhance robustness by
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to ` ConstantPool ` for retrieving the base name and dimension count to
added a method to set debug evaluation output in HSSFFormulaEvaluator , FormulaEvaluator , and SheetUtil classes to facilitate debugging by
test : migrate testmodule to junit 5 ( # 4530 )
updated ExoPlayerProfile instantiation and modified playback control logic in PlaybackController to ensure proper handling of live TV playback preferences to enhance user experience by
added a return statement in DynamicStyleBar . java to ensure proper termination of the method execution
added logging statements for database property settings in Utils . java to improve traceability and debugging of database property configuration
refactor ReactiveAuthorizationManager class to improve code readability and maintainability
added a check for boolean types in MethodEmitter . java to ensure proper handling of boolean types in type promotion logic
truffle : fix npe when nullify a frame
refactor multiple Java files to improve code organization and maintainability across the project
add unit test for caffeine cache configuration
added a method to calculate the bounding box for vertices in Mesh . java to ensure proper handling of empty vertex attributes and prevent runtime exceptions
added a target hash function option to the TargetsCommand class to allow users to choose between SHA1 and MurmurHash3 hashing algorithms
refactor DefaultConfigurationProperties class to improve code readability and maintainability
added high - light color and alpha settings to ListViewMultiChartActivity and BarChart to enhance visual distinction of data visualization in the chart
remove pgsgpathplanmap from pgsgpathplanmap to avoid npe
camel - infinispan : fix unit test for camel - infinispan
added a check to remove existing artifacts and implemented a lock mechanism in MavenArtifactFetcher and MavenDependencyResolver to ensure proper resource management and
updated fragmentShader string to include a conditional check for GL _ ES to ensure compatibility with GL _ ES before applying shader initialization
updated ` RSGroupInfo ` constructor to use ` Set < Address > servers ` instead of ` SortedSet < Address > servers ` for improved performance to en
added a try - catch block to load the JSP configuration class and modify logging level to debug in TagLibConfiguration . java to improve error handling and
added version handling for default match in CustomAnalyzer and refactored test cases in TestCustomAnalyzer to improve version accuracy and enhance test coverage
added a test to verify that the ` getPackageArchiveInfo ` method reads values from a set package archive info to ensure that the ` PackageInfo `
updated method invocations to use MethodUtil for package access checks to enhance security by ensuring proper access control for method invocations
added event handling for progress updates in GradleBuildService and modified progress listener in Main to include task and project configuration events to enhance tracking of
no logical change - code cleanup
do n ' t throw poolinitializationexception when initialization fail
removed the ` timeOut ` parameter from the ` getResult ` method and added a ` error ` method in ` Net . java ` to simplify the method
changed the isNative variable from a boolean to a transient boolean and updated related logic to ensure that the isNative variable is serialized to prevent data loss
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` to improve clarity
fix some javadoc typo .
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity in authentication request handling to enhance debugging information for better trace
[ hotfix ] [ test ] fix typo in kafkasourcetablefactorytest
updated repository owner check to handle null repository references to improve error handling and provide user feedback when the repository is not found
added support for additional font extensions in SunFontManager to enhance compatibility with additional font formats
refactor type matching logic in AnnotationMatcher to improve clarity and correctness in determining if the argument is a fully qualified class name to enhance accuracy in
change the argument from " OFF " to " SEVERE " in the Grep class from " OFF " to " SEVERE " to provide
added a check for debug level before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is disabled
rename variable ` includes ` to ` excludes ` for clarity to improve code readability and maintainability
added a conditional check for ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` in ` Launcher . java ` to ensure that the home intent is
updated the maximum bitrate from " 110 " to " 30 " in the PMS configuration to optimize resource usage for better performance
removed duplicate code for retrieving options in CommandLineParser . java to simplify code and improve readability
modified the return statement to trim whitespace before returning the description to ensure consistent formatting of the description returned by the method
updated the path for the output filename in XOMParserTest . java to simplify the file path for better readability
improve log message when process be not in our list
added getloaded Music and getloadedSound methods to MusicLoader and SoundLoader classes to provide access to the loaded Music and Sound objects
updated import statements in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecordRule import and annotation to RequestPinItemTest . java to enable screen recording for test case b / 215673732
svm : disable lr pause button in cpufeature and memoryfeature
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` for managing account preferences to simplify preference handling and improve code clarity
of - 2599 : send available presence to xmppconnection .
replaced direct instantiation of StringBuilder with a conditional initialization based on utflen to optimize memory usage by initializing StringBuilder with appropriate initial capacity
disable statsd by default
updated exception handling in InterruptedException . java to improve clarity and maintainability of exception management
refactor ServiceTicket class to improve code readability and maintainability
updated SSL handling logic in ConnectionCheckOperation . java to improve clarity and correctness of SSL connection attempts
camel - 16400 : fix argumentarraymessagemapper to work with map type
[ ds - 3952 ] update community item filter to work with new community item
added a FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the PasscodeActivity to ensure that the activity is reordered in the
refactor ( patternparameterconfigurator ) : remove deprecation of patternparameterconfigurator
changed the return type of the ` beginDraggingWidget ` method from void to boolean and added a null check for the drawable in ` beginDraggingWidget `
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root in DynamicStyle . java to prevent potential NullPointerExceptions when accessing tabbedPane components
make maxenttagger and sentence confusion matrix configurable
rename variable to avoid confusion
added unit tests for the ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest . java ` to ensure
polish ` ` fix typo in propertybindingsupport ' '
added " clone " and " finalize " methods to the objectMethods set and modified lazy loading logic in ResultObjectProxy . java to enhance object loading
added null checks for counters in IntegrationTestBigLinkedList . java to ensure proper error handling and logging for insufficient YARN configuration
implement cangetinstanceinfo ( ) in debugger .
updated the ` setRegisteredServiceFilter ` method to use ` serviceId ` instead of ` SamlRegisteredService ` to enhance filtering logic to ensure
added a null check for getActivity ( ) before calling runOnUiThread to avoid potential NullPointerException when getActivity ( ) is not initialized
rename logger to avoid confusion
added stringType property and its getter / setter methods in DatabaseAdaptor and JDBCSessionDataStore classes to allow dynamic type handling to enhance flexibility
updated assertions in UIMAUpdateRequestProcessorTest to use suggested category instead of language to improve clarity and accuracy of test cases related to category
replaced calls to ` callerInfo ` with ` updateThreadName ` and ` resetThreadName ` methods across multiple classes to streamline thread name
refactor TaskletAdapter class to improve code readability and maintainability
drools - 4892 : fix npe when dmn model be null
fix splash screen not work on macos
added tooltip text to the showCGCP checkbox to improve user interface clarity
replaced ` addTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory `
[ hotreload ] add text and description to hotreloadflutterapp .
apps - 2088 use stringtemplate instead of string for column label
changed the type of BNESS _ FACTOR from intValue ( ) to double for BNESS _ MAX in BindingConstants . java to allow for
fix sscm history parser to handle date correctly
added an ` isAdmin ` parameter to the ` createUser ` method and implemented the ` listUsers ` method in ` HomekitAuthInfoImpl ` to
added null checks for indexedWriteMethod and updated equality checks in Introspector and PropertyDescriptor classes to ensure proper handling of void return types and
updated logging statements in DynatraceExporterV2 and DynatraceExporterV2Test to use placeholder syntax to improve code readability and
updated method signatures in Context . java and Request . java for consistency and clarity to improve parameter naming to enhance code readability and maintainability
add ability to set the capabilities from a sponge builder in the mixer .
[ hotfix ] [ test ] fix test failure in lifecycleutilstest
added checks for contract types before creating smart contracts in Wallet . java and GetContractServlet . java to ensure that contracts are only created
add com . ibm . dtfj . image , com . ibm . dtfj . java and com . ibm . dtfj . java
refactor the add method in DocumentsWriterDeleteQueue to improve thread safety when adding nodes to the tail
updated JavadocTool to ignore duplicate JavaFileObject entries to improve performance by avoiding unnecessary parsing of duplicate files
change the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java from " true " to " false
added support for a list of new user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in handling OAuth token parameters
added a new constant C _ KEY in LanguageFactoryTest . java and updated language checks in LanguageFactory . java and CPPParserTokenManager . java to
replaced instances of ` LinkedBlockingQueue ` with ` MoreExecutors ` and added a new method ` MoreExecutors ` to improve thread management
added caching headers and updated response headers in LoginService and FormAuthenticator to improve response handling and ensure proper caching behavior
improve error message to include exception
updated HSSFTests to use specific test classes instead of AllHSSFUtilTests and TestAllHSSFUtilTests to improve test coverage and
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
refactor classDirectory assignment to handle null output gracefully to improve robustness by avoiding potential NullPointerExceptions
added ExternalResourceControlPriority imports and access controller settings in Java2DRenderer . java to enhance access control management during URI resolution
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure robustness of the build process on Windows environments
updated HotspotThreadMBean to be final and added CPU time test functionality to improve thread management and ensure CPU time validation
added checks for empty comments in TabsAndIndentsVisitor . java to ensure proper handling of empty comment lists to improve code robustness by preventing
updated assertions in TestTriggerIntegration and SimDistribStateManager to allow more flexibility in testing scenarios
updated comparison logic in DatabaseChangeLog , RanChangeSet , and AlreadyRanChangeSetFilter classes to ensure case - insensitive comparison for
added a method to retrieve a string value from a map to ensure proper handling of null values in the map
added date formatting based on user preferences for military time settings in TweetActivity to enhance readability of time display for better user experience
nifi - 1086 - fix npe in standardprocesssession when no connection be establish
refactor keyboard handling in DetailFragment . java to improve focus management to enhance user experience by ensuring keyboard input reflects keyboard state changes
updated the handling of the ` file : / / ` path in the ` App . java ` file system to ensure that the ` canonicalPath ` is
mow - 161 make sure the matrix be initialize before use
int - 1599 added import statement for message class in genericmessage
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintain
replaced ` fireContentsChanged ( this , - 1 , - 1 ) ` with ` setSelectedItem ( e . getValue ( ) ) ` and added a
fix race condition in p2p transport manager .
updated boolean value handling in ArrayPtg . java and added a new test case in TestArrayPtg . java to ensure correct string representation of boolean
updated import statements in PGtokenizerTest . java to use specific assertion methods to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator to improve clarity and maintainability to enhance code readability and ensure correct handling of
added sequence creation and default value setting for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment functionality
updated byte reading logic in DataInput . java to ensure correct handling of negative values in byte processing
removed redundant assertions for vertical physical pixel spacing in ImageParserTest . java to streamline test cases for better readability and maintainability
updated parent assignment in Component . java to ensure correct parent context is used
reformatted import statements in multiple Java files to improve code readability and maintainability
update native crypto test to use free instead of finish
added a start variable and implemented iteration event handling across multiple controllers to enhance the control functionality by allowing iteration events to be triggered
added resource closure for HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent potential memory leaks
added a call to delete logs in TestRecovery . java to ensure logs are removed after each test execution
added a check for " twitter : / / " URLs before loading the URL in BrowserActivity to handle URLs that start with " twitter : /
make deployment group test more reliable
changed the parameter of logResult from false to true in VisibilityController . java to enable listing labels by default
increased the maximum number of auto retries in RestTemplateRetryTests from 0 to 25 to improve test stability by allowing more retries
( chore ) camel - core : fix checkstyle violation
added a new ` FRACTION ` resource and its corresponding converter in ` PackageResourceLoader ` , ` Converter ` , and ` R . java
removed a confirmation check for file existence in BasicFrame . java to streamline the file validation process
added null checks for tagGroupId and artifactId in findNewerDependencyVersion method to ensure required parameters are not null to avoid potential NullPointerExceptions during
hbase - 27864 add quarantine exception to check for table quota in namespace
refactor multiple Java classes to improve code organization and maintainability
updated TestFuzzPreLoop . java file to improve test coverage and reliability
added a check for negative f0 in HTSVocoder . java to ensure f0 is non - negative to prevent potential errors when f0 is
added null check for primary key column before adding them to the foreign key table to avoid potential NullPointerExceptions when foreign key column is not present
do n ' t clear buffer encoders when request be recycle
added SharedPreferences handling for empty screens in Workspace . java to ensure that empty screens are not allowed based on user preferences
log a warning when cucumber - needle be deprecate
refactor ShadowThemeTest and ShadowArscAssetManager to streamline theme handling and improve code clarity to enhance maintainability and ensure
updated import statements in VerifyFast . java to use ` Arrays . toString ( byteArray ) ` instead of ` Arrays . toString ( byteArray ) ` to improve
no effective change - code cleanup
added support for the ` getProto ` and ` setProto ` methods in ` ScriptObject ` and ` Global ` classes to enhance prototype property handling
updated shuffle method in TestFilterDirectoryReader to include a random parameter to enhance randomness in the shuffle process
updated the display of the share display in UsersAndGroupsSearchProvider to differentiate between known and remote clarification based on user context to improve user
added a check for a non - empty path in the CookieRetrievingCookieGenerator to ensure the path is not null to avoid potential null pointer exceptions
removed redundant closing braces in multiple Java files to improve code readability and maintainability
updated cacheName assignment to use a final variable for clarity to improve code readability and maintainability
updated the comparison logic in ValidationResult . java to check if the page number equals the corresponding variable to ensure that the page number comparison accurately reflect
added a null check for the focused widget in UIDropdown . java to prevent potential NullPointerExceptions when highlighting
fix a syntax error in playSoundAtLocationExcept and playSoundPitchRange methods .
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use FlavorDomain instead of FlavorDomain to improve code clarity and maintain
add unit test for clickhouse sql syntax
rename onConnect to onAccept across ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in method naming
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new file ` testGetLoggerNPE . java ` to test logging functionality with security policies to ensure that the ` getLogger ` method
added a ` ConcurrentHashMap < Object , Object > ` to ` PathSharingContext ` and replaced it with ` ConcurrentHashMap < Object , Object > `
[ gr - 25809 ] fix unsafe access to unsafe object .
added support for handling " NEXT VALUE " in NextValExpression and updated related test cases to enhance expression parsing capabilities and improve test coverage for
improve error message for unsupported feature
updated write buffer handling in BoundedLocalCache . java and added a new test for clearing pending writes in BoundedLocalCacheTest . java
added " Leverage _ Level " parameter to QuoineExchange and QuoineNewMarginOrderRequest to configure order direction in QuoineExchange
added ` boundInitialization ` method to ` PropertyDescriptor ` and created a new test class ` Test7192955 ` to ensure proper initialization
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` setDisplayModeCallback ` in ` LwjglGraphics . java ` to streamline
added null check for buttonsAwatingRelease in the Form component to prevent potential null pointer exceptions
refactor wrap width calculation in LineCell . java to improve readability and maintainability of the code
fix typo in error message
change parameter order from HashMap to LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to ensure consistent iteration order for parameter values
refactor string concatenation to use String . format for better readability to improve code maintainability and clarity in string formatting
simplified the retrieval of the namespace URI from XMLStreamReader to improve code readability and maintainability
added nestedJoins configuration to TestAll , TestBase , and TestNestedJoins classes to enable support for nested joins in the testing framework
server : do not allow admin to be specify by root admin only
added a cursor parameter to the CompletionTaskProcesor constructor and updated related methods to include a cursor parameter in the CompletionTaskProcesor constructor to
added Hive configuration settings for METASTOREURIS and authorization manager in TestMsgBusConnection . java to ensure proper initialization and management of Hive authorization
[ hotfix ] [ test ] use hamcrest assertion instead of junit assertion
use util . createhandler ( ) instead of create a new handler
fix ( ilp ) : fix symbolmapreaderimpl . offsetmemorysize ( ) to use long . bytes
removed unused print statements from TermFilterTest . java to improve code cleanliness and reduce unnecessary console output
removed the ` Reflection . java ` and ` TypeConverters . java ` files from the ` jooby . internal . guice ` package to
replaced ` sharedExecutor ` with ` isFinished ( ) ` and ` setWaiting ( boolean ) ` methods in ` ThreadlessExecutor ` and
added error handling for DateTimeException in DateTimeFormatter . java to ensure proper formatting of DateTimeExceptions to avoid runtime exceptions
renamed ` CHUNK _ LENGTH _ KB ` to ` CHUNK _ LENGTH _ KB ` for consistency and clarity to improve code read
added a new class WILDCARD case handling in mmm Types . java and created a new class T7034495 . java with generic methods
updated loop structure in LotsOfEvents . java to remove redundant while loops to improve code readability and maintainability
transclusiondeciderule : fix typo
do n ' t print micronaut version if it ' s not available
added assertions for print _ area in TestBugs . java to enhance test coverage for print _ area functionality
added a description parameter to the MindIcon constructor to ensure that a valid description is provided when creating a MindIcon instance
updated onHomeIntent method to accept an internalStateHandled parameter to enable control over the internal state handling behavior
refactor dependency tree preference logic in CxxBuckConfig . java to simplify code by removing unnecessary default values
added a new method ` showDetails ` to ` ContactsPreferenceActivity ` , ` FolderPickerActivity ` , and ` FileDetailFragment `
updated function names from " $ apply " to " apply " across multiple classes to improve clarity and consistency in function naming conventions
added a capacity check and randomized253 state generation in MinimalEncoder . java and HighLevelEncodeTestCase . java to ensure proper handling of
updated header information in SourceBuilder . java to include additional fields to enhance clarity and consistency to improve output formatting for better readability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter reflects changes in data changes
removed the defaultWALSyncMode method from ShadowSQLiteConnection to streamline the code by eliminating unused functionality
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections . java to improve type safety and ensure correct handling of generic types
( chore ) camel - aws2 - s3 : remove unused getter and setter
updated error message for corrupted stream length in parser test .
include the content of the collection in the failure message
do n ' t throw bailout on error in graalcompiler
mow - 169 make pen image large enough to fit on window
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the order book adaptation methods to allow for more control over the number of results returned in the order book
rename ` GotWrongOOMEException ` to ` HeapOOMEException ` across multiple files to improve clarity and maintain consistency in naming conventions
[ hotfix ] [ table - common ] make streamreadconstraints configurable
updated the retrieval of enabled engines from configuration to use an empty string instead of configuration to ensure that the application can handle empty enabled engines gracefully
updated exception messages in TimerWheel . java and TimerWheelTest . java to improve clarity and consistency in exception handling
improve error message when generate customized bug pattern
updated assertions in LocalChunkProviderTest to use a constant for wait chunk timeout to improve code readability and maintainability
changed the visibility of the menu item from true to false to disable the uncomplete checklist functionality
refactor ResultMap handling in DefaultResultSetHandler and introduce Contract class with associated methods to improve code clarity and ensure proper handling of result maps
added null check for defaultHome in OverviewComponentObserver . java to ensure proper handling of package updates when defaultHome is null
removed unused imports from PumpImpl . java to improve code clarity and reduce unnecessary dependencies
removed unnecessary casting of mContainerActivity to FileDisplayActivity to simplify code and improve readability
trim whitespace from configuration attribute values in ConfigAttributeEditor . java and add a new test for whitespace handling in ConfigAttributeEditorTests . java to ensure that
refactor multiple auxiliary classes to improve code organization and maintainability
[ gr - 27826 ] fix classnotfoundexception when classnotfoundexception be throw .
updated the handling of the ' r ' case in DatabaseMetaData . java and DatabaseMetaData . java to differentiate between " SYSTEM TABLE " and " pg
chore : update gapic - generator - java to 2.0 . 0 and update gax - java to 2.0 . 1 (
updated rqst field definition and case handling in ThriftHiveMetastore . java and HiveMetaStore . java to improve clarity and consistency in
added a new module - info . java file for the com . speedment . runtime . core package to define module exports and dependencies in the com .
added handling for encrypted output in SslConnection to ensure proper flushing and flushing behavior based on fill state
updated Log4j2LogDelegateFactory to implement LogManager and added NoExceptionInInitializerErrorTest class to enhance logging functionality and ensure
refactor server VM detection logic in ExecutionEnvironment and TestHelper classes to improve clarity and maintainability of the code
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and readability
updated the import statement for LibPQFactory from " org . postgresql . ssl . null " to " org . postgresql . ssl .
disable interprocess semaphore test by default
added case - insensitivity to resource names in EditableResources . java to ensure resource names are processed in a case - insensitive manner
added a new class ` OSvTerminal ` and integrated it into ` TerminalFactory ` and updated ` TerminalFactory ` to support OSv terminal emulation
added support for additional file extensions in ClassType to enhance compatibility with additional file formats
replace ` HashMap ` with ` TreeMap ` for combined vectors in ` DrillTestWrapper . java ` to ensure predictable ordering of vector
updated the loop condition in XPathEntityProcessor . java to ensure that the loop only processes elements with valid names and values
refactor WebSocketPolicy class to improve code readability and maintainability
refactor ` readPhoneStatePermissionGranted ` and ` setReadPhoneStatePermission ` methods to ` setReadPhoneStatePermission ` and `
camel - 16400 : camel - core - optimize message resolution to not use template
refactor Class instantiation to use generics for ClassVisitor and ClassVisitor subclasses to enhance type safety to improve code clarity and reduce casting errors
added a new file LoggingAuditService . java that implements UaaAuditService for logging user authentication events to facilitate tracking of user authentication
added null checks for temperature and fahrenheit parameters in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance
fix : do n ' t generate proxy injection for abstract class
camel - 16400 : camel - http - allow to turn off http proxy by default
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to reflect the latest encoding requirements
added a call to ` jdk . internal . util . StaticProperty . jdkSerialFilter ( ) ` in ` System . java ` to filter
( chore ) camel - jbang : improve log for pool usage
removed the ` forceFinished ` parameter from the ` forceFinishScroller ` method across multiple classes to simplify the method signature and improve usability
updated parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in ` ensureRealtimeClusterIsSetUp ` method to improve clarity
added ` isError ( ) ` and ` error ( ) ` methods to ` ValidationReport ` , ` DisallowValidator ` , and `
updated inline QSB handling in InvariantDeviceProfile . java to use closestProfile ' s inline QSB for portrait and landscape modes
updated ` createClassPath ` method to throw ` Exception ` instead of ` StringIndexOutOfBoundsException ` to improve error handling by preventing potential URL encoding issues
updated regex patterns in TransformSteps . java to improve accuracy in matching method parameter names
add null check for image before fill rectangle to avoid npe
increased the timeout duration in FaultToleranceTest from 60 seconds to 60 seconds to allow more time for external nodes to complete before assertions to allow more time
updated package - info . java files to improve documentation clarity
added a method to set the Docker image URL to enable dynamic configuration of the Docker image URL
added multiple garbage collection calls in KnowledgeAgentTest . java to ensure proper resource management during tests
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
refactor file copying logic into a separate method ` copyFile ` to improve code readability to enhance maintainability by encapsulating file copying logic
renamed ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in method naming conventions
[ api ] fix crash when call todevice ( ) in functioninfo
added a check for Xml . Document before calling findIndentXmlVisitor methods to avoid potential ClassCastException when processing XML documents
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` and added ` @ RunWith ` annotations to test classes to ensure compatibility with
added gas and difficulty limit rule to commonconfig .
changed the access modifier of ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java ` and removed it
rename ` autocommit ` to ` runInTransaction ` across multiple files to improve clarity and consistency in naming conventions
fix nullpointerexception in tripleserverstream .
updated URLs in JobManagerOptions and RestartStrategyOptions to include the Site . BaseURL in their respective documentation files to improve clarity and consistency in the
added a new test method ` testIssue154 ` to the ` SelectTest ` class to verify SQL parsing and deparsing to ensure SQL queries involving
refactor Common class to improve code readability and maintainability
refactor app launch handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
[ hotfix ] fix checkstyle violation in streamdeduplicate
log exception when send kafka message to topic
[ dataes - 9 ] add support for non - immutable property accessor in dataes - 9
changed the return type of the setCoord method from void to boolean and updated its logic in GeoCoordSys1D and GeoSegment3D classes to
added logging for swipe events in AskGestureEventsListener to improve debugging and tracking of swipe interactions
hunspell : fix compareTo ( ) in ngramestimator
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple Java files to align with the
updated method calls in StatsLogCompatManager to use folder icon properties to improve clarity and functionality of folder icon representation
updated server name check from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new test class ` TestSkeletonPredicates ` for testing skeleton predicates to ensure correct behavior of ` - XX : - UseLoopPredicate
updated the ` equals ` method for improved object comparison and added a ` hashCode ` method to ensure proper hashing functionality to enhance the correctness and performance of object equality checks within
added a new ` StringResultConverter ` class and updated ` AsmRuntime ` and ` AsmUtil ` to handle ` Pointer ` instead of `
( chore ) camel - test - infra - apache - ci
updated the condition in JansiWinSysTerminal to check if the result of WaitForSingleObject is zero to improve clarity and correctness of the waiting condition
updated buffer handling in BufferUtils . java to ensure proper buffer management and prevent potential null pointer exceptions
updated the assertion in TestSolrDiscoveryProperties to include " data " property to ensure the test verifies the correct data directory path format
updated OS detection logic in AutoUpdaterServerProperties . java to correctly handle Windows and Mac OS versions to ensure proper OS identification for macOS environments
replaced ` File ` with ` String ` for the ` lockName ` parameter in ` Lock ` constructor to improve clarity and consistency in handling lock file
replaced ` getAppIconByClass ` with ` getAllApps ` for better clarity to improve code readability by using a more descriptive variable name
updated references from ` Invocable ` to ` ClientDatagramEndPoint ` for better clarity and consistency to improve code readability and maintainability
changed the SQL query format in GET _STEP _ EXECUTIONS from " oreder by step execution ID " to " order by step execution ID
modified button handling in LwjglInput . java to ignore unknown buttons and improve code clarity
added test cases for submitting claims with URL - encoded formulas in TaskRestRepositoriesIT . java to ensure proper handling of formulas in workflow claims
refactor logging statements to use a static final logger instance to improve code readability and maintainability by reducing redundancy
removed the MINUTES parameter from the expiration time check in SsoAccessTokenProvider . java and updated related test cases in SsoAccessTokenProviderTest
[ geos - 10641 ] skip test for macos - github - build
added new methods to handle alarm suppressions in GreetResourceMockedTest . java and ListAlarmSuppressionResponse in OciMetricsC
reformatted conditional statements in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to improve null safety and prevent potential NullPointerExceptions
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to streamline metrics handling to improve code clarity
updated the handling of file and folder counts in OCFileListFragment . java to improve readability and maintainability of the code
camel - 16400 : camel - core - optimize to reduce memory usage
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to verify the functionality of ` MyThreadFactory ` to ensure proper behavior of thread management in
updated lock period retrieval to support dynamic properties to enhance flexibility in lock period handling based on dynamic properties
added a new TicketModel instance to the EditTicketPage to enhance ticket management functionality
enable dimiss apps from predicted list by default
updated constructors in multiple assertion classes to include a ` Class < S > ` parameter to enhance type safety and clarity in assertion methods
added quoting functionality to the TweetActivity to enhance user experience by allowing users to quote tweets
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5584 : j
do n ' t use passthrough codec for direct playback
added a conditional check for the result before offering failure in ServerHTTP2StreamEndPoint . java to ensure that failure handling only occurs when the result is
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to improve cl
added @ ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety for the class during concurrent execution
fix mockrestadapter to not call onsubscribe on unsubscribed subscriber
reformatted error handling for creating components . yml file in ComponentPresetManager . java to improve code readability and maintainability
added support for unique column names in Hive configuration to enhance data integrity by allowing specification of unique column names
do n ' t update example text if the voice be select
added a check for invalid session state and improved exception handling in Session . java and SessionHandlerTest . java to ensure that invalid sessions throw an appropriate
hhh - 16464 - remove unused exceptionhelper . java
updated keyPairGenerator initialization from 256 to 255 to ensure compatibility with updated security standards
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure consistent postings format handling
[ hotfix ] [ runtime ] add log for empty checkpointrange
added support for RSA / ECB / OAEPPadding algorithms in the OperatorHelper class to enhance compatibility and error handling for algorithm creation logic
updated platform checks from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with macOS architecture
added a warning log for unresolved URIs in DebugSourcesResolver . java to improve error handling and logging for resource resolution failures
modified the condition to check if the operating system is Unix to ensure proper handling of socket types based on the operating system type
updated ` FileUploadUtils ` to set ` JERSEY _ ADMIN _ IS _ PRIMARY ` to true and modified the return value
updated buffer creation methods to use ` newUnsafeByteBuffer ` instead of ` newDisposableByteBuffer ` for improved memory management to enhance performance and
enable fast sync chain download by default
updated calendar DST offset handling in SimpleDateFormat . java and added a new test class Bug7130335 . java to ensure correct date formatting and
refactor calculations for currentTopRow and currentPageRow in AllAppsView . java to improve code readability and maintainability by reducing
server : fix npe in listrouters api when router be delete
refactor StringBuffer class to improve code readability and maintainability
added uid assignment to the rule object to ensure the rule ' s UID is correctly associated with the corresponding rule
added a null check for the listener before unsubscribing from the registry to avoid potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to enable customizable JSON output formatting for better read
change access _ table to access _ table _ size for good performance
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests for clarity to improve readability to enhance user understanding of resource location issues
improve error handling in tcp transport .
refactor multiple Java files to improve code organization and maintainability
added ` isUpgradeSuspended ` parameter to ` AmbariManagementControllerImpl ` and updated related method calls to include it in the ` skipFailure `
updated copyright year in FindsByCssSelector . java to reflect the correct attribution year
removed the initialization of the wfields list to streamline the code by eliminating unnecessary fields
added encryption and signing key sizes to OAuthProperties to enhance security by using default encryption and signing algorithms
hbase - 27809 [ hbck2 ] rename htabledescriptor . getColumnFamilies ( ) to htabledescriptor . getColumnfamilycount
updated alias check logic in SampleWebJspApplicationTests to use a lambda expression to improve code readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and PackageInfo classes to improve code organization and readability
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to enable idle strategy management during cluster operations
added a loop for incrementing the currentChunkID in SequenceFile . Writer to ensure proper handling of the currentChunkID during writing operations
added a new abstract class AbstractJobExecutor to provide a concrete implementation of JobExecutor to provide a mechanism for job execution management in batch processing
[ java ] fix a race condition in recoverystrategy . replay ( core ) .
rename ` hugeStaticBase ` to ` staticBase ` in HugeResourceTest . java to improve clarity and consistency to enhance code readability
added service ID retrieval logic based on consul configuration to ensure proper handling of service IDs when the discovery is enabled
replaced ` Math . random ( ) ` with ` SecureRandom ` in ` catPut ` method calls to improve security by preventing collision attacks
improve reporting of runtime compilation failure
updated calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure accurate time comparison logic
added a method to answer with a GloballyConfiguredAnswer for abstract methods in Mockito to enhance flexibility in mock invocation handling for abstract methods
refactor ` checkPackageAccess ` methods to accept a ` Class ` parameter and improve package access validation to enhance security by ensuring package access
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup to enhance plugin functionality and ensure proper setup of error configuration
improve readability of contribution list
added support for the ` hasTouchInteraction - Service ` protocol in the QuickstepTestInformationHandler and TestInformationHandler classes to enable handling of touch interaction
refactor connection handling in ConnectAction . java to improve readability and maintainability of the connection dialog logic
updated the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions >
[ wasm ] add miss final class .
added support for Home and End keys in the code to enhance navigation functionality and improve user experience
replaced the initialization of ` plots ` with a direct iteration over connected plots to simplify code by eliminating unnecessary synchronization
refactor intent handling in Utilities . java to use a chooser for launching activities to improve code readability and maintainability by simplifying
removed the ` public ` access modifier from the ` Roster ` constructor in the ` Roster ` constructor to enforce encapsulation as the constructor is intended
added basic constraints to the certificate generation process to enhance security by restricting certificate extensions
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to ensure that the ` fixed - nested - transform ` functionality
removed unnecessary calls to field . multiValued ( ) in TrieDateField and TrieField to simplify code and improve readability
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher . java to streamline the codebase by eliminating
added a new class ArrayLength for reflection - based field access to check for zero - length arrays to ensure that arrays with zero - length fields throw NoSuch
add log to help debug flaky test
replaced instances of ` @ Singleton ` with ` @ ApplicationScoped ` in ` ApplicationSettingsService . java ` to ensure proper lifecycle management of application settings
fix : guard against negative value
updated threadNameField initialization to use " Ljava / lang / String ; " instead of " [ C " to ensure compatibility with Java ' s String
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraph
add stroke object to pgraphics2d to allow customization of stroke
refactor SqlValidatorImpl to use a helper method for expanding dynamic star expressions to improve code readability and maintainability by reducing dup
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to handle child records to facilitate the retrieval of
added a status code for a warning message in HTTPServer . java to provide a user - friendly icon for the warning status
fix ( opengl ) : remove deprecate inputevent . modifiers ( )
update node cycle to use 3 instead of 6
( chore ) camel - as2 : fix npe when content - transfer - encoding be not set
refactor Locale class to improve code readability and maintainability
added clearlog ( ) method to error console .
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated caption handling to use LocaleHolder instead of ConsolePlayer and simplified method signatures to enhance locale management and improve code clarity
updated import statements and modified connection pooling behavior in ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes to improve resource management and
danielwagnerhall : add support for operaBlink in defaultdriversessions .
improve error message when download fails
[ lifx ] add new lifx product to the lifx product list
added async request handling in OverseerCollectionProcessor and CollectionsAPIAsyncDistributedZkTest to improve asynchronous collection creation and replica management
removed redundant ` PGSQL _ DEFAULT _ TCP _ PORT _ NUMBER ` and ` PGSQL _ PK _ BYTES _ LIMIT ` from ` Post
updated LogPage and SummaryPage to use objectId as the reference ID instead of a hardcoded HEAD to ensure consistent handling of repository references across the application
updated bone positioning in SkeletonInterBoneWire . java to use unit _ XYZ instead of UNIT _ Y for bone length mapping to ensure correct
added a method to close the browser component to ensure proper resource management and prevent memory leaks
added a call to ` cluster . waitForActiveCollection ( " readApiTestViolations " ) ` in ` AutoScalingHandlerTest . java ` to
refactor screen terminal attribute extraction to use a loop structure to improve readability and maintainability of the code
add controller state check to softreset action . fix # 194
disable on - disc stream cache to speed up texture pack reloading .
added null check for parentFolder in Request . java and RequestV2 . java to ensure proper resource retrieval for media rendering
cloudstack - 8470 : fix npe in network offeringvo . setpersistent ( false )
added a close method to the FileOutputStream to ensure proper resource management and prevent memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by catching and logging HTTP 403 responses
log4j2 - 1349 added getoriginal ( ) method to messagefactory2adapter so that messagefactory2adapter can be use in test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
update version regex from 1.2 to 1.3 in mmm Version . java to reflect the latest version release
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience by allowing more time for tooltips to be displayed
refactor target graph handling to utilize ` passedInTargetsSet ` for improved clarity to enhance code readability and maintainability
added UTC timezone configuration and assertion for formatted date in TimeTest to ensure correct handling of UTC time formatting in
refactor MediaSessionConnector class to improve code readability and maintainability
use the ssl implementation from the endpoint ' s handler instead of a new one
updated accuracy display in GpsLoggingService to use accuracy instead of altitude to ensure accurate representation of accuracy for accurate logging output
added a method to check if futures are enabled in BinanceExchange and updated related services to enable conditional handling of futures based on the
[ fix ] admin : list instructor in course table instead of account
added a method to set the accept queue size in ThriftHttpCLIService to allow dynamic adjustment of the maximum worker threads for improved resource management
replaced hardcoded string ` getClass ( ) . getName ( ) ` with a static final property for ` PROPERTY _ DISABLE _ WATCHER ` in `
camel - 7999 : camel - jms - allow to turn off ssl by default
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker ` and added validation error handling in ` TestWindowFunctions `
updated the calculation of duration in GCInspector . java to ensure the duration is non - zero to avoid potential runtime errors
fix : nodewithjavadoc should return an empty optional instead of null
replaced direct memory allocation with a native method for reading reserved memory to improve performance and compatibility with different operating systems
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` UngroupedAggregateRegionObserver . java ` to ensure proper handling of region
hbase - 2463 hbaseadmin # waitforoperation ( ) should print procid instead of table name
camel - 16400 : camel - cxf - allow to configure wsdlservicefactorybean to be use a non - default service class instead of
refactor YamlChangeLogSerializer to use a container map for database change logs to improve code organization and facilitate mapping of change sets to YAML format
updated output formatting in SchemaPrinter . java to ensure consistent newline handling for improved readability
refactor DebugRoadRegen and SchematicHandler to streamline road regeneration logic to improve code readability and maintainability by reducing
replaced ` getContext ( ) ` with ` getActivity ( ) ` for creating ` NowPlayingRow ` and ` HomeFragmentNowPlayingRow ` instances to ensure
added @ GenericGenerator ( name = " native " ) annotation to multiple Java files to standardize the generation strategy across the codebase
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country handling
updated the way the uncompressed data is written to the outputStream in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec . java
[ web ] remove dependency on html5
added a constant VALUE _ TYPE _ EMPTY and modified type assignment logic in Value . java to improve clarity and maintainability of the code
updated equality checks for string comparisons in GroupManager . java to improve code readability and maintainability
refactor Liquibase and LiquibaseDropAll classes to improve code organization to enhance maintainability and readability of the codebase
refactor SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated its usage in ` VersionedTargetGraphBuilderTest ` to
fix getminrowsize ( ) to return minrowsize instead of maxrowsize
add artifactversionadapter to make it easy to use
added logic to remove the previous element from the sobj array based on its presence to ensure correct handling of the last element in the sobj array
updated file handling in FileUploader to use parent file ID to ensure uploads have the correct parent folder context
added a new file UTF8ReaderBug . java to test UTF - 8 parsing functionality to ensure proper handling of supplementary characters in XML input
add unit test base on user forum issue
updated test assertions in BinanceIntegration and BinanceUsIntegration to include depth20 as a new version to ensure compatibility with the latest depth specification
added a resetAllocation method to SimpleParallelizer and a corresponding resetAllocation method in Wrapper to ensure proper resource management by resetting allocation states
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
refactor property handling in Agent class to use synchronized block to ensure thread safety when accessing system properties
refactor ModelUtils class to improve code readability and maintainability
refactor AbstractDoubleArrayAssert class to improve code readability and maintainability
updated width and height calculations for labels in Legend . java to ensure proper alignment of labels based on their last index
added delay and abort test methods to CodeFirstSpringmvcInterface , TestResponse , and SpringMvcIT classes to enhance test coverage for delay
update MoreLikeThis to use an array for storing values instead of a single string to improve performance by avoiding repeated string lookups
replaced direct rule resolution with a new ` BuildTargetSourcePath ` class to improve code clarity and maintainability by using a more descriptive class name
disable versioning by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to track the number of files
updated argument handling in AidlStep . java and GenAidlTest . java to improve clarity and consistency in command - line arguments processing
add a test case for issue # 79 . add test case
added a todo comment for future implementation of the FakeHttpLayer class
[ hotfix ] [ runtime ] make leadership revocation more robust
2 . x : fix compositediscoveryclient to return a single instance instead of a stream
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] add description for jobmanageroptions
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` in ` WidgetsFullSheet . java ` and ` WidgetsFullSheet
added class loading for WstxOutputFactory and WstxOutputFactory in XmlUtil . java and updated tests in MultiVersionXmlParser
refactor test setup in AuditAliasCommandIntegrationTest to use a variable for the project workspace to improve code readability and maintainability
removed debug logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve readability
( chore ) camel - cxf : remove unnecessary exception from test
added error handling for periodic refresh in CachedStore to improve stability by logging exceptions during periodic refresh operations
added ` @ RequiredArgsConstructor ` to ` ChainingAuditPrincipalIdProvider ` and refactored provider handling in ` CasCoreAudit
added a method to check default background fill settings in HSSFCellStyle . java and refactored color retrieval logic in HSSFPalette .
refactor ZonedDateTimeFormatterBenchmark to improve code readability and maintainability
updated the logic for buffering updates in ` DistributedUpdateProcessor ` and added a new test class ` DistributedUpdateProcessorTest ` to improve
added a null check for the rocket ' s stage number in the condition to ensure that the motor is not null before proceeding with further logic
fix / editreplace / / toreplace / / toreplace / / toreplace / / toreplace /
refactor ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable to be final to ensure that the processor reference cannot be reassigned after initialization
added a listener for write failure in WritableKeyProcessor to notify the process of finishing a write operation to ensure proper handling of end - of - stream
added support for " CUBE " in MySQLDatabase to enhance compatibility with additional database systems
added a try - catch block around the removal of the snapDir to handle potential IOException to improve error handling and prevent application crashes
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` across multiple files to improve clarity and
refactor DefaultOkHttpClientFactoryTest to use httpClient directly instead of reflection to improve code readability and maintainability
refactor BatchUpdateException and PreparedStatement classes to improve code organization and maintainability
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
mow - 161 fix problem with av ' s parent split pane in desktop
added a boolean parameter ` fromCli ` to the ` jailerMain ` method to control the execution of the ` jailerMain ` method
refactor HttpRequest class to improve code readability and maintainability
added a shared preference for the " pull unread " status in TalonPullNotificationService to manage unread pull notifications effectively
added a null check for the object ' s kind in IsNullNode . java to ensure that null values are handled correctly to avoid potential NullPointerExceptions
updated method parameters and variable names in Box2DTest and Pong classes for improved clarity and consistency to enhance code readability
updated LinearLayoutManager initialization and refactored RecyclerView setup in ViewPostDetailFragment . java to improve layout management for different device orientations and
updated logging level from trace to trace in CLIService . java to improve logging granularity for aborted operations
fix issue with abstract method in j2j
mow - 1010 do n ' t run touch event for ie10 +
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter in the ` getNotificationUsers ` method to enhance user filtering based on
updated the base URL in CGIARProvider to point to the correct SRTM data source to ensure the application connects to the correct data source
replaced ` removeAll ( ) ` with ` removePropertyChangeListener ( filterComboBoxModel ) ` in ` MotifFileChooserUI . java ` and
change the return type of the handle method from void to boolean to indicate success or failure of the operation
refactor ` fromNullable ` method to ` getRuleWithType ` and improve rule retrieval logic to enhance error handling and provide clearer
added visibility of transportSpinner based on shortcut state to improve user experience by hiding the transportSpinner when a shortcut is made
added null check for ` attributes _ field ` in ` mmm Attr . java ` and created new classes ` T7043371 . java ` and
added back navigation logic to BookmarkFragment and MediaDetailsFragment to improve user experience by preventing unwanted back navigation
added support for long view index data type in QueryServices and QueryServicesOptions to enable dynamic retrieval of view index data type based on configuration
updated string concatenation syntax in SDRTrunk . java to ensure consistency in output formatting
replaced ` withMessageContaining ` with ` withPath ` in ` PrivateKeyParserTests . java ` to utilize ` StringUtils . getPrivateKeyPath `
removed columnPosition parameter from diffDropColumn method and its usage to simplify the method signature by removing unnecessary parameters
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of VERSION . LUCENE _ 40 to ensure compatibility with the latest testing framework
hbase - 26933 hbase - 26935 import tsv do n ' t check for unmatched column family
[ java ] : use a unique identifier for each log subscription to avoid for easy debugging .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and added visibility management
added a condition to return early if the first element of jsonNodeNew matches " i " in PoloniexStreamingService . java to improve performance
refactor Procedure class to improve code readability and maintainability
added Locale and ClassLoader parameters to ResourceBundle calls in Toolkit . java and Window . java to enhance resource bundle handling to ensure compatibility with system class
add normalizearraycreationskotlin to the kotlin transpiler .
updated the logic for handling term enumeration and counting in PerSegmentSingleValuedFaceting . java to improve handling of edge cases and ensure correct counting behavior
fix nullpointerexception in modmetadata . getnullpointerexception due to miss author
added a new test class ` OSGiTest ` and modified ` module - info . java ` to include ` requires static jdk . unsupported
refactor controller service enabling logic into a separate method to improve code readability and maintainability by reducing duplication
hbase - 2782 hbase - 2782 fix flakiness in hbase - hbasetestingutility ( addendum )
fix ( jdt - generator ) : fix classcastexception in annotationprinter
add hasuserdata ( ) method to simplefeatureimpl to check if user have data
removed HiveException from method signatures in DDLPlanUtils and ExplainTask to simplify method signatures by eliminating unnecessary exception handling
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the enableLogging method from JavaCompiler . java to streamline logging functionality for better performance
added a new file ` InJavaSourceSet . java ` that includes a class ` InJavaSourceSet ` for identifying Java source sets to facilit
updated resource loading logic in TestGDALParser . java to use a dynamic filename for FITS files to improve flexibility in handling different file formats
added a new method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a simplified way to create a
removed the use of an external storage preference from the DirectUpload class to simplify the conditional check for SDK version compatibility
added a new constant INDEXER _ NO _ COMMIT and updated related classes to use it in IndexerMapReduce . java and ObjectCache . java
server : do n ' t create disk offering if either disk offering id or snapshotid be specify
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to check for non - empyy notes to ensure that
added null checks for ` amountToAdd ` and ` amountToSubtract ` parameters in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime
added a new test class for handling specific error types in the server to ensure proper error handling and response for specific error scenarios
replaced the static signum method with a direct retrieval of the last annotation to simplify code and improve readability by eliminating unnecessary variable
added visibility control for the holder in AttachmentAdapter to improve user interface by hiding the text field when certain conditions are met
fix ( import ) : fix import of ctreference in ast ( # 2065 )
danielwagnerhall : fix firefox driver to return the firefox profile
fix liquidblock ' s fluid field not be redirect to the supplier getfluid . close #
http : / / issues . apache . org / jira / browse / amq - 2902 - do n ' t log exception in test
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure correct representation
updated variable names from ` existingObservation ` to ` distinctObservation ` for clarity to enhance code readability and maintainability by
updated system property settings for Nightly , Weekly , AwaitsFix , and Slow in LuceneTestCase and RunListenerPrintReproduceInfo
log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4
added denyaccess ( class ) and denyaccess ( proxy ) to graalcontext .
fix bug in pgraphics2 . loadimage ( ) that cause npe
updated the method call from ` table .Sd ( ) ` to ` partition . sd ( ) ` in ` HiveUtilities . verifyAndAddTransactionalProperties `
refactor overlay handling in Workspace . java to improve clarity and maintainability of overlay scrolling logic
hhh - 15686 - allow jdbc batch builder to work with jdbc session
improve error message for analysis error
added a test for spying on a class retains state in PartialMockingRetainsStateTest . java and a new MockWithStaticStateDemo
added a new test for UNION and ORDER BY SQL syntax in SelectTest . java to ensure correct parsing and deparsing of UNION and ORDER BY
added null check for ugi in SecurityUtil . java to improve robustness by handling potential null pointer exceptions
added error handling for audio buffer allocation in OpenALMusic . java to improve error reporting for audio buffer allocation failures
camel - 16400 : camel - quartz - deprecate the reslovestringparameter method in favor of reslovestring
updated precision and scale handling in RexNodeConverter . java to ensure correct SQL type creation for decimal values within specified limits
added null checks for vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to avoid potential NullPointerExceptions when accessing metadata
updated the assertion in WalletTestAccount003 . java to use Long . toString ( now ) for the lowBalAddress to ensure accurate validation of the
refactor selection logic in BasicFrame and DesignPanel for improved clarity and efficiency to enhance code readability and maintainability by simplify
added a long running time parameter to the Args class to allow configuration of the execution time of the VM
updated conditional return statements in FindRefComparison . java and added Ideas _ 2012 _ 05 _ 21 . java with a new class Ideas _ 2012
replaced ` sun . misc . ServiceConfigurationError ` with ` java . util . ServiceConfigurationError ` and updated method signatures in ` HttpServerProvider `
[ geot - 4071 ] gml : fix gml3 encoding issue
updated test cases in TestRestClientRequestImpl . java for improved readability to enhance clarity and maintainability of test assertions
updated the condition in MissingUniqueConstraintChangeGenerator to include a referenceDatabase check to ensure unique constraints are only created if the reference database is different
removed the ` addAndroidConstants ` method from ` IjProjectTemplateDataPreparer . java ` to streamline the code by eliminating
replaced assertEquals statements with await statements in DuplicateCookieTest and SessionRenewTest to improve test reliability by allowing more time for requests to be retrieved
added additional parameters to the builder of ChromeTraceBuildListener to include additional context about the invocation process
[ gr - 27826 ] make native library resource bundle cacheable .
[ hotfix ] fix typo in hepplanner
added a new file TheRockMetaDataDemo . java to provide functionality for retrieving exchange metadata and currency pairs
updated FloatingDecimal and FormattedFloatingDecimal classes to rename ` FloatingDecimal ` to ` strictfp ` and added a test for strictness to
removed the unparseIdentifier method call from columnNamesBuilder to simplify the code by directly assigning the column name
added a new test method ` replaceField ( ) ` to ` JavaTemplateContextFreeTest ` and modified ` contextFreeTemplate ` method to
added a check to prevent synthetic methods from being instantiated in InstantiateStaticClass . java to ensure that synthetic methods are not processed in the instantiation process
removed the call to projectFilesystem . getPathForRelativePath in WorkspaceAndProjectGenerator . java to simplify the path retrieval process
added handling for pending rescues in IkStepDefinition . java to improve the management of IkStepDefinition to ensure that pending rescues
make equality check for standard type class faster
updated SyncLevel enum to accept a String parameter and added a method to retrieve its default sync level to improve flexibility in handling different sync levels based on
refactor controlcommandstest to use try - with - resources
added a condition to check if the slice is not a recovery state to ensure that the recovery state is not treated as a valid state during initialization
* fix compile error in opencv _ core . create ( )
added SDK path handling in AppleBundle and SwiftStdlibStep classes to ensure proper environment configuration for process execution
refactor ` TransientBlobCleanupTask ` to use ` this : : deleteInternal ` for better clarity and consistency to enhance code
server : fix npe while create static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added row type handling in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct processing of sort and union row types
refactor BetterBlockPos class to improve code readability and maintainability
fix compile error due to classnotfoundexception
refactor version handling to use a dedicated method for checking and displaying nightly builds to improve code readability and maintainability by centralizing
added support for OracleDatabase in the LoggingExecutor and JdbcExecutor classes to enhance compatibility and prevent SQL injection vulnerabilities
add a configuration option to disable nullability analysis
make sure to set the port to avoid port conflict
updated BLOB _ SIZE and SLIDER _ MARGIN values in DrawAudio . java and adjusted slider margins in Slider . java to improve
added a multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance security by integrating multifactor authentication
refactor findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods in MaxRectsPacker . java to improve code readability
jbrules - 2835 : fix javadoc warning in jdk8
added help page functionality to PMS and refactored content update logic in HelpTab and LooksFrame to improve user experience by allowing dynamic page
added a new ` GeocodeProviderFactory ` and a new interface ` Constants ` to the ` GeocodeProviderFactory ` , ` Constants ` , and
updated import statement for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to align with the latest library structure
refactor exception handling in OptionTest and ResourceManagerImplTest to use try - catch blocks to improve test reliability by ensuring exceptions are properly
updated GATEWAY _ SERVER _ ID to Protocol . GATEWAY _ SERVER and modified object deletion logic in MemoryCommand and PythonProxyHandler to ensure
updated conditions for document value handling in SegmentsInfoRequestHandler . java and modified collection creation in CollectionsAPISolrJTest . java to improve
updated the calculation of numPredictiveAppCols based on device type to ensure correct spacing for phone devices
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related logic in ` NestedLoopJoinPrule `
add blockbuildcraft to make it easy to remove block .
updated layout parameters for the search bar in DeviceProfile . java to improve layout consistency and alignment of UI elements
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5674 : y
updated HiveMetaStore and HiveMetaStoreClient to handle null clients more gracefully to improve error handling and prevent potential NullPointerExceptions
updated ` getDisplayScript ( ) ` method to use ` getDefault ( ) ` instead of ` getDefault ( ) ` in ` Locale . java ` and
replaced references to ` BASE _ URL _ PROP ` with ` ZkStateReader . CORE _ NAME _ PROP ` in ` Replica . java ` to
replaced ThreadLocalRandom with direct random number generation in StoreDirectTest . java to improve performance and reduce contention in tests
added a check for the launcher is ready before attempting to backup the favorites and widgets to ensure that the backup process does not proceed if the launcher is
enhanced exception messages in Cell . java to include string concatenation for space , left , right , and bottom validation to improve clarity and debugging information to
added unit test base on user forum issue
rename bodySpace to barSpace across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability and maintainability
fix unit test failure
added debug logging statements to Grasscutter . java to improve visibility and troubleshooting capabilities in the application
changed the visibility of the ` highlightCnstScrRngQuery ` variable from instance to static and updated related methods in ` SpanScorer ` to
added a check to ensure the workspace is not in overview mode and is not in NORMAL state before exiting the overview mode to improve user experience by preventing
refactor multiple assertion classes to improve code organization and maintainability
do n ' t notify new template if cacheable
added new constants SCOPE _ ENTITY , SCOPE _ SCOPE _ GLOBAL , SCOPE _ SCOPE _ SOLR _ CORE ,
added primary key constraint to the measurement table in DatabaseMetaDataTest to ensure that the measurement table has a unique primary key for data integrity
rename -- permissions - config - path to -- permissions - config - file to avoid conflict
refactor session creation logic in HttpSessionContextIntegrationFilter to improve clarity and ensure proper handling of session creation based on security context settings
added a new file ` TestIfWithDeadRegion . java ` that tests the behavior of ` TestIfWithDeadRegion . java ` with a supplier
update unit test to reflect the new naming convention
refactor SnowflakeIdGeneratorTest to use a try - finally block for concurrent access to ensure thread safety during concurrent access operations
added a static UI preference and conditionally hide the toast bar based on user settings to enhance user experience by allowing customizable toast notifications
updated the return statement in WindowsSecurity . java to ensure proper resource cleanup to improve memory management and prevent potential memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` for setting parameters in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler
added localized error messages to the JOptionPane to improve user experience by providing informative error feedback for dialog interactions
tika - 2088 -- add support for xlsx format for tika - 2088
updated the ` join ` method to use ` List < ? extends Object > ` instead of ` String ` for better type safety and logging to
camel - 16400 : camel - eip - add documentation enricher to make it easy to generate documentation
add a method to remove version from migration coordinator
added debug logging for device names in DeviceConfiguration . java to improve traceability and debugging of device configurations
added WebSocket configuration to ShenyuConfig and updated ReactorNettyWebSocketClient instantiation to enhance flexibility in configuring WebSocket settings
improve cachevalidationlistener to be able to clean up invokedmethods before each test
updated contentLength handling to trim whitespace before adding it to the document to ensure that the content length is only added if it does not contain unnecessary spaces
refactor solvingcompleted ( ) method to be more thread - safe
added error handling for creating a non - existent time series in MManager . java to improve robustness by ignoring exceptions when attempting to create a non
added a method ` check ` to return the result of the ` check ` method to provide a way to check if a ` boolean ` is successful
changed method visibility from public to protected in multiple classes to restrict access to these methods for better encapsulation
server : do n ' t try to assign ip address that be already in the account
replaced ` _ valueString ` with ` _ noValue ` in ` HttpParser ` and related tests in ` HttpParserTest ` to simplify
replaced direct method calls to ` completeInitialization ( ) ` with a new ` threadCompleteInitialization ( ) ` method in ` J9VMInternal
added methods to retrieve and test the external storage directory in ShadowEnvironment . java and created corresponding tests in EnvironmentTest . java to enhance functionality
jbrules - 2835 : add test for mvel type coercion
[ log4j2 - 1349 ] log4j2 - 1349 log4j2 - 1349 do n ' t log
added exception message to the log statement to provide more context about the error during the construct operation
fix for : http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5674 :
refactor visibility logic for sharedWithMeIconV in FileListListAdapter . java to improve code readability and maintainability
remove deprecate hive . optimize . sort . dynamic . partition . threshold configuration
refactor configuration overlay handling in ExecuteStatementOperation and Operation classes to improve clarity and maintainability of configuration overlay management
replaced ` Lists . newArrayList ` with ` Arrays . asList ` in multiple Java files to improve code readability and reduce dependency on external
updated the method call to retrieve the type name from getName ( ) to getTypeName ( ) to ensure accurate comparison of type names by using the correct method
removed the onErrorInStep method from StepListenerSupport to simplify error handling logic
refactor Wallet class to improve code readability and maintainability
camel - 16400 : fixed camel - netty - http to use http instead of http
testnonblockingapi : use log instead of system . out
added a check to ensure the row index is within the bounds of the connection list to prevent ArrayIndexOutOfBoundsException when accessing connection data
added a new class ` MethodWithSameNameAsEnclosingClass ` that extends ` AbstractRule ` to check for method names with the same name as an
added support for extended platform mbeans in ManagementFactory and created a new ExtendedPlatformComponent class to enhance platform management capabilities and improve proxy creation
replaced single quotes with double quotes in SQL queries to ensure consistency in SQL statement formatting
updated BleutradeDtoTest , BleutradeDtoTestSupport , BleutradeExtendedDtoTest , and Bleu
refactor TextEscapeUtils class to improve code readability and maintainability
added a filter parameter and modified the query construction in AbstractSpatialFieldType . java to enable dynamic filtering based on local parameters to enhance query flexibility and
added progress tracking for email sending in GpsLoggingService to improve user feedback during email sending process
replaced ` ArrayList ` with ` HashSet ` in ` Inlinks ` and replaced ` ArrayList ` with ` HashSet ` in ` LinkDb ` to
[ tradfri ] fix stopscan ( ) to remove current time ( # 4609 )
changed the parameter of ` isClientFilterEnabled ` from ` isClientFilterEnabled ` to ` false ` in ` HiveMetaStoreClient . java `
added ` Abandoned ` status to ` TicketModel ` and updated related references in ` TicketBasePage ` and ` TicketsPage `
removed initialization of columnAliasPrefix in multiple platform classes to ensure consistent handling of null values across platforms
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to enhance
add support for non - native jvm on 64 - bit system
refactor conditional logic in PdfCopy . java to improve readability and maintainability of the code
added daemon mode functionality to the OptionEnum and TerminalClient classes to enable users to start the web pendant UI programmatically
added a new file FlushIndexTask . java to flush the index in the benchmarking framework to enhance performance monitoring by flushing the index immediately
patch by jbellis , review by brandonwilliams for cassandra - 1382
added SEASONS output to the conditional check for expected output in MediaLibraryFolder . java to ensure compatibility with additional media formats
added a new file LocalSocketAddress . java to test IPv6 availability and ensure correct binding of the socket to the local network
updated gridSizeSteps additions in GridSizeMigrationTask . java to correct the gridSizeSteps array dimensions to ensure proper grid size steps are used for
replaced the use of ` getName ( ) ` and ` getFields ( ) ` methods with ` getFields ( ) ` and ` getFields ( )
added read - only mode functionality to the Context class to ensure transactions are committed and only operated in read - only contexts
refactor LookAndFeelCommand class to improve code readability and maintainability
updated calculations for lastRunEnd and childOffsets in BlockBoxing . java to use ceiling instead of floor to ensure accurate boundary checks for calculations
added EOFException and EOFException to the GracefulStopTest to ensure proper exception handling for closed channel scenarios
replaced multiple instances of ` lock . lock ( ) ` and ` lock . unlock ( ) ` with ` remove ( httpResponseListener ) `
refactor NetworkParameters class to improve code readability and maintainability
added support for account asset optimization configuration in DynamicPropertiesStore to enhance asset management flexibility based on user preferences
added a new constant J9 _ GC _ POLICY _ NOGC with a default value of 0 to define a specific garbage collection policy for the
added validation for contract transactions in TransactionCapsule . java to ensure only valid contract transactions are processed
pmd : remove exceptiontype checking since it be no longer need
improve error message when no localization available for file
added a new file ProcessorInfo . java to manage CPU CPU availability to facilitate CPU resource allocation based on system capabilities
add ability to specify a stylesheet for generated HTML output
fix ( logback ) : logback . xml location can be null
updated HostLevelParamsHolder to use ServiceComponentRecoveryChangedEvent instead of HostLevelParamsUpdateEvent to improve handling of service component recovery events
updated SleuthTagPropagationAutoConfiguration to allow configuration of tag propagation whitelisted keys to enhance flexibility in tag handling based on user settings
refactor dependency type assignment in RustCompileUtils to use a switch statement for better readability to improve code clarity and maintainability by consolid
updated oauth2LoginLinks method to accept queryParams as a parameter to enhance flexibility in handling OAuth2 error responses
hbase - 20583 hfilescanner . getfirstkey ( ) should seek first kv before seek ( )
hhh - 16400 deprecate method that be deprecate since 6.2
[ api ] fix nan in layernorm ( ) for nan
refactor showShareFile methods across multiple activities to use a dedicated helper method to improve code organization and maintainability by centralizing share file sharing
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to verify the execution of ` LiquibaseUpdate ` with relative
convert proxyType to upper case to ensure consistency in proxy type handling
add a new mod _ minecraftforge . java to make it easy to initialize dungeon lop .
refactor column fetching logic in JdbcDatabaseSnapshot . java to improve clarity and efficiency to enhance performance by caching cached values based on
added a container for CSS border styles and labels in CSSBorderTest . java to enhance the border styling capabilities for better visual presentation
add retry logic to retry load balancer if status code be return
change layout parameter from FILL _ PARENT to MATCH _ PARENT to improve layout flexibility by allowing matching parent components
replaced ` System . nanotime ( ) ` with ` System . currentTimeMillis ( ) ` in ` parentTaskName ` for task name concatenation to
added error handling for invalid AddService request input to improve robustness by throwing an exception for malformed AddService requests
do n ' t allow unversioned index file in indexdatabase . getindexversions ( )
ggbround ( x [ 0 ] , x [ 1 ] , x [ 2 ] , x [ 3 ] , x [ 4 ] , x
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
deprecate producer template that do n ' t exist anymore
refactor JLayer class to improve code readability and maintainability
increase eviction test timeout to avoid flakiness
replace ` mergePasswordAndSalt ` with ` saltedPass ` in the ` encodeInternal ` method for better clarity to enhance code readability
updated method calls from ` addOnGlobalLayoutListener ` to ` removeOnGlobalLayoutListener ` in ` IconRecentsView . java ` to ensure
refactor Response class to improve code readability and maintainability
fix maxtimestamp to be long . max _ value
make sure that the callparticipantpanel be resize to fit the screen .
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to avoid potential NullPointerExceptions to ensure robust
added ` toString ( ) ` and ` hashCode ( ) ` methods to ` HitbtcBalance ` and updated ` HitbtcAdaptersTest ` to
fix ( sql ) : fix order by order by in statement with in statement
updated the return statement in RetriesExhaustedWithDetailsException to use a string representation of the addresses to improve clarity and consistency in the output
replaced direct calls to ` DataObject . find ( fo ) . getAction ( ) ` with a call to ` OpenCookie . open ( ) `
updated imports from ` org . apache . http . config ` to ` org . apache . hc . client5 . http . impl
pipe power wood : do n ' t remove water if it be less than requested energy
added a check to delete the temporary output file if it exists to ensure that the temporary output file is properly cleaned up
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added checks to return null if the time exceeds the maximum allowed duration in ReplayProcessor and ReplaySubject to ensure robustness by preventing
fix typo in citation style generator test
added SQL queries for inserting video data into the media table to enhance the functionality of the media table by allowing dynamic column selection based on the
ggb - 161 : show only definition for exam , not point
added a null check for the component in the SIP comm field to prevent potential NullPointerExceptions when accessing its properties
hbase - 20613 add caching for scan root in metareader ( addendum )
updated initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql " to
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable a transient taskbar feature for testing purposes
[ hotfix ] [ runtime ] fix typo in javadoc
added a density parameter to the IOSGraphics class to ensure proper scaling behavior for 3D graphics scaling
replaced ` optional ` with ` vararg ` in ` Parameter . java ` to improve clarity and consistency to enhance code readability by using a
hbase - 23748 regionstatestore should log exception in log ( addendum )
[ hotfix ] [ test ] [ test ] remove unused asserttask
updated logging messages and refactored connection handling in AsyncHttpConnection . java , AsyncContextTest . java , and SelectChannelAsyncContextTest
added a boolean parameter to the SearchUiManager constructor to control the visibility of the arrow in the search interface
added lock mode handling for MV store in Database . java to ensure proper locking mechanism for concurrent access to shared resources
skip linux / amd64 test for now
updated input type checks in Scalars . java to improve handling of StringValue and IntValue instances to enhance type safety and prevent potential ClassCastException
updated validation logic for keyAliases in CreateTableStatement . java to improve error handling to provide clearer error messages for invalid configurations
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , Launcher , and Settings classes to improve UI appearance
improve error message when no isolate can be query for view ( # 1078 )
added multiple header configuration methods in HeadersConfigurer . java to enhance header configuration flexibility for different request types
refactor ObjectEnumerableAssert class to improve code readability and maintainability
danielwagnerhall : move devtools connection creation to the router .
add type = " type " to the @ aggregateroot annotation in eventsourcingrepositorytest
added functionality to handle prebuilt libraries in Python binary components to ensure correct resolution of Python library paths for prebuilt libraries in the build process
added client authentication handling to NetServerOptions and HttpServerOptions classes to ensure consistent client authentication behavior across server options
updated directory paths in Hive configuration to use dynamic user context to enhance flexibility in directory resolution for different users
refactor task view handling logic in RecentsView . java to improve clarity and maintainability of task view visibility checks to streamline the removal
improve test timeout for amqp transformer
removed the call to clearAll ( ) in DataTableTopComponent . java to optimize performance by avoiding unnecessary data clearing
rename templateflowcontroller to flowcontroller to avoid confusion
added a test for consuming all child operators with an exchange in the pipeline builder to ensure proper functionality and correctness of the pipeline builder ' s
added import statement for ClassLoaderHandler in module - info . java to enable class loading functionality for GitHub classes
solve ( ) method do n ' t need to be call in event thread
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data during JSON processing
added a null check for throwable in PlotListener . java to ensure that throwable is not null before proceeding to avoid potential NullPointerExceptions
refactor queryInfo retrieval to use a variable for clarity to improve code readability and maintainability
fix npe in auto browsing when there be no crafting
fix ( gl200textprotocoldecoder ) : fix invalid hdop value in gl200textprotocoldecoder
rename timeColumnName to incomingTimeColumnName and update related references to improve clarity and consistency in naming conventions
replaced multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` with multiple calls to ` HttpMethed . waitTo
added support for initialization of objects in a container with a customizable factory
add longtasktimer . sample tag to timer observability ( fixes # 189 )
changed the data type of SYNC _ DELTA _ RATE from float to double and modified time calculations in AdaptiveFetchSchedule . java to improve precision in
thymeleaf / thymeleaf - templates : deprecate deprecate fragment expression in favor of fragment expression in template
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared data structures
http : / / issues . apache . org / jira / browse / amq - 4894 - fix amq - 4894
added new color constants and improved color extraction logic in ColorExtractionAlgorithm . java to enhance color handling and support for dark text in
added data folder access check before adding to srcFolderPathList to ensure srcFolderPathList is only added if the data folder is accessible
updated appendContent method to include a boolean parameter for title inclusion to enhance flexibility in handling note titles based on user preference
removed initialization of SessionRegistry in ConcurrentSessionControllerImpl to allow for dynamic SessionRegistry initialization
added logging for reconnection completion in NettyStreamingService to improve error handling and provide clearer feedback on connection failures
updated proxyFactory initialization to use javassist ' s Proxy instead of OGNL to improve compatibility with Javassist ' s proxying mechanism
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency
updated exception handling to include address information to improve clarity of error messages by providing more context about the destination address in exceptions
added a check for viewPath under the repository directory in ProjectView . java to ensure that the view path does not refer to the repository to prevent errors
remove tab - header - area from the jabref window ( # 3971 )
added " - XX : + UseCompressedOops " and " - XX : + UseCompressedOops " command - line arguments
peersync : do n ' t try to sync update log if not in active or recording state
deleted the ConnectionHook . java file to remove unused connection hook class to streamline the codebase
solr - 12313 : fix flaky test in distributeupdateprocessor
( chore ) camel - swagger - xml - dsl : fix wrong parameter type assertion
[ apex ] add support for apex namespace guarded access .
add miss license header
replaced direct instantiation of AggregateEngine with a singleton instance to improve thread management and avoid multiple instances of AggregateEngine
updated WebSocketConnection constructor to accept a ByteBufferPool parameter to enhance flexibility in buffer management for WebSocket connections
added scrollToPositionWithOffset calls in UploadActivity . java to adjust the index range for better thumbnail navigation
fix ( griffin ) : generate sample by timestamp override by other column alias ( # 2411 )
refactored animation handling in LauncherAnimUtils and added a new animation listener in LauncherStateTransitionAnimation to improve animation flow and ensure
added a conditional to disable the default user agent in the HttpClientBuilder based on the HTTP client configuration to ensure that the client does not use the default user
added Pubsubhubbub functionality to FeedRefreshUpdater and ApplicationSettings classes to conditionally handle Pubsub subscribers based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
stubjarclassentry : handle synthetic class correctly
add a new class to make it easy to run a dspace web application
added null checks for leftTableAlias and added a method to retrieve table alias containing a column in CalcitePlanner and RowResolver classes to improve error handling
updated trigger key identity to include " Trigger " to enhance clarity in trigger key identification
updated logging statements to use ` TransactionCapsule ` instead of ` TransactionCapsule ` for better clarity to improve log readability and provide more in
fix basicmaptest to pass on window
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` setRcfileWriterValidate ` methods in ` HiveClientConfig ` and ` TestHiveClientConfig
added an enum ` TlsClientCertPolicy ` and updated related methods in ` Constants . java ` and ` GitBlitServer . java ` to
added a debug log statement to indicate when a subscription was successfully saved in KrakenFuturesStreamingService . java to improve visibility into the subscription process
added WebSocket headers and subProtocols to the ProxyWebSocketHandler class to enhance WebSocket functionality by allowing specification of HTTP headers for WebSocket connections
added debug logging for hiveQueryResultsFetchReq to improve traceability and debugging of fetch request handling
simplified string concatenation in HolidayEventFormatter . java to improve code readability and maintainability
refactor InnerClass field handling in FinalizePrivateFieldsTest . java to improve clarity and functionality to enhance test coverage for inner class fields and
updated UnexpectedJobExecutionException class to improve exception handling clarity
removed the unused module - info . java . extra file to simplify the codebase
refactor maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve type safety and clarity in
added a new class for GeoDegeneratePath in StandardObjects . java to support degenerate path handling in the application
removed the ` preFill ` parameter from constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` Pool ` classes to
updated Taskbar launcher state handling in TaskbarLauncherStateController . java to ensure proper state management when not in launcher mode
added null check for StyleInfo before comparing styles to avoid potential NullPointerExceptions during style comparison
updated GuiUtil and StatusTab classes to improve component sizing and layout management to enhance UI responsiveness and layout consistency
refactor icon assignment logic in FileTreeViewHolder to streamline file icon retrieval to improve code readability and maintainability by reducing redundancy
updated assertions in ParallelUniverseTest to check for presence of " v18 " and " land - v17 " qualifiers to improve test reliability by ensuring
fix synchronization issue in xmlreporter
add test for native probability function
added a call to deregister the client to ensure proper resource management and prevent memory leaks
hhh - 16625 : add a method to drop temporary table after use in oracle
danielwagnerhall : make htmlunitwebelement . tohtmlhtml ( ) work in ie again
refactor SolrCore , XMLWriter , DocIterator , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability and maintainability
updated the formatting of reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs
add check for adgroupcount to ad playback state
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability
[ wavegenerator ] use unit _ hz instead of deg _ text for wave frequency
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
replaced ` TreeMap . putAll ( ) ` with ` TreeMap . newTreeMap ( includedLabelSets ) ` in ` TestLabelOptions .
[ hotfix ] fix npe in vertexlighterflat
updated span handling in TracingClientInterceptor and ITTracingClientInterceptor to use try - with - resources to ensure proper resource management and avoid potential
updated time zone handling in ` ScheduledTrigger ` to use ` TimeZone . toZoneId ( ) ` instead of ` java . time . ZoneId `
added ` AsyncBucket ` and ` InMemoryExtension ` classes , along with ` InMemoryExtension ` , along with ` LocalBucketBuilder ` , and
updated class directory handling in ` resexhausted003 . java ` to utilize regex pattern matching to improve flexibility in determining the test class directory to
removed redundant lines in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
added support for reusing WebServer instances in the Daemon class to enhance flexibility in server management by allowing reuse of WebServer instances
changed variable name from productConstructor to constructor and updated its usage in HttpClientUtil . java to improve clarity and consistency in variable naming
log a message if thread allowlist be not clear
rename processor . setOutputSource ( outputSource ) to setItemWriter ( outputSource ) to improve clarity and consistency in naming conventions
[ drools - 7 ] ignore hit policy when analyze ddt table
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to verify the functionality of sliding window merging in
added a check for all apps dirty before binding app icons to ensure that app icons are only bound when there are apps to enhance user experience by prevent
remove unused variable ` running ` from ` ManagedFileWatcherReloadStrategyTest . java ` to improve code clarity and maintainability
refactor Beautiful class to streamline input validation to improve code readability and maintainability
refactor AquaMenuBarUI to check for embedded LWCToolkit before retrieving screen menu bar properties to enhance security by ensuring proper handling of
do n ' t set fall distance if fall
refactor query handling in SimpleJpaRepository to improve readability and maintainability of the code
added timestamp , parent hash , nonce , and number fields to BlockUtil . java to set genesis block arguments in BlockUtil . java to enhance block
do n ' t generate loop safepoints if not necessary
added null and empty checks for the children list in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by handling cases where no
changed constructor visibility from package - private to public in ArtifactResolver . java to allow access to the ArtifactResolver class from other packages
added thread termination handling in multiple classes to ensure proper resource management and prevent potential thread interruptions
added a validation check for the maxBufferedDocs parameter in IndexWriter to ensure that maxBufferedDocs is non - negative to prevent illegal argument exceptions
added a boolean flag ` loginCurrentlyInProgress ` to manage the state of the login activity to ensure proper handling of login state during configuration changes
added null checks for next and value extraction in Pump . java and implemented a test for UUID reversal in PumpTest . java to ensure robust
updated access modifiers for ` loadbalancer ` and ` zombieServers ` in ` HttpShardHandlerFactory ` , ` LBHttpSolrServer ` , and
updated the default precedence from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5484 - jndi
updated conditional statements in SortedDynPartitionOptimizer . java for consistency and clarity to improve readability and maintainability of the code
change return value from NioEventLoop to true in FileStreamChannel . java to enable event loop handling for improved performance
updated the handling of ` newNumNulls ` in ` StatsUtils . java ` to ensure ` newNumNulls ` does not exceed ` newNumRows
camel - 16400 : camel - dsl - allow to load kamelet from dsl .
added authorization checks and refactored token upload process in OSMJob . java to enhance security by ensuring only authorized users can upload to
remove debug print statements from multiple test classes to clean up code and improve readability
added clientAuth property to IoTDBRestServiceConfig and IoTDBRestServiceDescriptor classes to enable configuration of client authentication for improved security management
refactor mock injection logic in PropertyAndSetterInjection . java and add a new test class ChildWithSameParentFieldInjectionTest . java to
updated BloomFilter64bit and BloomUriUniqFilter classes to implement initialization methods for expected and hash counts to enhance flexibility
updated cursor adapter from false to true in HomeFragment . java and set refresh _ me in TweetPager . java to ensure the UI reflects the
updated the intermediate header height ratio from 1 f to . 75 f in ProfilePager . java to improve the responsiveness of the user interface
replaced ` @ SuppressWarnings ( " null " ) ` with ` jdk . nashorn . internal . runtime . events . RuntimeEvent
added a new constant HOST _ SYS _ PREPRESSED and updated related classes to manage system preparation settings for hosts
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified its usage in ` DatabaseChangeLog . java
added a loop to remove the ' / ' character from the location string to ensure the correct character is removed from the location string
added property handling for entities , entities , and scores in StaticPipeline to ensure proper initialization and validation of entity and score properties
updated file path handling in ` Frame . java ` and ` WhoopsModule . java ` to use a dynamic path based on application configuration to
[ geos - 10568 ] catalogrepository should not throw runtimeexception for non - existent datastore
refactor assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added a new test class ` MultiLineJaggedTextTests `
camel - 16400 : camel - core - optimize the unit test for camel - core
refactor writeMeasurementScheams and writeAligned method calls to remove redundant lists to simplify code and improve readability
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve memory management during garbage collection
updated logging configuration from slf4j - . * to slf4j - reload4j - . * in LoggingOptionsTests . java to
[ huebridgethandlerosgitest ] fix flaky test ( # 16400 )
updated package names and imports in multiple Java files to reflect the new organization of activities and improve code clarity
drools - 1276 : disable kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` with ` _ avroSchema ` and ` _ gitHubAPIC
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket . java ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by logging warnings when attempting to release a lock that could not be released
replaced the use of ` props . getProperty ` with ` bundle . getString ` for retrieving the ` Gem _ PATH ` and ` RUBY _ VERSION `
refactor receiveAddress initialization to use ByteUtil . EMPTY _ BYTE _ ARRAY instead of a static byte array to improve code readability and maintainability
reformatted class loading logic in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix test failure of jobmanagerstartuptest
chore : update java microgenerator to 2.0 . 0 and update gax - java microgenerator to 2.0 . 0 ( # 269
added a Bundle to set extras in FileDisplayActivity to enhance functionality by allowing additional data to be passed to the builder
changed the loop condition from ` break ` to ` continue ` in ` ParticleEmitter . java ` to skip processing when ` particle ` is null to ensure
updated the expected number of tests from 4 to 1 in AmbariManagementControllerImplTest . java to align test expectations with the expected number
updated the column name from " SERVICE " to " SERVICE " in TransientSessionTicketImpl . java and added a NoResultException in JpaTicket
updated Bug4823811 . java file to improve code clarity and maintainability
added a path relativization function to the argument list in RmStep . java to enhance flexibility in handling file patterns
modified the requestFullState method to accept a boolean parameter to control the initial request state requesting behavior to improve flexibility in handling initial requests
refactor ShibbolethCompatiblePersistentIdGenerator to use a dedicated attribute field to improve code clarity and maintainability by centralizing attribute
removed the @ Inject annotation from RequestValidationService to streamline the dependency injection process
added a new constant ` STATS _ LOGGER _ KEY ` and modified the handling of keyboard visibility in ` UiThreadHelper . java ` to improve logging
added clearing of MManager instances to ensure proper resource management and prevent memory leaks
refactor NavigableMap and NavigableSet classes to improve code organization to enhance maintainability and readability of the code
add unit test to demonstrate usage of ioutils . slurpfile
added @ FunctionalInterface annotation to methods in multiple classes to indicate that these interfaces are intended to be functional interfaces for lambda expressions
replaced direct span retrieval with a new method ` spanWithName ` in ` TraceWebFluxTests . java ` to improve code readability and
added DateWritable support in ETypeConverter and HiveSchemaConverter to enable conversion of Date objects to Hive records
replaced string splitting with a constant for better readability to improve maintainability and clarity of the code
apps - 2088 fix error message in input dialog
refactor column count checks in SemanticAnalyzer to improve clarity and maintainability of column count validation logic
lucene - 9751 : fix wandscorer to handle case where we do n ' t have enough doc to reach the end of the
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies and improve code clarity
initialize ` curPixVal ` to ` 0xFF000000 ` and set it to ` 0xFF000000 ` in ` XRSolidSrcP
refactor biome dictionary to use listsupertypes instead of listsubtypes
rename ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability to enhance understanding of the variable ' s purpose
added imports for Local and PLATFORM _ POSTSUBMIT flavors and updated the @ Stability annotation in TaplTestsLauncher3 . java to enhance
updated package - info . java files to improve documentation clarity
added a check to ensure logFileSuffix is not empty before processing to avoid potential errors when logFileSuffix is empty
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of shared library names in ShadowPackageManager
add support for meiligao command ( fix # 1463 )
fix npe in powerdiode when tile be null
added a new ` TrimCache ` class and modified the cache deletion process to improve cache management and provide user feedback upon cache deletion success
chore ( regen ) : update java 11 to 2.0 . 0 ( # 4602 )
updated exception handling in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and AccessControlUtils to throw NotAuthorizedException instead of returning
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated related calls to enhance method flexibility and suppress
replaced ` refreshListFilesFragment ( false ) ` with ` onItemClicked ( ) ` for item selection in ` FileDisplayActivity . java ` to
added a check for multiple streams and improved error handling for file matching in StreamUtil . java to enhance robustness by selecting a random file selection
refactor create _ table method to use CreateTableRequest instead of EnvironmentContext to simplify table creation logic and improve code clarity
added a boolean field ` aborted ` and modified ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragInsStateTracker `
updated indentation checks in multiple parser classes to ensure proper handling of indentation to improve code structure and prevent parsing errors
added a new ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes for handling network WiFi status updates to facilitate
do n ' t throw protocolexception for non - final frame
added visibility control for the collapse handle in WidgetsBottomSheet to improve user interface by hiding the collapse handle when needed
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript scripts in the Jooby framework to
do n ' t scroll if there be no unit to scroll
updated condition to check for a size of 1 instead of size of the contract list to ensure that only one contract is processed for contract management
added ` add ` methods to ` JsonArray ` , ` JsonObject ` , and ` JsonArrayTest ` classes to handle Enum values in JSON serialization to
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to compare print services to ensure consistent hash code comparison for print services
hhh - 15651 - remove db2idialect . iversion ( ) from db2zdialect
do n ' t connect if platform fee be 0
refactor BatchUpdateException and PreparedStatement classes to improve code organization and maintainability
improve performance of mediumcodec . queueinputbuffer
removed public access modifier from several classes to enforce encapsulation within the package
added Retrofit import for Part and PartMap classes to enable retrofit functionality in the Part and PartMap classes
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and serialization logic to enhance code clarity and ensure proper serialization of API
added TYPE _ TASKBAR _ OVERLAY _ PROXY along with TYPE _ OPTIONS _ POPUP _ DIALOG in AbstractFloatingView . java to
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper . java and added hasRecents flag in RemoteAnimationTargetSet . java to improve animation handling for recents
removed the boolean parameter from the createRenderScript method call to simplify the script creation process
pmd : fix typo in javadoc
do n ' t hide system - bundle in plugin list
updated import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency and clarity to improve code readability and maintainability by
keychaingrouptest : use low _ false _ positive _ rate instead of 0.01
refactor configuration retrieval and selection logic in Overview . java to improve clarity and maintainability of configuration handling
server : fix nullpointerexception when host be down
added a null check for the value before adding it to the entry set to avoid potential NullPointerExceptions when the value is null
cloudstack - 8470 : do n ' t log error when add a host to a vm fails
updated string concatenation syntax in ParamAction . java to improve code readability and maintainability
updated constructors in ` BaseStubbing ` and ` ConsecutiveStubbing ` to accept ` Object ` instead of ` InvocationContainerImpl ` to enhance
added a static method stripMethodParams to the LocationOpener class to improve parameter handling by removing unnecessary parameters
updated version name and code in the Version . java file to reflect the latest release version and code changes
use set instead of list for allow command
[ geot - 4071 ] use labelcacheitem . label _ resize instead of textgrouping
ggb - 290 fix for popups not show when overlap
updated error messages in ValidationSuite . java for consistency to improve clarity and maintain uniformity in error reporting
refactored the StartingWindowListener to use a static instance instead of creating a new one each time to improve memory management and reduce object creation overhead
added a doc comment inherited from MBeanServerConnection to improve documentation clarity for MBeanServerConnection functionality
updated exception messages and added package definition validation to improve clarity of exception handling and ensure proper package access validation
increase thread safety in threadsafetest
updated the loggingEnabled variable to be non - null and added a null check for it to ensure logging is enabled only when it is not already set
added @ JsonIgnore ( true ) annotations to Schema class to prevent serialization of sensitive fields during JSON processing
increased the timeout duration in TestNonTxIndexBuilder from 5000ms to 10000ms to allow more time for tests to complete successfully
mahout - 1851 : change classifier to use log instead of mean
updated CheckHelperModule and CheckHelperControllerModule to extend AuditLoggerModule to enhance audit logging capabilities in the application
refactor Prototype class to improve code readability and maintainability
added a null check for tableIsTransactional initialization to ensure proper handling of transactional tables in the semantic analysis process
[ java ] remove unused parameter from recordwriter # writefragment .
improve handling of cues in demo app
[ te ] kairos - add alias to kairos datastore test
updated currency pairs in VaultOfSatoshiBaseService . java to use " USD " instead of " BTC _ CAD "
hhh - 14589 close entitymanager on test failure
updated import statements for KafkaSender from kafka11 to kafka to align with the latest Kafka library version
added integration tests for the GWT binary in the com . example . gwt . client package to ensure that the GWT binary builds correctly
added error handling for loading causes in BrowserContentPane and SQLConsole to improve robustness and prevent application crashes due to missing data sources
reformatted random value retrieval in EnhancedRandomImpl and EnhancedRandomImplTest to improve code readability and maintainability
added XML security property management in DTDConfiguration , NonValidatingConfiguration , SAXParser , and XMLSecurityPropertyManager to improve XML security configuration handling
added new interfaces ` InterfaceWithDefaultMethod0 ` and ` Subtype ` with default methods ` defaultMethod ( ) ` and ` InlineDefaultMethod ` ,
updated regex patterns in SqliteFieldPredicateView . java to use ` GLOB ( ) ` instead of ` ESCAPE \ " _ \ " ` for
[ drools - 8470 ] make dmnassemblerservice # getdmnprofiles protect
fixed - redissonscript . loadallasync ( ) do n ' t execute on slave node
fix unsafe . array _ byte _ index _ base _ offset in espresso .
updated debug logging levels from debug to verbose across multiple project generator classes to improve log readability and reduce log verbosity
fix memory leak in fmloutputboundhandler
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and updated thread pool configuration in WebServer . java
refactor shortcut removal logic in LauncherModel . java to improve clarity and efficiency to enhance performance by avoiding unnecessary updates when no
( chore ) camel - http : fix checkstyle violation
added functionality to navigate up in DetailFragment to enhance user experience by allowing quick navigation to the home screen
added a condition to check if the Android market is available before including play services to ensure play services are only included when the Android market is available
refactor TableBlockParser to simplify cell parsing logic to improve code readability and maintainability
added support for a bridging header in NewNativeTargetProjectMutator and its usage in ProjectGenerator to enhance the project generation process
refactor PotentiallyDeadCode to use a new method for managing unused methods and improve code clarity to enhance maintainability and readability
added support for diamond detection in diamond inference and introduced new classes DiamondRedundantArgs and T6939780 to enhance
replaced calls to ` startSend ( ) ` with ` onStartSendRequest ( ) ` in HighwayClientFilter , RestClientSender , and RestClient
removed unused imports and debug logging in SolrCacheHolder . java to improve code clarity and reduce unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure that authentication errors are properly propagated
updated the calculation of the zero value in Test6796786 . java to correctly reflect the difference between d1 and d2
added a local file " logback . dev . xml " in JoobyMojo . java and included it in Main . java to facilit
added a new file ` JaasEventCheck . java ` to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent events to
refactor animation logic in QuickstepTransitionManager to use a list for views to improve code readability and maintainability by reducing repet
updated stringDistance comparison logic in ConjunctionSolrSpellChecker and added a new ConjunctionSolrSpellCheckerTest class to ensure proper handling of string
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` to align with updated data structure requirements
[ hotfix ] [ runtime ] [ leader election ] fix typo in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
cloudstack - 3473 : add timeout property to agent script
updated JDBC table and schema parameter handling in AbstractJDBCConnectorProvider to improve clarity and maintainability of the code
updated SQL update syntax in AcceptableUsagePolicyProperties and JdbcAcceptableUsagePolicyRepository to use getSqlUpdate ( ) instead of getSqlUpdateA
replaced ` WeakHashMap ` with ` synchronizedMap ` for schemaTypeCache to improve thread safety and performance in schema type caching
refactor header addition logic in StaticServerHttpHeadersWriter to use a for - each loop to improve readability and maintainability of the code
ignore test that depend on cmu only
added a directory creation for the storage in TestCollector to ensure the storage directory is available for testing
added a chunked streaming mode to the HTTP request to optimize data transfer efficiency
jsonschema : add basicsyntaxchecker and multipletypesyntaxchecker test
hbase - 26909 update the hbase - hbase dependency to 2.2 . 0 ( addendum )
added a new ` Node ` class and a test method ` Node ` with recursive structure in ` BeanPopulatorTest ` to ensure that ` Node `
added IOException to the getRemoteName method to ensure proper handling of I / O exceptions during remote name retrieval
added HTTP client creation methods in UserAccountManagerImpl , ClientFactoryImpl , and ConnectivityServiceImpl to improve error handling and connection management to enhance
refactor WebSocket connection handling to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration by allowing the use of AspectJ mode
added support for hostname verification in SSL connections to enhance security by preventing hostname verification attacks
removed the ` final ` modifier from the ` item ` variable in ` OHLCSeries ` and added a ` remove ` method in ` OH
replaced ` invoke ( ) . invoke ( ) . invokeUrgent ( ) ` with ` invokeUrgent ( ) ` in ` ClientSchema
refactor joint deletion logic in World . java to streamline the removal of joint edges to improve code readability and maintainability
do n ' t search phone number if search be disable
[ hotfix ] [ connector / common ] move sourcereadertest to testutils
removed redundant null checks for document and parent folders in DocumentsStorageProvider . java to improve code clarity and reduce redundancy
added a new interface ` HookDefinition ` and ` JavaHookDefinition ` , and implemented hooks in ` cucumber . runtime . java `
refactor flushIfDeadlockRisk method to use a dedicated flushIfDeadlockRisk method to improve code readability and maintainability by red
updated setExoOptions method to accept a boolean parameter for live TV support to enhance flexibility in specifying video options for video playback
added a USER role to the identifier collection in DMRDecoderState . java to enhance user identification within the application
replaced instances of ` new Color ( 1 , 1 , 0 ) ` with a static ` INVISIBLE ` constant in ` Color . java ` and updated
updated null handling logic in CountAggregationFunction . java and added a new test for null handling in NullHandlingIntegrationTest . java to enhance null handling
added a new field ` deep ` to the ` InternalTransaction ` class to track the number of deep transactions for better transaction management
pdfbox - 4892 : escape xml name in stream initiation , a suggest by valerybokov
updated work directory configuration to use a configurable work directory to enhance flexibility in specifying the working directory for file operations
added deprecation handling in RuleSetFactory and corresponding tests in RuleSetFactoryTest to ensure proper rule deprecation management for deprecated elements
amd64directcallop : do n ' t use dead code for amd64directcall
added static final constants for minStamp and maxStamp in TimeRange . java and implemented conditional checks in TestTimeRangeTracker . java to improve
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
updated MIME type checks in DetailFragment and added image view listener in GalleryActivity to ensure proper handling of video attachments and improve media view
fix tank not drain fluid tank when not in remote world
added support for handling ` RuleAnalysisLegacyBuildRuleView ` in ` CsharpLibrary . java ` to enhance rule resolution logic to improve compatibility with
of - 207 : if no pep service be find for a give jid , use a default one .
added a null check for runtime in intrinsicGraph initialization to ensure that runtime is not null to avoid potential NullPointerExceptions
[ hotfix ] fix checkstyle violation in metric tracking
pdfbox - 4892 : avoid arrayindexoutofboundsexception when parse cosobjectkey
added a new constructor to LwjglApplet that initializes the canvas with a specific configuration to ensure that the application does not attempt to load native resources
refactor environment variable handling in EnvironmentAndSystemPropertyClientProviderStrategy to simplify code and improve readability by reducing redundancy
add support for ldap password policy in ldap authentication
refactor Int2ObjectCache class to improve performance to optimize object caching efficiency
added a private variable ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and configured it in ` LdapUtils ` to enhance LDAP authentication configuration
refactor methods in Readable class to improve code readability and maintainability
pdfbox - 551 : use testsupport . with _ font instead of builder
updated the icon used in the share menu from ` drawable . drawable . share _ menu _ item ` to ` drawable . drawable . ic _ menu _
updated the ` JRE _ IS _ MINIMUM _ JAVA8 ` constant from ` java . util . Collections ` to ` java . util .
improve error handling for non - jdbc41 compliant driver
refactor GenericContainer class to improve code readability and maintainability
replaced by jbellis
added multiple @ Override annotations across multiple classes to ensure proper method overriding and improve code clarity
added spacing around PNG and GIF files in ChartProvider . java to improve code readability and maintain consistency
fix : use the parent path of the current working directory instead of the current one
simplified the return statement in JavacParser . java and added a new test class ExtraSemiTest . java to improve code readability and
added functionality to retrieve users created at a specific date in User objects to enable users to filter users based on creation time for improved data retrieval
updated test cases in Test15FloatJNIArgs . java to improve test coverage for float JNI functionality
updated version and author information for plot components in the plugin to enhance clarity and maintainability of the code
[ flink - 30613 ] [ runtime ] [ test ] fix indexoutofboundsexception in mockprocesscontext
[ java ] ensure that aeronarchive be not call multiple time in a loop .
added a null check for the dependency before adding it to the index to avoid potential NullPointerExceptions during dependency resolution
added a timeout of 10 seconds to the SslBytesServerTest class to ensure tests do not hang indefinitely
peer : fix typo in javadoc
added ` getRealtimeIndexSegment ( ) ` method to ` RealtimeIndexingCoordinator ` , ` toHistoricalIndexSegment ( ) ` , and updated
added null check for exportedData before writing to output to avoid potential NullPointerException when accessing exportedData
updated popup positioning logic in RecyclerViewFastScroller . java to improve scrolling behavior based on popup visibility and scroll thumb radius to enhance user experience by
updated command handling in BuckWSServerPortUtils and added a method to check if a tool window is instantiated in BuckToolWindowFactory to improve
added a condition to check if the platform is Windows before initializing the preventSleep checkbox to ensure the checkbox is only displayed on non - Windows platforms
updated import statements in HttpConfigurationAuthorityOverrideTest . java to use jakarta EE namespaces to ensure compatibility with the latest Jakarta EE
added support for crop dimensions based on device layout in QuickstepAppTransitionManagerImpl . java to improve layout handling for different device orientations
added ` fullScreenExclusiveModeState ` and ` isFullScreenExclusiveMode ` methods to ` XWindow ` and ` XWindowPeer `
updated StringUtil to truncate duration strings and added UMSUtilsTest class to ensure proper formatting of duration strings and enhance test coverage for
added credential handling for DAG URIs in DagUtils . java to enhance security by ensuring URIs require credentials
( chore ) camel - core : avoid concurrentmodificationexception
updated thread name assignment to trim whitespace to ensure cleaner thread identification
updated error message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify the reason for adding a description
refactor Job class to improve code readability and maintainability
added a new abstract class Unused and a method to check for unused types in the Main . java file to improve type safety by ensuring that unused types are
updated references to " hbase _ master _ host " to " hbase _ master _ hosts " and " hbase _ master _ hosts " in
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the batch processing module to remove unused components related to XML serialization
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a generic ` GenericRecord ` to enhance flexibility in
updated maximum delegation lock period handling in ProposalUtil and related classes to improve flexibility in managing delegation lock periods based on dynamic
kvm : fix npe when network rate be 0
[ cmc ] remove unused cmc exchange constructor
updated configuration handling in GossipLocalNode . java to use a list of IP addresses instead of a configuration object to improve flexibility by allowing dynamic configuration
add system property hazelcast . client . tpc . enabled to turn on / off client tpc
update swagger - ui version to 3.18 . 2 ( # 5059 )
refactor MutableBigInteger to improve modular arithmetic operations and add a new ModInvTime class for testing modular functions to enhance performance and
refactor the handling of empty names in NamedObjectList . java to improve clarity and ensure proper initialization of the key variable to enhance code readability
replaced instances of ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple classes to standardize method naming for better clarity and
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat in SerializationUtilities . java to enable serialization support for RCFileInputFormat in the application
added default methods for type mapping in TypeMapperComponent to enhance type mapping functionality for different column types
added error handling for invalid host headers in Request . java and a new test for invalid host headers in RequestTest . java to improve robustness
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` libcore . util . TimeZone
remove unused addoutgoingvalues ( ) method from standardop
updated segment directory handling in SegmentCoreReaders . java and SegmentReader . java to improve clarity and consistency in directory management
added logic to check for main thread profile presence in aggregate queries to ensure proper handling of transactions based on the presence of a main thread profile
added validation to ensure annotation definitions are disallowed in a Buck rule with required _ for _ source _ abi setting to enforce correct rule requirements
updated filter names to use " greekLowercase " and " greekLowercase " instead of " greekLowercase " to improve clarity
fix typo find by codespell on fossies . org
[ type : refactor ] replace backward compatibility with discovery
added imports for America / WhiteHorse , America / Yukon , and America / Yukon in BasicDateTime
updated the name of the SurfaceSyncGroup from " SurfaceSyncGroup " to " TaskBarController " to improve clarity and consistency in naming conventions
replaced ` getGridFS ( ) . getValue ( ) ` with ` getGridFS ( ) . getId ( ) ` in ` GridFs
added tests for querying total size and bytes in ShadowDownloadManager and implemented totalSize and bytesSoFar fields in ShadowDownloadManager to ensure accurate tracking of
refactor character validation logic in TextField . java to use a boolean variable for clarity to improve readability and maintainability of the code
fix : do n ' t add duplicate group node
refactor statement handling in ` BlockLexicalContext ` to use ` afterSetStatements ` method for better clarity to improve code readability and maintainability
added hashCode ( ) methods to IntervalXYDelegate and XYSeriesCollection classes to ensure proper hash code generation for instances of these classes
clientqueuetest : fix flaky test
updated method names and parameters in CloudWatchAppender and related classes to improve clarity and consistency in naming conventions
corrected a typo in the Gson serialization method call to ensure accurate serialization of special floating point values
added calls to ` PublicMethed . waitToProduceNextBlock ` in ` HttpTestZenToken002 ` and ` WalletTestZenToken
added checks for non - empty subtags in Locale and LanguageTag classes and improved language tag handling in LocaleEnhanceTest to enhance
server : allow ssh into kvm agent
removed ` public ` access modifier from ` ScheduledAction ` and ` OnCompletedAction ` methods in ` SchedulerWhen ` and ` SchedulerWhen ` classes
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest package structure
added a check for " - " in the filter condition to ensure that only valid filter strings are processed
updated sortColumnsLabel text to use " Natural column order " instead of " natural order " to improve clarity and consistency in terminology
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java `
escape remote address in HtmlSessionInformationsReport to ensure compliance with HTML standards for better data integrity
update itemstatetriggerhandler to match smarthome / items /
no functional change - code cleanup
added concurrency support for file moving operations in Hive to improve performance by allowing parallel execution of file operations
added a new method ` trigger ` to the ` WrapTimer ` class to enable customization of timer behavior based on a specified period
added support for additional SQL date and time types in TypeStringUtils to enhance flexibility in handling additional data types
added a verbose error logging option to AbstractStatusReporter to provide more detailed error messages during execution
updated ClickStartHandler initialization to accept a boolean parameter for menu visibility to enhance user experience by allowing dynamic menu behavior based on application state
s2s vpn : check if vpn connection be establish between same account and customer gateway
refactor error handling in CursorReadingTask to streamline error management to improve clarity and maintainability of error handling logic
added logging for PDF encryption and text extraction in PDFBoxThumbnail and PDFFilter classes to enhance error handling for encrypted PDF documents
[ 3.0 ] fix curatorwatcher # getchildren ( ) to wait for child change to finish ( # 9809 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and readability
updated the parameter name from ` getSelectedItemId ( ) ` to ` id ` in ` ContentUris . withAppendedId ( ) ` and added
updated Java6Assertions and Conditions classes to improve code clarity and maintainability
changed the parameter type of ` replaceOrderBulk ` from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexPrivateOrder > `
refactor ` enterDefault ` method to ` enterIdentNode ` and update its implementation in ` FindScopeDepths ` and ` Lower ` classes to
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to utilize it for retrieving long values
add a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior to ensure that multi - threaded verification
[ gate - 8 ] remove roster from the roster if it ' s available .
replaced ` getTableProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a method to retrieve overlay
updated method formatting in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added a null check for ` extTypeCustomDesers ` before initializing ` ExtensionTypeCustomDeserializers ` to avoid potential ` NullPointerException ` when
set the default log level for mockserver to warn
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline the test class by eliminating unnecessary dependencies
removed unused imports and modified the createJetty method to streamline the code by eliminating unnecessary dependencies
changed the type of scoreMap from HashMap < String , Map < String , Float > > to HashMap < String , Map < String , Float > >
updated comparison logic in U64 . java to check for negative data values to ensure correct handling of negative data values to prevent potential errors in data processing
improve the visual appearance of the headline
updated notification condition in WallpaperColorInfo . java to include support for dark text support to ensure proper handling of dark theme changes based on user preferences
[ hotfix ] [ checkpoint ] fix checkpointrequestdecider to not execute on too many pending checkpoint request
updated MAX _ POOL _ SIZE and CORE _ POOL _ SIZE constants in Parallel . java from 1000 to 8 to optimize memory usage and resource management
updated filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use ` anyMatch ` instead of ` isEmpty ` to improve flexibility in matching
[ opencv ] disable opencv test on window
http : / / issues . apache . org / jira / browse / amq - 4685 - fix http : / / issues
[ py4j2 ] fix npe in py4j .
added a ` @ Repeatable ` annotation to the ` Issues ` annotation in the ` Issue . java ` file to provide a mechanism for tracking
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java to ensure consistency
updated socket connection handling to support SOCKS proxy configuration to enhance flexibility in connecting to different host configurations based on system properties
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to streamline dependencies and improve code clarity
replace HashSet with LinkedHashSet for storing protocols and ciphers in SslContextFactory to maintain insertion order for protocol and cipher lists
added a static instance of ` systemResource ` to manage resource loading to optimize resource management by caching the result
[ beam - 8470 ] increase the buffer size for streaming aead decryption .
added a test for invalid fallback URI in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallback URIs in the circuit breaker integration tests
updated SSL connection handling in AppPage . java to enhance security by allowing configurable SSL connections
added a size limit of 0x7FFFFFFF to the cin ' s size limit in PerformanceTest . java to optimize memory usage during testing
removed the ` preferAES ` field from the ` ProtectionPolicy ` class and related methods from ` StandardProtectionPolicy ` to streamline the code by
( chore ) camel - opentelemetry
[ ec2 ] remove the test for load balancer instance
rename method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity to better reflect the method ' s
added error handling for file creation in DiacriticTest . java to prevent file creation failures due to configuration issues
hhh - 14589 skip on - lock test on oracle 11
added error handling for missing atlas file in TextureUnpacker . java to ensure robustness by throwing a runtime exception when the atlas file is not found
added a write lock to the clusterWriteLock in AmbariManagementControllerImpl . java to ensure thread safety when accessing shared resources
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 ` and modified ` HiveQueryResultSet ` to check if the
fix chunkingtest . testbufferlargerthanfile ( ) to work on window
added pre - deleted databases to the schema map in ClusterSchemaManager to ensure only non - deleted databases are retained in the schema response
added a check for " chunkedWriter " before flushing and flushing responses in Http1xUpgradeToH2CHandler . java to ensure proper handling of
updated item deletion logic in EnhancedBrowseFragment and added a confirmation dialog in FullDetailsFragment to enhance user experience by allowing items to
replaced instances of ` RuleFinder ` with ` RuleBank ` and introduced a new ` addRule ` method in ` CSSParser ` to improve
add a try - catch block around the initialization of the encryption key to handle potential exceptions during the initialization process
added a new file ` TestMonomorphicObjectCall . java ` and ` Object . java ` for testing monomorphic object calls to
replaced ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` DataBrowser . java `
hbase - 26909 addendum : fix npe in memstore . seek
[ hotfix ] [ runtime ] use file [ ] instead of string [ ] for local state directory
updated AlterTimeSeriesStatement constructor to accept a boolean parameter for view alteration to enhance flexibility in handling view alteration behavior
simonstewart : fix ` ` pattern . matchtext ( ) ' ' bug
added error handling for RoutingTableBuilder configuration retrieval in HelixBrokerStarter . java to ensure robustness by preventing application crashes due to potential
fix nullpointerexception in httpclientintroductionadvice .
( chore ) camel - jms : use char [ ] instead of string for password
bug 11105 : do n ' t invalidate session if it be a recursive search
refactor equals and isUniformDistribution methods in Counters . java to simplify equality checks and improve code readability
updated the parameter name from ` status ` to ` original ` for better clarity to improve code readability by using a more descriptive variable name
truffle : use system . currenttimemillis ( ) instead of system . currenttimemillis ( ) .
refactor variable handling in PrettyPrinter to improve clarity and maintainability of the code
added null checks before creating index nodes in LRUDictionary to avoid potential NullPointerExceptions during node initialization
refactor DatagramPacket initialization and filtering logic in DatagramSocket and DatagramChannelImpl to improve filter handling to enhance code clarity and ensure
test : migrate testquerydns to junit 5
added a new class NutchServerInfo to encapsulate server - related properties related to NutchServerInfo to provide a structured way to manage
replaced TokenAttribute with AttributeSource in EdgeNGramTokenFilter . java to streamline attribute handling and improve code clarity
added a timestamp option to the CqlInserter and ThriftInserter classes to allow users to specify a timestamp for data insertion operations
updated DSAParameterGenerator to use ` BigInteger . ONE ` instead of ` BigInteger . ZERO ` for prime strength checks to improve code clarity and
[ fix ] [ gwt ] fix float to int conversion
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and enhance test coverage
added SQL constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling for SQL integrity violations
[ hotfix ] [ connectors / base ] fix checkstyle violation in consumermanageprocessor
added a ` addTab ` method to the ` Tabs ` class and refactored the ` createTab ` method in ` Tabs ` to
updated array sizes for HDFSFile and related classes to zero to optimize memory usage by avoiding unnecessary array allocation
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
added a conditional check for null tags in MavenVisitor . java to ensure that null tags are handled correctly to improve robustness by preventing potential Null
updated test constants in ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET _ UPDATE " and " MOCK _
added a new file FormatCheckingTest . java to test the handling of illegal class names in Java processes
replaced direct line number assignment with a local variable ` lastLineNumber ` to improve code readability and maintainability
added a try - catch block around the addition of the desired configuration to handle potential exceptions during configuration retrieval
added a new method ` createToggle ` to create a ` RadioButton ` with specific ` Text ` and ` Command ` parameters in ` RadioButton `
updated LRUCache and MetadataQuerierByFileImpl to use a dynamic cache size to improve cache management and enhance performance
int - 1851 , int - 1852 , int - 1853
added null check for symbolicName before quoting it to avoid potential NullPointerException when symbolicName is null
add support for -- usemode system property
[ hotfix ] [ yarn ] add more logging to yarnsessionfifoitcase
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and ` RobolectricTestRunner ` to
added a check for non - existent notPropagatedHeaders in AbstractMessageProducingHandler to ensure that the selective header propagation logic
refactor CompareMode class to improve code readability and maintainability
added ` HasTests ` interface implementation to ` Arg ` class in ` RustBinaryDescription ` and ` RustLibraryDescription ` to enable support for
updated placeholder and error messages in FileMessageVH . java for consistency to improve clarity and maintainability of the code
refactor OnExitTest class to improve code readability and maintainability
added a method to recreate the taskbar when user preferences change to ensure the taskbar is updated to reflect the current user ' s preference changes
added support for Ibm JVM in HeapDump . java to enable dynamic heap dumping based on JVM type
camel - 16400 : camel - test - infra - mybatis : do n ' t close session in case of exception
danielwagnerhall : fixing firefox driver to work on ie too
updated JDK version from Java 5 to Java 5 for - loop to ensure compatibility with Java 5 features and improve code clarity
set the application state to unavailable in JmxApplicationProvider to ensure that the application does not enter an error state during execution
updated position and limit calculations in ByteBufferAs - X - Buffer , Direct - X - Buffer , and Heap - X - Buffer classes to improve buffer handling
updated method call from ` toUri ( ) . toUri ( ) ` to ` toMove . split ( ) ` to ` toMove . split
added a check for array length before setting an empty array in NativeArray , ArrayData , and DeletedRangeArrayFilter classes to ensure safe
make virtualauthenticatoroptions enum public
updated document additions in TestMultiPhraseQuery . java to use a new document structure to improve clarity and maintainability of the test cases
do n ' t assign reservation reservation if payment method be offline
added a Thread variable ` _ onTimeoutThread ` and refactored listener invocation logic in ` HttpChannelState . java ` to improve thread
replaced stack trace printing with debug logging in multiple test files to improve logging detail for better debugging and traceability
updated package - info . java files to improve documentation clarity
patch by jbellis , review by brandonwilliams for cassandra - 1147
[ heos ] fix runtime error ; support for new denon ` ` home ' ' speaker add ( # 9935 )
added a ` Wait ` class and its corresponding methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` to
refactor Neo4j to use AttributeController for managing node and edge attributes to improve code clarity and maintainability by utilizing
added a null check for serverName in the condition to ensure that serverName is not null to avoid potential NullPointerExceptions
nifi - 7999 : deprecate rocksdbmetronome in favor of nifi - controller
updated the initialization of ` isGrantable ` from ` readBoolean ` to ` readBoolean ` in ` TableExRetriever . java ` to ensure
added logging for asynchronous execution in JavascriptContext . java to improve debugging visibility and traceability of the execution flow
camel - 16400 : camel - cxf - mtom - allow to turn off headless mode on macos
updated column modification logic to differentiate between new and existing column descriptors
added Disposable interface to Texture class to enable memory management for Texture objects
added null checks for tldBundleLocation and updated JSP registration helper references to enhance robustness by preventing potential NullPointerExceptions and
do n ' t use goquorum genesis file when quorum compatibility be enable
replaced IOException with Throwable in HttpInput . java to improve error handling by capturing a broader range of exceptions
added a condition to check if the country is " JP " before skipping Thailand checks in LocaleTest . java to address potential issues with era
updated API response classes to use HostResponseWrapper instead of HostResponse . Wrapper to improve clarity and consistency in response handling
updated equality check in FilteredQuery to include boost comparison to ensure accurate filtering of query results based on the specified boost
updated the constructor of FileMenuFilter to include an additional context parameter to enhance functionality by allowing context to be passed when creating FileMenuFilter instances
ggb - 2892 make sure we do n ' t hide the debug log
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` to test CMS class unloading behavior under specified metaspace
fix spongeforgeeventfactory to deal with empty entity list
replaced KeyMappingPreparedStatementSetter with ItemPreparedStatementSetter in multiple classes to improve clarity and consistency in naming conventions
patch by jbellis ; review by brandonwilliams for cassandra - 1874 : fix checkstyle issue
refactor resource attribute handling in MiniAapt . java to improve error handling for missing ' type ' attribute to enhance clarity and ensure proper exception
added support for " SpEL " operator in the operator enumeration and created a new SpELJudge class to enhance functionality for handling Sp
[ hotfix ] fix checkstyle violation in localexecutionplanner
replaced ` sun . misc . Service ` with ` java . awt . EventQueue ` and ` java . awt . EventQueue ` for event
refactor CertBlacklist , ConscryptCertStore , Java8EngineSocket , and ConscryptTest classes to improve code organization and maintainability
updated attribute resolution logic in ` AttributeResolution9 . java ` and removed redundant variable declarations in ` ShadowArscAssetManager9 . java ` to improve
updated source and target options in SetupHid . java to use " 6 " instead of " 1.5 " and " 1.5 " to
changed access modifier of extractMetadataColumns method from private to public and refactored project handling in PushProjectIntoTableSourceScanRule to improve
added imports and sorted localized names in AboutActivity . java to improve code organization and ensure consistent retrieval of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 ( # 438 )
added a conditional check for live streaming before setting shared preferences to ensure preferences are only saved when live streaming is active
improve error message when create auditstrategy fails
( chore ) camel - core : fix flaky test
updated generic types in CompositeType and related tests to enhance type safety and clarity in generic usage
added support for transports in GitClientApplication and refactored urls handling in RepositoryUrlPanel to enhance flexibility in managing repository
added delegation logging for various input consumer classes to enhance traceability and debugging of gesture handling processes
added a null check for mavenMetadata before retrieving available versions to avoid potential NullPointerExceptions when mavenMetadata is not initialized
added a check for " Large Page Support : " in the output to ensure that " Large Page Support : " is not excluded from the output to avoid
cloud _ usage : do n ' t copy event if the database do not exist
( chore ) camel - test - infra - broker : fix unit test on window
added a new test class ` TestObjectStreamClass ` for serialization of ` ObjectStreamClass ` to ensure proper functionality of ` ObjectOutputStream `
updated null check for ` mySelf . getDataCenterInfo ( ) ` to return true when ` mySelf . getDataCenterInfo ( ) ` is null
change log level from error to warn for open tracing data capture failure
added a toString ( ) method to the Generator class to provide a readable string representation of the generator instances
updated the handling of the ` dontquote ` variable in ` URI . java ` and added new test cases in ` Test . java ` to improve cl
added a check for null or empty resources in ClusterControllerImpl . java and implemented a test for NoSuchResourceException in ClusterControllerImplTest .
refactor response handling in AccepttoApiUtils to improve error logging and response validation to enhance clarity and maintainability of API response processing
updated vertex buffer initialization logic in VertexBufferObject . java to ensure compatibility with Android versions below 5
refactor SybaseASADatabase class to improve code readability and maintainability
added a forceProjection parameter to HashJoinInfo constructor and updated related method calls to ensure backward compatibility while maintaining backward compatibility
added a method ` getStringDistance ( ) ` to retrieve the string distance from the spell checker to improve accessibility of the spell checker functionality
added FLAG _ One _ SHOT , FLAG _ MUTABLE , FLAG _ MUTABLE , FLAG _ IMMUTABLE , FLAG _ IMMUTABLE ,
refactor HiveFileFormatUtils to use a new appendReadColumnID method for appending read column ID configurations to improve code readability and maintainability by
corrected the method name from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added a temporary toast message to the SavedExperiments class to improve user feedback during experiment execution
added a null check for serviceInfo . getVersion ( ) in ServiceModule . java and a corresponding test in ServiceModuleTest . java to ensure service
added a new test class ` RawSerializationTest ` to validate JSON serialization of various collection types to ensure that the ` toJson ` method correctly
replaced ` ` server ' ' with ` ` sslcertgenerator ' ' in ` ` remotecontrolconfiguration ' '
refactor loop to use an index - based approach for retrieving replies to improve code readability and maintainability
increase the timeout duration from 3 seconds to 60 seconds to allow more time for tests to complete successfully
added a test method ` testNGramFilters . testNGramFiltersPayload ` to verify the behavior of ` TokenFilterFactory ` to ensure correct decoding
refactor AclImpl class to improve code readability and maintainability
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest . java ` to ensure that different array
bug 10994 : do n ' t throw exception if vm can not be stop
added a thread - local flag ` __ tryWriteAgain ` to control the execution of ` tryWriteAgain ` in the ` SslConnection ` class
refactor ancestor visibility checks in Actor . java to use a dedicated method for checking ancestor visibility to improve code readability and maintainability
added logging for failed rolling - update step on deployment group name to improve error tracking and debugging by providing clearer error messages
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix checkstyle violation in sinkprovider
added error handling for UsernameNotFoundException in DaoAuthenticationProvider and introduced AuthenticationFailureUsernameNotFoundEvent in LoggerListener to improve authentication robustness and provide
refactor AtMostXVerificationTest class to improve code readability and maintainability
updated default QParserPlugin name from " lucene " to " Lucene " across multiple files to ensure consistency and clarity in naming conventions
updated SimpleDateFormat initialization to use Locale . US to ensure consistent date formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and ` JavaLanguageServer ` classes and created ` LocalsCompletionTest _ template
updated variable names from ` idToken ` to ` shouldHaveIdToken ` in the ` test _ fetch _ token _ from _ authorization _ code `
fix a bug in gncxmlhandler . insertaccount ( ) that could cause npe
refactor byte array handling in MimeType to use ByteArrayOutputStream instead of byte array to improve performance and reduce memory usage
refactored exception handling logic in MessagingTemplate . java to improve clarity and maintainability of the code
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to check if the source file is an instance of ` J . CompilationUnit
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to optimize memory usage for better performance
added a clear method to manage witness capsules and created a test for updating witnesses to ensure that the witnesses
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper handling of NoSuchElementException during iteration
( chore ) camel - flume : remove unused import
added basic authentication credentials and updated authentication metrics in BasicAuthIntegrationTest . java and DaemonStream . java to enhance test reliability and ensure
replace HashMap with LinkedHashMap for storing graph nodes to ensure predictable iteration order of graph nodes
improve error handling in jersey support ( # 1542 )
refactor header validation into a separate method for better readability to improve code maintainability and reduce duplication
modify system properties handling to include a switch statement for specific keys to ensure certain properties are skipped during processing for better performance
changed parameter types of contains and doesNotContain methods from String to CharSequence to enhance flexibility in handling character sequences in string operations
make checkgraalintrinsics work with graal intrinsic
rename IntUtilsTest to PrimUtilsTest to clarify its purpose to improve code readability and maintainability
updated DataSource usage in PersistenceManagerProvider to use a variable for the DataSource2 variable to improve code readability and maintainability
refactor DeploymentOptions class to improve code readability and maintainability
updated the ` updateTextButtonWithDrawable ` method to use ` d ` instead of ` Drawable . ConstantState ` for better drawable handling to improve code
refactor XmlParser and YamlParser to use try - with - resources for better resource management to ensure proper closing of streams to prevent potential memory leaks
added support for coalesce functions in RexNodeConverter and SqlFunctionConverter to handle coalesce expressions correctly to enhance data processing for coalesce functions in
( chore ) camel - hl7
updated JavassistProxyFactory to use the current thread ' s context class loader to ensure proper context class loading for proxy factory generation
updated DefaultDateTypeAdapter to accept a format parameter and added synchronized keyword to ensure thread safety during date serialization and deserialization processes
refactor method signatures in DocumentUtil . java for improved readability and consistency to enhance code maintainability by standardizing formatting
replaced the ` setURI ` method with ` setURI ` for setting the URI and query in ` HttpClientRequestBase . java ` and added assertions in
added a method to filter old entries in FeedRefreshUpdater . java to improve efficiency by avoiding unnecessary filtering of old entries
change log level from fatal to warn in FSHLog . java to better reflect the severity of the log message
added a new ` NodeMapIterable ` class and modified ` getValues ( ) ` and ` next ( ) ` methods in ` NodeMap
updated imports and variable names from ` RouteDefinitionLocator ` to ` FilterDefinition ` in ` DiscoveryClientRouteDefinitionLocator . java ` to align with the
added a check for non - empty fields before adding aggregation operations in MongoRecordReader and modified return condition in RexToMongoTranslator to ensure aggregation operations
added admin list to the admin list if it ' s available .
replaced Apache Lucene ' s MultiFields with SolrIndexSearcher ' s slow atomic reader ' s slow atomic reader ' s terms ( ) method in multiple
camel - 16400 : camel - core - optimize constantbeanholder to use identity hash code instead of string .
updated null check for ` primitiveType ` in ` GroovyParserVisitor . java ` to ensure proper handling of ` classNode . getUnresolvedName (
remove uninterruptible code from frameinforesultquery . hashcode
fix flaky seda test
added a new package - info . java file containing package - level documentation to improve code organization and clarity
updated the calculation of readLen in MessageUnpacker . java to ensure readLen does not exceed buffer boundaries
fix checkstyle issue in micrometer - tests
updated SQL query to include user serial in IconDB to enhance filtering of icon entries based on user identification
[ issue # 4747 ] fix defaultmqproducerimpl # getbackpressureforasyncsendsize ( # 4748 )
add a boolean parameter to the addWhitelistedResource method to conditionally add resources based on the class file only status to improve resource management by
cloudstack - 4071 : fix db upgrade for baremetal _ dhcp _ devices table
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the codebase by eliminating unused components
added onoffloadbufferemptying ( ) method to defaultaudiosink .
added scheduling functionality for upstream tasks in UpstreamCacheManager to improve performance by allowing concurrent execution of upstream tasks
[ hotfix ] [ doc ] fix typo in streamtype
improve error message when assertion fails
updated FilestorePage and RootPage classes to use requiresAdminRole for admin role checks to ensure that only users with appropriate admin permissions can access
camel - 16400 : camel - elasticsearch - do n ' t run test for camel - elasticsearch 3.0 . 0
added a check for the declaring class before calling the ` accept ` method in ` ExpressionControlBusFactoryBean . java ` to ensure that the method
updated button text from " leftButtonAltcoin " and " rightButtonAltcoin " to " sellAltcoin " and " sellWithFiat "
camel - 16400 : camel - restlet - allow to route on the restful restful restful component . thanks to jo
updated parameters in createNextBlock and createNextBlockWithCoinbase methods to improve clarity and consistency to enhance code readability and maintain
removed the ` Serializable ` interface from ` BTreeMapJava ` and added ` serialCloneNoCatch ` method in ` ConcurrentSkipListMapTest `
added a null check for the cause of the startup rule execution to improve error handling by providing a fallback message when the cause is null
reformatted conditional statements in Main . java to improve code readability and maintainability
replaced ` mFilesAll . contains ( file ) ` with ` mFiles ` . contains ( file ) ` in ` LocalFileListAdapter . java `
deleted the PlainVerifier . java file to remove unused code related to JWS verification
added functionality to close system windows when triggered from alt tab to improve user experience by preventing accidental tab closure
replaced ` showDialog ( ) ` with ` showDialog ( ) ` in ` DialogFragmentIT . java ` and removed ` setOnShowListener (
updated charset parsing to include UTF - 8 encoding to ensure proper character encoding is used for multipart requests
added a call to the superclass method to ensure proper initialization of the TextField component
updated LogFormatTest to use TestUtilities for serialization to improve test reliability and maintainability
updated SQL parsing logic to use ` previousUntilLastClause ( ) ` instead of ` previousClause ( ) ` and modified fill initialization in ` GroupBy
updated validation logic in JAXWSExceptionBase . java to throw a negativeArraySizeException for invalid array sizes to ensure proper exception handling for negative array sizes
test : migrate ctresolvedimporttest to junit 5 ( # 4479 )
increased the timeout duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for operations to complete successfully
[ hotfix ] [ test ] change default scheduler option from legacy to region
added title field and related methods to ShadowActivity and ShadowAlertDialog classes to enable internationalization support for title handling in the application
replaced Apache Commons Logging with Apache POI logging in POIFSFileSystem . java to improve logging consistency and maintainability
updated alarm handling logic in InstarHandler . java to improve clarity and maintainability of alarm state management
add latency to localmapstatistics when delete a map
updated enum declaration and modified response status check logic to improve code clarity and ensure proper handling of HTTP status codes
refactor JavaFileManager to use a local variable for the Javac location to improve code readability and maintainability by reducing repetitive code
add a project name to flutter module builder ( # 558 )
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of stubbing with deprecated methods to ensure that stubbing
updated import statement for DispatcherType from org . eclipse . jetty . server to javax . servlet
theorem proving : improve semantic analysis
disable rsa key exchange by default
updated variable names from output _ reader to reader in RuntimeEnvironment and PerforceHistoryParser to improve clarity and consistency to enhance code readability by
added oAuthFactory and oAuthServiceHandleId to PubSubAPI and SDMAPI to manage OAuth authentication and access token effectively
replaced AGGRESSIVE _ EASE with EMPHASIZED in TaskbarEduView . java to improve animation performance by using a more
added handling for UpdateRegionLocation in multiple Java files to improve logging clarity and ensure correct region migration behavior
added a new file ` FileDialogLeakTest . java ` to test resource leak scenarios in ` FileDialog ` to ensure proper resource management and prevent memory
hbase - 26906 move testopentableincoprocessor test to coprocessor ( addendum )
trufflefeature : add support for uninterruptible implementation
[ hotfix ] [ table - planner - blink ] remove unused split method from pbcodegen
updated condition to check if ` disi ` is not null to ensure that ` disi ` is not null before proceeding with further logic
fix flakiness in fakemediasourcetest
added support for determining if the Java version is at least Java 9 or higher to enhance compatibility with newer Java versions
fix npe in filereportertest
changed the condition for checking end - to - end encryption keys from false to true to ensure the end - to - end encryption feature is enabled by default
added back navigation functionality to the action bar in DirectMessageConversation to enhance user experience by allowing users to navigate back easily
added support for user impersonation in the RpcServlet and RpcRequest classes to enhance security by restricting access to user - specific data
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL to ensure compatibility with different architecture configurations
replaced the variable ` startClass ` with a local variable ` originalStartClass ` in the strategy ' s notFound logic to improve code clarity by
improve error message and add local for register number
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl .
fix nimbus look and feel issue in commonapp
updated regex pattern for version strings in AppPage . java to improve accuracy in matching version identifiers
refactor animation listener handling in LauncherAppTransitionManagerImpl . java to improve readability and maintainability of the animation logic
dumpedprivatekey : improve error message
change offer data model to use new offer payload instead of old one
refactor milestoneParameters initialization to depend on the milestone ' s status to enable dynamic handling of open and closed milestones for better parameter
updated the RFBattery initialization from 640x0 to 80x80 in PipeItemsWood . java to adjust the battery dimensions for better performance
added a private method ` getClusterKey ` to ` StateMachineInvoker ` to include a ` clusterId ` and ` blueprintName ` parameters in
initialized ` downgradeAllowed ` to true in ` UpgradePack . java ` and added a test for downgrade functionality in ` UpgradePackTest . java
updated XML parsing methods to use ATTRIBUTENAME instead of ATTRIBUTE to improve clarity and consistency in XML attribute handling
add ability to disable system load library by default
updated sorting methods in AppsCustomizePagedView and LauncherModel to use getAppNameComparator ( ) instead of APP _ NAME _ COMPARATOR
refactor file handling in DefaultPlatformManager and FatJarStarter to improve directory creation and ensure parent directory exists to enhance code clarity and
updated test method signatures and assertions in TestSecretKeyCredentialHandler . java to improve clarity of test failure messages for better debugging
( chore ) camel - core : remove unnecessary dependency on applicationcontext
improve documentation for push - based reporters
hbase - 20855 testfulllogreconstruction . testfulllogreconstruction . testfulllogreconstruction . testfulllogreconstruction .
added support for reuse address and traffic class in DatagramSocketOptions to enhance socket configuration flexibility for socket management
fix server shutdown message in glow server
simonstewart : deprecate the Locatable interface in favor of Locatable
updated error messages to clarify searchable fields and their retrievability status to improve error messaging to enhance user understanding of field requirements
replaced ` equalityPredicateColumns ` with ` predicateColumns ` for better clarity to enhance code readability and maintainability by using more desc
updated the initialization of the channel node in HelloMessage . java and HandshakeHandler . java to ensure consistent handling of identity checks before disconnecting messages to
fix a syntax error in the Navigator class .
added a new configuration class for ParquetRecordReader in RecordReaderFactory . java and created a new RecordReaderFactoryTest . java file to
added methods to create greater than and less than equal queries in MongoQueryCreator to enhance query capabilities for MongoDB queries to improve query flexibility and
refactor group by expression handling in CalciteSqlParser . java to improve clarity and maintainability of group by expression validation logic
added memory management for mappedByteBuffer and FileChannelLinesSpliterator classes to ensure proper resource cleanup and prevent unsupported operations
refactor LdapUtils to use a variable for the validator before accessing its properties to improve code readability and maintainability by reducing repetition
added a ` schedule ( ) ` method to the ` CircuitBreakerImpl ` class and updated the ` testCircuitBreaker ` method to include
removed duplicate FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS and FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from
change ` ` webui . submit . upload . ajax ' ' to ` ` webui . submit . upload . progressbar ' '
added JUnit @ Disabled annotation to the DisplayName annotation in TableExtRetrieverTest . java to temporarily disable tests related to column privileges retrieval
added synchronized keyword to the addExportedCount method to ensure thread safety when accessing shared resources
removed unnecessary import of ` IntRangeUtil1 ` in ` MetricsImpl . java ` to streamline code by eliminating unused dependencies
updated character validation logic in HttpParser . java and added a test for encoded headers in HttpParserTest . java to ensure proper handling of illegal
updated the layout resource from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to align the activity with the new design specifications
updated output message to include the position of SLWT to improve clarity of output for debugging purposes
refactor ForceLeaderTest and ForceLeaderWithTlogReplicasTest to use a timed wait mechanism for document retrieval to improve test reliability by
refactor Thread class to improve code readability and maintainability
added support for customizable template file extensions in AbstractConfigurableTemplateResolver to enhance flexibility in template processing by allowing different file extensions
camel - 16400 : camel - cxf - allow to configure xmlns attribute on cxf payload
reformatted constructors in YamlRepresenter class to improve code readability and maintainability
updated date formatting to use String . format for better readability to improve code clarity and maintainability
added validation checks for transaction strings in GenericUDTFGetSplits . java to ensure that valid transaction strings are set from driver configuration
updated debug logging statements to use ` Collections . emptyList ( ) ` instead of ` ArrayList < String > ` and ` ArrayList < TypeInfo > `
added a null check for book path before loading data and introduced a method to check for no initial image to enhance robustness by preventing
refactor SSTDeserializer to improve readability and structure to enhance maintainability and clarity of the code
refactor ` AppPreferencesImpl ` to use a constant for the default grid column to improve code readability and maintainability by avoiding magic numbers
updated error message in Platform . java to include " line - break characters " to improve clarity of error messages for better debugging
added a new boolean field ` waitingForKeys ` and updated related logic in ` DecoderInputBuffer ` and ` ClippingMediaPeriod ` classes to control the
updated path annotations in OkexV3 . java to ensure consistency in API path formatting
refactor equality checks for x1 and y1 and y2 in LineUtilitiesTests . java to improve readability to enhance code clarity and
updated the handling of varargs and old array syntax in JavacParser . java and added new classes T6569633 . java and T6569633
check that defaultdrmsessionmanager be call on the correct thread
added METHOD context handling in VariableContext and corresponding tests in TestVariableContext to improve method resolution and ensure correct parsing of method calls
add test for invalid compilation unit and profile string json
updated buffer position handling in Piece . java and SharingPeer . java to ensure correct positioning for buffer operations
added response timeout configuration to NettyRoutingFilter and NettyRoutingFilter to enhance response handling by allowing configurable response timeouts
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` in ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to streamline
added unit test base on user forum issue
added field access handling in ASTConverter and refactored field access conversion logic in RexNodeConverter to enhance field access processing and improve code clarity
refactor QueryLogger to use a constant for QueryLogEntry values to improve code readability and maintainability
[ type : refactor ] add support for relativize no proxy in webclient request ( # 6894 )
updated certificate handling logic in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and ensure proper initialization of certificate chains
added reflection access checks and updated method names in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by ensuring proper reflection access
removed the ` public ` access modifier from the ` CollisionMap ` constructor in ` CollisionMap . java ` to allow instantiation of ` CollisionMap ` without
deprecate getRawInputFromTransactionInput and mark it a deprecated
refactor logging level handling to use a switch statement to improve readability and maintainability of the code
cloudstack - 4071 : do n ' t insert region _ id into cloud _ accounts table .
bug 60284 : excel extractor now throw encryptdextractorexception for old excel file
add -- add - exports = all - unnamed to mx _ java _ benchmarks
modified the visibility of the image holder in TimeLineCursorAdapter . java to ensure the image is hidden correctly to improve user interface clarity by removing unnecessary
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to allow more time for tasks to complete before timing out
modified the creation of the EXTERNAL _ FILES _ DIR directory and refactored directory deletion logic in ShadowContext and ContextTest to improve directory
replaced ExceptionFactoryImpl with Class . forName for better error handling to improve clarity and specificity of exception creation logic
increased the WAIT _ TIME _ MS constant from 10000 to 60000 milliseconds to allow more time for operations to complete before timing out
updated import statements and added audience handling in ConnectOAuth2RequestFactory , ConnectRequestParameters , and ConnectTokenEnhancer classes to improve OAuth2
( chore ) camel - kafka : fix checkstyle violation
added a new constant selectableItemBackground to the R . java file to define a background color for selected items in the UI
replaced specific imports with a wildcard import and added a method to place stop orders to streamline import statements and provide a placeholder for future functionality
updated eventType assignment in TxnSetOperation . java to ensure eventType defaults to UPDATED when record is null
add resumablerandomaccessfilelistener for resumable random access file .
fix typo in securityclassload . java .
added a loop to set the size of formatted formats in HSSFDataFormat . java and updated assertions in TestWorkbook . java to ensure the correct data format
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer
updated length check in CompressedInputStream to use maxCompressedLength instead of check for checksum length to ensure that the length does not exceed the maximum compressed length
camel - 16400 : camel - spring - data - redis - add idempotent repository to check if a value be idempotent .
fix container repair for vanilla use of metadata . ( # 7348 )
fix legacylocalrepositorymanager to work with local layout
added task manager initialization check and logging in LocalTaskManagerThread and JobManager classes to ensure proper error handling and logging when the task manager is
improve error message in case of deployment failure
replaced ` temporalPath ` with ` internalTemporalPath ` in ` FileStorageUtils ` and added a new method ` getInternalTemporalPath ` in `
added a method to find FeedEntryStatus objects by their IDs and subscription in FeedEntryStatusDAO . java to enhance functionality by allowing retrieval
added timing logic in ContextImpl . java and refactored BlockedThreadCheckerTest . java for blocking execution in BlockedThreadCheckerTest . java
updated the ` instantiate ` method to accept a ` formatterString ` parameter and improved error handling for null ` ctorArg ` to enhance flexibility
updated file input stream handling in LoadContactsTask . java to support different Android SDK versions to ensure compatibility with newer Android versions and improve file reading functionality
replaced ` setRemoteAddress ` and ` setRemoteHost ` methods with ` setRemoteAddress ` and ` setRemoteHostname ` methods in ` Credentials .
added null check for realClass in Robolectric to ensure that shadowClass is annotated with @ Implements to prevent runtime exceptions
do n ' t require mutual authentication when create sslcontext
updated import statements and added a test for SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL exceptions in the BasicHttpTest class
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility of consumer and producer instances
fix sitemap widget not be visible when update
updated warning message from email to SMS in CommunicationsManager . java to clarify that either email or SMS settings are not configured
# 161 - add draft query optimise method to beandescriptor
added a retry mechanism for handling IOException in MultipartBody . java to improve robustness by retrying write operations on unavailable resources
refactor : fix typo in executablefactory and zipfolder ( # 1735 )
fix checkstyle issue in javadoc
fix : do n ' t use current working directory when attach a file
added SchemaInfoLevelBuilder to SchemaCrawlerOptionsBuilder in AccessTest . java to configure load options for SchemaCrawler options to enhance schema crawling
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and added a
replaced an exception throwing mechanism to return null instead of throwing an exception for unknown operation names to simplify error handling by avoiding unnecessary exceptions
added name , enabled , and expanded properties to ProjectProperty to ensure proper initialization of the prototype properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ doc ] fix typo in datastreamjob
added error handling for ErrnoException in TestContentProvider . java to ensure proper resource management and prevent resource leaks
camel - 7999 : camel - cxf should use the real class to avoid reflection
added a check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory to ensure proper handling of HTTP / 2 cipher validation
updated variable names and parameter handling in LambdaToMethod and ClassFileVisitor classes to improve clarity and correctness in symbol management to enhance code readability
theorem proving : improve theorem proving
increased the timeout duration for file operations in DL4JInceptionV3Net . java to allow more time for cache file operations to complete successfully
added a method to set slop in QueryParser to improve query performance by optimizing slop handling
updated LONG _ PRESS _ DELAY from 10ms to 100ms in LongPressMouseListenerTest . java to allow more time for the event triggering
updated the default value of the collector _ host _ property from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
improve performance of gamescheduler . scheduleparallel ( ) .
updated visibility conditions for edit options in EditShareFragment to ensure edit options are only visible when edit options are available
updated progress calculation in DepthController . java to ensure progress does not exceed a specified threshold
remove unused method from session
added logging for authentication failure in DefaultCasDelegatingWebflowEventResolver and improved error handling in DelegatedAuthenticationGenerateClientsAction to en
added null check for the service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction
added ` hidden ` parameter to the ` arity ` and ` arity ` methods in ` PantheonCommand . java ` to enhance permission management by
added a call to ` doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) ` in ` AndroidConfigure
removed unused imports and simplified the ` isSupported ` method to improve code clarity and maintainability
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization script handling process
camel - 16205 : camel - jms - persistentqueuereplymanager should use thread name to identify the destination
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional writing of tagged images in PdfDocument . java to ensure proper handling of tagged images during PDF processing
log4j2 - 1349 add patternlayout . testpatternselector ( ) method to log4j2 - core
danielwagnerhall : use selenium - server instead of selenium - server for test suite
added a new ` MwThankPostResponse ` class and updated the return type of the ` thank ` method to ` MwThank
added SocketBased interface and updated ChannelEndPoint to implement SocketBased to enhance socket handling capabilities in the application
replaced instances of ` RevokingStore ` with direct calls to ` enable ` and ` disable ` methods in ` Manager . java ` to streamline
added tests for implicit joins on Call and LocalDateTime in HQLTest . java to ensure correct handling of Call and LocalDateTime types during query execution
normalize expected and actual values before comparison in NonVisualRegressionTest to ensure consistent formatting to improve readability and avoid potential issues with line breaks
replaced references to ` toCommit ` with ` filesToCommit ` in ` IndexWriter ` , ` SegmentInfos ` , and ` MockDirectory
added @ Final annotation to multiple methods in BaseError . java to ensure methods cannot be overridden after initialization
added validation for the newPercent parameter in ConsumeUserResourcePercentActuator to ensure that the percentage value is within the range of 0 to 100 to prevent
added a conditional check to show old login in AuthenticatorActivity to ensure login is only shown when the old login feature is active
updated the class name from StreamNetworkThroughBenchmarkTests to streamNetworkThroughBenchmarkTest to improve clarity and consistency in naming conventions
updated the response page setting logic in EditTeamPage . java to ensure proper navigation to UsersPage instead of EditTeamPage
updated debug logging to include exception details to improve error reporting for plugin credential initialization
added a try - finally block for closing the server socket channel in ConnectionManager . java to ensure proper resource management and avoid potential resource leaks
refactor Rocket class to improve code readability and maintainability
added a new method ` createDynPartSpec ` to check for dynamic partition specifications in ` BaseSemanticAnalyzer ` to improve code readability and maintainability
fix round _ half _ up _ factor in stringtemplate
added ` visitDirectory ` method to ` JarDirectoryStep ` and ` DirectoryTraversal ` classes to handle directory entries to ensure JAR entries
added a new file ` JWKSetEditor . java ` to handle JWK set properties to enable parsing and editing of JWK strings into JWK
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to utilize PendingTerm instances to improve code clarity and
truffle : do n ' t call truffleboundary for uncached method .
changed the default value of " fetcher . threads . per . host . by . ip " from true to false to disable thread fetching by default for impro
removed redundant null check for queryTimeout in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included it in HaskellGhciRuleIntegrationTest . java to enhance target configuration
refactor ReplicaPosition class to improve code readability and maintainability
cloudstack - 8470 : do n ' t schedule stats update task if initial delay be negative
updated interpolators to use a constant FINAL _ FRAME to improve code readability and maintainability by avoiding magic numbers
updated swipe length calculation in Background . java to improve responsiveness by adjusting the swipe duration based on display density
added a new module - info . java file to define module dependencies and exports for HTTP3 server components
nifi - 1892 : fix npe in jsontype and jsontest .
removed redundant null checks for the context variable in ResourceResolverBean . java to simplify the code and improve readability
[ hotfix ] [ checkpoint ] remove default value from checkpointconfig
refactor ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` for better type handling to improve clarity
updated the command string concatenation in TimestampCheck . java to include an empty space to ensure correct syntax for command execution
replaced ` FluentIterable ` with ` MoreCollectors ` for file listing to improve code readability and performance by utilizing modern Java features
fix ( dubbo - config ) : enable dubbo service registration by default ( # 10385 )
fix end all session when otr be disable
added new NODE _ LABEL _ OUTLINE _ SIZE and NODE _ LABEL _ OUTLINE _ TRANSPARENCY , and NODE _ LABEL _ OUT
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the flag from false to true in Win32FontManager . java to enable font rendering functionality
added null check before setting cursor in TreeVisitor to avoid potential NullPointerException when v is null
refactor jdtbatchcompiler to use ierrorhandlingpolicy for error handling
added content alignment point and textAnchor fields to LabelBlock class to enhance layout flexibility by allowing customizable alignment options
refactor Class and Parameter classes to improve code organization and readability
refactor IndexReader class to improve code readability and maintainability
added null checks for networkInterface before accessing its properties to avoid potential NullPointerExceptions when networkInterface is null
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter in ` fromRfc1123DateString ` and
added a file extension to the download assertion in FileDownloadViaProxyTest . java to ensure the test correctly verifies the file download failure for pdf files
nifi - 1802 : add output _ no _ hits property to explain no hit in query
server : remove aggregation ratio from quota usage
[ java ] add try - catch block around election work count .
do n ' t close file watcher in readfilesp and streamfilesp
sitem : do n ' t refresh sitemap widget if not need
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` HSSFWorkbook ` , and ` FileSharingRecord ` classes
added error handling for unregistering invalidated sessions in PluginMonitoringFilter to improve robustness by logging exceptions during session checks
refactor CategorizationFragment class to improve code readability and maintainability
updated the status message for bridge reports light as unreachable to clarify the reason for reporting light as not reachable
fix fmlclienthandler not load properly .
fix unit . millions and unit . thousands in block inventory
refactor MessagePackParser to use a switch statement for handling different data types and add a new BinKeyPojo class to improve code clarity and
added a new test method ` queriesWithReservedWordsAsIdentifiers ` to ` HqlQueryTransformerTests ` and ` JpqlQueryTransformer
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct JSON serialization and deserialization of nested maps
added addition of offset to x2 and y2 in GeometryUtils . java to ensure correct positioning of geometries based on offset
updated variable names and added sorting order functionality in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and enhance user experience by
add error message if test plan can not be find
updated method names from " dbmsName " , " schemaName " , " tableName " , " columnName " to " getDbmsName
added null check for argIdent in Parser . java to ensure argIdent is only added if it is not null to avoid potential NullPointerExceptions
updated the default HTTP protocol from " SSL - HTTP / 1.1 " to " https - HTTP / 1.1 " to ensure compatibility with the
cloudstack - 1771 : set default volume display to true for volume offering
refactor JavahTask to accept a boolean parameter for versioning to improve flexibility in handling version messages based on the full parameter
refactor ChangeLogParameters to improve handling of global change log parameters to enhance clarity and maintainability of the code logic
no effective change - change log level to warn
hhh - 14589 skip test for oracle dialect that cause exception during formatting of the sql string
removed redundant calls to ` startHandshake ( ) ` and ` setSoTimeout ( ) ` in ` SSLSocket . java ` to streamline handshake process
added a condition to check if the MainActivity is not a popup before calculating the status bar height to ensure proper handling of non - popup activities
make classhierarchyororison final for good performance
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5481 - amq -
refactor JodaTimeRangeRandomizerTest to simplify random value generation logic to enhance readability and maintainability of the test code
refactor WebDescriptor to redirect entities based on Jakarta EE version to enhance compatibility with different Jakarta EE versions and
fix : add node readiness check to baseoperation
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure the correct endpoint configuration is applied to the handler
added a null or empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new versioning of RPC components
added a security check for package access in ObjectStreamClass and ObjectStreamField classes to enhance security by ensuring package access checks are only performed when the
removed unused imports and simplified method implementations in Utils . java to improve code readability and maintainability
updated the ` sanitizeUrlTemplate ` method to return a map of host tags instead of an ImmutableMap to improve the handling of null host values and enhance
danielwagnerhall : fix junit test failure on window
change default log level from OFF to ERROR in Launcher . java to improve error handling by providing a more informative log level
changed private fields to final in IconNormalizer . java to enforce immutability and improve code clarity
added a boolean flag ` firstCallPrepareDo ` and modified the invocation of ` invokePrefixMethod ` in ` PrepareInterceptor ` to allow conditional
refactor Workspace and AppsCustomizePagedView methods to simplify focus handling and improve code clarity
added Singleton annotation to AuthWithStoreFeature and removed eager singletons in Auth . java to improve performance by eliminating unnecessary eager singletons
added an option to ignore invisible associations in the incomingAssociations method to enhance flexibility in association processing based on user preferences
remove private ip from the list of capacity for the pod
added a link to the Basic Usage section for an empty diagram and Linux 4.6 + to provide users with information about the Basic Usage section in the
added a new ` RequiredRefFieldModel ` class and refactored ` ModelResolver ` and ` RequiredFieldModelTest ` to utilize
rename ` CasCoreMultifactorAuthenticationAutoConfiguration ` and ` CasCoreMultifactorAuthenticationAutoConfiguration ` to ` Cas
updated feature flag handling in FeatureFlags . java to improve performance and maintainability of feature management
updated the length of ` uuid ` and ` hueIdPrefix ` in ` ConfigStore . java ` and ` CommonSetup . java ` to
added caching for images in TimeLineCursorAdapter and TimelineArrayAdapter to improve performance by avoiding repeated image loading operations
updated the description of major compaction on full CRUD tables to clarify that compaction operates on insert - only tables as intended
added a null check for the storage path before proceeding to avoid potential NullPointerExceptions when the storage path is not set
refactor hash table resizing logic to use a dedicated checkResize method to improve code readability and maintainability by reducing redundancy
refactor LDAP connection handling to improve code readability and maintainability
added @ Deprecated annotation to the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the annotation is outdated and should no longer be used
removed debug logging statements in TouchInteractionService and RecentsAnimationDeviceState to clean up the code and improve traceability
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher to reflect the correct number of hits returned from the search functionality
added a new file ` LucenePackage . java ` containing a private class ` LucenePackage ` that retrieves the package of ` LucenePackage `
update the addition of size in sizeInBytes from - 1 to - 1 in RAMDirectory . java to correct the logic for updating the sizeInBytes value
updated calculations in ` StatsRulesProcFactory ` , ` GenericUDAFBloomFilter ` , ` BloomKFilter ` , and ` GenericUDAFE
added a null check for the drawer toggle before accessing its properties in MainActivity . java to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method in DefaultAuthenticationAdapter . java to suppress compiler warnings related to unused code
added a boolean flag to enable or disable module scanning based on class loader configuration
add ability to export latex free field with corporate = true
added a method to cancel core recovery based on ZooKeeper awareness to ensure core recovery is only canceled when ZooKeeper is aware to
replaced calls to ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` for better readability and performance to improve code clarity and
updated null checks for ` found ` before accessing its contents to improve code robustness by avoiding potential ` NullPointerException `
[ hotfix ] [ doc ] fix typo in documentation
added trust resolver , role hierarchy , and permission evaluator to SecurityEvaluationContextExtension to enhance security configuration flexibility by allowing default values
added a check for zero exponentSize in DHParameterGenerator to ensure exponentSize defaults correctly to primeSize
removed unnecessary file checks in SynchronizeFolderOperation , UploadFileOperation , and FileStorageUtils to simplify code and improve readability to enhance maintainability
refactor the combine method in DistinctSqlAggregation to use a for - each loop to improve code readability and maintainability
added a test for post - login authentication in UserServiceTest to ensure that post - login activities are executed correctly for successful user authentication
refactor ` ExtractorFramesRare ` to use ` ExtractorSpanishStrippedVerb ` for creating ` ExtractorSpanishStrippedVerb
updated character array handling in CharArraySet . java and added a new test method in TestCharArraySet . java to improve code clarity and enhance
updated track handling logic in MuxerWrapper . java to improve clarity and correctness of track type validation
refactor JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid to improve code clarity and ensure proper handling of genrule
updated character encoding from " UTF - 8 " to " UTF - 8 " in PinotClientRequestServlet and StringDictionary classes to ensure proper
updated case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in naming conventions
added a static instance variable ` instanceClassName ` and modified the initialization process for the ` Vector ` class to ensure it is only instantiated if it does not
removed syncMetaLeader ( ) method call from CMManager . java to improve performance by reducing unnecessary synchronization
improve student feedback result page with no response
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enable logging functionality for testing purposes
updated method signatures to include a boolean parameter for mapping mapping to enhance property mapping flexibility based on user - defined mapping preferences
added support for the VIOMI water heater e1 device in MiIoDevices to enhance compatibility with additional smart home models
refactor variable names from ` _ certs ` to ` sslSessionData ` for consistency to improve code readability and maintainability to enhance code clarity
added a new file CreateNewSpreadsheet . java that demonstrates sheet creation with Excel and HSSF user models to provide an example of how to
replaced ` Duration ` with ` long ` for the ` ttl ` and ` setTimeToLive ` methods in ` CacheProperties ` and ` Redis
updated content URI references from CONTENT _ URI _ NO _ NOTIFICATION to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper and
updated the version of the wiremock test from 2.14 . 0 to 2.27 . 2 to reflect the latest release and ensure compatibility
updated synchronization references from ' lucidaFontName ' to ' this ' in SunFontManager . java to ensure thread safety by using the correct instance variable
added a condition to check if the variable ' c ' equals ' < ' in DocClassUtil . java to ensure proper handling of variable initialization
updated the return statement in Workspace . java to ensure consistent formatting of the workspace scroll format string
added a UI message for no validation errors in ValidateCommandStep . java to inform users when validation errors are found
refactor IntegrationTestContextLoader to utilize ServletContext for resource loading to improve resource management and ensure proper context handling in web application contexts
updated scroll handling logic in Component . java and modified component retrieval in JavaSEPort . java to improve responsiveness and accuracy of component interaction
updated conditional statement formatting in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures in ` StatsService ` and ` DefaultStatsService ` to use ` String `
updated regex patterns in CellContentConverter . java to replace occurrences of " $ 1 " with " $ \ n1 " and " $ \ n1
simonstewart : fix unit test failure on window
mondrian : fix typo in javadoc
added error handling and stack trace printing in ProcessTools . java and updated launcher checks in CustomLauncherTest . java to improve debugging capabilities and ensure
tumblr ripper now support embed image
added a check to ensure the storeType does not already exist to avoid potential NullPointerExceptions
fix initialization of extractorwrapper in init ( )
replaced instances of ` IndexWriterConfig ` with ` PrintStreamInfoStream ` for better output handling in ` BaseLockFactoryTestCase . java ` to enhance
tika - 2088 -- add support for load service loader from xml config element .
added checks for package - info in DocLint . java and updated file names in Test . java and DocLintTester . java to enhance
added support for " import " command in DataImportHandler and DataImporter classes to enhance functionality for importing data from external commands
add a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest ` to ensure that inner classes are not modified
removed unused import of Log in JettyService . java to clean up the code and improve readability
added workspace screens parameter to the checkItemPlacement method and updated related logic to enhance item placement validation based on workspace screens
http : / / issues . apache . org / jira / browse / http : / / issues . apache . org / jira /
[ bugfix ] fix npe in llrealsegmentdatamanager when there be no realtime segment
added a condition to skip tests on Windows to avoid running tests on Windows to ensure compatibility with specific network configurations
fix add contact dialog when protocol provider be not connect
refactor bean registration in AuthenticationConfigBuilder to use a new bean component for user details to improve clarity and maintainability of the code
updated drawBitmap method to include null parameters to ensure compatibility with updated rendering requirements
fix invalid date format in meitrack and totem protocol decoder ( fix # 10 )
changed method visibility of ` getFontPath ` and ` getPlatformFontPath ` from package - private to protected in ` SunFontManager ` and `
marked EnhancedRandom classes as deprecated to indicate that these classes are outdated and should not be used in new development
added exception handling for ` ReachedMaxSizeException ` in ` ClientMapStoreTest ` and ` ClientMapStoreTest ` to ensure that the test correctly
add option to keep empty sentence by default
improve error message when fail to create artifact subdirectory
refactor ReusableCompiler and JavaLanguageServer to use No _ MODULE _ COMPILER instead of LazyTreeLoader to improve resource management by
fix npe when resource return null
refactor sendEmail method to throw a MessagingException instead of logging a message to improve error handling for email sending failures
fix nullpointerexception in pipeitemsobsidian when contain be null
updated DateMathParser methods to accept a Locale parameter across multiple classes to improve flexibility by allowing locale - specific date parsing
added a boolean field ` includeDecals ` and its getter / setter in ` StorageOptions ` and its getter / setter in ` StorageOptionChooser
updated generateDocumentation method to include a null parameter for outputDirectory to enhance clarity and prevent potential null pointer exceptions
updated ` HiveProtoLoggingHook ` and ` TestHiveProtoLoggingHook ` to utilize a new ` findOtherInfo ` method for logging
updated log messages in DocExpirationUpdateProcessorFactory and SuggestStopFilterFactory to improve clarity and consistency in logging output
updated error message in ignoreRecordAttribute to include the major version number to improve clarity of error output for better debugging
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to ensure proper setup and validation of LDAP authentication functionality
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` and updated the condition to use ` BasicStatsNoJobTask ` to improve
fix : save all action not work ( # 558 )
refactor VisibleAdvance class to improve code readability and maintainability
fix : do n ' t start reflector if not reconnecting
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance data handling capabilities for dynamic number columns
added null checks for repository and artifactId in ResolvedGroupArtifactVersion constructor to enhance code robustness by preventing potential NullPointerExceptions
added null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization to enhance maintainability and readability
added shader disposal functionality to the FlameRenderer class to ensure proper resource management and prevent potential memory leaks
do n ' t refresh the context menu if there be no local variable
updated character validation logic in CSSParser . java to enhance robustness by ensuring only valid characters are processed
added a check to set the JFrame ' s window look and feel to be transparent based on the application ' s look and feel configuration to
updated SQL query syntax in HostRoleCommandDAO . java to improve code readability and maintain consistency in naming conventions
updated F2 _ TEST and F6 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER _ TEST _ COMMAND
refactor swipe handling logic in WindowTransformSwipeHandler to improve swipe detection to enhance user experience by differentiating between new and home navigation modes
changed mHostDb from HostDatabase to ColorStorage in ColorsActivity . java to enable storage of color data in the application
refactor methods in String class to improve code readability and maintainability
removed unused Logger and LoggerFactory imports from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method to retrieve global entries from the map to provide a way to access global entries for improved functionality
added assertions to the sendcoin method for witnessesKey in MultiSign34 . java to ensure that the sendcoin functionality works as expected
[ hotfix ] [ test ] migrate test to junit 5
updated classpath handling to use a constant PATH _ SEPARATOR to improve code readability and maintainability
removed static modifier from augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow access to the method from other classes
added assertions to verify presence of fields in the metamodel for ` AbstractEntity ` and ` Person ` in ` InheritanceTest ` to ensure
simplified Outlink initialization by removing unnecessary configuration parameters to improve code readability and maintainability
removed unnecessary parameters from ` ensureUniqueNamesIn ` and related classes to simplify method signatures and improve code readability
added import statements and modified method return behavior in UseLambdaForFunctionalInterface . java , and removed unused imports in TypesInUse . java to improve code cl
fix testng ant task to use append class selector
added a check for Aggregate input in HiveCardinalityPreservingJoinOptimization . java to prevent processing of aggregate inputs that are not supported
added a new instance of ` IForgeRegistry < T > ` to the ` Mapping ` method and updated related logic in ` ForgeRegistry ` to
reformatted variable assignments in Intersector . java for consistency to improve code readability and maintainability
added default methods for SBE decoding and limiting in MessageDecoderFlyweight to indicate that SBE decoding functionality is not yet implemented
refactor ElasticsearchContainerTest to use a constant ELASTICSEARCH _ VERSION instead of a hardcoded value to improve code maintainability and reduce
http : / / issues . apache . org / jira / browse / amq - 4894 - copy message from torrent to peer to
updated cluster name and version ID handling in ClusterDefinition and related classes to improve clarity and consistency in cluster information management
camel - 14284 : camel - ftp - remove unused setter method
[ zeppelin - 2894 ] fix npe in zeppelin Interpreter setting
updated local variable handling in Gen . java and added NoLocalsMustBeReservedForDCEedVarsTest . java to ensure reserved local variables are not
added a check for targetCertConstraints ' s basic constraints and created a new class BuildEEBasicConstraints for certificate validation to ensure proper handling of
added initAfterFirstDbConnection method to JdbcPostgresqlDAO to handle database connection details to ensure values with the same time are upserted based on
updated WebSocket message handling in AbstractWebSocketConnection to ensure buffer size adheres to minimum requirements for WebSocket connections
lucene - 4892 : do n ' t clear pendingdeletecount when delete all document
added null checks for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to ensure proper handling of null values to improve robust
added null checks for orderBy before adding it to the expression to avoid potential NullPointerExceptions when orderBy is null
use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t delete snapshot that do n ' t exist on kvm
added a log message initialization in HiveServer2 . java to improve debugging by logging the initialization process
added a check for tasks size before accessing the first element in AssetManager to prevent potential NullPointerException when the tasks list is
change the return type of deletenode ( ) from void to boolean
fix nullpointerexception in relation CompositeKey and TsKvLatestEntity .
added error handling for empty barcode results in Code128Reader and Code39Reader to improve robustness by throwing an exception when no barcode is found
replaced TreeSet with LinkedHashSet for the suites collection to maintain the insertion order of cipher suites
added a check for control characters in the Escaper class to ensure proper handling of special characters in Unicode code points
updated SQL provider method handling to support both String and CharSequence return types to enhance flexibility in SQL provider support for varying return types
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions to enhance
added a method ` getLayoutTransitionOffsetForPage ` to calculate the scroll offset for a specific page in ` PagedView . java ` to improve
refactor template processing to use a pruned compilation unit and improve code readability to enhance code clarity and maintainability by reducing redund
added setAccessible ( true ) method to WidgetInterceptor . java to ensure method accessibility
added a check for the value of " database . server . id " before setting the literal initializer in ConnectorConfigGenerator . java to ensure that the field
simonstewart : fix the ripper ' s error message
added a menu item for the " LooksFrame . 28 " menu item in BasicSystemUtils to browse to the server ' s host to enhance user
refactor HandleGetter to use a variable for actualValue instead of creating new instances to improve code readability and maintainability by reducing rep
added error handling for ArrayIndexOutOfBoundsException in Record . buildRecordAtOffset method to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpoint ] improve log output in queue
do n ' t call loadBattlefetcher before avatar postload to avoid null pointer
updated Docker image version from 1.0 . 0 to 1.1 . 0 in PortForwardingContainer . java to ensure compatibility with the latest SSHD
added initial garbage collection to the ThresholdTest class to optimize memory management during testing
updated logging condition checks in StdErrLog . java and added new logging methods in StdErrLogTest . java to enhance logging functionality and ensure proper
fixed - rremoteservice . getremoteserivce ( ) method do n ' t work with redisson
added ` isSelected ( ) ` and ` setSelected ( ) ` methods to the ` MultiButton ` class to enhance functionality to manage button selection
updated the activity reference from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align playback navigation with the latest NextUp functionality
fix npe in brokercontroller when enablecontrollermode be set to false
refactor RedisReactiveHealthIndicator to use a ReactiveRedisConnection for better resource management to improve code clarity and ensure proper closure of
refactor background color retrieval to use a helper method to improve code readability and maintainability by reducing redundancy
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
refactor type adapter registration in ToolingApiLauncher . java to improve clarity and maintainability of type adapter registration logic
updated test cases in TestPayloadCheckQuery . java to improve test coverage for payload validation
refactor ConsoleReader to use a new method for printing characters with a mask to improve code readability and maintainability
added user context handling and logging in BaseCommand . java to improve command execution flow and provide user feedback during exit
move modulesupport from test to api , not test
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
do n ' t drop stream . dropwhile on java 9
updated PNG resource paths from " data / wheel . png " to " data / sys . png " and modified song duration from 22 to 183 to
removed redundant calls to registerSystemDialogsReceiver and unregisterReceiver to streamline the code for better readability and maintainability
updated import statement for Cluster in HostsRemovedEvent . java to ensure compatibility with the latest package structure
updated the ` reuseRefreshToken ` variable to ` true ` and added a new ` allowIntrospection ` property in ` ClientDetailsEntity ` ,
added a method to escape special characters in session attribute names to enhance security by preventing HTML injection vulnerabilities
added links for PhraseQuery , PhrasePrefixQuery , and SpanQuery in Query . java to enhance documentation clarity for better understanding of
updated condition checks to use ` isEmpty ( ) ` instead of ` size of ` children ` to improve code readability and maintainability
simplified the condition for handling literal strings in NoValueOfOnStringType . java to improve readability and maintainability of the code
updated method signatures to use Object instead of A to improve type safety and clarity in assertion methods
refactor ThrowingFunction to throw Exception instead of Object to improve error handling by ensuring exceptions are properly propagated
refactor ` getUploaderBehaviour ( ) ` method to ` setUploaderBehaviour ( ) ` in ` AppPreferences ` and ` PreferenceManager ` classes to
fix : avoid npe when try to initialize final field in constructor
updated the initialization of BitmapDrawable to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric ' s bitmap handling
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character declaration to improve clarity and accuracy in checking English
updated PageMarkerResources reference from ic _ pageindicator _ add to ic _ pageindicator _ current to reflect the current page indicator functionality
added a new variable ` reinvocations ` and modified string concatenation in ` BasicInvocation . java ` to include ` reinvocations ` to enhance
updated the calculation of topPadding in DefaultLookAndFeel . java to correctly account for the inner height of the tablet to ensure proper layout rendering by accounting for
added a break statement in Recognize . java to prevent fall - through behavior in a switch case
added haptic feedback functionality to Workspace , FolderNameEditText , PopupContainerWithArrow , and PreferenceManager2 classes to enhance user experience
updated formula cell type handling in ExcelBatchReader and added a new test for text formulas in TestExcelFormat to improve support for different formula
fixed bug in immutablefield . dump ( ) for anonymous inner class
added a private variable ` userAgent ` and updated the initialization of ` HttpGetter ` to use it to ensure ` userAgent ` is set correctly based on application
camel - 16400 : camel - avro - make it easy to configure component and whatnot
changed log level from info to debug for file not found logging to reduce log verbosity and improve performance
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class
replaced version check with a method call to getUniqueID to improve compatibility with OfflinePlayer class
camel - 16400 : camel - jbang - spring - boot - xml - dsl - spring - boot - xml - dsl
added vertexColor functionality to PShape3D to enable control over the rendering of vertex colors based on user preferences
added a boolean parameter ` isPkColumnFiltered ` and updated related methods in ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest `
replaced direct usage of Shadow with direct matrix access to simplify code and improve readability
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor GroovyEngine to simplify class declaration handling to improve code readability and maintainability
add hawtio plug - in to hawtio / hawtio - web . thanks to andreas for the patch .
removed duplicate print statements in NativeCodeGenerator . java to improve code readability and maintainability
removed redundant calls to updateMotors ( ) and updateActiveInstances ( ) in FlightConfiguration . java to streamline the code by eliminating
added unit tests for handling exceptions with varying types in ThrowableAssert _ hasCause _ Test . java to ensure proper exception types to enhance test coverage for
removed flattenName method calls from AutomaticDependencies . java to streamline the code by eliminating unnecessary variable assignments
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in variable naming
danielwagnerhall : add ability to set firefox profile on the firefox driver
added description property and its getter and setter methods to the Route class to allow the Route class to store and retrieve route descriptions
refactor JavacTreeMaker class to improve code readability and maintainability
added a line to set the weight of the edge in ImporterCSV to ensure the edge weights accurately reflect the specified weight
add a method to calculate tariff cost per hour based on the current month
updated SQL query to use ` d . adsrc ` instead of ` pg _ class ` and modified column default handling in ` DatabaseMetaData `
improve error message when binarized sentence be miss
added a StringBuffer to display user details in a string format to improve readability of user information for debugging purposes
log4j2 - 1349 fixed nullpointerexception when message body be null
[ hotfix ] [ runtime ] fix typo in taskdeploymentdescriptorfactory
of - 2030 : rosteraccess . cansubscribe ( ) should check if a group be a member of a node group . jm - 1
added " maven . test . classpath " reference to the project ' s classpath in AbstractJRubyMojo and removed it from CucumberMo
refactor MethodHandleImpl and MethodHandlesTest to simplify type comparison and add a new test for user class signature to improve code clarity and ensure
added import statements for StopFilterFactory and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripChar
updated width and height checks from " > > " to " ! = " in URLImage . java to ensure dimensions do not exceed placeholderImage dimensions
added a condition to exclude " META - INF / " from the name check in the Util class to ensure that " META - INF / "
updated createImageToFileSystem and createImageToStorage methods to include a ' final ' parameter for the ' targetList ' variable and added background
updated assertions in StackWalkerTest to use a different expected value based on the major version to improve test accuracy for different versions of the code
changed the visibility of the addViewportJob method from protected to public to allow access to the method from other classes
updated command - line arguments in SimpleWordCount and RBKTimeSlidingTest to simplify partition handling and improve code readability
added server shutdown and no system exit settings in TestDatabase . java to ensure graceful server shutdown without abrupt termination
added null and empty checks for block and child elements in NodePathsConvertOperator and SchemaQueryMergeOperator to improve robustness and prevent potential NullPointerExceptions
add total _ harvesting _ time to ice transport to track total harvesting time
updated frame rate and active count drawing parameters in ParticleEditor . java to improve visual representation of particle animations
added configuration handling for the " keyserver _ port " property in Hadoop environments to ensure proper management of the " keyserver _ port "
added a transparent background to the SvgViewerFactory to improve visual clarity by removing unnecessary transparency
updated import statements in ShadowKeyguardManagerTest . java and ShadowKeyguardManager . java to ensure compatibility with the latest Robolectric version
updated the ` containsExactly ` method to accept a varargs parameter in the ` containsExactly ` method and added a corresponding test to enhance flexibility in
replaced ` Bandwidth . simple ` with ` refillGreedy ` and added a check for empty keys in ` Bucket4jFilterFunctions . java
added support for external stopwords in GermanAnalyzer and GermanStemmer to enhance text processing capabilities for German language
added hooks to the Generator class and modified query properties handling in QueryProperties and Optimizer classes to enable conditional lineage evaluation based on hooks to improve query
added error handling for NoClassDefFoundError in REngine . java to set the supported flag to false to ensure that the application does not crash when
refactor TraceWebFilter to use SpanAndScope instead of Span to improve clarity and maintainability of span management
updated exception handling in AbstractUpdateCommandStep to ensure a default message is used when the cause is null to improve robustness by avoiding potential NullPointerException
updated SolrServerException constructor to include the base URL to improve error reporting by providing more context about the error source
updated printSetupRecord . setLandscape ( true ) to set printSetupRecord ' s landscape orientation correctly to ensure printSetupRecord correctly reflects its
modify return statement to handle null input gracefully to avoid potential NullPointerExceptions
added a check to ensure that invalid argument names throw an appropriate exception
added background location listener functionality to AndroidLocationPlayServiceManager to enable customization of location updates based on the background context
updated condition to check for GL _ POINTS instead of primitiveType to ensure correct handling of different primitive types
trufflestring : fix indexoutofboundsexception in string comparison
added a call to ` isCommandList ( ) ` in the ` l . setCommandList ( ) ` method to ensure that the command list is
nifi - 11305 : ensure that the alias file name be properly escape .
updated ZkCLI . java to use localhost for Solr configuration commands to ensure commands run on a local Solr instance without external dependencies
updated equality check in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` getStatus ( ) . equals ( ) ` instead of
added a conditional check for remoteGrpcStatus before posting a severe error message in LocalFallbackStrategy . java to ensure that the error message is only
updated method signatures in ` XYItemRenderer ` and ` DrawItem ` classes for consistency to improve code readability and maintainability by standardizing
add entityid to chunkmanager to prevent crash
added a method to return a string representation of EGL error codes in GLSurfaceViewAPI18 . java to improve error handling and provide clearer
do n ' t throw exception for unsupported locale
updated the URI handling in RFC2616BaseTest to use " http : / / myhost : 1234 / tests / " instead of " localhost :
added a helper list to the Construction class to enhance the functionality of the helper list management
added handling for " [ " escape sequence in GlyphLayout . java to ensure proper processing of escape sequences in the layout
added security permissions for context class loader manipulation in Transport and TCPTransport classes to enhance security by restricting context class loader access
updated directory listing logic in ReceiveExternalFilesActivity to handle null folder paths to improve robustness by ensuring a default folder is used when none is provided
added null check for serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when serviceLoaderClassLoader is null
updated the calculation of deltap in TubeCalc . java to correct the formula used in BarrowmanCalculator . java to ensure accurate delt
updated column retrieval logic in TimelineControllerImpl . java to ensure correct column assignment based on node and edge table types
added a method to register extra components for BrokerAdminApiApplication to enhance the broker management functionality
added unit tests for bug 4658 in MultiCfQueryExecIT . java to ensure correct behavior of SQL queries under various scenarios
peergroup : use a LinkedList instead of an ArrayList for the candidates list .
fix infinite loop in tile abstract builder .
updated ` configNodeSimpleConsensusSnapshotTriggerThreshold ` to accept a ` Supplier < RatisConfig . RatisConfig > `
updated multiple Java files to improve code consistency and maintainability across the project
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 544 : jmx
tika - 2852 -- add support for non - unicode entry name in package parser
add a new file ` TestSplitThruPhiDivMod . java ` that tests the behavior of ` mod ` and ` div ` methods in
added methods to lookup generic interface and superclass templates in TemplateRegistry . java to enhance template lookup functionality for improved type handling
increased the buffer size from 512 to 1028 to accommodate larger data sets
add todo for future language support
updated byte array handling in TransferCompletionHandler to accommodate larger transfer bytes to improve performance by reducing the number of bytes sent to the transferAdapter
bugfix : move focus listener to popup menu
added null check for the source node in SemanticAnalyzer . java to ensure proper error handling for invalid table aliases to improve robustness by providing a clearer
added scaling functionality to the SkeletonRenderer class to improve rendering accuracy by adjusting the bounding box of the skeleton
added ` getSolrHome ( ) ` methods to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to retrieve the Solr home
added import statement for ComponentScan in SpringWebConfig . java to enable component scanning functionality to enhance component scanning capabilities
removed the getAccount ( ) method from UserListItem . java to simplify the code by eliminating unnecessary account conversion logic
added tests for package installation defaults in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure correct handling of package information during installation
refactor AvailableSettings class to improve code readability and maintainability
added TransactionCapsule and ReceiptCapsule to TransactionTrace class to enable handling of transaction details in transaction management
add option to turn off shuffle member list by default
replaced instances of ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to utilize a more appropriate data type to enhance
refactor JsonDeserializer class to improve code readability and maintainability
updated fetchSize handling in QueryProcessExecutor and OverflowQueryEngine to use ThreadLocal to improve thread safety and reduce contention in fetchSize
updated the method name from ` trunk ( ) ` to ` trunc ( ) ` in ` GenericUDFTrunc . java ` to clarify the
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize title to an empty string instead of null to avoid potential NullPointerExceptions when title is null
added a response body of an empty string in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure proper handling of responses without a body
deprecate embedserverinstance a it ' s not use anymore
use reflection to register macosx event on jabref frame . fix # 1181
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related test classes to improve clarity and
updated return statement in HandlerLibrary . java to ensure proper type handling for Enum instances
changed the visibility of hideUnprivilegedObjects from private to private final to ensure that hideUnprivilegedObjects cannot be modified after initialization
change log level from info to fine
added support for Android Q in IOUtils to retrieve GIFs from GIFs compatible with Android Q
fix serialization of variableinstanceentity in test
refactor multiple ticket registry classes to improve code organization and maintainability
( chore ) camel - maven - logger : remove unnecessary null check
hbase - 5696 use hadoop ' s dataoutputoutputstream instead of have a copy local ( talat uyarer )
updated test cases in TestAcidOnTez . java to reflect changes in bucket operations to ensure accurate testing of statistics handling for different scenarios
change log level from info to debug to reduce log verbosity and improve performance
added a method to retrieve the default provider name and updated provider name handling to improve code clarity and maintainability by centralizing provider name retrieval logic
added Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance instance field processing to support Captor - related functionality
added checks for empty class and method names in TestSuiteBuilder . java to ensure that tests are enabled before proceeding with execution to avoid runtime exceptions when no
updated import statements and modified prefix checking logic in GroovyAutoComplete . java and GroovyAutoComplete . java to enhance code clarity and ensure
use osm instead of graphhopper for import
kristianrosenvold : fix npe in handlesession
changed the visibility of mHideSysUiScrim from final to non - final and added functionality to manage the top shadow visibility based on user preferences
refactor ` enqueue ` and ` cancel ` methods in ` OkHttpCall ` and ` CallTest ` classes to improve resource management and ensure
refactor swipe handling logic in WindowTransformSwipeHandler to improve swipe detection to enhance user experience by differentiating between new and home navigation modes
updated RequestMatcher interface to extend from org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with the latest Spring Security
updated conditional expressions in DeferredAttr . java and added a new test class ImplicitLambdaConsideredForApplicabilityTest . java to enhance conditional logic
[ wasm ] fix checkstyle violation in wasm .
added unit tests for display metrics population in DeviceConfig and DeviceConfig classes to ensure accurate handling of display metrics across different screen configurations
updated exception handling in ExternalViewReaderTest and PinotDataTypeTest to use RuntimeException instead of IOException and modified timestamp initialization to improve error handling clarity and
updated the icon reference from ` drawable . logo ` to ` mipmap . ic _ launcher ` in ` RootCursor . java ` to improve the visual
added content text to the error builder to ensure the error message displays the correct content
updated ConcurrentHashMap implementation to improve concurrency handling and performance
added methods to adapt user trades and user trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTrade
updated method calls in PlotSquared . java and Claim . java to improve clarity and consistency in plot claiming logic
simonstewart : add ability to pass proxy to htmlunitdriver .
added support for VARBINARY data type in BlobType to enhance compatibility with VARBINARY data type handling
refactor cookie version handling in SetCookieSupport . java to simplify versioning logic to improve code readability and maintainability
added synchronization to the language . simpleTypeMap [ idx ] variable to ensure thread safety when accessing shared resources
updated InboundBuffer to use ContextInternal instead of VertxContext to ensure compatibility with Vert . x thread context management
refactor LdapTimeoutTest to use a new DeadServerNoTimeout method for timeout handling to improve test reliability by ensuring the timeout duration is
updated usage message to use UnicodeData instead of UniocdeData to improve clarity and consistency in usage instructions
camel - 16400 : camel - cxf - add operation name to camel - cxf to avoid clash
refactor multiple Synth - related Java files to improve code organization and maintainability across the Synth package
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of BoosterSet instances to enhance
added support for proxy in jabref
updated metrics handling to use a constant for blockchain frequency to improve code readability and maintainability
return false instead of throwing an InternalError to disable compilation for JEP 359 support
hbase - 26909 addendum addendum fix typo
removed chunked transfer handling from NettyRoutingFilter to simplify the code by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer to ensure the attributes are reset before processing new patterns
added a polling period parameter to the VerificationAfterDelayImpl class and updated related methods to improve error handling during verification processes
added a compaction flag to SessionState and modified conditional logic in SemanticAnalyzer to ensure proper handling of table masking based on compaction status
[ zeppelin - 4747 ] [ zeppelin - 4748 ] make zeppelin interpreter work with zep
hbase - 20613 addendum hbase - hbaseadmin . getalltables ( ) should return a list of region for all region
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
removed redundant calculations for x bounds in BarLineChartBase , CombinedChartRenderer , and BarLineScatterCandleBubbleDataProvider classes to streamline the
fix memory leak in simpleSAX
fix memory leak in http sender over http
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` JavaTypeSignatureBuilderTest ` to use it to ensure
added a null check for the result set before closing it to avoid potential NullPointerException when closing the result set
updated driver version from - 1 to 10 in DerbyDatabase . java to reflect the new versioning of the database driver
fixed bug 1980032 - usestringbufferlength do n ' t work with empty stringbuffer
updated logging statement in RemoteSparkJobMonitor . java to improve error handling and logging clarity
updated the createDb method to return a Connection object instead of void to improve resource management by ensuring the database connection is properly closed
refactor CreateCustomMetric and ListResources classes to improve code organization and maintainability
hbase - 27864 add support for hbase . hbase . compaction . max . compact . size . size . off - peak
added JSON handling for BitstampDepositAddress in BitstampDepositAddress . java and created a new JSON unmarshalling test in BitstampDepositAddress
replaced IllegalStateException with IllegalArgumentException in BufferingResponseListener . java to ensure proper handling of buffer capacity exceeded scenarios
changed the parameter type of linkPath from ` linkPath ` to ` toAbsolutePath ( ) ` to ensure compatibility with absolute path handling in the project
updated InvocationFinishedEvent to implement MetricsEvent instead of Event and refactored metrics retrieval to use ConcurrentHashMap to enhance concurrency handling and improve metric retrieval
added a loop to check for multicast support in the optionsTest class to ensure that only valid multicast interfaces are returned
removed duplicate code for validating valid checksums in ChangeSet . java to improve code readability and maintainability
added a cloning method for IndexInput in BufferedChecksumIndexInput . java to ensure that cloning is not supported in the input class
updated the equality check in Math . sqrt to include a radius parameter to ensure that the returned value is within the defined radius range
updated frequency band assignment logic in P25Channel . java and added @ Override annotations in P25ExplicitChannel . java to improve code clarity and ensure
rename ` tapSquareSize ` to ` tapRectangleWidth ` and update related references in ` GestureDetector . java ` to improve clarity
change default _ replicate _ on _ write to false by default
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and utilized it in CryptoFacilitiesAuthenticated and CryptoFacilitiesTradeServiceRaw classes
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceCallableTests ` classes to provide
refactor error handling in FileActivity and FileDisplayActivity to utilize FileDetailSharingFragment for file retrieval and message retrieval to improve code cl
[ libquiche ] make quiche connection stream writable
added a boolean parameter to the JavaScript context initialization to enhance flexibility in context handling
removed alignment constraints from TableCell constructors in BaseTextFormattingHelper . java and TableCell . java to simplify TableCell initialization and improve code readability
added a new file TracingAutoConfiguration . java to implement tracing functionality for the UAA service
updated content addition in Submissions . java to use a Para instance to improve clarity and maintainability of the code
updated the handling of queryable segment data in ServerQueryExecutorV1Impl . java to use a list of segments instead of a single segment to improve
[ hotfix ] [ test ] fix typo in vertxbuffertest
refactor date extraction logic in MessageSubmissionChunk and add a new TestMessageSubmissionChunk class to improve readability and maintainability of the code
changed the access modifier of mContext from private to protected to allow subclasses to access the Context variable for better extensibility
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to improve code clarity and reduce unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` to handle MongoDB integrity violations to improve error handling by providing specific context for
[ hotfix ] fix checkstyle violation in jobcoordinatorservice
added a new method ` bitsToHumanReadable ` to ` DisplayUtils ` for converting human - readable strings to human - readable strings to improve
updated merge policy initialization in TestUpgradeIndexMergePolicy . java and added a test for no pathological merging in TestMergeOnFlushMergePolicy .
added a check to return early if mOverviewStateEnabled is disabled to improve performance by avoiding unnecessary processing when overview state is not enabled
[ api ] add link to deeplearning4j . org for performance issue
updated ` loadSettingModels ` method to accept an ` InputStream ` parameter for reference properties to enhance flexibility in loading settings from different input sources
added null checks for input parameters in FilterLeafReader . java to ensure that null inputs do not cause runtime exceptions
nist - tests : add support for non - negative keysize
updated IOException handling in NetSocketReader and SoftEndOfStreamException classes to improve clarity and consistency in exception management
removed unnecessary import of ` javax . inject ` from multiple Java files to clean up the code and improve readability
updated the expected value in BundledDistributionTest from 9 to 10 and added database user assertions in PostgreSQLTest to ensure tests reflect the correct number of
[ hotfix ] [ runtime ] make pipelineoptions . name configurable
updated scale calculation for two - panel layouts in OverviewState . java to ensure correct scaling based on device profile dimensions
make ice plains biome extend snowyBiome , close # 189
removed the ` DateTimeZone ` parameter from ` getMaxTime ` and ` getMinTime ` methods in ` DataUpdateManager ` and ` StorageUtils
[ j2kt ] make thisreference qualify .
fix xhamster ripper to handle xhamster url properly
use a temporary list instead of create a new one each time
fix oracle dialect to handle schema name correctly
fix a syntax error in flutterconsolefilter . java ( # 5078 )
added a new variable ` mNumberOfAllFiles ` and modified ` FileMenuFilter ` and ` FileListListAdapter ` to handle it to
[ java ] : fix term offset calculation for network publication .
updated GuildUpdateOwnerEvent class to improve event handling for owner updates
updated inPortalTicks increment logic in Player and Entity classes to account for creative and non - creative tick conditions to ensure proper handling of portal tick
added compression functionality to the cluster monitor tile skin to enhance user experience by allowing items to be displayed in compressed mode
refactor multiple codec template classes for improved consistency to enhance maintainability and readability of the codebase
updated the calculation of ` lengthDataBits ` and ` numberQuartet ` to use ` long ` instead of ` int ` for better handling of
removed redundant null check for renderer and header in RendererConfiguration . java to simplify code logic
server : do not allow disk offering to be change on same custom service offering ( # 5078 )
updated import statements and builder methods in HitbtcAdapters . java and HitbtcAdapters . java to improve code clarity and align with the new
rename idleCount to consecutiveIdleCount to improve clarity and consistency in naming conventions
polish ` ` jruby scripting ' ' : fix typo
updated displayName assignment in ConfigCategory . java to use a variable to improve code readability and maintainability
updated conditional logic in ParticipateAssetIssueActuator . java to include a check for negative exchangeAmount to ensure correct handling of exchanges with negative
removed conditional logic for loop iterations in FeedUtils . java to simplify code and improve readability
added a new test method ` testHDF4 ` to ` HDFParserTest ` for HDF4 file reading to ensure compatibility and functionality of
added a new constant CALCITE _ 6092 _ FIXED in SqlOperatorTest . java and modified cast checks in SqlOperatorTest . java to
removed redundant whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quietly close specified AutoCloseable objects to improve resource management by preventing resource leaks
updated confirmation button resource string from ' posBtn ' to ' common _ yes ' to improve clarity and consistency in resource naming
added a check for non - zero width and height parameters in the drawImage method to ensure that drawing only occurs when both width and height are non -
replaced ` sun . misc . Unsafe ` with ` java . security . ProtectionDomain ` for reflection - based method invocation in ` UnsafeAccess . java
updated regex pattern for invalid port numbers in GUIUtil . java and added corresponding tests in GUIUtilTest . java to enhance validation logic to improve accuracy
refactor conflict handling in CachedRowSetWriter to improve clarity and maintainability of the code
update sdk version check to use min _ supported _ sdk
added a check for reference equality in ReferenceMemory . java to ensure proper handling of references in the code
updated input path handling in Injector . java to check for non - file input files before adding them to MultipleInputs to ensure that only valid seed files
added a condition to check if ` hideOriginal ` is true before verifying the visibility of the original view in ` FloatingIconView . java ` to
updated the calculation of maxNodes in DefaultLoopPolicies . java to ensure that maxNodes does not exceed the maximum number of nodes to prevent potential out -
added logging for unsupported texture coordinate types in CombinedTexture . java to improve error handling and debugging for unsupported texture coordinates
added error handling for file deletion and validation in EncodeActivity , SupplementalInfoRetriever , and MatrixUtil classes to improve robustness by throwing an
added ` seek ` method to ` TracingConsumer ` and ` TracingProducer ` to enable delegation to ` TracingProcessor ` for seeking
updated the SQL query to use a variable for the oldPrefix length in HandleDAOImpl . java to improve clarity and maintainability of the code
updated the way convertedValsList is initialized from a collection to improve performance by avoiding unnecessary copying of the collection
added a deprecated constructor to AbstractTimer to deprecate the constructor and indicate that the constructor should no longer be used
added a flag to show a warning dialog when the Universal Gcode Sender version is " nightly " to inform users of issues related to n
[ # 7711 ] feedback session : sort response by team name ( # 7712 )
updated return message to remove unnecessary throws declarations to improve clarity and consistency in error reporting
deleted ` CacheApplication . java ` and refactored ` CommonsApplication . java ` to ` CommonsApplication ` and ` ShareActivity . java
replaced calls to ` realObject . getContext ( ) ` with ` RuntimeEnvironment . application . startService ( ) ` in ` ShadowContextImpl .
refactor StatisticsServlet class to improve code readability and maintainability
added conditional logic to update configuration based on SDK version to ensure compatibility with devices running KitKat and above
added a constant for the existence of a stack repository update link in VersionDefinitionResourceProvider and a corresponding test case in StackManagerTest to ensure that the
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add a null check for oldIndexName before proceeding to avoid potential null pointer exceptions
added " com . sun . apache . xml . internal . resolver . helpers " and " com . sun . apache . xml . internal .
renamed methods from ` save ` to ` add ` across multiple classes to improve clarity and consistency in method naming
added handling for loop exit nodes in GraphUtil . java to ensure correct input handling for loop exit nodes
updated RecyclerView references from RecyclerView to WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and SearchAndRecommendationsScrollController .
added a check to ensure terminal support is available before proceeding with operations
changed data types of timeAllowed from Long to Integer in CloudExitableDirectoryReaderTest . java and added timeout checks in LBHttpSolrClient
added session validity check in AbstractSessionCache and improved session management in RemoveSessionTest to ensure only valid sessions are flushed on response commit
refactor column name handling in ChangedIndexChangeGenerator to use a variable for reference and compared values to improve code readability and maintainability by
replaced Vector with ArrayList for buttons in ButtonGroup . java to improve performance and simplify button management
updated UserManagerCompat and UserManagerCompatVL classes to use UserManagerCompatVM instead of UserManagerCompat to improve compatibility with newer Android versions
added getDatabaseMajorVersion ( ) and getDatabaseMinorVersion ( ) methods to MockDatabase , AbstractDatabase , and HibernateDatabase classes , and impro
added MAX _ MISMATCH _ RULES _ TO _PRINT constant and updated mismatch handling logic in ActionGraphCache . java to improve
added LockDatabaseDesc and UnlockDatabaseDesc classes to implement Serializable for managing database locking and query operations
updated the ` RankingTopComponent ` and ` RankingUIModel ` to streamline visibility and selection logic to improve code readability and
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to ensure proper disconnect handling and enhance log cl
added a test for deleting a storage group in IoTDBAuthorizationIT . java to ensure proper authorization and authorization for deleting storage groups
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated type validation logic in Assertions and added handling for unknown variable types in FindMissingTypes to improve type validation accuracy and provide clearer error messages
added a new method ` afterTestClass ` to ` StepScopeTestExecutionListener ` to handle lifecycle callbacks for test classes
refactor CountersManager to simplify buffer handling and improve error messages to enhance code readability and maintainability by reducing redundancy
updated logging statements in ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to use ` getAddress ( ) ` instead of
added a null check for joinKeys before accessing its properties to avoid potential NullPointerExceptions when joinKeys is not initialized
added a default principal resolver to the authentication handler registration to enhance flexibility in handling principal resolution during authentication
modified the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > searchPaths ` parameter and updated related test cases to enhance
made several fields final in Oracle . java to enhance immutability and prevent unintended modifications
[ hotfix ] [ doc ] disable unaligned checkpointing until rescaling of unaligned checkpoint be complete
throw unsupportedoperationexception when a function can not be find
make graal . compiletheworld test more verbose
added a check for LocalVariable instances in LambdaRewriter . java to ensure proper deletion of local variables to prevent runtime exceptions
added support for MySQLDatabase alongside SybaseDatabase in CreateTableGenerator . java to ensure proper handling of timestamp columns in generated tables
added context class loader management in EnvConfiguration to ensure proper class loading behavior for the current thread
added a condition to set ejection delay based on stageNr in SimulationListHandler to ensure ejection delay is set for motor configuration when stageNr
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related methods to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability and maintainability
updated issuer handling to accept an Optional < OAuthRegisteredService > parameter across multiple classes to enhance flexibility in issuer resolution based on registered services
updated collection handling to check for null DocCollection references to improve robustness by providing a clearer error message when a null DocCollection reference is encountered
replaced ` setAlignment ( ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea . java ` to ensure consistent
added foreign database and schema names to ForeignKeyColumn and AbstractRelationalDbmsHandler classes to enhance flexibility in managing foreign key database
[ java ] : do n ' t swallow timeout exception in election .
replaced the static import of ` Shadows . shadowOf ` with a private helper method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetooth
added validation for selection root in FileSelection . java and introduced a new test case in TestBugFixes . java to improve error handling and
deprecate oninventorytick in favor of oninventorytick in favor of oninventorytick
added support for WAR class extension in export .
added a null check before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when accessing getSherlockActivity ( )
updated widget options handling in AppsCustomizePagedView and added binding options in Launcher to improve widget binding functionality and ensure proper binding of app widgets
added new capability constants for EcobeeSensorDevice to enhance functionality by supporting additional device capabilities
updated formatting and improved readability of the code to enhance code consistency and maintainability
added AAPT and AAPT2 environment variables to the Genrule configuration to support AAPT2 functionality in the build process
only dump access table once .
added a null check before disposing of the message object to avoid potential NullPointerException when message is null
updated the ` db ` variable to be ` final ` and added getter methods for ` db ` in ` TronStoreWithRevoking ` ,
updated warning messages in CoreContainer . java to clarify that LogWatch functionality is not yet implemented for log4j
replaced printStackTrace ( ) calls with fail ( ) method in CategoryPlotTests . java to standardize error handling for cloning failures
updated IOSImplementation to use " tel : / / " instead of " tel : : / / " for phone number and
* use intmap instead of hashmap for good performance
updated the connection string from " en _ US " to " jdbc : derby : ; shutdown = true " in AbstractDIHJdbcTestCase .
updated the handling of the ` firstExchangeCompletedTimestamp ` attribute in ` RouteInfo . java ` to check for null values before casting to ` Date `
updated language handling in TestHtmlTag . java and TestUseOption . java to improve clarity and functionality of locale - specific HTML output
added a check for a length of 10 in the completion result validation to ensure that the completion result does not exceed the specified length limit
updated command - line arguments in HybridClusterIntegrationTestCommandLineRunner to use ` timeColumnName ` instead of ` _ timeColumnName ` to improve clarity
refactor output format handling to improve clarity and maintainability of the code
updated condition in DeviceProfile . java to check for a non - QSB state to ensure proper behavior when QSB is enabled
added ` equals ` and ` hashCode ` methods to ` AnimationList ` , ` SceneKey ` , and ` GltfModelKey `
added a ` _ date ` field and its associated methods in ` AbstractGenerator ` , ` Generator ` , and ` HttpConnection ` , and ` TestServer
replaced Adler32 with CRC32 in Store . java to improve performance by using a more efficient CRC32 implementation
cloudstack - 8470 : allow xen heartbeat interval to be disable by default
added a new warning constant ZERO _ AREA _ FIN and updated geometry warning handling in FinSetCalc . java to improve clarity of warning messages
refactor ElasticsearchIO to use Jackson ' s Serializer instead of Jackson to improve compatibility and reduce dependency on external libraries
hhh - 15464 add trunc function to h2 and oracle dialect
updated error handling in MetricUtils and MetricUtilsTest to differentiate memory pool errors to improve clarity and specificity of error reporting
updated UserTests and UserContext classes to include JavaScript support and improved exception handling in UserContext methods to enhance user experience by enabling JavaScript support and
fix validation error message
updated the BACKFILL path from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java to align
updated return statements in PrecompiledContracts . java to use ` 1 ` instead of ` new DataWord ( 0 ) . getData ( ) ` to ensure
update badge state handling in AllAppsContainerView . java to improve the accuracy of badge updates for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
updated the start method calls in ResourceHandlerTest and ServletContextHandler to ensure proper initialization of the handler and context management
removed conditional check for custom draw identifiers in Cling . java to simplify logic for handling draw identifiers to improve code readability and maintainability
trufflejdk : remove assertion on null lookupmodule
added @ Ignore annotation to ClassicSuperHandlingTest . java to mark tests as ignored until call - through is turned on for unshadowed classes to
removed unnecessary imports from multiple Java files to streamline the code and improve readability
ww - 3474 fix npe in profile activation interceptor .
added a private constructor to Utils and AppUtils classes to enforce singleton pattern to prevent instantiation of Utils objects
added try - with - resources for objectinputstream to prevent resource leak
updated type handling in Util . java to use " java . util . Vector " instead of " java . util . Vector " and improved
added tableNameWithType to the warning log message in RetentionManager to provide more context about the retention time validation failure
updated string length checks in QueryExecutorImpl . java to trim whitespace before checking for empty fragment lists to ensure that empty fragment lists are handled correctly
fix resourcepackfilenotfoundexception when modfile do n ' t exist
removed node and edge transformer groups from the partition toolbar to streamline the user interface by eliminating unnecessary components
updated conditional logic in RecentsView . java to check if the task view is focused or fully visible before proceeding to improve user experience by prevent
replaced ` Map < String , String > calculate ` with ` BMIViewObject ` and added ` SystemInfoService ` as a parameter to en
removed the comparator parameter from the thenComparing method call to simplify the method signature and improve readability
fix hay bale damage not be apply to hay bale
refactor environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve code readability and ensure
added support for custom plugin configuration in the optionsparser
updated null check for hashTable and joinType in HashJoinBatch . java to ensure proper handling of empty hashTable scenarios
added a check for non - negative seconds in Timestamp . java and updated test methods in TimestampTest . java to improve timestamp validation to ensure correct timestamp handling
[ java ] clone archive context in clusteredserviceagent to avoid concurrent modification .
added a check for ` isCompiled ` before evaluating the COMPILE _ THRESHOLD in the COMPILE _ THRESHOLD condition to ensure
added new test cases for image2 and joined functionality in AbstractTest . java to enhance test coverage for different image scenarios
added NAMESPACE _ LAUNCHER constant and improved default value handling in TogglableFlag and LauncherAppState classes to en
updated log messages to use placeholder syntax to improve readability and maintainability of log statements
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest . java to use Hamcrest assertion statements to improve readability and maintainability of the test code
added new functional interfaces ` BytePredicate ` , ` ByteToLongFunction ` , ` FloatToLongFunction ` , ` ShortToLongFunction ` , and `
updated ` getSubsColor ` method to return a string instead of an integer and added logging for bitrate limits to improve type safety and enhance
added a conditional check before deregistering the future to ensure that the future is only deregistered if it is successful
replaced the creation of ` ControlFrameBytes ` with a direct call to ` flush ( ) ` in ` AbstractWebSocketConnection . java ` to simplify the
added a check for " redirected " before starting the welcome activity in LoginActivity and SignupActivity to ensure the welcome activity only launches when
added ShadowCheckedTextView class to facilitate testing of CheckedTextView behavior in Robolectric
added Serializable interface to ParserState and modified getter and change callback fields in AccessorProperty to ensure proper serialization and deserialization of ParserState objects
added " identrustdstx3 [ jdk ] " to the VerifyCACerts class to support identrustdstx3 certificate validation functionality
removed redundant context attribute assignments in WebInfConfiguration . java to streamline code by eliminating unnecessary duplication
fix npe in occupant and add test
updated QuicConnection and QuicConnection classes to include a context parameter in QuicSession and QuicheConnection constructors to enhance session management
replaced direct calls to ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) . setMergePolicy ( ) ` for
updated variable names and formatting in ICU4JImpl and TextPosition classes to improve code readability and maintain consistency in naming conventions
added ` ComputedDateValue ` and ` ComputedNumericValue ` imports in ` AddDefaultValueChange . java ` and ` SqlStatement .
[ hotfix ] fix checkstyle violation in nbtscoreboardioservice
saml : do n ' t store service provider metadata if they do n ' t exist
make ideal graph printing configurable
added BigDecimal import and updated average price calculations in HuobiAdapters . java to improve precision in handling currency amounts during order processing
updated projection handling in ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` to use ` Field ` instead of ` String ` for field
updated the logic for adding a player to the viewers list to ensure that only one player can add it to the list
added a null check for layout in Workspace . java and implemented constant state management in ShiftedBitmapDrawable . java to enhance null safety and
refactor SPDYClient to improve connection handling and session management to enhance clarity and maintainability of the connection management logic
fix ( protostuffobjectoutput ) : fix nullpointerexception in protostuffobjectoutput . writenull ( ) ( # 1067 )
pdfbox - 4892 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator class to improve code readability and maintainability
added a conditional check to return early if axes and number axes are not visible to improve performance by avoiding unnecessary processing when both axes are not visible
replaced direct calls to setFilter and setWrap with unsafeSetWrap methods to improve performance by avoiding unnecessary method calls
resolved - issue batch - 1238 : xmlworkflowserviceimpl . returntoworkspace ( ) should return the correct workspace item
added SSL context handling for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java class to enhance security
added a method to retrieve the real used clock rate string to improve clarity and maintainability of clock rate retrieval logic
refactor TextureAtlas class to improve code readability and maintainability
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added ` setModuleName ` method in ` AppleLibraryBuilder
added locking and release of internalKey in the finishReleaseProcess method to ensure thread safety when releasing resources to prevent potential resource leaks
fix : ebean . find ( ) do n ' t work with id _ list
refactor WebSocket connection handling in WebSocketServletRFCTest . java to improve clarity and maintainability of the code
[ wasm ] do n ' t clear reference stack in wasm function instance .
added TTL configuration to ClickHouseLogCollectClient and related classes to allow customizable TTL values for logging queries
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and added serialization methods in CustomPreconditionWrapper to enhance serialization
updated DeploymentExceptionTest to use Jetty ' s Server class for starting and stopping the server to improve integration with Jetty ' s server management
added error handling around ` Fresco . initialize ( ) ` in ` CommonsApplication . java ` and ` NearbyController . java `
added a null check for objectName before returning its value to avoid potential NullPointerException when objectName is null
updated exception handling in Command . java and TestPrint . java to improve clarity of error messages related to file operations
[ hotfix ] [ table - planner - blink ] make planner and executor class static
updated variable names for clarity and added null checks for certificate subject names to enhance code readability and prevent potential null pointer exceptions
mark RuntimeOptions as deprecated to prepare for future removal of deprecated functionality
replaced manual byte array encoding with direct string conversion to improve performance and reduce memory usage
added a new interface PermissionEvaluator with a method to check permissions to facilitate permission evaluation in Spring Security expressions
added an ` ERASE _ LINE _ ON _ FINISH ` option to ` LineReader ` and modified buffer handling in ` LineReaderImpl ` to
updated condition to check if the server is not present in the onlineServers collection to ensure that the server is not present in the offline servers list
replaced instances of ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ MERKLE _ ERROR ` and ` BLOCK _ MER
pdfbox - 4892 : use urlconnection to avoid resource leak
throw httpclientresponseexception instead of httpclientresponseexception in case of error
updated the layout of the spinner container to center absolute to improve the visual alignment of the spinner component
[ hotfix ] [ network ] optimize networkbufferpool # recyclememorysegments
refactor mbeanServer initialization to use a static variable to improve code readability and maintainability
replaced AndroidJUnit4 with RetryTestRule in AbstractIT . java to improve test reliability by retrying failed tests
refactor QueryStateMachine and QueryTask to simplify auto - commit logic to improve code readability and maintainability by reducing redundancy
add miss package - info . java for optiq test
added support for " javax . net . ssl . DistinguishedNameParser " and " javax . microedition . khronos .
[ hotfix ] [ test ] remove unused usage of processingtimecallback
refactor URI handling in Request . java to improve clarity and ensure correct URI retrieval based on HTTP method
updated storage point retrieval methods to use ` WhatsNewActivity . KEY _ LAST _ SEEN _ VERSION _ CODE ` instead of ` App
added session availability and unavailability methods to the SessionManager class to improve session management functionality for better user experience
added " liquibase . pro " to the list of packages to scan for Liquibase Pro files to ensure compatibility with the specified package configuration
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to remove the ` ArrayList < Synced
updated the ` loadWithNewGlobal ` method to accept an additional parameter for arguments in the ` loadWithNewGlobal ` method to enhance functionality by
updated the ` regionMatches ` method calls in ` FastPathResolver . java ` to include an additional ` startIndex ` parameter to enhance
updated weigher methods in HiveClientModule to use toIntExact for clarity to improve readability and maintainability of the code
updated method names from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizationDepth ( ) ` across multiple classes to
added support for LEAD ( ) and LAG ( ) functions in UnsupportedOperatorsVisitor and implemented corresponding tests in TestWindowFrame to enhance
added a call to clear the headers in AbstractProxyServlet to ensure the request headers are reset before processing
added a check to ensure that SA attach is expected to work to avoid test failures
added null check for bgColor and introduced TranslucentWindow class to handle window translucency support to improve robustness of background color handling
added a check for null userInfo and improved error handling in UserInfoActivity . java to enhance user information display and provide clearer
added custom field handling for precompiled headers in PrecompiledHeaderData . java to ensure precompiled headers cannot be used on different machine to prevent runtime errors
[ hotfix ] [ connector / kafka ] [ table - planner - blink ] [ connector / kafka ] [ connector / kafka ]
added a new test class ` MultipleOutputsIntegrationTest ` to validate functionality of named output groups in the project
updated content handling in FileSettings . java to ensure correct formatting of setting values
nifi - 10641 : fix npe in statelesscontrollerserviceinitializationcontext and statelessflow
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` for encoding and decoding operations to improve code readability
added a persistent mode annotation to the taskbar in TaplTestsQuickstep . java to ensure the taskbar is created in a persistent state
added device status entries for " leaving - dock " and " energy - save - mode " commands to enhance device status management for better functionality
improve exception handling in model loading process
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to known issues
bugfix : do n ' t return current pixel scale for 2d graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
updated CsvBulkLoadToolIT and QueryUtil to streamline server configuration handling to improve code clarity and maintainability by reducing red
added file separator characters to display names to ensure compatibility across different operating systems
use seekablestream instead of bufferedinputstream for read wmf file
added a boolean flag ` repeatFirstLineIndent ` and modified indentation handling in ` ColumnText ` to allow customizable indentation behavior to enhance flexibility in
updated type casting for Oid comparison to ensure proper type handling for Oid instances
do n ' t set metric tracker factory if it ' s null
loopex : fix bug with controlflowanchored node
added a call to set focus painting of buttons in WindowsPlacesBar . java to improve visual consistency by removing focus from buttons
added a check for UniqueConstraint instances in DatabaseSnapshot . java to ensure proper handling of backing index fields to prevent potential issues with database snapshot behavior
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to
[ cst - 1782 ] check that dc . title be not contain a mdv
make gapinsertiondetector more robust to empty utterance
added unit test base on user forum issue
updated thread limit from 1 to 1 in FeedRefreshUpdater . java and added databaseUpdateThreads property in ApplicationSettings . java to allow dynamic adjustment of thread
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 to allow for a longer scrolling duration in the fast scrolling feature
replaced ` MetaUtil . toInternalName ( System . class . getName ( ) ) ` with ` Ljava / lang / System ; ` in the
hhh - 13644 - fix npe in procedure call
added a null check for apiProperties before accessing configuration to avoid potential NullPointerException when apiProperties is null
added ` BinaryFrameGenerator ` and ` TextFrameGenerator ` classes to handle binary and text frame data in the WebSocket protocol to enhance the
danielwagnerhall : fix flaky test on firefox
updated random number generation logic in RandomGeo3dShapeGenerator . java to use ` randomBoolean ( ) ` instead of ` Math . sqrt ( )
added a keepAlive method to manage ClassLoader instances to ensure proper resource management and prevent memory leaks
change return value from false to true in SQLiteDatabase . java to reflect successful operation
findjsr166lockmonitorexitter : do n ' t report jsr166 _ lock _ monitorexitter for
added MkdirStep to multiple Java files to ensure output files are created in the correct directory structure
updated coordinate alignment checks in MeshLeveler . java to improve error messages for better debugging and clarity
[ drools - 7 ] skip kie - pmd - jpmml parsing and compilation when jpmml be not available
updated the condition for locationMode and thermalStatus in ShadowPowerManager . java to improve clarity regarding the purpose of the condition
fix mountablefile to work on macos
[ geot - 4071 ] add support for memory map buffer on window
added a null check for the organization in the pom . xml file to ensure that plugins have a valid organization to prevent runtime errors
updated contributor information in SepPostingsWriterImpl . java to include license agreements to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused code related to session termination
updated the method to retrieve the Java class path from the system properties to ensure compatibility with different environments by using the correct class path
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with a default array initialization for ` cryptKeyInit ` , ` cryptKeyPriv ` , and
add license header test ( # 3198 )
changed the value of LAUNCHER3 _ PHYSICS from false to true to enable launcher3 physics functionality
added a new HTML tag for noPrint in HtmlThreadInformationsReport . java to improve the display of noPrint status in the report
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and LUCENE _ 40 " in Constants
added ` symbolicator ` and ` task ` fields to ` BsdDebuggerLocal ` and ` PlatformInfo ` classes to support macOS - specific handling
fix memory leak in fmlclienthandler
do n ' t log network dispatcher exception when client disconnect
[ java ] add support for admin directory in aeron client .
added a break statement to prevent fall - through behavior in a switch case
chore : update gapic - generator - java to 2.0 . 0 and update gax - java to 2.0 . 0 (
http : / / issues . apache . org / jira / browse / http : / / issues . apache . org / jira /
added type checking for " java . lang . Object " in TypeUtils . java to ensure proper handling of " java . lang . Object " to avoid
use concurrentskiplistset instead of nonblockingset for memtables pending flush
added null checks for ` tree . errs ` and improved error handling in ` MemberEnter . java ` , ` JavaCompiler . java ` , and
replaced ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` for the browser initialization in ` BugInfoView . java ` to allow for
updated the method call from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the dialog is closed
updated division logic in IntegerStamp to handle negative lower and upper bounds to ensure proper handling of edge cases when bounds are negative
added a method to read text from an InputStream into a byte array to improve data handling by reading it from an input stream
added ` setLocals ( ) ` method to ` CaseStmtToken ` and updated variable handling in ` ExprGenerator ` and ` ConditionsTest ` to
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions when the provider is not supported
added " psapi . lib " to the list of additional dependencies in WinGammaPlatformVC10 . java to support additional platform - specific dependencies
updated comment handling to use the system ' s line separator to ensure compatibility across different operating systems
updated template engine and charset settings in TemplateEngineFreemarker . java and modified alert in ApplicationController . java to ensure compatibility with version 2.
refactor serialization handling in CRDGeneratorTest to improve clarity and maintainability of the code
change default value of ` ` hold _ samples ' ' to ` ` mode ' '
added a conditional check for the system property " testngEmailableReporter " before adding it to ensure that EmailableReporter is only added when it is
added quoting logic in CommandLineBuilder to ensure proper handling of escaped characters in command line arguments
removed public access modifiers from interface declarations across multiple Java files to enhance encapsulation by restricting access to internal classes
added a call to set the number of reduce tasks in the job to optimize resource allocation based on the number of fetchers
fix : schemageneratorhelper do n ' t generate default value for non - object field
updated FILEVERSION from " 505365 " to " 532077 " to reflect the correct version of the file being tested
added support for " GL _ ARB _ texture _ float " extensions in FloatTextureData . java to ensure compatibility with OpenGL 3.0 and optimize
refactor fileserver to use bufferedwriter instead of random writer
added a null check for outputDirectory and jarStream in ClassDump . java to ensure outputDirectory is set only when both outputDirectory and jarStream are
added performance measurement to the ` getFuture ` method in ` ShadowSQLiteConnection ` to measure the execution time of database operations
replace ` getCurrentJDKTool ( ) ` with ` getTestJDKTool ( ) ` in ` JMapHProfLargeHeapTest . java `
add resourceerrorhandling enum to avoid misconfiguration
lucene - 8470 : raminputstream . readbytes ( ) should throw eofexception if indexinputstream do not have any buffer
improve error message in case of miss resource
updated ForkJoinPool and ForkJoinWorkerThread classes to include a boolean parameter for innocuous access control to enhance flexibility
updated CHECK _ EVERY _ N constant and added logging for free and free memory checks to improve memory management and enhance debugging capabilities
hbase - 20583 addendum fix the testsplittransaction . testsplittransaction to pass on window
added a null check for currentSelectionArea before accessing its properties to prevent potential NullPointerException when currentSelectionArea is not initialized
added a parameterized test method ` testJaasDemo ` to ` DemoModulesTests ` for testing Jetty ' s Jetty
added checks for spanX and spanY in folder creation logic to ensure folder creation respects spacing constraints
refactor CacheOffHeap class implementation to improve performance and reduce memory usage
add a test case to ensure that reference later be not support .
added a check to ignore extra XML gid values in TiledLoader . java to improve robustness by logging a warning when processing XML values
fix thread safety issue in inmemorytilecache
added a new file ` Solution . java ` that includes a method to calculate the minimum and maximum values based on a given input string to facilitate
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to accept a ` AddressChecker ` parameter to enhance address validation logic to
fix ( render ) : do n ' t set translucent to non - transparent
fix ` ` [ default : " ] ' ' tag in config entry
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and ` Capability ` classes to
added a null check for recieptents before sending messages to avoid potential NullPointerException when recieptents is null
refactor isSingle check into a separate method to improve code readability and maintainability
added a ` failFast ` parameter to the ` DockerClientFactory ` methods and improved logging for Docker images to enhance error handling and
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated related methods in ` RobolectricTestRunner ` and ` AndroidMetadata
hhh - 15464 - fix historicprocessinstancequeryimpl to use dateutils . adddate ( ) instead of dateutils . truncate (
replaced ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java ` to align with
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command execution failures
refactor TreeMap class to improve code readability and maintainability
added support for async stack trace in debug mode
added a method to set the glow color in BubbleTextView to allow customization of the glow color for better visual feedback
updated styling for link and description components in LinkedFilesEditor to ensure consistent styling across UI components
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " instead of returning " java . lang . Short " and added a test for
removed error handling for file writing in Lucene40LiveDocsFormat . java to simplify file writing process by avoiding unnecessary exceptions
added a null check for _ info before accessing its status to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to allow passing a provider string to the ShadowLocation constructor to enable flexibility in setting the ShadowLocation provider
added a condition to set maxRAM to 1100 when deviceRAM is less than 2048 to ensure proper RAM allocation for 32 - bit devices
add miss data statistic to localmapstatsprovider ( # 16428 )
log a warning if the file profile can not be find
update PdfWriter to use a more descriptive variable name to improve clarity and maintainability of the code
change the order of the ` roles ` collection from ` toList ( ) ` to ` toSet ( ) ` in ` GuildImpl . java
updated array size limit from 30 to MAX _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure uploads do not exceed
added unit tests for the delete functionality of the DashboardUserMapper to ensure that the delete method behaves as expected with expected results
[ # 7711 ] instructorfeedbackresultspage : instructorfeedbackresultspage : instructorfeedbackresultspage : add primary
[ gr - 25809 ] add support for auto - deref handle .
added a method ` getBufferSize ( ) ` to retrieve the buffer size in ` BufferedIndexOutput . java ` to provide access to the internal buffer size
add -- headless option to start headless without graphics
refactor action bar title setting logic in DrawerActivity . java to improve clarity and maintainability of the code
updated CommandLineParserTest . java to improve test coverage for command line arguments
added interpolators for ALL _ APPS and ALL _ APP _ CONTENT _ FADE _ MAX _ CLAMPING _ THRESH
updated method to use javaNameFromExternal instead of Character : : toUpperCase to improve clarity and maintainability of the code
removed native frame and frame methods from CWrapper . java to streamline code by eliminating unused native methods
added validation for constant values in the Checker class and created a ValueTest class for testing to ensure that only valid constant values are accepted in the
refactor tests in MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code readability and maintainability
removed null check for constructors in PojoUtils . java to simplify the code and improve readability
refactor JiraConfiguration class to improve code readability and maintainability
updated error message formatting in UploadBuild . java to improve clarity of error reporting for coverage failures
updated bounds calculation in DeviceProfile . java to include search bar offset to ensure proper positioning of the search bar in layout adjustments
[ micromedia ] fix npe in micromedia medium when idle timeout be 0
replaced direct call to ` getLauncher ( ) . startActivity ( ) ` with a call to ` getLauncher ( ) . runOnUiThread
added a method ` getSourceGroupOptional ( ) ` to retrieve the ` Optional < Pair < String , ImmutableList < AppleSource > > ` for obtaining
increased the await duration from 22mm to 32mm in TestSimTriggerIntegration . java to allow more time for triggerFiredLatch to complete its await
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a loop to check if the distance between startNode and bestSoFar is less than or equal to MIN _ DIST _ PATH in AbstractNodeCostSearch
added a check for " com . codename1 . ui . Form " and " com . codename1 . ui . Dialog " in ResourceEditor
updated imports from ` UiThreadHelper ` to ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to
added a null check for commitPoint in ReplicationHandler . java to ensure it defaults to the latest commit if none is provided
added unit tests for ` getImeiForSlot ` and ` setImeiForSlot ` methods in ` ShadowTelephonyManager ` and
remove debug code that be no longer need
added close methods to OfflineResourceDataManager , IndexSegment , and BitmapInvertedIndex classes to ensure proper resource management and prevent memory leaks
[ issue # 4747 ] fix npe in normalmessagesendandreceiveit ( # 4748 )
replaced Charset with StandardCharsets for UTF - 8 encoding to improve code readability and maintainability
hbase - 17406 bulkload do n ' t retry if family do n ' t exist
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated its usage in ` RippleWithdrawFundsParams `
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
updated catch blocks in LoadSolrBuilder and SolrLocator to handle both SolrServerException and SolrServerException together to improve error handling to enhance robustness by ensuring
added error handling for overloaded methods in Java2TypeScriptTranslator . java to ensure proper method invocation and prevent runtime exceptions
replaced direct disk flushing with StacklessLogging for better logging to enhance debugging capabilities by using a stack trace for disk operations
added serialization support to MutableColumnDataType , SqlDataType , and Entities classes to enable proper serialization and deserialization of these data types
refactor SubExactLConstantTest and SubExactLNonConstantTest files to improve code clarity and maintainability
added null check for claimRequestString before parsing to avoid potential NullPointerException when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with newer Hive API changes
updated the ` processTypeHintForNestedDocuments ` method to use ` entity . getTypeInformation ( ) ` instead of ` source ` and added
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest ` and added ` getCoreStatus ` method in ` Core
fix moddirtransformerdiscoverer to initialize transformers and locators properly .
fix typo in error message
improve debug output for pegraphdecoder
replaced ` setOf ` and ` setOf ` with ` copiedSetOf ` in ` RestTemplateBuilder . java ` to ensure that the
( chore ) camel - mail : remove unnecessary null check
http : / / issues . apache . org / jira / browse / amq - 4894 - fix npe in prefetchsubscription
replaced getIdentifierName ( ) with setIsPropertyName ( ) in Parser . java to improve property name handling to ensure proper identification of property names
add wavegeneratoractivity to make it easy to use
added logging for null sheets in KeyedProperties and SheetOverlaysManager to improve error handling and logging clarity when sheets are not present
test : add test case for shell integration
added a test method ` noWriter ` to the ` TestReplicationHandler ` class to verify that a new index is created when no writer is present
do n ' t invoke super . dispatchmethodkernelokra if not need
added Comparable interface to DefaultMxRecord to allow sorting of records based on their priorities
refactor thread creation to use a privileged action for thread creation to improve code readability and maintainability
added validation and selection for Linux6 in SelectBox . java and UITest . java to ensure compatibility with Linux6 systems
replaced ` throw new IllegalStateException ( e ) ` with ` Collector . collectExceptionStackTrace ( e ) ` in ` JobGlobalListener . java ` to improve
added a parentSplit parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to enhance state management by allowing
changed the connectionState variable to be volatile to ensure thread safety when accessing the connectionState variable
increase polling period to 1000 second
refactor MemoryStack and MemoryUtil methods to improve memory allocation and encoding to enhance performance and maintainability by reducing memory allocation overhead
added exception handling for IOException and DocletAbortException in HtmlDoclet and AbstractDoclet classes to improve error management and provide more specific error reporting
pmd : fix false positive for unused modifier
replaced lambda expressions with method references for better readability to improve code clarity and maintainability
updated parameter name from " ssl = { 0 } " to " ssl = { 1 } " in AbstractHttpClientServerTest . java to improve clarity
improve error message when transformation fail
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and consistency in
replaced equality check with a new equals method to improve readability and maintainability of equality logic
updated FileProcessor to handle null outputRoot parameter to improve robustness by preventing potential NullPointerExceptions
pdfbox - 4892 : add annotation filter to the page drawer
refactor StackTraceCleaner class to improve exception handling to enhance code readability and maintainability
added content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is set based on file extension to enhance file type
hhh - 15464 skip testliteralprojectioninselectexpressiontest for oracle dialect
modified the ` upgrade ` method to accept a ` slotSize ` parameter for better flexibility in handling version checks during the upgrade process
added ` getStatsSnapshot ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` DocBuilder ` classes , and
[ scb - 2475 ] make kie - ci - kie - infra - kie - infra - kie - inf
added accessibility test for scrolling in PagedView and updated gesture handling in BaseOverview to enhance user experience by ensuring proper scrolling functionality and
added a new UnlocksDialog instance and a button to show it in the pausing dialog to improve user experience by providing context for unlocking functionality
added a call to clear drops in PlayerEventListener to ensure the event dies when no longer needed
added a constant for the default parameter " inputName " in StreamResult . java to improve code readability and maintainability
updated exception type from MalformedURLException to IOException in AttributeNormalizerTest . java to improve clarity and specificity of exception handling
added chunk type information to the print statement in TsFileSketchTool . java to enhance output clarity by including chunk type information
added a set of excluded headers in UmbrellaHeader . java to improve project generation by excluding specific Swift headers
rename onhttperror to onhttpheadererror to avoid confusion
added a call to ` encoding ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of requests
mondrian : fix mondrian / mondrian . mondrian . mondrian . mondrian
added null or blank password validation in LdapAuthenticationProviderImpl . java and created a new test class TestLdapAuthenticationProviderImpl . java to ensure
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a condition to clear complex writers in ProjectRecordBatch to ensure proper cleanup of complex writers before processing
added @ SuppressWarnings ( " serial " ) annotation to multiple classes related to serialization to suppress serialization warnings to improve code clarity and maintainability by avoid
changed the visibility of the class ClassGraphClassLoader from public to package - private to restrict access to the class from other packages to enhance encapsulation and
added error handling for " _ errors " in ErrorResponseException to improve error reporting for better debugging and error management
added a constructor to EventSourcingRepository that accepts an EventStore and a SnapshotTriggerDefinition to enhance flexibility in handling event storage configurations
refactor symbol handling in binary node definitions to improve clarity and maintainability of symbol definition logic
updated search text handling in SearchedPeopleCursorAdapter and QCustomDialogBuilder to ensure proper formatting of search text to improve readability and maintainability of
updated command handling logic in ` NuvoConnector . java ` and ` NuvoHandler . java ` to differentiate between ` ALLOFF ` and `
tmi - tiff : set planar configuration to chunky instead of planner
added a call to close the InputStream to ensure proper resource management and prevent memory leaks
move averageutil . tick ( ) to a utility class so it can be reuse .
added new classes SigInt and SigIntBarrier in the uk . co . real _ logic . agrona . concurrent package to handle int signal
refactor graph handling in ExporterGEXF . java to support hierarchical graphs and improve edge creation logic to enhance compatibility with hierarchical
updated TCTLSeparatedProtocol to use Text instead of byte array to improve performance and error handling when writing strings
[ # 7059 ] fix index out of bound exception in feedbackresponsedetails
updated comparison logic in CatalogComparator to use ORIGINAL _ CASE instead of DB2Database to improve compatibility with DB2 - specific comparisons
danielwagnerhall : close previous webdriver in browsermobproxytest after each test
updated criticalErrors to use Integer . toString ( ) instead of String . format ( ) for better readability to improve code clarity and maintainability
removed redundant calls to mTextWatcher . clear ( ) in InPlaceEditView . java to improve code efficiency by eliminating unnecessary method calls
improve javadoc for internalarraybyte and trufflestring class
[ hotfix ] [ euphoria - euphoria - euphoria - euphoria - euphor
refactor multiple soft assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
deleted the ` ClassA ` class and added a new test class ` DiacriticTest ` to ensure compatibility with Unicode characters on Mac
[ hotfix ] [ test ] fix a race condition in cluster membership test
added a try - catch block to handle potential ComponentLookupException during workspace reader lookup to improve error handling and ensure workspace readers are properly managed
updated SSL assignment logic in ServiceRegistryConfig and TestServiceRegistryConfig to use ` equals ` instead of ` startsWith ` for URI scheme checks to improve
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` in ` ServletHolder . java ` to ensure proper initialization of the servlet to prevent thread - safe access
added server time expiration logging and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve traceability of server time
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 "
refactor deregistration logic to check if the component form is not null before calling getComponentForm ( ) to improve robustness by avoiding potential null
updated the ` decodeResource ` and ` drawBitmap ` methods in ` ShadowBitmapFactory ` , ` ShadowCanvas ` , and ` ShadowCanvas
[ java ] add a constant for the number of message to show in example .
added functionality to prevent navigation to the Next button in the TimelineArrayAdapter to enhance user experience by allowing users to navigate to the Next button in the
added support for " text " data type in PostgresDatabase and updated related logic in NumberType and ColumnSnapshotGenerator to enhance data handling
fix entryprocessorbouncingnodestest so that it do n ' t fail on slow machine
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagementController
added a null check for the bridge UID before adding it to the inbox to avoid potential NullPointerExceptions when the bridge UID is not found
updated method signatures and variable names in PreconditionEnforcer and CrawlServer classes to improve clarity and consistency in handling robots expiration
updated display name checks in TestInterfaces and Equals classes to handle null values for " Teredo " to improve robustness by preventing potential NullPointer
added support for a default shader program in SpriteBatch constructor to enhance flexibility in shader management based on user preferences
added synchronous commit configuration in TestUtil . java to ensure data consistency during commit operations
refactor SortedSetTypeCoercer to use a type coercer for improved element coercion to ensure unique elements are coerced
updated confirmation button logic for removing files and folders in RemoveFilesDialogFragment . java and RemoveFilesDialogFragment . java to improve clarity and
added a condition to check if ` c ` is less than 256 and ` safe [ c ] ` is non - negative to ensure safe array integrity
simonstewart : use a random port instead of a hardcoded value to avoid collision .
updated the expectation in HostResourceProviderTest to return an empty map instead of an empty map to ensure that the test accurately reflects the expected
[ hotfix ] remove log parameter from yarnentrypointutils
refactor sip comm frame so that it can be reuse
deleted the ShadowHtml . java file and updated test assertions in HtmlTest . java to simplify the codebase by removing unnecessary shadowing functionality
added a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` to facilitate the creation of ` StarTreeRecordStore ` instances with specified
updated logging levels from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and "
removed the private modifier from the ` addListeners ` method in ` MockSettingsImpl ` and added a corresponding test in ` MockSettingsImplTest ` to
[ hotfix ] [ doc ] fix typo in statehandlestore
updated imports for ` org . eclipse . jetty . http . security . Constraint ` and ` org . eclipse . jetty .
[ # 7969 ] instructor : instructor : enrol student instructorcourse ( # 7968 )
fix resource leak in jmeterutils
camel - 1145 : camel - core - allow to use a specific port instead of hard - coded one
added ` buildTarget ` parameter and related methods in ` AndroidBuildConfigJavaLibrary ` , ` AndroidPrebuiltAar ` , and ` DefaultJava
improve error message for peer certificate verification
added pagination handling in ListCapacityCmd . java to improve performance by allowing dynamic pagination of results
added handling for the CLOSED case in IteratingCallback to prevent further processing when the callback is closed
added a boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain `
refactor OSGi deployment event handling to include a check for non - AbstractOSGiApp instances to improve robustness by ensuring only AbstractOS
added handling for " tiff " media type in DLNAMediaInfo . java to ensure proper MIME type assignment for tiff files
refactor argument handling in OptimizedCallTarget . java to improve clarity and maintainability of argument assumption management
added a new file ` Cubocy . java ` and modified ` Map . java ` and ` ImmediateModeRenderer20 . java
updated file paths for PolicyMonitor initialization in PolicyMonitorTest . java to ensure correct directory structure for resource and permission checks
added a call to removeAllFiles ( ) in TrashbinActivity . java to clear the trashbin list to ensure the trashbin list is reset before
remove the eclipse jdi since we ' re use a jdk
truffle : make check global node more robust .
updated the createLauncherEvent method to accept an Intent parameter to enhance event handling by associating item information with their respective components
updated BurningManPresentationService to use a constant MAX _ BURN _ TARGET _ LOWER _ FLOOR instead of a hardcoded value to
refactor UniqueConstraintSnapshotGeneratorSnowflake to use a wildcard import and streamline import statements to enhance code readability and maintain
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : dml -
updated test cases in ServiceValidateControllerTests to use secure PGT URL instead of insecure PGT URL to enhance security by using a secure URL
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a method to hide the default name to enhance function name
refactor JarLauncher class to improve code readability and maintainability
[ hotfix ] [ test ] fix checkstyle violation
add a hole punch packet for telephony call .
added a new test method ` testUpdateWithPGobject ` in ` ResultSetTest . java ` to validate PostgreSQL object updates in ` ResultSetTest .
updated PasswordResetEndpoints to check for non - UAA origin before creating a password reset to improve error handling for password resets based on user origin
replaced direct retrieval of propertiesElement with a method call to getDocumentElement to improve code readability and maintainability
refactor Cache class implementation to improve performance and maintainability of caching logic
rename timeinsec to timemillis and prevtimemillis to avoid confusion
fix an issue where the light relay would not be bind if there be no binding .
added a new ` Chainer < T > ` class and modified ` contains ` method to return a ` Chainer < T > ` to enhance
refactor Model class to improve code readability and maintainability
updated recordedTime addition from 1024 weeks to 619315200000L in Locations . java to accommodate larger data sets
added a check to close the status if the terminal type is Windows to ensure proper handling of terminal status updates
updated host version management logic in UpdateDesiredStackAction . java to ensure host version state is only set if it is not already INSTALLED to improve
fix interop test to work on window
use linkedhashset instead of hashset to preserve order
remove try - catch block around node operation conversion to simplify code and improve readability
updated the formatting of the resolvePropertyConfigurer method call in KnativeEnvironment . java to improve code readability and maintain consistency
rename the executor variable from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming conventions
added a call to ` connect ( ) ` in ` CloudSolrClient ` and a corresponding test in ` TestCloudSolrClientConnections ` to
added synchronization to ensure thread safety when accessing shared resources
added clearFilesAndCache method to ShadowContext and updated file handling in Robolectric tests to improve file management and ensure proper cleanup of
added support for TreeMap in the SecureXStream class to enhance styling capabilities in the XStream persistence layer
add kiemodulemodel parameter to kiehelper ( # 1771 )
updated block event handling to check for Farmland type and moisture before drying to ensure that drying only occurs when the block data
added a default implementation for the getLocalIp method in FinishedSpan to provide a default return value to provide a placeholder for future implementation of the method
updated ` JdbcStepExecutionDao ` to use ` SerializationUtils . deserialize ` for deserializing ` OBJECT _ VAL ` and modified skip count handling in `
lucene - 4071 : fix typo in doc
added " libs " to the list of resource paths in Python and updated related files to support additional Python versions in the codebase
refactor PluginTab to streamline plugin handling and add a refresh button to improve code readability and enhance user interface functionality
changed log level from info to warn for error handling in DefaultHistory . java to provide a less severe warning level for history file operations
vmware : fix npe in vmwarestorageprocessor when vmmo be null
camel - 16400 : camel - ftp - allow to turn off ssl by default
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
updated the ` GpsSettingsActivity ` to use ` Utilities . GetBuildSerial ( ) ` instead of ` Build . SERIAL ` to improve
updated the implementation of the SwapGBuffers class to improve memory management efficiency
added null checks for spatial and skeletonControl in AnimControl . java to ensure proper handling of null references to prevent potential NullPointerExceptions
added a method to setSmartReplies in ShadowRankingTest and updated ShadowRanking to accept a list of CharSequence as a parameter to enhance
[ java ] do n ' t include deleted segment file in archive directory .
updated variable name for carrot2ResourcesDir to improve clarity to enhance code readability and maintainability
added null check for testRect in WindowsTreeUI . java and created a new bug8004298 . java file to ensure proper handling of
updated ASM API version from ASM7 to ASM9 to ensure compatibility with the latest ASM framework
improve error message when map file be empty
added ClientInfo parameter to SurrogateAuthenticationEventListenerTests to facilitate access to client information during tests to enhance test coverage by capturing client - specific
added a boolean variable ` isUserView ` to ` CardPresenter ` to track if the user view has been viewed
replaced usage of ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ( ) ` with ` GraphvizUtility . isGraphvizJava
refactor the creation of histograms in LogDispatcherThreadMetrics for clarity to improve code readability and maintainability
added a new module - info . java file for SQLite connector to define module exports and dependencies in the com . speedment . runtime . connector package
added a delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during tests
removed a conditional check for " new " type in the PermissionsManager initialization to simplify permission management for the new web type configuration
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a depth method to the SpringLoadedState class to provide a value of 0.5 f for depth adjustment
replaced manual array copying with a static final MIN _ SIZE constant to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in executiongraph
added notification removal functionality to NotificationActivity and removed it from NotificationRenderer to streamline notification management and improve code organization
added null check for invocation before converting exceptions to InvocationException to improve robustness by avoiding potential NullPointerExceptions
fix ( glowcontainer ) : make lock non - null
replaced the use of ` LOOKUP . findSetter ` with ` getDeclaredMethod ` in ` ProxyMaker . java ` to improve reflection - based
changed the return type of bitand methods from int to Integer in MathTest . java to ensure compatibility with the expected result type
updated return statements in BaseEmailContentFormatter to remove redundant concatenation of metrics and datasets to improve code readability and maintainability
added handling for layout parameters in LayoutPanel . java to improve panel management and ensure proper visibility of layout components
added a null check for location before verifying if it is a dead server to ensure robustness by preventing potential null pointer exceptions
fix checkstyle issue in javadoc
added a null check for key parameters in BasicChecker . java to ensure that a valid key parameter is provided before proceeding with key generation
refactor MediaTypeRequestMatcher to use a dedicated method to handle ignored media types to improve code readability and maintainability
updated task number handling in LlapBaseInputFormat . java to improve clarity and consistency in logging output
add allow - bean - definition - overriding property to spring test
added a null check for indexReader before closing it to prevent potential NullPointerException when indexReader is not initialized
updated package names from ` service ` to ` btcmarkets ` across multiple Java files to improve clarity and consistency in the codebase
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure correct rendering of fenced code blocks
added a new file CompatibilityTest . java that tests DTD property loading to ensure compatibility of DTD files across different environments
added a new ` VariantComponentsModule ` and ` PushUtils ` classes , along with a ` SecurityUtils ` class for managing push registration and key
[ hotfix ] [ table ] fix tablerebalancer to respect instance state map
bump version to 2.7 . 0 and update release note
log4j2 - 1349 fixed line break issue
improve ajp processor to handle timeouts .
added default values for friction , density , and isSensor in FixtureDef . java to ensure default values are set for consistent behavior
updated method names and parameters in multiple classes to include anomaly function specifications to improve clarity and consistency in naming conventions
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve reliability by handling potential IOException during broadcast idle
added tests for font and link tags with attributes in ResourcesTest . java to ensure correct reading of font and link tags to enhance resource handling by validating
move guistatscomponent to the correct place
added permission checks for call phones in Launcher . java to ensure that only authorized phones are processed in the call process
updated return value from 32 to 36 in SimulationPanel . java and added localization support in BasicEventSimulationEngine . java to enhance user
lucene - 4892 : fix test geoencodingutils . frombytes to use long instead of long
added a synchronized method to check if the Docker client is available to ensure thread safety when accessing the Docker client
added a static final String VPX to the CodecTypes class to standardize the definition of the VPX variable
added a coordinator address to DistBuildFactory and updated its usage in DistBuildRunCommand to allow configuration of the remote coordinator address
added a ` match ` method to the ` FsUtils ` class and refactored timer management in ` WrapTimer ` to improve path matching functionality and
added a check for non - negative values before adding to labelValues in TestTaxonomyFacetSumValueSource . java to ensure that only non - negative values
ggb - 195 fix for nullpointerexception in app . java when the result be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up unnecessary test code
added a method to set materialization time in ObjectStore and a corresponding test in TestObjectStore to ensure proper handling of materialization times in
improve error handling for miss native dependency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5984 : j
updated break weight logic in GlyphView . java to improve handling of broken break positions
refactor sync handling in RCFile . java to use a byte array for reading to improve efficiency by reducing the number of read operations
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 13028
refactor ToePool to use a LinkedList for processing steps and processors to improve readability to enhance clarity and maintainability of the code
removed flavor - related methods from ClipboardTransferable and DataTransferer classes to simplify code by eliminating unused functionality
hbase - 26909 add - infoport option to thrift test thriftservercmdline
added a check for ` atEOF ( ) ` before returning false in ` RegExpScanner . java ` to ensure that scanning does not proceed to prevent potential infinite
refactor metrics and timers handling in Debug . java to utilize a dedicated set for enabled metrics and timers to improve code readability and maintainability by
fix nullpointerexception when join a jabber room with no nickname .
improve error message for missing or inaccessible file
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated the error message in BuckConfig . java to include the path to SourcePath to improve clarity of the error message for better debugging
[ hotfix ] [ yarn ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a placeholder implementation for retrieving the hardware buffer
updated SSL URI setting for BTCChinaExchange to ensure secure connection to BTCChina API
pmd : fix compile error on window
added OauthController . java and Oauth2PluginTest . java files to implement OAuth2 functionality in the application
refactor SemgrexPattern class to improve code readability and maintainability
added flatMap and flatCollection methods to AbstractStreamEx , EntryStream , and StreamEx classes to enhance stream processing capabilities by allowing custom
improve error message when parameter be not valid for operation
updated the ` shouldComeFromThisClassLoader ` condition in ` RobolectricClassLoader ` to include Maven Surefire to allow Android projects
change the condition to check if the sdp is not in the set of transmittableAudioEncodings to ensure that only valid SDP strings are processed
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` and
[ geos - 7071 ] fix normalization test for new gml version
added a volatile boolean flag ` wasInvoked ` and modified related variable names in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a check for configuration before expanding regex mappings in ColumnarDataSource and RowProcessor classes to ensure regex processing only occurs when the processor is
updated the method ` splitIntoThirtyPart ` to ` splitIntoThirtySecondsPart ` and introduced a new ` getPositionsArraySize `
added XLCD communicator and XLCDController classes , along with firmware handling logic to enhance G - code communication capabilities and improve firmware management
[ drools - 7 ] allow kie - api to load xsd from kie - api
refactor retry logic in EventQuery001 , EventQuery002 , and EventQuery003 to use an integer for retry attempts to improve reliability
refactor workerprocesspooltest to reduce wait time
updated hashCode and equals methods in DelegatingMethod . java and added a test class DelegatingMethodTest . java to enhance functionality and ensure
updated freezing and deletable resource constants in EnergyCost . java to increase resource allocation for improved performance
added exception handling for configuration issues in DownloadPlugins . java to ensure proper resource management and prevent application crashes
deleted the SpringTransactionHooks . java file to remove unused transaction handling code to streamline the codebase
refactor AbstractClassAssert class to improve code readability and maintainability
added a new file GetUninitializedStringValue . java to test handling of uninitialized string values in a Java Virtual Machine
added support for handling provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency management and improve test coverage for dependency resolution
added a new BooleanFlag to enable keyboard transition synchronization to provide users with an option to synchronize the keyboard open and close animations during the transition process
added a boolean flag ` sSavedBugreport ` to track if the system anomaly messages should be saved to ensure that the system anomaly messages are
added a constant for " cinepack " in FormatConfiguration and updated format handling in LibMediaInfoParser to support cinepack format configuration
added camera bobbing functionality to the Player class to enhance player experience by allowing dynamic movement during bobbing
updated the method call from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter . java file to remove unused HSQLDBServerFilesFilter class to simplify the codebase
walletappkit : fix npe in case restorefromseed and restorefromkey be null
updated the method call from ` getVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` in ` MediaTableTVSeries . java
added a method to check if a method invocation already exists to ensure that duplicate method invocations are not processed further
refactor AmbientCubemap to use a constant for the number of values to improve code readability and maintainability by avoiding magic numbers
bugfix # 207 , do not reset profile mode if not in progress
added checks for zero values in multiple UDF classes to ensure proper handling of zero values to avoid potential errors
refactor boundedoverheadblockstoretest to use temporaryfolder instead of file
add a method to check if an item be damageable .
fix mc - 167447 : fix line _ width not be set correctly in renderstate
eranmes : allowing over - ride of the homepage also on firefox 3.0 .
added handling for HTTP CONNECT requests in Http1xClientConnection . java to ensure proper handling of connection status codes for both 200 and 101
updated the task action from " compile " to " process - classes " in JoobyMojo . java to align the task execution with the intended
do n ' t wait for idle connection in httphc4impl to close
added a check to ensure the metric name does not contain the aggregate function suffix before adding it to the new metrics collection
added a method to set fullscreen parameters in TaskOverlayFactory and updated corner radius retrieval in TaskView to improve fullscreen functionality and ensure consistent corner radius retrieval
added a new file ` Solution . java ` that displays the frequency of a given string to provide functionality for counting occurrences of a given string
initialize socketchannel to avoid npe
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign functionality
added error handling for ` NoSuchElementException ` in ` StaxEventItemReader ` and corresponding tests in ` StaxEventItemReaderTests ` to
replaced specific imports with a wildcard import and added null check for qualifiedResourceName to improve code readability and prevent potential NullPointerExceptions
replaced ` com . nimbusds . jose . shaded . json . JSONArray ` with ` net . minidev . json . JSONArray `
updated OS detection from " AIX " to " AIX " in OS . java and PKCS11Test . java to ensure compatibility with additional AIX
vpc : add router control ip to listpublicipaddresses api call
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate the invocation of RunnableWithResultSync to
deleted the presencemessagecombotests . java file since it be no longer need .
replaced instances of ` int ` with ` Math . round ` for rounded rectangle calculations in ` PortraitPagedViewHandler . java ` to improve precision
fix testclusterdumper to work on window
updated ClassSize alignment logic in KeyValue . java to improve memory allocation based on rowCache availability to optimize memory usage for better performance
camel - 16400 : camel - core - optimize to use typeconverter to avoid reflection .
added conditional task handling in SparkCrossProductCheck . java to improve task execution management for conditional tasks
removed redundant checks for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions in Launcher
updated conditional logic in LoginInfoEndpoint and added unit tests for passcode prompt functionality to ensure correct handling of JSON responses in the login process
hbase - 25809 addendum add tostring ( ) method to make it easy to debug assignment problem
renamed ` message ` to ` result ` in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw ` to improve
added support for the ` PERIOD ` column in the ` MariaDBDatabase ` class and a corresponding test in ` AddColumnGeneratorTest ` to
[ beam - 8470 ] update portablepipelineoptions documentation to clarify default environment
added support for Launcher shortcuts in VersionChangeLogs . java to enhance compatibility with Android 7.1
updated the visibility of the constant ` NUM _ MILLIS _ IN _ DAY ` from private to public in ` IndexExpressionIT . java ` and
remove system . out . println ( uri ) from imageresourceloader
[ java ] : use aeron . conductoragentinvoker instead of aeron . aeron . agentinvoker for client invocation .
updated validation logic in ` mmm Attr . java ` and added ` NoWarnOnImplicitParams . java ` for implicit lambda parameter handling in ` m
refactor menu item visibility and hide methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
added new reserved constants BTC _ deposit , BTC _ withdrawal , and BTC _ deposit in BTCETransHistoryResult . java and updated
replaced List with Set for managing HTTP status series to improve performance by avoiding duplicate series
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added a condition to check if the end time is greater than sequence time in LastQueryExecutor . java and created a new test for unsequence
updated request string formatting in HttpResponse . java to ensure proper line breaks to improve readability of HTTP responses
added static block to set the logger to ERROR in BuildImageMojo . java to ensure that the logger is properly configured for HTTP error handling
added a call to setSafeArea in the titleBar to ensure the title is displayed in a safe area
modified the loop to iterate through the last element of the TimeSeriesChunkMetaDataList instead of the first element to ensure that the loop processes the most recent
added a test for parsing and deparsing SQL statements in AlterTest . java to ensure that the SQL syntax can be parsed and deparsed correctly
changed the visibility of the copyState method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice should return completablefuture instead of asyncservice . executecallable ( )
filelister with option ` ` all ' ' now also return all ` ` . part ' ' file ( from the split file system )
[ hotfix ] [ javadoc ] fix typo in orc documentation
updated conditional structure in CompareFunctionsProcessor . java to improve code readability and maintainability
improve logging of insufficient disk space when reduce scope
added ` toString ( IndexReader ir ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added a check to return early if the handler is invalidated to prevent further processing when the handler is invalidated
refactor ` getLockTimestamp ( ) ` and ` setLockTimestamp ( ) ` methods in ` AppPreferences ` and ` PassCodeManager ` to
updated artist retrieval logic in MediaInfoParser to ensure default artist is used when none is provided
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 1851 : fix npe in splittext when header line count be 0
added support for handling Windows - specific keystore types in HttpsConnectorFactory to ensure proper resource management for Windows - specific keystore types
increase default check timeout to 1 _ 000 second
added a condition to ignore cases where a remote folder was not found to ensure proper handling of file not found scenarios
added animation interpolation functionality to the Slider class to enhance user experience by allowing smoother transitions during slider updates
reformatted assertions in LineSeparatorProcessorTest . java to improve code readability and maintainability
reduced the maximum width and height of the texture packer from 512 to 1024 to optimize memory usage for texture packing
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnwrapParenthesesTest ` and modified the return condition in `
camel - 16400 : camel - hazelcast - avoid npe if the exchange body be null
added TextFeedbackTest to the AllTests and TextFeedbackTest classes , along with a TextFeedbackTest class to enhance test coverage for text
replaced Math . round with Float . round for score comparison to improve precision in score comparison
updated DENSITY constants from DENSITY _ 560 to DENSITY _ DENSITY _ 2HD and DENSITY _
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets ` to use
added logic to skip processing for zero stages in DefaultLogPublisher to improve performance by avoiding unnecessary processing for zero stages
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable users to turn on or off remote scm functionality
added support for additional states in MieleApplianceHandler to enhance functionality to handle additional states in the MieleApplianceHandler
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` and ` StatsLogCompatManager . java
[ hotfix ] fix typo in localzookeeper
added unit tests for ProjectGenerationEvent handling to ensure correct serialization and deserialization of ProjectGenerationEvent events
ggb - 2118 add support for preview point in selection
refactor JavaCompiler class to improve code readability and maintainability
added a check for non - positive remainingTime in IntegrationTestTimeBoundedRequestssWithRegionReplicas . java to ensure the test execution time does not
refactor multiple Java files related to heap management to improve code organization and maintainability
added garbage collection options to ldflags in NdkCxxPlatform . java to improve memory management by allowing garbage collection of sections
updated the URI handling in SpringCloudCircuitBreakerFilterFactory and added a new URI fallback controller in SpringCloudCircuitBreakerTestConfig to
fix checkstyle issue
added a check for ` ns _ spREADSHEETml ` before comparing string comparisons in ` ReadOnlySharedStringsTable . java ` to ensure proper handling of
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for negative text width in SwingUtilities2 . java and modified the Look and Feel setup in Test6635110 . java to ensure
refactor FlatteningIterator to use a singleton instance instead of creating new instances to improve performance and reduce object creation overhead
updated the removal of HTML tags from title and body in TweetLinkUtils to remove leading and trailing spaces to ensure cleaner and more accurate display of
doc : generate sample code in java microgenerator ( # 4 )
add test for delete existing question in instructorfeedbackeditquestionstosuitest
updated return values from - 1 to 0 in HSSFSheet . java and added firstRow check in BaseTestSheet . java to ensure correct row
added permission checks for launcher activities to enhance security by ignoring potentially malicious intents
[ java ] : rename pendingsession to pendingclustersessions to avoid confusion .
updated hashCode method in AbstractParquetMapInspector to include null checks for keyInspector and valueInspector to enhance code robustness by preventing
added a check to release resources when remotelyClosed is true to ensure proper resource management and prevent potential memory leaks
updated SplitReader interface to extend AutoCloseable to ensure proper resource management and prevent memory leaks
added a ` deepCopy ( ) ` method to the ` GsonBuilder ` class that initializes a ` GsonBuilder ` instance to ensure a fresh
fix npe in llscanner when cache be null
refactor file handling in RestClientRequestImpl to use asynchronous processing to improve performance and responsiveness of file operations
reformatted the dispatchStatusString method call to improve code readability and maintainability
added a new class ` SearchingClassLoader ` and updated ` MockFactory ` to utilize it to improve class loading efficiency by combining multiple class
add a test case to demonstrate the bug
added a check for LEFT _ SEMI _ JOIN in the join condition to ensure compatibility with both UNIQUE _ JOIN and LEFT _ SEMI _ JOIN
updated HttpReceiver and HttpSender to streamline response completion checks to improve code readability and maintainability by reducing redundancy
use arrayOopdesclengthoffset instead of arraylengthoffset for clarity
http : / / issues . apache . org / jira / browse / amq - 2894 - add default policy to broker test
refactor multiple Java files related to Kerberos authentication to improve code organization and maintainability
added a check to return early if the application is not running to improve performance by avoiding unnecessary operations when not running
changed the return type of the drawItem method from void to GlyphLayout to enable method chaining for better usability
refactor metrics handling in SpringmvcClient to utilize MetricsPublisher to improve code clarity and maintainability by centralizing metrics publishing logic
removed a static final ` SAFE _ ACCOUNT _ AGE _ DATE ` and updated the return statement in ` AccountAgeWitnessService . java ` to
reformatted code for improved readability and consistency to enhance code maintainability and clarity
added support for ResourceUrlProviderExposingInterceptor in CasWebflowContextConfiguration and related tests to enhance the handling of resource URL providers
add DexReturnInliner to handle return statement correctly .
return property of enrichedruledto instead of configuration object ( # 3971 )
removed the NOFOLLOW _ LINKS parameter from the isDirectory method in PathResource . java and updated its usage in AliasCheckerSymlinkTest . java to
[ hotfix ] [ table - planner - blink ] remove sql dialect property from executionentry
replaced ` rDotJavaPackages ` with ` rDotJavaPackagesSupplier ` in multiple classes to enhance flexibility by allowing the use of
add unit test for astpackagedeclaration
added configuration for min _ cross _ compaction _ unseq _ file _ level in IoTDBDescriptor . java to ensure proper handling of unsequence file
[ hotfix ] [ runtime ] move activeresourcemanager into active package
changed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to mark the test as disabled due
added error handling for URI construction in ZipResource . java and created a new test class for parsing feature files with spaces to improve robustness and ensure proper
updated the ` ExpandableUploadListAdapter ` to improve the handling of file uploads and added thumbnail generation functionality to enhance user experience by
refactor configuration handling in RobolectricTestRunner to use a hierarchy of classes to improve clarity and maintainability of configuration merging logic
updated List initialization to use a Predicate for filtering block and item registries to improve code readability and reduce boilerplate code
removed ` AbstractDataChangedListener ` and ` WebsocketDataChangedListener ` from ` AbstractDataChangedListener ` and ` WebsocketDataChanged
added support for Enum types in JSONPojoConvertor and updated color handling in JSONPojoConvertorTest to enhance type handling for Enum and
deprecate ` -- view ` option and will be removed soon
refactor GWTRequestWrapper to use a byte array for originalPayload and improve character encoding handling to enhance performance and flexibility in reading
replaced ` GyroControl . java ` with ` GyroControl . java ` and added ` OrientationCorrectionListener . java ` to
change biome list size to use biome gen array to avoid arrayindexoutofboundsexception
updated print statements in GetInterfaceTest . java to remove redundant print statements to improve code readability and maintainability
removed redundant assignment of the Environment variable in FileCompilerConfig . java to streamline code for better readability and maintainability
added a new file ` ByteToLongCollector . java ` that defines a new interface ` Supplier ` , ` accumulator ` , ` combiner ` ,
added preload parameter to MMapDirectoryFactory to allow customization of map loading behavior
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and default card image assignment in CardPresenter . java to enhance layout handling for different screen orientations
[ ds - 3952 ] do n ' t redirect to login page if there be no auth method
added checks for non - empty arrays before cloning longValues and doubleValues in VectorHashKeyWrapper . java to ensure proper handling of empty
added unit tests for the System . nanoTime ( ) method in TimeChangeTest . java to ensure correct behavior of JIT processing during CRIU checkpoint
added null check for line in MultiPartFilter and improved error handling in MultipartFilterTest to enhance robustness by preventing null pointer exceptions
fix entitylivingbase not fire livingexperiencedropevent .
[ openuv ] update error message when apikey be not configure ( # 15602 )
[ sql - planner ] remove unsupportedoperatorvisitor from beamqueryplanner . validate ( sqlnode )
added support for targetGraph in GraphEnhancementQueryEnvironment and introduced RdepsFunction in GraphEnhancementQueryEnvironmentTest to enhance
refactor methods in Character class to improve code readability and maintainability
added a flag to check if the entire rocket is being scaled in the ScaleDialog to ensure selectionOption is set correctly based on the components being scaled
replaced ` Arrays . toString ( ) ` with ` assertEquals ` for better readability in test assertions to improve code clarity and maintainability
added time boundary handling for offline and realtime tables in BaseBrokerRequestHandler . java to ensure proper management of time boundary information for hybrid tables
do n ' t add socket reference if not async
update eightmuses ripper to download full sized image
replaced direct calls to ` mDevice . wait ` with a new ` TestHelpers . wait ` method for consistency to improve code readability and maintainability by centralizing wait
added checks for phone orientation in QuickstepLauncher to ensure proper layout handling for phone devices
updated Hibernate query handling to use ` QueryImpl ` instead of ` PROPERTY ` to ensure compatibility with updated Hibernate API and improve query safety
refactor file reading logic to use a new method ` readMatchingLines ` to improve error handling for privileged actions to enhance code readability and
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure that the query results are retrieved correctly based on the
added null check for entity before processing to avoid potential null pointer exceptions
add test for entryprocessor when value attribute be indexed
add jitsi - meet - room header to the jitsi - meet - room operation set . jitsi - meet - tools
updated color calculation and HTML message formatting in Utils . java and UtilsTest . java to improve color handling and enhance test output clarity
fix ( editor ) : disable text input ( # 1086 )
updated scratch path format in Aapt2Link . java and added a RmStep in BuildTargets . java to ensure correct path formatting and enhance
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and `
g3d - 356 : do n ' t hide select geos in algebra view ( fix # 388 )
( chore ) camel - ysd : improve error reporting for empty stack
added isCanceled method implementations in BehaviorCall , Calls , and OkHttpCall classes to ensure consistent cancellation behavior across different call implementations
refactor ` isAnnotationPresent ` method implementations across multiple classes to standardize annotation presence checks to improve code readability and maintainability
added a default implementation for the removeAllWidgets ( ) method to indicate that the default method is not yet implemented
[ hotfix ] [ yarn ] [ test ] fix yarnsessionfifoitcase to use jobclient
opensslcipher : fix getoutputsizeforfinal to return correct output size
added handling for high - resolution content in PlaybackController to ensure proper transcoding of high - resolution media streams based on Fire TV Stick settings to
[ beam - 8470 ] refactor readsourcetranslatorbatch to use readsourcetranslatormockbatch instead of readsourcetranslatorbatch
updated GpsLoggingService to use a set of listeners instead of a single listener to improve flexibility in handling different GPS listener preferences
changed the parameter type of ` fullwidths ` from ` boolean [ ] ` to ` byte [ ] ` in ` vt320 . java `
added support for BaseItemDragListener in FolderIcon to enhance drag - and - drop functionality in the drag - and - drop feature
added a method to create an empty artifact in the repository connector to ensure proper handling of empty connector configurations
reformatted code for improved readability in RabbitMQPublisherImpl . java to enhance maintainability to improve code clarity and maintainability
simplified the conditional check for video links in VideoViewerActivity to improve code readability and maintainability
camel - sftp : fix camel - sftp to work on window
increased the timeout duration for mock assertions in BaseWeatherConsumerTest to allow more time for tests to complete successfully
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to improve clarity to enhance code
fix double plant not work for large mass
changed focus behavior of the tree component from non - focusable to non - focusable in TranscodingTab to improve user experience by allowing focus to be
server : do not throw exception when vm creation fails
updated license acceptance logic in DB2TestSystem . java and modified conditions in DockerDatabaseWrapper . java to ensure proper handling of DB2TestSystem
changed the access modifier of ` units ` from final to non - final and added unit group handling in ` GeneralOptimizationDialog . java ` to
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC / BTC against Bitcoin
added a check to set the number of samples if it is greater than zero to ensure the fpp uses the correct sample settings
updated assertTasklet calls in StepWithSimpleTaskJobParserTests to use consistent variable names to improve code readability and maintainability
changed variable declarations from ` final ` to ` final ` in ` CentralAuthenticationServiceImplTests . java ` to enforce immutability and clarify
updated string concatenation syntax in ExpressionNode . java to improve clarity and consistency in output formatting
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to ensure ` serviceOutput ( ) ` is
jbrules - 2835 fix number coercion for bigdecimal
added a new variable " org . eclipse . jdt . " in WebAppContext . java to hide jdt used by jetty to
changed the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false ` in `
fix namespace to be lowercase
camel - 16400 : camel - core - doprivileged - doprivileged - doprivileged - doprivileged -
added null check for zooKeeper before accessing its state to avoid potential NullPointerException when zooKeeper is not initialized
updated the progress bar step in Loader . java from " Initializing mods Phase 2 " to " Initializing mods Phase 2 " to correct the progress bar
refactor vibration handling to use a dedicated UI helper thread to improve code readability and maintainability by centralizing UI helper execution logic
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the latest remote stream ID is used for processing
fix text anti - aliasing in header and tool
[ java ] remove unnecessary termWindowSize from driver publication .
fix ( ctannotationimpl ) : remove unused static import
refactor ExoPlayer class to improve code readability and maintainability
updated getRGBPixelImpl method to return a rectangle containing pixel data instead of an integer to improve performance by avoiding unnecessary pixel conversion
added a method to create a print stream with specified encoding to improve flexibility in handling different output stream encodings
updated vibrate value from 1 to 25 in TouchableMovementMethod . java to improve user feedback during touchable movement
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to improve code
updated WebSocketClient constructor to accept an executor parameter to enhance flexibility in configuring WebSocket connections
danielwagnerhall : fix junit test failure on window
replace handlebootstrapmethoderror with handleloadconstantexception
added a call to restoreAuthSystemState in XmlWorkflowServiceIT to ensure proper authentication state after tests
added a custom comparator to the CoNLLUFeatures class to ensure case - insensitive comparison of strings for improved functionality
refactor JavadocTool to use a set for unique source files and simplify file parsing logic to improve code readability and maintainability by red
danielwagnerhall : do n ' t allow toggling of an option in a multi - select . this should fix the
added validation for key count in HighestKvno . java to ensure the correct number of keys is used to prevent runtime errors
added error handling for attribute retrieval in HDF5BatchReader to ensure only Huge objects BTrees with 1 records are processed to improve robustness by
[ beam - 8470 ] use ` writeresult . in ( pipeline ) ` instead of ` p done `
updated XML element name from ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and added ` ApiImplicitParam ` annotation in ` ProcessGroupResource
added a new file ` TestMultiANewArray . java ` to test multi - dimensional array initialization to ensure proper handling of non -
ambari - 20583 . add option to disable secondary storage on management server ( dlysnichenko )
refactor block ID handling in SyncBlockChainMsgHandler to use a local variable for head ID and ID to improve code readability and maintainability
added theme setting functionality to PreviewTabView to ensure the preview tab uses the user ' s selected theme preference
added a null check before closing the reader object in VectorizedParquetRecordReader . java to prevent potential NullPointerException when reader is not initialized
added a new test method ` testHttpIdleTime ` to the ` ConnectorTimeoutTest ` class to ensure that the server ' s idle timeout
add miss property for dcoref dictionary
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method ` readTagName
updated generic type parameters in JpaPagingItemReader and JobLaunchingGatewayParserTests for clarity to improve code readability and maintainability
change log level from warn to debug in DistributedQueue . java to reduce log verbosity and provide more granular control over log output
refactor color extraction logic to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability by reducing dup
added default DataTableEntryTransformer and TableCellByTypeTransformer to TypeRegistry to enhance data table entry and cell transformation capabilities
updated assertions in AtomicRemainder . java to ensure consistency in shared assignment logic
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a boolean field ` projectGenerated ` and updated its value in ` ProjectGenerator ` to enable tracking of project generation status
updated condition in DriverUtils . java to ensure proper authentication header validation
added contact form functionality to the application and created a new Contact class to enhance user experience by allowing users to submit contact information easily
guacamole - 102 : use objectpermission instead of guacamolepermission .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version release
[ drools - 7 ] fix typo in traitfactory . setmode ( )
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` and ` findWhereName
replaced manual closing of per - document consumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper to enable the menu to show the menu when a click action is triggered to enhance
updated error messages in ` Subject ` , ` OptionalSubject ` , and ` OptionalSubjectTest ` to use ` isNonNull ` instead of `
ggb - 161 : update the help button panel ' s line height if it have change
move protobufferutilstest from network to util
fix divider position and width in jabref window ( # 7441 )
improve handling of crossref in auxsubgenerator ( # 3971 )
[ geos - 10568 ] fix geoserver geoserver geoserver geoserver geoserver geoserver geos - 10
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity to enhance code readability by using
added metacontact update event to the contact list .
updated import statement for Command from org . apache . sshd . server . Command to org . apache . sshd . server . command
added a test for the ` cleanUpAuditLogTablePostParametersByPosition ` method in ` AuditLogTest ` to ensure that the audit log table
make inject method return an object instead of null
added regex pattern matching for comment lines in ` ACLFileParser . java ` and updated parsing logic in ` ACLFileParserTest . java `
updated the method signature of ` isReadable ` to ` DrillTable ` to include ` storageEngineName ` and ` userName ` to enhance functionality
added support for ancestor dimension values in StarTreeImpl and updated logging messages in StarTreeNodeImpl to enhance functionality to display additional ancestor dimension values
added user unlock check before closing open views in TouchInteractionService , BaseQuickstepLauncher , and RecentsAnimationDeviceState to ensure that open views
updated condition in Photo . java to check for positionStr instead of widthStr to ensure proper handling of positionStr to avoid potential null pointer exceptions
refactor conditional statements in PKIXValidator . java to improve readability and structure to enhance maintainability of certificate validation logic
[ hotfix ] [ test ] add archunit test for test code generation
updated package declarations for AlibabaDubbo integration tests from ` dubbo ` to ` test . alibaba . dubbo `
vpc : do n ' t create project if it do n ' t exist
updated the assertion in RuntimeTypeAdapterFactoryFunctionalTest to check for SQUARE type instead of SPARARE to ensure correct handling of shape types in
added a boolean flag ` storeUndoInfoForProperties ` to control whether to store undo information for properties in the application
added a privileged action to retrieve the " sun . java2d . xrgradcache " system property in XRCompositeManager to enhance security by
[ hotfix ] [ test ] increase awaitility in streamclosetest
lucene - 4892 : do n ' t hang onto each doc in term vector
added deprecation handling for non - deprecated properties in ConfigurationMetadataGenerator to ensure that non - deprecated properties are excluded from processing
refactor capacity , mask , and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf . java and modified file path handling in Hive . java
improve error handling in parallel nio sender by log exception
added a null check for the context before returning a new instance of SchemeAndroidIDE to avoid potential NullPointerExceptions when the context is not initialized
[ gr - 26711 ] fix native - image - build - server to use correct classloader .
changed the return type of ` modifyGrantedAuthorities ` from void to a List in ` SwitchUserAuthorityChanger . java ` and added
refactor JaxrsIntegrationTest and JaxrsSpringIntegrationTest classes to extend JaxrsIntegrationTestBase and JaxrsSpringMain
use setquerytimeout instead of isjdbc41Compliant in hikaripool
added data provider for GeneralTestsData and supplementary characters in XslSubstringTest . java to enhance test coverage for XSL substring
replaced ` eventWriter . closeWriter ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added ` sequenceNextValueFunction ` and ` supportSequences ` methods to ` MariaDBDatabase ` and ` CreateSequenceGenerator ` for MariaDB
[ hotfix ] fix checkstyle violation
added TableDataManagerProvider to multiple test files to enhance metrics tracking for offline data sources
updated the condition for enabling MFLN and MFLE extensions in SSLExtension . java to allow both " MFLN " and " MFLE "
replaced ` ObjectIterator ` with ` ObjectHashSetIterator ` in ` ObjectHashSet ` and added tests for string representation in ` ObjectHashSetIntegerTest
updated characterRemaining calculation in Compose . java and adjusted charRemaining calculation in TweetFragment . java to correct the calculation of charRemaining to ensure accurate
added cassandra _ datapoint _ ttl dependency to cassandra datastore
updated the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter for better control over Xcode process execution to
added a method to retrieve terrain at a specified cell in the TerrainGrid class to improve functionality for obtaining terrain data based on cell coordinates
added default value printing in Pretty . java and created a new class T6665791 . java with a test for annotation processing to enhance
added error handling for missing QuestEncryptionKeys . json file to improve user feedback when quest keys cannot be loaded
added a check for non - push requests to ensure that push functionality is only enabled when push is supported
refactor PointValue class to improve code readability and maintainability
added a signing process for local witnesses in BlockUtil . java to ensure proper handling of private keys during block signing
updated method to return null for root array and added security checks in Win32ShellFolder2 and Win32ShellFolderManager2 to enhance security handling
refactor ` copyContent ` method to ` copyLastRow ` and update row handling logic in ` ColumnText ` and ` PdfPRow
updated undoNotesList to utilize SparseArray for managing undo notes to enhance the management of undo notes in the list
[ # 7969 ] add ability to upload question and comment ( # 7968 )
added a check for non - null transfer data in the getTransferData method to ensure that a valid transfer data is returned before proceeding
no effective change - remove unused pstmtdelegate interface
replaced ` getPaddingForWidget ` with ` getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame . java ` and ` Launcher .
refactor MethodHandle references in NashornBeansLinker . java to streamline method calls to improve code readability and maintainability by reducing
refactor ClassGraph and ScanResult classes to improve code organization and readability
rename ` CountDownLatch ` to ` goAwayLatch ` for clarity to improve readability and maintainability of the code
replaced calls to ` getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to
changed the initialization of ` currentBook ` from ` set ( ) ` to ` null ` across multiple classes to ensure that the ` currentBook ` is
added a method to check if a given object is a supported object type in ContactSecurityVoter to enhance flexibility in handling different object types
removed unused imports for GachaHandler and Tools in DataLoader . java to improve code clarity and reduce unnecessary dependencies
added an ` AtomicInteger ` for tracking the number of rows affected in ` PostUpdateLog ` and ` UpdateCountCommandStep ` methods to
mow - 161 make sure we do n ' t use negative margin when create a new dock
set foregroundFPS and backgroundFPS to 60 to ensure consistent frame rates in the application
added object release tracking to HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced DefaultWebSocketFrame instantiation with a direct addition of ChannelFutureListener to the flushAndFlush method to simplify the code and eliminate unnecessary object creation
replaced ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and ` OnStateMachineError ` in multiple test files to enhance event handling
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by centralizing background setting logic
replaced Apache Commons StringUtils with OpenHAB ' s StringUtils in RMEThingHandler . java to utilize OpenHAB ' s StringUtils for string
added a new method ` accumulate ` to the ` WeightedAvgAccum ` class to calculate the summation of values based on a specified weight to
updated formatting in Put . java and ReplicationSink . java files to improve code readability and maintain consistency
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` for caching RegExp instances to improve performance by reusing RegExp instances instead of
added a static method to reset the gameThread variable to provide a way to reset the gameThread instance to prevent memory leaks
added a check for the digest ' s realm in the login method to ensure the login process only accounts for the authenticated user
refactor parameter handling in SavedRequestAwareWrapper to improve null safety and streamline parameter retrieval logic to enhance code robustness and maintainability
updated InfoStatus messages in BasicConfigurator , LoggerContext , and ContextInitializer classes to improve clarity and consistency in logging output
replaced the call to ` hasNotified ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and ` HAService . java
added a check for Android O and updated auto - complete functionality in PhotoViewerActivity . java and Utils . java to ensure compatibility with Android O to en
updated SchemaInfoLevel from minimum to basic in SchemaCrawlerOptions to ensure compatibility with schema crawling operations
pdfbox - 4892 : use bufferedoutputstream instead of zipoutputstream , a suggest by valerybokov
updated random byte handling in TestPayloads . java to use UTF - 8 encoding and improved string conversion logic to ensure proper handling of UTF - 8
fix mc - 103516 , fix mc - 103516 , fix mc - 103516 , mc - 103516 , mc - 10
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to support additional container configurations
[ drools - 7 ] fix a bug in protobufferinputmarshaller . accumulate ( ) that could cause npe
refactor case statements in NowSearchTerm and SearchTermBuilder to streamline comparison logic to improve code readability and maintainability by reducing
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for setting HTTP method and headers to improve code readability and maintainability
added a new method ` newResponseBuilder ` to ` SearchHandler ` for creating ` ResponseBuilder ` instances to improve code readability and maintainability by
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command execution during tests
refactor computePreviewDrawingParams method to include a null check for mReferenceDrawable to improve robustness by avoiding potential null pointer exceptions
updated LukeRequestHandler to utilize CharFilterFactory for token filtering to enhance text analysis capabilities by integrating character filtering capabilities
replaced null argument checks with ParamChecks for plot , generator , and hotspot arguments to improve code readability and maintainability by using parameter validation
added verbosity control to the execution context creation methods to improve flexibility in output handling based on verbosity settings
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5674 : db
log4j2 - 1349 fix asyncloggerallthreadcontextimplementationstest failure
added a new file TestShrinkToOneRegion . java that includes a main method to facilitate testing of shrink - to - region functionality
replaced string splitting with Splitter for better readability to improve code clarity and maintainability
replaced ` context . utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester . java ` and added a
fix pushsafermessagebuilder to work with local attachment
[ zeppelin - 4892 ] remove useless provenance hash from output
pdfbox - 5055 : sonarqube fix : remove unneeded null
updated method calls in ByteFieldTest , CharFieldTest , DoubleFieldTest , FloatFieldTest , IntFieldTest , and LongFieldTest
replaced Apache Commons logging with Java ' s built - in BigDecimal for rounding to improve precision in floating - point number handling
[ jsscripting ] [ jsscripting ] fix jsscript engine to work with config file
changed Test1 and Test2 classes to be public to allow access to these classes from other packages
updated permission templates and variable names in PlayerEventListener . java to improve clarity and consistency in permission handling logic
added a session parameter to the ` getAdditional ` method and updated related logic in ` ConditionAndOr ` and ` ConditionInConstantSet ` classes to
replaced ` test doTestNormsVersusStoredFields ( new LongProducer ( ) ) ` with ` test doTestNormsVersusDocValues
added multiple test cases for creating dynamic boxes and circles in Box2DCharacterControllerTest . java to enhance test coverage and ensure proper functionality of
added tests for ` FLIGHT _ RECORDER _ OPTIONS ` in ` TestBadOptionValues . java ` and ` TestMemoryOptions . java ` to
added a check for power of 2 in ObjectAlignment . java and updated output assertions in Options . java to ensure compliance with expected output constraints
added a method to extract the target package from the APK manifest and integrated it into AndroidInstrumentationTest and AndroidManifestReader to enhance
refactor DocHelper class to improve code readability and maintainability
change acceptableThrowawayItems to accept a list of items instead of an array to improve flexibility in item handling
updated method calls to explicitly cast to primitive types to improve type safety and avoid potential ClassCastException
reformatted the ` isWorkingOnMessage ` method to improve code readability and maintainability
refactor inflection class to improve code readability and maintainability
added methods to retrieve and set locale in EvaluationContext to enhance locale management functionality for improved localization support
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in the DrawerActivity class to prevent fall - through behavior in a switch case
updated import statements in MongoQueryCreator . java for consistency and clarity to improve code readability and maintainability by using wildcard imports
added support for xwork . loggerfactory system property
rename test method to avoid confusion
updated bean names in AvailabilityHealthContributorAutoConfiguration and AvailabilityProbesAutoConfiguration to include " livenessStateHealthIndicator " and " readinessState
added a ConcurrentMap for storing PStore instances to enable thread - safe access to the NoWriteLocalPStore configuration to improve performance by avoiding unnecessary
refactor the deleteFiles method to encapsulate file deletion logic to improve code readability and maintainability
replaced Provider < T > with ServiceProvider < T > in ServiceLoaderSpliterator . java and TypeUtil . java to improve service provider management to en
do n ' t throw runtimeexception if field can not be find
added toolchain creation checks in AbstractCell and DefaultToolchainProvider classes to ensure proper handling of toolchain creation based on the creation status
add a check for contextaddedtoengine before remove it from the engine
simplified string comparison logic in AbstractCheckDescriptor . java to improve code readability and maintainability
updated linker flag handling in PrebuiltCxxLibraryDescription and added a new test for exportedLinkerFlags in PrebuiltCxxLibraryBuilder to
updated method names from ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` RecentsView
updated listener type checks to use wildcard generics in multiple classes to enhance type safety and reduce potential runtime errors
abstractblockchain : use the hash of the block instead of the hash of the new block .
defaultmessagestore : remove redundant getstorepathcommitlog ( ) call
refactor micrometermetricmanager to use try - with - resources
added logic to track message counts for found and non - found messages in CompactionLog to enhance the accuracy of message statistics during compaction processes
added @ Deprecated annotations to multiple query classes to indicate that these classes are outdated and should not be used in new implementations
added a method to check for the presence of a system UI object in AbstractLauncherUiTest to ensure proper handling of keyguard status view to enhance
changed access modifiers of logger and sessionIds variables to final in SessionRegistryImpl . java to enhance immutability and thread safety of these variables
added a check to return false if the cookieJar is empty in InMemoryCookieStore and NullUriCookieTest to ensure proper handling of empty store scenarios
added tostring ( ) method to bonsaivalue and bonsaiworldstateupdater to make it easy to debug
changed the return type of ` getText ` methods from ` String ` to ` CharSequence ` across multiple classes to allow handling of both ` String ` and `
danielwagnerhall : deprecate marionette in favor of firefox
added a try - finally block to ensure connection is closed in a finally block to handle potential IOException to improve resource management and prevent application crashes
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to clarify the purpose
added synchronization to the heartbeat executor service to ensure thread safety during heartbeat operations
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCancellation `
fix for drag - selecting text out of the TextArea ' s bounds
added temporary directory configurations for TestInformationSchemaWithPrivilege . java to ensure proper directory paths are used for mapreduce operations
refactor graphics configuration retrieval logic to improve readability and maintainability of the code
tika - 2088 -- fix oom bug in test
camel - 16400 : camel - core - optimize the pipeline to be more efficient .
add - model option to printtaglist and print basic tag
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` for table retrieval in ` InsertDeParser . java ` and added a new test
improve test coverage for eofindexrecoverytest
[ java ] fix flaky test in startfromtruncatedrecordinglogtest
replaced ` int ` with ` float ` for arc calculation in ` RoundRectangle2D . Float ` to improve precision in rounding operations
added checks for null or empty galleryImages before proceeding to avoid potential NullPointerExceptions when galleryImages is null or empty
updated DEPLOYMENT _ ID handling in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to improve clarity and functionality of deployment ID
pdfbox - 4892 : use interactive form instead of fdf
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` method and its usage in ` AlterTableAddConstraint . java
added a mechanism to manage multiple Quickfixj engines in QuickfixjComponent to enhance flexibility in managing multiple Quickfixj engines
added a boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to accept a ` mixedContentMode ` parameter to enable
add corporea block and slab to allow corporea to be use .
refactor ConnectionFactory class to improve code readability and maintainability
added a method ` EnableDisableMenuItems ( ) ` to enable conditional menu item selection based on app settings to enhance user experience by preventing actions on
updated the message for empty favorites in ExtendedListFragment to include a filter list to enhance user feedback to improve user experience by providing clearer feedback
hhh - 15464 : fix test failure in entitytests due to miss setting
updated MotorMountConfigurationPanel and MotorMountTableModel to set auto - resizing off and create columns from the model to improve table layout management and ensure
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner . java `
added getter and setter methods for creator , subject , and subject properties in POIXMLProperties . java to enable access and modification of document properties
reformatted the doStop ( ) method call in HandlerWrapper . java to improve code readability and maintain consistency
[ java ] ignore empty cnc file in aeron .
replaced ` NonMarkedFoo ` with ` FooCommand ` and ` FooCommand ` in ` UnsatisfiedTypeBounds . java ` and ` Unsat
added methods to check if a JDK module is a JDK module and adjust the class path accordingly to ensure compatibility with JDK versions prior to J
added nullability checks for canonicalizer in TreeBackedElement and TreeBackedPackageElement constructors to enhance code robustness by preventing potential Null
replaced Saml2TokenGranterTest with PublicTokenRequest in Saml2TokenGranterTest and UserTokenGranterTest to
fix arrayindexoutofboundsexception in abstractfrompropertyrangedescriptor
added synchronization functionality to ZKAssign and ZooKeeperWatcher classes to improve data consistency during Zookeeper operations
added checks for the current EGL context in GlUtil . java to ensure proper error handling when no current context is available
[ drools - 7 ] ruleflowgroup should be deactivate only if the ruleflowgroup be active
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to improve error handling and ensure
clientqueuetest : fix flaky test
fix : use defaultjavaparser for ctreferenceimpl # tostring
changed the visibility of the validateInstance method from public to protected to restrict access to the validateInstance method for better encapsulation
lucene - 6930 : decouple GeoPointField from NumericType and TermEnum in GeoPointInPolygonQuery
added a new file ` FakeBuildable . java ` that extends ` AbstractBuildable ` and modified ` OnDiskBuildInfoTest . java ` to
fix nullpointerexception for empty bucket . close # 388
rename ` stream _ path ` to ` stream _ timeseries ` in ` TSParser . java ` and update references in ` SQLParserTest . java
added a check for EPSILON in TubeCalc . java to prevent division by zero errors when calculating velocity
replaced calls to ` getBucket ( ) . create ( ) ` with ` _ storage . list ( ) ` in GcsPinotFS
added a finally block to ensure proper resource cleanup to prevent potential memory leaks
added history view functionality to dbtriggerbasedhistory ddl
updated the expected value in the checkEngine method from 2 to 3 to align the test with the latest expected behavior
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test to temporarily skip the test execution
replaced ObjectInputStream with ParserStateObjectInputStream in ParserCacheCommand . java and added a new ParserStateObjectInputStream class to enhance class loading
added null checks for ` changeLog ` and ` objectQuotingStrategy ` in ` ChangeSet . java ` and ` DatabaseChangeLog . java `
replaced ` parse ( ) ` with ` fromXmlStream ( zipFile ) ` in ` MetainfoParser ` to improve compatibility with XML data handling
deleted the CsrfControllerAdvice . java file to remove unused code related to CSRF token handling
updated endorsed argument handling in AntCompiler . java to quote path lists and added a new method for quoting paths to ensure proper formatting of paths
added animation listeners and modified background animation behavior in Launcher . java and AllAppsBackgroundDrawable . java to enhance visual feedback during drag operations
updated the condition in TypeInferenceUtils from 2 < < 24 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling UNC paths in WindowsPathParser to ensure proper handling of UNC paths in path operations
replaced ` InetSocketAddress ` with ` MulticastSocket ` in ` Promiscuous . java ` to simplify socket creation to enhance code readability and
removed duplicate close calls in TestWildcard . java to improve code readability and maintainability
updated return statement to return a clone of nBits to ensure the original nBits array is not modified externally
changed the access modifier of deriveCollectorName method from private to protected in ProfilerCollector and added custom name assertions in TestProfilerCollector to allow subclass access to
refactor type hint handling in MappingMongoConverter to improve clarity and maintainability of type hint checks
added performance measurement for the createProxyFactory method to measure the creation of proxy factories for performance analysis
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
improve error message when port be unreachable
replaced the method ` reinflateWidgetsIfNecessary ( ) ` with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) ` across multiple classes
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure that the file deletion functionality works correctly
* do n ' t flush message if renderable be not auto flush
[ # 7555 ] instructorstudentlistpageuitest : improve test coverage ( # 7358 )
added methods to filter tests based on specific conditions to enhance test execution control based on environment variables
removed the pointer parameter from the fling method signature to simplify method signature and improve usability
added a null check for pageable in QueryDslJpaRepository to prevent potential NullPointerException when pageable is null
added computeMemorySize method to MemoryManager and corresponding tests to ensure memory allocation does not exceed specified fraction limits
updated test timeout from 2000000 to 20000 milliseconds in JMSPublisherConsumerTest . java and PublishJMSTest . java to allow more time for
refactor SnowballAnalyzer class to improve code readability and maintainability
[ hotfix ] [ table - common ] fix indexoutofboundsexception in streamingaggregationtemplate
improve error message when the receiver be null
added a new method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` that uses ` computeIntensityDefault (
updated logging messages to reflect fully played files instead of watched files to improve clarity in log output for better debugging and tracking of file movement attempts
updated method signatures in InjectorProxy , StandardInjectorProxy , and InjectorTest classes to use ` newInstance ` instead of ` setAccessable
[ hotfix ] [ flink - streaming ] [ table - planner - blink ] remove useless close ( ) call from flinkstreamingcreatefunction
added unit tests for various SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure correct parsing and deparsing
return an empty immutable list instead of null to avoid potential null pointer exceptions
updated error message in NamedSetTest to include Quality Distribution to enhance clarity in test output for better debugging
updated WebSocket connection handling to support reconnection and improved connection state management to enhance reliability and clarity in managing WebSocket connections and
removed unnecessary null assignments to session attributes in AbstractProcessingFilter . java to simplify code and improve readability
hbase - 26909 enable / disable table replication by default
added a call to ` PMS . setConfiguration ( new PmsConfiguration ( false ) ) ` in ` FormatRecognitionTest . java ` to ensure
cloudstack - 8470 : add event for create ova data disk template when template be create
replaced Spring Boot tests with JUnit4 test runner annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test structure and compatibility
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding and improve code
updated SQL table creation statements in AppendOnlySchemaIT . java to use ` metricVal1 ` instead of ` metricVal ` to align with
added a check to ensure document count consistency between deleted and segment document counts to prevent corruption errors
add more logging to the sip communicator
add a small length for staves w / no starting barline
removed the default value for ` handleFileUploads ` in ` VertxPlatformHttpServerConfiguration ` and added it in ` VertxPlatformHttpEngine
added a test for CsrfFilter to allow case - insensitive method handling in the filter to ensure proper CSRF protection match behavior to enhance security by
refactor hotspotobjectconstantimpl to avoid static field access
replaced ` add ` with ` addFrequency ` in multiple classes to improve clarity and consistency in method naming
replaced ` Instant . now ( ) ` with ` Instant . withWatermark ( now ) ` in ` FileIO . java ` to ensure that the watermark
hhh - 19809 - fix ctedefinition not be null in select statement
added import statement for ResultSetMetaData to enable ResultSetMetaData functionality in QueryCompilerTest
updated command - line arguments in JsLibrary . java to use the project filesystem ' s root directory to ensure compatibility with different project configurations
updated slider range from 180 to Math . PI in RailButtonConfig . java to allow for a more flexible slider range to enhance the slider
do n ' t crash if save fails
added support for expression language in Kerberos configuration to enhance the flexibility of expression language in the application
removed the ` scale ` parameter from the ` setRemotePlayersHeldItemMountPointScale ` method in ` ThirdPersonRemoteClientSystem . java ` to
updated setupViews method to accept a ScrimView parameter across multiple classes to enhance view setup by incorporating a scrim view for
[ hotfix ] [ state ] make periodic materialization configurable
added a ` value ` field to the ` ProtocolParameter ` class and its getter / setter methods in ` List ` and ` ParamTagHandler ` to
added a new test method ` testChunkingWithHead ` to ` TestHttpServlet ` to verify the behavior of ` ChunkingServlet `
fix checkrouter answer for bumped status
added Content - Type header for POST requests in SwitchToPostInterceptor and SearchRequestUnitTest to ensure proper handling of form data in POST requests
refactor EmbeddedClientConnector class to improve code readability and maintainability
added logging for ignoring setFetchSize ( ) in PhoenixResultSet . java to improve debugging by providing clearer error handling for unsupported operations
added null initialization for AndroidNet in AndroidDaydream . java to ensure proper handling of network connections
[ hotfix ] fix typo in lltimesegmentdatamanager
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the
hbase - 25809 [ tablemapreduceutil ] remove hbase - prefix - tree from tablemapreduceutil ( addendum )
added a boolean flag ` inflationFailed ` and modified ` root ` declaration in ` XMLLayoutInflater ` and made ` root ` final
refactor PushbackInputStream class to improve code readability and maintainability
refactor lowering phase to be more efficient
updated error message from download _ folder _ failed _ content to sync _ folder _ failed _ content to improve user feedback during folder synchronization
updated Makefiles . java to include new line parsing functionality to enhance code readability by recognizing multiple newline characters
replaced direct calls to reader . getDeletedDocs ( ) with MultiFields . getDeletedDocs ( ) in ReadTask . java to improve code readability
updated refresh flags in SimpleBatchNode to include RF _ TRANSFORM to ensure proper refresh behavior during transform operations
[ gr - 26709 ] do not insert safepoints for non - uninterruptible method .
added a GLFWFramebufferSizeCallback to manage window sizing in LwjglWindow . java to improve responsiveness by notifying the user when frame sizes
updated translation calculations in LauncherAppTransitionManagerImpl . java for improved animation behavior to enhance visual transition effects to ensure smoother transitions by
updated LiteralNode to use NullLiteralNode instead of NodeLiteralNode for better handling of null values to enhance type safety and clarity in
added length calculation in CompoundFileWriter and implemented setLength method in FSDirectory to ensure the file length is accurately tracked and managed
updated AndroidNdkScriptGenerator and AntScriptGenerator to use " gdx " instead of " gdx - natives . jar " and
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of sourcesource in camel - s3
added role check for permitted permissions in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to ensure proper authorization handling for wildcard
refactor ZookeeperClientServerRegisterRepository to use GsonUtils for URI registration and improve null handling to enhance code readability and ensure
refactor methods in ReturnsDeepStubs to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
replaced calls to ` toByteArray ( ) ` with ` getCallValue ( ) . toByteArray ( ) . toByteArray ( ) . toByteArray (
improve log message for date parsing failure ( # 1771 )
added exception handling for NoSuchAlgorithmException in the mapPBEAlgorithmToOID method key generation to improve robustness by gracefully handling cases where AES is unavailable
rename variable ` length ` to ` inputLength ` for clarity and consistency to improve code readability and maintainability by using more descriptive
added validation for job parameters in CommandLineJobRunner to ensure only valid job parameters are provided to improve error handling and provide clearer feedback for invalid configurations
updated the expected message content from " foo \r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure
updated case statements in ExtendedConnectionDataSourceProxy . java to improve code readability and maintainability
updated LongSequenceGenerator to use AtomicLongFieldUpdater for lastSequenceId to improve thread safety and performance in concurrent scenarios
added a new file ` Test . java ` containing a static method ` sum ( ) ` to calculate the sum of two integers to provide a utility for
updated ` @ Config ` annotations to use ` maxSdk ` instead of ` minSdk ` across ` ShadowWifiManagerTest ` and ` W
added a new file ` Solution . java ` that implements sorting and sorting logic in the ` Solution ` class to provide functionality for processing input data based on
fix race condition in cassandra / cassandra - cassandra - cassandra - cassandra - cassandra -
refactor taskbar recreation logic into a separate variable for clarity to improve code readability and maintainability
refactor SyncFutureCache class to improve code readability and maintainability
updated DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and LOWEST _ VERSION _
uselessstringvalue : fix false positive for literal
added a new test method ` testEllipseNoseconeDrag ` to the ` SymmetricComponentCalcTest ` class to verify the functionality of the
add option to specify max type shard size
added new test cases for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwards
refactor CompilationTask class to improve code readability and maintainability
updated assertions in TestSemanticAnalysis and DDLTask to clarify that location is not shown in test mode to improve test clarity by
added a call to clearDatabaseChangeLogTableStatement to clear the database change log table to ensure the database changes have a clean state before further operations
updated the RestClient and CallPath classes to handle versioning and improved path management to enhance functionality to support versioning and ensure accurate
updated exception handling in PhoenixDriver to improve clarity of error messages and ensure proper resource management
throw unsupportedoperationexception instead of return null
added file deletion after tests in ConflictsResolveActivityIT and implemented screenshot functionality in FolderPickerActivityIT to enhance test coverage and improve file management
[ gr - 16400 ] fix deoptimization optimization when run in dev mode .
camel - 16400 : fixed stringhelper to remove leading and trailing quote from string
added handling for NOT _ CONTAINS in JpaQueryCreator , ParameterMetadataProvider , UserRepository , and UserRepositoryFinderTests to improve query parsing
fix for http : / / issues . apache . org / jira / browse / amazonecho . com / browse / amazone
added a dispatch method for P25Message to dispatch a new P25Message to enhance message processing functionality
added a null check for the handler before calling checkClosed ( ) in WebSocketImpl . java to prevent potential NullPointerExceptions when the handler is null
[ ds - 2058 ] add test for indexable pool task .
updated padding calculations in AppWidgetResizeFrame and Launcher classes to use default values from the app widget ' s padding to ensure consistent behavior across
added a method to hide all apps in TaskbarUIController , TaskbarAllAppsController , and updated closeOverlay method in BaseActivityInterface to improve
removed synchronization from the launch method in CrawlJob . java to improve performance by reducing contention
updated point calculations in JavaSEPort . java to use canvas coordinates instead of x and y coordinates to ensure correct positioning based on the canvas ' s
refactor notification handling in UploadService to improve code readability and maintainability by consolidating foreground notification logic
added static final test for excessive public count
hbase - 27864 increase the number of retry in hbase client to 3 ( addendum )
change log level from info to debug to reduce log verbosity and improve performance
do n ' t log file when signing key resource can not be find
added a new endpoint to retrieve tickers from the Bittrex API to enhance functionality by allowing users to access tickers information
hhh - 15464 : fix entityentry . getenumconstants ( ) to return enumconstants
improve performance of websocket session registration
updated character lists in FileUtils . java to include additional Unicode characters to ensure accurate representation of character sets in the application
added stylesheet management methods to ResourceService and ResourceHandler classes to enable handling of stylesheet resources in HTTP responses
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
updated method call from " getAddress " to " address " in X86MethodGenerator . java to ensure compatibility with pointer parameter handling
updated database type check from MariaDBDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with additional database types
simplified the condition for string comparison in ObjectStreamClass to improve code readability and maintainability
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new class SymbolNotFoundError . java to improve error handling to provide a more
added support for selecting only non - pseudo fields in BinaryResponseWriter to improve document retrieval logic based on return fields to enhance flexibility in handling document retrieval
added handling for PING case in WebSocket implementation to ensure proper processing of PING messages in WebSocket communication
updated NON _ IDENT _ ESCAPES string to include a hyphen as a valid character to ensure proper handling of hyphen characters in regex pattern matching
updated DnsResolverProvider and HostnameResolutionTest to include caching options for server selection to enhance server selection flexibility based on cache settings
added a conditional annotation to the MessagingTracing class to ensure that messaging tracing functionality is only activated when MessagingTracing class is present
updated SQL dialect handling to simplify identifier quoting to enhance code readability and maintainability
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and EditorTextActionWindow classes to ensure compatibility with the latest Sora
added handling for a closing tag in XMLLightweightParser to ensure proper status code is set for close tags
added a call to setVisibility ( GONE ) in TouchCharInput . java to ensure the input field is hidden when needed
added a null check for the current user before comparing IDs to avoid potential NullPointerException when accessing the current user
refactor JSObject member assignment logic to handle index correctly to ensure proper assignment of member values based on their indices
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to use ` DefaultRandomStringGenerator ` and
marked the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added @ Deprecated annotations to multiple Java classes to indicate that these classes will be removed in future releases
deleted the JoglDebugAdaptor . java file to remove unused code to streamline the project
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and ` TraceContextOrSamplingFlags ` classes
added PendingIntent usage in FileDownloader and FileUploader classes to ensure the notification updates the current activity state
refactor the nextOrd method to use a dedicated set method to improve code clarity and maintainability by encapsulating ordinal indexing logic
refactor DateTimeFormatter class to improve code readability and maintainability
removed unnecessary class loading for Shell . ShellFolderManager2 in desktop properties to streamline the code for better readability and maintainability
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure proper handling of null or empty principal inputs
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width used calculation in BaseWidgetSheet . java to
added calls to ` beginRender ( ) ` and ` endRender ( ) ` in ` PSurfaceJOGL . java ` to ensure proper rendering of
refactor Hashing class to improve code readability and maintainability
modified the accept method to accept a folder path as a string instead of a file to improve flexibility in handling folder names
updated UserInfoActivity to use string resources for user information display to improve localization support and maintainability of the code
added a null check for ` this . type ` before initializing ` javaType . Method ` to avoid potential ` NullPointerException ` when accessing ` type `
updated ACTIVITY _ START _ DELAY from 500 milliseconds to 800 milliseconds to allow for a longer delay before starting the activity
refactor SolrJettyTestBase to use a constant for the WEBAPP _ HOME path to improve code readability and maintainability by centralizing the
removed null checks and initialized selectedMotorSet in ThrustCurveMotorSelectionPanel . java to simplify the code and ensure selectedMotorSet is reset
added import for BufferUtil and modified buffer filling method in ByteBufferPool . java to utilize BufferUtil for improved buffer management
add rest api for alarm rule processing
corrected the spelling of " authentication . ldap . groupBase " to " authentication . ldap . groupObjectClass " and " authentication . ldap . group
http : / / issues . apache . org / jira / browse / amq - 4894 - durableontransient should delete exchange
[ hotfix ] [ test ] fix flakiness in bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to improve error handling for connection failures
refactor CompositeHandlerAdapter class to improve code readability and maintainability
refactor Quartz2Adapter class to improve code readability and maintainability
added error handling for IllegalStateException in SulongLibrary to improve robustness by preventing application crashes due to illegal state exceptions
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and bug fixes
replaced the deprecated ` getNameResolver ` method with ` newNameResolver ` in ` ConfigMappedNameResolverFactory ` and ` DiscoveryClientNameResolver `
added a check for non - empty annotations before adding them to JavacParser and introduced a new method to determine the earlier position in JavacParser to
added " com . sun . naming . internal . " to the package access checks to ensure compliance with internal package access requirements
changed the default value of strict from false to true in StaxEventItemReader . java to enable strict mode to ensure strict compliance during XML parsing
refactor OfflineSorter to use a boolean array for partition reading to improve efficiency by avoiding unnecessary exhaustion checks
refactor ActionResetingPool class to improve code readability and maintainability
added a check for non - null lightState ' s XY color mode before converting from HSB to HSBType to avoid potential NullPointerExceptions when
refactor folder creation logic to use a target cell array instead of a cell reference to improve clarity and maintainability of folder creation functionality
added import for FileDisplayActivity and removed redundant call to showLoadingDialog ( ) in FileOperationsHelper . java and OCFileListFragment . java to stream
added a null check for the uigestureFile before reading its contents to prevent potential NullPointerExceptions when the file is not available
updated method calls in FieldNamingPolicyTest to use Locale . getDefault ( ) to ensure consistent behavior across different locales
added a listener setting in XmlSuite . java to enable event listeners for XML tests
added a new property ` loadWithNewGlobal ` and refactored method handles in ` Global . java ` and ` Context . java `
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` class and updated test cases in ` TableConfigTest ` to
added ObjectPostProcessorConfiguration import in HttpSecurity . java , HeadersConfigurer . java , OAuth2LoginConfigurer . java , and ServerHttpSecurity
updated file path handling to use single quotes instead of double quotes to ensure consistency in file path formatting across different platforms
[ drools - 752 ] fix nullpointerexception in inoperator ( # 2181 )
added commit ( ) and purgeFieldCache ( DEFAULT ) methods in TestDistributedSearch . java to ensure there ' s more than one segment to prevent issues
act - 1892 : add test case for messageboundaryevent in subprocesses
add method resolution for static and interface method
http : / / issues . apache . org / jira / browse / amq - 4894 - allow to limit the number of message
refactor slot ID handling in Secmod . java to improve clarity and maintainability of the code
added alignment support to widget addition in Layout . java and modified startRenderering method to return a boolean parameter in GdxRenderer . java to enhance
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports and modified type class checks in JDK13Services . java to enhance functionality by excluding specific Java classes from processing
added a check to prevent adding a duplicate keyword to the keywordToReference map to optimize performance by avoiding redundant lookups
camel - 16400 : camel - core - optimize to reduce memory usage
lucene - 1834 : remove unused code in smartchineseanalyzer hmm pkg
add escape for telegraf metric ( # 644 )
[ java ] add support for udp port for member .
rename operatormulticast to operationmulticast to avoid confusion
increased the send timeout duration in EventBusTracerTestBase from 1ms to 100ms to allow more time for message delivery to complete successfully
added a try - finally block around the failure handling in VertxTestBase . java to ensure the latch is closed properly to improve resource management and prevent potential
fix memory leak in sessionfactoryserviceregistryimpl
danielwagnerhall : use jwt _ token from local storage instead of home page
[ pytorch ] add test case for map of tensor
added a task stack clear flag listener in RecentsView to manage task visibility during pinned stack animations to ensure the activity ' s UI reflects the
pdfbox - 4892 : add a test case to verify the optimization
camel - 7999 : camel - cxf - allow to configure property on cxf endpoint
refactor pending animation handling into a separate method to improve code readability and maintainability by reducing duplication
added debug logging for duration calculations in LauncherAnimationRunner . java to improve traceability of animation play time for debugging purposes
add a bailoutonexception option on c1x to be able to tell expected exception ( bailouts on jsr etc . ) appart from true / unexpected exception
initialized ` signup ` and ` passwd ` variables to null in ` Links . java ` and ` IdentityZoneConfigurationBootstrapTests . java ` to
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations
[ log4j2 - 1349 ] log4j2 - 1349 log4j2 - 1349 log4j2 - 1349
added NoDataContainer property to the NoDataContainer in GeoTiffReader and corresponding tests in GeoTiffReaderTest to ensure proper handling of no
improve error message when source be null
replaced ` out . toString ( ) ` with ` out . toByteArray ( ) ` in ` JdbcExecutionContextDao . java ` and removed ` System
added a CountDownLatch to handle connection state changes in TestPathChildrenCache to ensure proper synchronization to avoid potential race conditions when the client is not connected
refactor ArrayTypeHandler to ensure proper handling of null arrays to improve robustness by preventing potential NullPointerExceptions
replaced ` RegexpTunnel . java ` with ` REProgram . getRegex ( ) ` for retrieving the prefix to streamline the prefix retrieval process
updated the application selection from null to Application . class to ensure that the application is initialized with the correct class type
[ jbrules - 2054 ] fix npe on mutable global
added validation for asset name and description in AssetIssueActuator and TransactionUtil classes to ensure asset name and description are valid before processing
fix copy - paste for textfield
updated rule annotations in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSHandler to use
replaced setSeedNodes ( ) with addAll ( ) for setting seed and trust nodes in TronNetService . java to ensure all nodes are added
make test more informative
updated the ` getNextTime ` method to include a modulus parameter for better control over time increments to enhance flexibility in time calculations by allowing
refactored item click handling in ShadowAdapterView and ShadowListView classes to improve code clarity and maintainability by centralizing item click logic
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a null check for loopScope and refactored method scope handling in GraphDecoder and PEGraphDecoder classes to improve method scope management to enhance
replaced ` getSource ( ) ` with ` getSession ( ) ` in ` HttpSessionDestroyedEvent ` and added unit tests for ` HttpSessionDestroyed
added a test for updating the service name in HttpZipkinSpanReporterTest to ensure that the service name is correctly updated in the Zipkin
added logging for exclusion of classes from the JAR in JavaInMemoryFileManager and JavacToJarStepFactory to improve visibility into excluded classes and
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the generator
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for the lock to acquire successfully
added DEFAULT _ CACHE _ CAPACITY constant and updated method signatures in ConfluentSchemaRegistryDeserializerProvider and ConfluentSchemaRegistryDeserializerProvider to include
rename ` remind ` to ` checkAtStartup ` for clarity to improve code readability and maintainability
added new methods for keyStrength , valueStrength , and expiration methods in NodeGenerator . java to enhance the flexibility and usability of
hhh - 16943 : fix cascadingaction . istransitivelastable ( ) should not throw exception for non - transient
added PROTO _ PROPERTY _ NAME and SET PROTO _ PROPERTY _ NAME handling in ScriptObject . java to enable support for retrieving and setting
change default read mode from " heap " to " mmap " and enhance segment loading logging to improve memory management and provide clearer logging for segment loading
added support for ByteArrayTemplate in ArrayTemplateBuilder to enable proper handling of byte array types
added Hipchat support to SamlServiceProviderProperties and CasSamlSPHipchatConfiguration to enable integration of Hipchat as a SAML
replaced List < URL > with Set < URL > for commandRegistryUrls and added " tools . command . properties " to improve resource management to enhance
updated warning log messages to include the current context to improve log clarity for debugging purposes
camel - 14284 : camel - ftp - allow to log out a user without log in
camel - 16400 : camel - activemq - allow to configure a non - transactional jms session without a transaction manager
cloudstack - 8470 : fix vmware error message to include host name
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure the output
removed multiple deprecated constants from the UAX29URLEmailTokenizer class to clean up the codebase and improve maintainability
removed Map < Object , Object > from ScriptObject and updated related assertions in ContextTest to use ScriptObject instead of Map < Object , Object > to
refactor EventBusMetrics class to improve code readability and maintainability
[ ds - 3952 ] do n ' t use default locale for null eperson
updated JaversTransactionalDecorator to implement InitializingBean instead of Javers to enhance bean initialization and ensure schema setup after properties are set
removed null check for pgTypeName before adding it to _ pgNameToSQLType to avoid potential NullPointerException when pgTypeName is null
added server setup for handlers in ScopedHandlerTest . java to ensure proper server configuration during tests
do n ' t retry calltimeoutexception if call timeoutexception be throw during wait - notify phase
updated the condition to check for an empty password string in the RestLoginProcessingFilter to ensure that the password is not empty before proceeding with authentication
updated permission check from " empty " to " wildcard " in CommandMap . java to improve permission validation flexibility
rename ` encoding ` to ` sourceCharset ` and update related methods to improve clarity and consistency in character encoding handling
changed data types of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean . java ` and ` TerminalBridge .
updated imports and refactored simulation handling in GeneralOptimizationDialog . java to improve code clarity and maintainability by reducing redundancy
camel - 16400 : camel - core - allow to turn off context reload by default
updated logging configuration in CommonTestUtils . java for improved clarity and structure to enhance the readability and maintainability of the logging setup
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment class to improve code readability and maintainability
added a check to ensure non - marking is supported before invoking invokeSafely in RequestBody . java and created a test for non - marking
hhh - 14589 - fix npe in testng - spring - boot - integration test with spring boot
fix ( movementdebugcommands ) : restore default value from prefab
refactor ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjust its usage in the ` random ` method to improve the handling
updated GsonParser and MetricsResourceTest to improve timestamp handling and error messaging to enhance code clarity and ensure accurate error reporting for
updated parameter names in ApacheHttpClientMediaWikiApi . java for clarity and consistency to improve code readability and maintainability
replaced checkTransactionSynchStatus ( ) method calls with pulseTransactionCoordinator ( ) in AbstractSharedSessionContract . java and SessionImpl . java
[ iotdb - 4071 ] fix pipetaskcoordinatorlock deadlock ( # 7078 )
make android - all - instrumented dependency configurable
updated conditional check from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to ensure correct evaluation of ` isSilent `
added default value validation for dynamic fields in IndexSchema . java to ensure that dynamic fields cannot have default values or requirements
patch by jbellis ; review by brandonwilliams for cassandra - 1382
replaced ` ImmutableSortedSet ` with ` Iterables ` in ` PrebuiltCxxLibrary . java ` and added a test for ` includesDirs ` to
updated the initialization of ` startDate ` , ` endDate ` , ` isSKIDSensitive ` , and ` isSNSensitive ` variables in ` Adapt
refactor nosqlappender to use abstractappender . parseint instead of string . parseint
mark guiscreenevent a deprecate in 1.16
added methods to handle category addition and removal in CategoryEditSearchRecyclerViewAdapter to improve category management functionality for better user experience
# 169 - enh : add support for servercachetype to cache
refactor the initialization of ` massOverriddenBy ` and ` CGOverriddenBy ` fields in ` RocketComponent . java ` to use a
[ netbeans - 4894 ] fix memory leak in javacompilerservice
refactor Task class to accept a Supplier for better flexibility to enhance task execution by allowing a customizable work supplier
[ hotfix ] [ wan ] make wanreplicationserviceimpl thread safe
added null checks for ` tPartition ` , ` table ` , and ` SessionState ` to prevent potential ` NullPointerException ` during driver initialization
refactor ScheduledThreadPoolExecutor instantiation for improved readability and clarity to streamline code by utilizing lambda expressions for task handling and rejection
added unit tests for file deletion functionality in the Retrofit library to ensure proper handling and deletion of null or existing files
removed redundant try - catch blocks in ServerSocketAdaptor and SocketAdaptor to streamline resource closing to improve code readability and maintainability
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
added a method to add a working directory to the current working directory list to ensure the working directory is properly initialized before use
added a null check for ` cn ` in ` ItemInfo . java ` and updated insets in ` Workspace . java ` to ensure proper handling of null
changed the visibility of the ` private static String ` variable from public to private to restrict access to the ` String ` variable to enhance encapsulation
updated the HTTP type string in SimplePostTool . java from text / csv - jar to application / json - jar to ensure compatibility with the latest application
apps - 2892 add symbolic toggle to algebraitem
refactor shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper registration and deregistration of the client container to improve
updated null check for type in Linux . java to ensure proper handling of null values to avoid potential NullPointerExceptions
ensure proper resource cleanup
added search functionality to retrieve resources based on a given search string to enhance user experience by allowing dynamic search results in the browser
added visibility setting for neutral button in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button when not needed
[ ds - 3952 ] itemserviceimpl # countitems ( context , list < collection > collection , boolean includearchive ) do n '
updated SQL statement construction in DDLTask . java to include quotes around table and column names to ensure proper SQL syntax for table and column names
added error handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error logging and response management for OAuth2 exceptions
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability across the project
refactor IdentityZone endpoints integration tests to use ParameterizedTypeReference and HttpEntity for creating and updating identity zones to improve code readability and maintain
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltip text in SQLConsole . java to improve user experience by
added support for Surefire 2.22 . 0 in ActionProviderImpl . java and updated warning panels accordingly to ensure compatibility with JUnit
replaced HumanReadableException with RuntimeException for communication with external process to improve error handling by providing more specific exception details
[ hotfix ] [ flink - streaming - java ] [ doc ] move experimental annotation to flink - streaming - java
[ hotfix ] [ cepstrum ] fix typo in streamcxxstrumsource
added a check to prevent index out of bounds when accessing items in List . java to ensure safe access to prevent potential ArrayIndexOutOfBoundsException
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct handling of parentheses in expressions
added a confirmation option for the " plots . debug paste " command in DebugPaste . java to enhance user control over command execution
( chore ) camel - jersey : fix checkstyle violation
simonstewart : do n ' t focus the mathquill ggb element if it ' s open
replaced ` AbstractDescriptionArg ` with ` GoBinaryDescriptionArg ` and updated related imports in ` GoBinaryDescription . java ` to align with
added null checks for application . env and logback . env in Jooby . java to enhance configuration handling to improve robustness by avoiding
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple classes to standardize retry listener implementation across the codebase
fix : report whole count with decimal ( # 498 )
refactor Contribution class to initialize email and author separately to improve code readability and maintainability by reducing duplication
refactor JUnitFormatter to improve string formatting to enhance readability and maintainability of the code
updated the handling of the " elements " field to ensure compatibility with different LinkedList implementations
updated exception messages in StaxEventItemReader and StaxEventItemReaderTests to include the resource URL to improve error reporting by providing more context about
* : add test for multi - target render target to test multi - render
added null check for currentProfile before retrieving the client to avoid potential NullPointerException when currentProfile is null
use newelement instead of target to avoid npe
added BigInteger and InvalidAlgorithmParameterException imports in KeyStoreManager . java to enhance cryptographic functionality by incorporating additional cryptographic specifications
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
act - 545 : set engine version to actiti 5
updated resource property names from " class , file " to " resource . loaders " and " resource . loader . class " and " resource . loader .
do n ' t call iscurrentthread if it ' s already attach to a thread
added null check for map before adding values to retArray in GenericUDFMapValues . java and created a new TestGenericUDFMapValues .
rename ` ` interceptors ' ' to ` ` handlerinterceptors ' ' in test
add option to turn on oil spouts by default
added a clean - me file check and associated logging in ImportContext . java and JobQueue . java to ensure the file is created if it does not
improve error message when memoryrealm fail to start
removed unused imports in CRLDistributionPointRevocationCheckerTests . java to improve code clarity and maintainability
updated constant values in ZipConstants . java and added import statement in ZipConstants64 . java to ensure compatibility with new zip constants and enhance functionality
refactor ` newFileSystem ` method to improve file existence checks and error handling to enhance robustness by ensuring only valid file paths are processed
updated the layout of the condition panel in IfControllerPanel to use a horizontalGlue for better alignment to improve the visual spacing of the condition panel
fix flakiness in unit test
added @ SerializedName annotations to ServiceOsSpecific class to improve JSON serialization and deserialization of service - related data
fix : delete database when delete a book
updated multiple Java files to improve code organization and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5674 : fix
shutdown admin console plugin when start
refactor WebSocketHandler registration by removing unregistering handlers to simplify the code structure to improve readability and maintainability by eliminating unnecessary synchronization
added configuration properties for device ID transformation and table logging to enhance flexibility in configuring device identification settings
updated the number of documents per type and added a new class ` DelayingSearchComponent ` in ` ExitableDirectoryReaderTest . java `
updated the condition for verifying access error in TestSignatureInfo . java to correctly check for null access errors
script . createp2pkhoutputscript ( ) should use witnessscript instead of scriptcode
updated the regex pattern for fieldtype in IndexSchema . java to allow for more flexible matching of field types
added a null check for valueCompleter in the Completers class and created a new OptionCompleterTest class to ensure proper handling of null completers
fix s3utils . listobjects ( ) to return a list of object
change data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes from ` BatchIndexedConsensusRequest ` to ` int
refactor FtpHelper to streamline file upload handling to improve code readability and maintainability by reducing duplication
added alpha transparency for the reply button in TweetFragment . java to improve visual feedback by adjusting button transparency
updated the expected timestamp in AccessLogSupportTest to reflect the correct request time for the access log context
marycachetest : use temp directory for test
refactor the handling of subscribers in SettingImpl to simplify the logic to improve readability and maintainability of the code
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to throw an exception if the marshaller cannot be obtained to improve clarity and
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of stack traces
added a condition to check if the asset directory exists in dev mode and modified AssetsController to serve static files to ensure that the asset directory
[ hotfix ] [ state - backends ] add rocksdbkeyedstatebackend . setoptions parameter to rocksdbkeyedstatebackend
updated the DEFAULT _ FORMAT string from " value - tag - index " to " value - index " in CoreLabel . java to standardize the format
do n ' t set instruction hint for dijkstrabi
change default value of secp256k1 and altbn128 pairingprecompiled contract to true
rename ` DucesSandboxTest ` to ` SandboxTest ` across multiple files to improve clarity and consistency in naming conventions
camel - 16400 : camel - cxf - do not log exception to debug log level
change the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from other packages
updated the query to include additional parameters for the count function to enhance the accuracy of the count function results
improve error message when project . basedir be miss
refactor Style class to improve code readability and maintainability
added zoom handling for the back button in ShareActivity to improve user experience by enabling zoom functionality
added a check to skip processing for deprecated fields in Json . java to improve performance by avoiding unnecessary processing of deprecated fields
added fade - in and fade - out functionality to the launcher to enhance user experience by providing a smoother transition effect
[ hotfix ] fix checkstyle violation in hadoop module
added Progressable parameter to multiple writer methods across multiple classes to enhance progress tracking during file operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
update panel order and colors when remove a contribution
rename templateadapter to hypervisortemplateadapter so that it be consistent with other template adapter
added a check to retrieve the user . dir if it is empty in RegularFileObject . java to ensure the application uses the correct directory for file operations
defaultaudiosink : if no sample rate specify , use 48000
log4j2 - 1349 refactor mapfilter to use a dedicated method
refactor VerificationInOrderWithCallsTest class to improve code readability and maintainability
updated the method call from ` setFromAxis ( axis . x , axis . y , axis . z , axis . x ) ` to ` set
change COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to improve clarity and consistency in naming conventions
http : / / issues . apache . org / jira / browse / amq - 2894 - add test case for listener
do n ' t generate union / intersection documentation if there be no type
replaced the usage of ` SUPPORT _ ONE _ HANDED _ MODE ` with a boolean variable ` mIsOneHandedModeSupported ` for clarity
added onDetachedFromWindow method to AppsCustomizePagedView to ensure proper resource cleanup when the view is detached
added dictionary resource parameter to MorfologikAnalyzer and its usage in MorfologikFilter to enhance filtering capabilities by allowing
replaced count variable with thrown variable in ResultSetTest . java to simplify exception handling logic
updated the initialization message to use an empty string instead of " debug " to improve clarity in the initialization message for better debugging output
refactor ` preventedByLocking ` and ` preventedByMVCC ` variables to use ` AtomicBoolean ` instead of ` AtomicReference
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by centralizing tooltip text logic
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to start up
deviantartripper now pass in a username and password to deviantart
replaced KNOWN _ GOOGLE _ SIGNATURE _ SH1 with GOOGLE _ PLATFORM _ KEY and GOOGLE _ PACKAGE
fix npe in importdirsolveallturtletest
added a method to notify window state changes in WWindowPeer to improve event handling for window state changes
added emailDescription to templateData in EntityGroupKeyContentFormatter and updated detection description in TestEntityGroupKeyEmailContentFormatter to enhance email content formatting
updated return statement to use data . get ( sel ) instead of remove ( sel ) to ensure the correct data structure is used for element removal
updated language code retrieval logic in Locale . java and LocaleTest . java to handle cases with fewer than three characters to ensure correct language code is returned for
refactor ChangeLogParser instantiation to use a dedicated method to improve code readability and maintainability
added a check to return early if screen pinning is active to prevent further processing when screen pinning is active
added methods to display a blank text when no chart data is available to enhance user experience by providing context for missing chart data
added synchronized check for headWritten in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety when accessing shared resources
refactor chunking logic into a separate method ` chunkHandler ` to improve code readability and maintainability by reducing duplication
added " : scheme " and " : scheme " headers to Http2 test cases to ensure proper handling and representation of HTTP scheme in tests
fixed - localcachedmap . getlocalcache ( ) method do n ' t respect storemode . localcache
camel - jpa : fix npe when component be null
move jumpSpeed assignment to correct variable name
added a null check for reparsedFunction in the syntax extensions condition to ensure proper handling of syntax extensions when reparsedFunction is null
updated import statements and refactored error handling in BitstampPusherService . java to improve code clarity and enhance error logging consistency
added deprecated methods for handling old upload segment URIs in FileUploadDownloadClient to improve code maintainability and prepare for future enhancements
replaced ` findOne ( ) ` with ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to enhance query flex
camel - 16400 : camel - juel - allow to filter out header that do not match the expression
added a bound check for alpha in RecentsView . java to ensure alpha is within valid range to prevent potential errors in alpha calculations
updated the formatting of the import - package attribute in ManifestReversion . java to ensure consistent spacing to improve readability and maintainability of the code
refactor DataSyncConfiguration class to improve code readability and maintainability
added import for JavaSnippetRepository and initialized JavaSnippetRepository to facilitate snippet repository functionality
updated loop structure in StarTreeRecordStoreCircularBufferImpl to improve readability and maintainability of the code
danielwagnerhall : update chromedriver service to point to googleapis . com instead of http
( chore ) camel - pg - event : fix integration test
updated import statements from ` sun . syndication . feed ` to ` rometools . rome . feed ` in ` FeedParser . java
added Content - Length header to TransferCompletionHandler and updated NettyAsyncHttpProvider to use FluentCaseInsensitiveStringsMap for header retrieval to enhance header management
refactor Dialog class to improve code readability and maintainability
removed the constructor of EnhancedRuntimeException to simplify the exception handling logic
improve socketappendertest to reduce flakiness
( chore ) camel - core : fix checkstyle violation
updated method signatures in ByteArray . java for improved exception handling to enhance code clarity and ensure proper exception management
added input proxy functionality in RecentsAnimationWrapper . java to manage touch events to ensure proper handling of down motion events
camel - 6770 : camel - restlet - allow to run test on ci server
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method and its usage to simplify the method signature by removing unnecessary parameters
move module - info . java and module - info . java to com . hazelcast . test . modulepath
added source directory information to JavaCompilerService and JavaServerConfiguration to enhance configuration clarity by including source directory details
removed the menu option for opening a web page in TweetPager to streamline the user experience by eliminating unnecessary options
renamed ` nodeIsAncestorOf ` to ` nodeIsNotAncestorOfItself ` and updated related assertions to improve clarity and consistency in test method
fix y - coordinate calculation in worldeditplayer .
updated selfCheckDataTypes method to include PathNotExistException to improve error handling for missing data types
updated formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ runtime ] remove unused mailboxexecutor from abstractstreamoperatorfactory
hbase - 25809 add test for settablestateinmeta ( ) in meta ( addendum )
replaced ` meter . getId ( ) ` with ` Meter . getId ( ) ` in ` GatewayMetricFilterTests . java ` to improve clarity
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure the correct class name is
[ drools - 7 ] use lasttimedata instead of remoteitems in kiewatcher . delete ( ) ( # 349 )
updated calculation of allAppsCellWidthPx to include allAppsCellPaddingPx to improve layout consistency by accounting for padding
[ hotfix ] [ kinesis - connector - kinesis - connector - kinesis - connector - kinesis - connector - kinesis - connector -
updated method calls to use ` this . doc ( ) ` instead of ` doc ( ) ` for better clarity to improve code readability and maintain
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for multi - phrase enumeration tests
modified the ` close ` method in ` SharedSessionContract ` and ` SessionDelegatorBaseImpl ` to return ` void ` instead of ` Connection ` and
refactor GetLocations class to improve code readability and maintainability
updated exception handling logic in SchemaValidatorTask . java to check for null exceptions before printing stack traces to improve error handling robustness by avoiding unnecessary stack
replaced ` UncheckedIOException ` with ` ignore ` exception handling in the ` catch ` block to simplify error handling by avoiding unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and libraries
ruby flavor : use charsequence instead of string
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
no - jira - remove the usecaches flag from nio2endpoint
refactor ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` for database read operations to enhance flexibility
[ # 7711 ] instructorfeedbackresultspageuitest : fix test failure ( # 7712 )
updated the ` useEncodedQualifierListOptimization ` method to include a ` scan ` parameter in the ` useEncodedQualifierListOptimization ` method to enhance
removed ` public ` access modifier from several methods in ` ApprovalStore ` , ` ApprovalControllerService ` , and ` Ap
added a new boolean variable ` mStartedDownload ` and a delayed notification for the download process in ` FileDownloader . java ` to ensure the download process
updated method calls from ` getOpenView ` to ` getAnyView ` in ` AbstractFloatingView ` and ` TaskbarDragLayerController ` to
updated project version from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest release and ensure accurate
replaced ` yield ( ) ` with ` Thread . sleep ( ) ` in ` SyncThread . java ` to ensure proper synchronization of thread execution
refactor GsonBuilder class to improve code readability and maintainability
added a null check for circleCenters before adding it to fixedPoints to avoid potential NullPointerExceptions when circleCenters is not initialized
make espressohome configurable in graalvm .
doc : fix javadoc typo ( # 2760 )
changed the ` deleteSessionAction ` class to be ` final ` and modified session management logic to enhance immutability of ` deleteSession ` and
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " in the InvalidDocumentStoreApi
updated the initialization of ` resultList ` and ` SortedIntDocSet ` in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and
added a file parameter to the triggerMediaScan method to enhance media scanning functionality by associating it with a specific file instance
removed conditional printing of test results based on verbosity in TestRunning . java to simplify test result handling and improve code clarity
added setCustomGcode1 , setCustomGcode2 , setCustomGcode3 , setCustomGcode4 , and setCustomGcode
camel - 16400 : camel - jaxb - use a bufferedwriter instead of a standard bufferedwriter to avoid oome
refactor JsonElement class to improve code readability and maintainability
added SolrTestCaseJ4 import and removed specific exception handling for " unset . sys . property " in TestBadConfig . java to improve test coverage by
added a method to remove fragment and action bar in GpsMainActivity to streamline fragment management and improve user experience
corrected the spelling of " ( " to " ) " in the list of spanish tokens to ensure accurate tokenization of spansish text
replaced ` Range . Byte ` with ` Range . Byte ` in multiple classes to ensure compatibility with byte range handling in the media protocol
updated G - code file paths and added new test cases in VisualizerCanvas . java , GcodeViewParse . java , and Gcode
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwardsCompatibility . java
updated test assertions in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve clarity and consistency to enhance test readability
added a check to close the exchange client if the query state is done to ensure proper resource management and prevent potential memory leaks
use context . getfilename ( ) instead of context . getfilename ( ) in integrationcheck
removed unused import of SolrClient in ChaosMonkey . java to clean up the code and improve readability
fix nullpointerexception in configurationActivator
removed redundant line breaks in NestedRepositoryTreePanel . java to improve code readability and maintainability
changed constructor visibility from package - private to public in ExtensionTypeHeader to allow instantiation of ExtensionTypeHeader from other classes
pdfbox - 4892 : throw ioexception instead of npe
camel - prometheus : make pushonshutdown option configurable
added error handling for trigger callbacks in ReactiveStateMachineExecutor to improve robustness by properly managing trigger errors during event processing
added a test to verify the behavior when multiple Python executables are set on the same path in BuckConfigTest . java to ensure that the Python
added a default button to the root pane of the initial account registration frame to enhance user experience by allowing users to sign in from their account
added a new configuration option for semi - joins in Hive to optimize map joins by using a semi - join optimization to improve performance during map joins
updated error messages in RegistrationRestRepository to include the exception details to improve error reporting for better debugging and traceability
move reflectionutils to util instead of util
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the ' center ' variable from Circle , Ellipse , Polygon , and Rectangle classes to streamline code by eliminating unnecessary variable declarations
chore : fix checkstyle violation in registerandprocessbundleoperation
updated SslContextFactory class implementation to improve security handling during SSL operations
[ hotfix ] [ test ] use default max expectations
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to provide clearer error handling for access
[ 3.0 ] fix context class loader in referenceconfig . ( # 9809 )
added a parameter ` copyRowHeight ` to the ` shiftRows ` method in ` HSSFSheet ` to control row height adjustments to enhance
updated method names from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to improve clarity and
updated grid translation handling in TaskViewUtils , TaskViewSimulator , and RecentsView classes to streamline grid translation logic and improve code
refactor assertions methods in Assertions . java to improve code readability and maintainability
added null checks for ` currentDateTimeFunction ` in multiple database - related classes to enhance robustness by preventing potential NullPointerExceptions
added a method ` anonymousPath ` to handle anonymous file paths in ` IOUtils ` and created corresponding tests in ` Log4jUtils `
updated the ` call ` method signature and added content description handling in ` DigitalWellBeingToast . java ` and ` TaskView . java ` to
[ java ] do n ' t wait for meta server connection when timeout be 0 .
refactor LineNumberTagAggregator and TestDominance classes to improve code organization to enhance maintainability and readability
return the default conversion for the state object ( # 3473 )
added Hibernate Integrator integration in BidirectionalOneToOneNPlusOneTest . java and implemented a new test for fetching Post DTO
added a call to remove extra empty screen in Launcher and updated startSearchPageIndex initialization in LauncherModel to ensure proper handling of workspace screens
updated the initialization of ` baseDerivedRefs ` to use ` other . baseDerivedRefs ` and added a null check for ` value ` in ` Indexed
updated string concatenation syntax in GoogleLineChart and GooglePieChart to ensure proper formatting of string values in chart representations
modify the batch waiting logic to improve handling of interruptions during waiting to ensure more robust processing and clearer logging of interrupted waits
added position management functionality in WALPrettyPrinter to enhance the WALPrettyPrinter to allow users to navigate to specific positions in the table
fix testnettytransceiver when fail to connect
sort the list of log events before generating a report to ensure that the generated report is in the correct order based on start time
added a test for CSV line description with escaped quote in CSVFileLoggerTest to ensure correct parsing of CSV lines containing double quotes to validate the functionality of
add a few more test for the chinese test
do n ' t send jids that be not a jids that be a jids that be not a jids that be a jids that
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary dependencies
updated configuration settings in Fetcher2 . java to use protocol constants instead of hardcoded values to improve code readability and maintainability by using defined constants
added a condition to exclude " dolbyvision " from the conditional check in FFMpegVideo . java and removed print statements in MediaInfoParser
fix typo in asttests
fix ( worldborder ) : do n ' t set diameter when percentage be less than 1
hbase - 25809 addendum add getwalgroupreplicationstatus ( ) method to hbase - master ( addendum ) to
ggb - 258 : remove the caller from the login operation if it ' s open
updated RoutingTableTest to use generateInstanceConfigs for instance configuration generation to improve code readability and maintainability by reducing redundancy
changed the access modifier of FieldAttributes from package - private to public to allow access to FieldAttributes from other packages
add unit test for maven project with missing version
simplified the conditional check for protocol handling in PropertyMap . java to improve code readability and maintainability
refactor controller ID retrieval to use a stream - based approach to improve code readability and maintainability
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management to prevent potential memory leaks
removed conditional check for refresh token generation to simplify the prompt prompt handling logic
removed debug output from Http2SolrClient to improve code cleanliness and reduce unnecessary console output
refactor BaggagePropagation to use NoopGetter for null propagation to improve code readability and maintainability by encapsulating the propagation logic
refactor ConditionalOnEnabledResourceChain class to improve code readability and maintainability
added a check to ensure treeRoot is not empty before proceeding to avoid potential errors when treeRoot is empty
replaced ` filteredStream ` with ` unfilteredStream ` in ` SequenceInputStream ` to ensure the correct stream is used for processing
updated logging statements in FacebookImpl . java to include " CN1 " prefix and improved intent result listener handling to enhance logging clarity and ensure
updated return statements in ShadowICU and ShadowICUTest to use skeleton instead of a hardcoded string to improve flexibility and maintainability of date formatting
removed the KeyguardManager dependency from TouchInteractionService to simplify the code by eliminating unnecessary dependencies
cloudstack - 3971 : do n ' t set default disk offering id when volume be delete
replaced FileChannel with AsynchronousFileChannel in UtowBodyHandler . java to improve asynchronous file handling capabilities
refactor SigInt and SigIntTest classes to remove unnecessary try - catch blocks to improve code readability and maintainability
mow - 161 remove updatebyboundingboxresize ( ) from drawtext
change return value from - 1 to 0 in Asset . java to ensure correct return value for asset processing
refactor computeBenchmark to use a customizable valueLoader and mappingFunction to improve code readability and maintainability by reducing redundancy
added a refresh listener to the UploadListFragment to notify the adapter when the fragment refreshes
use optional . ofpath instead of file . tofile in bibdatabasecontext
replaced instances of ` ParticleEmitter . items [ i ] ` with ` emitters [ i ] ` in ` ParticleEffect . java ` to
refactor Tomcat to use findChildren ( ) instead of getService ( ) for service retrieval to improve code readability and maintainability by red
updated error messages in BuildRuleFactoryParams and Console classes to include " . " prefix to improve clarity and consistency in error reporting
added a conditional check to return early if the playback state is not playing before proceeding to improve performance by avoiding unnecessary processing during playback
replaced ` ServiceComponentDesiredStateEntityPK ` with ` findById ` in ` DeleteServiceTest . java ` for retrieving ` ServiceComponentDesiredStateEntity
refactor inner class field clashes handling in Java2TypeScriptTranslator and add a new InnerClassFieldClash class to improve code cl
added logging and follow redirect filters configuration options in DockerClientFactory and DockerClientProfile to enable customizable logging behavior based on client profile settings
added awtUnlock ( ) in XToolkit . java to ensure thread safety when accessing shared resources
updated NationalizedScalarQueryTest to use SQLServer2008Dialect instead of DB2 dialect to ensure compatibility with SQL Server ' s specific SQL Server dialect
pdfbox - 4892 : avoid resource leak , a suggest by valerybokov
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` to verify the behavior of ` NO _ MORE _ ORDS ` in ` SingletonSortedSetDoc
updated error messages in CGIHandler . java and added JavaVM callback handler in JavaVM . java to improve clarity of error handling and ensure proper thread
added support for additional newline characters in the LineReaderImpl class to enhance input handling for multi - line comments
replaced List < String > with Set < String > for hashCodes in DistBuildService and ServerContentsProvider to improve uniqueness of hashCodes
bugfix : do n ' t crash on empty mesh
improve error message for verification order
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to create a new parent folder for the menu
truffle : remove unused import of node
refactor JsonObject class to improve code readability and maintainability
added a condition to check if ` _ maxIdleTime ` is greater than or equal to its maximum idle time in ` SelectChannelEndPoint . java `
fix farmlandblock . cansustainplant ( ) not work correctly . close # 3971
added SALT _ BUCKETS parameter and updated SALTEDTABLE123 handling in QueryDatabaseMetaDataIT and ConnectionQueryServicesImpl to
updated date format initialization to use Locale . US to ensure consistent date formatting across different locales
no effective change - code cleanup
increased timeout duration from 1 second to 5 second in BatchMessageListenerContainerIntegrationTests from 1 second to 5 seconds to allow more time for processing time
[ economy ] add trace for economyallocationstage .
fix : add key binding for save - all ( # 1086 )
changed the initialization of ObjectMapper to use a static block to ensure consistent line separator handling across the class
updated path normalization from backslashes to forward slashes in NativeEnvironmentRepository . java to ensure compatibility across different operating systems
refactor Application handling in multiple test classes to use a dedicated Application instance to improve code organization and ensure proper resource management during tests
[ java ] remove unnecessary log validation .
chore : update gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 2
remove flaky testFuzzOptimizations test
added a private boolean variable ` reverseImage ` and updated shared preferences handling in ` CameraManager . java ` to improve code clarity and ensure consistent retrieval
refactor equality checks in multiple classes to improve code readability and maintainability
fix bug in mdmmatchlinkservicetest # replacefields ( ) .
updated test classes to use JUnit 5 annotations instead of public to improve test structure and compatibility with modern testing frameworks
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 569 : settypes
refactor TypeUtil class to improve code readability and maintainability
updated date handling in AbstractAlertNotifyHandler to use LocalDateTime for better time zone support
added a new method ` maybeCreateAbstractMethodErrorThrower ` to handle creation of ` AbstractMethodError ` in ` MethodHandleResolver ` to improve error
camel - 16400 : camel - simple - should check if the expression start with a period or not .
remove unnecessary empty check for toExplore in AbstractParser . java to streamline code logic to enhance readability and maintainability
camel - 16400 : camel - jclouds - use ioutils instead of ioutils to reduce memory footprint
camel - 16400 : camel - consul - remove osgi bundle that be not support yet
added a check for ACC _ STRICT access flag on default methods in Check . java and created a new test class CheckACC _ STRICT
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` to handle multiple file extensions for C++ , C++ - related libraries to provide a structured way to
refactor ThreadLocalDateFormat to use ThreadLocal for cloning to simplify code and improve performance by eliminating unnecessary object creation
updated VMDeprecatedOptions to disable FastTLABRefill , DeferPollingPageLoopCount , and UnsafepointSpinBeforeYield to improve performance by red
added a display name property to the ` Pac4jBaseClientProperties ` and updated ` DelegatedClientIdentityProviderConfiguration ` to use it
replaced RuntimeException with EarlyTerminationException in multiple operator classes to handle early termination exceptions to improve error handling and clarity in exception management
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability
improve handling of closed connection in http binding
add null check for parent in capability dispatcher to avoid npe
wallettool : remove keycrypterexception from catch block
[ hotfix ] deprecate asynccompletionservice and submitorderedcompletionservice
modified the initialization of ` len ` in ` HyphenationTree . java ` to use ` origLen ` instead of ` len ` to ensure correct
added a delay of 200 milliseconds in the IQRegisterHandler to ensure that the registration process completes within a specified time frame
refactor so that it would well reflect our new package structure .
updated the error message for PARAMETER _ NEEDS _ TO _ BE _ NAMED to include the javac flag for named parameters to ensure clarity
added a new variable ` providersChanged ` and initialized it to false to track changes in provider configuration
added a method to quote identifier tokens in the token rewrite stream to ensure proper handling of reserved identifiers in the semantic analysis
modified the null check for the ' name ' entry in FileSystemFontProvider to handle cases where ' name ' is missing to ensure that the application does not
updated type casting for AnalysisSPILoader in SolrResourceLoader . java to improve type safety and eliminate unchecked cast warnings
updated boundary check in Window . java to account for parent references to ensure proper handling of child windows in the collision detection logic
added a null check for appManifest before accessing its target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to improve error handling and serialization to enhance code clarity and ensure proper serialization behavior
added a userName field and its getter / setter methods in Driver , HiveSemanticAnalyzerHookContext , and SQLOperation classes to allow dynamic assignment of
camel - 14284 : camel - xslt - spring - xml - dsl - allow to configure a transformer to be able to load xml
added HadoopShim support to FragmentCompletionHandler and TaskRunnerCallable classes to enhance compatibility with Tez ' s Hadoop shim configuration
updated method calls in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to remove redundant variable declarations to improve code clarity and
fix npe in coyoteadapter when context be null
( chore ) camel - thirdeye - thirdeye - thirdeye - thirdeye - thirdeye
refactor VM version checks to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java . vm . version " )
replaced ` MeterStatisticsManager . statisticsOperationMap ` with ` statisticsModelMap ` in ` DefaultLogPublisher ` and ` MeterDetail
updated logback configuration handling in FrameworkLauncherExtended . java to improve clarity and maintainability of logback setup
added @ NotNull annotation to several methods in ` CipherExecutor ` , ` CookieValueManager ` , and ` DefaultCasCookieValueManager `
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` ExecutableMacroExpander ` and ` ShellStep
refactor ` waitUntilReadyAndSucceed ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource management to
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
removed redundant closing braces in RelativeDateFormatTests . java to improve code readability and maintainability
added functionality to generate shield addresses in RpcApiService to enable users to generate shield addresses dynamically
changed return types of ` readConsoleInput ` and ` readConsoleInput ` methods from ` byte [ 0 ] ` to ` String ` across multiple classes
updated regex patterns in TestStabilityRule . java to improve pattern matching accuracy
added handling for multi - valued fields in DefaultSolrHighlighter to ensure correct fragment matching behavior for multi - valued fields in the highlighting process
updated the ` tryToLogin ` method to accept ` username , password ` and ` username / password ` as parameters in the ` tryToLogin `
updated HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to streamline entity handling and improve entity management to enhance code
( chore ) camel - jms : fix checkstyle issue
removed the wrapCollection parameter from the update method call to simplify the method signature for better readability
added error handling for IllegalCurrencyException in BTCEAdapters . java to improve robustness by ignoring unknown currency inputs gracefully
http : / / issues . apache . org / jira / browse / amq - 4892 - do n ' t add durable
pdfbox - 4892 : set default value of averagechartolerance and spacingtolerance to 0.3 f
updated ` startController ` method to accept a ` useTenantIsolation ` parameter and added tenant isolation configuration in ` ControllerTest . java ` to
simplified the return statement in HasSettings . java to improve code readability and reduce unnecessary complexity
added a check for non - empty ` attrs ` before checking its length to ensure that ` attrs ` is not null to avoid potential ` NullPointerException `
added project configuration fields and methods to AbstractIjProjectConfig , IjProjectBuckConfig , and IjProject to enhance project configuration
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and accuracy of
added a test for resolving effective ACLs for Scott with user details in GrantedAuthorityEffectiveAclsResolverTests to enhance test coverage for
fix classnotfoundexception when resolve java lang object
added a new constant for the number of buttons and updated the method to return it based on its value of MAX _ BUTTONS _ SUPPORT to improve flex
updated import statement to reference the correct test library to ensure compatibility with the latest testing framework
added a new ` MessagePackFactory ` class and modified ` newUnpacker ` methods in ` MessagePack . java ` and ` MessagePack
add is _ cave and is _ desert tag to biome tag provider ( # 10432 )
renamed the ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout condition in ComponentGroup . java for horizontal and button UIID handling to ensure proper layout behavior based on horizontal state
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` in the condition
replaced ` touchHandler instanceof ` instanceof ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java
[ java ] : do n ' t close the commit position counter if it be already close .
# 161 - add usersite and usersiteid to demo app
improve error handling for malformed url
server : ignore storage capacity if host or pool be not in storage _ pool _ id
replaced IOContext . DEFAULT with a direct method call to close the file to simplify resource management by eliminating unnecessary input handling
updated the ` JavascriptCompiler ` class to use ` generateClass ` instead of ` beginCompile ` and ` ReflectiveOperationException ` to enhance
added synchronization to the UISettings class to ensure thread safety when accessing shared resources
added input handling for native text fields in TextField to improve user experience by preventing data loss during native text editing
[ beam - 8470 ] add retry on emulation reject concurrent transaction
replaced generic type declarations with diamond operator usage in multiple Java files to improve code readability and maintainability
updated array type checks from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure proper handling of short
updated nonce handling in OIDCAuthenticationFilter to improve clarity and consistency in nonce comparison logic
added a check for relationship type in the DCInputSet class to ensure proper handling of relationship fields in the input set
added support for server Slogan capability in FileDataStorageManager , ProviderMeta , and ToolbarActivity to enhance user experience by allowing
refactor conditional logic in DrawerActivity . java to improve readability to enhance maintainability of the code
updated the test failure message in SolrRequestParserTest . java to use JUnit ' s Assume . assumeNoException instead of failing to improve clarity
added a check to return early if there are no missing symbol events to optimize performance by avoiding unnecessary processing
fix stringhelpertest fail on oracle
added warning log for empty data provider
( chore ) camel - jbang : remove unused empty _ set / list usage
fix for freeplane 1.9 . 8 : use rich selection style
updated the parameter name from mass to restitution in setRestitution method to improve clarity and consistency in parameter naming
added a new file ` AutoFtpActivity . java ` to implement FTP testing functionality to enable automated testing of successful and failed FTP operations
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added ` getImageX ( ) ` and ` getImageY ( ) ` methods to ` ImageViewer ` , ` OnOffSwitch ` , and
added a new class ` RemoteExecutionEnabled ` and its corresponding tests to enable remote execution functionality in the build process
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading methods to use UTF - 8 encoding to ensure proper handling of character encoding during file reading operations
added assertion to verify that shadow variables are not stale in AbstractScoreDirector to ensure that the expected working score is not stale during scoring operations
updated the configuration key from " enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " in HiveConf . java to
added logging for message content handling in DatagramPacket classes to improve visibility into message content processing for debugging purposes
updated synchronization logic in SynchronizeFolderOperation and FileDisplayActivity to handle the removal of the current directory to improve user experience by informing users
added assertions to verify the presence and absence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
[ iotdb - 4894 ] [ iotdb - 4892 ] remove deprecate test for delete timeseries test ( # 7
added null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided to prevent runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` lock . notifyAll ( ) `
updated @ AllArgsConstructor to include mode = properties in @ AllArgsConstructor to ensure proper deserialization of properties during object creation
added SQL feature support for creating an index on a view in MetaDataClient to indicate that creating an index on a view is not yet supported and will
added a new ` WebSite ` class and updated ` PopulatorImplTest ` to utilize it for creating ` WebSite ` objects to
set default locale for test
add a warning log for badly download jar file
replaced ` containsString ` with ` equalToIgnoringCase ` in the assertion to improve readability and maintainability of the test code
added handling for single parameter tokens in SimpleExprGenerator to ensure proper processing of variable expressions in the analysis process
added a volatile boolean flag ` createdVertx ` and modified the conditional check for ` vertx ` to ensure ` vertx ` is only created if
updated ` writeAttributes ` method calls to use ` node ` instead of ` null ` for better clarity to improve code readability and maintainability by
updated log messages in SynchronizeFolderOperation . java and added null check for currentDir in FileDisplayActivity . java to improve log clarity and prevent
added a new boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related methods in ` CategoryREST ` and ` FeedREST `
updated resource handling in TestAnnotationConfiguration and WebAppContextTest to use MavenPaths for directory resolution to improve code maintainability and ensure consistent
added validation logic for URI and MetaData register DTOs in RegisterServerConsumerExecutor . java to ensure data integrity and prevent null pointer exceptions
updated the condition for determining playback state in GwtMusic . java to ensure that the playback state accurately reflects whether the sound is paused
added admin area permission to plot command
replaced ` ImmutableMap ` with ` HashMap ` for query options in ` ServerRequestPlanVisitor ` and ` QueryRunnerTestBase ` to enhance query
refactor path validation in ReloadableJava11ParserInputFileObject and Java8ParserInputFileObject to use getFileName ( ) instead of getPath ( ) to
refactor assertions in ResourcesTest to use variable names for emoji and text to improve code readability and maintainability
added native methods NMTWaitForDataMerge ( ) and NMTMallocWithPseudoStack ( ) to WhiteBox . java to enhance functionality for memory
[ flink - 30613 ] [ serializer ] deprecate javaEitherserializersnapshot in favor of javaEitherserializersnapshot
updated Default _ NDOTS and DEFAULT _ ROTATE _ SERVERS to use AddressResolver ' s DEFAULT _ ROTATE _ RESOLV
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplate
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML namespace references from " liquibase / parser / core / xml / xml " to " liquibase . org / xml / ns "
rename commonmimetypetypelocator to test / commonmimetypetypelocator to avoid clash
updated repository state from INIT to NOT _ REQUIRED across multiple classes to reflect a more accurate representation of the repository state in the database schema
updated the comparison control in GenerateChangeLogTask to include SchemaComparison to enhance the comparison process by incorporating additional schema comparisons
updated the import statement for TestBackwardAnAMlyFunctionUtils from JUnit to TestNG to align with the latest testing framework standards
added a new test class ` ProgressiveJPEGTest ` to test the rendering of ` ProgressiveJPEG ` using ` SpriteBatch ` to ensure
materialloader : fix a bug that cause materialloader to crash
improve error message for native - image build on window
added a null check for the text before setting its size to avoid potential null pointer exceptions when the text is empty
updated the calculation of ` readVarInt ( ) ` in ` Data . java ` to multiply it to a multiple of 1 _ 000 _ 000 _ 000
added private constructor to PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern to prevent instantiation
simplify length calculation by removing unnecessary bounds check to improve code read calculation efficiency
removed unnecessary casting in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the regex pattern in the ` componentPresetDao ` to include an optional parameter to enhance flexibility in handling CSV file names
added a duration check before announceing accessibility in TaskbarStashController and updated animation handling in FloatingIconView to ensure accessibility is only announce
updated Node initialization to use RefreshTask instead of Args to improve node management by utilizing the correct task context
pmd : do n ' t target jdk 1.3 and jdk 1.5
updated unit tests to use MockitoJUnitRunner instead of PowerMock in QuotaResponseBuilderImplTest . java to improve test reliability and
added error and output streams to TestSchemaToolCatalogOps . java to ensure proper handling of system output and error messages
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated related method signatures to enhance functionality by allowing
updated MongoQueryMethod constructor to accept RepositoryMetadata as a parameter to enhance query method functionality by associating it with repository metadata
refactor to make it easy to use a spring xml dsl
updated import statements in MetaDataEndpointImpl . java for PhoenixDatabaseMetaData to streamline dependencies and improve code clarity
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added retry logic for deadlock handling in TxnHandler . java
refactor XAxis and YAxis handling in BarChartActivity and LineChartActivity1 to improve code readability to enhance clarity and maintainability
added functionality to check for printable characters in a given string to ensure proper handling of non - printable characters on Windows systems
rename ` ` in ' ' to ` ` using ' ' for consistency
added process plugin configuration to the build request .
updated return values in ProxyConnectionManager , ServerTrafficCounter , and ServerTrafficCounter to use seconds instead of milliseconds to improve precision in time measurement for performance
chore ( regen ) : fix flaky regen test ( # 238 )
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remoteHost retrieval in AuthenticatedUser
add admin button to list of community
replaced direct instantiation of ` longCompactions ` and ` shortCompactions ` with an ` AtomicInteger ` to track the number of compaction threads to improve
updated the method of obtaining the package name in WallpaperChooser to use a resource string instead of the application ' s package name to improve resource
added a method to retrieve visible players in the plot to improve player visibility management within the plot
updated AndroidManifest , ResName , ShadowMediaMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class to improve code readability and maintainability
replaced occurrences of " com . sun . management . internal " with " com . sun . management . internal . OperatingSystemImpl " in JNIRegistration
corrected the attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added a test for expected properties in
removed unnecessary null checks for key and initialization vector in UploadFileOperation . java to simplify code and improve readability
added stability annotation to WorkProfileTest for local and postsubmit flavors to address flakiness in tests related to flakiness
added a check for bucketing version in TezCompiler . java to skip processing when bucketing version is not set
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` GwtTestWrapper
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced ` LockFreeBucket _ FinalFields _ CacheLinePadding
expose threadpool ' s pendingtasks via nodeprobe . patch by sammy yu ; review by jbellis for cassandra -
updated maxBitrate initialization to use user preferences for bitrate settings to enhance flexibility by allowing user preferences to override bitrate settings
refactor ZipkinHttpSpanExtractor and TraceFilterTests to improve span handling logic to enhance clarity and maintainability of the code by
do n ' t collect user payment account when create offer
do n ' t use reflection in dart completion contributor ( # 5088 )
added a call to setProject in LauncherUtils to ensure the project is properly initialized before use
updated JsBundle and JsBundleBuilder to include ProjectFilesystem as a parameter across multiple builder classes to enhance functionality by allowing the specification of the
updated multiple Java files related to envelope and data binding functionality to improve code organization and maintainability
fix typo in javadoc
updated VersionBuckConfig to use ImmutableSet instead of Map to improve immutability and performance of the universes collection
added a try - catch block around the shadow class binding to handle potential TypeNotPresentException to improve robustness by preventing application crashes due to missing
changed the access modifier of the validateTypes method from static to public to allow access to validate type information from other classes
fix : update gapic - generator - java with mock service generation fix ( # 10 )
added logging functionality to SimulationStatus class to facilitate debugging and monitoring of simulation status
updated the VERSION _ POSITION _ Y constant from 138 to 150 in Splash . java to improve the visual appearance of the application version
updated notification addition to run on the Event Dispatch Thread to ensure notifications are added on the Event Dispatch Thread for thread safety
updated return statement in ReturnsElementsOf . java to improve clarity and correctness of mock behavior
corrected a typo in the error message to improve clarity and accuracy of the error message
added a new test method ` testLineFileDocs ` to the ` BaseStoredFieldsFormatTestCase ` class to verify the functionality of LineFileDocs to
added a method to retrieve the version code in MainApp and updated feature item initialization in FeatureList to improve code clarity and maintainability by centralizing
camel - 16400 : camel - spring - xml - dsl - allow to use a different body type than string .
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure
added buffer ownership and attributes handling to IndexBufferObject and VertexBufferObjectWithVAO classes to improve memory management and buffer handling efficiency
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password change functionality
fix typo in jerseyclientconfiguration
int - 1894 remove unused import
updated print statements in InstanceOfPatternMatchTest . java , RemoveRedundantTypeCastTest . java , and TypeUtils . java to use a wildcard
added methods to handle empty arrays in StringDict and Table classes to improve functionality to ensure proper handling of empty arrays in data structures
deprecated the ` @ Deprecated ` annotation in ` GenericContainer ` and added a ` withCustomizer ` method in ` GenericContainerRuleTest `
updated logging statements and improved exception handling in MediaInfo . java and RendererConfigurationTest . java to enhance logging clarity and ensure proper
added SCHEMAPATTERN option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow configuration of schema pattern for database connections
return an empty byte array instead of null to avoid npe
refactor bitmap creation logic in AndroidGraphics . java to use variable width and height parameters to improve readability and maintainability to enhance code clarity
refactor Base64 class to improve code readability and maintainability
add a single context assumption for readmanaged and readmanaged .
danielwagnerhall : ignore test that pass on iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization to enhance maintainability and readability
changed the parameter type of ` resId ` from ` ResName ` to ` int ` in ` AttributeResource ` and ` PackageResourceLoader
refactor docker certificate path resolution logic to use a new method to improve clarity and maintainability of the code
fix simplereactivelastests to work on window
updated type variable handling in ` mmm Attr . java ` and added a new class ` T6450290 . java ` with a generic class `
added logging configuration to the LoggingFlags and LoggingOptions classes to allow customizable logging levels for better debugging and monitoring
added logging statements to multiple classes to improve traceability and debugging of package deletion operations
added ` allFilesOption ( ) ` method to ` FileActivity ` and ` FileDisplayActivity ` to handle file selection functionality to improve user experience by
added default methods for forEach operation with BiConsumer and matcher in MutationOperationGroup to enhance flexibility in managing mutation operations
updated the calculation of numPredictiveAppCols based on device type to ensure correct spacing for phone devices
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding for content
added a new ` RequestMatchers ` class and its corresponding test cases to enhance request matching capabilities in the security framework
mow - 169 remove temporary mode check from euclidiancontroller
updated calculations for height and width in ProgressBar to correct positioning to ensure proper vertical and horizontal alignment of the knob elements to improve the visual representation
updated JSON definition path to use external resources to improve flexibility and maintainability of JSON resource management
added final variables for extra arguments in BruteArgumentMoverHandle . java to improve code clarity and enforce immutability of extra arguments
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture state when the handler is invalidated
updated layout checks for landscape and portrait layouts in DynamicGrid . java and Workspace . java to improve layout measurement accuracy to enhance UI responsiveness
added a condition to check for " / robots . txt " in the redir check to ensure that robots . txt is not incorrectly included in
update nb - javac to use netbeans 4.0 . 1
rename ` ` continue ' ' to ` ` return ' ' in advanced game setup screen
added a check for zero in UDFOPDivide . java and created a new test class for division by zero in TestUDFOPDivide . java to ensure
reformatted code for improved readability and consistency to enhance code maintainability and clarity
updated filter configuration in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to utilize a new matcherBuilder for authentication request matchers
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper cleanup of resources to prevent memory leaks
replace ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity ` to ensure the correct thumbnail is used for processing
refactor multiple Java classes related to functionality to improve code organization and maintainability
added request timeout configuration to RaftServerConfigKeys to ensure proper timeout settings for RPC requests
updated logging level from error to debug in TsFileResourceManager . java and removed unnecessary exception handling in ResourceManagerTest . java to improve logging cl
added system properties to the MavenModuleLoader class to enhance configuration flexibility by allowing system properties to be passed
added readiness check metrics to multiple classes to track readiness checks for better monitoring and performance analysis
added model registration for animated torch .
added a null check for the writer before closing it to avoid potential NullPointerException when writer is null
added a new method ` getHiveOnTezConfFromDir ` to handle configuration loading from a specified directory to improve code maintainability and
added " Muting Users " link to the links in FeaturesActivity . java to provide users with a direct access link to the users list
added " jdk . reflect . useDirectMethodHandle " property to initializedProperties to disable direct method handle usage in reflection
hbase - 27864 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy ( # 467 )
[ hotfix ] [ yarn ] avoid npe in yarnclusterdescriptor
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getSpelling ( ) instead of getPronunciations ( ) for better
jsonutilstest : fix formatting
added " id " to the compose extra in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper handling of tweet IDs in
log a warning about underlie ring buffer data related to reliable topic
improve error message when no class be find to analyze
replaced the import of java . security . Key with java . security . PublicKey in KeyFetcher . java to ensure compatibility with the latest security standards
updated the variable ` isIncompatible ` from ` isIncompatible ` to ` true ` in ` DLNAResource . java ` to ensure the correct handling of
added AccountCreateContract parameter to createAccount method to support account creation functionality in the RpcApiService class
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 3894 - fix test failure on amq -
updated default star tree format from " ON _ HEAP " to " OFF _ HEAP " across multiple files to ensure consistent usage of the
updated title handling in FeedUpdateService to truncate the title to ensure the title does not exceed a specified length for better usability
refactor preview panel handling in JColorChooser and BasicColorChooserUI to utilize a dedicated method for setting the preview panel to improve code clarity
changed log level from info to debug for extension checking to reduce log verbosity and improve performance
add a null check for reusableBitmap before accessing its properties to avoid potential NullPointerException when reusableBitmap is null
added a method to retrieve layout parameters in FakeView . java to enable access to layout parameters for better layout management
added exception handling for closed cursors in DefaultCursor and a corresponding test in CursorSimpleTest to ensure that IllegalStateException is thrown when a cursor is already closed
pdfbox - 4892 : avoid infinite loop , a suggest by valerybokov
added @ ignore annotation to jmsclienttest to fix build
added a timestamp field with getter and setter methods to the Message class to store and manage the timestamp associated with the message
[ opengrok ] add log for exception while process error ( # 1748 )
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove legacy parameter from route resource ( fixes # 189 )
updated import statements and class visibility from ` public ` to ` assertEquals ` in multiple test classes to align with the latest JUnit 5 API conventions to ensure
refactor CSRF attribute handling into a separate method to improve code readability and maintainability by reducing duplication
add bootstrap support for lombok . launch . package shader and classfilemetadata .
jbrules - 2835 : disable numeric rule by default
added a check for debug level before logging the default value to improve performance by avoiding unnecessary logging when debug logging is disabled
added null checks for axes and buttons in Lwjgl3Controller . java and refactored controller management in Lwjgl3ControllerManager . java
updated ObjectFactory import in WeldFactory and WeldFactoryTest to align with the latest Cucumber library structure
refactor port forward saving logic to use HostDatabase for better error handling to ensure proper database context is used when saving the port forward
added a new configuration property for snapshotting data in GlobalConfiguration to allow users to enable or disable snapshotting of Liquibase snapshot data to enhance
added a null check for the file name before creating a PersistableBundle instance to avoid potential NullPointerExceptions during file operations
refactor LocationMarshaller class to improve code readability and maintainability
updated touch event handling logic in StatusBarTouchController . java and TouchInteractionService . java to improve touch responsiveness and gesture handling to enhance user
removed the VectorReader interface from VectorReader and related classes to simplify the code structure by eliminating unnecessary complexity
updated import statements from ArgumentMatchers to Matchers in multiple test files to align with the latest Mockito library structure and improve code clarity
refactor methods in AndroidInstrumentationTest and AbstractPathSourcePath to use getRelativePath ( ) instead of getRelativePathName ( ) to simplify path handling
refactor ` completeMapAndTransformRow ` and ` RecordReaderFileConfig ` methods to accept ` RecordReaderFileConfig ` instead of `
added a null check for the WithArgumentExtractor before instantiating it to avoid potential NullPointerExceptions during component instantiation
server : fix resource limit when secondary storage be unlimited
add potion shift event to inventory effect renderer . close # 3481
added a deprecated constant for the COLD _ READS _ TO _ OMIT _ KEY in SizeTieredCompactionStrategyOptions to prepare for future
added a call to close the leech object to ensure proper resource management and prevent memory leaks
[ issue # 5979 ] fix popmessageprocessor metric for retry ( # 5979 )
refactor KeyboardAddonSettingsFragment class to improve code readability and maintainability
added JUnit @ Ignore annotation to ShadowDateUtilsTest to temporarily disable tests that are not ready for execution
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve
added session upgrade request handling and corresponding tests in JettyTrackingSocket and JettyTrackingSocket to ensure proper session management during WebSocket upgrades
added a timeout handling mechanism in AndroidImplementation to support a configurable connection timeout to improve connection stability by allowing dynamic adjustment of connection timeouts
refactor ` getUserAccessPermissions ` methods to return a list of ` RegistrantAccessPermission ` objects instead of throwing ` IOException ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest ` for parsing and deparsing SQL with a quoted cast expression to ensure correct
added a conditional check for root users in the assertion to ensure that the file is writable and executable based on the operating system to enhance security by ensuring
refactor FixedThreadExecutor to use dynamic properties for thread group and thread per group to enhance flexibility in managing executor configurations based on
added null check for field before checking its case sensitivity to avoid potential NullPointerException when field is null
replaced ` CasEventListener ` with ` InitializingBean ` across multiple configuration classes to standardize event listener implementation across the application
refactor animation end handling into a separate method to improve code readability and maintainability by encapsulating end animation logic
added a close method to DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` containing a native method ` getSystemProperty ` for retrieving system properties to facilitate the retrieval of
refactor bean definition injection to use concrete class metadata instead of annotation
* cameranode and lightnode now use jme3 importer and jme3 exporter .
refactor PopupNotificationPanel to use a parent window for popup window disposal to improve resource management and prevent potential memory leaks
replace instances of ` NoInstanceException ` with ` InferenceException ` and update method signatures accordingly to improve clarity and consistency in exception handling
added a method to retrieve the feature value to provide access to the featureValue variable for external use
changed the parameter type of ` after ` method from ` int ` to ` long ` in ` VerificationAfterDelay ` from ` int ` to ` long
added OnBuild and ExecutionDriver fields to ContainerConfig and Info classes to support configuration of build and execution drivers
updated the icon setting logic in Toolbar . java and FlowLayout . java to differentiate between RTL and LTR layouts to improve the visual consistency and
add option to turn off position increments by default
http : / / code . google . com / p / mybatis / issues / detail ? id = 552 : add test case to test
set mTryShareAgain to false in FileActivity . java to ensure proper handling of share attempts
added support for terminal name detection in JansiNativePty . java to enhance compatibility with different terminal versions
refactor BandwidthProcessor to use a variable for serialized bytesSize based on dynamic properties to improve code readability and maintainability by reducing
replaced calls to ` awaitility . await ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
updated API endpoint URLs in EaseeBindingConstants . java to reflect the new API structure to enhance clarity and maintainability of the
increased sleep duration from 2 second to 3 seconds in KafkaIOIT . java to allow more time for the KafkaIOIT to complete its
replaced ` allOf ` with ` is ` for better readability in ` SearchResultMatcher . java ` to enhance code clarity to improve maintain
added SSL trust management functionality in OkHttp . java to enhance security by allowing client and server certificate trust validation
replaced ` mA11yLongClickListener ` with ` buttonView ` in ` NavbarButtonsViewController ` and ` TaskbarNavButtonController `
added a new file ` HyperlinkFormula . java ` that implements functionality for handling hyperlink formulas in Excel sheets to enable users to
added null checks for output and error paths in ShellStep . java to ensure safe handling of null values to prevent potential NullPointerExceptions
increase test timeout for asyncappendertest to reduce flakiness
refactor ` escapeDatabaseObject ` methods to use ` objectName ` instead of ` tableName ` for improved clarity to enhance code read
added a new boolean field ` inputChanged ` and modified the input validation logic in ` MaterialRenameDialog . java ` to ensure the input field reflects
added state change functionality to ShadowDisplay to enable state management for other instances of the same display in ShadowDisplayTest to ensure proper handling of display state changes
[ geos - 10641 ] add directinvocationservice interface to support osgi osgi dsl
added support for key _ x and key _ y in GlobalKeyDispatcherW . java to enhance keyboard input handling for better user interaction
updated SQL query conditions for PostgreSQL dependencies to ensure compatibility with PostgreSQL versions below 9.0 and above
added nullability annotation to the message variable to improve code clarity by indicating that the message variable may be null
updated the method signature of ` getPathsFromResource ` to return a ` URI ` instead of a ` String ` for better type safety to enhance
added support for Jenkins nodes in the remote collector configuration to enhance monitoring capabilities for Jenkins applications
refactor attribute resolution in HeadersBeanDefinitionParser to use a dedicated method to improve code readability and maintainability by centralizing attribute resolution logic
updated error handling for malformed edits in ProtobufLogReader . java to improve clarity and maintainability of log file seeking logic to ensure proper logging
added a shutdown method to the NacosRegistry class to ensure proper resource management and prevent potential memory leaks
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator and GoAwayBodyParser to use a dedicated method to improve code readability and maintainability by
updated AuditEvent initialization and added assertions in AuditEventTests to ensure proper handling of unknown JSON data types and improve test coverage
updated return statements in Interpolation . java to use ` 0 ` instead of ` a ` for floating - point calculations to improve precision in floating - point
fix ( world / worldedit ) : fix default path for world / worldedit
refactor variable name for clarity to improve code readability and maintainability
lucene - 8889 : add test for accessors of range in pointrangequery ( # 748 )
hbase - 27809 fix testhfilecleaner to work on window
added a check to ensure the file name does not match the name of the file transfer request to improve user experience by displaying the correct file label based on
do n ' t throw jce in jedisclustercommand # command ( # 2411 )
[ hotfix ] [ table - planner - blink ] make rowtimeminibatchassgineroperator always run in parallel
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap ` and added
refactor QMap - related benchmarks to use HashMap for improved performance and readability to optimize memory usage and enhance test coverage for
added a new HashMap for G _ SCH _ B in HybridPlotWorld . java to store G _ SCH _ B to facilitate
added a check for empty fields and improved identifier handling in GroovyEngine . java to enhance robustness by ensuring only valid identifiers are processed
do n ' t draw drawables on independent number
added TCP keepalive configuration options to HiveServer to enhance server connection management for improved reliability
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in method naming
no effective change - code cleanup
refactor RealtimeSegmentRelocator to use lambda expressions for periodic relocator to improve code readability and reduce boilerplate code
cloudstack - 2892 : do n ' t start vpc if vpc be already start
updated the calculation of windowAlpha in WindowTransformSwipeHandler . java to use ` Math . min ` instead of ` Math . min ` for determining the
updated fatal message in SecurityNamespaceHandler to reflect compatibility with Spring Security 4.0 schema version
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] make field final in disruptorprovider
added a new UDF class ` TestConfigureUDF ` and updated ` ExprNodeGenericFuncEvaluator ` and ` ExprNodeGenericFuncEvaluator ` to
updated regex matching in LogMessageWaitStrategy and enhanced the LogMessageWaitStrategyTest with parameterized tests to improve regex functionality and test coverage for different message patterns
replaced individual logger calls with direct logger calls to improve code readability and reduce redundancy
replaced instances of ` updatePurgedShardNodes ` and ` updatePurgedShards ` with ` deletePurgedShardNodes ` and ` delete
added support for a new language version " 17 - preview " in JavaLanguageModule and its corresponding tests to enhance the language features and ensure compatibility with
fileappenderresiliencetest : wait for compression job to finish
[ hotfix ] [ runtime ] fix assertion in volatilereadnode
added a method ` getSteps ( ) ` to return a list of ` Step ` objects and updated formatting in the ` SimpleJob ` class to en
removed unused ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl ` classes
refactor currency pair initialization to improve code readability and maintainability
update longtasktimer to use baseTimeUnit ( ) instead of baseTimeUnit ( ) for clarity
[ hotfix ] [ euphoria - euphoria - table - planner - blink ] [ table - planner - blink ]
changed variable types from String to CharSequence for color and pubkeyId in HostEditorActivity . java to improve flexibility in handling different input types and enhance
rename IncompatibleDatabaseHandler to DatabaseVersionHandler and update related methods to improve clarity and consistency in database version handling
added a constant MAX _ TWEETS _ IN _ CONVERSATION to limit the number of tweet conversations to a maximum of 50
increased the refresh interval from 1ms to 2000ms in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to refresh
added a test for retrieving the persisted byte size of deleted tail pages in the Queue class to ensure that the persistence of deleted tail pages behaves as
fix package name for glowserver . class . getname ( )
refactor the grow method in DataIO . java to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted filename from a ` Part ` object to enhance the functionality of the ` Attachment
added a call to markReadForLoad ( ) in LauncherFragment . java to mark the fragment as read for loading to ensure the fragment is marked
updated exception handling in JarInstrumentor . java to include a ClassNotFoundException parameter to improve error reporting for class instrumentation failures
added a method to check spillpossibility in HashAggTemplate to ensure proper handling of out - of - memory errors during aggregation operations
updated variable names in IndexWriter . java for consistency to improve code readability and maintainability
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure a valid name format is used when none is provided
added error handling for password change process to improve user feedback by indicating when a password change is aborted
updated formatting in Deadlock2 . java to improve code readability and maintain consistency
added getmaxidletime ( ) method to nioreceivermbean to get max idle time
deleted the FontScalingTest . java file to remove unused font size to streamline the codebase
added null checks for filterBeginDate and end in RRD4jPersistenceService . java to ensure proper date handling and prevent IllegalArgumentException during query execution
added a null check for numVectors in GenericUDAFComputeStats . java to prevent potential null pointer exceptions when numVectors is zero
test : migrate executablereftest to junit 5 ( # 4479 )
added null checks before setting views and glass pane to prevent potential NullPointerExceptions when view and glass pane are null
camel - 16400 : camel - core - optimize wire - tap to avoid reflection .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
planner : enable topn by default
[ java ] remove redundant aeronDirectoryName parameter from test .
fixed - rbatch . pong ( ) and rbatch . getconnectionhandler . pong ( ) do n ' t work if redisson .
updated HiveConf to use a URL for configuration variables instead of a byte array to improve flexibility in handling configuration file URLs
updated the device parameter from ` Device . defaultDevice ( ) ` to ` criteria . getModel ( ) ` in ` createModel ( ) ` to
added onCreateOptionsMenu method to SimulationViewer to enable the handling of motor details options menu items in the menu
refactor CertificateValidator class to improve code readability and maintainability
make hawtio . dirname configurable
added a condition to return SINGLE _ SPACE for empty comments in Space . java to improve handling of empty comments in the code
changed private fields to be volatile across multiple classes to ensure thread - safe access to these fields in a concurrent environment
added printStackTrace ( ) method to ContextHandler . java to improve error handling by providing detailed stack trace information
move customitemdroptest from modid to integration test
added support for partition existence checks in DDLTask and related classes to ensure proper handling of missing partitions during schema processing
volume upload : do n ' t close the input stream in case of error
[ java ] remove unused controlrequeststreamid field .
[ geos - 10641 ] [ geos - 10641 ] add support for spatialoperator in capability transformer
added LuceneTestCase . AwaitsFix annotation to BasicDistributedZkTest . java to track a known issue related to SOLR - 2161 that
updated condition in Http11InputBuffer . java to include a prefaceMatch check to ensure proper handling of request processing based on prefaceMatch logic
[ java ] change the default value of isIngressExclusive from true to false in AeronCluster . java to disable inbound I / O operations to ensure
refactor HBase cache configuration to support multiple cache keys to enhance flexibility in managing HBase cache configurations
updated record count handling in JSONRecordReader to improve clarity and maintainability of record processing logic
added year filtering to merged items in CategorizationFragment to ensure only valid year items are processed
replaced ` 0x00000000 ` with ` 0 , CLEAR ` in ` CacheableTextView . java ` and ` CellLayout . java ` and ` Ho
added error handling for rendering in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering framework
bugfix : do n ' t clear actioncontext in backgroundprocess
added a ` prependDefaultDB ` parameter to the ` getUnescapedName ` method in ` BaseSemanticAnalyzer ` , ` QBParse
added a connection timeout configuration in TestConnections . java and changed the count variable to be final in StubConnection . java to improve connection stability and ensure
added assertions for the ` approx _ percentile ` function across multiple SQL queries in ` TestHiveAggregationQueries . java ` to ensure correct percentile calculations for orders
updated DEFAULT _ IDLE _ TIMEOUT to DEFAULT _ WRITE _ TIMEOUT and refactored idleTimeout handling in WebSocketChannel to improve clarity and
updated the retrieval of shares using the user ' s account name instead of the account name to ensure that the correct account context is used for sharing files
replaced ` Enumeration ` with ` Enumeration < InetAddress > ` for better type safety and clarity to enhance code readability and maintainability by
refactor PlaybackControlView to improve button enabling and disabling logic to enhance code readability and maintainability by using more descriptive method
updated method signatures to use session ID instead of Session instance to improve clarity and consistency in session management
replaced ` transitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure classpath retrieval
make useexceptionprobability default to true
updated the handling of the new PlateColor based on the icon ' s theme color to improve visual consistency by using dynamic color settings for different icons
guacamole - 102 : remove dependency on guacamole - net . auth . mysql from mysqluser .
added " centre " to the list of aliases in the MIDDLE . java file to enhance the flexibility of the aliasing mechanism
added dependency injection for DirectUpload class to enable better management of direct uploads within the application
added space positions for left and right axes in BarChartActivity . java and adjusted spacing in YAxisRenderer . java to improve chart layout and ensure proper
added support for additional ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance compatibility with additional Java ABI sources
added ` operationEventStatusType ` to the ` services ` list and initialized it to an empty list in ` CompositeLogService ` to ensure that the
added a debug statement to track and log the presence of annotations in MethodParameter processing to improve debugging by providing insights into the presence of annotations
( chore ) camel - jms : fix checkstyle violation
updated the process initialization to include a classpath parameter to enhance flexibility by allowing the process to specify the classpath for the SortedArrayStringMap class
updated file path handling in PackageResourceLoader . java to ensure correct separator is used for resource loading
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ] remove unnecessary
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting in ` ShouldHaveMessage . java ` and added a new test method in ` ShouldHaveMessage _ create _ Test . java `
fixed - jcache . getall ( ) method do n ' t return the cache manager uri . # 3685
do n ' t log technical exception when close command context
added braces around the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
updated the way the value is written in EntityPropertiesPacket to use the base value instead of the current value to ensure that the value is accurately
[ sonos ] add check for initialized thing before play notification sound ( # 5078 )
increased await duration from 500 milliseconds to 5 seconds in multiple test files to allow more time for countdown latch to complete in a more reliable manner
changed log level from info to debug for effect light type determination in LightThingHandler . java to provide more detailed logging for troubleshooting purposes
bug cs - 15725 : add db . properties file for async job manager
updated method signatures and variable names in Reporter and ReturnsSmartNulls classes to improve clarity and consistency in error reporting
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` from ` Frame ` to
updated package - info . java files with multiple module - info . java files to improve organization and clarity of package - info documentation
added a check for non - empty physical column names before matching with DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSourceFactory
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` mixPlay ( input , amp ) ` method to
refactor JComponent and SynthTextPaneUI classes to improve code organization and readability
updated calculations in FinderPatternFinder and QRCodeBlackBox1TestCase , and QRCodeBlackBox2TestCase to correct coordinates to ensure accurate computation of
simplified the check for leadingIncludePaths to improve code readability and maintainability
updated test method name from ` testMatrixVectorMultiplication ` to ` matrixVectorMultiplication ` to improve clarity and consistency in naming conventions
added $ $ x to selenideelementproxy . tostring ( ) to make it easy to debug
defaultaudiosink : if no sample rate specify , use 48000
make xssfname final so that it can be overridden
increased the precision of the target value in HighDimensionsTest from 60000 to 90000 to accommodate larger dataset sizes
fix for geot - 4071 : patternfacet do n ' t handle empty element
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify the functionality of retrieving job names from the ` ClassPathXmlJobRegistry
changed data types from float to long in MotionPauseDetector . java to accommodate larger time values and improve precision in time calculations
camel - 12320 : camel - restlet - deprecate the consumer endpoint and deprecate the restlet producer
camel - 14284 : camel - log - add show - out option to log endpoint
refactor trace event submission logic into a separate method to improve code readability and maintainability by reducing duplication
added a check to ensure only non - cancelled and non - rejected limit orders are added to the limitOrders list to avoid adding duplicate orders to the limit
added pixel offset calculations and validation in LCMSImageLayout . java to ensure correct image layout handling and prevent layout errors
ruby : fix race condition in event . gettimestamp ( )
added a check to return a resource if the path ends with a slash in ` ContextHandler ` and created a test for path existence in ` WebApp
updated the constructor of ScriptFunctionImpl to include a null parameter to ensure proper handling of the " TypeThrower " function
refactor scroll handling in JEditTextArea to improve readability and maintainability of the code
added a check for callerLoopScope in GraphDecoder . java to ensure proper handling of graph state when callerLoopScope is null
test : migrate sniperprettyprinterjavaxtest to junit 5 ( # 4479 )
added try - with - resources for URLOutStream to ensure proper resource management and avoid potential memory leaks
added @ Entity annotation to Mail class to enable polymorphic relationship management for Mail objects
updated default values for tablespace options in Main . java to enable tablespace inclusion by default for better user experience
added methods ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` to the ` CountersReader ` class to provide access to the ` Atomic
added a check for empty file scenarios in ScanBatch . java and implemented a test for empty JSON directories in TestJsonReader . java to ensure proper handling of
updated failure handling in StringSubject and added a new test for named equality in StringTest to improve error reporting and ensure correct comparison behavior in tests
[ pytorch ] fix npe in libutils # isCuda
updated catch blocks in JrtJavaBasePackages and PackageHelper to catch Exception instead of ClassNotFoundException to improve error handling by capturing more general errors
hbase - 25809 masterfilesystem should check if file system be in safemode before write it
updated error message formatting in TranslatingJavacPhaseTracer to include class name and exception details to improve clarity of error messages for better debugging
do n ' t clone plugin descriptor in defaultplugincache . clone ( )
do n ' t update contact status if they be already online .
remove unused parameter from servletrequestdetails # withresourceandparams
added a new integration test class for fetching account information from the BTCE exchange to ensure that the account information retrieval functionality works as expected in the BTCE
added mouseWheel functionality to VDUInput and vt320 classes to enhance mouse wheel functionality for better user interaction
fix ( demo ) : use correct library path
# 161 - enh : remove columnhstore annotation for backwards compatibility
fix : add skin flag to glowplayer metadata ( # 161 )
replaced RequestFieldMatcher with SLF4J logging in LoadBalancerWithServiceTests . java to improve logging capabilities and streamline service creation process
fix npe in mapservice . createsimpleentryview ( ) .
updated OS version retrieval to use AccessController for better security to enhance security by restricting access to system properties
added a constant for the freemarker configuration file suffix and updated the file suffix handling in TemplateEngineFreemarker to allow dynamic configuration of
updated hashCode calculation and added new order ID handling in SelectMessageQueueByHash . java and SelectMessageQueueByHashTest . java to improve message retrieval logic and
g3d - 22 : add animation callback to toolbar panel .
improvement to styledtextareavisual : make sure caret be always visible
added declaredPlatforms to PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxBuckConfig , and CxxBuckConfig classes
updated imports in JpaCountQueryCreator and PartTreeJpaQuery classes to use ParameterAccessor instead of SimpleParameterAccessor to enhance clarity and
added a null check for the passwordAttribute before setting it to avoid potential NullPointerException when passwordAttribute is null
added support for handling arrays in DataUtilities to ensure correct initialization of arrays with default values
updated SSL context handling to ensure correct host name retrieval based on client authentication
fix test flakiness on oracle
danielwagnerhall : add a method to delete a cooky by domain .
added a boolean variable ` mHasEndedLauncherTransition ` and modified gesture handling logic in ` AbsSwipeUpHandler ` and ` RecentsView `
updated HTML output to include character set encoding to ensure proper handling of special characters in HTML output
refactor IndexReader class to improve code readability and maintainability
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path handling in multiple operator classes to
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to implement a test case for bug 6337518 to
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity class to improve code readability and maintainability
added HomeContentProvider notifications to multiple classes to ensure that changes to the content URI are properly notified to the user
added functionality to manage and invalidate pressed or focused backgrounds in BubbleTextView and Launcher classes to improve the responsiveness of the UI by
added an error parameter to the getFallbackResponse method across multiple classes to provide more detailed error handling for fallback responses
simplified the condition for checking if the destination directory is not null to improve code readability and maintainability
added null checks for tags before accessing their length to improve robustness by preventing potential ArrayIndexOutOfBoundsException
updated regex patterns in RegexpUtil and added tests in TestSqlPatterns to enhance regex pattern matching functionality and improve test coverage
added a new constant KEY _ ACTION _ BAR _ TITLE and updated related methods in FileActivity and FileDisplayActivity to manage the title of the action
updated method to retrieve the last element of convertedElements from Iterables . getFirst ( ) to Iterables . getLast ( ) in PythonDslProjectBuild
updated the hour parameter in the @ Schedule annotation from " * " to " 0 " in CleaningService . java to align the scheduled task with the
updated TransactionalValidationListener to include partition handling and error logging for retrieving table partitions and paths to enhance functionality for managing partitioned tables and improve error
updated ReplicationHandler and SnapPuller classes to implement polling functionality to enhance data consistency during replication
changed the return type of ` generateKey ` from ` int ` to ` long ` and added functionality to retrieve generated keys in ` ShadowSQLiteDatabase `
updated the variable name from ` proxy ` to ` _ rc ` for clarity to improve code readability by using a more descriptive variable name
improve error message for inline error
increase keep - alive timeout to 10 second by default
deleted the HttpTestAccount001 . java file to remove obsolete test class to streamline the codebase
changed exception handling from catching Exception to catching Throwable in Dispatcher . java and removed dispatcher callback logic in DispatcherTest . java to improve error
camel - 16400 : camel - cxf - add support for cxf data format to enable camel - cxf
added a case for ' ~ ' in ClientUtils . java to support handling of the ~ character in the client
camel - slack : allow to configure the slack consumer delay .
fix blockdrop event not fire properly .
updated layout parameters for the FormLayout in TranscodingTab . java to improve layout spacing to enhance visual consistency across different operating systems
added a new file ` bug8057791 . java ` that implements a JList with a custom Nimbus Look and Feel to
refactor flag handling in LambdaToMethod and introduce a new interface LambdaInterfaceStaticField to improve clarity and introduce a static field interface to enhance
[ multistage ] fix npe in runnerbuilder when engine api be enable
updated null check for the ' to ' variable in ComposeActivity . java to ensure ' to ' is not null to prevent potential NullPointerExceptions when
added support for reading big integers in ParquetFixedWidthDictionaryReaders and a corresponding test case in TestColumnReaderFactory to enhance functionality for reading big
updated divider height calculations in PortraitPagedViewHandler . java to improve layout handling for both stacked and landscape orientations to enhance visual consistency
added a new annotation ` Log ` in ` org . apache . shenyu . examples . springcloud . aop . Log `
updated dump string formatting in QueuedThreadPool . java to handle cases where trace array is empty to ensure proper representation of thread state based on trace presence
updated the ` combinations ` method to include an ` implementation ` parameter and modified related related logic to enhance functionality by allowing specific implementations to be
updated the ` createReferenceMap ` method to include the total frame size of ` totalFrameSize ( ) ` to ensure that the reference map has the correct
[ hotfix ] fix typo in typesafeconfigurator
camel - 16400 : added karaf test for camel - graphql
renamed ` main ` to ` bug1 ` and ` bug2 ` in ` RFE2891944 . java ` and added ` bug3
httpclientintroductionadvice : do n ' t encode url - encoding for non utf - 8
replaced ` UnsupportedPlatformTool ` with a custom implementation that throws ` UnsupportedPlatformException ` to improve error handling for unsupported platforms
replaced double loopCount calculation with a TimeUnit for better readability to improve code clarity and maintainability
added a ` getSize ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way to
[ drools - 7 ] fix kieaddressmanagertest to use random field
updated layout specifications for COL _ SPEC and ROW _ SPEC in VLCVideo . java to improve visual consistency and alignment of UI components
update link to point to the correct bitquare repository
updated AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker . android . twitter
updated user configuration to include . m2 and . m2 / repository paths in MavenCli . java and MBoot . java to ensure
added a call to glBindBuffer with GL20 . GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to bind the buffer to the
refactor ServerHttpSecurity class to improve code readability and maintainability
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration to ensure proper handling of HTTP headers in the client configuration
add exception handle for user password validation error
deleted the NoOpConfigPathGetter . java file to remove unused code related to configuration path retrieval
replaced Codec . base16Decode ( keyHex ) with Bytes . toHexString ( keyHex ) for signingKey to improve readability and maintainability of
added handling for float values in FloatUtil . java to improve robustness by throwing a runtime exception for invalid float values
jbrules - 2835 : move planningfactproperty and planningentitycollectionproperty to org . optaplanner . core . impl
refactor ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instead of a ` Map < String , String > ` to enhance
update proxyserver to use charset instead of enc
added a method ` getJobId ( ) ` to ` StepContext ` class to retrieve the job ID from ` StepExecution ` to ensure that the step
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to improve code readability and performance by using standard comparison methods
change defaultjdkhttpclient log level from error to debug .
updated import statements in LegacyAuthenticationHandlerAdapter . java to ensure compatibility with the latest authentication framework
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check for the owner key in the filter before removing it from the network to ensure that the filter is not removed from the network if
add back pgpkeykeyring . wrap ( inputstream ) for backwards compatibility
replaced DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to improve performance by reducing the number of write operations
added a new test method ` testSelectAllFromView ` and modified column qualifier retrieval in ` HiveBaseResultSet ` to improve test coverage and ensure
updated focus transition tests in FocusTransitionTest . java to improve test coverage for focus transition functionality
updated import statement for GWT from ` org . gwtproject . core . client ` to ` com . google . gwt . core . client
added null checks and improved exception handling for job instance retrieval in CounterStatsAggregator . java to enhance robustness and prevent potential NullPointerExceptions during job counter retrieval
updated the initialization of ` _ readListener ` to ensure ` readListener ` is not null to avoid potential NullPointerExceptions during object initialization
added a method to change component color and refactored color selection handling in AppearancePanel . java to improve color selection functionality and enhance
changed the parameter of the constructor from ` false ` to ` hidden ` in ` TaskHelper . java ` to accommodate the ` hidden ` option
fix flakiness in failovertimeouttest
pdfbox - 4892 : fix resource leak in ccittfactory
added DefaultParameterHandler import in LanguageDriver . java to enhance scripting capabilities by integrating DefaultParameterHandler functionality
updated spill state handling in LinearScanWalker . java to ensure correct spill state management based on block depth to improve performance by optimizing spill state based on
mondrian : add a new astbuilder to facilitate compilation of groovy code
added a new method ` closeInternally ( ) ` to ` PgResultSet ` and updated references in ` PgStatement ` and ` Pg
set default value of serviceAdvisorType to PYTHON to ensure compatibility with Python services
refactor ResolvingDecoder to use a ThreadLocal for ResolvingDecoder to ensure thread safety to prevent potential NullPointerExceptions when accessing the Res
changed the parameter type of ` subpaths ` from ` Collection < ? extends Subpath > ` to ` List < ? extends Subpath >
updated assertions in SendCoinShieldTest to use a generated memo byte array instead of a new byte array to ensure that the test cases validate the correct memo
added a method to set personalisation in SkeinParameterSpec . java to enable users to specify personalization options for date and email addresses
removed redundant line breaks in CodeGenerator . java to improve code readability and maintainability
removed unnecessary margin parameters from scroll methods across multiple classes to simplify the scrolling logic and improve code readability
added getter and setter methods for the pointer variable in FlatRecordReader to allow external access to the pointer variable
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions to enhance code
fix cast expression do n ' t work with boolean type
replaced ` ArrayList ` with ` boolean ` for acceptance checks in ` AbstractResource . java ` to improve clarity to enhance code readability and
added a new boolean parameter ` false ` to the ` TaskView ` class to provide control over the behavior of the task view
added a method to check if a column type is auto - increment to enable support for auto - increment columns in Liquibase
updated errorText initialization to provide a default error message when a command fails due to an Internal Server Error
updated the ` DeadListenerTest . java ` and ` LocalManagementTest . java ` to use ` ProcessTools ` and ` Utils ` instead of `
replaced ` toSimulate . add ` with ` toSimulate . put ( currentStatus , boosterStatus ) ` in ` BasicEventSimulationEngine
added support for AJP port configuration in GitBlitServer . java to enable dynamic port binding for the Jetty server
added type coercion logic for compound types in TransTypes . java and created a new Intersection3 . java file to ensure correct type coercion for
rename EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
refactor toolkit thread initialization by introducing a native method to ensure toolkitThread is only created once to improve performance by avoiding multiple threads
add option to compress the bundles in parallel .
fix ( opengl ) : hide surface on window
updated temporary directory initialization to use the class name instead of a hardcoded string to improve flexibility and maintainability of the temporary directory path
added support for enabling and disabling HTTP node services in CommonParameter and FullNode classes to enhance flexibility in managing node configurations based on
added a new field ` service ` to the ` GoogleCloudFirestoreTicketDocument ` class and updated the return statement in ` GoogleCloudFirestoreTicket
refactor Generate . java file to improve code readability and maintainability
removed nullable parameter from ScalarFunction and added new test cases for JSON format to ensure proper handling of null arguments in JSON formatting
added DOTS _ ONLY flag and modified width calculation logic in BadgeRenderer . java , IconPalette . java , ShadowGenerator . java , and Notification
removed the final modifier from the getConfiguration method in FreemarkerManager . java to allow method overriding in subclasses
added a test method to validate exclusion patterns in OgnlUtilTest to ensure proper handling of excluded package names during testing
updated device Udid retrieval logic in AppleTest . java and added SDK name parameter in IdbRunTestsStep . java to ensure accurate identification of devices
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified response handling in TestDefaultHttpClientFilter to improve error handling and ensure proper processing of HTTP
removed redundant null checks in AllAppsView . java to improve code readability and maintainability
added a boolean flag TEXT _ BURN to conditionally apply shadow effects based on the TEXT _ BURN flag to improve rendering performance by avoiding unnecessary
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper resource cleanup after tests
added a parser variable to the SecurityNamespaceHandler class to allow dynamic configuration of the parser based on the provided name
updated conditional logic in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve cache performance
refactor ` RawConnection ` to extend ` WebSocketConnection ` and implement ` complete ` method in ` WebSocketAsyncConnection ` to improve connection handling
added two new test methods for assertions in SoftAssertionsPerfTest to enhance test coverage for soft assertion scenarios
added exit code handling for Python test execution in ` PythonRunTestsStep ` and ` PythonTestIntegrationTest ` to ensure proper exit codes are returned based
added a conditional check for markup rendering in GlyphLayout . java to ensure proper handling of rendering when markup is disabled
updated score comparison logic in TestBooleanRewrites . java to use a stream - based approach for comparing score documents to improve accuracy and readability to en
updated the class reference from enclosing class to superclass to ensure correct handling of anonymous classes in type handling
remove unnecessary cast to playersocketconnection .
added a flag to prevent multiple draw listeners from being removed during the draw operation
refactor multiple Java files related to indexing and term enumeration to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a check for matchStatus to improve code readability and ensure proper handling of
updated the return value of MEDIAPARSERV2 from false to true to enable MEDIAPARSERV2 by default for media parsing validation
added support for ` @ aop ` annotation in ` beandefinitioninjectprocessor `
added permission checks in FolderPermissionBase . java to ensure data integrity during truncate operations
do n ' t publish global status if registration state change
updated the color calculation in PastelColor to use a base of 180 and 255 to improve color variability for better visual variability
refactor ScriptEngineFactory class to improve code readability and maintainability
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve clarity and maintainability of the code
refactor request method handling in CloudClient . java to improve clarity and ensure proper handling of unsupported request methods
improve multiword preprocessing to handle contain phrase
remove unused import of java . io . IOException to clean up the code and improve readability
added support for HIVE _ PASSTHROUGH _ OF _ CLASSNAME in HivePassThroughOutputFormat and updated class loading logic to enhance compatibility with
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary check in DOMBuilder . java to ensure proper handling of character array bounds
updated imports and method calls for HierarchicalUndirectedGraph and GraphDensityUI to improve code clarity and maintainability by using localized messages
camel - 15836 - camel - aws2 - * : improve the verifier to check if a particular service be support in a particular region - aws translate
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing ` InterfaceWithStaticAndDefaultMethods ` to demonstrate the usage of static methods
camel - 14284 : camel - default - key - selector should use camelcontext a key store alias to avoid reflection configuration .
refactor catch blocks to use ThreadDeath instead of ThreadDeath to improve type safety and eliminate unnecessary casting
refactor KeyManagerFactory , TrustManagerFactory , and Policy classes to improve code organization and maintainability across security - related components
updated JGit version from 1.0 . 0 ( 201106070707 ) to 1.1 . 0 ( 201109151100
fix : fix httpclientintroductionadvice to work with new client
int - 1546 add transformer namespace support for spring 3.0
updated BACK _ FACTOR to REWIND _ TIME and modified duration checks in resumeObj . java to improve clarity and functionality of duration handling
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified event firing logic in ` Button ` and ` Java
updated usage message formatting and improved permission handling in DocumentationPrinter . java to enhance clarity of usage instructions and ensure proper permission handling
changed the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to clarify the purpose of
added setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated mergeFiles in RewriteCrossSpaceCompactionSelector . java to
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
updated the initialization of ` needRebuild ` to use ` this . projectRuleSet . rules ( ) . equals ( ) ` instead of ` this . project
refactor sootfieldref so that it be thread safe
add elastic naming convention to elastic meter registry ( fixes # 183 )
added listener and command creator methods to IController , TinyGController , and IController classes , and updated BackendAPI to use IController instead of
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify rendering behavior for huge horizontal rules to ensure proper
replaced ` System . out . println ` with ` TTY . print ` in ` TypeSystemTest . java ` and ` PartialEscapeAnalysisPhase . java
updated method declarations in Response . java for consistency and clarity to improve code readability and maintainability
updated the condition to check for non - negative frameLength to ensure that the frame length validation correctly handles negative values
updated return statements in IntFloatMap and IntIntMap to return default values instead of zeroValue to enhance functionality by providing default values
refactor image handling by replacing direct icon setting with a call to ` Display . getInstance ( ) . callSerially ( new Runnable ( )
added a null check for registered in HandlerRegistration . java to prevent potential NullPointerExceptions during handler registration
removed the ` hasNextSibling ( ) ` native method from multiple node classes and updated return statements in ` IeNavigator ` and ` HtmlNode ` to
fixed - npe in redisdistributedmapcachecacheclientservice if redisdistributedmapcacheclientservice if redisdistributedmapcachec
added logging for MobFileCache enabled state to improve traceability and debugging of cache initialization and eviction behavior
refactor ColConvCCMTest class to improve code readability and maintainability
replaced instances of ` target ` with ` allowCovariantReturns ` and updated variable names for clarity to improve code readability and maintainability by using
pdfbox - 4892 : use generics , a suggest by valerybokov
updated the return type of ` asFloat ( ) ` from ` Float . asFloat ( ) ` to ` asString ( ) ` and added a
added a return statement in GenericFileConsumer . java to ensure proper termination of the method execution
added a Runnable to execute on the Event Dispatch Thread to ensure that UI updates occur on the Event Dispatch Thread for thread safety
updated the maxSize calculation in CompressExtension . java to ensure consistent usage of max text and binary message buffer sizes
update steeringValue assignments in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to correct logical operations to ensure steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to use ` MessageDigest . isEqual
updated date handling in JdbcSerDe to utilize LocalDate and LocalDateTime for better date conversion to improve accuracy and consistency in date representation
updated VERSION from 2 to 3 and refactored metadata reading logic in ParseData . java to ensure compatibility with version 3 and improve code clarity
added conditional configuration for Flyway in FlywayAutoConfiguration to ensure Flyway is only instantiated when the local containerEntityManagerFactoryBean
added sorting functionality to ClassesImpl . java to ensure classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated state comparison logic in ` AbstractLauncherUiTest ` to improve
refactor SharedInformer class to improve code readability and maintainability
refactor memory scope handling in TestCloseScope0 . java to support different Java versions to enhance compatibility and flexibility in managing memory
increased the timeout duration in the test from 500ms to 5000ms in AdaptServerSocket . java to allow more time for tests to complete successfully
updated CaptchaChannelProcessorTests to improve test coverage for security validation
added a check to ensure the owning collection is not equal to the current item ' s owner before updating the owning collection in MetadataImport . java to prevent
added retry logic for saving properties in AbstractRegistry to ensure properties are only saved if they have sufficient retries
updated the parameter for trackingCFSDir from mergeDirectory to directory to ensure the correct directory is used for tracking CFS files
pmd : fix unusedimports rule to work with jdk 1.5
added validation for Iceberg table overwrites in HiveIcebergStorageHandler and implemented bucketed table checks in IcebergTableUtil to
updated assertions in BootstrapTests . java to verify that legacy SAML keys are available for the identity zone configuration
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java ` to improve cl
updated the variable name from ` theAddressie ` to ` addressees ` for clarity to improve code readability and maintainability by using
removed unused comments from CommentsParser . java to improve code clarity and maintainability
added a ` throw IOException ` to the ` release ` method in ` Lock ` and ` NativeFSLockFactory ` , along with a new
changed package declaration from ` test . jdbc . datasource ` to ` org . spring . batch . test ` in ` DataSourceInitializer . java ` to
updated SpelExpressionTransformer and OperatorNode to check for unary operators before transforming them to ensure correct transformation behavior for non - unary operators in
updated ByteBuddy instantiation to use TypeValidation . DISABLED to disable type validation during bytecode generation
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` for better type safety to enhance
updated lock handling in ` LockModePessimisticReadWriteIntegrationTest ` and ` MySQLTableLockTest ` to throw ` PessimisticEntity
do n ' t set system property when log file be null
added redirect handling for HTTP redirects in ServiceApiRequest . java to improve user experience by ensuring proper handling of HTTP redirects
added constants for service mapping and application mapping in ServiceComb to enhance configuration flexibility based on environment settings
update toethread to use bean name instead of processor name
changed DB _ PATH _ REGEX to static final static in BaseAndroidTestCase . java and updated related tests in GeocodeHelperTest .
updated return statement to return unread count instead of numberNew to ensure accurate tracking of unread count for the current account
updated the test method name from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a ` @ DisabledForJreRange ` annotation
updated ` getAllOrder ` method to accept a limit parameter for the number of orders to limit the number of orders processed based on a specified limit
added null check for user before retrieving user settings to prevent potential NullPointerExceptions when accessing user settings
replaced ` ? ` with ` . absoluteFile ( ) ` in ` LocalFileSystem . java ` and added a new test for relative wildcard path matching to
added MAX _ WIDTH and MAX _ HEIGHT constants and updated bounds setting logic in ComponentBuilders . java to ensure dimensions do not exceed defined limits to prevent
added logging for maximum retries and deprecate the default response parser in CommonsHttpSolrServer . java to enhance error handling in CommonsHttpSolr
added exception handling for document creation failures to improve error reporting for document creation failures
refactor file handling in CrateType . java to use lambda expressions to improve code readability and reduce boilerplate code
added methods to check if a word is a number and its separators in SpellChecker . java and a corresponding test in i53643 . java to improve
updated the MESSAGE constant in HelloWorld . java to remove unnecessary whitespace to improve code readability and maintain consistency
refactor file action handling into a separate method for better code organization to improve code readability and maintainability by reducing duplication
added a try - catch block around logReplicationTimeAndConfFiles method to handle potential exceptions during replication logging
removed redundant line breaks in StoreCachedTest . java to improve code readability and maintainability
added a check for MaterialHolder in the constructor of StreamerLoader to ensure proper handling of file column parsers to prevent potential null pointer exceptions
added a new string " Core Library for LibGDX " and updated existing strings in DependencyBank . java to enhance functionality and clarity
added dynamic grid layout adjustments in AppsContainerRecyclerView to improve UI responsiveness based on device profile dimensions
added a new test method ` testBuildingBinaryariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure that the build process
improve baritone ' s handling of miss tag
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality for parsing Liquibase procedures
added null handling functionality in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to enhance query optimization and ensure proper handling of
updated argument validation in JDynamicInvokeExpr . java to ensure correct argument types are provided for the bootstrap method
( chore ) camel - jms : fix unit test
remove formatting from runtime options to improve code readability and maintainability
updated contact handling in AbstractRegisteredService and PrincipalAttributeRegisteredServiceUsernameProvider to use DefaultRegisteredServiceContact instead of RegisteredServiceContact to
added a condition to adjust the visibility of workspace labels based on padding and text size of the profile to ensure that the workspace labels does not exceed the available
[ hotfix ] [ test ] use assertf instead of assertassert
improve context extension handling for pre - initialization
added JUnit @ Ignore annotations to ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java to
replaced RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
updated assignment of ` value ` to use ` values [ 1 ] ` instead of ` values [ 0 ] ` in ` VisualScoreTagTest . java
updated error messages and modified file traversal logic to improve clarity of error reporting and ensure all attributes are processed correctly
refactor segment name validation in HLCSegmentName and LLCSegmentName classes to improve clarity and maintainability of segment name validation logic
added methods ` startActivity ` and ` startActivityForResult ` to ` ShadowFragment ` and ` FragmentTest ` to ensure proper handling of
updated date addition to use the current time instead of a fixed date to ensure accurate date representation in the calendar
updated the return statement in TargetCpuType . java to include " x86 _ 64 - none - linux - android " to ensure compatibility with x86
added functionality to delete all files for an account in FileDataStorageManager and manage accounts in ManageAccountsActivity to enhance user experience by allowing
updated command - line option syntax in SchemaCrawlerCommandLine . java to improve clarity and consistency in command usage instructions
added a static factory method ` createSuiteDescription ` to create a ` Description ` instance with a ` uniqueId ` parameter to enhance usability by
replaced direct calls to ` reader . decode ( bitmap , hints ) ` with a call to ` reader . decode ( bitmap ) ` in ` SnapshotThread
removed unused imports and simplified the BuckTarget constructor to improve code clarity and reduce unnecessary dependencies
added tests for range past end and start in GWCZoomContextFinderTest . java to ensure correct functionality of zoom context filtering
added support for dependency tracking in JRubyScriptEngine to enable conditional tracking based on configuration settings
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to improve cl
do n ' t announce a new table if it already exist
improve performance of welcome window by cache image
updated tuner configuration to include a unique tuner name and improved buffer transfer handling to enhance tuner identification and ensure proper resource management during buffer transfer
added HasTests to the ShBinaryDescription interface and implemented a test for ShBinary functionality to enhance test coverage for binary execution in the build process
added a condition to set the includeString to " db : hsqldb " in TestFilter . java to ensure compatibility with the HSQLDB database
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize host exception if there be no exception
make sure jvmci be export to jdk 9 +
add unit test for duplicate handler .
[ flink - 20865 ] [ runtime ] make fine - grained shuffle mode require batch execution
fix vanilla flower not work with vanilla block
( chore ) camel - ftp
renamed ` StepRunner ` to ` StepRunner ` across multiple files to improve clarity and consistency in naming conventions
replaced ` useShortNames ` with ` compressPackageNames ` in ` GangliaReporter ` and ` GangliaMessageBuilder ` to
added a check to return early if the items list is empty to improve performance by avoiding unnecessary processing when there are no items to display
added a conditional bean definition for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure the REPORTER _ BEAN _ NAME bean is
updated XMLLayout to use StringBuilder instead of StringBuffer for improved performance and readability to enhance code efficiency and maintainability by using
added a ` OMIT _ HEADER ` parameter to the CommonParams class and its usage in ` NamedList ` , ` BinaryResponseWriter ` , and `
patch from peter lenahan from bug # 44657 - fix property name in escher property
updated method reference from ` getBuildRuleType ` to ` getBuildRuleType ` in ` Description . java ` to improve clarity by using a
add a call to modifyHierarchy on the scene object to ensure that changes to the scene object do not affect the scene instance
fix npe in tradedatavalidation
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , ` DatabaseSchemaCrawler ` , and
wallet : set transaction confidence type to not _ seEN _ IN _ CHAIN
do n ' t allow body and header to be specify in httprequest .
added a condition to skip processing conditions in JSON processing to ensure only valid JSON files are processed to avoid processing irrelevant conditions
hbase - 20613 addendum : log exception when region can not be close
refactor null and array comparison logic in Credential . java to improve code readability and maintainability
[ java ] do n ' t send image if subscription have no image .
updated the ` destroy ` method to throw ` InterruptedException ` instead of ` NoSuchMethodException ` to simplify the process destruction logic and improve error handling
added a check for Oracle in the MySql condition to ensure compatibility with both MariaDB and Oracle databases
camel - 16400 : camel - mail - allow to connect to the same mail store multiple time .
throw parsecancedexception if there be more token in the query that have not be consume
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added a method to retrieve the data file name and modified the HMMModel initialization logic in Voice . java to enhance model selection based on the
added emailDomain field and its getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderEndpointsMockMvcTests classes to
added READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants to Configuration . java and updated their retrieval methods in ViewRegistry . java to improve configurability
do n ' t process deferred concepts if they already exist
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
added parameterized tests for ` findDeprecatedUses ` to enhance test coverage by allowing ` typePattern ` to be passed as a parameter to improve test
added a call to the superclass constructor in WaterfallPanel . java to ensure proper initialization of the superclass component
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added event name field in LogEventWrapper to improve clarity of event signatures and enhance
updated the condition for identifying session IDs in FileTestHelper . java to improve accuracy in identifying session identifiers
added color setting for the graphics object to ensure the graphics object uses the correct background color for rendering
[ jbrules - 2054 ] fix compilation error in packagebuilder
remove system . out . println ( ` ` simple select : ' ' )
added null checks for scoreDocs [ 0 ] and scoreDocs [ 1 ] in TestFieldCacheSort . java to ensure score is non - NaN before
replaced ` set . copyOf ( ) ` with ` Set . copyOf ( ) ` for setting oldKeys in ` DeviceState . java ` to
added a check for zeroTime ( ) in ColumnSnapshotGenerator . java and implemented date default value validation in MySQLIntegrationTest . java to ensure
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` taker
updated generic type parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupHeadsCollector , and FunctionFirstPassGroupingCollector classes to en
[ jbrules - 2054 ] add test for edit session model
updated HiveMetaStoreClient instantiation to use the current configuration object to ensure compatibility with the latest configuration standards
added a conditional check to return early if modalness matches to optimize performance by avoiding unnecessary processing when the modalness is unchanged
added a new test method ` createFromProfileLevel ` in ` ShadowMediaCodecListTest ` to verify the creation of ` CodecCapabilities ` from a
fix issue # 5460 ( when enter key use , focus be wrong )
added validation to prevent invalid dimensions in SunVolatileImage and XRPMBlitLoops , and created a new VolatileImageBug class for testing to
updated the separator from " . " to " \ u00a0 " in FormatData _ UK . java to ensure consistent formatting of thousands in
replaced int array with AtomicInteger for thread management to improve thread safety and reduce contention in multi - threaded scenarios
added handling for beta flavour in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback for unavailable flavors
added access and desc attributes to SearchMethodVisitor to enhance context information for better context management
added multiple sleep calls to IoTDBInsertWithoutTimeIT . java to improve synchronization handling for database insert operations
refactor duration retrieval logic in DLNAResource . java for clarity to improve readability and maintainability of the code
updated XmlRootElement annotations in ResequenceDefinition and StreamResequencerConfig to use " batch - config " and " stream - config " instead of "
refactor transaction acquisition and read transaction handling in TableReader . java to improve code clarity and ensure transactions are only acquired once
flume - 2088 : thrift client should use ssl . keymanager . algorithm if available
refactor ` getSingleSourceApplicableTest ` to use ` Applicability ` instead of ` JavaIsoVisitor ` to improve code readability
do n ' t exit the keyboard if it ' s press twice
change access specifier from PACKAGE _ PRIVATE to NONE across multiple files to improve clarity and consistency in access handling
renamed the method ` unHandled ` to ` unhandled ` and updated related error handling logic to improve clarity of method purpose and enhance
updated the initialization of stripes and stripeStats in OrcInputFormat to ensure correct retrieval of stripe statistics from orcReader and orcTail
added a null check for the exception before proceeding to prevent potential NullPointerExceptions during execution
replace http with https in myhentaicomics ripper
added command - line arguments for displaying the current JAR version to provide users with information about the current version of the application
replace split ( ) with splittokens ( ) for good readability
added keyboard rotation functionality to ConsoleActivity and TerminalView to enhance user experience by allowing customizable rotation settings
updated the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and added sup
added a null check for ownerConnectionAddress in ClientSmartListenerService to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 16400 : camel - jbang - expose the class name of the headermapfactory so it can be use in camel - jbang
updated formatting in JavaCompiler and Diagnostic classes to improve code readability and maintain consistency
int - 1851 add jms namespace support for jms outbound gateway
updated the index in the expected array check from i + 1 to i2 in ArrayFunctions . java to correct the expected array index assignment logic
refactor script engine handling in AbstractScriptProcessor and InvokeScriptedProcessor to improve clarity and ensure proper management of script engine instances
added support for PostgreSQL statement proxying in PooledConnectionImpl . java and a corresponding test in ConnectionPoolTest . java to enhance
[ hotfix ] [ test ] fix flaky cassandraiotest
updated log message formatting in AtomicRemainder . java to improve clarity and consistency in logging output
do n ' t allow expired sstables to be fully expired
fixed - redissonblockingdeque . toseconds ( ) and redissonblockingqueue . toasync ( ) do n ' t respect unit .
updated print statements in JobInspectCommand . java for consistency to improve readability and maintainability of the code
refactor Engine class to improve code readability and maintainability
refactor child handling in ChildHolder . java to improve code readability and ensure consistent sorting behavior
[ issue # 5979 ] disable acl test ( # 5979 )
update condition from " numIndexDims = 1 " to " numDataDims = 1 " in BKDWriter . java to ensure correct validation of data
[ hotfix ] [ zeppelin - 4747 ] fix npe in notebookserver when interpretergroup be null
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : expressionnode evaluation
changed method visibility from public to package - private to restrict access to the method for better encapsulation
server : fix npe when create snapshot policy fails
changed method visibility from public to package - private in ItemWriter . java to allow access to these methods from other classes
updated the parameter name from " test " to " test " in RoombaHandlerTest . java to improve clarity and consistency in the test setup
added a ` toString ` method to the ` ImageNameSubstitutor ` class and a corresponding test case in ` ImageNameSubstitutorTest `
replaced FSDirectory with RAMDirectory in TestNorms . java to improve test performance by using a more efficient directory structure
added a static final variable ` mLineHeight ` and modified the calculation of ` mLineHeight ` to ensure ` mLineHeight ` does not exceed
refactor WalletAppKit class to improve code readability and maintainability
[ netbeans - 4674 ] remove hat _ js and hat _ js _ nashorn from oqlengineimpl # getinit
chat transport selector : fix npe
added new abstract method ` resolve ` and ` replaceTokens ` to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
do n ' t throw npe if bsqblockchainexplorer be null
added attribute handling methods to StandardSession and Session classes to enhance session management by allowing retrieval and manipulation of session attributes
added assertions for the plain bean in TestDbJson _ List . java to ensure correct retrieval of plain data from the database
update averages array initialization to use initialPageCount instead of pageSize to ensure averages accurately reflects the initial page count
refactor BatchCommandLineLauncher to improve code structure and readability to enhance maintainability and facilitate future updates
added database setup and transaction management beans in BatchMetricsApplication . java to enable integration with HSQLDB for database operations
make glowrootloghttpservice implement httpservice instead of unauthenticated
pdfbox - 4892 : do n ' t set awt . getcurrentclipping ( ) for non - stroketostring ( )
removed the ` notifyAll ( ) ` method from ` DocumentsWriter ` and added synchronization in ` DocumentsWriterPerThread ` to ensure thread safety
added methods to retrieve property values based on column order to enhance property handling in UiBinding to improve flexibility in property management
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better string representation to enhance code readability and
do n ' t save the whole tree when save a sub - tree
pdfbox - 4892 : avoid infinite loop , a suggest by valerybokov
updated generic type declarations in KrakenAdaptersTest . java to improve code readability and maintainability
removed the import of CharTermAttribute from DefaultIndexingChain . java to streamline dependencies by eliminating unused imports
refactor NBJavacTrees class to improve code readability and maintainability
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader . java to ensure proper error handling for unsupported data encodings
updated logging statements in HttpSolrCall . java to use MarkerFactory for better logging to improve clarity and maintainability of the logging output
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy resources after instance changes
fix infinite recursion in defaultentityqueryrepository
updated error message handling in HubChangeExecListener to include null check for databaseChangeLogId to improve clarity of communication failure messages for better debugging
added a try - harder - hard option to try - hard to try - hard encode barcode
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` for better handling of compilation results to improve
replaced the initialization of ` maxEvents ` with a direct assignment and simplified the loop structure to improve code readability and maintainability
refactor validation logic in ValidatedLocalValidatorFactoryBean to simplify type checking to enhance readability and maintainability of the code
fix memory leak in entityawareworldprovider
updated type checking logic in IntrinsifyArrayCopyPhase . java to ensure correct handling of exact types during array copying
remove unnecessary logging of coyote adapter
replaced WantedAnywhereAfterFollowingInteraction with WantedAnywhereAfterFollowingInteraction and removed WantedAnywhereAfterFollowingInteraction to streamline
added null checks for ownerAddress and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure proper account existence and
[ ds - 3952 ] use sortedcommands instead of custom comparator for dspace command
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
replaced calls to ` addProperty ( ) ` with ` setProperty ( ) ` for setting metadata properties in ` BaseSingleTreeBuilder . java ` to
updated AsmLibraryLoader to use the correct class loader for loading classes to ensure proper class loading with the correct parent context
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the ` Java2TypeScriptTranslator ` to handle ` isDefinitionScope ` conditionally based on the ` isDefinitionScope ` flag to ensure correct
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to ensure proper handling of HTTP requests
simplified the addition of actionListener and analogListener to improve code readability and maintainability
hhh - 14589 - avoid npe in abstractsqmpath when lhs be null
updated package structure in CreateFolderTest , DeleteFolderTest , and ReadFolderTest classes to improve organization to ensure consistency in package naming conventions
updated BufferedImage handling in AwtCanvas . java to correctly manage different BufferedImage types to ensure proper rendering of images based on the specified filter condition
[ gr - 26711 ] make graal native image location qualifier configurable .
[ hotfix ] [ test ] remove unused test class
chore : update java microgenerator to 1.0 . 0 - rc1 - rc2 release
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code readability and maintainability
added a warning log for misconfigured per - node max record store sizes in EvictionChecker . java to improve logging clarity for configuration issues related to
updated return statements to use ` LST ` instead of ` AST ` for better clarity to enhance code readability and maintain consistency in naming conventions
refactor scoring logic in ThreadedAcousticScorer . java for improved readability and performance to enhance code maintain
replace AssertionError with a null return value to simplify error handling by avoiding unnecessary assertion throwing
fix unit test on window
added default implementations of ` makeString ` method across multiple classes to enhance string creation functionality for better thread safety
replaced hardcoded integer value ` HIGHEST _ PRECEDENCE + 1 ` with a constant ` DEFAULT _ ORDER ` in ` OidcServicesManager
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related tests accordingly to allow filtering of weak associations based on a specified rule
refactor Deflater class to improve code readability and maintainability
added error handling for exceptions in Font . java to improve robustness by converting exceptions to IOException
added a null and empty check for the content in VersionTypeBinding . java to prevent potential NullPointerExceptions when processing input
modified the ` onPostExecute ` method to accept a ` List < Place > ` parameter instead of a ` List < Place > ` to improve flex
modified content type check to be case - insensitive to ensure consistent behavior regardless of input casing
add openssh format to match asn . 1
updated updateItemLocationsInDatabaseBatch method to include a boolean parameter for folder name suggestion to improve flexibility in updating item locations based on feature
updated import statements and added entity retrieval logic in InheritanceCacheTest . java to improve code readability and ensure proper caching behavior
updated the import statement for DefaultOAuth2RequestFactory from DefaultOAuth2RequestFactory to DefaultOAuth2RequestFactory and added a new method to retrieve user
fix influx tag value not apply to tag value ( # 645 )
add miss dump ( ) method in quickfix
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to accommodate changes in cookie handling logic
added a static method ` classMetadataUnsupported ( ) ` to ` Platform ` and updated references in ` Subject ` and ` Platform . java ` to use
added functionality to manage clearing all actions in the OverviewActionsView and RecentsView to enhance user experience by allowing users to clear all tasks
updated ` desiredRepoVersion ` to be ` final ` and modified timeout values in ` ClusterStackVersionResourceProvider ` and ` HostStackVersion
remove memoryleaktest since it be no longer need
updated the URL construction in ServletTester to include the host address and port to ensure proper formatting of the URL for localhost connections
added a condition to check if MvDWAPI is being used in the MvDWAPI plugin configuration to ensure MvDWAPI is hooked
add assertclustersize # assertclustersizeeventually to help diagnose test failure
refactor FFIProvider to use SingletonHolder for singleton management to improve performance by avoiding unnecessary exception throwing
add test for hierarchical wFileList
added null checks for objectToSave and collectionName , and updated ID property handling in MongoTemplate . java , and added tests for saving null objects in Mongo
updated position initialization in NodeClass . java to use NODE _ LIST instead of NOT _ ITERABLE for direct input count checks to improve clarity and
added a new ` accTradeValue ` field and its getter method in ` BithumbTicker ` and updated ` BithumbTradeServiceRaw `
updated logging messages in RealtimeSegmentDataManager to include segment name to improve clarity and consistency in logging output
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve code readability and maintain
replaced ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVutableForwardIndex and FixedByteSVMutableForwardIndex classes to
refactor multiple classes related to dictionary handling to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a null check for destBuffer in the FlipTransition class to prevent potential NullPointerExceptions when destBuffer is not initialized
( chore ) camel - msv : fix flaky test
updated the condition to check if ` beginCycle ` is less than or equal to ` currentCycle ` in ` DelegationService . java ` to ensure
increased the random value generation from 6 to 10 in ` RandomValueStringGenerator ` and updated assertions in tests to accommodate a larger number of
added a check for instances of UniqueConstraint in StandardObjectChangeFilter to ensure correct table matching for unique constraints
updated string handling in MediaDetailFragment to support multiple language codes to improve flexibility in processing multi - language descriptions
do n ' t throw arrayindexoutofboundsexception if class ca n ' t be find
added ` withReferenceFilter ` method to ` ListImagesCmd ` and ` ListImagesCmdImpl ` classes to enable filtering of images based on
camel - 16400 : camel - jms - add bridgeerrorhandler option to avoid reflection configuration .
added checks for " # ifndef " , " # endif " , and empty opsToExclude in OpExclusionUtils . java to ensure proper handling of
added return statements in DatabaseCommand . java to ensure proper handling of command execution
refactor honestpolitician example to be more generic
[ hotfix ] [ sql - client ] fix checkstyle violation in sql - client
camel - 14284 : camel - restlet should use the correct restlet port
removed unused imports from SchematicFormat . java to clean up the code and improve readability
added a system property to set the maximum Hive query length to 100Mb to allow larger queries to be processed without running into length
changed ` userName ` to ` private ` in ` WebServer . java ` and added ` baseHttpConfig ( ) ` method in ` Web
[ hotfix ] [ connector / kafka ] rename sinks . fromprocessor to kafkasink
updated Spark app name handling in HiveSparkClientFactory to ensure a default app name is used when no specific app name is provided
updated variable name from ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve clarity to enhance code read
danielwagnerhall : allow maximise window to be maximize itself .
refactor ` getEmbeddedCellsBuckOutBaseDir ( ) ` to ` getMainCellBuckOut ( ) ` and update related
added a null check for the exception message in TestXMLEntityExpansion . java to ensure that the exception message is not null to avoid potential NullPointerExceptions
updated the offset and length assignments in TrueTypeFont . java to use bitwise operations to ensure proper handling of unsigned values
removed the customized assertion from the customize method in DirectMethodHandle . java to streamline the code by eliminating unnecessary validation
refactor LineChartRenderer to use a variable for the number of points per entry pair and improve coordinate handling to enhance code readability and maintainability
refactor Flavored target handling in AndroidBinaryDescription . java to improve error handling for unrecognized flavors to enhance clarity and
replaced ` buffer [ offset ] = GL15 . glGenBuffers ( ) ` with ` buffers [ i ] = GL15 . glGenBuffers (
added new classes Property and PropertySuper to handle property resolution errors to improve error handling and provide clearer feedback during property resolution failures
do n ' t remove shutdown hook if not enable
updated references in FilterChainProxy . java for clarity and consistency to improve readability and maintainability of the code
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . split ( intermediateResult , 0 , 1 ) ` in ` PercentileAggregationFunction
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider . java and QueryTypeAnalyser . java to ensure tables are loaded only
initialize baseType to null and reset literalPrefix and localizedTypeName to empty strings in MutableColumnDataType . java to ensure proper initialization and avoid null reference issues
updated link annotations in multiple Java files for consistency to improve code readability and maintainability
refactor EvaluatorFactory to use singleton instances instead of creating new instances to improve performance and reduce object creation overhead
updated target platform references from ` osx _ x86 - 64 ` and ` osx _ x86 _ 64 ` to ` osx
added sound effect handling in AllAppsView . java to manage sound effects to ensure consistent sound feedback during app interactions
changed the exception type of the main method from Exception to IOException in RemoveFirstPage . java to ensure proper handling of input / output errors
added a call to setGranularityEnabled ( true ) in BarChartActivitySinus . java to enable the left axis granularity to enhance the
refactor version comparison logic into a separate method to improve code readability and maintainability by reducing duplication
added OS alias support checks in ContextHandlerGetResourceTest . java to ensure tests are skipped if the operating system supports 8.3 Aliased / Alternate
added close methods to Connection and JsonAsyncHttpPinotClientTransport classes to ensure proper resource management and prevent potential connection closure issues
http : / / issues . apache . org / jira / browse / amq - 4894 - fix intermittent
[ beam - 4142 ] check that the resource be a directory before use it
removed unused sprite batch imports from IsometricStaggeredTiledMapRenderer . java to improve code clarity and reduce unnecessary dependencies
removed duplicate unbindHandle call in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization and readability
simplified the condition for handling touch events in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced the conditional check for three button navigation with a direct method call to improve code readability and maintainability
improve error message when language can not be determine
updated variable names and debug message formatting in ClassWriter . java to improve code readability and maintainability
added BlockFormattingContext parameter to findBox and findElementBox methods to enhance layout rendering by incorporating block formatting context
refactor ProcessExecutor to improve error handling and add a method to retrieve error output to enhance error reporting and provide better visibility into process execution
added null checks for operator in CheckedListReplaceAll and CheckedListReplaceAll to ensure proper handling of null operators to prevent NullPointerExceptions
added a volatile boolean flag ` _ testFill ` and modified the fillInterested ( ) method logic in ` SslConnectionTest . java ` to
added a listener for device configuration changes in DeviceFlag . java and updated default value handling in FeatureFlags . java to enhance device configuration management
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed unused import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
[ # 7711 ] instructor : instructorfeedbackeditpage : do n ' t open calendar dialog after click on calendar
removed unnecessary synchronization for ownTradesObservables in KrakenStreamingTradeService . java to improve performance by reducing synchronization overhead
replaced stderr . err . print ( " Ignoring Class - Path entry " + entry ) with System . out . println ( " Ignoring
updated SparseRowMatrix constructor to accept a RandomAccessSparseVector parameter to enhance flexibility in handling random access for matrix rows
cloudstack - 1771 : do n ' t delete volume when volume be delete
updated file input stream handling in Utilities . java to differentiate between local and non - local job configurations to improve flexibility in locating the plan path
[ beam - 8470 ] use guava instead of guava for test
refactor memorycallgraphbuilder to call resetinternalstate ( ) instead of call registermemoryccprovider ( )
fix nullpointerexception in conferencechat
added file validation in Save . java to ensure the file is writable before proceeding to prevent illegal user actions
added folder sync functionality to DrawerActivity and created FolderSyncActivity to enhance user experience by allowing users to view folder sync options
[ hotfix ] [ test ] fix test in sequentialchannelstatereadersimpltest
add support for spanish tree normalization for comma - separated word
replaced PointReader with PackedValueSlice for offlinePointWriter to improve performance by usingPackedValueSlice instead of reader
added a new ` LocaleRandomizer ` class and its corresponding tests in ` InternalRandomizerRegistry ` and ` LocaleRandomizerTest ` to
tika - 2852 -- add test for font - printer - metric mime type
update installer and autoupgrade to support new version
reformatted code for better readability in TCPTransport . java to improve code maintainability and clarity
fix race condition in http / 1.1 http2 parsing
updated the default initial delay value for the WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to allow for
corrected a typo in the error message for restricted columns to ensure clarity and accuracy in error reporting
added date formatting support for custom field entries in ThirdEyeJiraClient to enhance date handling capabilities for better data representation
refactor priority generation to use a dedicated PriorityGenerator class to improve code readability and maintainability by centralizing priority generation logic
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and modified the condition for scalarReplace in ClassTransformer . java to ensure scalarReplace is
added DATE _ TAKEN and DATE _ TAKEN to the test cases in MediaProvider . java to include additional media data retrieval to enhance
updated drawing parameters in TexturePacker2 . java for image positioning to correct offsets to ensure images are drawn relative to their intended bounds
added a ServletContextHandler to JettyWebSocketServerContainer and updated related tests to improve WebSocket upgrade handling and ensure proper context management
added shutdown methods to Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource management and prevent potential memory leaks
added RawJsonRequestBody annotation to JaxrsSwaggerGeneratorContext and integrated it into ParameterAnnotationProcessor to support raw JSON data in the generated
added a new method ` newTarget ` to create a ` Target ` instance with specified target type and extension to facilitate the creation of ` Target
updated the return type of ` ListBeanContainer ` to ` ArrayList ` and added a new test class ` BeanContainerTests ` in ` AllUtilTests
updated the metric name from " blockCountHitPercent " to " blockCacheCountHitPercent " to improve clarity regarding the purpose of the metric
camel - 16400 : camel - core - optimize to release temp file on completion
add deviceid to telnetonik protocol decoder ( fix # 1463 )
replaced ` Files . readFirstLine ( ) ` with ` Files . readCharSource ( ) ` in ` HybridProjectBuildFileParser . java
added a null check for ` operator ` in ` visitAssignop ` method and created a new test class ` FailOver15 . java ` to ensure
added a boolean variable ` enableAccountHandling ` and modified the creation of ` BaseActivity ` to conditionally call ` onCreate ` based on its value to
use heuristically find main connected point to avoid infinite recursion
added a ` List < String > path ` parameter to ` DrillViewTable ` and updated ` DrillViewTable ` to accept a
http : / / issues . apache . org / jira / browse / amq - 4894 - add option to enable cache - all
updated array type checks from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure proper handling of short
added configuration for low - level IO thread pool size configuration to allow dynamic adjustment of thread pool size configuration
added conditional logic to rerun initialization for " sun . security . ssl . Debug " and " sun . security . ssl . SSLLogger "
updated GeoEncodingUtils imports and added assertions in LatLonGrid . java , TestLatLonGrid . java , and TestLatLonGrid .
danielwagnerhall : added ability to check if a text element be visible .
updated the ` replaceFiles ` method to include an ` isInsertOverwrite ` parameter to enhance file replacement functionality by allowing overwrite of existing files
added a new test method ` ReflectorTest . java ` to verify the behavior of the ` Reflector ` class to ensure that the outer class of
added a new configuration option ` auto _ generate _ android _ facet _ sources ` to the ` IjProjectBuckConfig ` to enable automatic generation
updated communication failure messages in HubChangeExecListener to include author information to improve user feedback for communication failures
added a ` properties ` field to the ` Link ` class and its getter / setter methods in ` QuickLinksConfigurationModuleTest ` to allow
updated equalsAndHashCode and hashCode methods in InitialConfig and YamlConfigFileDTO classes to ensure proper object equality and hashing functionality in collections
[ hotfix ] [ client ] fix compiler warning
refactor ` forName ` and ` forNameHelper ` methods to include ` caller ` parameter and improve class loading logic to enhance class
replaced ` isEmptyOrNullString ( ) ` with ` IsEmptyString . emptyOrNullString ( ) ` for null checks in ` RequestItemRepositoryIT . java
replaced instances of ` LinkedBlockingQueue ` with ` LinkedBlockingQueueEx ` in ` GroupExecutor . java ` to improve thread management by using a more
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated HumanTime and TimeStepdefs classes to use Cucumber ' s Cucumber API for improved functionality to enhance the
fix miss spark _ isolated and spark _ recessive in modbanners .
updated ` RestProxyFactory ` to use ` exchangeSpecification . getUrl ( ) ` instead of ` exchangeSpecification ` across multiple classes to ensure
updated print statements in RecordGenerator . java to improve clarity and consistency in output messages
( chore ) camel - kafka : increase autocommit for test
added database change log lock handling in Liquibase and StandardLockService to ensure proper management of database change log locks
updated suppress warnings in AbstractAuthorizeTag . java and AuthorizeTagCustomGrantedAuthorityTests . java to include " rawtypes " and " deprecation "
added synchronized keyword to several methods in Database . java to ensure thread safety when accessing shared resources
camel - 16400 : camel - spring - boot - maven - plugin - spring - boot - auto - configuration - spring - boot
updated currency pair from baseSymbol to counterSymbol to ensure accurate adaptation of trading data
( chore ) camel - core : fix checkstyle violation
updated the initialization of the testId field to use System . getProperty instead of a random UUID
added synchronization to the dateFormat and numberFormat classes to ensure thread safety when accessing shared resources
updated package - info . java files to improve documentation clarity
change heightScale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of heightScale
updated equality check in SecurityConfig and updated test assertions in SecurityConfigTests to ensure proper comparison between security strings to improve accuracy in security configuration validation
updated the default value of ` dumpPartitionId ` to ` false ` to ensure consistent behavior by defaulting to a non - default value
added unit tests for UTXOSet functionality in TronTXOutput and TronTXOutput classes to ensure correct handling of transaction outputs in tests
pmd : fix false positive for unused variable name
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated job restart parameter handling in JsrJobOperator . java and added a test for new job parameters overrides in JsrJobOperatorTests . java to
added a protected method to disallow batch cascading operations in DatabasePlatform to enhance control over batch processing behavior
refactor principal initialization in JaasAuthenticationHandler to streamline the creation of principal objects to improve code readability and reduce redundancy
refactor SolrCores to use a dedicated thread pool for closing Solr cores to improve resource management and error handling during core closure
added a null check for mActionsView before accessing its properties to avoid potential NullPointerException when mActionsView is not initialized
[ hotfix ] fix npe in runidincrementer
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
add unit tests for the ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure correct functionality of matched devices in ` SchemaRegionRead
log metric event error ( # 10078 )
added a check for non - zero max in EigenvectorCentrality and created a new EigenvectorCentralityBuilder class to handle edge cases to improve accuracy
updated registry port handling to use a random port to enhance test reliability by avoiding port conflicts
updated geometry handling in GeometryGenerator . java to utilize UnsignedBytes for better type safety and clarity to enhance code maintainability and
updated the amplifier value from 2 to 0 in BlockEntityBeacon . java to correct the amplifier setting logic
refactor TubeCalc class to improve code readability and maintainability
2 . x : disable health check by default ( # 6314 )
updated the type of ` DEFAULT _ GROUPS ` from ` List < Class > ` to ` List < Class < ? > > ` and added validation
updated bug 8057791 . java to include a new test key and a timeout parameter in Nimbus L & F to enhance test coverage
added a daemon thread to the ScheduledExecutorService to allow the application to exit via main method completion fix # 322
fix build number for gradle release
added a check for reflection access in JavaAdapterFactory to enhance type safety during reflection operations
http : / / issues . apache . org / jira / browse / amq - 4892 - add lazysessioncreation = true to
updated initIOContext method to accept RecordReader as a parameter across multiple RecordReader classes to enhance context initialization by associating it with the
deleted the ClassLoaderHolder and LoaderManager classes to remove unused code related to ClassLoaderHolder and LoaderManager to streamline the codebase
added a method to handle configuration changes in FileStore , JavaLanguageServer , and ScanClassPath classes to ensure that only writable files are processed
added error handling for registering and unregistering session callbacks to prevent application crashes due to potential runtime exceptions
updated index creation statements to include " 23 . cfs " and " 23 . nocfs " to ensure compatibility with the latest version of Lucene
refactor AkkaRpcServiceUtils to use a factory method for creating and starting AkkaRpcService to improve code readability and reduce bo
phoenix - 4892 set mapreduce . map . maxattempts to 3 to avoid failure
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class SslConnectionTest for SSL connection handling to ensure proper resource management and closure of SSL connections before fill
added validation for address family in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed
added a test for date serialization in a collection to ensure correct handling of date representations in JSON
refactor Message class to improve code readability and maintainability
nifi - 2894 : fix npe in puteputdatabaserecord . generatesql ( ) when firstupdatekey be true
updated the loop condition in TableOutput . java to correct the calculation of the loop boundaries
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
fix formatstringchecker so that it do n ' t throw a npe
[ java ] ignore non - final variable in for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample file references in PDFExporterTest to ensure compatibility with PDF 1.5 and align sample
added unit tests for LdapUserDetailsMapper functionality to ensure correct mapping of role attributes to authorities
add ldap . read configuration read timeout to ldap context
updated TestDescription and TestDescription files to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , TextureRegion classes to improve code organization and maintainability
replaced ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to improve memory management by avoiding unnecessary iterator creation
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture state when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOldRotationYs variables in Workspace . java to adjust their values for folder creation and overscroll functionality to improve
updated OciConfigConfigSource to use ConfigProviderResolver for configuration retrieval to improve flexibility and maintainability of configuration handling
refactor Testjsig class to improve code readability and maintainability
fix mana calculation to account for stack capacity
regenerate client with updated copyright year ( # 4382 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings related to the class
refactor validation logic for ` tsFileProcessor ` in ` DataRegion . java ` to improve clarity and error handling to enhance code readability
added new classes Switch21 and Switch19 for pattern matching and null handling to enhance string manipulation capabilities in the switch statement
updated error messages in ComparableSubjectTest to use " test . MyTest . ComparableType " instead of " test . MyTest . Comparable
updated StreamHelper to use Internal for XML content handling and added a new TestStreamHelper class to improve XML processing capabilities and facilitate testing
updated capacity constraints and improved null handling in Int2ObjectCache . java to enhance code robustness and prevent potential NullPointerExceptions
sec - 1339 : add order on security filter chain in websecurityconfiguration
added a null parameter for the MARKET order type in BinanceTradeService . java to ensure proper handling of null values in order processing
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implementing Randomizer directly to simplify the class structure and improve code maintainability
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure consistent formatting of the
( chore ) camel - jms : fix camel - activemq component documentation
added error handling for ` NoSuchFieldError ` in ` SourceUtils . java ` and created a new test class ` testGetBound ` in ` SourceUtils
refactor filter predicate creation to use a new method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability
updated the handling of artifact names in BatchPropertyBeanPostProcessor . java and added cleanup methods in StepContextFactoryBeanTests . java to ensure proper resource
added a loop to read certificates by serial number to track the number of certificates read from the input stream before writing them to the trust store to enhance
refactor DNS fallback logic to handle null values more effectively to improve robustness and avoid potential NullPointerExceptions
ww - 4892 provide more context in exception message
changed the return type of the ` success ` property from ` boolean ` to ` String ` for the ` url ` field in ` DepositAddress .
updated the return statement in WindowsSecurity . java to ensure proper resource cleanup to improve memory management and prevent potential memory leaks
removed " address " and " phone " from the scope parameter in CommonOAuth2Provider . java and CommonOAuth2ProviderTests . java to simplify scope
replaced the direct assignment of the _ started variable with a new class ` Start ` and added a ` CountDownLatch ` to manage the start state to improve thread
added BIG _ DECIMAL _ 182 _ 04 to WLedBindingConstants and modified color retrieval logic in WLedHandler to improve precision in color representation
replaced the static method ` isValidCaller ` with a ` Set < String > VALID _ CALLERS ` in ` VectorizationProvider . java ` to improve
added a caseJSRInst method to the InstSwitch class to handle JSR - related cases in the switch statement
do n ' t register subscription if it ' s already active
refactor SQL update statements in DBMSProcessor . java to use StringBuilder for better readability to improve code clarity and maintainability by using
added elevation variable and conditional logic for setting elevation in ContactItemInflater to ensure elevation is set correctly for devices running Android Lollipop
rename identifier to avoid confusion
refactor file access to use ` AccessController . doPrivileged ` for better security to enhance security by restricting access to file operations through
refactor GroovyParserVisitor and GroovyPrinter to improve handling of " [ " and " ] " operators to enhance code clarity
improve error message when fetch invalidation meta - data fails
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : support
added a test for handling file downloads with non - Unicode characters to ensure correct handling of file names containing non - Unicode characters
replaced ` RuntimeException ` with ` CancellationException ` and added cancellation logic in ` AsyncResource . java ` and ` FingerprintScannerSample . java
added null check before calling handleCache to avoid potential NullPointerException when statistics is null
added a test for removing an object from a specified collection in MongoTemplateTests . java to ensure proper functionality of the delete operation on implicit collections
updated copyright year in multiple Java files to reflect the correct copyright year in the project
updated return statement formatting in Coder . java to improve readability of error messages
added a boolean flag ` mIsClearAllButtonFullyRevealed ` and updated scroll handling logic in ` RecentsView ` and ` Paged
refactor HiveIcebergMetaHook to use a new COMMON _ HMS _ PROPERTIES map to improve code readability and maintainability
refactor error handling to use a dedicated method for checking address usage to improve code readability and maintainability by reducing duplication
added " - cp " argument to the argument list in TestNestmateAttr . java to ensure the test class path is correctly configured for execution
replaced the use of ` java . util . logging . Logger ` with a direct method call to ` SchemaTextDetailType . verbose _ schema ` in
add miss @ override to fix build
# 161 - enh : add support for nested use - savepoint ( # 162 )
replaced ` fetchSize ` with ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and ` MemIntQpExecutor ` to improve thread safety
[ java ] remove backoff idle strategy from embedded pingpong .
fix httpclientintroductionadvice to return a non - null object instead of null
added HDP _ VERSION configuration and logging to SliderAppsViewControllerImpl . java to ensure HDP _ VERSION is correctly set and logged
refactor JavacProcessingEnvironment to streamline ServiceLoader handling and improve resource management to enhance code clarity and ensure proper cleanup of resources
added deep cloning functionality in ParameterizedRobolectricTestRunner and introduced DeepCloner in RobolectricTestRunner to facilitate object cloning
added a bind annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to control the display of stack trace in the web server
added a check to return null for OBJECT types in NativeObject . java to ensure proper handling of OBJECT types and prevent potential errors
replaced occurrences of ` OopField ` with ` OopField ` across multiple files to resolve ambiguity and improve code clarity
updated JwkKeyListView and JsonWebKeyEndpoint to use RSAPublicKey and ECPublicKey instead of RSAPublicKey to enhance serialization
[ gr - 33744 ] do n ' t write onlywritablebootimageheap when spawn isolates .
updated test cases in MBeanServerMXBeanUnsupportedTest . java to improve test coverage for MBeanServerMXBean functionality
removed import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unused imports
updated the ` Validator ` and ` validator ` methods to include ` getOwnerAddress ( ) ` and implemented the ` getOwnerAddress ( )
add a simple main ( ) method to make it easy to run a broker
updated sendCommand method calls to use byte arrays for min and max values to improve readability and maintainability of the code
add a check for empty index before create a new edge .
[ java ] remove duplicate correlationid from asynccommandidset .
added conflict handling for non - down files in FileDataStorageManager and FileDownloader to ensure conflicts are properly managed during file operations
updated type parameters in multiple classes to use generics for better type safety to enhance code clarity and prevent potential ClassCastExceptions
replaced usage of StrUtils with direct calls to splitFileNames ( ) across multiple factory classes to simplify code and reduce dependency on Apache Solr ' s
added support for Oracle and MySQL driver properties in DatabaseFactory to enhance database configuration flexibility
added a handler parameter to the MockMethodInterceptor instantiation to ensure proper serialization of mocked methods
updated time calculations in FileChangedExclusiveReadLockStrategy to use ` System . currentTimeMillis ( ) ` instead of ` new Date ( ) ` for better
[ hotfix ] [ table - planner - blink ] fix classloading issue in local execution
added buffer height change handling in TerminalView and TerminalTextViewOverlay to ensure terminal text view updates correctly when changes occur
updated method signatures in ConfigDispatcher . java to improve readability and formatting of the processConfigFile method to enhance code clarity and maintainability
refactor freeze and disable freeze logic in OperationActions . java and OperationRegistry . java to improve code readability to enhance clarity and maintainability
added support for insecure connections in SSL configuration to enhance security by allowing users to choose between secure and non - secure connections
refactor code to improve readability and maintainability by reducing duplication
replaced instances of ` nodeColumns ` with ` edgeColumns ` in ` ExporterGDF . java ` and ` ExporterGDF . java `
added cascade type to the @ OneToOne relationship in DefaultUserInfo . java to ensure that related entities are automatically saved to the database
log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4
updated the UTF - 16 encoding for the ISO - 8859 - 1 character in the response body in AsyncProvidersBasicTest . java to ensure proper handling
[ hotfix ] [ test ] remove unused test for rocksdbserializertypevariablesize
added static permissions handling in ProtectionDomain and SubjectDomainCombiner classes to enhance security checks to ensure proper handling of static permissions based on access level
fix nullpointerexception when recipe be null
refactor parsing logic in Parser . java to streamline index handling to improve code readability and maintainability
added a connection error dialog to the UploadMediaDetailsFragment to improve user feedback by informing users of connection issues
added a new test class ` Issue596 ` for handling unsupported media types to ensure proper error handling for unsupported media types in the application
changed the type of bits [ wordIndex ] from int to long in NodeBitMap . java to improve precision in bit manipulation operations
refactor ImportLayoutStyle class to improve code readability and maintainability
refactor ConsoleUIService to use TerminalIn instead of GitBashConfigValue for input handling to improve flexibility in input handling based on
refactor ShadowAccountManagerTest to improve test assertions and clarity to enhance readability and maintainability of the test code
refactor : remove unused variable
renamed methods and variables in Pairs and InPairs classes for consistency to improve code readability and maintainability
[ hotfix ] [ table - common ] do n ' t set negative timeout for put .
[ issue # 5060 ] fix npe in mqclientinstance ( # 5060 )
[ java ] : add source identity to source identity generation .
added a new file ` TopTabAction . java ` that implements a toolbar for managing tabs in the application
camel - 16400 : dynamic routers should use reactive engine to avoid oome
updated import statements in AggregateItemReaderTests . java and added @ Before annotations in AggregateItemReaderTests . java to improve test structure and ensure proper setup
updated the generic type of the Procedure class in AbstractObjectValueTypeMap . java to improve type safety and clarity
added functionality to count and display wikidata edits based on user context to enhance user experience by allowing users to view wikidata edits
added validation to ensure length is within acceptable limits to prevent runtime errors
do n ' t report negative value in dumbmethods
refactor CategoryDataset , CategoryRangeInfo , DefaultCategoryDataset , and SlidingCategoryDataset classes to improve code organization and maintainability
updated exception message to include acceptable credential types to improve error reporting for invalid configurations
updated the random number generation logic in TestVectorUtil . java to ensure that the values in v [ 0 ] and v [ 1 ] are within a
changed the return type of the compareBy method from int to long for date comparisons to improve precision in date comparison logic
added SSL property handling in TestUtil . java to enable secure connections by allowing SSL configuration
danielwagnerhall : add ability to download potentially harmful window file
added null checks before setting flight configuration to avoid potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in DLNAResource based on configuration settings
updated the handling of empty lists in DataTable . java and TableDiffer . java to return an empty list instead of null for topCells ( ) and
added a new static final String CustomIgnoreTag to the RobustJavaMethodParser class to conditionally remove specific ignore tags from section processing
camel - jdbc : do n ' t throw exception when update record with stale version
fix : beandefinitioninject processor should not try to inject bean that be not private
updated AboutActivity and PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and adjusted toolbar and fragment container padding to improve layout consistency and
deleted the ClusterNodeInfo . java file to remove unused class to simplify the codebase
updated return statement from true to true in ShieldedTransferActuator . java to ensure successful execution of the method
added debug output for standard and legacy ciphersuite selection in ServerHandshaker . java to improve debugging visibility during handshake
refactor template selection logic in ChooseRichDocumentsTemplateFragment and ChooseTemplateDialogFragment to improve clarity and maintainability of template handling in the
added a map to track duplicate node labels to improve error handling and logging for duplicate node identification
added a new file ` R2303044ListSelection . java ` to implement functionality for selecting a list item in a GUI
[ java ] : avoid duplicate publication registration .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to validate the behavior of a step execution with a compound property to ensure that the step execution
updated row count computation in StatsRulesProcFactory to use a new list of row counts to improve clarity and maintainability of row count calculations
added path validation and parameter setting logic in SpringBootDocBuildTemplate . java to ensure proper handling of API method paths and query parameters
improve performance of systray notification handling
updated ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` for improved caching behavior
improve error message when parse json error
added a conditional check for DEBUG before logging messages in WidgetsModel . java to optimize logging performance by avoiding unnecessary string formatting
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test for discount overlap in TestSimilarityBase . java to ensure accurate term
added checks for ` SimpleMailMessage ` and ` MimeMessage [ ] ` in ` SimpleMailMessageItemWriterTests ` and ` MimeMessage
added exit and quit methods to Global . java and removed the quit method from ScriptingFunctions . java to streamline exit functionality and improve code organization
updated LoanBrokerGateway and LoanSharkDetectorDemo to use Spring ' s ConfigurableApplicationContext for obtaining the loan broker gateway configuration to
renamed ` getFirstUnverified ` and ` getLastUnverified ` methods to ` findFirstUnverified ` and ` findFirstUnverified `
vmware : fix npe in vmware web service request context
updated assertions in ResinAcegiAuthenticatorTests to correct the order of authority comparisons to ensure accurate validation of authority mappings
updated the method calls in ECKey . java to include 32 - bit precision for byte conversion to ensure compatibility with larger byte values
fix fml . modstates system property not set correctly .
refactor account selection handling in ReceiveExternalFilesActivity to streamline account selection logic to improve code readability and maintainability by consolidating
improve error message when fail to connect to collector
added error handling for empty results in the validator smart contract call to ensure that a meaningful exception is thrown when the result is empty
updated JSON parsing to handle null values for settingsFile to improve robustness by preventing potential NullPointerExceptions
no effective change - remove unnecessary null check
updated TARGET _ MB and WINDOW constants from 10 _ 000 to 1 _ 000 and added a sink variable to optimize memory allocation for improved performance
added null checks for currentConsole before calling write methods in EditorConsole . java to avoid potential NullPointerExceptions when currentConsole is not initialized
[ flink - 20540 ] [ kinesis ] increase the refresh rate of kinesis client to avoid flakiness
replaced instances of ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java ` to improve code readability
added a package parameter to the test methods in T4501661 . java to allow commands to specify the package for testing purposes
update jetty version to 1.8 . 0 _ 31
do n ' t include shared dependency if it ' s already in the pluginbase
added a stream handling mechanism to manage ZipFile input streams efficiently
rename DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in naming conventions
added methods to run active and temporarily idle contexts in SequenceGeneratorSource to ensure proper resource management during event processing
[ hotfix ] fix checkstyle violation in blobserver
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java `
added support for ppc64 architecture in multiple files to ensure compatibility with additional processor architectures
updated the error message in RoboMonitoringInstrumentation to include a link to the GitHub discussion for resolving an intent to provide users with a reference link to the
replaced MINUTES and ROLLBACK _ TIMEOUT _ MINUTES with Long . MAX _ VALUE for timeout values in waitWithDeadline calls to simplify timeout handling
replaced instances of ` new Date ( ) ` with ` Instant . now ( ) ` for date formatting in ` DateUtilTest . java `
refactor BytesRef class to improve code readability and maintainability
added a Toast message to inform users that YouTube Player does not work on Lollipop to enhance user experience by providing feedback on updates
added checks for unterminated dollar quotes and named dollar quotes in SQL syntax to improve error handling for SQL syntax errors
added null check for mVibrationDuration and mVibrator before accessing its properties to prevent potential NullPointerException when mVibrator is null
updated table border and column background color settings in DotRenderer . java to improve visual consistency and alignment of table elements
added a method to check if a configuration variable is encoded in Hive to enhance configuration handling for query strings in the Hive framework
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
updated X509Certificate class to improve certificate validation logic
add support for proxy uri ( # 3903 )
added caching functionality to NetworkedCacheableImageView and updated background image handling in MainActivity to improve image loading efficiency and support for different Android SDK
removed unnecessary parameters from LauncherAnimUtils methods across multiple classes to simplify method signatures and improve readability
added controllersVersion to track the version of controllers used in the DependencyBank to ensure accurate versioning for controller dependencies
updated the implementation of ` LaunchedURLClassLoader ` to improve URL class loading efficiency
updated DataSourceHealthIndicator to use DataAccessUtils for result set mapping to improve data access efficiency and error handling
add no - cache header to disable caching
updated the warning message to use Locale . ENGLISH to ensure consistent formatting of the warning message across different locales
refactor SolrQueryParser constructor to accept an analyzer parameter to enhance flexibility in query parsing by allowing custom analyzer configuration
[ netbeans - 4892 ] add copyright notice for the project
removed an unnecessary semicolon from MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code readability and maintainability
added handling for void column vectors in VectorizedBatchUtil to ensure compatibility with specific vector operations
updated variable name from templateName to request . getName ( ) to improve clarity by using a more descriptive variable name
removed the isTypeMatch method from AbstractConfig . java to simplify the code by eliminating unnecessary type matching logic
[ java ] : add timestamp to session header in sessiondecorator .
rename ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and update method names accordingly to improve clarity and consistency in naming conventions
added a new annotation ` NoBootstrap ` and modified the bootstrap logic in ` BootstrapInserter . java ` to ensure that bootstrap annotations are only applied when
hbase - 20613 tabledescriptorchecker should use tabledescriptorbuilder . maxfilesize instead of tabledescriptor . maxfilesize
updated the handling of commit limits in BranchGraphServlet to use ` requestedCommits ` instead of ` maxCommits ` to improve clarity and ensure
added InvocationTargetException to method signatures in bug6794831 . java to enhance error handling by explicitly managing InvocationTargetException to improve robustness by
added a new constant BUILD _ ID to the BuildInfo class and updated related methods in CachingBuildEngine and CachingBuildEngineTest to
removed unused imports from TransactionCapsule . java to improve code clarity and reduce unnecessary dependencies
removed the parameter ` future ` from the ` markAsDone ` method call in ` HttpProtocol . java ` to streamline the method by elimin
added a default TezConfiguration to TezConfigurationFactory to enhance configuration flexibility by allowing source filtering
added a null check for keyPurposes before verifying its presence to avoid potential NullPointerException when keyPurposes is null
removed unnecessary check for mIsVisible in CustomPlaybackOverlayFragment . java to simplify conditional logic for better readability
added a null check for recent sounds before stopping the audio buffer to prevent potential NullPointerExceptions when closing the audio buffer
fix ` ` discontinuity report once ' ' bug
added DecimalFormat instances for various decimal places in NumberAxis . java to improve precision and readability of number formatting
refactor ` TargetGraphAndBuildTargets . builder ( ) ` to ` Builder . builder ( ) ` in ` TargetsCommand . java
removed the ` IndexFileNameFilter ` class and updated its usage in ` IndexWriter ` and ` SegmentInfo ` to simplify the file validation logic
add a config option to disable the texture stitcher for ladders . close # 798
added compressionLevel parameter to ApkBuilder and SignedJarBuilder classes to enhance compression control during APK building process
added a test for including static fields in a stub jar in MirrorTest . java to ensure correct functionality of static fields in the stub jar
added handling for BYTES data type in FieldSpec and updated UNDEFINED _ METRIC _ SIZE to UNDEFINED _ METRIC _ SIZE to improve
updated error message formatting in multiple test files to improve clarity and consistency in error reporting
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the superclass call in
updated SpringDataJPAJoinFetchPaginationTest and SpringDataJPAJoinFetchPaginationConfiguration to use Spring ' s caching mechanisms to
fix pronunciation model to support locale
added a builder for empty post body in SimpleHttp . java and updated test cases in TestHttpPlugin . java to enhance form body handling
added a dispatcher in ClientSideSlb to manage asynchronous operations in a concurrent environment
modified the setV2 method to account for flipped Y orientation to ensure correct vertical positioning of texture regions based on their Y orientation
throw invalidconfigurationexception instead of hazelcastexception for miss discovery strategy
added null check for contextPath in MetricsPublisher . java to ensure contextPath defaults to " NA " when it is null
[ drools - 7 ] fix nullpointerexception when re - initializing kiecontainer
added a new serialization header for the B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined it in SerializationHeader . java
added support for precompiled headers in CxxBuckConfig and AbstractCxxSourceRuleFactory to enhance flexibility in precompiled header
added security context handling for image updates using AccessController to enhance security by ensuring proper access control during image updates
updated import statements and modified method visibility in ObjectMap , ObjectSet , and OrderedMap classes to improve code clarity and encapsulation
changed the initialization of isDirect from true to false to ensure that isDirect is set to true in VertexBufferObject . java
remove duplicate code in maryclient . java
changed the return type of the ` localToAscendantCoordinates ` method from ` void ` to ` Vector2 ` in ` Actor ` and ` Group
pdfbox - 5764 : fix npe in randomaccessreadbuffer
added a null check for the context before calling closeHook to avoid potential NullPointerException when context is null
updated border spacing logic for folder layout in CellLayout and DeviceProfile classes to improve layout consistency for folder layouts in different container types
refactor ValueNumeric to use a dedicated method for parsing numeric values to improve code readability and maintainability by encapsulating value parsing logic
added a check for deferred authentication in FormAuthenticator to ensure that deferred authentication is handled correctly in the authentication flow
updated argument checks from " -- module - startd - ini = " to " -- add - to - startd " in StartArgs . java to
added a default partition value to dynamicPartValues in DynamicPartitionFileRecordWriterContainer to ensure a valid default value is used when partitionValue is null
[ hotfix ] [ stream ] fix checkstyle violation in streamgraph
updated return statements in DefaultArtifact . java to include classifier information when concatenating conflict IDs to ensure correct concatenation of artifact IDs with classifier details
camel - 16400 : camel - kafka - add test for offset rebalance
improve error message when annotation can not be load
rename jabber account registration to enable email notification .
refactor CryptoKey and CryptoKeyOrBuilder classes to improve code organization to enhance maintainability and readability
increased the expected message count in LumberjackMultiThreadTest from 125 to 4 based on available processors to improve test stability by accommodating
fix npe in glowplayer when player be dead
refactor Exchange class to improve code readability and maintainability
api : ensure api key be specify with secretkey
refactor MfaProvider and related classes to use a conditional check for Google _ AUTHENTICATOR to improve code readability and maintainability
refactor AbstractMetaDataExportMojo to improve code readability and maintainability
added SQL integrity constraint validation to ensure tables cannot be dropped due to materialized views being used by multiple materialized views
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in property naming conventions
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` to provide a custom executor service for testing purposes
added subgroup functionality to the menu in GroupTreeView to enhance user experience by allowing groups to be displayed in a subgroup context
updated variable names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` and modified
updated the process builder initialization in TestDynamicNumberOfGCThreads . java to use a new argument array for dynamic number of GCThreads to
changed the return type of ` getHostFlavorMap ( ) ` to ` ImmutableMap < String , Flavor > ` and ` getAllPossible
updated SQL statement construction to include create operations and table parameters to enhance table creation flexibility by allowing dynamic SQL syntax
replaced direct instantiation of ColorDrawable with a variable for the background alpha value to improve code readability and maintainability
test : migrate ctiteratortest to junit 5 ( # 4499 )
added ` clear ( ) ` method to ` CharTokenizer ` , ` KeywordTokenizer ` , and ` TokenStream ` classes to ensure proper resource management to
added a new test class ASTInitializerTest to ensure that the ASTInitializer class does not crash on block statements
added null and empty check for configurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to ensure proper configuration handling and prevent runtime errors
danielwagnerhall : remove testlocators . testlocators . testlocations . testlocations . testlocations .
pl : fix float to string conversion in pl ( # 1894 )
use getcurrentscope instead of getcurrentscope in aggregatelifecycle
updated touchable insets configuration in TaskbarDragLayerController . java to ensure proper handling of touchable region insets
removed a conditional check for ' ~ ' in FencedCodeBlockParser . java to streamline the code by eliminating unnecessary checks
added socketTimeout property to ConnectionFactoryImpl and related classes to allow configuration of socket timeout for socket operations
added a sleep delay in ElementAttributeTest to ensure proper synchronization during tests
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper character encoding for HTTP responses
refactor List class to improve code readability and maintainability
added a ` Path ` parameter to ` AsyncFileImpl ` and updated context handling in ` AsyncFileImplTest ` to improve error handling by
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are stable and may be modified in the future
nuage vsp : fix npe when nuage vsp device be not configure on physical network
rename ` retryUploads ` method to ` retryFailedUploads ` across multiple classes to clarify the purpose of the method and improve
updated Java version handling in ConstantPoolTagTests . java to ensure compatibility with the latest Java version
improve error message for warning
added a ` removeAllHeaders ` method to the ` AsyncHttpClient ` class to provide a way to clear the ` clientHeaderMap ` to improve resource management
replaced Vector with List in Main . java to improve performance and simplify code by using a more suitable data structure
updated DEFAULT _ GRID _ COLUMN from 4.0 f to 3f in AppPreferencesImpl . java to increase the default grid column for better layout
added a condition to check if forViewCreation is false in the query builder to ensure proper handling of view creation scenarios
updated regex pattern and assertion in TestHS2HttpServer . java to improve accuracy of date replacement logic to enhance test reliability by ensuring correct date
added error handling for snippetReflection . asObject ( Object . class , constant ) in GraphPrinter . java to improve robustness by gracefully handling potential exceptions
danielwagnerhall : use firefox ' s firefox driver instead of firefox itself
updated byteOffset calculation in ByteBlockPool . java and added a new test case in TestByteBlockPool . java to ensure correct allocation handling and validate behavior
make interoperationvalueencoder locale independent
added exception handling for unexpected errors in TcpTransport to ensure proper resource management and error reporting
add @ suppresswarnings ( ` ` serial ' ' ) to papplet to avoid warning
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class hierarchy and improve dependency management
add ` ` save change ' ' and ` ` discard change ' ' to jabref
added response type validation and service access checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and updated error logging in OAuth20AccessTokenEndpointController
added a check to ensure the index is within valid bounds before proceeding
added InputFormat parameter to table mapper job initialization methods to enhance compatibility with different input formats in the MapReduce framework
[ hotfix ] [ javadoc ] fix typo in abstractJRubymojo
improve error message when language do n ' t exist
added support for deprecated reserve commit duration in replication handler to ensure compatibility with newer Solr versions and improve error handling
replaced cache variable names with cacheForeignKey in DIHCacheSupport . java to improve clarity and consistency in naming conventions
changed the type of keyBytes from long array to Object array in ECKeyPairGenerator . java to improve type safety and reduce casting errors
[ hotfix ] [ runtime ] add jobstatus . cancelled
replaced the instance of ` RotationTouchHelper ` with a direct instantiation of ` RotationTouchHelper ` in ` RecentsAnimationDeviceState . java `
refactor port table handling in UniFiControllerCache . java to use isPortPoe method to improve code readability and maintainability by
changed the parameter types of ` lwp _ id ` and ` unique _ thread _ id ` from ` int ` to ` long ` across
remove old offer from the offer book if they have the same id
do n ' t assume that tls 1.1 be available for test
updated MockitoMethodInvocationControl and SystemClassUserTest to use type - based mock handling to enhance flexibility in mock interception by allowing
updated NotLoadedException constructor to include the current instance as a parameter to improve exception handling by providing additional context for the NotLoadedException
removed import of DisplayUtils and set EXTRA _ FILE to null in FileDisplayActivity . java to streamline code by eliminating unnecessary dependencies
added error handling and improved file management in StoreDirect and StoreWAL classes to enhance stability and ensure proper cleanup of old compaction data
added UI task snapshot handling in AbsSwipeUpHandler . java to improve task snapshot management during swipe - to - home animations
added a hidden flag to CommandArgumentDefinition and updated its usage in LiquibaseCommandLine to enhance command argument handling to improve flexibility in command argument
update the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct remote server
[ geos - 10641 ] use getSLD ( ) instead of getcatalogfromstyle ( ) for style group
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ignoring potentially malicious intents
added ` getId ( ) ` methods to ` TideMapLoader ` , ` AnimatedTiledMapTile ` , and ` StaticTiledMapTile `
refactor Manager class to improve code readability and maintainability
updated JDBC connection URL to use V _ 0 _ 13 for version control to ensure compatibility with the latest version of the iotDB driver
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance flexibility in schema handling during change log generation
replaced ` put . put ( channel . getName ( ) , registry ) ` with ` put ( channel . getName ( ) , registry ) ` in `
improve log for single benchmark execution failure
removed the final modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore ` to allow method overriding in subclasses
fix ` ` / ' ' in path in fileselectorfragment . ( # 1357 )
added tests for handling large response content in FastCGIProxyServletTest . java to improve test coverage for large response content scenarios
added a service to markReadService to enable interaction with ReadInteractionsService functionality
added a check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when lintClassfile is true
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5782 - default port number
added retry logic for SSLFactory reloading in TlsUtils . java to improve reliability by retrying failed SSLFactory reloads
updated date format from " HH : mm " to " HH : mm : ss " in ObjectMapperProvider . java to ensure consistency with ISO 8601 standard
improve error message when mocking private class
added functionality to control line endings on newline in InlineBoxing and LineBox classes to ensure proper handling of line endings with newline characters
updated filePathString initialization to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to streamline input stream creation and add a test for Windows character encoding to improve code readability and ensure
added a property to exclude certain endpoints from web exposure to enhance security by preventing exposure of certain endpoints
added a check to ensure that the current graph is a dynamic graph to prevent illegal argument exceptions
add eager init for spring bean injection ( # 7078 )
added support for suppressing exceptions in JSON path expressions to enhance flexibility in handling exceptions during expression evaluation
replaced ControllerLeaderLocator . create ( _ helixManager ) with ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter
updated usage messages in CLHSDB and HSDB for clarity to improve user understanding of command - line options
refactor chunk provider configuration in FaultTolerantStepFactoryBean and simplify listener registration in SimpleStepFactoryBean to improve code clarity and
[ beam - 8470 ] remove unused write . java file
refactor accessibility management to use a dedicated accessibility manager instance to improve code clarity and maintainability by centralizing accessibility management logic
add group display id to flutterusagestatistics ( # 744 )
refactor JavaSourceJar and JavaSourceJar classes to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class hierarchy and improve
refactor EnumDataTypeHelper to use a dedicated helper class for handling enumerated column values to improve code readability and maintainability by centralizing
updated the log path string to include a separator character to ensure compatibility across different operating systems
updated method names from ` setMapLocalWork ( ) ` to ` setMapRedLocalWork ( ) ` across multiple Java files to ensure
added support for dropping index tables in HiveMetaStoreClient to ensure proper handling of index table operations
added a check to disable scrolling when the view is not visible to improve user experience by preventing unwanted scrolling behavior
added a specific highlighter for non - Windows environments to ensure proper highlighting for SH - REPL in non - Windows environments
add miss hrs _ request _ parameter _ to _ http _ header for local variable
updated the method to use ` getRawPath ( ) ` instead of ` getRawPath ( ) ` for retrieving file paths to ensure correct retrieval of
added a space before the ' stageListener ' parameter in the removeCaptureListener method call to improve code readability and maintain consistency
changed the initialization of _ metadataComplete from true to false to correct the logic for determining if metadata is complete
added a THREAD _ POOL _ EXECUTOR for asynchronous task removal in RecentsAnimationController and ThumbnailSearchResultView to improve performance
added platform and release flavor handling in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to enhance
updated type casting logic in ` mmm Lower . java ` and added a new test class ` T6500701 . java ` to handle primitive types
added tests for handling new line characters in comments and Javadoc files to ensure proper formatting of comments and improve code readability
added a hubMode parameter to AbstractLiquibaseChangeLogMojo and its usage in AbstractLiquibaseMojo to allow dynamic configuration of the
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintainability
added error handling for missing linkDb in IndexerMapReduce . java to improve robustness by logging warnings when linkDb is not found
refactor setIndexerThreadPoolMethod to use reflection for obtaining its accessibility to improve compatibility with different thread pool implementations
updated the SMS address format in GameCanvasImplementation . java to simplify the connection string for better readability
added a ` copy ` method to the ` MapJobExecutionDao ` class and refactored execution handling in ` MapJobExecutionDaoTests
added a new file ` DownloadTest . java ` to implement a test for downloading a texture from a web page in the application
improve language handling for track selection
updated exception handling in GenericUDFRound to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of error messages related
added null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple Ant path matchers in SecurityConfig . java to enhance security by enabling specific request matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to include a conditional check for class names before creating bean definitions to ensure that bean definitions are only created for the
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
changed the access modifier of SUPPORTED _ Thing _ TYPES and ENERGY _ SUBSCRIPTION _ PERIOD from final to static in OpenWebNet
do n ' t run socket event processor if not need
deleted the SunToolkitSubclass . java file to the functionality provided by SunToolkit is no longer needed in the project
replaced ` MathUtils ` with ` Matrix4 ` for translation handling in ` DefaultRenderableSorter ` and added a method to check rotation or scaling in ` Matrix
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` to ensure proper registration of wrapper handlers for various data types
pdfbox - 4892 : convert alternate colorspace to rgb image , a suggest by valerybokov
replaced instances of ` CommonsApplication . HOME _ URL ` and ` CommonsApplication . MOBILE _ HOME _ URL `
camel - 16400 : camel - health - add health check base on user forum issue
fix nullpointerexception in thornchakram .
added a new test method ` testAlterTableWithIndexesExtendPk ` to the ` AlterTableWithViewsIT ` class to ensure that
updated variable names and added conditional assertions in FileFloatSource and TestFunctionQuery to improve code clarity and ensure proper document handling
added an ID field to the MongoRecordReader to ensure proper tracking of document identifiers
added disconnection methods to YeelightHandlerBase and DeviceBase classes to ensure proper resource management and prevent potential memory leaks
added support for AUTO _ INCREMENT in the database schema to enable automatic incrementing functionality in the database
fix : add resync period to sharedinformerfactory ( # 3685 )
cloudstack - 8470 : fix the bug that template detail be not be update when user vms be delete
refactor image handling in ShadowBitmapFactory to use RobolectricBufferedImage instead of a direct InputStream to improve code readability and maintainability by
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the codebase and improve maintainability
jbrules - 1349 move test data file to examples / broker / data
added legendTop and legendBottom parameters to the PieChart class to ensure correct vertical alignment of legend elements based on its properties
added a check to return early if the world transformation has no det to optimize rendering performance by avoiding unnecessary processing
added a new file ` MaryScriptCreator . java ` that contains a utility class ` MaryScriptCreator . java ` that reads and
added remote host attribute to the flow file in ListenHTTPServlet to enable tracking of the remote host for processing requests
refactor compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure log files are deleted if they exist to improve resource management
updated URL handling in ComponentDescription . java to simplify link retrieval by removing unnecessary xlink : href attribute
camel - 15836 - camel - aws2 - s3 : use s3 _ streaming _ upload _ timeout _ checker instead of s3 _ streaming
hbase - 25826 addendum : add log for regionserver . isclustershutdown ( ) when transition to closed state
added null checks for span before logging to avoid potential NullPointerExceptions when logging spans
updated the method to call ` opt . getOption ( ) ` to use ` opt . trim ( ) ` instead of ` opt . addActiveOption
added functionality to control wallpaper depth settings based on user preferences
updated the assertion in OverseerTest to verify success count in lowercase to ensure accurate validation of overseer ' s success state
removed the method ` getKernelVersion ( ) ` from ` LinuxFileStore . java ` and simplified the logic for determining the kernel version to streamline
refactor ExecConstants class to improve code readability and maintainability
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in TableSnapshotResultIterator and ScanUtil classes to enhance scan attribute handling in PhoenixConnection
added a check to ensure lowRange is non - negative before assigning it to prevent invalid range values
updated access modifiers of keySizeEstimator and valueSizeEstimator in AbstractCachedSource . java and added debugCacheSize method in AsyncWriteCache . java to en
updated the way the zone ID is set in HostJoinDaoImpl . java to ensure the correct UUID is used for the host ' s zone ID
[ zeppelin - 2894 ] fix livy interpreter to return utf - 8 string
simplified the removal of a file from the filesystems to improve code readability and maintainability
changed the type of ` obj ` and ` json ` from ` Object ` to ` String ` and ` String ` in ` HttpRequestBuilder . java `
increased the timeout duration for soft commits from 2 seconds to 5 seconds to allow more time for soft commits to complete during testing
log4j2 - 1349 log4j2 - 1349 log4j2 - 1349 log4j2 - 1349
refactor multiple dial - related classes to improve code organization and maintainability
updated error logging messages in SyncQueue . java for clarity to improve readability and maintain consistency in logging output
updated the version of ryuk from 0.4 . 0 to 0.5 . 1 in RyukContainer . java to ensure compatibility with the
updated method calls from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java `
fix npe in fmlclientlaunchprovider due to miss path mapping
[ hotfix ] [ test ] remove unused yarnclient from yarnitcase
add stats ofNoDataIncludedMaps to localmapstatsprovider .
deleted the AllTests . java file to remove obsolete test classes that are no longer needed in the project
added handling for non - breaking hyphen and zero - width space in AbstractWordConverter to support additional Unicode characters
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not starve memory
updated the method ` createRowKeyForMappedProperties ` to use ` getResultMappingsForRowKey ( ) ` instead of ` getResultMappings ( ) `
added eventHandled flag to UIText . java to track the completion of event processing
deleted the ` Controller . java ` annotation and renamed ` Weldby . java ` to ` WeldModule . java ` in the codebase to
ruby flavor : monitor capture group in empty check
added a protected variable ` liquibaseProLicenseKey ` to the ` AbstractLiquibaseMojo ` class to allow dynamic retrieval of the Li
mondrian : fix mondrian . mondrian . mondrian . mondrian . mondrian
[ flink - 30613 ] [ e2e ] make debug information generation configurable
mondrian : fix typo in javadoc
added support for friend paths in Kotlin compiler and jar steps to enhance functionality by allowing users to specify source paths for compiler and jar
added aliases for " BATK " , " BRAHMI " , and " MANDIC " in Character . java and modified Main
updated equality checks for commandId and role in ExecutionCommand and added a new method to convert string JSON strings to ExecutionCommand objects to enhance
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability and maintainability
added a toString ( ) method to SystemScope class to provide a readable string representation of SystemScope objects for better debugging and logging
updated CSS parsing logic to handle percentage and percentage values more accurately to ensure proper handling of percentage and percentage values in CSS parsing
added a test for retrieving all rows of a local index in LocalIndexIT . java to ensure correct functionality of local index operations
updated imports and method names in BaseAndroidTestCase and LanguageHelperTest classes to use ApplicationProvider instead of InstrumentationRegistry to improve code clarity and ensure
updated toast messages to use string resources instead of hardcoded strings to improve localization support and maintainability of the code
refactor conditions in RendererUtilities for clarity and consistency to improve readability and maintainability of the code
refactor KrakenStreamingAdapters to use ArrayNode for data retrieval to improve code readability and maintainability
added error handling for adding the FILESYSTEM _ CRC32 column to prevent SQLiteException when upgrading from 24 - > 30
remove system . err . println from asyncservletiotest
replaced direct calls to ` getDataSize ( ) ` with a new ` computeOnlineDataSize ( Statistics ) ` method to improve code clarity and
updated the ` buildView ` method to accept a ` Context ` parameter and set background resources for ` disableView ` and ` trackView ` to en
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` that accepts a ` Consumer < Authentication > ` for authentication validation to enhance
vpc : do n ' t set vpcid if it be already set
[ beam - 10955 ] skip savepoint test for 1.11
removed unnecessary whitespace in multiple Java files to improve code readability and maintain consistency
updated loop condition in Actor . java to ensure i is within bounds to prevent potential ArrayIndexOutOfBoundsException
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the BitmexExchange implementation
add a test case for relationship virtual metadata
added null checks for spatial in LodControl . java to enhance robustness by preventing potential NullPointerExceptions
updated token filtering logic in ConditionalTokenFilter , FixedShingleFilter , TestConditionalTokenFilter , and TestTestConditionalTokenFilter classes to ensure
fix unsafestorenode to use stateafter instead of this . graph ( )
replace super . address ( base + offset , value ) with io . address ( base + offset , value ) in BoundedMemoryIO . java to
added a check to verify that the CAS event repository is empty before proceeding to ensure that no events are present to avoid potential null pointer exceptions
removed unused parameters from AuthenticationAttrProcessor . java to streamline the code and improve readability
added a null check for a specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that a null
added a RuntimeException for unsupported typeface settings in CodenameOneTextPaint . java to ensure proper error handling and prevent runtime exceptions
added ` open ` method implementations across multiple file system classes to support reading input streams from a specified URI
danielwagnerhall : remove deprecate method ` fail ` in favor of ` fail ( message ) `
simplified the conditional check for item sizes in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a boolean flag for constructor mappings to improve performance by avoiding unnecessary object creation
updated foreign key constraint to reference " my - schema . TABLE _ NAME " instead of " my - schema . TABLE _ NAME " to ensure compatibility with
refactor filter handling in VectorizationContext . java to improve clarity and ensure correct evaluation of filter expressions in projection mode
updated the type of ` moveSelectorConfig ` from ` ConfigUtils ` to ` MoveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig ` to
replaced the instantiation of ReorganizeTableStatement with a direct method call to modifyDataTypeStatement to simplify the code and improve readability
updated cluster name references from " defaultCluster " to " DEFAULT _ CLUSTER _ NAME " across multiple classes to improve clarity and consistency to enhance
improve logging of peer connection failure
added support for multiple style string types in Nano . java to enhance flexibility in applying different style definitions
fix ( fixer ) : use adventureNBTConverter to fix block entity
updated the return message in NoToStringOnStringType to clarify that the method does not return a ` String ` to improve user understanding of the
updated JVM JVM flag from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to ensure compatibility with
refactor ` retryFailed ` method to return ` FailureContext ` instead of ` int ` in ` Invoker ` and add ` DataProviderRetry
updated the index of the token from 0 to bandwidth in BucketStateIEEE754 . java to correctly reference the correct array index for processing tokens
danielwagnerhall : add ` ` selectpopup ' ' and ` ` deselectpopup ' ' method to selen
updated doPrintEntry method to remove the boolean parameter for storePass to simplify the method signature and reduce unnecessary complexity
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity and shape in Dialog . java and Frame . java to ensure that the dialog cannot be undecorated , preventing illegal
changed the ` state ` field from non - final to final in ` DefaultProjectFilesystem . java ` to ensure the ` state ` field cannot be modified
updated Redis connection factory logic to utilize RedisPassword and RedisStandaloneConfiguration to enhance security by ensuring proper password handling for Redis connections
added lastseendelayedmessage property to track when a jabber message will expire .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to improve code clarity
replaced ` CreateShareOperation ` with ` OperationsService ` for sharing functionality to improve code clarity and maintainability by using a dedicated service for
fix : do not inject non - injected fieldpropertyinject when use @ inject
replaced calls to ` minBuildHeight ( ) ` with ` yStart ` in ` ClassicPlotManager . java ` to improve code readability and
http : / / issues . apache . org / jira / browse / amq - 4894 - fix npe in smackintegration
tmi - tiff : add support for interop sub - directory in EXIFreader
added support for ` ENABLED _ LS ` mode in ` VersionTargetGraphMode ` and refactored executor initialization in ` VersionedTargetGraphCache `
added a condition to check if the child format is a video format before parsing to ensure proper handling of video formats in the parser logic
[ hotfix ] fix checkstyle violation in autilabeling
added a static method to load native libraries in LwjglNativesLoader to enable dynamic loading of native libraries based on application context
added escape functionality to CSVRequestHandler and enhanced error handling in TestCSVLoader to improve CSV parsing capabilities and provide clearer error messages for invalid
added validation for GrantType . AUTHORIZATION _ CODE in ClientRegistrations . java and updated corresponding tests in ClientRegistrationTests . java
improve error message for self - suppression
updated SQL query to use a prepared statement and modified iterator initialization in ClientAggregatePlan to improve query accuracy and ensure proper iteration over results
added functionality to retrieve the RSquare value from the regression map to enable accurate representation of the RSquare value in the evaluation results
added null checks for request headers in ThreadContextMDCServletFilter to enhance robustness by preventing potential NullPointerExceptions
refactor code to use a local variable for MapWork instead of casting to MapWork to improve code readability and reduce casting overhead
refactor image loading logic to use a dedicated method for folder and country images to improve code readability and maintainability by centralizing image fetching
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a test for trusted issuers in JwtIssuerAuthenticationManagerResolverTests
do n ' t fail if resource be not readable
update interop method to use a boolean parameter
updated sleep duration from 500ms to 500ms in AbstractBasicMockingIntegrationTest . java to allow more time for operations to complete successfully
added a new file KernCrash . java that implements KernCrash text rendering to demonstrate and demonstrate the use of KernCrash
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure proper error handling during test execution
added a method to retrieve interface IP addresses based on the ` addPrefix ` parameter in the ` getInterfaceAddresses ` method to enhance functionality to allow
do n ' t kill housekeeper if it be already in use
updated the condition for checking the slave ack offset in the autoSwitch HA connection to ensure correct handling of slave acknowledgment in the transfer process
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` for testing the ` TreeMap ` functionality to ensure correct behavior of ` TreeMap ` operations in a
changed the type of ` results ` from ` Set < CategoryItem > ` to ` LinkedHashSet < String > ` and modified the ` doInBackground
added checks for today and birth leap years in ValidatorTest . java to ensure proper validation of date against today and birth year limits
added support for processing error codes in GrblController to enhance error handling by providing clearer error messages
added a conditional check for zero screens before returning the workspace scroll format to improve user experience by providing appropriate label based on screen count
removed the count parameter from the getTrades method and its usage in BittrexTrades and BittrexMarketDataService classes to simplify the method
updated prompt handling in ConsoleReader and MemoryHistory classes to improve readability and correctness of prompt processing
updated the path for the JDK file in JavaBuild . java to correct the concatenation of the file name to ensure the correct file path is used for
updated method calls to use ` getType ( ) ` instead of ` getDescription ( ) ` for better clarity to improve code readability and maintainability by
added a ` Consumer < String > ` parameter to the ` JFCModel ` constructor and updated related methods to accept a ` Logger < String > `
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil and DatabaseMetaDataTest to enhance functionality for managing view privileges in the database
added conditional checks for stable floats and Stable doubles in NaNTest . java to ensure tests are only executed on 32 - bit architecture
added a new file DesktopTaskbarUIController . java to implement a DesktopTaskbarUIController for managing hotseat icons in the taskbar to
added task count listener to the mod item adapter ( # 762 )
refactor methods in Files . java to improve code readability and maintainability
replaced ` Set ` with ` Collection ` for ` interceptors ` in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAuto
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` instead of implementing ` ServicesManager ` directly
log mod file name and mod id when generate pack info for mod file
chore : update gapic - generator - java version to 2.1 . 0 ( # 638 )
added growX and growY methods to Cell class to enhance cell resizing functionality
refactor DefaultInputHandler to use a more generic keyBinding map instead of a Map to improve code readability and maintainability by reducing
http : / / issues . apache . org / jira / browse / amq - 4894 - fix intermittent ci failure
replaced long array with byte array in MetricsMemoryTester and added memory fail count check in TestDockerMemoryMetrics to optimize memory usage and improve error handling
deleted the JobParametersPrototype . java file to remove unused or redundant code from the project
added a securityEnabled parameter to the MappingsTable class and updated related test cases to enable security functionality based on configuration settings
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _ CXX _
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable the DUMP _ TO _ FILE feature by default
do n ' t propagate eos propagation for afts codec
[ java ] do n ' t publish spy position if there be no spy .
added a condition to check if ` dbInfo ` is null or ` options . isNoInfo ( ) ` in ` BaseFormatter . java ` to
disable ssl by default
added XHTML output options to DOMConverter to enhance error handling by providing XHTML output
refactor assertions in Assert . java to improve code readability and maintainability
[ java ] add retain option to event and session .
updated JSON structure in EventSerializationTest . java to include testCaseName in failure messages to enhance clarity of failure outputs for better debugging
[ hotfix ] [ table - planner ] fix typo in sqlgroupedwindowfunction
updated import statements in LatexToUnicodeAdapter . java to ensure compatibility with the latest version of fastParse library
added read - write locks and modified SSL context handling in AbstractSessionContext . java to ensure thread - safe access to the SSL context and improve
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` for checking if ` cp ` is empty and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to replace ` CalciteSqlDialect
changed log level from debug to debug for no firmware update handler to reduce log verbosity and improve performance
added tests for null values in Date and Timestamp classes to ensure correct handling of null values in database interactions
refactor StringSubject and Subject classes to simplify string concatenation to enhance readability and maintainability of the code
added a test method to verify repository permissions for multiple teams in UserModelTest . java to ensure correct handling of repository permissions for different teams
added a new Java file ` Test7088020 . java ` that tests method handles with ` MethodHandles . findStatic ` to ensure proper
replaced the ` matchAudienceRestriction ` method with a ` contains ` method for checking audience URIs in ` Saml2ResponseValidator . java ` to
refactor ` afterAppAuthChanged ` method to ` afterAppAuthChanged ` in ` AbstractDataChangedListener ` and ` HttpLongPolling
replaced ` System . err ` with ` _ stderr ` in ` StdErrLog . java ` and ` StdErrLog . java ` to allow for
added a new constant SEPARATION _ ORDER in Warning . java and implemented logic to track the number of active stages in BasicEventSimulationEngine . java
replaced offlineTableConfig with realtimeTableConfig in the queryOptimizer to align query optimization with real - time table configurations
refactor HBase normalization logic in PhoenixHBaseAccessor and UpgradeCatalog240 to enable or disable HBase normalization based on configuration settings to
refactor SavepointV2 and FileStateHandle classes to improve code organization to enhance maintainability and readability
added Bluetooth class handling in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of Bluetooth class properties
change method name from ` contains ` to ` containsProfile ` to improve clarity and consistency in method naming
improve error message when list be empty
replaced ` graphModel . graph ( ) . unlockAll ( ) ` with ` graph . graph ( ) . unlockAll ( ) ` in ` Data
updated coreNodeName to use getCoreName ( ) instead of getNodeName ( ) to ensure the correct core name is used for node properties
chatactivity : do n ' t refresh the contact list if there ' s nothing to update .
fix typo in test
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codec compatibility warnings for Simple
updated type checks in ` mmm Types . java ` and added a new class ` t7005671 . java ` to enhance type safety by
updated triangle calculations in DelaunayTriangulator . java and added a seed in DelaunayTriangulatorTest . java to correct
added @ Override annotation to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl . java to improve clarity and maintainability of state transitions
added shadow methods for SQLiteDatabase and ContentValues in Robolectric and ShadowSQLiteDatabase classes to enhance testing capabilities for SQLite database inter
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas ` and ` LwjglGraphics
replaced ` Arrays . copy ( ) ` with ` ArrayUtil . ByteArrayComparator ` in ` BkdWriter . java ` to improve code readability and
updated Locale class to include a script attribute and improved default locale initialization to enhance locale management and ensure proper initialization of locale settings
updated method call from ` mIconCurrentTextAlpha ` to ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to ensure
updated warning message from Confimap to ConfigMap to improve clarity and accuracy of log output
updated import statements and removed unnecessary imports in DefaultConfigurationTestSuite . java and TokenRevocationEndpointTest . java to improve code clarity and reduce unnecessary dependencies
trim whitespace from token parsing in GzipFilter . java and GzipFilterDefaultTest . java to ensure clean input handling by removing leading or trailing spaces
updated the output type from WRITER to WRITER in Response . java to ensure consistency in output handling
updated the regex implementation property from JDK to JONI to ensure compatibility with the latest version of the Nashorn library
replaced ` LooperExecutor ` with ` FutureTask ` for asynchronous task execution in ` ViewCapture . java ` to improve performance and responsiveness
add support for ' style ' parameter to get style from voice .
added a check to ensure the parent folder exists before creating a folder to prevent errors when attempting to create a non - existent parent folder
updated IP binding from 0.0 . 0.0 to 127.0 . 0.1 to ensure proper IP address is used for node discovery
( chore ) camel - jbpm : fix typo in default handler name
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated class names from WorkModeToggleContainer to WorkFooterContainer across multiple files to improve clarity and consistency in naming conventions
refactor multiple Java files related to Dalvik functionality to improve code organization and maintainability
refactor : refactor defaultjavaprettyprinter to reduce code duplication
added memory freeing in OperatorContext to ensure proper memory management and prevent memory leaks
updated error message formatting in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to improve clarity and consistency in error reporting
replaced ` long ` with ` AtomicLong ` for eviction counters in ` ConcurrentLRUCache ` and ` FastLRUCache ` to improve thread
[ flink - 30613 ] [ table - planner - blink ] [ table - planner - blink ] fix the issue that javafx
updated the condition to check if the intendedDestination is an Inet4Address to ensure correct handling of Inet4Address instances
make sure to set the database and source root in the mainframe
added methods to MarkedClientEnabled and MarkedServerEnabled in AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to enable Solon Admin client and
[ hotfix ] [ table - common ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and removed it from MappedStatement to simplify timeout management and reduce unnecessary complexity
replaced ` hangingTscTimeout ` with ` options . hangingTscTimeout ` in multiple transpilation callback calls across multiple Java files to
added GeoLocationRequest and GeoLocationResponse classes to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocation requests and responses in the application
updated Preconditions checks in ArtifactFilesystem and ArtifactFilesystemTest to use BuildArtifact instead of SourceArtifact to improve clarity and consistency in error handling for
tika - 863 -- add unit test for jxl parser
apps - 2892 do not trigger concurrent modification in ggbscript
do n ' t send data when there be no data to read
added equality check for ` actual ` and ` expected ` in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated visibility checks in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR to enhance UI
fix npe in matdefeditorlelement when nav be null
do n ' t draw mow _ pin _ image if location be absolute
refactor ErrorOccuredInOnExceptionRoute class to improve exception handling clarity and maintainability
[ astro ] do n ' t schedule discovery result if location change
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability and maintainability
ignore test hang due to intermittent failure
updated import statements in GuiceFactoryTest . java to streamline dependencies and improve code clarity
added a system feature list to the RobolectricPackageManager class to enable tracking of system feature support in tests
added a new constant PROP _ PATH _ POSTFIX and modified the path handling logic in RCAFrameworkLoader . java and added a test for
added logging for the cancellation watch dog to improve debugging by providing visibility into the cancellation process
added a null check for enumerationValues before resetting it to avoid potential null pointer exceptions when enumerationValues is empty
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve code readability and
added asynchronous collectAndSendTelemetryData method to collect telemetry data to enhance performance by offloading data to a separate thread
removed unnecessary import statements and simplified the alterColumn method call in UpgradeCatalog260 . java to improve code readability and maintainability
updated error messages in BaseTableDataManager . java to provide clearer guidance on directory creation issues to improve user guidance for directory creation issues
refactor DatasetUtilities class to improve code readability and maintainability
added a method to display the selector ID in the key to enhance the output by including the selector ID in the output
updated debug log statement formatting in GouraudShadingContext . java to improve readability and consistency of debug output
updated the visibility of the taskbar in ` StashedHandleViewController ` , ` TaskbarDragLayerController ` , and ` Taskbar
updated import statements in KeyExchange . java to improve code organization and clarity
fix for http : / / issues . apache . org / bugzilla / show _ bug . cockroach / browse / cockro
updated file index handling in ServerMainTest . java to use a variable for file names to improve code readability and maintainability
added ` getMediaRecorderingMimeType ( ) ` methods to ` CodenameOneImplementation ` , ` MediaManager ` , and ` ImageIO ` classes
change the access modifier of the useShaders method from private to public in ShaderHelper and RenderTileEnchanter classes to allow access to the method from
druid adapter : fix bindablefilter test
updated ZkStateReader instantiation syntax in CloudSolrServer . java to improve code readability and maintainability
pdfbox - 4892 : disable external doctype declaration for now
added a new interface ClientRegistrationIdentifierStrategy to provide a mechanism for retrieving client registration identifiers
replaced a while loop with a while loop in UrlHelper . java to improve code readability and maintainability
rename ` checkVarargsDuringResolution ` to ` checkVarargsAccessAfterResolution ` and update related logic for handling varargs accessibility to improve clarity
refactor border property checks to use a helper method to improve code readability and maintainability
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance
updated imports and method signatures in InternalDropAllCommandStep . java , HubUpdater . java , and HubUpdater . java to utilize HubRegisterResponse
replace bitwise operations with Byte . toUnsignedInt and Byte . toUnsignedInt for better handling of unsigned integers in multiple classes to improve code clarity and
( chore ) camel - openTracing : fix checkstyle violation
updated CachingBuildEngine dependency from ENABLED to CACHE to enable caching functionality in the build process
changed the value of rangePannable from true to false in CategoryPlot . java to disable range scanning functionality
updated the logic for managing the main active page in AllAppsContainerView to ensure proper view management based on the current active page to improve UI respons
reformatted variable declarations in Visualizer2TopComponent . java for consistency to improve code readability and maintainability
added handling for CancellationException in FunctionTest . java to improve stability by preventing further processing under CancellationException
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to allow access to these constructors from other packages
fix typo in defaulttrackselector javadoc
added a sleep delay for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during compaction processes
updated fee currency from AUD to BTC in BTCMarketsAdaptersTest . java to ensure tests validate the correct fee currency for user trades
updated the table name from " Post " to " post " in multiple Java files to improve clarity and consistency in naming conventions
refactor Unicode class to improve code readability and maintainability
updated ` installAutoInstance ` method to use ` Service ` instead of ` ViewEntity ` and introduced ` updateHiveLLAPSettingsIfRequired
[ hotfix ] [ network ] fix javadoc typo in sendheadersfirstpublisher
camel - 15836 - camel - aws : use builder instead of deprecate jsondeserializer
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error message to provide clearer feedback for unsupported value types
refactor ` wrap ` method to use ` javacProcessingEnvironment ` instead of ` inner ` for better clarity to improve code readability
removed unused annotation imports from ParameterInfo . java to improve code clarity and reduce unnecessary dependencies
improve user experience by disable ac3 streaming
added a map to return a JSON response containing a " value " field with a null value to improve response handling by providing a structured JSON response
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement . java and DiskFileItem . java files to indicate that Commons DB
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL queries
refactor RTimerTree class to improve code readability and maintainability
updated package names from com . facebook . buck . rules . graphbuilder to com . facebook . buck . core . rules . graph
change gapX calculation in Letters . java to use Math . round ( width ) instead of Math . floor ( width ) and add a new test
updated the initialization of QueuedThreadPool and ScheduledExecutorScheduler to use a variable for clarity to improve readability and maintainability of the code
refactor ` ViewResultsFullVisualizer ` to use ` Box ` and ` JCheckBox ` for better layout management and improve error checking to enhance
added phone number descriptions in ScimUserEndpointDocs . java to provide users with information about their phone numbers
made deletefiles and indexfiles public to allow subclassing
added null checks for responseMap and responseMap to improve error handling and logging for HTTP responses
updated SolrRequestHandler class to improve request handling efficiency
added a check to ensure parallel is not equal to DEFAULT _ PARALLEL in XmlSuite . java to prevent potential issues with parallel settings
fix checkstyle issue in test
updated error handling for SCARD _ W _ REMOVED _ CARD to include SCARD _ E _ NO _ SMARTCARD to improve error
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress test output for clarity on purpose
camel - 16400 : camel - bindy - allow to bind multiple key - value pair at once
change default value of ` useOwner ` and ` useTimeStamp ` from ` true ` to ` false ` in ` JabRefPreferences . java `
changed the parameter type of ` runAndCheckException ` from ` Runnable ` to ` ThrowingRunnable ` and added a ` throwable ` variable to enhance
added null checks for via and pathFromSeed before hashing to improve robustness by avoiding potential NullPointerExceptions
camel - 15836 - camel - aws : improve the ability to configure aws - sdb component
updated version number from 4.1 . 1 to 4.2 in Jailer . java and LiquibaseXMLTransformer . java to
increase default cert validity to 90 second
added a smoothDelta variable and modified frame calculation in ThreadHandler . java to improve frame rate handling to enhance performance by introducing a smooth delta
added a null check for paginator in HttpBatchReader and modified rawUrl assignment logic in HttpScanBatchCreator to ensure proper handling of null
added null check for CompactionInfo client in Worker . java and created a test for it in TestWorker . java to ensure proper handling of null compaction
added fragment state saving functionality to ShadowFragmentActivity and corresponding test cases to ensure proper handling of fragment instance state during state changes
reformatted code for better readability to improve code maintainability and clarity
added a test for parsing Android color references to ensure that the ColorResourceLoader correctly identifies and handles Android color references
added error handling for NoResultException in AbstractJPAQuery to improve robustness by gracefully handling NoResultException during result retrieval
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5481 : add
updated preference key from ' l ' to ' LawnchairApp ' in DepthController . java to ensure correct context is used for wallpaper depth
removed the import of ProcessTools from LocalManagementTest . java to streamline dependencies by eliminating unnecessary imports
updated the ` updateTotalEnergyAverageUsage ` method to retrieve the head slot instead of the block timestamp to ensure accurate energy usage tracking by using the head
added null checks for extensions and improved string representation in ExtensionStack . java to enhance code robustness and prevent potential NullPointerExceptions
3 . x : fix flowable flat map error ( # 4701 )
added connection manager timeout configuration to improve connection handling and logging for timeout scenarios
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to ensure compatibility with the latest model testing framework
removed redundant calls to SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and BaseImageService . java to stream
updated caching logic in CachingBuildEngine to ensure output hash is calculated correctly when cache is not writable
camel - 14284 : camel - netty - allow to turn off use byte buffer by default
updated the method call to use the table name instead of the old name to ensure the correct table name is used for altering partitions
improve error message when create domain socket
rename enumtypehandlerserializertest to be more specific
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated hint settings for Java EE query and lock in SessionImpl . java to ensure consistent timeout settings for better performance
added a new class StaticLoggerBinder that implements LoggerFactoryBinder to provide a singleton instance for logging functionality
phoenix - 4892 remove duplicate call to familymap . put ( family , list ) .
added orientation checks in TaskbarManager to ensure proper handling of device orientation changes
escape xmpp jabber room name in xml format .
updated the ` longStackPut ` method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " equalsHashCode " ) annotations across multiple Java files to suppress warnings related to mutable
jbrules - 2835 : fix failure in executionflowcontroltest due to miss field
updated conditional statements in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and maintainability
updated NBWriteServlet to accept an unlimited parameter to enhance flexibility in handling write operations to accommodate different write limits
added a test for invalid block total difficulty in ImportLightTest . java to ensure that the system correctly handles invalid block total difficulty scenarios
updated the logic for determining seek actions in DefaultPlaybackController to simplify the condition for determining seek actions
updated ` NativeLibrarySupport ` to use ` CopyOnWriteArrayList ` instead of ` ArrayList ` for managing ` knownLibraries ` to improve thread safety
updated the calculation of bendAngle and bendDistance in AllAppsView . java to improve the accuracy of positioning based on dynamic uniforms
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper validation of the key format
added PrincipalResolver parameter to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable principal resolution for authentication metadata population
replaced ObjectMapper with JSONParser in DelegationTokenResponse . java to improve JSON parsing capabilities and handle parsing errors more gracefully
added a method to remove trailing slashes from the StringBuilder to ensure that the StringBuilder does not contain unnecessary trailing slashes
added ` matchesAny ` method to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching functionality
hbase - 26909 addendum : fix typo in error message
added event handling for water potion in BlockFire . java to enable fading of water potion to enhance gameplay experience by allowing fading
reformatted code for better readability in CellLayout . java to improve code maintainability and clarity
updated the calculation of decreasePercent and adjusted spacing in multiple classes to improve code readability and maintain consistent formatting
updated AsyncContentProducer and BlockingContentProducer to check for input readiness before invoking onReadUnready to improve error handling and ensure proper
added a null check for the WEIGHT _ FIELD parameter in DocumentDictionaryFactory . java to ensure that a valid parameter is provided to avoid runtime errors
updated plist variable handling in AppleBundle . java and added a new test for Info . plist substitution in AppleTestIntegrationTest . java to improve functionality to
updated bullet length and length in TurretBullets . java , modified tile collision checks in Damage . java , and added shooting
changed return type of adaptOrder methods from OrderCreateApiRequest to OrderCreateApiRequest in KucoinAdapters . java to ensure proper type casting for
added a new file ` PreParseGrammarTest . java ` to test XML grammar parsing functionality to ensure proper handling and validation of XML schema parsing
8278175 : enable all doclint warning for build of java . desktop
added font overriding functionality to ExtendedEditText to ensure consistent font management across the application
implement a fix for a nullpointerexception a report by pierre - antoine gr � goire ( pa . gregoire @ free . fr )
camel - 7999 : camel - cxf - default component should check if uri contain unsafe character
added an overridden setUpData method to JDBCGeometryTestSetup to ensure proper data setup in the test setup
removed the import of DumpHandler from MultipartFilterTest . java to streamline dependencies and improve code clarity
[ hotfix ] [ table - common ] do not stop restore restore task that be already cancel
make rmi registry creation configurable
use string . join instead of string . join for log output
updated display metrics handling and tests in ParallelUniverse , QualifiersTest , and RobolectricTest classes to improve accuracy of display metrics and
[ java ] add clustermemberid to service heartbeat counter .
updated the calculation of numAttributes based on the major version of TestThreadMXBean to ensure compatibility with versions 21 and above
modified the return value handling in CustomExpression . java to ensure correct handling of negative and positive infinity cases
improve log in ajaxlistener
added authentication endpoints and corresponding test cases in AuthenticityController and AuthenticityFormTest to enhance security and verify successful authentication flow to improve user
added assertion to check if the next node is alive in SnippetTemplate . java to ensure that the next node is not null before proceeding to avoid potential
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for HTTP requests
improve defaulttrackselector by remove redundant comparison
[ hotfix ] [ runtime ] fix typo in runtimeserialization
ggb - 161 crop the screen coordinate if crop be enable
refactor UnitOfWorkFactory class to improve code readability and maintainability
added a new variable ` allAppsCellWidthPx ` and updated related calculations in ` WidgetPreviewLoader ` and ` WidgetCell ` to use it to
tika - 2321 -- add content type name for mail content handler to avoid npe
updated URI construction to use local file identifiers instead of remote paths to improve clarity and maintainability of the code
added mark support to the Source class to ensure proper handling of input stream marking
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a configuration property to control error stack visibility on the error page to enhance user control over error handling behavior
bug 7448 : log warn when domain cleanup fail
sparc : remove unnecessary check for null foreign call
[ jbrules - 2054 ] deisiontableconfigurationadapter should not throw unsupportedoperationexception for legacy drl 5. x api
added a call to display the cancellation error message in CodenameOneActivity to improve user feedback by ensuring cancellation is handled asynchronously
increase default timeout for unbounded source test
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of parent resources
deleted MrefStat . java and MrefStat1 . java files to remove unused classes related to lambda method references to streamline the codebase
added a check for blank scope in DependencyInsight . java and updated scope handling in DependencyInsight . java to ensure scope is set to " compile
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability
use hamcrest assertion instead of junit in test
bitcoinuri : add support for multiple payment protocol request .
planner - 383 throw exception if collection wrapping be enable
removed duplicate assignment of folder info to streamline code by eliminating redundancy
do n ' t free jfr buffer if write succeed
[ hotfix ] [ table - common ] fix checkstyle violation in basicabstracttuple
updated LintUtility to utilize InputResource for loading linter configuration files to enhance flexibility in loading configuration files and improve error handling
replaced calls to updateBackgrounds ( ) with post ( new Runnable ) for background and paddings updates to ensure UI updates occur on the main thread
updated inventory tick handling to include an index parameter to ensure proper tracking of inventory tick events in the onInventoryTick method
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY event handling
[ hotfix ] [ doc ] [ doc ] add @ publicevolving annotation to statettlconfig
added null check for parameters in PreparedStatement and Array classes to ensure proper handling of null values to avoid potential NullPointerExceptions
[ hotfix ] [ table - common ] fix typo in archive tool
replaced occurrences of " \ n " with " \ n " in StringBuilder . java to ensure consistency in newline handling
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to validate JSON serialization of a database snapshot to ensure proper
added a private method ` removeTheTxAndBlock ` to the ` BroadTest ` class to remove transactions and blocks from the transaction cache to ensure
added support for " LensMaskOpen " and " LensMaskClose " commands in AmcrestHandler and DahuaHandler to
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildRuleFactoryParams `
refactor ChangeLogIterator constructor to accept a List of ChangeSetFilters as parameters to enhance flexibility in specifying change sets for processing
improve error handling in polyglotlauncher
[ ec2 ] use system property OPT _ OUT _ TRACKING instead of environment variable
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor whitespace handling in SpacesVisitor . java to improve readability and maintainability of the code
add miss ` ` nearCache ' ' property
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify visibility of a floated element with overflow hidden
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand `
replaced ` LIVE _ URI ` with ` PROD _ URI ` in ` KucoinExchange . java ` and added logging for host exceptions to
updated resource path handling in SpringResourceAccessor . java to improve clarity and consistency in resource path management
updated MICROGRAM _ PER _ CUBICMETRE label from " μ g / m " to " µ ³ "
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure that the mask is
deleted the Tls12SocketFactory . java file to remove unused SSL socket factory to streamline the codebase
refactor texbibentriesresolver to reduce duplication
added a method to check if Robolectric is running in a Robolectric legacy mode to ensure compatibility with Robolectric ' s
added a check for FirebirdDatabase to return the DatabaseDataType for DOUBLE PRECISION to ensure compatibility with Firebird ' s DOUBLE PRECISION handling
added null checks before setting the data source in DefaultBatchConfigurer . java to avoid potential NullPointerExceptions when the data source is not initialized
add a new package - info . java file for the gestalt unit test .
updated ping command from " www . google . com " to " 127.0 .0.1 " and modified test timeout annotations in OutputStreamTest .
no effective change - refactor ebeanserver _ savealltest to use try - with - resources
updated TermScorer to conditionally use PostingsEnum based on scoreMode ' s needsScores setting to ensure appropriate scoring behavior according to user preferences
dataflowmetrics : fix nullpointerexception when jobmetrics be empty
cloudstack - 4892 : fix npe in listvirtualmachines api .
refactor DynamicPartitionPruner to utilize a new method for retrieving target object inspectors to improve code clarity and maintainability by
added a method to remove build artifacts from the filesystem to ensure that existing build artifacts are removed before execution
added row selection logic to the table to ensure that only valid rows are selected in the table
use assertarraystoreexception instead of assertThrows
refactor PropertySource class to improve code readability and maintainability
added environment name and user agent parameters to HttpClientBuilder and HttpClientConfiguration classes to enhance HTTP client configuration flexibility by allowing custom environment identification
refactor session creation and restore logic in MemorySessionStore to use a dedicated restore method to improve code readability and maintainability by reducing duplication
updated assertions in IssueTest . java and changed return types of getResults ( ) to Set < Object > in Reporter . java to improve clarity
nifi - 7999 : fix npe in consumeews when content type be null
actiationrequestdenied event add to character system
refactor GraphApplet to improve readability and maintainability of the code
added a method to update the snapshot radius of task views in RecentsView and removed it from TaskView to ensure consistency in snapshot radius updates across
added logging for generated swagger content in StaticMicroserviceVersions . java to improve traceability of generated swagger for 3rd party services
changed the return type of the ` put from ` void ` to ` int ` in ` ArrayMap ` from ` void ` to ` int ` to
updated KafkaContainerCluster to include startup timeout configuration and improved error handling in Kafka container tests to enhance system stability by ensuring proper startup
http : / / issues . apache . org / jira / browse / amq - 4894 - do n ' t retry send message
refactor header addition logic in StaticServerHttpHeadersWriter to ensure headers are only added if they do not already exist to improve efficiency by avoiding duplicate
added package access checking for event listeners to enhance security by ensuring proper access control for event listeners
added a new ` CustomAdapter ` class and modified ` onCreateView ` method to accept a list of ` applicationsList ` and ` imageList
updated the applyIcon method to handle nullable Task objects to prevent potential NullPointerExceptions when either the iconView or task is null
refactor DownloadStateCursor to use try - with - resources instead of try - with - resources for better resource management to ensure proper closure of DownloadState
fix bug in basesqsmtosqlastconverter that cause a classcastexception when compile with java 8
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorProjectionItemReader , and HibernateCursorProjectionItemReaderTests to
refactor datainputstreamwithwithtimeout to use thread pool
added support for the ENABLED _ TS mode in VersionTargetGraphMode and implemented it in VersionedTargetGraphCache to enhance dependency management by allowing parallel
refactor UpgradeCatalog150 class to improve code readability and maintainability
rename networkparameters . testnet3 to networkparameters . oldtestnet
danielwagnerhall : do n ' t update object if there be only one select geos
updated onboarding preferences handling in AppsDividerView . java to improve null safety and clarity in onboarding logic
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve resource management and enhance error logging during index operations
pdfbox - 4892 : do n ' t clip non - existent path on save
removed synchronization for localAddress assignment in SocketChannelImpl . java to improve performance by avoiding unnecessary synchronization
added a method to add multiple values to a row in TemplateTransformer . java and a corresponding test in TestTemplateTransformer . java to enhance
added a method to check if the operating system is Windows and updated file renaming logic in Wallet . java to ensure compatibility with Windows file operations
replaced ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader . java ` and ` Code39Writer .
improve error handling in type system code generation
removed unnecessary checks for stored fields in IndexingChain . java to simplify error handling and improve code readability
fix ( sql ) : handle timestamps with nanosecond
removed conditional checks for postedRunnableStacktraces in LwjglCanvas . java to simplify stack trace handling and improve readability
updated the description of the AbstractGCSProcessor class to include a space before the HTTP Host header to improve readability and consistency in the documentation
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and consistency in method naming to en
updated directory handling in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " instead of null to improve clarity and consistency in directory
refactor ` FaultTolerantChunkProcessor ` to use ` data . countCount ( ) ` instead of ` input . sizeCount ( ) `
updated import statements and modified file handling logic in FileWithTabs . java and T4994049 . java to improve code clarity and ensure
replaced direct return statements with an assumption that checks if the TerminalFactory is not an instance of WindowsTerminal in ConsoleReaderTest . java to streamline the
fix checkstyle issue in getfeedbacksessionsaction
adjusted the calculation of newSelection in AllAppsView . java to adjust the selection criteria for improved user experience
bugfix # 20912 , do n ' t call notifyclientonresults availability when there be no profile
added loading and refreshing functionality in DataModelManagerDialog , DbConnectionDialog , and ExportPanel to improve data management and ensure proper cleanup of
updated variable names from ` writeBuffer ` to ` WRITE _ BUFFER _ SIZE ` across multiple classes to improve code readability and maintainability by
refactor SegmentInfo handling in DocumentsWriter to utilize SegmentInfo to improve clarity and accuracy of segment size index calculations to ensure accurate segment size
added null check for dvert field to prevent potential null pointer exception
refactor FileDisplayActivity class to improve code readability and maintainability
replaced the instantiation of UnsupportedOperationException with a custom implementation to improve error handling by avoiding unnecessary stack trace filling
updated the calculation of line height in LabelPainter . java to use average of lines for accurate height representation
updated RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility in handling display - related functionality
added a check for quoting an already - quoted string before processing to ensure that quoting does not occur multiple times in the string to avoid potential errors
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` instead of ` Long . valueOf ( s ) `
added a new test method ` testBig ` to the ` ServerDatagramConnectorTest ` class and modified the ` name ( ) ` method to
updated the order of parameters in the test assertion from " COUNTRY _ CODE _ S : " to " COUNTRY _ NAME _ s "
refactor Cache class implementation to improve performance and maintainability of caching logic
updated variable names from " e " to " ev " in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
removed unnecessary imports and updated the counting logic in TestUnifiedHighlighterTermVec . java to improve code clarity and ensure consistent counting behavior
added a JTable to display a number of rows in a persistent JTable to facilitate testing of the GcodeTable functionality
updated WEBAPP _ CONNECT _ TIMEOUT to use a configurable value instead of a hardcoded value to allow dynamic adjustment of the web application connection timeout
updated variable names and improved formatting in several Java files to enhance code readability and maintain consistency in naming conventions
updated TestMediaService . java file to improve media handling functionality
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to streamline the code by
add tool to print market in a sorted order
added validation for invalid hostname components in EndpointAddressInterceptor . java to ensure that only valid hostname components comply with specified requirements
added multiple ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods in ` AccountProxy ` , ` HttpAccount ` , and
refactor ServerSpanThreadBinder class to improve code readability and maintainability
updated BulletPhysics and BlockItemSystem to use userData instead of getUserPointer ( ) to ensure accurate retrieval of user data and improve block bounds calculations
updated the builder to include " the _ geom " and " number " fields to enhance the shape data representation by including additional metadata
replaced calls to ` callGasWord ` with ` gasCost ` in ` VM . java ` and removed unused imports in ` Program . java ` to
refactor parameters handling in mmm Parameters . java to improve code readability and maintainability
added a method to ignore null values in the piePlot to enhance data integrity by preventing null values from being processed
refactor bundle loading logic into a separate method to improve code readability and maintainability
pdfbox - 4892 : fix typo , a suggest by valerybokov
do n ' t allow editing during a script action
added userModified flag to LoginSamlAuthenticationProvider to track whether the user has been modified
added a new file TestSealedObjectNull . java that checks for null seal objects to ensure that the SealedObject class correctly handles null values
replaced ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve cl
updated SNOW detection logic in BlockEventListener . java to ensure compatibility with version 1.16 . 5 and improve event handling
added trade ID handling and updated Trade class to use it to ensure trades are processed only if they are newer than the last trade ID
added error handling for closing the HMS connection to improve stability by logging exceptions during connection closure
use random seed in glowserver . seed ( ) to avoid crash
added a new device profile for " Nexus 5 " in DynamicGrid . java to support Nexus 5 functionality in the application
2 . x : fix race condition in flowableRefCount and observablerefcount
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve encapsulation and maintainability of the code
[ gh - 4635 ] support whitespace around text ( # 4635 )
added checks for non - empty file names in SaveTask . java and created new test cases in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
http : / / issues . apache . org / jira / browse / amq - 3894 - log4j2 - allow to
replaced LengthLike with NonNegativeLengthLike for PADDING to ensure that the padding value is non - negative
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation and improve code readability
refactor sootbuilder so that it do n ' t depend on soot .
updated JUnitRunner and AndroidPlatformTarget to utilize Joiner for building Android SDK paths to improve clarity in error messages to enhance user under
updated cacheSize from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
updated conditional logic in InvocationStageTrace . java and modified test data in TestInvocationPublishModelFactory . java to ensure correct handling of zero values
add a try - catch block to handle potential null pointer exception when loading a key store
updated serverSocket initialization to use a dynamic port instead of a fixed value to improve flexibility in testing by allowing dynamic port assignment
fix for bug # 56215 - do n ' t update the parent of the split pane when it be resize
add support for ARB shaders and tessellation shaders in GLRenderer . java to enhance compatibility with ARB shaders and tessellation shaders
refactor PopulatorContext class to improve code readability and maintainability
do n ' t send save notification for project without project data
updated ZQLJobManager to use a configurable file encoding for JSON output to enhance flexibility in handling different character encodings based on system properties
added a check to ensure that the last argument is not null before processing to avoid potential ArrayIndexOutOfBoundsException
replaced hardcoded string values with a predefined prefix string to improve maintainability and readability of the code
camel - jbang - deprecate suffix - strategy option in favor of -- suffix - strategy
updated debug logging statements in DerbyDatabase . java to improve clarity of error messages for better debugging
[ cep ] fix flaky test
replaced parallelStream ( ) with direct stream ( ) for improved performance to optimize data processing efficiency
updated the handling of the liquibase . hub . mode property in HubUpdater . java to ensure Liquibase Hub properties are only updated
added constants for IBM J9 VM and Eclipse OpenJ9 VM versions in Constants . java and implemented version validation in TestDDRExtensionGeneral .
refactor font handling in FontUtilities to improve logging output to enhance clarity of font request messages and facilitate debugging
added HTTP version handling in NegotiatingServerConnectionFactory to ensure compatibility with specific HTTP versioning logic
added RateControl import and set no rate control in MaxConcurrentStreamsTest . java to ensure proper handling of HTTP / 2 requests without rate limiting
added a new file ` Test6741426 . java ` that implements a custom JTextField to demonstrate the use of ` NimbusLookAndFeel `
updated error message formatting in CsrfAwareEntryPointAndDeniedHandlerTest . java to improve clarity of CSRF token verification failure output
added a null check for dbMgdPath in conditional statements to ensure that dbMgdPath is not null before proceeding
fix : move s3copyobjectrequest to core
replaced ` accentColor ` and ` preferenceScreen ` with ` viewThemeUtils . files . themePreferenceCategory ` for setting preferences to simplify
improve error message in temporaryfolderusagetest
refactor MappingMongoConverter to use ClassTypeInformation constants instead of raw types to improve code readability and maintainability by reducing redundancy
fix npe in clientconfig . addaddress ( ) for empty address
added " keynectisrootca [ jdk ] " to the VerifyCACerts class to support certificate validation for root certificates in the application
[ logstash ] use int instead of void for compute
added a conditional check for popup state before setting menu mode in ModeToggleMenu . java to ensure menu behavior only triggers when the popup is visible
pdfbox - 4892 : fix off - by - one error , a suggest by valerybokov
added a new file FinalizerInfoTest . java to test the initialization and finalization of garbage collection objects
( chore ) camel - cdi : fix checkstyle issue
refactor BurningManService to handle custom addresses for burning man transactions to improve flexibility in managing burning man
refactor StringSubject class to improve code readability and maintainability
updated the array size of longData from 1000000 to 1000 and added an @ Ignore annotation in BatchValidateSignContractTest . java to optimize memory usage and
corrected spacing in the setmaxInboundMetadataSize method declaration to improve code readability and maintain consistency
updated query string handling in Search . java to replace " from : " with " from : " in RetweetActivity . java to ensure consistent formatting of
removed a conditional check for forRebalance in SimulatorDiscoverer . java to simplify the code logic
added a POST request mapping for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint . java to enable users to import YubiKey
updated shader classes to use a more generic material type instead of a hardcoded string to improve flexibility and reduce code duplication
added null check for ` cnt ` in ` paintOnTopLoop ` to prevent potential ` NullPointerException ` when ` cnt ` is null
refactor AbiWriterProtocol class to improve code readability and maintainability
added a null check for subName in the caption assignment logic to ensure caption is set correctly when subName is null
change data flag from IMMOBILE to GRAVITY in EntityItem . java to enhance data visibility for better user experience
updated condition checks in CustomExpression . java for null safety and improved null handling to enhance code robustness and prevent potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ` in ` VoteResultService
added a test case for the Postgres database connection in PostgresTest . java to ensure proper functionality and performance of the database connections
replaced occurrences of " } " with " . " in SubtitleUtils . java and RemoteUtil . java to ensure consistency in string manipulation
updated line separator handling in DefaultJavaPrettyPrinter to use a constant for regex to improve code readability and maintainability
use atomicreferencefieldupdater instead of atomicreference
added a null check for excludeSet before adding queries to the query list to avoid potential NullPointerExceptions when accessing excludeSet
add support for merging multiple thing in the same bridge ( # 3971 )
improve error message for unknown command
added a check to return the file if it is not empty before returning it to avoid potential null pointer exceptions
[ geot - 5951 ] fix date conversion for ` ` t ' ' to ` ` + ' '
added a method to find posts by their slugs based on their slugs in SpringDataJPALockTest and a query parameter in Post
refactor access control for DBA recycle bin in OracleDatabase . java to improve error handling and ensure proper connection management
added a static import for SimpleClientHttpRequestFactory and set connection and read timeout to configure HTTP client timeouts for improved reliability
updated file path handling in SourceTest . java to improve clarity and correctness of file existence checks
graalvm : remove hardcoded graalvm . version property
added refresh token validity handling in ClientAdminBootstrap to ensure proper management of token validity settings
updated the Android API version retrieval logic to ensure compatibility with different Android SDK versions
updated variable names and logic in PropertyPlaceholderHelper . java for consistency to improve code readability and maintainability
updated certificate issuer details in Resources . java to include the signature algorithm name to enhance clarity of certificate details for better debugging
refactor ZkSolrClientTest to improve collection handling and synchronization to ensure collections are processed in parallel to enhance reliability and prevent race conditions to
added import for BigInteger in MongoMappingContext . java to support BigInteger data type handling in the mapping context
added a condition to check if the buttonText is empty before displaying toast messages to improve user experience by preventing unnecessary toast notifications
added a condition to disable synchronization for MEncoder in MEncoderVideo . java to improve performance by avoiding unnecessary synchronization
increased the default NIO event loop thread count from 10 to 15 in ConfigurationProperties . java and its usage in ConfigurationPropertiesTest . java to optimize
changed access modifiers of classes and methods in CountMin4 , IncrementalResetCountMin4 , and AdaptiveWindowTinyLfuPolicy to
added sorting functionality to ExternalFileField and created a new test class for document addition to enhance file handling capabilities and ensure proper sorting behavior in
updated error handling in DoiFetcher to provide clearer context for connection issues
refactor event handling in OpenRocketSaver and add source attribute handling in FlightDataBranchHandler to improve clarity and functionality of event
changed the visibility of the check method from private to protected to restrict access to the method for better encapsulation
added synchronization handling for file operations in FileActivity to improve user experience by notifying users when a file synchronization fails
updated the URI construction in ThumbnailsCacheManager to use a URL encoded file path to enhance security and prevent potential URL encoding issues
added a check to ensure the variable is initialized before proceeding with further operations to avoid potential null pointer exceptions
updated the calculation of total in IntHashSet . java to ensure correct addition of values to the total variable
added a check for locked feed updates in FeedRefreshUpdater . java to ensure that updates are only attempted when the feed is locked
refactor ACE handling logic in SolarisAclFileAttributeView . java to improve readability and maintainability of the code
refactor edge handling in LatLonTree to use an array instead of a list to improve code readability and performance by eliminating unnecessary
added IOUtils . closeQuietly to ensure proper resource management and prevent potential memory leaks
fix bibtex parser comment contain \ n or \ x0d
added strict mode handling in properties file parsing to improve error handling for unknown parameters in strict mode
fix validation of custom constraint with @ constraint
camel - 14284 : camel - http4 should use http4 instead of http
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to wait for processes to output before proceeding to
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve code readability and maintainability
replaced string concatenation with StringBuffer for details to improve performance and readability of the code
replaced ` Type ` with ` RoboType ` in multiple files to improve clarity and consistency in the codebase
[ java ] abort record descriptor poller when dispatch be complete .
added cacheKey and lookupKey attributes to EntityProcessorBase and updated related logic in TestCachedSqlEntityProcessor to ensure proper handling of cache attributes
added a new file PutfieldError . java that tests the behavior of the IncompatibleClassChangeError class to ensure that the IncompatibleClassChangeError
fixed - private - to - public mapping of private - to - public address do n ' t work correctly
add more logging when memtable flush reach throughput
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple
removed duplicate code for encodedLength ( ) in Flyweight . java to improve code readability and maintainability
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
added handling for ` java . lang . NumberFormatException ` and ` RuntimeException ` in ` FindNullDeref . java ` to improve error handling for specific
[ hotfix ] [ runtime ] remove unnecessary lock object from tasklocalstatestoreimpl
replaced calls to ` getResources ( ) . getString ( R . string . just _ now ) ` with ` getResources ( ) . getString
updated type checks for DeepShortcutView and DeepIconView in Utilities . java and FloatingIconView . java to improve code readability and maintainability by
updated ` JwtClaimValidator ` to use ` Object ` instead of ` String ` for issuer validation to enhance type safety and improve clarity in
refactor ` buyQuickRate ` method to ` getBuyQuickRate ` and ` getSellQuickRate ` methods in ` Coinmate `
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it to centralize coverage configuration and improve code organization
added a check before registering sticky events in ThumbnailView to ensure sticky events are only registered if they are not already registered
added ASCII - only handling for normalized strings in NormalizerBase . java to ensure normalization is performed only on valid ASCII characters
[ hotfix ] [ runtime ] fix check for migration task in jobcoordinatorservice
added error handling for SQL update failures in SpillableGroupByIT and NoOpStatsCollectorIT to ensure proper error reporting for SQL update failures
( chore ) camel - cometd : fix checkstyle issue
added support for HTML5 compliance in the HtmlTag class to ensure compatibility with HTML5 standards
added a closing < br / > tag in HtmlCoreReport . java to improve formatting of HTML output to ensure proper HTML output consistency
updated ramBytesUsed calculation to handle null scores gracefully to improve robustness by avoiding potential null pointer exceptions
replaced ` JsonNull ` with ` TypeToken ` in ` CustomTypeAdaptersTest . java ` and added a new ` StringHolder ` class
added extra data to mining parameters in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure correct handling of mining parameters during merging
added a static final map to track the number of arguments passed to the parseFile method to improve flexibility in handling command line arguments
refactor PathParamServerEndpointConfig class to improve code readability and maintainability
update migration rule listener to use configured threshold
refactor ` attach ` method to accept ` Object partOrList ` instead of ` Object part ` to enhance flexibility in handling different list types
[ hotfix ] move twitterbootstrap / css / bootstrap - responsive . css and twitterbootstrap / js / bootstrap . min .
removed the pPOSTag regex from SpanishTreebankLanguagePack . java to simplify category parsing logic to improve code readability and maintainability
hhh - 14657 - deprecate uniquekeyloader in favor of uniqueentityloader
hbase - 25809 fix potential npe in regionserverflushtableproceduremanager ( addendum )
bugfix : do n ' t call super . setsize if width or height be zero
do n ' t call fillpool ( ) if not need
updated assureMatchVersion ( ) method implementations across multiple filter factories to ensure consistent versioning behavior to improve clarity and maintainability of the code
fix proxying of executablemethodwriter . isabstract ( ) with executablemethodwriter . isinterface ( )
jbrules - 2835 : fix parsing of comma in drlparser
refactor multiple subject classes to improve code organization and maintainability
improve error message when payload length be negative .
move publishsubscribechannel to dispatcher instead of config
changed data types from String to Long for executionId across multiple classes to accommodate larger execution IDs for improved data handling
added width and height parameters to the digest to enhance image processing to support larger image dimensions
added imports for MessageFormat , CoreAdminParams , and LocalSolrQueryRequest in SolrConfigHandler . java and SolrConfigHandler . java to enhance
updated the delayUntil variable to use the current time as a second instead of a fixed value to improve synchronization efficiency by reducing the frequency of automatic synchron
updated variable name from ' afterConversionTime ' to ' afterConversionTime ' in SegmentV1V2ToV3FormatConverterTest . java to
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a string concatenation to improve code readability and maintainability by
added URI handling and improved error logging in DefaultPackageScanClassResolver . java to enhance URL processing robustness and provide clearer error
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new file SpringSecurityAuthenticationSource . java that implements Spring Security ' s authentication mechanism to provide support for Spring Security ' s authentication source
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization to enhance maintainability and readability of the codebase
updated minimum SDK version from LOLLIPOP to KITKAT to ensure compatibility with newer Android features and improvements
replaced auto - suggesting dialog with a cached list of file names to improve performance by avoiding repeated dialog calls
added a new test method ` testNew ( byte array ) ` to ` TxInputUtilTest ` and updated assertions in ` StoreAPITest ` to
updated the parameter name from ' collectionName ' to ' collectionName ' in the stream method for better clarity to enhance code readability by using
map overview image zoom fix
added similarity to KNearestNeighborClassifier and updated KNearestNeighborClassifierTest to use LMDirichletSimilarity to enhance classification accuracy by
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by utilizing a more efficient query handling mechanism
replaced ` getReason ( ) ` with ` getReason ( ) ` for setting reasons in ` LowResourceMonitor . java ` to improve clarity by
updated package - info . java files to improve documentation clarity
added MTU request functionality in ShadowBluetoothGattTest and implemented callback handling in ShadowBluetoothGatt to ensure correct mtu updates for Bluetooth Gatt callbacks to
refactor TestPayloadNameRequestWrapper to use a dedicated createServletOutputStream method for better clarity to improve code readability and maintainability by encapsulating
added logging for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and debugging by providing clearer error messages
fix possible concurrency issue in channelprocessingmanager
updated Japanese resource strings in Resources _ ja . java to improve localization support for Japanese users
updated conditional checks in JDBCTypeMapping and JDBCTypeMappingTest to improve clarity and consistency to enhance code readability and maintainability
added synchronized keyword to methods in GenshinScene . java to ensure thread safety during player addition and removal operations
refactor accessibility handling in TerminalView to utilize regex and control code matchers to improve code readability and maintainability by reducing
added a new flag ` SIDE _ NAVIGATION ` to the ` closeButton ` and updated related logic in ` SideMenuBar `
improve error handling for wamp client disconnect state
added validation for contract type error and updated energy limit validation in UpdateSettingForEnergyLimitContractActuator . java and UpdateSettingForEnergyLimitContractAct
refactor URL handling in PostmanJsonBuilder and UrlBean classes to improve clarity and consistency in protocol management to enhance code readability and ensure
camel - 16400 : camel - soap - add namespaceprefixref option to allow to define a prefix for the soap namespace . thanks to jo
refactor test assertions in TestRange . java to use a dedicated method for date parsing to improve code readability and maintainability by reducing
added logic to restart the JettySolrRunner in BasicAuthIntegrationTest . java and updated security checks in ZkStateReader . java to ensure
add pricefeed to trade chart
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure correct replication settings are set for
updated variable names and logic in NativeString . java for clarity and correctness to improve code readability and ensure proper handling of index boundaries
added a FileDataStorageManager to manage file downloads to ensure files are downloaded during the download process
refactor RandomAccessFile initialization to use a variable for the RandomAccessFile to improve code readability and maintainability
added a method to check if a registry is running and a retry mechanism to delete a file if it exists to enhance reliability by retrying file deletion
removed unused imports from EditTest , Quick3dMain , TextureTest , and TextureTest classes to improve code clarity and reduce unnecessary dependencies
added @ SuppressWarnings ( ` ` rawtypes ' ' , ` ` unchecked ' ' , and @ SuppressWarnings ( ` ` unchecked ' '
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when accessing instance information
phoenix - 4892 allow transaction _ read _ committed or transaction _ serializable to set isolation level to transaction _ read _ committed
added transaction attribute handling in AbstractStepFactoryBean and ItemOrientedStep classes to improve transaction management and error handling during batch processing
replaced ` CasClient ` with ` DirectCasClient ` in ` CasManagementWebAppConfiguration . java ` to enhance security by
added functionality to add a category to the drawer in ListFragment and removed it from NavigationDrawerFragment to enhance user experience by allowing users to add new
renamed ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` and ` FileDisplayActivity ` to improve clarity and consistency in
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size in TerminalView and TerminalBridge classes to use TypedValue for text size to improve code clarity and maintainability by explicitly defining font size
added a check to ensure that the fact is valid before processing to avoid potential null pointer exceptions
refactor DistBuildTargetGraphCodec , ConvertingPipeline , and Parser classes to improve code organization to enhance maintainability and readability
replaced the return statement to return a new ArrayList with a copy of spans to ensure that the original spans list is not modified externally
removed unnecessary try - finally block around database change log parsing to simplify code and improve readability
added a ` setRevision ` method to ` MicroserviceVersions ` and updated related logic in ` InstanceCacheChecker ` and ` TestInstanceCacheChecker `
updated foreign key and index name handling in AbstractRetriever and TableRetriever classes to improve uniqueness and clarity of foreign key and index
camel - 15836 - camel - aws2 - s3 : add unit test for s3componentconfiguration
removed unnecessary currency pair parameter handling in getBitstampUserTransactions method
added error handling for retrieving component instances in BlueprintContainerRegistry to ensure graceful handling of NoSuchComponentException when retrieving component instances
change the return type of the push ( ) method from void to boolean to enable the push operation to distinguish between success and failure of the push operation
refactor LegacyAddressTest to use BufferedReader for string comparison to improve readability and maintainability of the test code
changed the access modifier of findDropTargetAt method from package - private to public to allow access to the method from other packages
added a ` setupPushWarning ` method and refactored the ` DrawerActivity ` and ` NotificationsActivity ` to improve notification handling
do n ' t swallow channel close exception
updated string checks in LdapPasswordPolicyEnforcer to use ` StringUtils . isEmpty ` instead of ` null ` to improve code readability and
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 7978 : added timezoneadapter to the nifi - web - api - dtos
updated assertions in Splitter . java and StorageService . java to improve clarity and correctness of boundary splitting logic
no effective change - code cleanup
fix race condition when remove active circuit
changed exception type from GdxRuntimeException to IllegalStateException in ShaderProgram . java to ensure proper handling of uncompiled shader errors
flume - 2088 . fix bug in sinkrunner and pollablesourcerunner .
updated error logging in FastBindLdapAuthenticationHandler to provide clearer context for authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal efficiency
make sure freehandfunction return int instead of double
updated the constructor name from ` CasRiskBasedAuthenticationEvaluationStartedEvent ` to ` CasRiskBasedAuthenticationEvaluationStartedEvent ` to improve clarity
refactor database connection handling in SchemaCrawlerMain and Executable classes to improve resource management and error logging to enhance code clarity and ensure
add default tl protocol support for jdk 16 +
updated exception messages in CountersManager . java for clarity to improve user understanding of buffer allocation issues
updated audio playback logic in MediaManager . java to improve handling of audio queue position to ensure correct audio playback behavior based on current audio queue state
added ' cancelled ' parameter to the debug log message for connection upgrades to provide clearer logging information regarding the cancellation state during upgrade operations
added support for JPA transient fields in JpaPersistentPropertyImpl and JpaPersistentPropertyImplUnitTests to ensure proper handling of JPA transient fields
updated tests for HDP - 2.2 . 0 and HDP - 2.2 . 0 in UpgradeResourceProviderTest . java to ensure correct
trufflevm : make eval method return object instead of symbol
changed access modifier of ` isBinaryType ` method from private to public in ` SampleResult . java ` and added debug logging in ` Proxy . java
updated the default value of Tez _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from 100MB to 100MB to
added priority management for JavaProblem instances in JavaEditor . java and JavaProblem . java to enhance error handling by prioritizing the most
updated the default offHEAP value from DEFAULT _ OFFHEAP to DEFAULT in DictionaryIndexType and its usage in BloomFilterHandler to ensure consistent usage of
updated line separator handling in TableWriterTest . java to improve code readability and maintainability by using a configurable line separator constant
refactor DebugHelper class to improve code readability and maintainability
added a private boolean field ` ownsTexture ` and initialized it to true in ` ParticleEffect . java ` to ensure texture handling only occurs when the texture
added additional LDAP authentication configurations in HiveConf . java to enhance security settings for LDAP connections
chore : update gapic - generator - java to 2.1 . 0 and update gax - java to 2.1 . 0 ( # 2
updated input method handling in DetailActivity to use Context . SHOW _ FORCED instead of Activity . INPUT _ METHOD _ SERVICE to improve clarity and
added a new test for converting map of string to map of integer to map of Piece in DataTableTypeRegistryTableConverterTest . java to
updated the size of the size parameter in TestFileSystem from 100 , 500 , 500 to 50 , 50 , 50 to optimize memory usage for testing purposes
improve error message in contenttypemanager
added ` MigrationFailedException ` to the ` dropSequences ` method across multiple database - related classes to ensure proper handling of migration failures during database operations
added a null check for the status variable to prevent potential NullPointerExceptions during execution
refactor the creation of a field in DocumentBuilder to use a local variable to improve code readability and maintainability
fix issue with hierarchy style not be apply to node
datamongo - 540 - add unit test for findone after upsert
hbase - 18748 fix the calculation of the mid value in rowindex seeker and bytebuffers
added tracking of app launches in Launcher and Stats classes to improve analytics for app launches
added graphics drawing functionality to the JavaSEPort class to ensure proper rendering of the image in the graphics context
[ # 7711 ] instructor : instructorfeedbackresultspage : fix instructorfeedbackresultspage to include the student ' s
added a check for zero inventory IDs in the Inventory class to ensure that player IDs are generated correctly when they are zero
added a check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop only executes if ` found `
updated method signatures in ReloadableJava11ParserVisitor , ReloadableJava17ParserVisitor , and ReloadableJava8ParserVisitor to include returnType
added support for nullable blended tiles in TileMapRenderer to enhance flexibility in handling different tile configurations
removed unused Java classes from the Probe . java file to clean up the code and improve maintainability
modified the calculation of area in IfcTools2D . java to ensure accurate summation of area relative to the last segment ' s coordinates
updated lockOnSync initialization to use currentThrottleRate directly to improve clarity and maintainability of the code
pipe : fix eventbus . fireevent ( ) to correctly handle super class change
updated ZkController initialization timeout from 1000 to TIMEOUT to allow more time for ZkController initialization to complete successfully
added a test for verifying passcode with client parameters in TokenMvcMockTests . java to ensure that the passcode functionality works correctly for
added support for LengthFilter and CharArraySet in TestRandomChains . java to enhance filtering capabilities for improved text analysis
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the code and reduce unnecessary dependencies
use unsigned long instead of int to avoid overflow
replaced the static upcast method for btRigidBody with a direct method call in btRigidBody to simplify the code and improve readability by eliminating unnecessary
added copyright year and updated OPENROCKET _ URL to point to openrocket . info / for clarity to improve accessibility and
add getdistributedobjects ( ) method to jetclientinstanceimpl to retrieve distributedobjectinfo .
added print statements for component , finCount , and inertia in FinSet . java to improve debugging output for fin calculations
replaced ` TOTAL _ MEMORY ` with ` MAX _ MEMORY ` in ` SmartDexingStep . java ` and updated ` memorySemaphore `
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in createAlignedtimeplan
improve error message in case of delay
updated JsonLoaderTest to use json ( ) instead of json ( ) and added ignoreException ( " big _ integer _ t " ) to improve JSON
updated capacity check from 1 to 0x40000000 to ensure capacity does not exceed allocated limits
updated import statements and modified dataScale handling in ColumnSnapshotGenerator . java to improve code clarity and prevent potential null pointer exceptions
removed unnecessary @ AddToRuleKey annotations in AppleTest . java to streamline code for better readability and maintainability
added exception handling for security exceptions in FileHelper and TextHelper classes to improve robustness and prevent application crashes due to security exceptions
added support for resolving multiple attributes in the theme to enhance the flexibility of attribute resolution in the theme
updated the ` doesContainsSheetName ` method to use ` sheets . size ( ) ` instead of ` sheets . size ( ) ` for
changed the theme color from primaryColor to elementColor in ManageAccountsActivity . java to enhance the visual appearance of the activity
updated handler initialization in DefaultEventBus and DefaultPlatformManager to handle null replyHandler to ensure proper handling of null replyHandler to avoid potential NullPointerExceptions
added support for the " utf8 _ bin " configuration in MariaDbDbmsType , MySqlDbmsType , and FilterSortedSkip
added a method ` whenType ( Class < T > treeType ) ` to return an ` Optional < T > ` that returns an ` Optional <
refactor navigation handling in ItemLauncher . java to improve code readability and maintainability by centralizing user view navigation logic
updated the return statement in FeedREST . java to use a temporary redirect URI to improve user experience by directing users to the correct public URL
[ hotfix ] [ kinesis ] add check for non - serializable deserializer
( chore ) camel - jbang : fix checkstyle violation
refactor ZkStateReader initialization to ensure zkClient is closed even if an exception occurs during initialization
renamed ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity and consistency to
refactor read method to use a dedicated read method to improve code readability and maintainability
replaced BufferUtil . allocate calls to BufferUtil with ByteBuffer . allocate in ABCase1 _ 2 . java to standardize buffer allocation methods to improve code
changed the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and modified the ` prepareStreamsToUpload ` method to
updated order handling in AbstractConfigLoader and TestMicroserviceConfigLoader to use ` Integer . MAX _ VALUE ` instead of ` m1 ` and `
added a new file ` PicOfDayAppWidget . java ` to handle photo - of - day app widgets to enable users to view images
cloudstack - 8470 : internal load balancing : default internal load balancing to the default offering
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil for handling non - equality conditions to improve compatibility with Hive ' s
[ hotfix ] [ table - planner - blink ] deprecate various operator and savepoint class
added user credentials to JMXConnector connection to enable secure connection to the remote JMX server using credentials
removed redundant initialization of BytesRef in Stemmer . java to streamline code for better readability and performance
updated the conditions for determining if the number of widgets in the widget list is greater than one to ensure that the widget list displays correctly based on the number
ticket : show 3d view only if 3d view be open
updated the x and y assignments in GcodeRenderer . java to correctly adjust the rotation direction to ensure proper rendering of the G - code graphics
added a new configuration option ` WORKSPACE ` to the ` DAEMON ` string and set the workspace directory in the ` TerminalClient ` class to
updated file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure compatibility with HTML file format
updated ScimUtilsTest to use JUnit 5 annotations and improved test structure to enhance test readability and maintain compatibility with JUnit 5
refactor OAuthConfirmationController to use a Map for model attributes instead of ModelAndView to streamline the access confirmation process and improve code
updated assertions in HibernateIT . java to validate second - level cache hit count against expected values
updated EventBusHook class to enhance event handling capabilities
8282713 : invalid copyright notice in new test add by jdk - 8275715
removed the ' final ' modifier from the mNewScale variable in WorkspaceStateTransitionAnimation . java to allow the variable to be reassigned after initialization
refactor SyncFactory class to improve code readability and maintainability
added uniqueKey field handling in LukeRequestHandler to ensure uniqueKey is set correctly based on the schema field
updated border color handling in BorderEditor and EditableResources to utilize a new method for setting roundBorderColor to improve color management to enhance flexibility
make binaryparserexception never complete compilation
[ hotfix ] [ test ] fix deprecation in defaultscheduledexecutionstest
added logging statements and modified return values in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes to improve request handling and enhance
added a Toolbar . OnMenuItemClickListener to RecentChatFragment to show a toast message when the menu item is clicked to enhance user experience by
updated InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget instead of ButtonDropTarget and added methods to start and uninstall activities with uninstall affordance
replaced ` add ` and ` remove ` methods with ` peek ` in multiple classes to improve clarity and consistency in scope management
updated URLs in CommonsApplication to reference " commons . wikimedia . org " instead of " test . wikimedia . org
refactor index creation logic into a separate method ` setIndex ` to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ` with ` sort ` in multiple security configuration classes to simplify sorting logic and improve code readability
added a new string array for various date pattern patterns in FormatData _ hr _ HR . java to support additional date formatting options
added a call to ` clickedView . close ( ) ` in ` DetailFragment . java ` to ensure the ` clickedView ` is properly closed
replaced ` notifyDataSetChanged ( ) ` with ` setSelection ( 0 , true ) ` and updated language selection logic in ` spinnerDescriptionLanguages ` to
updated time zone identifiers from " WSST " to " WSDT " across multiple files to reflect the correct designation of the daylight
added native methods for managing global and weak fields in Fast GetField to enhance flexibility in handling field access operations
added default value handling for UNION types in ReflectData . java and updated test cases in TestReflect . java to ensure proper serialization and deserialization of UN
increase timeout for seda block test
added a null check for resourcePath ' s RClass before remapping it to avoid potential NullPointerException when accessing its properties
added constructor to hapiFhir - h2 and hapiFhir - mariadb dialect ( # 3685 )
camel - 16400 : camel - http - add explicit connection close header to http producer
increased the timeout duration in BasicDistributedZkTest from 60000 seconds to 120000 milliseconds to allow more time for distributed operations to complete successfully
added an assertion to check that the total price cts is less than or equal to zero to ensure that the query results reflects the expected value for
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
fix npe in legacyhtml5templateparser and xmlvalidatingdomtemplateparser
planner - 252 : fix lookup strategy to work with enum type
[ java ] wait for all cluster node to shut down to shut down .
improve clarity of error message
added a content type of " application / octet - stream " to WebdavEntry . java to ensure proper handling of binary data in the response
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and a corresponding test class ` LazyTraceThreadPoolTaskExecutorTests
fix distanceop to check if the line length be great than the min distance ( # 2065 )
rename ' required ' to ' requiredLabel ' for consistency
added updateProgress ( ) method to PurgingPartitionIterator to ensure progress updates are handled correctly during iteration
added a method ` getUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` and ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to the
added validation to ensure polygons contain at least 3 points to prevent illegal argument exceptions and ensure valid polygon assignment logic
replaced instances of ` ObjectMapper ( ) ` with ` ObjectMappers ( com . facebook . buck . util . ObjectMappers
add null check for coeff in geoimplicitcurve to avoid npe
updated how Unicode names are read from the input stream in ExternalNameRecord . java and added a test for handling Unicode data in TestExternalNameRecord .
fix typo in abstractjmsprocessor description
added logic to exclude " username " and " password " from login prompts to enhance security by preventing exposure of sensitive information
replace ` this . listeners . remove ( listener ) ` with ` this . listeners . updateIf ( listener ) ` in ` AbstractController . java `
added functionality to toggle the spin animation in the PieChartActivity to enhance user interaction by allowing the chart to animate through the chart view
bug cs - 17826 : stop the copy process if it fail
hbase - 26906 fix namespace normalization for hmaster ( # 4071 )
updated import statements and added a resize method in AndroidInput . java to improve code organization and ensure proper resizing of input elements
added a new static method ` propertyValuesOf ` to ` PropertySupport ` for retrieving property values to facilitate the retrieval of property values from a
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test due to intermittent failures
improve hopperhock ' s hopperhock ' s bounding box calculation . close # 189
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing interactive authentication options
updated assertions in TestStressIndexing2 . java to improve document deletion logic and added methods to handle document deletion based on term queries to enhance test coverage
[ flink - 22559 ] [ test ] [ table - planner - blink ] disable upsert kafkasql integration test
updated typeList initialization to use computeIfAbsent and modified endPos calculation to improve performance by lazily initializing the type list and correcting end position calculation
added a configuration option to accept single values as an array in DefaultEntityMapper to improve data handling by allowing deserialization of single values as arrays
updated localization update message in VersionChangeLogs . java to include " BE , UK , and SL . " format to enhance clarity of localization
updated the initialization of SHORTCUT _ CATEGORIES to use a configuration property to improve flexibility by allowing dynamic retrieval of category names
[ jbrules - 2054 ] fix instanceof expression in feel parser
nifi - 1895 : added content - type attribute to gethttp to track the content - type of the flowfile
add conditional delete and update on same resource to resource history
updated button references from exit button to done button and added a check for searchable status in SearchBookContentsActivity to improve user experience by informing users
[ hotfix ] fix checkstyle violation in natsconfiguration
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` instead of a ` PartitionNameWithVersion
improve performance of view result tree
change icon from ic _ group to ic _ chat _ bubble across multiple classes to improve visual representation of chat messages in the user interface
[ java ] : use volatile in broadcast receiver to prevent race condition .
updated method names and imports in MocksCreationTest . java to improve clarity and consistency to enhance code readability and maintainability
added a constant for the DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and changed method visibility in YamlDetectionConfigTranslator to public to improve code
updated the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow for a longer wait times before starting the Awaiter to improve
removed the BuildSlaveFinishedStatusEvent class and updated its usage in DistBuildRunCommand and DistBuildSlaveEventBusListener to simplify the event
use utf - 8 encode when generate uuid for vm template
[ ds - 3952 ] add test for depositing workspace item without workflow
replaced ` forEach ` with ` forEach ` for classpath processing to ensure all classpath files are processed correctly
removed the isBoxedPrimitive method from Unbox class to streamline the code by eliminating an unused method
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestCommonCompiler to improve command - line argument parsing
added a table check before deleting a directory in HiveMetaStore . java to ensure that the directory is only deleted if it is not an external table to
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS and HIVE _ SERVER2 _ ASYNC _ EXEC _ WAIT _ QUEUE _
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
updated the ` EXECUTE _ TASK _ ROLE ` constant and its usage in ` UpgradeResourceProvider ` and ` AmbariManagementController
fix for : http : / / issues . apache . org / jira / browse / amazonecho / browse / amazonecho
clear all log entry in flutter log view ( # 544 )
added checks for socket shutdown status in ChannelEndPoint . java to ensure proper handling of input shutdown scenarios
refactor SetNullableGenerator class to improve code readability and maintainability
camel - 16400 : camel - report - add option to use servlet transport for reportincident
updated imports and refactored content type handling in NettyRoutingFilter . java and FormIntegrationTests . java to improve code clarity and
added @ ApiOperation ( nickname = " hello " ) and @ ApiOperation ( nickname = " helloWithValue " ) annotations to multiple
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to improve resource management and ensure proper cleanup of lifecycle listeners
updated the FG _ FK constant from 90 to 200 in UIUtil . java to increase the intensity of the UI component
disable mp3 support by default
use systemkeyspace . builtindexes instead of systemkeyspace . builtindexes .
pmd : add version information to the general preferences page
[ hotfix ] [ test ] fix customserializationitcase test
refactor MediaFormatUtil class to improve code readability and maintainability
added a method ` isCellEditable ` to ` GeneralTab ` that returns false for cell selections to provide a placeholder implementation for cell editing functionality
added a ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and ` JavaBuckConfig ` to conditionally
added a temporary variable ` tmpCount ` and updated ` v scales ` in ` VocalTractScalingProcessor . java ` to improve variable management and
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat to ensure compatibility with the latest Hadoop testing framework
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing of UaaAuthenticationDetails instances
test skeletoncontrolrefresh : use anim compositing instead of skeleton control
rename nodefilter to nodecountfilter to avoid confusion
updated the condition to check if ` sync _ fetch _ batch _ num ` is equal to ` equals ` in ` NodeImpl . java ` to ensure
updated DebugExpressionParser to set the value of ` _ localctx . ty ` from ` 365 ` to ` 366 ` and modified related
updated dependency filtering logic in ExcludeDependency . java to improve accuracy of dependency scope checks
replaced ` tmp ( ) ` with ` dst2 ( v ) ` for vector operations to improve performance by avoiding unnecessary object creation
initialize the args array to empty instead of null to avoid potential NullPointerExceptions when args is accessed
refactor linker argument handling in RustBinaryDescription . java to improve clarity and maintainability of linker argument management
[ te ] add ability to run test on travis
added a new configuration variable ` hive \ \ . query \ \ . name ` and modified logging to include it in ` GenericUDTFGetSplits `
remove unused import from tileatlas
bugfix # 226 , do n ' t close outputstream on exit
updated the ` validateQuery ` method to include an additional parameter for error messages to enhance error reporting by providing more context about the validation failure
updated INDEX _ VERSION from 1 to 2 and replaced FIELD _ REPOSITORY with INDEX _ VERSION 2 in LuceneExecutor . java to
[ hotfix ] [ test ] add test for kryo serializer registration
added a null check before adding a configuration type to avoid potential NullPointerExceptions when accessing configuration properties
updated Boolean handling logic in MetaStoreDirectSql . java to improve compatibility with MySQL ' s booleans handling
added a call to hideCustomizationDrawer ( ) in the Launcher class to enhance user interface by hiding customization drawer
replaced the initialization of ` initParams ` with a constant TV _ KEY _ WARNINGS and updated related logic in ` TermVectorComponent . java
added optimistic type logging and modified log message formatting in Compiler . java to improve performance monitoring and clarify compilation job status
refactor Expect class to improve code readability and maintainability
added ` UnixSocketConfigurationStrategy ` to DockerClientFactory and integrated it into ` DockerClientFactory ` to enable access to Docker Docker with Unix socket
added unit tests for ` testEvenLowRateIP ` in ` CloseableDoSFilterTest ` and ` CloseableDoSFilterTest ` to
camel - 16400 : improve error message when a reactive stream do n ' t have any subscription .
replaced ` MapRedTask ` with ` MapWork ` in ` Vectorizer . java ` and ` VectorizationNodeProcessor . java ` to
log4j2 - 1349 change stringappender and logdivertappender to be enable by default
fix npe if guipackage be null
[ gr - 36433 ] fix linkage . isweak ( ) to handle weak linkage .
refactor XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea classes to improve code organization and maintainability
no effective change - add unit test
added a check for invalid operation handles in HiveStatement . java to improve error handling and logging for invalid operations
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL across multiple files to clar
camel - 15836 - camel - aws - secretsmanager - add unit test base on user forum issue
refactor SimpleTree class to improve code readability and maintainability
updated error response formatting in UserREST . java to improve readability and maintainability of error handling logic
added a parameter ` subTree ` to the ` fromContent ` method for better control over the sub - tree behavior of the Result class
updated the calculation of the default column width in Sheet . java and added a new test method in TestHSSFSheet . java to ensure
added a new parameter ` configPath ` to the ` less ` method in ` Commands . less ` to provide a way to specify the configuration path for
replaced Set and Set with Collection in DotWriter and GraphExecutable classes to improve flexibility in handling collections of tables
updated the SSHD container image from sha256 : : sha256 : : 1.0 . 0 to 1.0 . 0 in TestcontainersConfiguration
server : fix npe when hostid be null
updated the handling of single - valued columns in DefaultGroupKeyGenerator to improve clarity and functionality to support multi - valued column grouping
refactor TestMultiMMap to improve exception handling and readability to enhance clarity and maintainability of the test code
refactor BCSiliconRecipes to use a builder pattern for input handling to improve code readability and maintainability
rename graph hopperconfig mixin in order to avoid confusion
updated visibility logic for child views in CellLayout . java and refactored dragExit method in DragController . java to improve code readability to en
updated ModifyRequestBodyGatewayFilterFactory to handle empty request bodies more gracefully and added a test for empty request bodies in ModifyRequestBodyGatewayFilterFactoryTests to improve
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring type accessibility compliance
updated logging levels from warn to trace in LoggingHandler . java to improve logging granularity for better debugging insights
updated prefix handling in WhiteBlackList . java and added a new test for wildcard scanning in Issue348 . java to improve prefix processing logic and
added functionality to handle gallery image options in GalleryActivity to improve user experience by allowing quick access to gallery images
refactor MongoDBServiceFactory to ensure a single instance of MongoDBService is used for local and remote mapping to improve efficiency by avoiding repeated service
added tests for boolean formatting in InlineConstantMutatorTest and HasBooleanICONST1 classes to ensure correct behavior of boolean replacement logic to enhance test
added a blackhole parameter to the decode method in RecordTest . java to facilitate testing with a blackhole data structure
fix : update gapic - generator - java with mock service generation fix
changed return type of ` getAllUnitStrings ` method from ` Stream < String > ` to ` Stream < Map < String , String > `
added a call to clear the database witnesses to ensure the database state is reset before further operations
add debug log for jdbc page sink abort
updated stack property handling in NativeError . java to improve clarity and maintainability of stack management
added a condition to check if the path starts with a period in DrillPathFilter to ensure that only valid paths are processed
renamed onboard to autoload in ThirdEyeAnomalyApplication and ThirdEyeAnomalyConfiguration to improve clarity and consistency to enhance
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
fix for bug # 4872 - set bold weight to 0x190
changed the visibility of ` fThreadGroup ` to ` volatile ` and made ` fLookForStuckThread ` final in ` Timeout ` and `
renamed ValueResultData to ValueResultData to improve clarity and consistency in naming conventions
updated hashCode and equality checks in FuzzyQuery class to ensure proper behavior when comparing instances of FuzzyQuery
removed debug print statements from PushedResourcesTest . java to clean up test output and improve readability
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to simplify method signatures and improve code clarity
update driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure
updated ` retrievePersonAttributes ` method to accept an initial capacity of 0 to improve performance by avoiding unnecessary object creation
change log level from info to warn in openwebnetbridgehandler
refactor hash method names from ` intHash ` to ` hash ` across multiple hash classes to improve clarity and consistency in hash function naming
added a constructor to ` ThumbnailGenerationTask ` that initializes ` storageManager ` and ` mImageViewReference ` to ensure ` mStorageManager ` is
added a loop condition to check if the number of found elements exceeds the specified limit before stopping the loop to ensure that the loop does not exceed the specified
added a new file ` Bug1933922 . java ` that contains functionality for managing program loading and compilation to address bug 1933922
refactor comparison logic in MultipleSeriesProvider and improve code readability to enhance code clarity and maintainability
updated control character range from 33 - 31 to 32 in FileResolver . java to ensure proper validation of control characters
added a call to requestFocus ( ) in the Display class to enhance user experience by ensuring the component receives focus
update test data for instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated Crouton handling in DetailFragment and MainActivity to improve user feedback by displaying a confirmation message
added a test for schema query and fetch with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of schema templates
refactor Dialog class to improve code readability and maintainability
replaced direct execution of command - line arguments with a ProcessBuilder for building a Java tool options to improve flexibility in handling command - line arguments
updated the metric increment for the past window in HintedHandOffTest to use " 127.0 . 0.1 " instead of " localhost "
refactor controllers in Metrics . java to use a for - each loop to improve readability and maintainability of the code
added platform checks in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
make jvmciversioncheck vendor test more robust
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor TestLargePageUseForAuxMemory class to improve code readability and maintainability
updated ` BinaryParser ` , ` PlainTextParser ` , ` ParsingExecutionContextView ` , ` ParsingExecutionContextView ` , ` ParsingExecutionContextView ` ,
added support for multipart form data compliance in HttpConfiguration and a new MultiPartFormDataCompliance enum to enhance flexibility in handling different request configurations
added support for JDK 17 in GradleDistributionManager to enable compatibility with newer JDK versions
added a method ` addType ( Class < ? extends DatabaseObject > type , Database ) ` to the ` DatabaseSnapshot ` class and refactored
refactor Term class to improve code readability and maintainability
update return statement to handle null values for runWith to ensure robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add test case for amq -
updated multiple Java files to improve code organization and maintainability
pdfbox - 4892 : make blackbox test more robust
replaced direct assignment of ` mTintAmount ` with a variable ` mTintAmount ` for better readability to improve code clarity and maintainability
added a new file ` SumZeroFunctions . java ` that implements the ` SumZero ` aggregation function in the Drill framework to provide a
[ hotfix ] [ table - planner ] fix typo in firstvaluefunctionit and nthvaluefunctionit
hbase - 26909 make allocation fail log more informative
added a null check for propName before adding it to the properties map to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to methods in StatusBarTouchController , RecentsView , and StartLauncherViaGestureTests to improve testability
added methods to log a container with an optional stream parameter to enhance flexibility in managing streaming behavior for Docker containers
add a performance test for mvstore cache
updated LONG ( " Long " , " J " ) from " L " to " J " in PrimitiveType . java to accommodate a new
changed the visibility of the DelegatingApplicationListener method from instance to static to allow the method to be called without an instance of the class
camel - 16205 : camel - rest - set body to null to avoid npe
added a new file ` FileDeleteTasklet . java ` and ` TaskletJobFunctionalTests . java ` for handling file deletion tasks to
mow - 169 update drawables only when need
lgtm : fix indexoutofboundsexception in lgtm
replaced ` sendEventToTest ` with ` sendStateEventToTest ` across multiple classes to improve clarity and consistency in event handling
added user - agent detection for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on
do n ' t scroll to error line if there be no error
updated the layout constraints for the title area based on the UI theme constant to ensure the title area aligns correctly with the current theme settings
added preload parameter to Skia . java to enable loading of the Skia library for testing purposes
netparameters : add support for unit test
added validation to ensure format arguments are not empty in QueryCommand . java and implemented tests for format arguments in QueryCommandIntegrationTest . java to
refactor IntIterator to use the length variable instead of capacity to improve clarity and maintainability of the code
updated the ` walkRuleAndAdd ` method to include the ` srcTarget ` parameter in the ` walkRuleAndAdd ` method calls to enhance dependency traversal
[ netbeans - 4894 ] add support for override module name for nb _ x _ module patch
[ java ] remove unnecessary check for semantic version compatibility .
added conditional policy setting for OwnCloudClientManagerFactory based on authentication type to ensure proper client behavior during SAML authentication
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that a mappedTableResource is not null to avoid potential Null
replaced try - catch block with utility method for clean up resource
refactor AnonymousAuthenticationFilter to use a Supplier for deferred security context handling to improve code readability and maintainability by reducing repet
modified the ` removeActor ` method to accept a boolean parameter for better control over actor removal behavior
updated variable name from " validConfigs " to " validConfigs " for clarity to improve code readability and maintainability
added log level support to NettyHttpServer to enhance logging capabilities for better debugging and monitoring
updated multiple Java files related to formatting to improve code consistency and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ` in ` CodeDependenciesPanel . java ` to ensure UI
camel - 16400 : camel - groovy - allow to load groovy script in a fast way .
use set instead of list for artifact resolution
[ hotfix ] [ cli ] make programoptions public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to improve test coverage and
removed unnecessary storage alias handling in HttpsMessenger . java to streamline certificate chain retrieval process
danielwagnerhall : do n ' t throw classcastexception when convert text to json
changed access modifier of ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow subclasses to access
fix drop resource for server level ( # 8727 )
added spatial location calculator configuration methods to DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the application
updated multiple Java files to improve code consistency and maintainability across the project
replace keySet ( ) . isEmpty ( ) with a helper method ` isEmpty ( ) ` in ` TreeTrie . java ` to improve code readability
updated color calculations in AttributedStringBuilder . java to use new parameters for foreground and background rendering
updated fingerprint handling in PeerSync and PeerSyncTest to conditionally disable fingerprinting based on a system property to enhance flexibility in fingerprinting behavior
changed the visibility of the ` moveFunds ` method from private to public to allow access to the method from other classes
refactor MongoTemplate and MongoTemplateTests to streamline event handling and context management to improve code readability and maintainability by reducing red
fix test that fail on slow ci server
fix for tika - 348 -- close the inputstream if it be null
updated the rule string format in TestCollectionAPIs . java to use an array of Api objects instead of a fixed string to improve flexibility by allowing
updated the method call from ` loadConfig ( ) ` to ` loadConfig ( cfgOverrideFile ) ` in ` OptionsParser . java ` to ensure
[ # 7059 ] instructorfeedbackcopyactiontest : fix typo ( # 7060 )
make pipelineoptions final in externalworkerservice
[ hotfix ] [ table - common ] remove unused step variable
updated logging statements in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of shared lock acquisition to enhance
remove redundant call to scheduleJobs ( ) to streamline job scheduling process
danielwagnerhall : fix test that fail on ie
refactor Logger class to use a ThreadLocal logger instance instead of a static Deque to improve thread safety and maintainability of logger operations
make functioninitializer test more stable
added a method ` boxedTypeOrType ` to handle primitive types in ` Types . java ` and modified subtype checks in ` Infer
updated task view orientation handling in RecentsView . java to ensure proper state management for the new focused task view
hbase - 20583 testflushfromclient . testflushfromclient do n ' t use liveregionserverthreads to get all region
added contract details handling in TransactionExecutor to ensure correct repository management for contract transactions
updated TOKEN _ ISSUE _ FEE calculation to use dynamic properties for account balances to ensure accurate fee handling based on dynamic properties
replaced ` apMap ` with ` HashMap ` for cache management and added URI handling for texture resources to improve cache management efficiency and ensure proper resource
refactor source and destination handling in Blit . java and add a new class Bug7049339 . java to improve code clarity and
added a boolean flag ` isUnselectedStyle ` and refactored string width calculations in multiple classes to improve handling of unselected styles and
updated initialization of ` mappings ` and ` currentActions ` in ` AbstractCasMultifactorWebflowConfigurer ` , ` DefaultLdapRegistered
removed flags parameter from queryImplicitIntentServices , queryImplicitIntentServices , and queryImplicitIntentReceivers methods to simplify method signatures by elimin
refactor PingRequestHandler class to improve code readability and maintainability
add test for mp4 asset with increasing timestamps
[ tradfri ] add check for ` ` old firmware ' ' and ` ` new firmware ' '
refactor AjaxElementLocator class to improve code readability and maintainability
updated layout checks in BoxLayout and DefaultLayout to include " table - cell " display to ensure proper handling of table - cell display in layout validation
refactor JsonDecoder to handle START _ ARRAY and END _ ARRAY token types more effectively to improve code clarity and ensure correct parsing of JSON data
fix memory leak in blockcache . releaselocation ( ) ( # 1892 )
[ hotfix ] [ test ] disable savepointtestbase / savepointtest . java for now
jbrules - 2835 : add miss @ test annotation to droolmvelparsertest
changed private fields to be final in ContextRegisterListener . java to ensure immutability of instance variables
refactor ObjectHashSet to accept a cache parameter for iterator initialization to improve performance by avoiding unnecessary object creation during instantiation
hive - 15789 : vectorization : limit reduce vectorization to 32mb chunk ( teddy choi , via gopal v )
changed the MODE _ WORLD _ READABLE from WORLD _ WRITEABLE to PRIVATE in AppSettings . java and UpdateUtils . java to
updated logging messages in JdbcProxyGenerator . java to clarify the behavior of the close ( ) method and added exception handling to improve
updated animation state handling in Workspace . java to improve accessibility support based on the current state
reduce log level to debug in protobuflogreader
updated scope handling in UaaTokenServices and added a test for scope length in UaaTokenServicesTests to ensure scope length does not exceed
removed unused imports and added a toString method to the AvailableJDBCDrivers class to improve code clarity and ensure proper string representation of the class
[ drools - 7 ] add executablecommand interface to make it easy to execute kie - ci
( chore ) camel - jms : remove unused jdbctableservice
added padding methods to CellLayout and Launcher classes to improve layout padding handling for portrait and landscape orientations
added a check for empty string before processing candidates to avoid potential errors when the input string is empty
updated SamlMetadataUIParserAction to use Action instead of SamlUIParserAction and added null check for flow in SamlMetadataUI
added a method to check for open ports in LdapMockMvcTests . java to facilitate the checking of LDAP ports using specified ports
[ hotfix ] [ log4j2 - 1349 ] fix shutdown hook in loggercontext
refactor URL handling in Fetcher and HTMLMetaProcessor to improve clarity and ensure consistent URL comparison to enhance code maintainability and prevent
updated SolrQuery from " * : * " to " name : samsang " in TestSpellCheckResponse . java to correct the spelling of the
updated Console initialization to use Karaf Console API to ensure compatibility with older Karaf versions
bugfix : meshhelper . getverticescolors ( ) do n ' t return mesh color for bmesh
added regex filtering for timestamped report directories in HTMLReportGenerator . java and updated test methods in HTMLReportGeneratorTest . java to enhance
( chore ) camel - data - validator : remove unused test
pdfbox - 4892 : remove unused code , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure proper error handling for form binding errors
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a flag to allow extracting private fields and updated field value tests to enhance field access control and improve test coverage for private fields
added device name to the WebDataHandler to enhance data logging by including device identification
added reflection - based constructor lookup for Lookup in Platform . java to improve flexibility in creating Lookup instances for Java 8 types
replaced the ` weights ` method with ` weightsByDouble ` in ` ZParams . java ` and added a new method ` weightsByDouble ` in
added a Database parameter to the writeCustomHTML method across multiple writer classes to provide access to the database for custom HTML generation
updated key deserialization logic in BTreeMap . java to simplify key handling by removing unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to include BalanceInsufficientException and BalanceInsufficientException to improve
do n ' t write zerofile if profiler be disable
updated error handling in ChangeSet . java and Main . java to use UI messaging instead of standard output statements to improve error reporting consistency and
updated the buffer size of HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to optimize memory usage and improve performance
added imports for ` org . springframework . batch . core ` and ` org . springframework . batch . core . ItemProcessListener `
refactor AbstractProviderModule to improve code readability and structure to enhance maintainability and clarity of the code
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to remove redundant calls to countOneSegment to simplify code and improve
updated Test7005594 . java file to improve test coverage and address existing issues
updated error message formatting in ResourcesValidationProcess . java to improve clarity in error reporting
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
server : fix npe when there be no ip4
fix a bug where pinch would n ' t be able to pinch at all .
refactor ` iteratesOverSequence ` method to accept an ` Iterable < T > ` parameter and update related test cases to enhance flexibility
camel - 16400 : camel - http - allow to turn off header filter by default
added tests for retrieving COUNT ( * ) for various activities in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct behavior of COUNT ( * )
updated BarChartActivityMultiDataset , BarLineChartBase , and Chart classes to utilize a new LargeValueFormatter for value formatting to improve
updated character handling in CommentsParser to include INNOCUOS _ CHAR to improve handling of special characters in string processing
added a suppression warning for incompatible argument types to enhance code stability by avoiding compiler warnings
fix typo in trace linear scan analysis phase
added TODO - generated method stub in NullAssertionValidator . java to prepare for future implementation of method stubs
added support for ` RuleKeyAppendable ` in ` DefaultRuleKeyBuilderFactory ` to enhance rule key generation to ensure proper handling of ` Rule
added a directory creation for the system profile in PmsConfiguration . java and improved test setup in DLNAMediaInfoTest . java to
replaced ` DefaultThreadFactory ` with ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory . java ` to simplify thread creation to
replaced direct message retrieval with a new method ` getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP ` to
added a request attribute for " image / * " in ImageFileInputDialog to allow image files to be accepted in the input dialog to enhance user
replaced NodeBuilder with PreBuiltTransportClient in ElasticIndexWriter and TestElasticIndexWriter to simplify client initialization and improve code clarity
added witness class and class names to the ForkController to improve clarity and traceability of witness information
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests ` NullPointerAndEmptyArrayTest ` to verify behavior of ` Custom
removed the ` findConfiguredGeneratedSourcePathsUsingDeps ` method and its implementation from ` IjProjectBuckConfig ` to streamline the
added methods to construct regex patterns with any character delimiters in UaaStringUtils to enhance pattern matching flexibility by allowing custom delimiters
added null and empty checks for aliasToWork in Vectorizer . java to ensure proper handling of map work with valid aliases and prevent potential errors
updated import statements in WeatherQueryTest . java for consistency and clarity to improve code readability and maintainability
added error handling for setting values in TinyGFirmwareSettings to improve robustness by logging exceptions when setting firmware settings fails
replaced the method ` getLangs ` with ` getLangs ` in ` RemoteUtil . java ` to return a set of language strings
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability by aligning
hbase - 27826 disable snapshot handler should call super . prepare ( )
[ wasm ] fix nullpointerexception in rewriting .
added a test for the HTTP RPC endpoint in DockerQuickstartTest . java to ensure the application correctly handles the updated HTTP RPC endpoint
added a suspended flag and modified thread state handling to improve thread management and ensure proper exception handling
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Javadoc . Serial and Javadoc . See annotations instead of Javadoc .
camel - 16400 : camel - core - optimize to avoid npe
removed duplicate @ Override annotations across multiple security - related classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter . java and updated test assertions in EnumTests . java and MyComplexEnum2 . java to improve
fix xssf export to xml with xlsb
added badge handling for content descriptions in BubbleTextView to improve user experience by displaying appropriate notifications based on badge presence
added mouse wheel functionality to the scroll pane to handle mouse wheel events
added a close method to PDDocument and created a test for positioning absolute in VisualRegressionTest to ensure proper resource management and verify functionality of document position
updated currency pair references from " BTC _ ETH " to " XRB _ BTC " in KucoinAdapters and KuCoinIntegrationTests
replaced ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . Location _ A ` across multiple files to standardize agent references and improve
simplified currency string conversion to improve code readability and maintainability
updated JsonFormat . java to utilize ImmutableSet and GeneratedMessageV3 for default value printing to enhance code readability and maintainability
remove unnecessary check for array type in jacksonxmlformatmapper
refactor virtual thread handling to improve clarity and structure to enhance maintainability and readability of the code
refactor DirectoryTaxonomyWriter to include categoryPath as a parameter and update related methods to improve code clarity and ensure consistent handling of category paths
refactor VetoableChangeSupport class to improve code readability and maintainability
adjusted the calculation of the Y - coordinate in BrowserContentPane to correctly account for the height difference to ensure accurate vertical positioning of the content pane
pdfbox - 4892 : remove invalidpasswordexception from method signature
added tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper
apps - 2088 : add close button to help menu in exam mode
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` for controller state checks across multiple files to improve code readability and ensure
updated the logic for determining the last update date based on release status in SwingStartup . java to ensure correct handling of release status to improve user experience by
added comment to migration xml for generate file
added a ' | player ' parameter to the ' PlayerName ' argument across multiple classes to enhance command - line argument flexibility for player commands
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused filters related to HDFS and Zookeeper to streamline
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency to enhance code readability
added a condition to check parallel classes in TestNGContentHandler to ensure compatibility with parallel XML tests
updated the logic for enabling the acting master in RouteInfoManager to ensure proper handling of null values and avoid potential NullPointerExceptions
refactor ( ctmethod ) : remove unused static import ( # 3990 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated the ` shaBase64 ` method to accept a ` separator ` parameter and added a test for value verification in ` ShibbolethCompatiblePersistent
added null check for system actions parameter to improve robustness by handling potential null values
added a new file Person . java that defines a simple Person class to provide a basic structure for the Person class in the project
do n ' t use fBUtilities . getLocaladdress ( ) in gossiper since it ' s not need anymore
updated string comparison logic in AbstractClient . java to ensure consistent case handling for time column labels
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest and SegmentMetadataImpl to ensure correct data retrieval from JSON metadata
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` for setting the ` simPlotPanel
added a call to disconnect emitters in NettyStreamingService to ensure proper handling of disconnect events
no effective change - code cleanup
danielwagnerhall : allow to click on a page that have a double overflow
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
jbrules - 2835 : added support for jndi lookup via system property
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to simplify the code by eliminating unused functionality
replaced ` enabledCiphers ` with ` result ` and updated related variable assignments in ` JSSESocketFactory . java ` to improve clarity to en
[ beam - 8470 ] [ table - planner - blink ] [ table - planner - blink ] add time unit to sql timestamp ( #
replaced instances of ` IllegalArgumentException ` with ` requireNonNull ` for buffer and userCredentials in ` Identifiers . java ` and ` DatabaseConnector . java `
use inputmap instead of input to avoid npe
added bounds checking for row and column indices in FlightConfigurablePanel to prevent ArrayIndexOutOfBoundsException when accessing table elements
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance the user interface functionality
[ java ] unnecessarylocalbeforereturn : fix false positive
refactor script engine initialization to use a local variable for better readability to improve code maintainability and reduce redundancy
mahout - 1851 : fix euclidean distance similarity test to not return nan
fix npe in datatracker
refactor relativization logic to use a new method ` relativizeWithDotPath ` to improve code readability and maintainability by
added null checks for columnSize and decimalDigits in DataType and ColumnSnapshotGenerator to ensure proper handling of null values to avoid runtime errors
( chore ) camel - test - infra - deadLetterqueuewritertest : fix checkstyle violation
replaced ` toHexString ( ) ` with ` toJsonHex ( ) ` in ` TronJsonRpcImpl . java ` for converting list bytes to
updated package names from ` psiprobe . controllers ` to ` psiprobe . controllers . error ` and added ` Error403Controller ` and ` Error404
replaced ` TerminalFactory . setTerminal ( this ) ` with ` TerminalFactory . setIf ( this ) ` in UnixTerminal . java and WindowsTerminal
[ netbeans - 4892 ] fix typo in java . util . collection
http : / / issues . apache . org / jira / browse / amq - 2679 - fix connection leak when try to acquire
corrected the method name from ` getDateConverter ` to ` getLdapDateConverter ` across multiple classes to improve clarity and consistency in naming conventions
pdfbox - 4892 : avoid npe , a suggest by valerybokov
improve error message to include classloader
updated exception handling in LargeStreamletTest to include writer and reader exceptions to improve test reliability by controlling which exceptions are thrown
updated paging logic in HomeFragment to track extra pages based on user preferences to enhance user experience by allowing navigation through additional pages
added error handling for Bitmap creation in AndroidImplementation . java to ensure robust image processing and prevent crashes on unsupported SDK versions
updated string concatenation in BaseParser . java and added @ SuppressSubnodes annotation in ImplicitActionsConverter . java to improve code readability and facilitate
fix resource leak in loader
deleted the file TestDocInverterPerFieldErrorInfo . java to remove obsolete error handling code
added command execution for " input keyevent 82 " in AbstractLauncherUiTest . java and removed the assertion in LauncherInstrumentation . java to enhance
added a mapping from output file names to URLs in FileDumper . java to facilitate JSON serialization of output files for better data handling
bugfix # 20912 , do not reset result notified flag on shutdown
bugfix : texturehelper . loadtexturefromimage ( texture , blendercontext ) do n ' t call gettexturefromimage ( )
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of " application : "
updated ISBN number from " 9781797745008 " to " 9781797845005 " in RandomizersTest . java to
updated notification sound configuration to use a customizable ringtone URI to enhance flexibility in setting notification sound based on user preferences
added a method to report loop count in RootNode to enable reporting of loop counts for better performance monitoring
added a check for the repository type in FinalizeUpgradeAction and updated cluster version handling to ensure proper version finalization for standard repositories during upgrade
fix listbyregionidandstatesearch by use regionid instead of rangeid
removed duplicate calls to streamManager . open ( ) in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that contains a utility class ` CountedLoopProblem . java ` that generates a random number
[ gr - 25809 ] make native method execution work with native method .
do n ' t throw jvmci error if field be not find
updated KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier and TransformerSupplier to enhance tracing capabilities by integrating
[ # 7711 ] feedbackconstantsumquestiondetails : add ` ` Received Points ' ' to list
added a call to DynamicColors . applyToActivitiesIfAvailable in BaseApplication . java to ensure dynamic colors are applied correctly when activities are available
added thread management and stack dumping functionality in CloseRace . java to improve debugging capabilities and ensure child threads finish gracefully
updated IntPointField to return the integer value of the value instead of a string representation of the value to ensure proper type handling and improve test coverage
replaced ` int ` with ` double ` for arcSize in ` MyButton . java ` to allow for more precise scaling of the arc size calculations
pdfbox - 4892 : use 640x720 instead of 768 , a suggest by valerybokov
replaced ` isMinifySqlEnabled ( ) ` with ` isShrinkWhitespacesInSql ( ) ` in ` SqlSourceBuilder . java ` and updated
refactor ` waitForStateTransitionToEnd ` methods in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve clarity and consistency
added new configuration classes ` CasCoreHttpConfiguration ` and ` CasCoreHttpConfiguration ` to multiple test files to enhance configuration management
updated byte reading methods in Volume . java to use DataIO for reading to improve performance by reducing the number of read operations
( chore ) camel - http : optimize debug log
refactor ClassPath creation in DeclarativeHintsParser to use a builder pattern to improve clarity and maintainability of the code
add script scope provider to automation module ( # 3971 )
added layer manager support to animcomposer and animevent .
added a check to return early if there are no items in the queue and removed the showDefaultScreen method from Workspace to improve performance by avoiding unnecessary
added null checks for mapOp , mapWork , and originalThrowable in MapRecordProcessor . java and TezProcessor . java to improve error handling and
refactor center handling in CylinderRegion to use ` center . toVector2D ( ) ` instead of ` Vector2D `
refactor TestBadUseCases to use JUnit ' s ExpectedException for exception handling to improve readability and maintainability of the test code
added null check for subparams in sendOneQuery method and implemented a test for multi - execution in StatementTest to enhance robustness and ensure correct
added a check for customized the ` customizeEnvironment ( ) ` method before logging the result of ` model . customizeEnvironment ( ) ` in ` Security
updated the API endpoint URL in ReviewInterface . java to include a RCPagagagagagagagagagagagagagag
refactor Test . java for improved readability to enhance maintainability of the test code
updated the constructor of PBEKeySpec to use keyLength instead of blkSize to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
added a call to setSectionDefinition ( ) in RtfDocumentHeader . java to initialize section definitions for proper functionality
added a check for location accuracy in GpsLoggingService to prevent jumping if a large jump is detected
removed debug print statements from TableCellLayout and TableLayout2 classes to clean up the code and reduce unnecessary console output
doc : generate sample code in the java microgenerator ( # 4 )
refactor InsightFilter to use WeakReference for rootNameFn and sourceFilterFnHash to improve memory management and avoid potential memory leaks
replaced binary search logic with direct addition of info to data and added to data to simplify code and improve readability
updated the ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` and removed the ` ThemeChangePending `
updated the valueClass parameter from " HostD " to " UsingUnresolvedD " in ValueTypeGenerator . generateValueClass method to accurately reflect the
change assertion from assertRootArcs ( ) to assert assertRootArcs ( ) in FST . java to ensure that the root arcs are
added an assertion to check if the security policy does not exist or is a file to ensure that the security policy is valid and valid before proceeding
camel - 14284 : camel - olingo2 - allow to configure olingo2 with thanks to benjamin
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow additional time for thread execution to allow for longer wait times before
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver . java to simplify the log output for better readability
added xmpp action to publish an image by http using xmpp http
camel - 7999 : camel - netty - do n ' t try to get the channel from the pool .
added test for invalid host name
disable jsr199 by default
added handling for null values in CSVRecordReader and CSVRecordReaderConfig to ensure proper serialization of null values in CSV files
added @ LiquibaseService ( skip = true ) annotation to OfflineConnection , HsqlConnection , SybaseConnection , and SybaseConnection classes
updated method parameters in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to ensure correct handling of static field names for Java source files
add event . topic to smarthome / items / command trigger handler ( # 1749 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve clarity and specificity
added deprecation warnings for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and TestSolr
do n ' t show mana for creative that do n ' t have mana .
added a call to set the identifier collection in P25P2DecoderState to ensure the correct identifier collection is used for processing
removed unused imports related to DictionaryCompoundWordTokenFilter to clean up the code and improve readability
updated thread pool executor name from " deriveKeyWithScrypt " to " ScryptUtil " to improve clarity and consistency in naming conventions
refactor methods in GeneratedCode . java to improve code readability and maintainability
[ hotfix ] [ core ] fix typo in typedefinitionregistry
added visibility control for the shareWithMeIcon in LocalFileListAdapter to hide the shareWithMeIcon when it is not currently shown
updated link URIs in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingWebFilter to use HTTPS instead of HTTP to enhance security by ensuring stylesheets
added @ NotNull annotation to headers in RouterFilter and RouterServerListFilter classes to ensure headers are not null and improve code robustness
enhanced assertion message in TestIndexWriterMergePolicy to include segment count details to improve debugging information for better traceability
mark multiple Java classes as deprecated to indicate that these classes are outdated and should not be used in future development
fix npe in crawlersessionmanagervalve when context be null
added a privileged action to get JspApplicationContext based on security settings to enhance security by restricting access to JSP application context retrieval
refactor RocketComponentConfig to use min and max bounds for component length calculations to improve accuracy of component length calculations based on axial methods
replaced ` NonceService ` with ` SINGLETON ` in ` OpenIDAuthenticationProviderModule ` to ensure that the ` NonceService ` is
added a method to update child links in FileWrapper to enhance link management by incorporating additional parameters
refactor ` doExecute ` method to remove the ` httpMethod ` parameter and streamline error handling in ` SpringCloudPlugin . java `
increase test delay to reduce flakiness
make shift code always override
[ flink - 30613 ] [ runtime ] [ test ] fix race condition in test
removed redundant whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the condition in AbstractKerberosDescriptorContainer to check for reference identifiers instead of names to improve the accuracy of identity validation logic
updated the ` newInstance ` method signatures across multiple factory classes to accept a ` noop ` parameter for the ` noop ` option to enhance flexibility in
increased the sleep duration for IOException and InterruptedException handling in TestListenTCPRecord . java to allow more time for operations to complete successfully
updated argument handling in PatchExtensionMethod to ensure original arguments are preserved to maintain original argument state during method calls
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances to enhance performance by reducing the number of
int - 1471 add support for sequence attribute on pollablechannel
removed the x509PublishUrl field and related methods from ClientKeyPublisher and JwkViewResolver classes to streamline the code by eliminating unused
refactor reader assignment logic in QueryComponent . java for clarity to improve code readability and maintainability
replaced ValueSourceParser with Double2Parser for maximum and minimum calculations to improve precision in float and double value handling
simplified return statements in Container . java to improve code readability and maintainability
removed unused imports from Highlighter and SpanGradientFormatter classes to improve code clarity and reduce unnecessary dependencies
cloudstack - 7874 : update user record with uuid in uuid field to avoid duplicate
added conditional handling for ` flowBuilderServices ` in ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration `
updated WriteJdbcPTest . java to improve SQL connection handling and connection management to enhance performance and reliability of database operations
removed the conditional check for the " editor . laf " preference before setting the default look and feel in DefaultPlatform . java to simplify the UI
replaced calls to ` getStateEntity ( ) ( ) ` with direct calls to ` desiredStateEntity ( ) ` in ` ServiceComponentHostImpl . java
updated margin calculations in FloatingTaskView . java to simplify margin handling for RTL layouts
added a conditional check for running and updated status line message in NavigationShareTab . java to improve control flow and provide user feedback for status line changes
bugfix : do n ' t increment threadid in cpucallgraphbuilder when create cpucallgraph
g3d - 161 : fix default behavior for toolbar in 3d
added NetworkAddressChangeListener to HomekitImpl and updated logging messages to improve network address handling and enhance log clarity
updated lease retrieval and renewal logic in TestHDFSEventSinkOnMiniCluster . java to use LeaseRenewalTime instead of Lease
updated the initialization of ` prefixHeader ` and ` linkStyle ` fields in ` CxxLibraryDescription . java ` to use ` Optional . absent (
added null check for the error message in ExceptionHandlerRegistryFactory and created a new test for handling fatal IOException with a null message to ensure robust error handling
changed the ` nextID ` variable to be ` volatile ` and updated its usage in ` DirectoryTaxonomyWriter ` to ensure thread - safe access to `
fix intermittent failure of vm transport test
added HasSourcePath interface to AbstractThinArchiveArg , SourcePathArg , and FileListableLinkerInputArg classes and integrated it with SourcePathResolver
replaced StringBuffer with StringBuilder for string concatenation to improve performance and reduce memory usage
added support for custom index field names in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance facet configuration flexibility
modified the calculation of milliseconds to account for negative values to ensure accurate conversion of seconds to milliseconds and prevent potential errors with negative inputs
fix bug attribute name in lwjgl renderer
make copy - paste script block by default
added a new file ` TestCMoveLimitType . java ` to test the behavior of ` CharBuffer ` operations to ensure correct handling of
updated methods in ChannelState , RecordConfiguration , AudioPacketWaveRecorder , and OverflowableTransferQueue to streamline audio processing and improve code read
camel - 16400 : camel - sql - stored - template - parser should use arraylist to avoid arrayindexoutofboundsexception
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the correct ownership of the software
refactor color handling in Main . java and refactor version printing logic in VersionCommand . java to improve code readability and maintainability by
refactor token validation to use a hash instead of a stored token to improve security by ensuring tokens are validated against the correct salt
throw iib . eof . err instead of return false
add unit test for deleting a group member .
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol to streamline the codebase
updated ` compileTimeClasspathDeps ` and ` compileTimeClasspathPaths ` to ` SourcePath ` instead of ` BuildRule ` to
added a new file ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` to demonstrate the use of ` ConstructorArgsDemo ` and
[ geot - 5951 ] close templatefeatureiterators in directtemplatefeaturecollectionfactory to prevent memory leak
updated the assertion in WriteResponseHandler to allow a value of less than or equal to 2 * the replication factor to enhance the flexibility of the
added null check for indexNumber in ItemRowAdapter . java to avoid potential NullPointerException when accessing indexNumber
updated method names and parameters in Filter , MapView , and MapProxy classes to improve clarity and consistency to enhance code readability and
added a check to return early if the app width is less than 12 to optimize performance by avoiding unnecessary processing when the width is below 12
updated equality check for ` changeLog ` in ` ChangeLogParameters ` and added a new test for non - global property in ` ChangeLogParametersTest
changed the visibility of loggers from static to instance final to ensure that loggers cannot be modified after initialization
updated return statement to use getBasePlot ( false ) instead of p to ensure correct plot representation
camel - 16400 : camel - rest - server - allow to turn off initial upload directory creation
added a ` sendStatus200 ` parameter to ` ServerGenerator ` , ` HttpTransportOverFCGIConnection ` , and ` ServerFCGI
added a check for empty comments before processing to ensure that empty comments are handled correctly
added functionality to manage file type associations in BuckModule to enhance the application ' s ability to manage file types more effectively
replaced multiple ` ComposedToLong ` and ` ToLong ` with ` ComposedToInt ` and ` ComposedToInt ` in the ` ComposedUtil
added a new constant ` RTM _ OS _ ERROR ` and modified error message handling in ` TestUseRTMLockingOptionOnUnsupported
updated indentation and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code readability and maintainability
added a mock for ChannelTypeUID in AbstractModbusOSGiTest to facilitate unit testing of ChannelTypeUID functionality
fix infinite loop in polyglotexceptionimpl .
added context management in ShadowFontsContract to ensure proper cleanup of system resources to prevent memory leaks
added ` toMillis ` method to ` TimeGranularity ` and updated date handling logic in ` PinotDataSourceMaxTime ` to improve time
added null check for ` _ try . finally ( ) ` and ` _ try . continueFlow ( ) ` in ` ControlFlow . java
updated array comparison logic in Assert . java and ArrayEqualityAssertTest . java to improve error messaging for array equality checks to enhance clarity and
fix ( windowclicklogic ) : do n ' t return clicktype . unknown .
updated index calculation in MeshBuilder . java to correct indexing logic to ensure proper data processing
nifi - 7999 : remove unused variable in standardprocessscheduler
added support for resolving Java annotation processor parameters in KotlincToJarStepFactory to enhance the KotlincToJarStepFactory to
updated RESCROLL _ DELAY to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION 150 and refactored page snapping logic
added permission checks for shortcut host in Launcher and DeepShortcutManager classes to ensure shortcuts are refreshed only when necessary
added case handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support search navigation functionality
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names to en
added marker selection functionality in NearbyMapFragment to ensure bottom sheet is hidden when a marker is selected
added error handling for Throwable in FileSyncAdapter . java to improve robustness by logging stack traces to enhance error reporting for better debugging
refactor Docker image assertions in TestMemoryAwareness . java to use try - catch blocks for better error handling to improve reliability of tests
refactor FeedQueues to improve code readability and optimize feed retrieval logic based on application settings
check that defaultdrmsessionmanager be call on the correct thread
updated AndroidBinaryDescription and AndroidBinaryBuilder to use Locale . US for package type handling to ensure consistent behavior across different locales when converting package types
change the content type of the wfs3 request from text / xml to application / xml in baserequest and collectionstest
updated configuration file references from INSTANCE . confFile to INSTANCE . confFile to ensure consistency in configuration file usage across the application
updated sleep duration from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest . java to ensure proper termination of the
changed the data type of ` numCountDistinct ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java ` to
added multiple calls to ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to throw ` HeadlessException ( ) `
update condition in ExoflameFurnaceHandler to include world matching to ensure furnace is only processed if it matches the current recipe
add a move thread count parameter to the default solver
fix : do n ' t select wrong resource when search with revinclude
added a new test class ` Issue582Test ` to test the functionality of the ` MapDB ` implementation to ensure that the ` Map
[ native ] fix decimal overflow test
refactor LoadingCache class to improve code readability and maintainability
added a test rule " avoidNonConstructorMethodsWithClassName " to the rules list to exclude non - constructor methods with class names to ensure proper handling of
danielwagnerhall : added exception handling for stale element reference
refactor ` ViewExistsPrecondition ` and ` JdbcDatabaseSnapshotGenerator ` to improve error handling for view existence checks to enhance clarity
refactor DOMUtil class to improve code readability and maintainability
added translation constants and a method to log matrix values in TaskViewUtils and Utilities classes to improve animation logging for better debugging and tracking of matrix transformations
disable fixed rotation transformation by default
added a ` walk ` method to ` TempFSTTermsReader ` and modified the handling of document frequency in ` TempTermOutputs ` to
added SolrQueryRequest parameter to multiple create method signatures across multiple classes to enhance query handling capabilities by integrating Solr query requests
added checks for null content and announcement validUntil in SingleTableMySQLTriggerTest . java to ensure proper handling of null content and announcement
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to improve clarity and consistency in comparator management
updated string concatenation syntax in PhoenixQueryBuilderTest . java to improve readability and consistency to enhance code clarity and maintainability
added Spark initialization to RequesterTest . java to ensure Spark is fully initialized before proceeding
added methods to manage and retrieve total storage pool and fees in DynamicPropertiesStore . java to enhance storage management functionality in the application
added support for streaming assets from a specified source directory in AssetsController and AssetsControllerTest to enhance asset management by allowing users to
fix mapmarkmanager to use getmapmarkkey ( ) instead of getmapmarkkey ( )
added a TokenRewriteStream parameter to the getDefaultValue method and updated related logic in BaseSemanticAnalyzer and DDLSemanticAnalyzer classes to enhance token
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavaCompiler ` , and ` JavacProcessingEnvironment ` to simplify
updated file path handling in JBrowserManager to use a fullPath variable for clarity to improve readability and maintainability of the code
added a check for " AppVersion " in the IOSImplementation class and updated image file creation methods to use equals method for better compatibility to ensure
updated the logging statement in SomfyTahomaBridgeHandler . java to use the device ' s UID instead of the ID to ensure accurate logging of
disabled flaky test on github ci
refactor OpenWireConnectionTimeoutTest to use constant values for SSL keystore types to improve code readability and maintainability by avoiding repet
[ dynatrace ] log nan gauge value if it return a non - zero value
added a call to remove sessionIdToSessionInfo from the map to ensure that sessionIdToSessionInfo is cleared before replacement
added null host name setting for alert instances in HeartBeatHandler and modified log messages in AlertReceivedListener to ensure alert instances have a valid hostname to
refactor the flush logic in ChannelEndPoint to return true instead of false to simplify the return value to improve the clarity of the flush operation
[ drools - 7 ] move kmodule . xsd to kie - api / kmodule . xsd to kie - api
added a new method ` seekTo ` in ` ShadowMediaPlayerTest ` and modified ` pendingSeek ` handling in ` ShadowMediaPlayer ` to support seeking
rename createTask method to createThrowingTask across multiple executor classes to improve clarity and consistency in naming conventions
added conditional border settings for AQUA _ LAB in CloseButtonTabbedPane . java to improve button styling for AQUA _ L
added request methods to TSPTimeStampService and refactored test assertions in TestSignatureInfo to improve connection handling and enhance test clarity
jbrules - 2835 : fix xstreamutils to support wildcard type
added a check for non - generic types in diamond validation and created a new class DiamondRaw to ensure proper handling of diamond types and
[ hotfix ] [ table - planner ] fix typo in reloptutil
updated input validation for setting ID and value in Http2Settings . java to ensure only valid unsigned 16 - bit values are accepted
removed the MapInterfaceTest . java and Issue664Test . java files to clean up the codebase
added a check for disposed sessions in SessionsPoolTest to ensure that operations are not allowed on disposed sessions to prevent runtime errors
[ geot - 4071 ] geojsonwmsbuilder should close the root object to prevent memory leak
removed the setIndex method from PopupMenuButton to directly use the selectedIndex value from the selectedIndex variable to simplify the code and improve readability by
added conditional checks for manual unstashing in TaskbarStashController to ensure that manual unstashing only occurs when necessary to improve user experience by
( chore ) camel - jbang : remove unnecessary check for customid
modified the ` getEventMismatchMessage ` method to accept a boolean parameter to control whether to wait for events to improve flexibility in handling event mismatch messages
added a new class ` HeaderFixer ` that processes Java files to prepend a license header to ensure compliance with licensing requirements for source
added functionality to broadcast a loading complete notification when the first load is complete to improve user experience by notifying the launcher when a widget is fully loaded
deleted the SuperJumperAndroid . java file to remove unused code to streamline the project
updated the return value of ` isDistributed ( ) ` from ` true ` to ` isDistributed ( ) ` in ` SystemTableScan . java `
removed setter methods for KeyValuesProvider and ObservationConvention in Observation . java to streamline code by eliminating redundancy
fix remapped block be overriden with dummy air block . close # 2491
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use ` base ( long ) i * scale ` instead of `
added caching for data format retrieval in HSSFCellStyle to improve performance by avoiding repeated calls to getDataFormatString method
updated the username query in RemoteAuthenticationEndpointTests to filter users by username to ensure that only users with the specified username are retrieved
replace ` def . needsInput ( ) ` with ` def . finished ( ) ` in the ` def . needsInput ( ) ` check to ensure
added container info logging to Launcher . java to improve logging accuracy for launcher app exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
remove deadlocktest . java since it be no longer need
added null check for newInput in BugContentProvider . java and improved marker addition logic in BugGroup . java to ensure proper handling of
added a new menu item to open the browser in the browser to enhance user experience by allowing users to open the application in a browser to improve user
added a new error message for specified multiple times in ErrorMsg . java and improved formatting in SemanticAnalyzer . java to enhance error handling
removed duplicate entry listener assertions in BasicTest . java to improve code clarity and reduce redundancy
fix coordinatearray . reverse ( ) for empty coordinate array
updated the method call for setting open state in ToolbarPanel . java to ensure the correct state is set based on the isIsOpen ( ) method to
added a boolean variable ` first ` to track whether the test was successful or not
replaced direct call to enterOverviewMode ( ) with a call to showOverviewMode ( true ) to simplify the code by directly showing the overview mode
http : / / issues . apache . org / jira / browse / amq - 4894 - fix npe in networkroutetest
log4j2 - 1349 fixed int overflow in messagehandlerinterceptordefinition
refactor ` FloatSupplier ` initialization and suppress warnings in ` NestedArithmeticTest . java ` to improve code clarity and maintainability
updated component handling in HttpClientRequestImpl . java and HttpTest . java to improve buffer management and enhance test coverage for byte appending functionality
updated the formatting of the artifact string to improve readability and maintainability of the code
pdfbox - 4892 : remove unnecessary cast , a suggest by valerybokov
removed debug print statements from ReferenceUtil . java to clean up the code and improve readability
include query type name in visibility predicate ( # 2065 )
added support for HTTP JSON - RPC integration in CommonParameter and updated related servlets to enable dynamic port configuration based on configuration
added a check to ensure that the folder is an instance of DropTarget before removing it from the drag controller
refactor StubJarTest to streamline the creation of StubJar to improve code readability and maintainability by reducing duplication
updated feature strings in StartPageTopComponent . java to provide clearer guidance on hardware setup wizard and workflow management to enhance user guidance and
[ cassandra ] do n ' t schedule meteredflusher if cassandra be down
fix npe in onlinetestcase
changed returnAttributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure all users are included in authentication results
refactor idle timeout handling in HttpChannelState and add failure listener in HttpChannelTest to improve error handling to enhance responsiveness and ensure proper callback
updated CreateEndPoint to extend Invocable . NonBlocking instead of Runnable to improve resource handling by allowing non - blocking operations
updated TABLE _ HEADER _ SEPARATOR to support additional column names and added a new test for one - head without a body in TableBlockParser
updated return value from 32.0 f to 31.5 f in Camera . java to improve the quality of the camera functionality
added a preference for " startOnBootSetup " in GpsSettingsActivity . java and updated return statements in Utilities . java and GeneralLocationListener .
updated the client secret length from 128 to 512 to accommodate larger client credentials for improved security
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include null parameter handling to ensure proper messaging when null parameters are passed
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable tests due to race condition
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to use ` PluginManager ` instead of ` PinotFS
added locale - specific date formatting logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper date formatting based on the user ' s locale settings to
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual consistency of the application
refactor pingAtRegularIntervals method to improve synchronization to ensure thread safety when sending messages
[ type : refactor ] fix globalerrorhandler . error ( ) to use throwable . geterrormessage ( )
rename ` module ` to ` from ` in multiple files to improve clarity and consistency in variable naming
added exception handling for CmdLineException in PinotAdministrator . java to improve error logging for command - line exceptions
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and ` hashCode ( ) ` in ` Subject . java ` and
reformatted conditional statements in CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintainability
updated zoom levels in BasicMapViewer . java to set minimum and maximum zoom levels to 0 and 0 to ensure proper zoom behavior for map rendering
refactor admin user and group retrieval to use ImpersonationUtil for improved clarity to enhance code readability and maintainability by
updated permission checks to use ` sm . checkPermission ( ) ` instead of ` AccessController . checkPermission ( ) ` across multiple files to
added argument extraction functionality to DelegatedClientAuthenticationAction and updated related test cases to enhance service resolution and improve test coverage for argument extraction
make default _ group final to prevent npe
tilecache . clear ( ) now call destroy ( ) .
removed redundant calls to ` InfoLayoutHelper . addInfoRow ` and ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` to ` cleanFeedsWithoutSubscriptions ` for clarity to improve code readability and
updated authentication parameters in ImmutableAssertionTests to enhance test coverage by including authentication details
nifi - 7078 : use a temporary folder for test to avoid intermittent failure
theorem proving : improve conic five point evaluation
reformatted conditional statements in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( " unchecked " ) annotation to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked warnings during compilation
added native methods for creating images from arrays and lists in CImage . java to improve image handling capabilities and prevent null pointer exceptions
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure compatibility with the latest HBase API changes
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to clarify the purpose of the variable
( chore ) camel - plugin : remove unnecessary null check
make qualify name lookup linear instead of
added verification for location views in NinjaDefaultTest . java to ensure proper error handling for various error scenarios
renamed method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated padding calculations in ` DeviceProfile . java `
updated padding values in DetailFragment and modified listViewPositionOffset in ListFragment to improve layout consistency and ensure proper positioning of the list view in the
updated catch blocks and exception handling in ZkStateReader . java to ensure proper interruption handling and thread interruption management
added null check for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure robust handling of
server : do n ' t start static nat service for non - static nat network
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper visibility and state management of
added a call to ` mWorkspace . clearExtraEmptyScreen ( true ) ` in ` mWorkspace . clearExtraEmptyScreen ( true ) ` to
added fixedWidth functionality to BitmapFont to improve glyph positioning based on fixed width settings
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment . java `
added PreEvent and PostTransition methods to AbstractStateMachineFactory to enhance state management capabilities in the state machine interception process
[ hotfix ] [ doc ] fix typo in configdescriptionprovider
updated role creation in ` TestAuthorizationApiAuthorizer ` and modified HiveConf initialization in ` StorageBasedMetastoreTestBase ` to enhance role
added a boolean variable ` countSorted ` for counting facets in ` FacetComponent . java ` and updated conditional logic in ` TestDistributedSearch . java
updated property handling in CheckstyleReport . java to use a variable for overriding properties to improve code readability and maintainability by reducing method calls
added functionality to stop Jetty instances based on active slices to improve resource management and error handling during test execution
added functionality to display a file name in the FileActionsDialogFragment to enhance user experience by allowing dynamic file identification in the dialog
updated reorder direction checks in CellLayout . java to use a constant for invalid direction to improve code readability and maintainability
updated fields in InnerTransferRequest and AccountAPI to include currency and from values to enhance clarity and consistency in API endpoint structure
add jobexecutionservice # getexecutionidforjid ( long jobid ) to jobexecutionservice .
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide a
replaced specific imports with a wildcard import and added marker handling for identifiers to improve code readability and ensure proper handling of identifiers based on fully qualified types
added a dark color for action text in AuthenticatorActivity to improve visibility and aesthetics in the user interface
added ` com . speedment . field . ComparableField ` and refactored the ` find ` method across multiple classes to enhance
refactor method names from ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps ` for clarity to
renamed test methods for clarity and consistency to improve code readability and maintainability
added a client cancellation functionality to the SparkClientImpl and RpcServer classes to ensure child processes are properly terminated before attempting to connect back to ensure proper resource
added ` getImplicitPreCoercionValue ` method implementations in ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` , and
initialize ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure ` lastDisplayedUser ` has
added a ` findAll ` method to ` QueryDslMongoRepository ` and a corresponding test in ` QueryDslRepositoryTests ` to enhance
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions to enhance stability by
planner : fix bug in defaultplannerbenchmark # warmup ( ) ( # 189 )
added ` xread ` and ` xreadGroup ` methods to ` MultiKeyPipelineBase ` and ` MultiKeyBinaryRedisPipeline ` to
updated ` LinkedBufferInput ` and ` StreamInput ` classes to use ` nextAdvance ` and ` n ` parameters to improve clarity and consistency in
added a new ` WebSecurityCustomizer ` bean and updated ` CasWebSecurityConfigurerAdapter ` to utilize it to enhance
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoOp `
added a new method ` registerProviderInternal ` to ` ShadowContentResolver ` and refactored ` ContentProviderController ` to use it to
updated the version variable from Version to ClassFile . Version in AttributeReader constructor to ensure compatibility with the latest class file structure
http : / / issues . apache . org / jira / browse / amq - 4894 - add keepalive option to single connection
[ java ] make multicast sender flow supplier configurable .
do n ' t draw locus with no point in 3d
added concurrency support and improved error handling in ChannelEndPoint , HttpServerTestBase , and WebSocketConnectionD13 classes to enhance performance and robust
[ grid ] add selenium . screenshot . location configuration
replaced assertEquals statements with assertThat statements in multiple test files to improve readability and consistency in assertion syntax
trufflelanguage : remove deprecate contextreference method .
initialized ` e ` to null in ` StubberImpl . java ` and added a new test class ` UninstantiableThrowableTest .
added exception handling for non - ascendants in Actor . java and Group . java to improve error messaging for non - descendant actors to enhance
added location permission dialog functionality to LocationPickerActivity to enhance user experience by allowing location access through permission dialog
http : / / code . google . com / p / mybatis / issues / detail ? id = 552 : add counter to
added cookie specifications to the request configuration builder to ensure compliance with HTTP standards
simplified the intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio quality by using a non - clipping gain
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance the functionality of the ScrollingPanel
added a new configuration option ` SERVICE _ CREATE _ TIMEOUT ` to the ` KubernetesConfigOptions ` class to specify a timeout value for the service creation
added handling for different place descriptions in NearbyListFragment to improve user interface by displaying appropriate icons based on place type
added a null check for the package before processing to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java that contains a main method that prints the result of a method call to provide a way to print the result of
fix ( javadoc ) : fix nested brace in javadoc tag ( # 4479 )
[ java ] remove unused variable from archivetest . java .
updated EdgeDataTable to use edges and meta edges instead of edges to improve data handling by utilizing edges and meta edges instead of edges to enhance data
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code clarity and reduce unnecessary dependencies
updated logging level for invalid playback speed requests in VideoManager . java to improve clarity and traceability of playback speed requests
add roomremoved event when cluster be start
updated variable name from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to improve clarity and consistency in variable naming
added texture key settings in TextureHelper . java to enable mipmaps generation for texture processing
updated PythonDslProjectBuildFileParser and AbstractCell to use EventReportingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFile
[ j2cl ] add support for library normalization pass
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` GuavaOptionalConverterFactoryTest
[ hotfix ] [ runtime ] remove unnecessary check for freed ( ) in memorysegment
ambari - 20583 : add time zone support for console session ( dlysnichenko )
added Hbs and HbsTest classes for template handling in the Jooby framework to enable the use of Jooby ' s built
do n ' t show hint message if it ' s empty .
changed the iteration method from keySet ( ) to size iteration over the headerNameMap to ensure all measurements are processed correctly
add a test to ensure that the alert dialog appears before proceeding
added a check for distinct column indices in ReduceSinkDeDuplication . java to prevent unnecessary processing when no distinct column indices are specified
refactor MiscUtils to improve path handling and error reporting to enhance clarity and maintainability of file processing logic
regenerate client with updated copyright year ( # 4382 )
updated the artifact ID from " org . eclipse . jetty . websocket " to " jetty - websocket - client " in TestOS
updated return statement to return an unmodifiable map of attributes to ensure immutability of the attributes map
do n ' t repaint the header if the text change
replaced instances of ` new Double ( ) ` with ` new return value ( ) ` in multiple Java files to simplify code and improve readability
updated method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to
updated class name handling in HtmlJndiTreeReport . java to include a check for " javax . naming . Context " to ensure proper identification of
refactor database options creation to use a switch statement to improve readability and maintainability of the code
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual edge types
removed the FLAG _ SLIPPERY constant from StatusBarTouchController . java to simplify the code by eliminating unused variable
truffle : fix array dimension calculation for non - array type
added functionality to retrieve and set the Google Drive folder path in PreferenceHelper and GoogleDriveSettingsFragment to enhance user experience by allowing users to
ggb - 2118 fix for random selection in av
added @ Nullable annotation to multiple method signatures in Truth . java to enhance code clarity and prevent potential NullPointerExceptions
updated bitwise operations in ArrayUtil . java to improve clarity and correctness of array manipulation logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check for ` ctorCanBeInstrumented ` to ensure that
added a Multimap for waiting for anticompaction messages in StreamIn , StreamInManager , and StreamInitiateVerbHandler to track and manage
added a boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` to enable secure handling of
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the class
updated character handling in GrblUtils . java to use ' > ' instead of ' \ \ | ' and added a conditional check for override parts to
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables
added a condition to check if ` checkDrain ` has been called in ` AsyncFileImpl . java ` to ensure that ` checkDrain ` is called
updated LIGHTS _ NUM and LIGHT _ INTESITY values in HybridLightTest . java to increase LIGHT _ INTESITY and modified shader
replaced ` FakeProjectFilesystem ` with ` workspace . getFilesystem ( ) ` in multiple test files to simplify filesystem usage and improve code clarity
refactor ` loadRerunFile ` method to use ` PathWithLines ` instead of ` String ` for improved type safety to enhance
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
updated TEST _ DIRS array in PubRoot . java from @ NotNull to TODO 2022.1 to prepare for future development of the new test
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added a method to reset the prefix index in BasisLibrary and introduced a thread - local version of the prefix index to improve thread safety to enhance
added LogLevel annotation to TestDistributedStatsComponentCardinality . java to enable debug logging for HTTP connection issues
added multiple calls to throwIfImmutable ( ) in IntList . java to ensure immutability of the list to maintain thread safety
added @ NotNull annotation to method parameters in GrpcServerRunner , GrpcClientBuilder , and UnitTestIdleHelper to improve code clarity and
move graal : : workdir to graal : : workdir so it can be reuse
only invalidate function array if necessary
added platform - specific file handling in GenerateManifestStep . java to ensure compatibility with Windows file systems when generating manifests
change priority of findnullderef to high priority
added nullability annotations to ConfigDescriptionRegistry and ThingResource classes to enhance code clarity and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] remove unused import in masterjobcontext
pdfbox - 4892 : init stream to avoid npe , a suggest by valerybokov
refactor ManagerBase class to improve code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to All Apps from the
refactor FragmentActivity initialization to use Robolectric ' s activity lifecycle to improve test stability and ensure proper activity lifecycle management
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and updated related references to improve clarity and maintain consistency in naming conventions
renamed classes ABCase1 _ 1 , ABCase1 _ 2 , ABCase1 _ 3 , and ABCase7 _ 3 to TestAB
updated the parameter name from ' num ' to ' value ' and added a null check for the blackhole address in the saveEnergyPriceHistoryDone method
added a handler for simulation change events in OpenRocketViewer . java to ensure proper handling of simulation change events
added a new file ChangeDependencyGroupIdAndArtifactId . java to implement functionality for updating dependency coordinates in the Maven project
refactor directory handling in IndexingJob and SegmentChecker classes to improve code clarity and ensure input path validation
updated comparison condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure correct
added memoization for replacementPaths and pathToSourcePathMap in PreprocessorDelegate . java to improve performance by reducing redundant computations
rename ` JsonExamples ` to ` Examples ` and update package - info . java files to improve clarity and organization of the codebase
added debug logging statements in ViewExtractor . java to improve traceability and debugging of input and output stream operations
refactor methods in FindByLinkText class to improve code readability and maintainability
added a new Main class for Java oop entry point testing to facilitate testing of Java oop functionality
do n ' t throw exception when we fail to register a sip account
removed duplicate continue statements in NativeScanner . java to improve code clarity and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to better organize tests
replaced ` ImmutableSet . Builder < BuildRule > ` with ` Supplier < ImmutableList < ImmutableList < BuildRule > > ` for dependency resolution
replaced ` count ( ) ` with ` size ( ) ` for remoteContainsResults . size ( ) ` in ` DistBuildArtifactCacheImpl . java
added charset handling in ExtractingDocumentLoader to ensure metadata includes the correct character encoding from the content stream
updated SQL insert statement to allow null values for the ` id ` and ` username ` parameters to enhance flexibility and avoid potential null pointer exceptions
added a check to return early if the slot is - 1 in WindowListener . java to improve performance by avoiding unnecessary processing
add option to turn on / off transitive repository by default
removed the dependency on BackgroundJobManager in ContactsPreferenceActivity to streamline the code by eliminating unnecessary dependencies
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and libraries
added a null check before closing the selection object to prevent potential NullPointerException when closing the selection object
added a condition to break the loop if thisIndex equals matcher ' s length to improve performance by avoiding unnecessary iterations
updated the @ IntegrationTest annotation to include a dynamic port configuration to allow the test to run on a specific server port instead of a hardcoded one
added a new UDFReverse class to handle reverse operations in the Hive UDF framework
updated method calls from ` getContextPathEncoded ( ) ` to ` getContextContextPath ( ) ` in ` Dispatcher ` , ` Request ` ,
refactor Tracer class to improve code readability and maintainability
[ hotfix ] [ test ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
fix a test that have accidentally be check in with the conflict tag still in place in the import .
added synchronization to the buffer in StarTreeRecordStoreCircularBufferImpl to ensure thread safety during record store operations to prevent concurrent access issues
updated forecast parameters in OpenWeatherMapOneCallHandler from 0 to 60 , 000 , 000 , 000 , 000 , 000 , 000 , 000 to
updated timeout annotations in AbstractPageOperationTemplateTest . java and modified fetch time handling in AbstractPageOperationTemplate . java to improve test reliability
refactor RemoteTargetGluer and FloatingHeaderView to improve handling of remote target handles and add functionality for content animations to enhance user experience by
refactor ` splitAndMap ` to ` splitAndThenFlatMap ` and return ` Stream < Collection < FeatureWithLines > > `
add quartz , planks , glimmering , braming , and chiseled block to botania creative tab
updated assertions in TestRadioButtons . java to use assertEquals for clarity to improve readability and maintainability of the test code
added support for file sizes in RCFile to enhance flexibility in handling compressed file sizes
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability
added checks for null mxnet ndArrays in JnaUtils . java to ensure robustness by preventing operations on already closed mxnet ndArrays
[ hotfix ] fix checkstyle violation in blobserver
fixed false positive in unusedprivatemethod
renamed ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency to enhance code readability by using a more
added a test method ` testAutoStartup ` to the ` InboundChannelAdapterParserTests ` class to verify the auto - start functionality of the `
added ` getLevel ( ) ` method to ` Node ` , ` Quadtree ` , ` STRtreeNode ` , and ` STR
update version parsing logic to handle minor version number correctly
added a check to ensure tags are not empty before adding or removing tags in ItemRegistryImpl . java to avoid potential null pointer exceptions when tags are empty
added a ` parseDateTimeStringToEpochMillis ` method to ` DateTimePatternHandler ` and its usage in ` DateTimeFunctions ` to parse ` dateTimeString `
hhh - 17100 fix nullpointerexception in customtype . disassemble
updated Log4j2ConfiguratorServlet to enhance logging capabilities for better debugging
removed unnecessary initialization of HiveException and AuthorizationException to simplify code and improve readability
updated string handling in CGoCompileStep and added a new test for CxxPrebuiltDepBuiltWithWrappedCpp in GoBinaryIntegrationTest to improve
added @ Buildable annotation to customresource to mark it a buildable
removed the @ Override annotation from mmm Only . java to ensure proper method overriding and improve code clarity
added timeout configuration using a constant to improve code readability and maintainability by using a named constant
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _ pipeline "
simonstewart : add selenium server option to turn off trace
added @ Singleton annotation to ApplicationController to ensure that the controller is instantiated as a singleton
added OwnCloudAccount handling to retrieve the username from the OwnCloud account to ensure the username is retrieved correctly based on the display name of the
added imports for BatchStatus and BatchStatus in SimpleJobLauncherTests to enable proper handling of paused instances in job execution
added null check for cacheConfig before processing to avoid potential NullPointerExceptions when cacheConfig is null
kristianrosenvold : make dockersession public to allow reuse
do n ' t use ` ` java . lang . ' ' a the package name when solve type reference
pdfbox - 4892 : fix parsing of pdfs with pdfs that do n ' t have a dictionary
mahout - 1865 : fix test to pass on window
refactor HttpServerTestBase class to improve code readability and maintainability
refactor assertions in PortletApplicationMapTest for improved clarity and structure to enhance readability and maintainability of the test code
added null checks for inner bean lists in BeanTableSchemaTest and NestedBeanIgnoreNulls to ensure proper handling of null values in nested bean lists
fixed - spring boot starter do n ' t allow spring boot auto configuration for spring boot auto config
[ tregex ] fix indexoutofboundsexception when convert indicator to double
added new methods ` execInContainerWithUser ` and ` execInContainerWithUserWithUser ` to ` ContainerState ` and ` Exec
updated the condition for interestedInByteMessages and interestedInTextMessages in NettyWebSocket . java to include both WebSocketByteMessages and WebSocketTextListener to
[ semanticgraph ] add test for negated attribute
added a broadcast to clear the pull - read notification in HomeFragment to enhance user experience by preventing unwanted pull - up notifications
removed conditional logic for initializing ` isPreGingerbread ` in ` TouchImageView . java ` to streamline the initialization of ` overScroller ` to
add default profile validation support to baseDstu21config
camel - 16400 : do n ' t start camel context if it be already start
added FloatingActionButton functionality to manage the main FAB and main FAB menu in ShareActivity . java to enhance user interaction by allowing
added support for inline formatting in ToDateTokenizer and updated related tests to enhance date parsing capabilities and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java for consistency to improve clarity and accuracy of
added a check for server state before binding operations service connection to ensure operations service is only bound when the server is checked to avoid binding errors
updated method calls from ` getBeginLine ( ) ` to ` getBeginLine ( ) ` in ` Position . java ` to ensure correct line number
added waitFor ( ) methods to CxxPreprocessAndCompileStep and ManagedThread classes to ensure proper synchronization during processing and error handling
added a boolean field ` requireAllRepositorySources ` in ` PrincipalAttributesProperties ` and implemented the ` mergePersonAttributes ` method in `
increase timeout for mapstore eviction to 2 minute
added support for enabled SSL protocols in NettyWebServer , ServerBasicConfig , and SocketConfiguration classes to enhance security by allowing configuration of
replaced ` AtomicBoolean ` with ` AtomicReference ` for managing ` set ` in ` SetOnce . java ` and added a new ` Wrapper `
updated the return statement in QueryDslMongoRepository to handle null property and added a test for empty path expression in SpringDataMongodbSerializerUnit
updated assertions in RoundRectBorderTest to reflect changes in border behavior to improve clarity and accuracy of tests to ensure correct behavior of round rectangle borders
added a check for empty cluster configuration and improved error handling in BftAcceptanceTestParameterization and BftBlockRewardPaymentAcceptance
simonstewart : remove unnecessary sleep in confirmtest
updated CountDownLatch initialization and added a conditional check for negative sign values in PrecompiledContracts . java to ensure proper initialization of CountDownLatch and improve error logging
updated condition in ProcessInformationsPanel to check for non - Windows windows to ensure proper handling of window state to enhance user interface responsiveness
morecollector : add miss helper method for empty list
added initialization and null checks in BitmexStreamingExchange , BitmexStreamingMarketDataService , and BitmexStreamingManualExample classes to
added validation for latitude and longitude in GeoPointField and corresponding test cases to ensure valid geographical coordinates to prevent illegal argument
refactor OozieProxyImpersonator and WorkflowFilesService to use a new method for generating workflow file names to improve code clarity and
refactor ResponderId class to improve code readability and maintainability
updated the ` getTableDocument ` method to include a ` withDependents ` parameter to control the addition of dependent tables to enhance flexibility in handling
added a check for COUNTER _ OF _ CONSECUTIVE _ UPLOADS _ without _ COORDINATES in UploadActivity and
added caching functionality for profile data in ProfileResources . java to improve performance by reducing redundant profile retrieval
refactor identifier handling in JpaMetamodelEntityInformation to improve clarity and ensure proper property setting for nested entities
added index creation and verification tests in UpgradeIT . java and updated method names in ConnectionQueryServicesImpl . java and UpgradeUtil . java to
add option to register default exception mapper in dropwizard resource
added a new parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the behavior of the method to
updated nativeCreateNSWindow method to accept an owner parameter for window pointer management to enhance window pointer handling by associating it with the owner context to
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity and consistency in database schema
added a new ` STOCK ` tile type to the ` Tile ` class and updated the ` fireTileEvent ` method to include it to enhance
fixed - commandasyncservice . readasync ( ) method throw npe if redisson . getall ( ) method throw npe if redisson .
do n ' t log error message for complex generic signature
refactor back animation handling in LauncherBackAnimationController to use a dedicated animator instance to improve code clarity and maintainability by encapsulating
removed the ` final ` modifier from the ` _ initialPageNo ` variable and added a conditional check to ensure ` _ initialPageNo ` is immutable
fix crc calculation in jedisclustercrc16 ( # 2411 )
added comment parsing functionality in FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to handle comments in SQL change logs to
replaced direct instantiation of JarArchiver with a local variable to improve performance by avoiding unnecessary object creation
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by throwing a more specific exception
refactor conditional checks in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and ensure
added support for Buffer and Uint8Array in GwtGL20 . java to ensure proper handling of pixel data types in WebGL rendering context
updated test methods in OutputMemoryTest , PrintR , and VarDump classes to improve clarity and functionality to enhance test coverage for debug information handling
replaced ` UnmodifiableClassException ` with ` IllegalStateException ` for instrumenting classes within the mock ' s type hierarchy in ` InlineBytecodeGenerator . java
[ gr - 26711 ] add trace for class initialization .
[ amq - 7999 ] fix typo in basebrokerrequesthandler javadoc .
updated TopicRouteService to use Caffeine ' s LoadingCache and improved cache loading mechanism to enhance performance and reliability of topic
added a boolean parameter to the createDataSource method and modified connection pooling behavior to ensure data integrity during read - only operations
updated the regex pattern for invalid source target release in FindBuildToolFailures . java and added a fatal error for invalid target release in FailureLogAnalyzerTest
added a check for availability before creating a location intent in DetailFragment . java to ensure location is available before accessing it to avoid potential null pointer exceptions
added a null check for parameterContextDto to avoid potential NullPointerException when accessing inherited parameter contexts to enhance robustness by handling potential null values
refactor ClassLoader class to improve code readability and maintainability
added origin header handling in ProxyRequestHelper and corresponding tests in ProxyRequestHelperTests to ensure correct response headers are set for HTTP requests
added a new profile setting drawer item to GpsMainActivity to enhance user interface functionality for profile navigation
allow to turn off xml validation by default
danielwagnerhall : fixing firefox driver to work with javascript
added a maximum row limit check in IoTDBStatement . java to ensure that fetchSize does not exceed defined limits and improve error handling
refactor SqlStreamTerminator to use stream filtering for count optimization checks to improve code readability and maintainability
added mouse event handling for node selection in StandardVizEventManager to enhance user interaction by notifying listeners when a node is clicked
refactor memory setting logic into a separate method ` zeroBuffer ` to improve code readability and reduce redundancy
[ drools - 7 ] use memory . getxorgroup ( ) instead of instance variable .
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from the ` LCDUIImageMonochromeBitmapSource ` class to streamline
refactor SourcePathResolver to streamline path resolution logic to improve code readability and maintainability by reducing redundancy
fix a bug in xmlparserstu2 . encodeandparseresourcestring ( ) .
changed the access modifier of ` changeSchemeIfIsWebSocketUpgrade ` from private to static and modified the ` changeSchemeIfIsWebSocketUpgrade `
fix testng compilation failure on window
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
added imports for Lucene components in multiple Java files to enhance documentation clarity by including necessary Lucene components
added null check for the current element in ConcurrentLinkedStack and improved method names in ConcurrentLinkedStackTest to enhance robustness to prevent NullPointer
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes to
added a null check for mDirectories before accessing its items to avoid potential NullPointerException when mDirectories is null
updated gesture handling logic in RecentsView . java to check if overview state is enabled and first layout is disabled to improve user experience by preventing
added package - info . java files for various Lucene packages to improve package documentation and organization
added a method to set the visibility of the visible auto - leveler panel to improve user interface clarity by providing a descriptive message
added post - optimization callbacks to DirectUpdateHandler and UpdateHandler classes to enhance event listener management during Solr updates to improve performance by allowing registered listeners to
updated the initialization of the Deflater and Deflater classes to use a boolean parameter to improve compression handling and ensure proper initialization of the compressed array
added a check for user data in Shaderc . java to ensure user data is validated before processing
added a check for local meta store in RetryingMetaStoreClient to ensure retries are only attempted when the local meta store is active
[ hotfix ] [ log ] do n ' t log connection close exception on shutdown
refactor Subject class implementation to improve code readability and maintainability
make typemap thread - safe by default
updated color distance calculation in HSSFPalette . java and added a test for finding similar colors in TestHSSFPalette . java to
chore ( regen ) : update license year for generated file
danielwagnerhall : added unit test for element with numeric id
added flags parameter to the registerReceiver method across multiple classes to allow for more control over the receiver registration process
make ffmpeg test more reliable
replaced the usage of ` InputStream ` with ` OggInputStream ` and updated related methods in ` Ogg . java ` and ` OggInputStream .
added a new constant RESPONSE _ WAS _ NULL to the AssertionResult class to improve clarity and maintainability of error message handling
added a condition to check for both anomalyFailureCount and anomalyWarningCount in DetectionMigrationResource . java to ensure proper handling of scenarios where
refactor BaseActivity to use a dedicated showToast method for displaying toast messages to improve code readability and maintainability by centralizing toast message
updated the request creation in TracingFeignClient to include the requestTemplate ( ) parameter to enhance the request handling by incorporating the request
added name validation and referral handling in LDAPCertStore . java to ensure valid names and improve error handling for invalid names
refactor the retention logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click events in ` DroidSugarAndroidTestRunner ` to
[ hotfix ] [ test ] remove unused import
remove genericitemuiprovider from smarthome - ui - items ( # 3971 )
add setselected ( ) and getselectedobject ( ) method to make it easy to set the selected object
added @ Isolate annotation to FileSystemPool in MetaInfConfigurationTest . java to facilitate testing of static methods of FileSystemPool
added a bind address to the server connector to ensure the server connects to the correct address for HTTP communication
updated access token validity settings based on heart mode and grant types in DynamicClientRegistrationEndpoint . java to ensure compatibility with heart mode and
added a ` CloverInstrumentationFilter ` class and updated filtering logic in ` TestInterfaceAudienceAnnotations . java ` and ` SplitLogCounters . java `
added support for the Smartmi Evaporative Humidifier in MiIoDevices to enhance compatibility with smartmi Evaporative
fix mineprocess . plausibletobreak to account for mining duration
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve error handling for empty repository lists
updated the condition to include both missing and missing values in the equality check to ensure that the equality check correctly accounts for both missing and missing values
added Serializable interface to RuleAdministratorImpl to enable serialization support for RuleAdministrator objects
replaced List with Set for allowedOrigins and allowedTimingOriginPatterns to enhance flexibility in handling allowed origin patterns
updated file paths in BaseG3dHudTest . java and NewModelTest . java to reflect changes in file naming conventions
added a check to ensure solidifiedPosition is non - negative before updating the numHashCache to prevent errors when solidifiedPosition is negative
hbase - 18748 fix nullpointerexception in coprocessor
added a method ` hasAccess ` to check for remote user access and updated error handling in ` HttpServer . java ` to improve access control to ensure
replaced the ` writeTo ` method with a new ` createStubClassBytes ` method in ` ClassMirror . java ` and ` StubJar .
added a TextView to display a string representation of the internal link in FileDetailSharingFragment to enhance user experience by providing context for sharing internal links
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent behavior across different locales
mondrian : fix npe in modelzootest . testmondrian
removed the hideInput method from AllAppsContainerView and LauncherAllAppsContainerView to streamline code by eliminating unused input handling logic
add test for in - memory event store
refactor directory path handling in BsdFileStore and BsdNativeDispatcher to improve directory retrieval and error management to enhance code clarity and maintain
add test case for issue # 1599
added a new parameter ` x ` and ` y ` and ` z ` to the ` spawn ` command in ` SpawnCommand . java ` to allow
replaced hardcoded content area dimensions with a constant MIN _ CONTENT _ DIMEN to improve code readability and maintainability by avoiding magic numbers
make hotspot crypto substitution test more robust
updated Directory initialization from newDirectory ( ) to newMockDirectory ( ) to ensure compatibility with Windows semantics
added plugin class names to m _ failedChecks in UpgradeCheckRegistry . java and modified addColumnsToUpgradeTable method in UpgradeCatalog280 . java to
refactor Environment class to improve code readability and maintainability
added LuceneTestCase . BadApple annotation to RecoveryAfterSoftCommitTest . java to document a known bug related to SOLR - 7421
added a check to ensure the home string does not end with " " or " " or " " or " " or " " or " " or
change flag from IGNORE _ HDMV _ DTS _ STREAMS to FLAG _ ENABLE _ HDMV _ DTS _ STREAMS in
updated import statements and modified resourceAccessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser to use CompositeResourceAccessor and FileSystemResourceAccessor to
added security property to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms for enhanced security compliance
updated ` CxxDeps . EMPTY ` to ` CxxDeps . of ( ) ` and replaced it with ` CxxDeps . of ( )
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` in ` StubJarTest .
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint logic to handle empty title and hint text to improve user experience by providing appropriate hints for folder names
added " uaa " parameter to the loadClientByClientId method calls in UaaResetPasswordServiceTests to enhance functionality by allowing the client to
changed access modifiers of methods from public to private to enhance encapsulation and restrict method visibility
updated string concatenation syntax in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to improve code readability and maintainability
refactor MimetypeIconUtil class to improve code readability and maintainability
rename ` supportsViewFor ` method to ` supportsViewsFor ` across multiple classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` to the ` UnwrapParenthesesTest ` class to verify the behavior of ` J . InstanceOf
added a built flag and a method to teleport the Location object to ensure that the Location object can be re - instantiated after use
replaced usage of ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint . java ` and
updated import statements and refactored statistics reporting to improve code organization and enhance statistics reporting functionality
renamed the annotation from ContainerAnnotation to ContainedBy to improve clarity regarding the purpose of the annotation ' s purpose
added an assertion to check that the getId ( ) method returns a non - null value in ObjectIdentityImpl . java to ensure that the getId ( )
refactor retweeter handling in setUpRevampedTweet method to improve clarity and maintainability of the code
added conditional logic to retrieve verified text based on the addon theme setting to enhance user experience by allowing dynamic text based on user theme settings
refactor AbucoinsDigest to remove instance variable and simplify constructor calls to improve code readability and maintainability
camel - 16400 : camel - mongodb - enable autowire on mongo connection to avoid reflection configuration .
added ` sourceIndex ` field and updated constructors in ` AttributeMapping ` , ` DataAccessMappingFeatureIterator ` , and ` NestedAttributeMapping
improve error handling for corrupted partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure security is enabled for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , and AbsTransport classes to improve code organization to enhance maintainability and readability
[ geos - 10641 ] escape email in geoserver home page
[ te ] enrich engine ' s reflections with the engine module ( # 5940 )
update join modeller to use the actual number of feature
improve error message when command string be empty
[ hotfix ] [ kafka ] reduce log level for single node kafka resume
replaced the constant ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPEED
updated IgnitionConfigurationHandler , MotorMountHandler , FlightConfigurationID , and IgnitionEvent classes to improve automatic handling and
tika - 2088 -- make sure ascii name length be between 0 and 55
ignore test that depend on jdk 1.7
refactor lock file creation to use a dedicated method to improve code readability and maintainability
updated sync interval settings from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " in shared preferences to align sync behavior with
added a condition to return null for FEDERATION _ USER in AuthenticationManager to ensure that FEDERATION _ USER is handled correctly during authentication
truffleobject : do n ' t throw runtimeexception for non - truffleobject parameter
( chore ) camel - jakarta : remove unused import
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 : logbackval
refactor Collection and Map classes to improve code organization and readability
removed unused import of Version in CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary key index and schema changes in MissingPrimaryKeyChangeGenerator . java to ensure proper schema management for database comparisons
added MetastoreException handling to the execute method and updated exception management in MsckOperation . java to improve error handling for partition name validation to ensure
[ hotfix ] [ connectors / kafka ] [ connectors / kafka ] do n ' t try to commit already commit transaction
[ issue # 5442 ] fix forwardmessagetodlqactivity to include receipthandle
added a ` services ` parameter to the ` DockerComposeContainer ` class and modified the ` runWithCompose ` method to accept a list of service names
use copyset to avoid concurrent modification
removed unused imports and simplified XML processing to improve code clarity and reduce unnecessary dependencies
updated conditional check from ` mAppsCustomizePagedView . DISABLE _ ALL _ APPS ` to ` mAppsCustomizeContent ` to ` mAppsCustomize
change the data types of energyReactiveVACSumConsumed and energyRealWACMinusAbsolute from int to double in MeterRealtimeBody
added a new file ` bug4150029 . java ` that implements a JApplet with a temporary directory for testing to address bug 4
added Spark configuration update handling to HiveConf and SparkClient classes to ensure proper resource management and prevent memory leaks when Spark configuration changes
added ` getLongPressIndicator ( ) ` methods to ` AppIcon ` , ` AppIconMenuItem ` , ` Launchable ` , and ` Workspace
[ geot - 5951 ] fix wkbwriter to handle empty polygon
refactor UnflavoredBuildTarget to use a builder pattern for building UnflavoredBuildTarget instances to improve code readability and maintainability
added a new file MultiplyByMax . java that tests integer multiplication with maximum values to implement a performance test for integer overflow scenarios
added a check to determine if the current file is a root file before enabling the drawer indicator to ensure the drawer indicator is only enabled when the current file
move wrong - placed test around and remove empty ` ` de ' ' directory in analysis
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify memory usage and improve performance by using a more efficient BitSet implementation
drools - 2021 : dmn - dmn - dmn - dmn - dmn - dmn - dmn - dmn -
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( DC . class ) ` in multiple test files
added a duration display to the console message to provide users with a time taken for file transmission
updated package access checking in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation during class loading
refactor readresponseresolver and quorumresponsehandler to be more generic
updated freeSize calculation in StoreDirect . java to adjust freeSize accordingly to ensure accurate size representation
do n ' t disable touch disable when there be only one touch
updated SslContextFactory initialization to use ` SslContextFactory . Server ( ) ` instead of ` SslContextFactory ( ) ` to improve
removed the PrivilegedExceptionAction class and simplified socket creation in PG _ Stream . java to improve code readability by eliminating unnecessary code
refactor InputTest class to improve code readability and maintainability
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` Runnable ` parameter and modified related animation finishing logic to
updated NearbyMapFragment to handle null current location markers to improve robustness by preventing potential NullPointerExceptions
updated client secret retrieval to use the client ' s ID instead of the client ' s ID to ensure the correct client details service to enhance security by
replaced XMLConfigBuilder with Configuration in SqlSourceBuilderTest . java to simplify XML configuration setup and improve test readability
http : / / issues . apache . org / jira / browse / amq - 4894 - fix amq - 4895
added unit tests for the SlidingGanttCategoryDataset class to ensure proper exception handling for key - related issues to improve test coverage and ensure
added null and empty checks for conditionDataList in ShenyuTrieRuleListener . java to improve code robustness by avoiding potential NullPointerExceptions
* lightcontrol : use world translation instead of spatial translation
updated the condition for hiding stack traces in StdErrLog . java to ensure proper handling of null stacks and improve code clarity
added context validation in HttpSessionEventPublisher to ensure that the application context is not null to avoid potential NullPointerExceptions during event publishing
removed syntax check for CREATE CQ statement to ensure compatibility with v0.14 syntax
[ hotfix ] [ doc ] fix typo in flinkio module doc
add a counter for custom simplification of node in canonicalizer
updated the method call to set fileIcon ' s file type icon to include a context parameter to ensure the correct context is used for icon rendering
updated indexOrConstraintName to use schema name instead of a hardcoded name to improve flexibility in handling schema names
added support for TIMESTAMP fields in BigQueryTableRowIterator and corresponding tests in BigQueryUtilTest to enhance data handling capabilities for TIMESTAMP
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and ` ViewGroupTest ` classes to enhance
pdfbox - 4892 : avoid unchecked cast , a suggest by valerybokov
updated import statements in IndexTool and MetaDataClient classes to ensure compatibility with the latest version of the PColumnFamily library
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and modified value retrieval in SpringBootDocBuildTemplate to enhance functionality to support
[ gr - 26709 ] only include jar resource in resource list .
updated CUDA _ R _ 16F , CUDA _ C _ 32F , and CUDA _ C _ 32U constants in cublas . java
refactor ResourceLoader to use FileFilter for loading resources to improve resource loading efficiency by filtering out layout directories before adding them to the view loader
fix redstone torch not work with simpleattachedmaterialdata
add support for VARBINARY type in RelToStageConverter
added import statement for DateHelper in NoteAdapter . java to utilize date formatting functionality in the application
updated backup handling in ` Backup . java ` and ` Captions . java ` to improve error messaging to provide clearer feedback on backup
mow - 161 make sure that the position be relative , not absolute
updated file handling in ShadowParcelFileDescriptor . java to simplify file deletion logic to improve code readability and maintainability
open - issue int - 1894
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the purpose of
added tests forXorNeutral and XorNode in IntegerEqualsCanonicalizerTest . java and modified related logic in IntegerEqualsNode . java to
added a static final type STRING _ ARRAY in TypeFactory . java to support the handling of String array types in type processing
refactor AllAppsContainerView and LauncherAllAppsContainerView to use a dedicated hideIme method to improve code readability and maintainability
fix network issue in blockstatecontainer . ( # 4892 )
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency to enhance test readability and maintainability
add optimization to get gl _ max _ texture _ size _ size ( ) .
[ java ] remove redundant call to trystoplogrecording .
added a check for ` isInTransform ` before initializing ` startPosn ` in ` SemanticAnalyzer . java ` to ensure ` startPosn ` is set to
added a method to skip the star tree in QueryContext to enhance query optimization by allowing users to choose whether to skip the star tree
added a boolean flag ` lockNearbyView ` and modified ` refreshView ` and ` setupPlaceList ` methods in ` NearbyActivity `
add a convenience method for transform map transformation
refactor EmeddedObjects and EmbeddedObjects files to improve code organization and readability
added a new field ` mLauncherWidgetSpanInfo ` and updated ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` to utilize
updated StageSelector and StageAction classes to implement StateChangeListener instead of ChangeListener to enhance state change handling by utilizing EventObject for better event management
added methods to retrieve calling PID and UID in ShadowBinder and implemented them in ShadowBinderTest to enhance the functionality of the ShadowBinder to
replaced ` @ AutoValue _ ExpectationFailure ` with ` @ Nullable ` for ` message ` and ` cause ` in ` ExpectationFailure ` and
bitcoinserializer : remove log for unsupported command
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added handling for HTML characters in CoreMarkdownNodeRenderer and updated Markdown rendering logic to correctly escape special characters in Markdown output to ensure proper rendering of markdown content
refactor password handling logic in SharePasswordDialogFragment to use a dedicated method for setting passwords to improve code readability and maintainability by consolidating
refactor mapping methods to use reflection for file channel operations to improve compatibility with different file channel implementations
changed method visibility from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to restrict access
added new keytab and default settings for Slider AM keytab in LlapOptionsProcessor . java to enhance testing capabilities by allowing dynamic configuration
updated the ` tearOutGraphViewContainer ` method to accept a JFrame parameter and added animation control for graph view transitions to enhance
added a new boolean field ` mHasLoaderCompletedOnce ` and implemented ` runAfterBindCompletes ` method in ` LauncherModel .
updated field names and logic in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator classes to improve code clarity
update validation report to include true / false for whole check
added a method to retrieve the provider name of a cipher and improved exception handling in RSAClientKeyExchange . java to enhance error reporting and
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
remove duplicate code in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public in DefaultMapScaleBar . java to allow access to BITMAP
remove @ ignore from covariantoverridetest
replaced ` Curly ` with ` Qtype ` for better clarity to improve code readability and maintainability by using a more descriptive
camel - 16400 : camel - core - optimize to load route definition from a xml file .
added space minimum and maximum settings for the X - axis in ScatterChart to improve layout spacing for better visual representation
updated string concatenation syntax in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added a ` shouldPreserveDataStateOnReapply ( ) ` method to ` SplitScreenSelectState ` and its implementations in ` RecentsView
added a check for the UTF8 property in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present before proceeding to avoid runtime
updated output handling in TestReproduceMessage . java and modified random value printing in LuceneTestCase . java to improve clarity of test output and ensure
added a new UI event for long - pressing an AllApps item to track user interactions with the AllApps item to enhance analytics for
added a null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure that no modifications are made when
only show sector land info if it ' s not null
[ hotfix ] [ table - common ] fix unchecked warning in compositetypeinfo
refactor Enum class to improve code readability and maintainability
updated ` buildNearbyRandom ` method to accept a ` boolean ` parameter for distribution parameters in ` NearbySelectionConfig ` and ` Near
remove temporarycache . removerservice . shutdown ( ) and use cachebuilder instead
do n ' t hide sql view in newlayerpage if it be already visible
initialize availability _ availability to UNAVAILABLE to ensure availability state is explicitly set to UNAVAILABLE
updated PBFT message processing to use BlockCapsule object directly to improve code clarity and maintainability by eliminating redundant
chore : update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.1 .
replaced ` _ freeSpaceReclaimDisabled ` with ` _ freeSpaceReclaimQ ` and added a new method ` freeSpaceReclaimQ `
changed KDC _ OPT _ PROXIABLE to static final and changed KDC _ OPT _ RENEWABLE _ OK to static final and
refactor JsonWriter initialization and reset writer to null to improve code clarity and ensure proper resource management
corrected the spelling of " mentions " and " mentionsQuery " to " mentions " in the ProfilePager . java file to ensure
rename paintBackground method to paintComponentBackground to improve clarity and consistency in method naming
added a method to retrieve the value of a constant from a class constant and a default value if it is not a FQN to ensure proper handling of
added logging for service initialization failure in KafkaService to improve error handling and diagnostics for service initialization failures
replaced ` Sets . newHashSet ( " build . prop " ) ` with ` ImmutableSet ( " usr / share / zoneinfo / tzdata "
http : / / issues . apache . org / jira / browse / amq - 2894 - add support for auto - create channel
added keywords handling in HTMLDocument . java and implemented a test for index keywords in TestDemo . java to enhance document indexing functionality and ensure correct output
updated SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android SDK version
added a conditional check before initializing _ addresses in MemcachedSessionDataMapFactory . java to ensure _ addresses is properly initialized before use
replaced ` CorrespondenceSubclassToFactoryCall ` with ` CorrespondenceSubclassToFactoryCall ` in ` CorrespondenceSubclassToFactoryCallTest
refactor methods in Builder class to improve code readability and maintainability
fix npe in isbntobibtexfetcher
increase keep - alive time to 10
added null check for the text input field before accessing cursor position to avoid potential NullPointerExceptions when the input field is not initialized
add support for simplified model in sentimentmodel .
added line trimming in SuffixURLFilter . java to ensure clean output formatting
added a check to return early if the player is in Godmode mode to improve performance by avoiding unnecessary processing
ggb - 195 remove unregistration of the wrappedpopup in checkbox creation
updated constructors in LinkedHashMapCache and LinkedHashMapCache to accept a boolean parameter for maximumSize to improve cache configuration flexibility
removed redundant line breaks in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and modified KeyIndexBuilder initialization in OrcRecordUpdater . java to
updated exception handling in DirectUpdateHandler2 to include Locale parameter to improve error reporting for document indexing errors
do n ' t create guard for non - exist node in canonicalizer
do n ' t reach reachable block outside of exception dispatch block
add a method to determine the classification disagreement in clouds to improve the accuracy of classification variability
replaced ` BuildTarget .of ( ) ` with ` BuildTarget . of ( ) ` in multiple files to simplify code and improve readability
refactor SqlRunner class to improve code readability and maintainability
changed ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and ` FileStorageUtils . java
replaced ` knownApis ` with ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` RobolectricTestRunnerTest
use confidence progress indicator instead of progress indicator
updated HTTP header checks from " Cling / " to " UMS / " in RequestHandler . java and UPNPControl . java to align
fix a bug in blockindex . iterator ( ) that cause it to crash .
added support for different message view types in CrowdfundingChatAdapter to improve layout handling for different message views
replaced memEncodeUTF16 ( ) with memEncodeASCII ( ) in LinuxLibrary . java and MacOSXLibrary . java to ensure proper encoding of ASCII
theorem proving : improve semantic analysis
updated method signatures and variable types in TexturePacker . java for improved clarity and consistency to enhance code readability and maintainability by
refactor RefactorModule to use a new apply method for refactoring to improve code readability and maintainability by simplifying the refactoring process
added methods to retrieve child elements by their names to enhance functionality by allowing retrieval of child elements based on their names
added Content - Charset header to HttpSolrServer to ensure proper handling of character encoding in HTTP requests
added SystemUiControllerFlags to manage UI state updates to enhance functionality by allowing dynamic UI state updates based on system UI controllers
removed the clientService variable from IntrospectingTokenService to streamline the code by eliminating unnecessary dependencies
improve error message when create hive split fails
removed the ownerId field from NodeEntry . java to eliminate unused variable
cloudstack - 1771 : rename backup . backup . afertakingsnapshot to backup . backup . aftertakingsnapshot to be consistent with other
updated the merge method in TextFragment to include score assignment to ensure the score reflects the relevance of fragment merging
removed the private Digester variable from Md4PasswordEncoder to streamline the code by eliminating unused dependency
added a validation check for the maximum unimproved step count property to ensure it is non - negative to prevent illegal argument exceptions during execution
added a check to return early if no editors are currently open to improve performance by avoiding unnecessary processing when there are currently open editors
refactor BDDMockito to use Mockito ' s verify methods instead of returning them to improve code readability and maintainability by centralizing verify
replaced Thread . getContextClassLoader ( ) with PathScanner . class . getClassloader ( ) in PathScanner . java to ensure compatibility with the latest
updated the ` sayHi2 ` method to return an instance of ` CodeFirstPojoClientIntf ` and added a ` CompletableFuture < String > `
[ hotfix ] [ test ] fix split brain protection test
added null checks for the logout configuration in DefaultLoginPageConfigurer and ServerHttpSecurity classes to enhance robustness by preventing potential Null
[ giac ] do n ' t use degree ( ) in giac .
refactor DockerComposeContainer to use a map for log consumers and add a new test class DockerComposeLogConsumerTest to improve logging functionality and
updated the parameter type of the ` testMapping ` method in ` StandardJavaTypeMappingTest . java ` from ` ResultSetMapping ` to ` Object `
removed unused imports from AmbariMetaInfoTest . java to improve code clarity and reduce unnecessary dependencies
added a static method ` fromSupplier ` to create a ` ThrowingSupplier < T , E > ` that consumes a ` Supplier < T
replaced a break statement with a return statement in ConsoleActivity . java to ensure that the method returns a boolean value indicating success or failure
add support for post text body in vertxplatformhttpsupport
added platform - specific path handling methods to improve compatibility across different operating systems
added a null check for authorizationContext before processing parameters to avoid potential NullPointerExceptions when authorizationContext is not initialized
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to improve error handling by throwing
updated SDK version from " 8.1 . 0 " to " 4514284 " in SdkConfig . java and added stop method in Shadow
add transactionlogkey to make it easy to lookup transactionlogkey .
added support for SQL without profile configuration in JdbcEnvironmentProperties and JdbcEnvironmentRepository to enhance flexibility in SQL profile handling based on
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management to prevent potential memory leaks by ensuring the data is
fix compilation error in modloadingstage . java
updated date formatting in DateUtils to use the calendar parameter instead of the date to ensure correct date formatting based on the current time zone
improvement : no need to override superclass method , also do n ' t generate stacktraces ( not need for thread count
added a new protected variable ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction handling
updated the version of FastAsyncWorldEdit from P2 - V6 to 1.17 to incorporate the latest features and bug fixes available in
added null check for the input data file path before creating the output directory to avoid potential NullPointerExceptions when the path is null
added a new method ` calculateNormalVector ` to ` ObjUtils ` for calculating normal vectors to improve code readability and maintainability by encapsulating calculations
updated SQL query parameters in JdbcAuditService to include identity zone information to enhance event retrieval accuracy by using the correct identity zone context
refactor SpanCollector class to improve code readability and maintainability
added a condition to check if the current session is not null before evaluating the session information to ensure that only valid session information is processed
refactor TransactionIsolationLevel class to improve code readability and maintainability
corrected a typo in the method name from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
added thread name logging in TestSession . java to improve debugging by providing context on the thread being executed
refactor CookieManager to improve cookie handling logic to enhance performance and reliability of cookie management
replaced the manual creation of an ArrayList with a direct return statement to simplify the code and improve readability
added a new overview all apps touch controller to the RecentsUiFactory to enhance user interaction with the launcher interface
refactor ` scaleHotseatWithWorkspace ` to ` getHotseatScaleAndTranslation ` in ` LauncherState ` and ` WorkspaceState
added a condition to exclude JUnit rules from stack trace filtering in DefaultStackTraceCleaner . java and a corresponding test case in StackTraceFilterTest .
replaced ` BufferUtil . arrayOffset ( ) ` with ` BufferUtil . arrayArray ( ) ` in ` MappedResizeableBuffer .
added a BalanceListener instance to the walletService to manage balance events more effectively
updated color conversion logic in RealisticRenderer . java to ensure correct color representation based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java to avoid potential NullPointerException when httpClientResponse is null
fix gl200 protocol decoder ( fix # 388 )
updated playback event handling logic in FullDetailsActivity . java to improve accuracy of last playback events based on the last playback time
spanish xml tree reader : add support for elliptic node
added conditional logic to set " language " and " iso " to " Any " if the value of " dc " is empty to ensure proper handling of
updated the implementation of ` ReactiveLoadBalancerClientFilter ` to use ` isSecure ( ) ` for scheme overriding to ensure correct scheme is used
( chore ) camel - defaultmessagetore : avoid unnecessary duplication
changed the access modifier of fullFilePathFromClassName from final to static in NativeImageDebugInfoProvider . java to allow the fullFilePathFromClassName method to be
refactor ` Correspondence ` to use ` Correspondence . from ` for better readability to improve code clarity and reduce boilerplate
renamed ` isNonUSSupported ` to ` isNonENLangSupported ` across multiple files to clarify the purpose of the
no effective change - code cleanup
minecraftforge / fml . java : add miss tessellator for render block .
added a return statement in TxCacheDB . java to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . ws ` to ` jdk . internal . org
refactor FastDictionary class to improve code readability and maintainability
improve handling of nio connection close event . jm - 825
updated flight event types and constants in FlightEventsTest . java to improve clarity and maintainability of flight event tests
[ beam - 8470 ] move textsource and bytekey to vendor module
use newelement instead of target to avoid npe
fix instructorfeedbackresultspagedata to include courseid and displayablefsname
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator . java to enhance password validation by allowing longer input rules
simonstewart : add a new command to retrieve the last remote control log
[ hotfix ] [ test ] remove @ test annotation from proxyclassserializationtest
updated thumbnail scaling logic in DLNAMediaInfo . java to ensure correct thumbnail format is used based on thumbnail ratio
truffle : remove speculative guard movement phase from test suite
added a condition to check if the AUTHENTICATION _ MANAGER is an alias and not a bean definition in AuthenticationManagerBeanDefinitionParser to ensure proper
added handling for forwarded host and port in ForwardedRequestCustomizer to improve request authority management for forwarded requests
added a line to set the length of the StringBuilder to zero to ensure that the StringBuilder starts at a defined position
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclass access to these lists
updated OpenIDE - Module - Specification - Version from 1.54 to 1.55 across multiple files to reflect the latest versioning of Open
hbase - 25809 add support for set the default wrap size for netty tl ( # 4088 )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added unit tests for FixedLengthTokenizer to ensure correct handling of varying line length scenarios
updated protocol binding handling in OpenSamlAuthenticationRequestFactory and added tests in OpenSamlAuthenticationRequestFactoryTests to improve flexibility in configuring
refactor surface control handling in DepthController to use AttachedSurfaceControl to improve rendering performance by applying transactions when available
use 2.5 . x instead of main
updated access control actions from WRITE to CREATE in AccessController . java to align access control with the intended functionality for bulk load operations
updated unSeqMergeList initialization to use a subList of maxOpenFileNumInEachUnseqCompaction instead of a subList of maxOpenFileNumIn
camel - 16400 : added support for fileinputstream to camel - ftp component
added a ` build ( true ) ` method to ` DefaultShardManagerBuilder ` and modified the ` login ( ) ` method in ` DefaultShardManager
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java to
refactor response completion handling in HttpSender to check if the completion is marked before terminating the response to improve robustness by avoiding redundant response termination
added a check for the student ' s team before comparing response giver and giver to ensure that only users with the appropriate team can compare gars
added security checks for linked profile access in BMPImageReader . java to ensure proper handling of color profiles based on system properties
updated the ` setSimpleCuboid ` method calls in ` ClassicPlotManager . java ` and ` MainUtil . java ` to correct
added a message to inform the user about the status of the PMD status and run the action on a background thread to improve user experience by ensuring the
refactor gridPresenter initialization to use a dedicated method to improve code readability and maintainability
change return values from false to true in ContributionsListFragment . java to reflect successful completion of contributions processing
added a new test method to skip range queries in DistinctPrefixFilterIT and modified the filtering logic in BaseResultIterators to include a page filter
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation to ensure the file connection is accurately tracked and managed
added a check for metadata tables in HiveIcebergStorageHandler to ensure proper handling of metadata tables during file format validation
change cashdeposit form to allow select other currency
changed catch blocks from IOException to Throwable in WriteFlusher . java to handle a broader range of error scenarios
added a boolean variable ` mStartedEnterAnimation ` and modified the logic for notifying item range changes in ` IconRecentsView . java ` to
added a new field ` activeKeyId ` to the UaaConfiguration class to store the ID associated with the active account
refactor ` sendMail ` methods to use ` sendMailWithAttachments ` instead of ` sendEmail ` for improved clarity to en
changed the ` isActive ` variable to be volatile to ensure thread - safe access to the ` isActive ` variable across multiple threads
[ type : refactor ] remove unused isdesc ( ) method
do n ' t use string . tostring ( ) in case of jdk 1.5 +
added a check for the OwnCloud app name in the calendar expiration condition to ensure that the expiration occurs only when the app is running
hbase - 17406 allow kerberos to set the permission for the root directory
replaced ` httpServletRequest ` with ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange ` to ensure
refactor Instant class to improve code readability and maintainability
added a default state format property and updated state format handling in CollectionsHandler and AbstractFullDistribZkTestBase to improve flexibility in state format handling and
updated logging statements in CentralAuthenticationServiceImpl . java for clarity and consistency to improve readability and maintainability of logging output
pdfbox - 4892 : do n ' t throw illegalargumentexception , a suggest by valerybokov
updated conditional check for file extension in AbstractFileResourceSet . java to improve code readability and maintainability
update pluginparameterexpressionevaluator to align base directory to parent directory
[ beam - 8470 ] move protobuf coders to extension package
updated JpaQueryParsingToken to include a false parameter for query parsing to ensure correct handling of signed numeric literals in HQL queries
updated LaunchLug , LaunchLugHandler , RailGuideHandler , and RailGuideHandler to include a parent length parameter and adjusted
removed the nonce factory method from BitmexStreamingExchange to streamline the code by eliminating unused functionality
( chore ) camel - mail : reduce log verbosity
[ java ] : use default timer interval for test .
changed the initialization of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` FastClasspathScanner . java ` and ` ScanSpec
added focus handling in FullTextSearchPanel to improve user experience by ensuring the search field receives focus
fix typo in tlconnectionlogging
updated the expected double value from 0.00001 to 0.00001 in StatementTest . java to ensure the test correctly verifies the expected outcome of
updated the assertion in TestSolrConfigHandler to include the server URL in the failure message to improve clarity of test failure output for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` in ` CsrfWebFilterTests ` for mocking ` ServerHttpRequest ` to improve test reliability to
updated density filtering logic in FilterResourcesStep . java to improve accuracy of drawable filtering based on source and target density
added methods to retrieve UIID and element prefix for ButtonGroup components to improve clarity and maintainability of UIID handling
removed display metrics dependency from RecentsAnimationDeviceState . java to simplify the condition for rotation validation
added two new classes ` TestCloneArrayWithDifferentLengthConstantness ` and ` TestArrayCopyWithLargeObjectAlignment ` to test array cl
added LuceneTestCase . AwaitsFix annotation to ReplicationFactorTest . java to track a known issue related to SOLR - 6157 that
fixed - rscheduleservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for updating credential updates in FileDownloader and FileUploader to improve code readability and maintainability
added a null check for the ` scanner ` variable before closing it to avoid potential NullPointerException when ` scanner ` is null
updated method calls to retrieve values from ` getReceivedByte ( ) ` and ` getReceivedPackets ( ) ` to use ` getOrDefault ( ) `
added a nonce parameter to the TokenMvcMockTests to ensure the nonce value matches the expected claims for the token
refactor chart editor related classes for better organization and consistency to improve maintainability and readability of the chart editing functionality
added width and height settings for the layered pane in Form . java to ensure the layered pane does not layout into its parent container
added a method to calculate the vertical height of the StringSearchPanel in BrowserContentPane to ensure proper layout adjustment based on the owner ' s height
added a connection check before closing the database connection in SharedDatabaseLoginDialogView and SharedDatabaseLoginDialogView to ensure the database connection is only closed if
replaced DOCKER _ COMMAND with Platform . DOCKER _ COMMAND across multiple files to standardize the usage of the Docker command across the project
refactor initialization of parameters in TestIsartorValidationFromClasspath . java to check for null input files before processing to enhance robustness by
added a tertiary color parameter to the drawLeaveBehind method across multiple classes to allow customizable color settings for folder leave behind functionality
show an error dialog if the canary version do n ' t match the android studio version ( # 589 )
bug 11105 : if table name be null , log a warning and continue
added methods for enabling and disabling module persistence in StartArgs . java to improve flexibility in managing module persistence settings
updated argument handling in GeminiMarketDataService . java to improve clarity and correctness of argument validation logic
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain the insertion order of questions
add unit test base on user forum issue
updated excluded JSP and LDAP settings from " setup / setup - * " to " setup / setup - * " in AuthCheckFilter . java to
refactor posting of postedrunnables into a separate method to improve code readability and maintainability
updated the ` runCommand ` method signature in ` AbstractCommandRunner ` and ` AuditCommandRunner ` to accept a variable number of arguments to enhance
refactor XMLParser to use a variable for the number of bytes read before reading to improve code readability and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to verify behavior of ` horiz - page - overflow -
updated arrow positioning in DeepShortcutsContainer to improve visual alignment based on icon dimensions
do n ' t print stack trace in case of interrupted exception
updated thumbnail update logic to include a refresh view parameter to enhance user experience by allowing thumbnail updates based on the refresh state
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated EmailFormatSpecifier and HostnameFormatSpecifier to include an additional parameter for validation to enhance input validation and improve error handling for invalid hostname strings
updated method calls in multiple activity classes for consistency to improve code readability and maintainability
updated ` SizeBasedDocIdSetBlock ` and ` SizeBasedDocIdIterator ` to use ` _ maxDocId ` instead of `
added methods to prompt to open files with existing filenames and existing extensions to enhance file dialog functionality by allowing users to overwrite existing file names
updated sleep delay and page counts in AppsCustomizePagedView . java and refactored page counts calculation in AppsCustomizePagedView . java to
added functionality to transform coordinates based on active instances in FlightConfiguration . java to improve the accuracy of coordinate updates for components in the flight configuration
fix micrometer history test
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date time formatting across different locales
[ ds - 3058 ] hide hide metadata field in dspace object .
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig . Builder ` to ensure that the builder correctly handles ` null ` parameters
camel - 16400 : camel - spring - xml - dsl - add a dynamic recipient list to the camel - spring - xml - dsl
updated inline layout box handling and repaint logic in HoverListener and InlineLayoutBox classes to improve rendering performance and ensure proper repainting based on
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` and refactored service connection handling to improve service management and ensure proper binding of
